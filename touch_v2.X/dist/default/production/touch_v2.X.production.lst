

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Dec  3 05:14:11 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1,inline
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1,inline
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1,group=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1,group=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=4,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1
   149                           	psect	text124,global,reloc=4,class=CODE,delta=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1
   151                           	psect	text126,global,reloc=2,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1
   153                           	psect	text128,global,reloc=4,class=CODE,delta=1
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1
   155                           	psect	text130,global,reloc=2,class=CODE,delta=1
   156                           	psect	text131,global,reloc=4,class=CODE,delta=1
   157                           	psect	text132,global,reloc=4,class=CODE,delta=1
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1
   159                           	psect	text134,global,reloc=2,class=CODE,delta=1
   160                           	psect	text135,global,reloc=2,class=CODE,delta=1
   161                           	psect	text136,global,reloc=4,class=CODE,delta=1
   162                           	psect	text137,global,reloc=4,class=CODE,delta=1
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1
   164                           	psect	text139,global,reloc=4,class=CODE,delta=1
   165                           	psect	text140,global,reloc=2,class=CODE,delta=1
   166                           	psect	text141,global,reloc=4,class=CODE,delta=1
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1
   168                           	psect	text143,global,reloc=4,class=CODE,delta=1
   169                           	psect	text144,global,reloc=2,class=CODE,delta=1
   170                           	psect	text145,global,reloc=4,class=CODE,delta=1
   171                           	psect	text146,global,reloc=2,class=CODE,delta=1
   172                           	psect	text147,global,reloc=2,class=CODE,delta=1
   173                           	psect	text148,global,reloc=4,class=CODE,delta=1
   174                           	psect	text149,global,reloc=4,class=CODE,delta=1
   175                           	psect	text150,global,reloc=4,class=CODE,delta=1
   176                           	psect	text151,global,reloc=4,class=CODE,delta=1
   177                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   178                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   179                           	psect	text152,global,reloc=4,class=CODE,delta=1
   180                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   181                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   182  0000                     
   183                           ; Version 2.10
   184                           ; Generated 31/07/2019 GMT
   185                           ; 
   186                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   187                           ; All rights reserved.
   188                           ; 
   189                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   190                           ; 
   191                           ; Redistribution and use in source and binary forms, with or without modification, are
   192                           ; permitted provided that the following conditions are met:
   193                           ; 
   194                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   195                           ;        conditions and the following disclaimer.
   196                           ; 
   197                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   198                           ;        of conditions and the following disclaimer in the documentation and/or other
   199                           ;        materials provided with the distribution.
   200                           ; 
   201                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   202                           ;        software without specific prior written permission.
   203                           ; 
   204                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   205                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   206                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   207                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   208                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   209                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   210                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   211                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   212                           ; 
   213                           ; 
   214                           ; Code-generator required, PIC18F57K42 Definitions
   215                           ; 
   216                           ; SFR Addresses
   217  0000                     
   218 ;;_k	offset	0
   219 ;;_j	offset	1
   220 ;;_i	offset	2
   221 ;;_inp_index	offset	3
   222 ;;_mode	offset	4
   223 ;;_channel	offset=-1 (param)
   224 ;;_s	offset=-2 (param)
   225 ;;_cmd	offset=-1 (param)
   226 ;;_cmd	offset=-1 (param)
   227 ;;_data	offset=-1 (param)
   228 ;;__this	offset=-2 (param)
   229 ;;_h	offset=-1 (param)
   230 ;;_h	offset=-1 (param)
   231 ;;_i	offset=-1 (param)
   232 ;;_cmd	offset=-1 (param)
   233 ;;_i	offset	0
   234 ;;_chan	offset=-1 (param)
   235 ;;_to_what	offset=-2 (param)
   236 ;;_u	offset	0
   237 ;;_s	offset=-2 (param)
   238 ;;_index	offset=-1 (param)
   239 ;;_arg	offset	0
   240 ;;_exp	offset	4
   241 ;;_sign	offset=-1 (param)
   242 ;;_val	offset=-5 (param)
   243 ;;_h	offset=-1 (param)
   244 ;;_flipper	offset=-1 (param)
   245 ;;_f	offset	0
   246 ;;_ap	offset	6
   247 ;;_s	offset=-3 (param)
   248 ;;_fmt	offset=-5 (param)
   249 ;;_line	offset=-1 (param)
   250 ;;_vterm	offset=-2 (param)
   251 ;;_numMilliseconds	offset=-2 (param)
   252 ;;_vterm	offset=-1 (param)
   253 ;;_r	offset=-1 (param)
   254 ;;_c	offset=-2 (param)
   255 ;;_strPtr	offset=-4 (param)
   256 ;;_strPtr	offset=-1 (param)
   257 ;;_delay	offset=-4 (param)
   258 ;;_strPtr	offset=-2 (param)
   259 ;;__this	offset=-2 (param)
   260 ;;_clearBuffer	offset=-3 (param)
   261 ;;_s	offset	0
   262 ;;_k	offset	2
   263 ;;_dest	offset=-2 (param)
   264 ;;_c	offset=-4 (param)
   265 ;;_n	offset=-6 (param)
   266 ;;_ap	offset	0
   267 ;;_fmt	offset=-3 (param)
   268 ;;_cfmt	offset	0
   269 ;;_fp	offset=-2 (param)
   270 ;;_fmt	offset=-4 (param)
   271 ;;_ap	offset=-6 (param)
   272 ;;_vfpfcnvrt$4683	offset	0
   273 ;;_vfpfcnvrt$4689	offset	2
   274 ;;_vfpfcnvrt$4682	offset	4
   275 ;;_llu	offset	6
   276 ;;_ll	offset	14
   277 ;;_f	offset	22
   278 ;;_ct	offset	26
   279 ;;_cp	offset	29
   280 ;;_c	offset	31
   281 ;;_fp	offset=-2 (param)
   282 ;;_fmt	offset=-4 (param)
   283 ;;_ap	offset=-6 (param)
   284 ;;_xtoa$4668	offset	0
   285 ;;_xtoa$4667	offset	2
   286 ;;_n	offset	4
   287 ;;_c	offset	12
   288 ;;_i	offset	14
   289 ;;_w	offset	16
   290 ;;_p	offset	18
   291 ;;_fp	offset=-2 (param)
   292 ;;_d	offset=-10 (param)
   293 ;;_x	offset=-11 (param)
   294 ;;_toupper$5328	offset	0
   295 ;;_c	offset=-2 (param)
   296 ;;_c	offset=-2 (param)
   297 ;;_c	offset=-2 (param)
   298 ;;_r	offset	0
   299 ;;_l	offset	2
   300 ;;__l	offset=-2 (param)
   301 ;;__r	offset=-4 (param)
   302 ;;_n	offset=-6 (param)
   303 ;;_nuls	offset	0
   304 ;;_l	offset	7
   305 ;;_p	offset	9
   306 ;;_cp	offset	11
   307 ;;_w	offset	13
   308 ;;_i	offset	15
   309 ;;_fp	offset=-2 (param)
   310 ;;_s	offset=-4 (param)
   311 ;;_efgtoa$4647	offset	0
   312 ;;_efgtoa$4646	offset	2
   313 ;;_efgtoa$4645	offset	4
   314 ;;_efgtoa$4641	offset	6
   315 ;;_efgtoa$4637	offset	8
   316 ;;_efgtoa$4636	offset	10
   317 ;;_u	offset	12
   318 ;;_g	offset	16
   319 ;;_l	offset	20
   320 ;;_h	offset	24
   321 ;;_ou	offset	28
   322 ;;_n	offset	32
   323 ;;_e	offset	34
   324 ;;_i	offset	36
   325 ;;_w	offset	38
   326 ;;_p	offset	40
   327 ;;_sign	offset	42
   328 ;;_d	offset	44
   329 ;;_ne	offset	46
   330 ;;_m	offset	48
   331 ;;_pp	offset	50
   332 ;;_t	offset	52
   333 ;;_mode	offset	54
   334 ;;_nmode	offset	55
   335 ;;_fp	offset=-2 (param)
   336 ;;_f	offset=-6 (param)
   337 ;;_c	offset=-7 (param)
   338 ;;_tolower$5313	offset	0
   339 ;;_c	offset=-2 (param)
   340 ;;_c	offset=-2 (param)
   341 ;;_d	offset	0
   342 ;;_s	offset	2
   343 ;;_dest	offset=-2 (param)
   344 ;;_src	offset=-4 (param)
   345 ;;_u	offset	0
   346 ;;_m	offset	4
   347 ;;_e	offset	8
   348 ;;_x	offset=-4 (param)
   349 ;;_u	offset	0
   350 ;;_e	offset	4
   351 ;;_x	offset=-4 (param)
   352 ;;_exp1	offset	0
   353 ;;_sign1	offset	1
   354 ;;_f1	offset=-4 (param)
   355 ;;_f1	offset=-4 (param)
   356 ;;_ff1	offset=-4 (param)
   357 ;;_ff2	offset=-8 (param)
   358 ;;_ff1	offset=-4 (param)
   359 ;;_ff2	offset=-8 (param)
   360 ;;_grs	offset	0
   361 ;;_rem	offset	4
   362 ;;_new_exp	offset	8
   363 ;;_aexp	offset	10
   364 ;;_bexp	offset	11
   365 ;;_sign	offset	12
   366 ;;_b	offset=-4 (param)
   367 ;;_a	offset=-8 (param)
   368 ;;_sign	offset	0
   369 ;;_counter	offset	1
   370 ;;_dividend	offset=-2 (param)
   371 ;;_divisor	offset=-4 (param)
   372 ;;_quotient	offset	0
   373 ;;_sign	offset	2
   374 ;;_counter	offset	3
   375 ;;_dividend	offset=-2 (param)
   376 ;;_divisor	offset=-4 (param)
   377 ;;_dtoa$4613	offset	0
   378 ;;_n	offset	2
   379 ;;_i	offset	10
   380 ;;_s	offset	12
   381 ;;_w	offset	14
   382 ;;_p	offset	16
   383 ;;_fp	offset=-2 (param)
   384 ;;_d	offset=-10 (param)
   385 ;;_a	offset=-2 (param)
   386 ;;_sign	offset	0
   387 ;;_counter	offset	1
   388 ;;_dividend	offset=-8 (param)
   389 ;;_divisor	offset=-16 (param)
   390 ;;_quotient	offset	0
   391 ;;_sign	offset	8
   392 ;;_counter	offset	9
   393 ;;_dividend	offset=-8 (param)
   394 ;;_divisor	offset=-16 (param)
   395 ;;_w	offset	0
   396 ;;_fp	offset=-2 (param)
   397 ;;_c	offset=-3 (param)
   398 ;;_w	offset	0
   399 ;;_i	offset	2
   400 ;;_fp	offset=-2 (param)
   401 ;;_buf	offset=-4 (param)
   402 ;;_p	offset=-6 (param)
   403 ;;_a	offset	0
   404 ;;_s	offset=-2 (param)
   405 ;;_i	offset	0
   406 ;;_c	offset	2
   407 ;;_s	offset=-2 (param)
   408 ;;_fp	offset=-4 (param)
   409 ;;_c	offset=-2 (param)
   410 ;;_fp	offset=-4 (param)
   411 ;;_c	offset=-1 (param)
   412 ;;__this	offset=-2 (param)
   413 ;;_c	offset=-3 (param)
   414 ;;_atoi$5166	offset	0
   415 ;;_atoi$5164	offset	2
   416 ;;_atoi$5165	offset	4
   417 ;;_n	offset	5
   418 ;;_neg	offset	7
   419 ;;_s	offset=-2 (param)
   420 ;;_isspace$5204	offset	0
   421 ;;_c	offset=-2 (param)
   422 ;;_c	offset=-2 (param)
   423 ;;_vterm	offset=-1 (param)
   424 ;;_new_response_info	offset=-1 (param)
   425 ;;_new_response_info	offset=-1 (param)
   426 ;;_level	offset=-2 (param)
   427 ;;_dutyValue	offset=-2 (param)
   428 ;;_timer	offset=-1 (param)
   429 ;;_timer	offset=-1 (param)
   430 ;;_count	offset=-3 (param)
   431 ;;_h	offset=-1 (param)
   432 ;;_lp_speed	offset	0
   433 ;;_new	offset=-4 (param)
   434 ;;_bn	offset=-5 (param)
   435 ;;_slow	offset=-6 (param)
   436 ;;_b	offset=-4 (param)
   437 ;;_a	offset=-8 (param)
   438 ;;_grs	offset	0
   439 ;;_bexp	offset	1
   440 ;;_aexp	offset	2
   441 ;;_signs	offset	3
   442 ;;_b	offset=-4 (param)
   443 ;;_a	offset=-8 (param)
   444 ;;_prod	offset	0
   445 ;;_grs	offset	4
   446 ;;_temp	offset	8
   447 ;;_bexp	offset	10
   448 ;;_aexp	offset	11
   449 ;;_sign	offset	12
   450 ;;_b	offset=-4 (param)
   451 ;;_a	offset=-8 (param)
   452 ;;_InterruptHandler	offset=-3 (param)
   453 ;;_InterruptHandler	offset=-3 (param)
   454 ;;_InterruptHandler	offset=-3 (param)
   455 ;;_InterruptHandler	offset=-3 (param)
   456 ;;_InterruptHandler	offset=-3 (param)
   457 ;;_InterruptHandler	offset=-3 (param)
   458 ;;_state	offset	0
   459 ;;_InterruptHandler	offset=-3 (param)
   460 ;;_InterruptHandler	offset=-3 (param)
   461 ;;_InterruptHandler	offset=-3 (param)
   462 ;;_InterruptHandler	offset=-3 (param)
   463 ;;_i	offset	0
   464 ;;_sw_value	offset	1
   465 ;;_timerVal	offset=-2 (param)
   466 ;;_channel	offset=-1 (param)
   467 ;;_i	offset	0
   468                           
   469                           	psect	idataBANK0
   470  018832                     __pidataBANK0:
   471                           	opt callstack 0
   472                           
   473                           ;initializer for _R
   474  018832  0000               	dw	0
   475  018834  0000               	dw	0
   476  018836  0000               	dw	0
   477  018838  0000               	dw	0
   478  01883A  0000               	dw	0
   479  01883C  0000               	dw	0
   480  01883E  0000               	dw	0
   481  018840  0000               	dw	0
   482  018842  0000               	dw	0
   483  018844  0000               	dw	0
   484  018846  0000               	dw	0
   485  018848  0000               	dw	0
   486  01884A  0000               	dw	0
   487  01884C  0000               	dw	0
   488  01884E  0000               	dw	0
   489  018850  0000               	dw	0
   490  018852  0F67               	dw	3943
   491  018854  0F8F               	dw	3983
   492  018856  00                 	db	0
   493  018857  0000               	dw	0
   494  018859  00                 	db	0
   495                           
   496                           ;initializer for _H
   497  01885A  00                 	db	0
   498  01885B  00                 	db	0
   499  01885C  01                 	db	1
   500  01885D  00                 	db	0
   501  01885E  01                 	db	1
   502  01885F  00                 	db	0
   503  018860  00                 	db	0
   504                           
   505                           	psect	idataBANK1
   506  017890                     __pidataBANK1:
   507                           	opt callstack 0
   508                           
   509                           ;initializer for _C
   510  017890  0000               	dw	0
   511  017892  0000               	dw	0
   512  017894  0000               	dw	0
   513  017896  0000               	dw	0
   514  017898  0000               	dw	0
   515  01789A  0000               	dw	0
   516  01789C  0000               	dw	0
   517  01789E  0000               	dw	0
   518  0178A0  0000               	dw	0
   519  0178A2  0000               	dw	0
   520  0178A4  0000               	dw	0
   521  0178A6  0000               	dw	0
   522  0178A8  0000               	dw	0
   523  0178AA  0000               	dw	0
   524  0178AC  0000               	dw	0
   525  0178AE  0000               	dw	0
   526  0178B0  0000               	dw	0
   527  0178B2  0000               	dw	0
   528  0178B4  0000               	dw	0
   529  0178B6  0000               	dw	0
   530  0178B8  0000               	dw	0
   531  0178BA  0000               	dw	0
   532  0178BC  0000               	dw	0
   533  0178BE  0000               	dw	0
   534  0178C0  0000               	dw	0
   535  0178C2  0000               	dw	0
   536  0178C4  0000               	dw	0
   537  0178C6  0000               	dw	0
   538  0178C8  0000               	dw	0
   539  0178CA  0000               	dw	0
   540  0178CC  0000               	dw	0
   541  0178CE  0000               	dw	0
   542  0178D0  0000               	dw	0
   543  0178D2  0000               	dw	0
   544  0178D4  0000               	dw	0
   545  0178D6  0000               	dw	0
   546  0178D8  0000               	dw	0
   547  0178DA  0000               	dw	0
   548  0178DC  0000               	dw	0
   549  0178DE  0000               	dw	0
   550  0178E0  0000               	dw	0
   551  0178E2  0000               	dw	0
   552  0178E4  0000               	dw	0
   553  0178E6  0000               	dw	0
   554  0178E8  0000               	dw	0
   555  0178EA  0000               	dw	0
   556  0178EC  0000               	dw	0
   557  0178EE  0000               	dw	0
   558  0178F0  0000               	dw	0
   559  0178F2  0000               	dw	0
   560  0178F4  0000               	dw	0
   561  0178F6  0000               	dw	0
   562  0178F8  0000               	dw	0
   563  0178FA  0000               	dw	0
   564  0178FC  0000               	dw	0
   565  0178FE  0000               	dw	0
   566  017900  0000               	dw	0
   567  017902  0000               	dw	0
   568  017904  0000               	dw	0
   569  017906  0000               	dw	0
   570  017908  0000               	dw	0
   571  01790A  0000               	dw	0
   572  01790C  0000               	dw	0
   573  01790E  4361               	dw	17249
   574  017910  00                 	db	0
   575  017911  00                 	db	0
   576  017912  00                 	db	0
   577  017913  00                 	db	0
   578  017914  00                 	db	0
   579  017915  00                 	db	0
   580  017916  00                 	db	0
   581  017917  00                 	db	0
   582  017918  00                 	db	0
   583  017919  00                 	db	0
   584  01791A  00                 	db	0
   585  01791B  00                 	db	0
   586                           
   587                           ;initializer for stoa@F1166
   588  01791C  28                 	db	40
   589  01791D  6E                 	db	110
   590  01791E  75                 	db	117
   591  01791F  6C                 	db	108
   592  017920  6C                 	db	108
   593  017921  29                 	db	41
   594  017922  00                 	db	0
   595                           
   596                           ;initializer for _port_data
   597  017923  FF                 	db	255
   598  017924  00                 	db	0
   599  017925  FF                 	db	255
   600  017926  00                 	db	0
   601  017927  FF                 	db	255
   602  017928  00                 	db	0
   603  017929  FF                 	db	255
   604  01792A  00                 	db	0
   605  01792B  FF                 	db	255
   606  01792C  00                 	db	0
   607  01792D  FF                 	db	255
   608  01792E  00                 	db	0
   609  01792F  FF                 	db	255
   610  017930  00                 	db	0
   611  017931  FF                 	db	255
   612  017932  00                 	db	0
   613                           
   614                           	psect	idataBANK2
   615  017524                     __pidataBANK2:
   616                           	opt callstack 0
   617                           
   618                           ;initializer for _V
   619  017524  00                 	db	0
   620  017525  00                 	db	0
   621  017526  00                 	db	0
   622  017527  00                 	db	0
   623  017528  00                 	db	0
   624  017529  00                 	db	0
   625  01752A  00                 	db	0
   626  01752B  00                 	db	0
   627  01752C  00                 	db	0
   628  01752D  00                 	db	0
   629  01752E  00                 	db	0
   630  01752F  00                 	db	0
   631  017530  00                 	db	0
   632  017531  00                 	db	0
   633  017532  00                 	db	0
   634  017533  00                 	db	0
   635  017534  00                 	db	0
   636  017535  00                 	db	0
   637  017536  00                 	db	0
   638  017537  00                 	db	0
   639  017538  00                 	db	0
   640  017539  00                 	db	0
   641  01753A  00                 	db	0
   642  01753B  00                 	db	0
   643  01753C  00                 	db	0
   644  01753D  00                 	db	0
   645  01753E  00                 	db	0
   646  01753F  00                 	db	0
   647  017540  00                 	db	0
   648  017541  00                 	db	0
   649  017542  00                 	db	0
   650  017543  00                 	db	0
   651  017544  00                 	db	0
   652  017545  00                 	db	0
   653  017546  00                 	db	0
   654  017547  00                 	db	0
   655  017548  00                 	db	0
   656  017549  00                 	db	0
   657  01754A  00                 	db	0
   658  01754B  00                 	db	0
   659  01754C  00                 	db	0
   660  01754D  00                 	db	0
   661  01754E  00                 	db	0
   662  01754F  00                 	db	0
   663  017550  00                 	db	0
   664  017551  00                 	db	0
   665  017552  00                 	db	0
   666  017553  00                 	db	0
   667  017554  00                 	db	0
   668  017555  00                 	db	0
   669  017556  00                 	db	0
   670  017557  00                 	db	0
   671  017558  00                 	db	0
   672  017559  00                 	db	0
   673  01755A  00                 	db	0
   674  01755B  00                 	db	0
   675  01755C  00                 	db	0
   676  01755D  00                 	db	0
   677  01755E  00                 	db	0
   678  01755F  00                 	db	0
   679  017560  00                 	db	0
   680  017561  00                 	db	0
   681  017562  00                 	db	0
   682  017563  00                 	db	0
   683  017564  00                 	db	0
   684  017565  00                 	db	0
   685  017566  00                 	db	0
   686  017567  00                 	db	0
   687  017568  00                 	db	0
   688  017569  00                 	db	0
   689  01756A  00                 	db	0
   690  01756B  00                 	db	0
   691  01756C  00                 	db	0
   692  01756D  00                 	db	0
   693  01756E  00                 	db	0
   694  01756F  00                 	db	0
   695  017570  00                 	db	0
   696  017571  00                 	db	0
   697  017572  00                 	db	0
   698  017573  00                 	db	0
   699  017574  00                 	db	0
   700  017575  00                 	db	0
   701  017576  00                 	db	0
   702  017577  00                 	db	0
   703  017578  00                 	db	0
   704  017579  00                 	db	0
   705  01757A  00                 	db	0
   706  01757B  00                 	db	0
   707  01757C  00                 	db	0
   708  01757D  00                 	db	0
   709  01757E  00                 	db	0
   710  01757F  00                 	db	0
   711  017580  00                 	db	0
   712  017581  00                 	db	0
   713  017582  00                 	db	0
   714  017583  00                 	db	0
   715  017584  00                 	db	0
   716  017585  00                 	db	0
   717  017586  00                 	db	0
   718  017587  00                 	db	0
   719  017588  00                 	db	0
   720  017589  00                 	db	0
   721  01758A  00                 	db	0
   722  01758B  00                 	db	0
   723  01758C  00                 	db	0
   724  01758D  00                 	db	0
   725  01758E  00                 	db	0
   726  01758F  00                 	db	0
   727  017590  00                 	db	0
   728  017591  00                 	db	0
   729  017592  00                 	db	0
   730  017593  00                 	db	0
   731  017594  00                 	db	0
   732  017595  00                 	db	0
   733  017596  00                 	db	0
   734  017597  00                 	db	0
   735  017598  00                 	db	0
   736  017599  00                 	db	0
   737  01759A  00                 	db	0
   738  01759B  00                 	db	0
   739  01759C  00                 	db	0
   740  01759D  00                 	db	0
   741  01759E  00                 	db	0
   742  01759F  00                 	db	0
   743  0175A0  00                 	db	0
   744  0175A1  00                 	db	0
   745  0175A2  00                 	db	0
   746  0175A3  00                 	db	0
   747  0175A4  00                 	db	0
   748  0175A5  0000               	dw	0
   749  0175A7  0000               	dw	0
   750  0175A9  0000               	dw	0
   751  0175AB  0000               	dw	0
   752  0175AD  00                 	db	0
   753  0175AE  00                 	db	0
   754  0175AF  00                 	db	0
   755  0175B0  00                 	db	0
   756  0175B1  00                 	db	0
   757  0175B2  00                 	db	0
   758  0175B3  0000               	dw	0
   759  0175B5  0000               	dw	0
   760  0175B7  0000               	dw	0
   761  0175B9  0000               	dw	0
   762  0175BB  0000               	dw	0
   763  0175BD  0000               	dw	0
   764  0175BF  00                 	db	0
   765  0175C0  00                 	db	0
   766  0175C1  00                 	db	0
   767  0175C2  00                 	db	0
   768  0175C3  00                 	db	0
   769  0175C4  00                 	db	0
   770  0175C5  00                 	db	0
   771  0175C6  00                 	db	0
   772  0175C7  00                 	db	0
   773  0175C8  00                 	db	0
   774  0175C9  0000               	dw	0
   775  0175CB  0000               	dw	0
   776  0175CD  2D                 	db	45
   777  0175CE  00                 	db	0
   778  0175CF  00                 	db	0
   779  0175D0  0000               	dw	0
   780  0175D2  0000               	dw	0
   781  0175D4  0000               	dw	0
   782  0175D6  0000               	dw	0
   783  0175D8  0000               	dw	0
   784  0175DA  0000               	dw	0
   785  0175DC  0000               	dw	0
   786  0175DE  0000               	dw	0
   787                           
   788                           	psect	mediumconst
   789  00FDB0                     __pmediumconst:
   790                           	opt callstack 0
   791  00FDB0  00                 	db	0
   792  00FDB1                     _T:
   793                           	opt callstack 0
   794  00FDB1  63                 	db	99
   795  00FDB2  6F                 	db	111
   796  00FDB3  6D                 	db	109
   797  00FDB4  6D                 	db	109
   798  00FDB5  61                 	db	97
   799  00FDB6  6E                 	db	110
   800  00FDB7  64                 	db	100
   801  00FDB8  73                 	db	115
   802  00FDB9  20                 	db	32
   803  00FDBA  31                 	db	49
   804  00FDBB  00                 	db	0
   805  00FDBC  00                 	db	0
   806  00FDBD  00                 	db	0
   807  00FDBE  00                 	db	0
   808  00FDBF  00                 	db	0
   809  00FDC0  00                 	db	0
   810  00FDC1  00                 	db	0
   811  00FDC2  00                 	db	0
   812  00FDC3  64                 	db	100
   813  00FDC4  69                 	db	105
   814  00FDC5  73                 	db	115
   815  00FDC6  70                 	db	112
   816  00FDC7  6C                 	db	108
   817  00FDC8  61                 	db	97
   818  00FDC9  79                 	db	121
   819  00FDCA  73                 	db	115
   820  00FDCB  20                 	db	32
   821  00FDCC  31                 	db	49
   822  00FDCD  00                 	db	0
   823  00FDCE  00                 	db	0
   824  00FDCF  00                 	db	0
   825  00FDD0  00                 	db	0
   826  00FDD1  00                 	db	0
   827  00FDD2  00                 	db	0
   828  00FDD3  00                 	db	0
   829  00FDD4  00                 	db	0
   830  00FDD5  63                 	db	99
   831  00FDD6  6F                 	db	111
   832  00FDD7  6D                 	db	109
   833  00FDD8  6D                 	db	109
   834  00FDD9  61                 	db	97
   835  00FDDA  6E                 	db	110
   836  00FDDB  64                 	db	100
   837  00FDDC  73                 	db	115
   838  00FDDD  20                 	db	32
   839  00FDDE  32                 	db	50
   840  00FDDF  00                 	db	0
   841  00FDE0  00                 	db	0
   842  00FDE1  00                 	db	0
   843  00FDE2  00                 	db	0
   844  00FDE3  00                 	db	0
   845  00FDE4  00                 	db	0
   846  00FDE5  00                 	db	0
   847  00FDE6  00                 	db	0
   848  00FDE7  64                 	db	100
   849  00FDE8  69                 	db	105
   850  00FDE9  73                 	db	115
   851  00FDEA  70                 	db	112
   852  00FDEB  6C                 	db	108
   853  00FDEC  61                 	db	97
   854  00FDED  79                 	db	121
   855  00FDEE  73                 	db	115
   856  00FDEF  20                 	db	32
   857  00FDF0  32                 	db	50
   858  00FDF1  00                 	db	0
   859  00FDF2  00                 	db	0
   860  00FDF3  00                 	db	0
   861  00FDF4  00                 	db	0
   862  00FDF5  00                 	db	0
   863  00FDF6  00                 	db	0
   864  00FDF7  00                 	db	0
   865  00FDF8  00                 	db	0
   866  00FDF9  63                 	db	99
   867  00FDFA  6F                 	db	111
   868  00FDFB  6D                 	db	109
   869  00FDFC  6D                 	db	109
   870  00FDFD  61                 	db	97
   871  00FDFE  6E                 	db	110
   872  00FDFF  64                 	db	100
   873  00FE00  73                 	db	115
   874  00FE01  20                 	db	32
   875  00FE02  33                 	db	51
   876  00FE03  00                 	db	0
   877  00FE04  00                 	db	0
   878  00FE05  00                 	db	0
   879  00FE06  00                 	db	0
   880  00FE07  00                 	db	0
   881  00FE08  00                 	db	0
   882  00FE09  00                 	db	0
   883  00FE0A  00                 	db	0
   884  00FE0B  64                 	db	100
   885  00FE0C  69                 	db	105
   886  00FE0D  73                 	db	115
   887  00FE0E  70                 	db	112
   888  00FE0F  6C                 	db	108
   889  00FE10  61                 	db	97
   890  00FE11  79                 	db	121
   891  00FE12  73                 	db	115
   892  00FE13  20                 	db	32
   893  00FE14  33                 	db	51
   894  00FE15  00                 	db	0
   895  00FE16  00                 	db	0
   896  00FE17  00                 	db	0
   897  00FE18  00                 	db	0
   898  00FE19  00                 	db	0
   899  00FE1A  00                 	db	0
   900  00FE1B  00                 	db	0
   901  00FE1C  00                 	db	0
   902  00FE1D  63                 	db	99
   903  00FE1E  6F                 	db	111
   904  00FE1F  6D                 	db	109
   905  00FE20  6D                 	db	109
   906  00FE21  61                 	db	97
   907  00FE22  6E                 	db	110
   908  00FE23  64                 	db	100
   909  00FE24  73                 	db	115
   910  00FE25  20                 	db	32
   911  00FE26  34                 	db	52
   912  00FE27  00                 	db	0
   913  00FE28  00                 	db	0
   914  00FE29  00                 	db	0
   915  00FE2A  00                 	db	0
   916  00FE2B  00                 	db	0
   917  00FE2C  00                 	db	0
   918  00FE2D  00                 	db	0
   919  00FE2E  00                 	db	0
   920  00FE2F  64                 	db	100
   921  00FE30  69                 	db	105
   922  00FE31  73                 	db	115
   923  00FE32  70                 	db	112
   924  00FE33  6C                 	db	108
   925  00FE34  61                 	db	97
   926  00FE35  79                 	db	121
   927  00FE36  73                 	db	115
   928  00FE37  20                 	db	32
   929  00FE38  34                 	db	52
   930  00FE39  00                 	db	0
   931  00FE3A  00                 	db	0
   932  00FE3B  00                 	db	0
   933  00FE3C  00                 	db	0
   934  00FE3D  00                 	db	0
   935  00FE3E  00                 	db	0
   936  00FE3F  00                 	db	0
   937  00FE40  00                 	db	0
   938  00FE41                     __end_of_T:
   939                           	opt callstack 0
   940  0000                     _IVTADL	set	14493
   941  0000                     _IVTADH	set	14494
   942  0000                     _IVTADU	set	14495
   943  0000                     _PIR4bits	set	14756
   944  0000                     _PIE8bits	set	14744
   945  0000                     _PIR8bits	set	14760
   946  0000                     _SCANPR	set	14839
   947  0000                     _DMA2PR	set	14836
   948  0000                     _DMA1PR	set	14835
   949  0000                     _MAINPR	set	14834
   950  0000                     _ISRPR	set	14833
   951  0000                     _PIE2bits	set	14738
   952  0000                     _PIR2bits	set	14754
   953  0000                     _PIE9bits	set	14745
   954  0000                     _PIR9bits	set	14761
   955  0000                     _PIE6bits	set	14742
   956  0000                     _PIE3bits	set	14739
   957  0000                     _PMD7	set	14791
   958  0000                     _PMD6	set	14790
   959  0000                     _PMD5	set	14789
   960  0000                     _PMD4	set	14788
   961  0000                     _PMD3	set	14787
   962  0000                     _PMD2	set	14786
   963  0000                     _PMD1	set	14785
   964  0000                     _PMD0	set	14784
   965  0000                     _OSCTUNE	set	14814
   966  0000                     _OSCFRQ	set	14815
   967  0000                     _OSCEN	set	14813
   968  0000                     _OSCCON3	set	14811
   969  0000                     _OSCCON1	set	14809
   970  0000                     _IPR8bits	set	14728
   971  0000                     _IPR9bits	set	14729
   972  0000                     _IPR5bits	set	14725
   973  0000                     _IPR1bits	set	14721
   974  0000                     _IPR3bits	set	14723
   975  0000                     _IPR6bits	set	14726
   976  0000                     _IPR2bits	set	14722
   977  0000                     _PIE5bits	set	14741
   978  0000                     _PIE1bits	set	14737
   979  0000                     _PIR5bits	set	14757
   980  0000                     _PIR1bits	set	14753
   981  0000                     _PLLR	set	118496
   982  0000                     _SPI1SDIPPS	set	15071
   983  0000                     _U1RXPPS	set	15077
   984  0000                     _RC6PPS	set	14870
   985  0000                     _RC5PPS	set	14869
   986  0000                     _INT1PPS	set	15041
   987  0000                     _RD1PPS	set	14873
   988  0000                     _INT0PPS	set	15040
   989  0000                     _RC3PPS	set	14867
   990  0000                     _RB6PPS	set	14862
   991  0000                     _SPI1SCKPPS	set	15070
   992  0000                     _U2RXPPS	set	15080
   993  0000                     _SLRCONF	set	14995
   994  0000                     _SLRCONE	set	14979
   995  0000                     _SLRCOND	set	14963
   996  0000                     _SLRCONC	set	14947
   997  0000                     _SLRCONB	set	14931
   998  0000                     _SLRCONA	set	14915
   999  0000                     _ODCOND	set	14962
  1000  0000                     _ODCONC	set	14946
  1001  0000                     _ODCONB	set	14930
  1002  0000                     _ODCONA	set	14914
  1003  0000                     _ODCONF	set	14994
  1004  0000                     _ODCONE	set	14978
  1005  0000                     _WPUC	set	14945
  1006  0000                     _WPUA	set	14913
  1007  0000                     _WPUB	set	14929
  1008  0000                     _WPUE	set	14977
  1009  0000                     _WPUF	set	14993
  1010  0000                     _WPUD	set	14961
  1011  0000                     _ANSELA	set	14912
  1012  0000                     _ANSELF	set	14992
  1013  0000                     _ANSELE	set	14976
  1014  0000                     _ANSELB	set	14928
  1015  0000                     _ANSELC	set	14944
  1016  0000                     _ANSELD	set	14960
  1017  0000                     _DMA2SSA	set	15321
  1018  0000                     _DMA1SSA	set	15353
  1019  0000                     _DMA2DSZ	set	15310
  1020  0000                     _DMA2SSZ	set	15319
  1021  0000                     _DMA2DSA	set	15312
  1022  0000                     _DMA1DSZ	set	15342
  1023  0000                     _DMA1SSZ	set	15351
  1024  0000                     _DMA1DSA	set	15344
  1025  0000                     _DMA1CON0bits	set	15356
  1026  0000                     _DMA1CON1bits	set	15357
  1027  0000                     _DMA2CON0	set	15324
  1028  0000                     _DMA2AIRQ	set	15326
  1029  0000                     _DMA2SIRQ	set	15327
  1030  0000                     _DMA2CON1	set	15325
  1031  0000                     _DMA1CON0	set	15356
  1032  0000                     _DMA1AIRQ	set	15358
  1033  0000                     _DMA1SIRQ	set	15359
  1034  0000                     _DMA1CON1	set	15357
  1035  0000                     _CLKRCON	set	15589
  1036  0000                     _CLKRCLK	set	15590
  1037  0000                     _SPI1INTFbits	set	15642
  1038  0000                     _SPI1RXB	set	15632
  1039  0000                     _SPI1TXB	set	15633
  1040  0000                     _SPI1TCNTL	set	15634
  1041  0000                     _SPI1CON0	set	15636
  1042  0000                     _SPI1CLK	set	15644
  1043  0000                     _SPI1BAUD	set	15641
  1044  0000                     _SPI1CON2	set	15638
  1045  0000                     _SPI1CON1	set	15637
  1046  0000                     _U2RXB	set	15824
  1047  0000                     _U2TXB	set	15826
  1048  0000                     _U2ERRIE	set	15842
  1049  0000                     _U2ERRIR	set	15841
  1050  0000                     _U2UIR	set	15840
  1051  0000                     _U2FIFO	set	15839
  1052  0000                     _U2BRGH	set	15838
  1053  0000                     _U2BRGL	set	15837
  1054  0000                     _U2CON2	set	15836
  1055  0000                     _U2CON1	set	15835
  1056  0000                     _U2CON0	set	15834
  1057  0000                     _U2P3L	set	15832
  1058  0000                     _U2P2L	set	15830
  1059  0000                     _U2P1L	set	15828
  1060  0000                     _U1RXB	set	15848
  1061  0000                     _U1TXB	set	15850
  1062  0000                     _U1ERRIE	set	15866
  1063  0000                     _U1ERRIR	set	15865
  1064  0000                     _U1UIR	set	15864
  1065  0000                     _U1FIFO	set	15863
  1066  0000                     _U1BRGH	set	15862
  1067  0000                     _U1BRGL	set	15861
  1068  0000                     _U1CON2	set	15860
  1069  0000                     _U1CON1	set	15859
  1070  0000                     _U1CON0	set	15858
  1071  0000                     _U1P3H	set	15857
  1072  0000                     _U1P3L	set	15856
  1073  0000                     _U1P2H	set	15855
  1074  0000                     _U1P2L	set	15854
  1075  0000                     _U1P1H	set	15853
  1076  0000                     _U1P1L	set	15852
  1077  0000                     _FVRCON	set	16065
  1078  0000                     _ADFLTRL	set	16102
  1079  0000                     _ADFLTRH	set	16103
  1080  0000                     _ADCON0bits	set	16120
  1081  0000                     _ADCON0	set	16120
  1082  0000                     _ADCLK	set	16127
  1083  0000                     _ADACT	set	16126
  1084  0000                     _ADREF	set	16125
  1085  0000                     _ADSTAT	set	16124
  1086  0000                     _ADCON3	set	16123
  1087  0000                     _ADCON2	set	16122
  1088  0000                     _ADCON1	set	16121
  1089  0000                     _ADPREH	set	16119
  1090  0000                     _ADPREL	set	16118
  1091  0000                     _ADCAP	set	16117
  1092  0000                     _ADACQH	set	16116
  1093  0000                     _ADACQL	set	16115
  1094  0000                     _ADPCH	set	16113
  1095  0000                     _ADRPT	set	16108
  1096  0000                     _ADACCU	set	16106
  1097  0000                     _ADSTPTH	set	16101
  1098  0000                     _ADSTPTL	set	16100
  1099  0000                     _ADUTHH	set	16097
  1100  0000                     _ADUTHL	set	16096
  1101  0000                     _ADLTHH	set	16095
  1102  0000                     _ADLTHL	set	16094
  1103  0000                     _CCPTMRS1bits	set	16223
  1104  0000                     _PORTFbits	set	16335
  1105  0000                     _LATCbits	set	16316
  1106  0000                     _LATDbits	set	16317
  1107  0000                     _PORTBbits	set	16331
  1108  0000                     _T2CON	set	16300
  1109  0000                     _T2TMR	set	16298
  1110  0000                     _T2PR	set	16299
  1111  0000                     _T2RST	set	16303
  1112  0000                     _T2HLT	set	16301
  1113  0000                     _T2CLKCON	set	16302
  1114  0000                     _PWM8DCL	set	16224
  1115  0000                     _PWM8DCH	set	16225
  1116  0000                     _PWM8CON	set	16226
  1117  0000                     _LATEbits	set	16318
  1118  0000                     _T5CONbits	set	16282
  1119  0000                     _T5CON	set	16282
  1120  0000                     _TMR5L	set	16280
  1121  0000                     _TMR5H	set	16281
  1122  0000                     _T5CLK	set	16285
  1123  0000                     _T5GATE	set	16284
  1124  0000                     _T5GCON	set	16283
  1125  0000                     _T6CON	set	16276
  1126  0000                     _T6TMR	set	16274
  1127  0000                     _T6PR	set	16275
  1128  0000                     _T6RST	set	16279
  1129  0000                     _T6HLT	set	16277
  1130  0000                     _T6CLKCON	set	16278
  1131  0000                     _TRISD	set	16325
  1132  0000                     _TRISC	set	16324
  1133  0000                     _TRISB	set	16323
  1134  0000                     _TRISA	set	16322
  1135  0000                     _TRISF	set	16327
  1136  0000                     _TRISE	set	16326
  1137  0000                     _LATC	set	16316
  1138  0000                     _LATB	set	16315
  1139  0000                     _LATF	set	16319
  1140  0000                     _LATA	set	16314
  1141  0000                     _LATD	set	16317
  1142  0000                     _LATE	set	16318
  1143  0000                     _IVTLOCKbits	set	16340
  1144  0000                     _IVTLOCK	set	16340
  1145  0000                     _INTCON0bits	set	16338
  1146  0000                     _GIE	set	130711
  1147  00FE41                     
  1148                           ; BSR set to: 57
  1149  00FE41  20                 	db	32
  1150  00FE42  4D                 	db	77	;'M'
  1151  00FE43  65                 	db	101	;'e'
  1152  00FE44  73                 	db	115	;'s'
  1153  00FE45  67                 	db	103	;'g'
  1154  00FE46  20                 	db	32
  1155  00FE47  25                 	db	37
  1156  00FE48  64                 	db	100	;'d'
  1157  00FE49  20                 	db	32
  1158  00FE4A  53                 	db	83	;'S'
  1159  00FE4B  74                 	db	116	;'t'
  1160  00FE4C  61                 	db	97	;'a'
  1161  00FE4D  63                 	db	99	;'c'
  1162  00FE4E  6B                 	db	107	;'k'
  1163  00FE4F  20                 	db	32
  1164  00FE50  25                 	db	37
  1165  00FE51  64                 	db	100	;'d'
  1166  00FE52  20                 	db	32
  1167  00FE53  20                 	db	32
  1168  00FE54  20                 	db	32
  1169  00FE55  20                 	db	32
  1170  00FE56  20                 	db	32
  1171  00FE57  20                 	db	32
  1172  00FE58  00                 	db	0
  1173  00FE59                     STR_39:
  1174                           
  1175                           ; BSR set to: 57
  1176  00FE59  20                 	db	32
  1177  00FE5A  20                 	db	32
  1178  00FE5B  20                 	db	32
  1179  00FE5C  20                 	db	32
  1180  00FE5D  20                 	db	32
  1181  00FE5E  20                 	db	32
  1182  00FE5F  20                 	db	32
  1183  00FE60  20                 	db	32
  1184  00FE61  20                 	db	32
  1185  00FE62  20                 	db	32
  1186  00FE63  20                 	db	32
  1187  00FE64  20                 	db	32
  1188  00FE65  20                 	db	32
  1189  00FE66  20                 	db	32
  1190  00FE67  20                 	db	32
  1191  00FE68  20                 	db	32
  1192  00FE69  20                 	db	32
  1193  00FE6A  20                 	db	32
  1194  00FE6B  00                 	db	0
  1195  00FE6C                     STR_29:
  1196                           
  1197                           ; BSR set to: 57
  1198  00FE6C  48                 	db	72	;'H'
  1199  00FE6D  45                 	db	69	;'E'
  1200  00FE6E  4C                 	db	76	;'L'
  1201  00FE6F  50                 	db	80	;'P'
  1202  00FE70  20                 	db	32
  1203  00FE71  25                 	db	37
  1204  00FE72  73                 	db	115	;'s'
  1205  00FE73  20                 	db	32
  1206  00FE74  20                 	db	32
  1207  00FE75  20                 	db	32
  1208  00FE76  20                 	db	32
  1209  00FE77  20                 	db	32
  1210  00FE78  20                 	db	32
  1211  00FE79  20                 	db	32
  1212  00FE7A  20                 	db	32
  1213  00FE7B  20                 	db	32
  1214  00FE7C  20                 	db	32
  1215  00FE7D  20                 	db	32
  1216  00FE7E  00                 	db	0
  1217  00FE7F                     
  1218                           ; BSR set to: 57
  1219  00FE7F  44                 	db	68	;'D'
  1220  00FE80  49                 	db	73	;'I'
  1221  00FE81  53                 	db	83	;'S'
  1222  00FE82  50                 	db	80	;'P'
  1223  00FE83  4C                 	db	76	;'L'
  1224  00FE84  41                 	db	65	;'A'
  1225  00FE85  59                 	db	89	;'Y'
  1226  00FE86  20                 	db	32
  1227  00FE87  25                 	db	37
  1228  00FE88  73                 	db	115	;'s'
  1229  00FE89  20                 	db	32
  1230  00FE8A  20                 	db	32
  1231  00FE8B  20                 	db	32
  1232  00FE8C  20                 	db	32
  1233  00FE8D  20                 	db	32
  1234  00FE8E  20                 	db	32
  1235  00FE8F  20                 	db	32
  1236  00FE90  20                 	db	32
  1237  00FE91  00                 	db	0
  1238  00FE92                     STR_20:
  1239                           
  1240                           ; BSR set to: 57
  1241  00FE92  53                 	db	83	;'S'
  1242  00FE93  4F                 	db	79	;'O'
  1243  00FE94  43                 	db	67	;'C'
  1244  00FE95  20                 	db	32
  1245  00FE96  25                 	db	37
  1246  00FE97  64                 	db	100	;'d'
  1247  00FE98  20                 	db	32
  1248  00FE99  52                 	db	82	;'R'
  1249  00FE9A  55                 	db	85	;'U'
  1250  00FE9B  4E                 	db	78	;'N'
  1251  00FE9C  20                 	db	32
  1252  00FE9D  25                 	db	37
  1253  00FE9E  64                 	db	100	;'d'
  1254  00FE9F  20                 	db	32
  1255  00FEA0  20                 	db	32
  1256  00FEA1  20                 	db	32
  1257  00FEA2  20                 	db	32
  1258  00FEA3  20                 	db	32
  1259  00FEA4  00                 	db	0
  1260  00FEA5                     STR_19:
  1261                           
  1262                           ; BSR set to: 57
  1263  00FEA5  42                 	db	66	;'B'
  1264  00FEA6  41                 	db	65	;'A'
  1265  00FEA7  54                 	db	84	;'T'
  1266  00FEA8  20                 	db	32
  1267  00FEA9  41                 	db	65	;'A'
  1268  00FEAA  48                 	db	72	;'H'
  1269  00FEAB  20                 	db	32
  1270  00FEAC  20                 	db	32
  1271  00FEAD  20                 	db	32
  1272  00FEAE  25                 	db	37
  1273  00FEAF  33                 	db	51	;'3'
  1274  00FEB0  2E                 	db	46
  1275  00FEB1  32                 	db	50	;'2'
  1276  00FEB2  66                 	db	102	;'f'
  1277  00FEB3  20                 	db	32
  1278  00FEB4  20                 	db	32
  1279  00FEB5  20                 	db	32
  1280  00FEB6  20                 	db	32
  1281  00FEB7  00                 	db	0
  1282  00FEB8                     STR_12:
  1283                           
  1284                           ; BSR set to: 57
  1285  00FEB8  50                 	db	80	;'P'
  1286  00FEB9  56                 	db	86	;'V'
  1287  00FEBA  20                 	db	32
  1288  00FEBB  20                 	db	32
  1289  00FEBC  20                 	db	32
  1290  00FEBD  50                 	db	80	;'P'
  1291  00FEBE  57                 	db	87	;'W'
  1292  00FEBF  52                 	db	82	;'R'
  1293  00FEC0  20                 	db	32
  1294  00FEC1  25                 	db	37
  1295  00FEC2  33                 	db	51	;'3'
  1296  00FEC3  2E                 	db	46
  1297  00FEC4  32                 	db	50	;'2'
  1298  00FEC5  66                 	db	102	;'f'
  1299  00FEC6  20                 	db	32
  1300  00FEC7  20                 	db	32
  1301  00FEC8  20                 	db	32
  1302  00FEC9  20                 	db	32
  1303  00FECA  00                 	db	0
  1304  00FECB                     STR_18:
  1305                           
  1306                           ; BSR set to: 57
  1307  00FECB  42                 	db	66	;'B'
  1308  00FECC  41                 	db	65	;'A'
  1309  00FECD  54                 	db	84	;'T'
  1310  00FECE  20                 	db	32
  1311  00FECF  20                 	db	32
  1312  00FED0  50                 	db	80	;'P'
  1313  00FED1  57                 	db	87	;'W'
  1314  00FED2  52                 	db	82	;'R'
  1315  00FED3  20                 	db	32
  1316  00FED4  25                 	db	37
  1317  00FED5  33                 	db	51	;'3'
  1318  00FED6  2E                 	db	46
  1319  00FED7  32                 	db	50	;'2'
  1320  00FED8  66                 	db	102	;'f'
  1321  00FED9  20                 	db	32
  1322  00FEDA  20                 	db	32
  1323  00FEDB  20                 	db	32
  1324  00FEDC  20                 	db	32
  1325  00FEDD  00                 	db	0
  1326  00FEDE                     STR_14:
  1327                           
  1328                           ; BSR set to: 57
  1329  00FEDE  49                 	db	73	;'I'
  1330  00FEDF  4E                 	db	78	;'N'
  1331  00FEE0  56                 	db	86	;'V'
  1332  00FEE1  20                 	db	32
  1333  00FEE2  20                 	db	32
  1334  00FEE3  50                 	db	80	;'P'
  1335  00FEE4  57                 	db	87	;'W'
  1336  00FEE5  52                 	db	82	;'R'
  1337  00FEE6  20                 	db	32
  1338  00FEE7  25                 	db	37
  1339  00FEE8  33                 	db	51	;'3'
  1340  00FEE9  2E                 	db	46
  1341  00FEEA  32                 	db	50	;'2'
  1342  00FEEB  66                 	db	102	;'f'
  1343  00FEEC  20                 	db	32
  1344  00FEED  20                 	db	32
  1345  00FEEE  20                 	db	32
  1346  00FEEF  20                 	db	32
  1347  00FEF0  00                 	db	0
  1348  00FEF1                     STR_13:
  1349                           
  1350                           ; BSR set to: 57
  1351  00FEF1  4C                 	db	76	;'L'
  1352  00FEF2  4F                 	db	79	;'O'
  1353  00FEF3  41                 	db	65	;'A'
  1354  00FEF4  44                 	db	68	;'D'
  1355  00FEF5  20                 	db	32
  1356  00FEF6  50                 	db	80	;'P'
  1357  00FEF7  57                 	db	87	;'W'
  1358  00FEF8  52                 	db	82	;'R'
  1359  00FEF9  20                 	db	32
  1360  00FEFA  25                 	db	37
  1361  00FEFB  33                 	db	51	;'3'
  1362  00FEFC  2E                 	db	46
  1363  00FEFD  32                 	db	50	;'2'
  1364  00FEFE  66                 	db	102	;'f'
  1365  00FEFF  20                 	db	32
  1366  00FF00  20                 	db	32
  1367  00FF01  20                 	db	32
  1368  00FF02  20                 	db	32
  1369  00FF03  00                 	db	0
  1370  00FF04                     STR_16:
  1371                           
  1372                           ; BSR set to: 57
  1373  00FF04  42                 	db	66	;'B'
  1374  00FF05  56                 	db	86	;'V'
  1375  00FF06  20                 	db	32
  1376  00FF07  25                 	db	37
  1377  00FF08  32                 	db	50	;'2'
  1378  00FF09  2E                 	db	46
  1379  00FF0A  32                 	db	50	;'2'
  1380  00FF0B  66                 	db	102	;'f'
  1381  00FF0C  20                 	db	32
  1382  00FF0D  42                 	db	66	;'B'
  1383  00FF0E  41                 	db	65	;'A'
  1384  00FF0F  20                 	db	32
  1385  00FF10  25                 	db	37
  1386  00FF11  32                 	db	50	;'2'
  1387  00FF12  2E                 	db	46
  1388  00FF13  32                 	db	50	;'2'
  1389  00FF14  66                 	db	102	;'f'
  1390  00FF15  20                 	db	32
  1391  00FF16  00                 	db	0
  1392  00FF17                     STR_17:
  1393                           
  1394                           ; BSR set to: 57
  1395  00FF17  43                 	db	67	;'C'
  1396  00FF18  56                 	db	86	;'V'
  1397  00FF19  20                 	db	32
  1398  00FF1A  25                 	db	37
  1399  00FF1B  32                 	db	50	;'2'
  1400  00FF1C  2E                 	db	46
  1401  00FF1D  32                 	db	50	;'2'
  1402  00FF1E  66                 	db	102	;'f'
  1403  00FF1F  20                 	db	32
  1404  00FF20  4C                 	db	76	;'L'
  1405  00FF21  41                 	db	65	;'A'
  1406  00FF22  20                 	db	32
  1407  00FF23  25                 	db	37
  1408  00FF24  32                 	db	50	;'2'
  1409  00FF25  2E                 	db	46
  1410  00FF26  32                 	db	50	;'2'
  1411  00FF27  66                 	db	102	;'f'
  1412  00FF28  20                 	db	32
  1413  00FF29  00                 	db	0
  1414  00FF2A                     STR_15:
  1415                           
  1416                           ; BSR set to: 57
  1417  00FF2A  50                 	db	80	;'P'
  1418  00FF2B  56                 	db	86	;'V'
  1419  00FF2C  20                 	db	32
  1420  00FF2D  25                 	db	37
  1421  00FF2E  32                 	db	50	;'2'
  1422  00FF2F  2E                 	db	46
  1423  00FF30  32                 	db	50	;'2'
  1424  00FF31  66                 	db	102	;'f'
  1425  00FF32  20                 	db	32
  1426  00FF33  50                 	db	80	;'P'
  1427  00FF34  41                 	db	65	;'A'
  1428  00FF35  20                 	db	32
  1429  00FF36  25                 	db	37
  1430  00FF37  32                 	db	50	;'2'
  1431  00FF38  2E                 	db	46
  1432  00FF39  32                 	db	50	;'2'
  1433  00FF3A  66                 	db	102	;'f'
  1434  00FF3B  20                 	db	32
  1435  00FF3C  00                 	db	0
  1436  00FF3D                     STR_8:
  1437                           
  1438                           ; BSR set to: 57
  1439  00FF3D  20                 	db	32
  1440  00FF3E  56                 	db	86	;'V'
  1441  00FF3F  54                 	db	84	;'T'
  1442  00FF40  45                 	db	69	;'E'
  1443  00FF41  52                 	db	82	;'R'
  1444  00FF42  4D                 	db	77	;'M'
  1445  00FF43  20                 	db	32
  1446  00FF44  23                 	db	35
  1447  00FF45  32                 	db	50	;'2'
  1448  00FF46  20                 	db	32
  1449  00FF47  20                 	db	32
  1450  00FF48  20                 	db	32
  1451  00FF49  20                 	db	32
  1452  00FF4A  20                 	db	32
  1453  00FF4B  20                 	db	32
  1454  00FF4C  20                 	db	32
  1455  00FF4D  00                 	db	0
  1456  00FF4E                     STR_4:
  1457                           
  1458                           ; BSR set to: 57
  1459  00FF4E  20                 	db	32
  1460  00FF4F  4E                 	db	78	;'N'
  1461  00FF50  53                 	db	83	;'S'
  1462  00FF51  41                 	db	65	;'A'
  1463  00FF52  53                 	db	83	;'S'
  1464  00FF53  50                 	db	80	;'P'
  1465  00FF54  4F                 	db	79	;'O'
  1466  00FF55  4F                 	db	79	;'O'
  1467  00FF56  4B                 	db	75	;'K'
  1468  00FF57  20                 	db	32
  1469  00FF58  20                 	db	32
  1470  00FF59  20                 	db	32
  1471  00FF5A  20                 	db	32
  1472  00FF5B  20                 	db	32
  1473  00FF5C  20                 	db	32
  1474  00FF5D  20                 	db	32
  1475  00FF5E  00                 	db	0
  1476  00FF5F                     STR_1:
  1477                           
  1478                           ; BSR set to: 57
  1479  00FF5F  20                 	db	32
  1480  00FF60  4D                 	db	77	;'M'
  1481  00FF61  42                 	db	66	;'B'
  1482  00FF62  4D                 	db	77	;'M'
  1483  00FF63  43                 	db	67	;'C'
  1484  00FF64  20                 	db	32
  1485  00FF65  53                 	db	83	;'S'
  1486  00FF66  4F                 	db	79	;'O'
  1487  00FF67  4C                 	db	76	;'L'
  1488  00FF68  41                 	db	65	;'A'
  1489  00FF69  52                 	db	82	;'R'
  1490  00FF6A  4D                 	db	77	;'M'
  1491  00FF6B  4F                 	db	79	;'O'
  1492  00FF6C  4E                 	db	78	;'N'
  1493  00FF6D  20                 	db	32
  1494  00FF6E  20                 	db	32
  1495  00FF6F  00                 	db	0
  1496  00FF70                     STR_5:
  1497                           
  1498                           ; BSR set to: 57
  1499  00FF70  20                 	db	32
  1500  00FF71  53                 	db	83	;'S'
  1501  00FF72  45                 	db	69	;'E'
  1502  00FF73  51                 	db	81	;'Q'
  1503  00FF74  55                 	db	85	;'U'
  1504  00FF75  45                 	db	69	;'E'
  1505  00FF76  4E                 	db	78	;'N'
  1506  00FF77  43                 	db	67	;'C'
  1507  00FF78  45                 	db	69	;'E'
  1508  00FF79  20                 	db	32
  1509  00FF7A  54                 	db	84	;'T'
  1510  00FF7B  45                 	db	69	;'E'
  1511  00FF7C  53                 	db	83	;'S'
  1512  00FF7D  54                 	db	84	;'T'
  1513  00FF7E  20                 	db	32
  1514  00FF7F  20                 	db	32
  1515  00FF80  00                 	db	0
  1516  00FF81                     STR_11:
  1517                           
  1518                           ; BSR set to: 57
  1519  00FF81  25                 	db	37
  1520  00FF82  64                 	db	100	;'d'
  1521  00FF83  20                 	db	32
  1522  00FF84  25                 	db	37
  1523  00FF85  32                 	db	50	;'2'
  1524  00FF86  2E                 	db	46
  1525  00FF87  34                 	db	52	;'4'
  1526  00FF88  66                 	db	102	;'f'
  1527  00FF89  2C                 	db	44
  1528  00FF8A  20                 	db	32
  1529  00FF8B  25                 	db	37
  1530  00FF8C  64                 	db	100	;'d'
  1531  00FF8D  20                 	db	32
  1532  00FF8E  20                 	db	32
  1533  00FF8F  20                 	db	32
  1534  00FF90  23                 	db	35
  1535  00FF91  00                 	db	0
  1536  00FF92                     STR_9:
  1537                           
  1538                           ; BSR set to: 57
  1539  00FF92  25                 	db	37
  1540  00FF93  64                 	db	100	;'d'
  1541  00FF94  20                 	db	32
  1542  00FF95  25                 	db	37
  1543  00FF96  32                 	db	50	;'2'
  1544  00FF97  2E                 	db	46
  1545  00FF98  34                 	db	52	;'4'
  1546  00FF99  66                 	db	102	;'f'
  1547  00FF9A  20                 	db	32
  1548  00FF9B  20                 	db	32
  1549  00FF9C  20                 	db	32
  1550  00FF9D  25                 	db	37
  1551  00FF9E  64                 	db	100	;'d'
  1552  00FF9F  20                 	db	32
  1553  00FFA0  20                 	db	32
  1554  00FFA1  00                 	db	0
  1555  00FFA2                     STR_33:
  1556                           
  1557                           ; BSR set to: 57
  1558  00FFA2  76                 	db	118	;'v'
  1559  00FFA3  74                 	db	116	;'t'
  1560  00FFA4  65                 	db	101	;'e'
  1561  00FFA5  72                 	db	114	;'r'
  1562  00FFA6  6D                 	db	109	;'m'
  1563  00FFA7  20                 	db	32
  1564  00FFA8  25                 	db	37
  1565  00FFA9  78                 	db	120	;'x'
  1566  00FFAA  3A                 	db	58	;':'
  1567  00FFAB  25                 	db	37
  1568  00FFAC  78                 	db	120	;'x'
  1569  00FFAD  20                 	db	32
  1570  00FFAE  20                 	db	32
  1571  00FFAF  20                 	db	32
  1572  00FFB0  00                 	db	0
  1573  00FFB1                     STR_2:
  1574                           
  1575                           ; BSR set to: 57
  1576  00FFB1  20                 	db	32
  1577  00FFB2  56                 	db	86	;'V'
  1578  00FFB3  65                 	db	101	;'e'
  1579  00FFB4  72                 	db	114	;'r'
  1580  00FFB5  73                 	db	115	;'s'
  1581  00FFB6  69                 	db	105	;'i'
  1582  00FFB7  6F                 	db	111	;'o'
  1583  00FFB8  6E                 	db	110	;'n'
  1584  00FFB9  20                 	db	32
  1585  00FFBA  25                 	db	37
  1586  00FFBB  73                 	db	115	;'s'
  1587  00FFBC  20                 	db	32
  1588  00FFBD  20                 	db	32
  1589  00FFBE  20                 	db	32
  1590  00FFBF  00                 	db	0
  1591  00FFC0                     STR_27:
  1592                           
  1593                           ; BSR set to: 57
  1594  00FFC0  44                 	db	68	;'D'
  1595  00FFC1  65                 	db	101	;'e'
  1596  00FFC2  63                 	db	99	;'c'
  1597  00FFC3  20                 	db	32
  1598  00FFC4  20                 	db	32
  1599  00FFC5  32                 	db	50	;'2'
  1600  00FFC6  20                 	db	32
  1601  00FFC7  32                 	db	50	;'2'
  1602  00FFC8  30                 	db	48	;'0'
  1603  00FFC9  31                 	db	49	;'1'
  1604  00FFCA  39                 	db	57	;'9'
  1605  00FFCB  00                 	db	0
  1606  00FFCC                     STR_31:
  1607                           
  1608                           ; BSR set to: 57
  1609  00FFCC  25                 	db	37
  1610  00FFCD  73                 	db	115	;'s'
  1611  00FFCE  20                 	db	32
  1612  00FFCF  20                 	db	32
  1613  00FFD0  20                 	db	32
  1614  00FFD1  20                 	db	32
  1615  00FFD2  20                 	db	32
  1616  00FFD3  20                 	db	32
  1617  00FFD4  20                 	db	32
  1618  00FFD5  00                 	db	0
  1619  00FFD6                     STR_28:
  1620                           
  1621                           ; BSR set to: 57
  1622  00FFD6  32                 	db	50	;'2'
  1623  00FFD7  31                 	db	49	;'1'
  1624  00FFD8  3A                 	db	58	;':'
  1625  00FFD9  31                 	db	49	;'1'
  1626  00FFDA  34                 	db	52	;'4'
  1627  00FFDB  3A                 	db	58	;':'
  1628  00FFDC  30                 	db	48	;'0'
  1629  00FFDD  33                 	db	51	;'3'
  1630  00FFDE  00                 	db	0
  1631  00FFDF                     STR_3:
  1632                           
  1633                           ; BSR set to: 57
  1634  00FFDF  30                 	db	48	;'0'
  1635  00FFE0  2E                 	db	46
  1636  00FFE1  39                 	db	57	;'9'
  1637  00FFE2  39                 	db	57	;'9'
  1638  00FFE3  35                 	db	53	;'5'
  1639  00FFE4  00                 	db	0
  1640  00FFE5                     STR_46:
  1641                           
  1642                           ; BSR set to: 57
  1643  00FFE5  49                 	db	73	;'I'
  1644  00FFE6  4E                 	db	78	;'N'
  1645  00FFE7  46                 	db	70	;'F'
  1646  00FFE8  00                 	db	0
  1647  00FFE9                     STR_50:
  1648                           
  1649                           ; BSR set to: 57
  1650  00FFE9  4E                 	db	78	;'N'
  1651  00FFEA  41                 	db	65	;'A'
  1652  00FFEB  4E                 	db	78	;'N'
  1653  00FFEC  00                 	db	0
  1654  00FFED                     STR_47:
  1655                           
  1656                           ; BSR set to: 57
  1657  00FFED  69                 	db	105	;'i'
  1658  00FFEE  6E                 	db	110	;'n'
  1659  00FFEF  66                 	db	102	;'f'
  1660  00FFF0  00                 	db	0
  1661  00FFF1                     STR_51:
  1662                           
  1663                           ; BSR set to: 57
  1664  00FFF1  6E                 	db	110	;'n'
  1665  00FFF2  61                 	db	97	;'a'
  1666  00FFF3  6E                 	db	110	;'n'
  1667  00FFF4  00                 	db	0
  1668  00FFF5                     STR_54:
  1669                           
  1670                           ; BSR set to: 57
  1671  00FFF5  6C                 	db	108	;'l'
  1672  00FFF6  66                 	db	102	;'f'
  1673  00FFF7  00                 	db	0
  1674  00FFF8                     STR_25:
  1675                           
  1676                           ; BSR set to: 57
  1677  00FFF8  25                 	db	37
  1678  00FFF9  63                 	db	99	;'c'
  1679  00FFFA  00                 	db	0
  1680  00FFFB                     STR_24:
  1681                           
  1682                           ; BSR set to: 57
  1683  00FFFB  25                 	db	37
  1684  00FFFC  73                 	db	115	;'s'
  1685  00FFFD  00                 	db	0
  1686  0000                     
  1687                           ; #config settings
  1688  00FFFE  00                 	db	0	; dummy byte at the end
  1689  0000                     
  1690                           	psect	cinit
  1691  0171AE                     __pcinit:
  1692                           	opt callstack 0
  1693  0171AE                     start_initialization:
  1694                           	opt callstack 0
  1695  0171AE                     __initialization:
  1696                           	opt callstack 0
  1697                           
  1698                           ; Initialize objects allocated to BANK2 (188 bytes)
  1699                           ; load TBLPTR registers with __pidataBANK2
  1700  0171AE  0E24               	movlw	low __pidataBANK2
  1701  0171B0  6EF6               	movwf	tblptrl,c
  1702  0171B2  0E75               	movlw	high __pidataBANK2
  1703  0171B4  6EF7               	movwf	tblptrh,c
  1704  0171B6  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  1705  0171B8  6EF8               	movwf	tblptru,c
  1706  0171BA  EE00  F200         	lfsr	0,__pdataBANK2
  1707  0171BE  EE20 F0BC          	lfsr	2,188
  1708  0171C2                     copy_data0:
  1709  0171C2  0009               	tblrd		*+
  1710  0171C4  006F FFD7 FFEE     	movff	tablat,postinc0
  1711  0171CA  50DD               	movf	postdec2,w,c
  1712  0171CC  50D9               	movf	fsr2l,w,c
  1713  0171CE  E1F9               	bnz	copy_data0
  1714                           
  1715                           ; Initialize objects allocated to BANK1 (163 bytes)
  1716                           ; load TBLPTR registers with __pidataBANK1
  1717  0171D0  0E90               	movlw	low __pidataBANK1
  1718  0171D2  6EF6               	movwf	tblptrl,c
  1719  0171D4  0E78               	movlw	high __pidataBANK1
  1720  0171D6  6EF7               	movwf	tblptrh,c
  1721  0171D8  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1722  0171DA  6EF8               	movwf	tblptru,c
  1723  0171DC  EE00  F100         	lfsr	0,__pdataBANK1
  1724  0171E0  EE20 F0A3          	lfsr	2,163
  1725  0171E4                     copy_data1:
  1726  0171E4  0009               	tblrd		*+
  1727  0171E6  006F FFD7 FFEE     	movff	tablat,postinc0
  1728  0171EC  50DD               	movf	postdec2,w,c
  1729  0171EE  50D9               	movf	fsr2l,w,c
  1730  0171F0  E1F9               	bnz	copy_data1
  1731                           
  1732                           ; Initialize objects allocated to BANK0 (47 bytes)
  1733                           ; load TBLPTR registers with __pidataBANK0
  1734  0171F2  0E32               	movlw	low __pidataBANK0
  1735  0171F4  6EF6               	movwf	tblptrl,c
  1736  0171F6  0E88               	movlw	high __pidataBANK0
  1737  0171F8  6EF7               	movwf	tblptrh,c
  1738  0171FA  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1739  0171FC  6EF8               	movwf	tblptru,c
  1740  0171FE  EE00  F0C7         	lfsr	0,__pdataBANK0
  1741  017202  EE20 F02F          	lfsr	2,47
  1742  017206                     copy_data2:
  1743  017206  0009               	tblrd		*+
  1744  017208  006F FFD7 FFEE     	movff	tablat,postinc0
  1745  01720E  50DD               	movf	postdec2,w,c
  1746  017210  50D9               	movf	fsr2l,w,c
  1747  017212  E1F9               	bnz	copy_data2
  1748                           
  1749                           ; Clear objects allocated to BANK7 (255 bytes)
  1750  017214  EE01  F300         	lfsr	0,__pbssBANK7
  1751  017218  EE20 F0FF          	lfsr	2,255
  1752  01721C                     clear_0:
  1753  01721C  6AEE               	clrf	postinc0,c
  1754  01721E  50DD               	movf	postdec2,w,c
  1755  017220  50D9               	movf	fsr2l,w,c
  1756  017222  E1FC               	bnz	clear_0
  1757  017224  50DA               	movf	fsr2h,w,c
  1758  017226  E1FA               	bnz	clear_0
  1759                           
  1760                           ; Clear objects allocated to BANK6 (255 bytes)
  1761  017228  EE01  F200         	lfsr	0,__pbssBANK6
  1762  01722C  EE20 F0FF          	lfsr	2,255
  1763  017230                     clear_1:
  1764  017230  6AEE               	clrf	postinc0,c
  1765  017232  50DD               	movf	postdec2,w,c
  1766  017234  50D9               	movf	fsr2l,w,c
  1767  017236  E1FC               	bnz	clear_1
  1768  017238  50DA               	movf	fsr2h,w,c
  1769  01723A  E1FA               	bnz	clear_1
  1770                           
  1771                           ; Clear objects allocated to BANK5 (218 bytes)
  1772  01723C  EE01  F100         	lfsr	0,__pbssBANK5
  1773  017240  0EDA               	movlw	218
  1774  017242                     clear_2:
  1775  017242  6AEE               	clrf	postinc0,c
  1776  017244  06E8               	decf	wreg,f,c
  1777  017246  E1FD               	bnz	clear_2
  1778                           
  1779                           ; Clear objects allocated to BANK4 (67 bytes)
  1780  017248  EE01  F000         	lfsr	0,__pbssBANK4
  1781  01724C  0E43               	movlw	67
  1782  01724E                     clear_3:
  1783  01724E  6AEE               	clrf	postinc0,c
  1784  017250  06E8               	decf	wreg,f,c
  1785  017252  E1FD               	bnz	clear_3
  1786                           
  1787                           ; Clear objects allocated to BANK3 (215 bytes)
  1788  017254  EE00  F300         	lfsr	0,__pbssBANK3
  1789  017258  0ED7               	movlw	215
  1790  01725A                     clear_4:
  1791  01725A  6AEE               	clrf	postinc0,c
  1792  01725C  06E8               	decf	wreg,f,c
  1793  01725E  E1FD               	bnz	clear_4
  1794                           
  1795                           ; Clear objects allocated to BANK2 (64 bytes)
  1796  017260  EE00  F2BC         	lfsr	0,__pbssBANK2
  1797  017264  0E40               	movlw	64
  1798  017266                     clear_5:
  1799  017266  6AEE               	clrf	postinc0,c
  1800  017268  06E8               	decf	wreg,f,c
  1801  01726A  E1FD               	bnz	clear_5
  1802                           
  1803                           ; Clear objects allocated to BANK1 (88 bytes)
  1804  01726C  EE00  F1A3         	lfsr	0,__pbssBANK1
  1805  017270  0E58               	movlw	88
  1806  017272                     clear_6:
  1807  017272  6AEE               	clrf	postinc0,c
  1808  017274  06E8               	decf	wreg,f,c
  1809  017276  E1FD               	bnz	clear_6
  1810                           
  1811                           ; Clear objects allocated to BANK0 (103 bytes)
  1812  017278  EE00  F060         	lfsr	0,__pbssBANK0
  1813  01727C  0E67               	movlw	103
  1814  01727E                     clear_7:
  1815  01727E  6AEE               	clrf	postinc0,c
  1816  017280  06E8               	decf	wreg,f,c
  1817  017282  E1FD               	bnz	clear_7
  1818                           
  1819                           ; Clear objects allocated to COMRAM (49 bytes)
  1820  017284  EE00  F001         	lfsr	0,__pbssCOMRAM
  1821  017288  0E31               	movlw	49
  1822  01728A                     clear_8:
  1823  01728A  6AEE               	clrf	postinc0,c
  1824  01728C  06E8               	decf	wreg,f,c
  1825  01728E  E1FD               	bnz	clear_8
  1826                           
  1827                           ;
  1828                           ; Setup IVTBASE
  1829                           ;
  1830  017290  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1831  017292  6ED5               	movwf	213,c
  1832  017294  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1833  017296  6ED6               	movwf	214,c
  1834  017298  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1835  01729A  6ED7               	movwf	215,c
  1836  01729C                     end_of_initialization:
  1837                           	opt callstack 0
  1838  01729C                     __end_of__initialization:
  1839                           	opt callstack 0
  1840  01729C  0100               	movlb	0
  1841  01729E  EFC1  F08E         	goto	_main	;jump to C main() function
  1842                           
  1843                           	psect	bssCOMRAM
  1844  000001                     __pbssCOMRAM:
  1845                           	opt callstack 0
  1846  000001                     _ADCC_ADTI_InterruptHandler:
  1847                           	opt callstack 0
  1848  000001                     	ds	3
  1849  000004                     _ADCC_ADI_InterruptHandler:
  1850                           	opt callstack 0
  1851  000004                     	ds	3
  1852  000007                     _UART1_TxInterruptHandler:
  1853                           	opt callstack 0
  1854  000007                     	ds	3
  1855  00000A                     _UART1_RxInterruptHandler:
  1856                           	opt callstack 0
  1857  00000A                     	ds	3
  1858  00000D                     _UART2_TxInterruptHandler:
  1859                           	opt callstack 0
  1860  00000D                     	ds	3
  1861  000010                     _UART2_RxInterruptHandler:
  1862                           	opt callstack 0
  1863  000010                     	ds	3
  1864  000013                     _INT1_InterruptHandler:
  1865                           	opt callstack 0
  1866  000013                     	ds	3
  1867  000016                     _INT0_InterruptHandler:
  1868                           	opt callstack 0
  1869  000016                     	ds	3
  1870  000019                     _nout:
  1871                           	opt callstack 0
  1872  000019                     	ds	2
  1873  00001B                     _width:
  1874                           	opt callstack 0
  1875  00001B                     	ds	2
  1876  00001D                     _prec:
  1877                           	opt callstack 0
  1878  00001D                     	ds	2
  1879  00001F                     _flags:
  1880                           	opt callstack 0
  1881  00001F                     	ds	2
  1882  000021                     TMR5_ISR@CountCallBack:
  1883                           	opt callstack 0
  1884  000021                     	ds	2
  1885  000023                     _timer5ReloadVal:
  1886                           	opt callstack 0
  1887  000023                     	ds	2
  1888  000025                     _mode_sw:
  1889                           	opt callstack 0
  1890  000025                     	ds	1
  1891  000026                     _uart2RxCount:
  1892                           	opt callstack 0
  1893  000026                     	ds	1
  1894  000027                     _uart2RxTail:
  1895                           	opt callstack 0
  1896  000027                     	ds	1
  1897  000028                     _uart2RxHead:
  1898                           	opt callstack 0
  1899  000028                     	ds	1
  1900  000029                     _uart2TxBufferRemaining:
  1901                           	opt callstack 0
  1902  000029                     	ds	1
  1903  00002A                     _uart2TxTail:
  1904                           	opt callstack 0
  1905  00002A                     	ds	1
  1906  00002B                     _uart2TxHead:
  1907                           	opt callstack 0
  1908  00002B                     	ds	1
  1909  00002C                     _uart1RxCount:
  1910                           	opt callstack 0
  1911  00002C                     	ds	1
  1912  00002D                     _uart1RxTail:
  1913                           	opt callstack 0
  1914  00002D                     	ds	1
  1915  00002E                     _uart1RxHead:
  1916                           	opt callstack 0
  1917  00002E                     	ds	1
  1918  00002F                     _uart1TxBufferRemaining:
  1919                           	opt callstack 0
  1920  00002F                     	ds	1
  1921  000030                     _uart1TxTail:
  1922                           	opt callstack 0
  1923  000030                     	ds	1
  1924  000031                     _uart1TxHead:
  1925                           	opt callstack 0
  1926  000031                     	ds	1
  1927                           
  1928                           	psect	bssBANK0
  1929  000060                     __pbssBANK0:
  1930                           	opt callstack 0
  1931  000060                     _S:
  1932                           	opt callstack 0
  1933  000060                     	ds	41
  1934  000089                     _tickCount:
  1935                           	opt callstack 0
  1936  000089                     	ds	24
  1937  0000A1                     _spi_link:
  1938                           	opt callstack 0
  1939  0000A1                     	ds	12
  1940  0000AD                     floorf@F524:
  1941                           	opt callstack 0
  1942  0000AD                     	ds	4
  1943  0000B1                     ___fpclassifyf@F463:
  1944                           	opt callstack 0
  1945  0000B1                     	ds	4
  1946  0000B5                     _utctime:
  1947                           	opt callstack 0
  1948  0000B5                     	ds	4
  1949  0000B9                     wdtdelay@dcount:
  1950                           	opt callstack 0
  1951  0000B9                     	ds	4
  1952  0000BD                     _P:
  1953                           	opt callstack 0
  1954  0000BD                     	ds	4
  1955  0000C1                     _TMR5_InterruptHandler:
  1956                           	opt callstack 0
  1957  0000C1                     	ds	3
  1958  0000C4                     _TMR6_InterruptHandler:
  1959                           	opt callstack 0
  1960  0000C4                     	ds	3
  1961                           
  1962                           	psect	dataBANK0
  1963  0000C7                     __pdataBANK0:
  1964                           	opt callstack 0
  1965  0000C7                     _R:
  1966                           	opt callstack 0
  1967  0000C7                     	ds	40
  1968  0000EF                     _H:
  1969                           	opt callstack 0
  1970  0000EF                     	ds	7
  1971                           
  1972                           	psect	bssBANK1
  1973  0001A3                     __pbssBANK1:
  1974                           	opt callstack 0
  1975  0001A3                     _dbuf:
  1976                           	opt callstack 0
  1977  0001A3                     	ds	80
  1978  0001F3                     _seed:
  1979                           	opt callstack 0
  1980  0001F3                     	ds	8
  1981                           
  1982                           	psect	dataBANK1
  1983  000100                     __pdataBANK1:
  1984                           	opt callstack 0
  1985  000100                     _C:
  1986                           	opt callstack 0
  1987  000100                     	ds	140
  1988  00018C                     stoa@F1166:
  1989                           	opt callstack 0
  1990  00018C                     	ds	7
  1991  000193                     _port_data:
  1992                           	opt callstack 0
  1993  000193                     	ds	16
  1994                           
  1995                           	psect	bssBANK2
  1996  0002BC                     __pbssBANK2:
  1997                           	opt callstack 0
  1998  0002BC                     _uart1TxBuffer:
  1999                           	opt callstack 0
  2000  0002BC                     	ds	64
  2001                           
  2002                           	psect	dataBANK2
  2003  000200                     __pdataBANK2:
  2004                           	opt callstack 0
  2005  000200                     _V:
  2006                           	opt callstack 0
  2007  000200                     	ds	188
  2008                           
  2009                           	psect	bssBANK3
  2010  000300                     __pbssBANK3:
  2011                           	opt callstack 0
  2012  000300                     lp_filter@smooth:
  2013                           	opt callstack 0
  2014  000300                     	ds	84
  2015  000354                     _uart2TxBuffer:
  2016                           	opt callstack 0
  2017  000354                     	ds	64
  2018  000394                     _ring_buf1:
  2019                           	opt callstack 0
  2020  000394                     	ds	67
  2021                           
  2022                           	psect	bssBANK4
  2023  000400                     __pbssBANK4:
  2024                           	opt callstack 0
  2025  000400                     _ring_buf2:
  2026                           	opt callstack 0
  2027  000400                     	ds	67
  2028                           
  2029                           	psect	bssBANK5
  2030  000500                     __pbssBANK5:
  2031                           	opt callstack 0
  2032  000500                     _D:
  2033                           	opt callstack 0
  2034  000500                     	ds	218
  2035                           
  2036                           	psect	bssBANK6
  2037  000600                     __pbssBANK6:
  2038                           	opt callstack 0
  2039  000600                     _uart1RxBuffer:
  2040                           	opt callstack 0
  2041  000600                     	ds	255
  2042                           
  2043                           	psect	bssBANK7
  2044  000700                     __pbssBANK7:
  2045                           	opt callstack 0
  2046  000700                     _uart2RxBuffer:
  2047                           	opt callstack 0
  2048  000700                     	ds	255
  2049                           
  2050                           	psect	cstackBANK1
  2051  0001FB                     __pcstackBANK1:
  2052                           	opt callstack 0
  2053  0001FB                     ??_TMR5_ISR:
  2054                           
  2055                           ; 1 bytes @ 0x0
  2056  0001FB                     	ds	4
  2057                           
  2058                           	psect	cstackBANK0
  2059  0000F6                     __pcstackBANK0:
  2060                           	opt callstack 0
  2061  0000F6                     ??_INT1_ISR:
  2062                           
  2063                           ; 1 bytes @ 0x0
  2064  0000F6                     	ds	4
  2065                           
  2066                           	psect	cstackCOMRAM
  2067  000052                     __pcstackCOMRAM:
  2068                           	opt callstack 0
  2069  000052                     ??_ADCC_ThresholdISR:
  2070  000052                     
  2071                           ; 1 bytes @ 0x0
  2072  000052                     	ds	5
  2073  000057                     ??_TMR6_ISR:
  2074                           
  2075                           ; 1 bytes @ 0x5
  2076  000057                     	ds	1
  2077  000058                     
  2078                           ; 1 bytes @ 0x6
  2079 ;;
  2080 ;;Main: autosize = 5, tempsize = 0, incstack = 0, save=0
  2081 ;;
  2082 ;; *************** function _main *****************
  2083 ;; Defined at:
  2084 ;;		line 169 in file "main.c"
  2085 ;; Parameters:    Size  Location     Type
  2086 ;;		None
  2087 ;; Auto vars:     Size  Location     Type
  2088 ;;  k               1  [STACK] unsigned char 
  2089 ;;  j               1  [STACK] unsigned char 
  2090 ;;  i               1  [STACK] unsigned char 
  2091 ;;  inp_index       1  [STACK] unsigned char 
  2092 ;;  mode            1  [STACK] enum E17005
  2093 ;; Return value:  Size  Location     Type
  2094 ;;                  1  [STACK] void 
  2095 ;; Registers used:
  2096 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  2097 ;; Tracked objects:
  2098 ;;		On entry : 0/0
  2099 ;;		On exit  : 1/1
  2100 ;;		Unchanged: 0/0
  2101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2106 ;;Total ram usage:        0 bytes
  2107 ;; Hardware stack levels required when called:   19
  2108 ;; This function calls:
  2109 ;;		_SYSTEM_Initialize
  2110 ;;		_StartTimer
  2111 ;;		_TimerDone
  2112 ;;		_WaitMs
  2113 ;;		_calc_model_data
  2114 ;;		_check_adc_scan
  2115 ;;		_check_enter_button
  2116 ;;		_check_help
  2117 ;;		_clear_adc_scan
  2118 ;;		_clear_hid_pflags
  2119 ;;		_convert_adc_data
  2120 ;;		_eaDogM_WriteCommand
  2121 ;;		_get_raw_result
  2122 ;;		_get_switch
  2123 ;;		_get_vterm_ptr
  2124 ;;		_hid_display
  2125 ;;		_init_display
  2126 ;;		_lp_filter
  2127 ;;		_mode_lamp_dim
  2128 ;;		_set_display_info
  2129 ;;		_set_vterm
  2130 ;;		_sprintf
  2131 ;;		_srand
  2132 ;;		_start_adc_scan
  2133 ;;		_start_switch_handler
  2134 ;;		_static_soc
  2135 ;;		_update_lcd
  2136 ;; This function is called by:
  2137 ;;		Startup code after reset
  2138 ;; This function uses a reentrant model
  2139 ;;
  2140                           
  2141                           	psect	text0
  2142  011D82                     __ptext0:
  2143                           	opt callstack 0
  2144  011D82                     _main:
  2145                           	opt callstack 0
  2146                           
  2147                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2148  011D82  0E05               	movlw	5
  2149  011D84  26E1               	addwf	fsr1l,f,c
  2150  011D86  0E00               	movlw	0
  2151  011D88  22E2               	addwfc	fsr1h,f,c
  2152                           
  2153                           ;main.c: 171:  UI_STATES mode;;main.c: 172:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC;
  2154                           ;stkvar	_inp_index @ sp[(-5)+3]
  2155                           
  2156                           ;incstack = 0
  2157  011D8A  0EFE               	movlw	-2
  2158  011D8C  6AE3               	clrf	plusw1,c
  2159                           
  2160                           ;stkvar	_i @ sp[(-5)+2]
  2161  011D8E  0EFD               	movlw	-3
  2162  011D90  6AE3               	clrf	plusw1,c
  2163                           
  2164                           ;stkvar	_j @ sp[(-5)+1]
  2165  011D92  0EFC               	movlw	-4
  2166  011D94  6AE3               	clrf	plusw1,c
  2167  011D96  2AE3               	incf	plusw1,f,c
  2168                           
  2169                           ;stkvar	_k @ sp[(-5)+0]
  2170  011D98  0EFB               	movlw	-5
  2171  011D9A  6AE3               	clrf	plusw1,c
  2172  011D9C  82E3               	bsf	plusw1,1,c
  2173                           
  2174                           ;main.c: 175:  SYSTEM_Initialize();
  2175  011D9E  EC22  F0C2         	call	_SYSTEM_Initialize	;wreg free
  2176                           
  2177                           ; BSR set to: 60
  2178                           ;main.c: 178:  (INTCON0bits.GIEH = 1);
  2179  011DA2  8ED2               	bsf	210,7,c	;volatile
  2180                           
  2181                           ; BSR set to: 60
  2182                           ;main.c: 181:  (INTCON0bits.GIEL = 1);
  2183  011DA4  8CD2               	bsf	210,6,c	;volatile
  2184                           
  2185                           ; BSR set to: 60
  2186                           ;main.c: 183:  V.ui_state = UI_STATE_INIT;
  2187  011DA6  0102               	movlb	2	; () banked
  2188  011DA8  6B00               	clrf	_V& (0+255),b	;volatile
  2189                           
  2190                           ; BSR set to: 2
  2191                           ;main.c: 188:  WaitMs(300);
  2192  011DAA  0E2C               	movlw	44
  2193  011DAC  6EE6               	movwf	postinc1,c
  2194  011DAE  0E01               	movlw	1
  2195  011DB0  6EE6               	movwf	postinc1,c
  2196  011DB2  EC67  F0C3         	call	_WaitMs	;wreg free
  2197                           
  2198                           ;main.c: 189:  if (PORTBbits.RB0) {
  2199  011DB6  A0CB               	btfss	203,0,c	;volatile
  2200  011DB8  D004               	goto	l10814
  2201                           
  2202                           ;main.c: 190:   mode = UI_STATE_HOST;
  2203                           ;stkvar	_mode @ sp[(-5)+4]
  2204  011DBA  0EFF               	movlw	-1
  2205  011DBC  6AE3               	clrf	plusw1,c
  2206  011DBE  2AE3               	incf	plusw1,f,c
  2207                           
  2208                           ;main.c: 191:  } else {
  2209  011DC0  D004               	goto	l10816
  2210  011DC2                     l10814:
  2211                           
  2212                           ;main.c: 192:   mode = UI_STATE_LOG;
  2213                           ;stkvar	_mode @ sp[(-5)+4]
  2214  011DC2  0EFF               	movlw	-1
  2215  011DC4  6AE3               	clrf	plusw1,c
  2216  011DC6  80E3               	bsf	plusw1,0,c
  2217  011DC8  82E3               	bsf	plusw1,1,c	;indir
  2218  011DCA                     l10816:
  2219                           
  2220                           ;main.c: 195:  if (mode == UI_STATE_HOST) {
  2221                           ;stkvar	_mode @ sp[(-5)+4]
  2222  011DCA  0EFF               	movlw	-1
  2223  011DCC  04E3               	decf	plusw1,w,c
  2224  011DCE  A4D8               	btfss	status,2,c
  2225  011DD0  D007               	goto	l1260
  2226                           
  2227                           ;main.c: 196:   do { LATDbits.LATD0 = 1; } while(0);
  2228  011DD2  80BD               	bsf	189,0,c	;volatile
  2229                           
  2230                           ;main.c: 197:   V.mode_pwm = 70;
  2231  011DD4  0E00               	movlw	0
  2232  011DD6  0102               	movlb	2	; () banked
  2233  011DD8  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  2234  011DDA  0E46               	movlw	70
  2235  011DDC  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  2236                           
  2237                           ;main.c: 198:  } else {
  2238  011DDE  D004               	goto	l10820
  2239  011DE0                     l1260:
  2240  011DE0  90BD               	bcf	189,0,c	;volatile
  2241                           
  2242                           ;main.c: 200:   V.mode_pwm = 0;
  2243  011DE2  0102               	movlb	2	; () banked
  2244  011DE4  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  2245  011DE6  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  2246  011DE8                     l10820:
  2247                           
  2248                           ; BSR set to: 2
  2249                           ;main.c: 202:  mode_lamp_dim(V.mode_pwm);
  2250  011DE8  0060  FA57  FFE6   	movff	_V+149,postinc1
  2251  011DEE  0060  FA5B  FFE6   	movff	_V+150,postinc1
  2252  011DF4  EC29  F0C7         	call	_mode_lamp_dim	;wreg free
  2253  011DF8  D0D2               	goto	l10866
  2254  011DFA                     l10822:
  2255                           
  2256                           ; BSR set to: 2
  2257                           ;main.c: 213:    init_display();
  2258  011DFA  EC51  F0B9         	call	_init_display	;wreg free
  2259                           
  2260                           ; BSR set to: 61
  2261                           ;main.c: 214:    eaDogM_WriteCommand(0b00001100);
  2262  011DFE  0E0C               	movlw	12
  2263  011E00  6EE6               	movwf	postinc1,c
  2264  011E02  EC7D  F0C7         	call	_eaDogM_WriteCommand	;wreg free
  2265                           
  2266                           ; BSR set to: 0
  2267                           ;main.c: 216:    V.ui_state = mode;
  2268                           ;stkvar	_mode @ sp[(-5)+4]
  2269  011E06  0EFF               	movlw	-1
  2270  011E08  006F FF8C  F200    	movff	plusw1,_V	;volatile
  2271                           
  2272                           ; BSR set to: 0
  2273                           ;main.c: 217:    srand(1957);
  2274  011E0E  0EA5               	movlw	165
  2275  011E10  6EE6               	movwf	postinc1,c
  2276  011E12  0E07               	movlw	7
  2277  011E14  6EE6               	movwf	postinc1,c
  2278  011E16  EC9D  F0C3         	call	_srand	;wreg free
  2279                           
  2280                           ; BSR set to: 1
  2281                           ;main.c: 218:    set_vterm(0);
  2282  011E1A  0E00               	movlw	0
  2283  011E1C  6EE6               	movwf	postinc1,c
  2284  011E1E  EC00  F0C7         	call	_set_vterm	;wreg free
  2285                           
  2286                           ; BSR set to: 5
  2287                           ;main.c: 219:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  2288  011E22  0E5F               	movlw	low STR_1
  2289  011E24  6EE6               	movwf	postinc1,c
  2290  011E26  0EFF               	movlw	high STR_1
  2291  011E28  6EE6               	movwf	postinc1,c
  2292  011E2A  0E00               	movlw	0
  2293  011E2C  6EE6               	movwf	postinc1,c
  2294  011E2E  0E00               	movlw	0
  2295  011E30  6EE6               	movwf	postinc1,c
  2296  011E32  EC31  F0C4         	call	_get_vterm_ptr	;wreg free
  2297  011E36  0060  F0CB  FFE6   	movff	btemp,postinc1
  2298  011E3C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2299  011E42  0E04               	movlw	4
  2300  011E44  6EE6               	movwf	postinc1,c
  2301  011E46  ECD1  F0B7         	call	_sprintf	;wreg free
  2302                           
  2303                           ;main.c: 220:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.995");
  2304  011E4A  0EDF               	movlw	low STR_3
  2305  011E4C  6EE6               	movwf	postinc1,c
  2306  011E4E  0EFF               	movlw	high STR_3
  2307  011E50  6EE6               	movwf	postinc1,c
  2308  011E52  0EB1               	movlw	low STR_2
  2309  011E54  6EE6               	movwf	postinc1,c
  2310  011E56  0EFF               	movlw	high STR_2
  2311  011E58  6EE6               	movwf	postinc1,c
  2312  011E5A  0E00               	movlw	0
  2313  011E5C  6EE6               	movwf	postinc1,c
  2314  011E5E  0E01               	movlw	1
  2315  011E60  6EE6               	movwf	postinc1,c
  2316  011E62  EC31  F0C4         	call	_get_vterm_ptr	;wreg free
  2317  011E66  0060  F0CB  FFE6   	movff	btemp,postinc1
  2318  011E6C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2319  011E72  0E06               	movlw	6
  2320  011E74  6EE6               	movwf	postinc1,c
  2321  011E76  ECD1  F0B7         	call	_sprintf	;wreg free
  2322                           
  2323                           ;main.c: 221:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  2324  011E7A  0E4E               	movlw	low STR_4
  2325  011E7C  6EE6               	movwf	postinc1,c
  2326  011E7E  0EFF               	movlw	high STR_4
  2327  011E80  6EE6               	movwf	postinc1,c
  2328  011E82  0E00               	movlw	0
  2329  011E84  6EE6               	movwf	postinc1,c
  2330  011E86  0E02               	movlw	2
  2331  011E88  6EE6               	movwf	postinc1,c
  2332  011E8A  EC31  F0C4         	call	_get_vterm_ptr	;wreg free
  2333  011E8E  0060  F0CB  FFE6   	movff	btemp,postinc1
  2334  011E94  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2335  011E9A  0E04               	movlw	4
  2336  011E9C  6EE6               	movwf	postinc1,c
  2337  011E9E  ECD1  F0B7         	call	_sprintf	;wreg free
  2338                           
  2339                           ;main.c: 222:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  2340  011EA2  0E70               	movlw	low STR_5
  2341  011EA4  6EE6               	movwf	postinc1,c
  2342  011EA6  0EFF               	movlw	high STR_5
  2343  011EA8  6EE6               	movwf	postinc1,c
  2344  011EAA  0E02               	movlw	2
  2345  011EAC  6EE6               	movwf	postinc1,c
  2346  011EAE  0E00               	movlw	0
  2347  011EB0  6EE6               	movwf	postinc1,c
  2348  011EB2  EC31  F0C4         	call	_get_vterm_ptr	;wreg free
  2349  011EB6  0060  F0CB  FFE6   	movff	btemp,postinc1
  2350  011EBC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2351  011EC2  0E04               	movlw	4
  2352  011EC4  6EE6               	movwf	postinc1,c
  2353  011EC6  ECD1  F0B7         	call	_sprintf	;wreg free
  2354                           
  2355                           ;main.c: 223:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.995");
  2356  011ECA  0EDF               	movlw	low STR_3
  2357  011ECC  6EE6               	movwf	postinc1,c
  2358  011ECE  0EFF               	movlw	high STR_3
  2359  011ED0  6EE6               	movwf	postinc1,c
  2360  011ED2  0EB1               	movlw	low STR_2
  2361  011ED4  6EE6               	movwf	postinc1,c
  2362  011ED6  0EFF               	movlw	high STR_2
  2363  011ED8  6EE6               	movwf	postinc1,c
  2364  011EDA  0E02               	movlw	2
  2365  011EDC  6EE6               	movwf	postinc1,c
  2366  011EDE  0E01               	movlw	1
  2367  011EE0  6EE6               	movwf	postinc1,c
  2368  011EE2  EC31  F0C4         	call	_get_vterm_ptr	;wreg free
  2369  011EE6  0060  F0CB  FFE6   	movff	btemp,postinc1
  2370  011EEC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2371  011EF2  0E06               	movlw	6
  2372  011EF4  6EE6               	movwf	postinc1,c
  2373  011EF6  ECD1  F0B7         	call	_sprintf	;wreg free
  2374                           
  2375                           ;main.c: 224:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  2376  011EFA  0E3D               	movlw	low STR_8
  2377  011EFC  6EE6               	movwf	postinc1,c
  2378  011EFE  0EFF               	movlw	high STR_8
  2379  011F00  6EE6               	movwf	postinc1,c
  2380  011F02  0E02               	movlw	2
  2381  011F04  6EE6               	movwf	postinc1,c
  2382  011F06  0E02               	movlw	2
  2383  011F08  6EE6               	movwf	postinc1,c
  2384  011F0A  EC31  F0C4         	call	_get_vterm_ptr	;wreg free
  2385  011F0E  0060  F0CB  FFE6   	movff	btemp,postinc1
  2386  011F14  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2387  011F1A  0E04               	movlw	4
  2388  011F1C  6EE6               	movwf	postinc1,c
  2389  011F1E  ECD1  F0B7         	call	_sprintf	;wreg free
  2390                           
  2391                           ;main.c: 225:    update_lcd(0);
  2392  011F22  0E00               	movlw	0
  2393  011F24  6EE6               	movwf	postinc1,c
  2394  011F26  EC4A  F0B7         	call	_update_lcd	;wreg free
  2395                           
  2396                           ;main.c: 226:    WaitMs(3000);
  2397  011F2A  0EB8               	movlw	184
  2398  011F2C  6EE6               	movwf	postinc1,c
  2399  011F2E  0E0B               	movlw	11
  2400  011F30  6EE6               	movwf	postinc1,c
  2401  011F32  EC67  F0C3         	call	_WaitMs	;wreg free
  2402                           
  2403                           ;main.c: 227:    StartTimer(TMR_DISPLAY, 250);
  2404  011F36  0EFA               	movlw	250
  2405  011F38  6EE6               	movwf	postinc1,c
  2406  011F3A  0E00               	movlw	0
  2407  011F3C  6EE6               	movwf	postinc1,c
  2408  011F3E  0E0A               	movlw	10
  2409  011F40  6EE6               	movwf	postinc1,c
  2410  011F42  EC2D  F0C3         	call	_StartTimer	;wreg free
  2411                           
  2412                           ;main.c: 228:    StartTimer(TMR_ADC, 200);
  2413  011F46  0EC8               	movlw	200
  2414  011F48  6EE6               	movwf	postinc1,c
  2415  011F4A  0E00               	movlw	0
  2416  011F4C  6EE6               	movwf	postinc1,c
  2417  011F4E  0E01               	movlw	1
  2418  011F50  6EE6               	movwf	postinc1,c
  2419  011F52  EC2D  F0C3         	call	_StartTimer	;wreg free
  2420                           
  2421                           ;main.c: 229:    StartTimer(TMR_INFO, 3000);
  2422  011F56  0EB8               	movlw	184
  2423  011F58  6EE6               	movwf	postinc1,c
  2424  011F5A  0E0B               	movlw	11
  2425  011F5C  6EE6               	movwf	postinc1,c
  2426  011F5E  0E07               	movlw	7
  2427  011F60  6EE6               	movwf	postinc1,c
  2428  011F62  EC2D  F0C3         	call	_StartTimer	;wreg free
  2429                           
  2430                           ;main.c: 230:    StartTimer(TMR_FLIPPER, 1500);
  2431  011F66  0EDC               	movlw	220
  2432  011F68  6EE6               	movwf	postinc1,c
  2433  011F6A  0E05               	movlw	5
  2434  011F6C  6EE6               	movwf	postinc1,c
  2435  011F6E  0E0B               	movlw	11
  2436  011F70  6EE6               	movwf	postinc1,c
  2437  011F72  EC2D  F0C3         	call	_StartTimer	;wreg free
  2438                           
  2439                           ;main.c: 231:    StartTimer(TMR_HELPDIS, 3000);
  2440  011F76  0EB8               	movlw	184
  2441  011F78  6EE6               	movwf	postinc1,c
  2442  011F7A  0E0B               	movlw	11
  2443  011F7C  6EE6               	movwf	postinc1,c
  2444  011F7E  0E09               	movlw	9
  2445  011F80  6EE6               	movwf	postinc1,c
  2446  011F82  EC2D  F0C3         	call	_StartTimer	;wreg free
  2447                           
  2448                           ;main.c: 233:    start_adc_scan();
  2449  011F86  ECE9  F0BF         	call	_start_adc_scan	;wreg free
  2450                           
  2451                           ;main.c: 234:    start_switch_handler();
  2452  011F8A  EC97  F0C6         	call	_start_switch_handler	;wreg free
  2453                           
  2454                           ; BSR set to: 57
  2455                           ;main.c: 235:    static_soc();
  2456  011F8E  EC1B  F0C6         	call	_static_soc	;wreg free
  2457                           
  2458                           ;main.c: 237:    break;
  2459  011F92  D01C               	goto	l10868
  2460  011F94                     l1268:
  2461                           
  2462                           ; BSR set to: 2
  2463                           ;main.c: 243:    P.SYSTEM_STABLE = 1;
  2464  011F94  0100               	movlb	0	; () banked
  2465  011F96  81BE               	bsf	(_P+1)& (0+255),0,b	;volatile
  2466                           
  2467                           ;main.c: 244:    break;
  2468  011F98  D019               	goto	l10868
  2469  011F9A                     l1270:
  2470                           
  2471                           ; BSR set to: 2
  2472                           ;main.c: 247:    V.ui_state = UI_STATE_INIT;
  2473  011F9A  6B00               	clrf	_V& (0+255),b	;volatile
  2474                           
  2475                           ;main.c: 248:    break;
  2476  011F9C  D017               	goto	l10868
  2477  011F9E                     l10866:
  2478  011F9E  0102               	movlb	2	; () banked
  2479  011FA0  5100               	movf	_V& (0+255),w,b	;volatile
  2480  011FA2  6E3C               	movwf	(btemp+10)^0,c
  2481  011FA4  6A3D               	clrf	(btemp+11)^0,c
  2482                           
  2483                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2484                           ; Switch size 1, requested type "simple"
  2485                           ; Number of cases is 1, Range of values is 0 to 0
  2486                           ; switch strategies available:
  2487                           ; Name         Instructions Cycles
  2488                           ; simple_byte            4     3 (average)
  2489                           ;	Chosen strategy is simple_byte
  2490  011FA6  503D               	movf	(btemp+11)^0,w,c
  2491  011FA8  0A00               	xorlw	0	; case 0
  2492  011FAA  A4D8               	btfss	status,2,c
  2493  011FAC  D7F6               	goto	l1270
  2494                           
  2495                           ; BSR set to: 2
  2496                           ; Switch size 1, requested type "simple"
  2497                           ; Number of cases is 5, Range of values is 0 to 5
  2498                           ; switch strategies available:
  2499                           ; Name         Instructions Cycles
  2500                           ; simple_byte           16     9 (average)
  2501                           ;	Chosen strategy is simple_byte
  2502  011FAE  503C               	movf	(btemp+10)^0,w,c
  2503  011FB0  0A00               	xorlw	0	; case 0
  2504  011FB2  B4D8               	btfsc	status,2,c
  2505  011FB4  D722               	goto	l10822
  2506  011FB6  0A01               	xorlw	1	; case 1
  2507  011FB8  B4D8               	btfsc	status,2,c
  2508  011FBA  D008               	goto	l10868
  2509  011FBC  0A02               	xorlw	2	; case 3
  2510  011FBE  B4D8               	btfsc	status,2,c
  2511  011FC0  D005               	goto	l10868
  2512  011FC2  0A07               	xorlw	7	; case 4
  2513  011FC4  B4D8               	btfsc	status,2,c
  2514  011FC6  D7E6               	goto	l1268
  2515  011FC8  0A01               	xorlw	1	; case 5
  2516  011FCA  D7E7               	goto	l1270
  2517  011FCC                     l10868:
  2518                           
  2519                           ;main.c: 251:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  2520  011FCC  0E01               	movlw	1
  2521  011FCE  6EE6               	movwf	postinc1,c
  2522  011FD0  EC3F  F0C6         	call	_TimerDone	;wreg free
  2523  011FD4  5032               	movf	btemp^0,w,c
  2524  011FD6  B4D8               	btfsc	status,2,c
  2525  011FD8  D013               	goto	l10880
  2526  011FDA  ECBD  F0C7         	call	_check_adc_scan	;wreg free
  2527  011FDE  5032               	movf	btemp^0,w,c
  2528  011FE0  B4D8               	btfsc	status,2,c
  2529  011FE2  D00E               	goto	l10880
  2530                           
  2531                           ;main.c: 255:    convert_adc_data();
  2532  011FE4  ECF0  F0BA         	call	_convert_adc_data	;wreg free
  2533                           
  2534                           ;main.c: 259:    clear_adc_scan();
  2535  011FE8  ECC5  F0C7         	call	_clear_adc_scan	;wreg free
  2536                           
  2537                           ; BSR set to: 0
  2538                           ;main.c: 260:    start_adc_scan();
  2539  011FEC  ECE9  F0BF         	call	_start_adc_scan	;wreg free
  2540                           
  2541                           ;main.c: 261:    StartTimer(TMR_ADC, 200);
  2542  011FF0  0EC8               	movlw	200
  2543  011FF2  6EE6               	movwf	postinc1,c
  2544  011FF4  0E00               	movlw	0
  2545  011FF6  6EE6               	movwf	postinc1,c
  2546  011FF8  0E01               	movlw	1
  2547  011FFA  6EE6               	movwf	postinc1,c
  2548  011FFC  EC2D  F0C3         	call	_StartTimer	;wreg free
  2549  012000                     l10880:
  2550                           
  2551                           ;main.c: 268:   if (TimerDone(TMR_DISPLAY)) {
  2552                           
  2553                           ;main.c: 264:   if (V.ticks) {
  2554  012000  0E0A               	movlw	10
  2555  012002  6EE6               	movwf	postinc1,c
  2556  012004  EC3F  F0C6         	call	_TimerDone	;wreg free
  2557  012008  5032               	movf	btemp^0,w,c
  2558  01200A  B4D8               	btfsc	status,2,c
  2559  01200C  D273               	goto	l10922
  2560                           
  2561                           ;main.c: 269:    if (TimerDone(TMR_HELPDIS)) {
  2562  01200E  0E09               	movlw	9
  2563  012010  6EE6               	movwf	postinc1,c
  2564  012012  EC3F  F0C6         	call	_TimerDone	;wreg free
  2565  012016  5032               	movf	btemp^0,w,c
  2566  012018  B4D8               	btfsc	status,2,c
  2567  01201A  D004               	goto	l10888
  2568                           
  2569                           ;main.c: 270:     set_display_info(DIS_STR);
  2570  01201C  0E00               	movlw	0
  2571  01201E  6EE6               	movwf	postinc1,c
  2572  012020  ECC5  F0C6         	call	_set_display_info	;wreg free
  2573  012024                     l10888:
  2574                           
  2575                           ;main.c: 272:    calc_model_data();
  2576  012024  EC55  F0A7         	call	_calc_model_data	;wreg free
  2577                           
  2578                           ;main.c: 279:     hid_display(&H);
  2579                           
  2580                           ;main.c: 274:    if (0) {
  2581  012028  0EEF               	movlw	_H& (0+255)
  2582  01202A  6EE6               	movwf	postinc1,c
  2583  01202C  EC56  F0B8         	call	_hid_display	;wreg free
  2584                           
  2585                           ;main.c: 280:     switch (H.hid_display) {
  2586  012030  D23C               	goto	l10914
  2587  012032                     l1278:
  2588                           
  2589                           ; BSR set to: 0
  2590                           ;main.c: 282:      V.calib = 0;
  2591  012032  0102               	movlb	2	; () banked
  2592  012034  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  2593                           
  2594                           ; BSR set to: 2
  2595                           ;main.c: 283:      sprintf(get_vterm_ptr(0, 0), "PV   PWR %3.2f    ", C.p_pv);
  2596  012036  0060  F5C3  FFE6   	movff	_C+112,postinc1
  2597  01203C  0060  F5C7  FFE6   	movff	_C+113,postinc1
  2598  012042  0060  F5CB  FFE6   	movff	_C+114,postinc1
  2599  012048  0060  F5CF  FFE6   	movff	_C+115,postinc1
  2600  01204E  0EB8               	movlw	low STR_12
  2601  012050  6EE6               	movwf	postinc1,c
  2602  012052  0EFE               	movlw	high STR_12
  2603  012054  6EE6               	movwf	postinc1,c
  2604  012056  0E00               	movlw	0
  2605  012058  6EE6               	movwf	postinc1,c
  2606  01205A  0E00               	movlw	0
  2607  01205C  6EE6               	movwf	postinc1,c
  2608  01205E  EC31  F0C4         	call	_get_vterm_ptr	;wreg free
  2609  012062  0060  F0CB  FFE6   	movff	btemp,postinc1
  2610  012068  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2611  01206E  0E08               	movlw	8
  2612  012070  6EE6               	movwf	postinc1,c
  2613  012072  ECD1  F0B7         	call	_sprintf	;wreg free
  2614                           
  2615                           ;main.c: 284:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  2616  012076  0060  F5A3  FFE6   	movff	_C+104,postinc1
  2617  01207C  0060  F5A7  FFE6   	movff	_C+105,postinc1
  2618  012082  0060  F5AB  FFE6   	movff	_C+106,postinc1
  2619  012088  0060  F5AF  FFE6   	movff	_C+107,postinc1
  2620  01208E  0EF1               	movlw	low STR_13
  2621  012090  6EE6               	movwf	postinc1,c
  2622  012092  0EFE               	movlw	high STR_13
  2623  012094  6EE6               	movwf	postinc1,c
  2624  012096  0E00               	movlw	0
  2625  012098  6EE6               	movwf	postinc1,c
  2626  01209A  0E01               	movlw	1
  2627  01209C  6EE6               	movwf	postinc1,c
  2628  01209E  EC31  F0C4         	call	_get_vterm_ptr	;wreg free
  2629  0120A2  0060  F0CB  FFE6   	movff	btemp,postinc1
  2630  0120A8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2631  0120AE  0E08               	movlw	8
  2632  0120B0  6EE6               	movwf	postinc1,c
  2633  0120B2  ECD1  F0B7         	call	_sprintf	;wreg free
  2634                           
  2635                           ;main.c: 285:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  2636  0120B6  0060  F5B3  FFE6   	movff	_C+108,postinc1
  2637  0120BC  0060  F5B7  FFE6   	movff	_C+109,postinc1
  2638  0120C2  0060  F5BB  FFE6   	movff	_C+110,postinc1
  2639  0120C8  0060  F5BF  FFE6   	movff	_C+111,postinc1
  2640  0120CE  0EDE               	movlw	low STR_14
  2641  0120D0  6EE6               	movwf	postinc1,c
  2642  0120D2  0EFE               	movlw	high STR_14
  2643  0120D4  6EE6               	movwf	postinc1,c
  2644  0120D6  0E00               	movlw	0
  2645  0120D8  6EE6               	movwf	postinc1,c
  2646  0120DA  0E02               	movlw	2
  2647  0120DC  6EE6               	movwf	postinc1,c
  2648  0120DE  EC31  F0C4         	call	_get_vterm_ptr	;wreg free
  2649  0120E2  0060  F0CB  FFE6   	movff	btemp,postinc1
  2650  0120E8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2651  0120EE  0E08               	movlw	8
  2652  0120F0  6EE6               	movwf	postinc1,c
  2653  0120F2  ECD1  F0B7         	call	_sprintf	;wreg free
  2654                           
  2655                           ;main.c: 286:      break;
  2656  0120F6  D1EE               	goto	l10916
  2657  0120F8                     l1280:
  2658                           
  2659                           ; BSR set to: 0
  2660                           ;main.c: 288:      V.calib = 0;
  2661  0120F8  0102               	movlb	2	; () banked
  2662  0120FA  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  2663                           
  2664                           ; BSR set to: 2
  2665                           ;main.c: 289:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.ca
      +                          lc[C_PV]);
  2666  0120FC  0060  F413  FFE6   	movff	_C+4,postinc1
  2667  012102  0060  F417  FFE6   	movff	_C+5,postinc1
  2668  012108  0060  F41B  FFE6   	movff	_C+6,postinc1
  2669  01210E  0060  F41F  FFE6   	movff	_C+7,postinc1
  2670  012114  0060  F453  FFE6   	movff	_C+20,postinc1
  2671  01211A  0060  F457  FFE6   	movff	_C+21,postinc1
  2672  012120  0060  F45B  FFE6   	movff	_C+22,postinc1
  2673  012126  0060  F45F  FFE6   	movff	_C+23,postinc1
  2674  01212C  0E2A               	movlw	low STR_15
  2675  01212E  6EE6               	movwf	postinc1,c
  2676  012130  0EFF               	movlw	high STR_15
  2677  012132  6EE6               	movwf	postinc1,c
  2678  012134  0E00               	movlw	0
  2679  012136  6EE6               	movwf	postinc1,c
  2680  012138  0E00               	movlw	0
  2681  01213A  6EE6               	movwf	postinc1,c
  2682  01213C  EC31  F0C4         	call	_get_vterm_ptr	;wreg free
  2683  012140  0060  F0CB  FFE6   	movff	btemp,postinc1
  2684  012146  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2685  01214C  0E0C               	movlw	12
  2686  01214E  6EE6               	movwf	postinc1,c
  2687  012150  ECD1  F0B7         	call	_sprintf	;wreg free
  2688                           
  2689                           ;main.c: 290:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.c
      +                          alc[C_BATT]);
  2690  012154  0060  F403  FFE6   	movff	_C,postinc1
  2691  01215A  0060  F407  FFE6   	movff	_C+1,postinc1
  2692  012160  0060  F40B  FFE6   	movff	_C+2,postinc1
  2693  012166  0060  F40F  FFE6   	movff	_C+3,postinc1
  2694  01216C  0060  F443  FFE6   	movff	_C+16,postinc1
  2695  012172  0060  F447  FFE6   	movff	_C+17,postinc1
  2696  012178  0060  F44B  FFE6   	movff	_C+18,postinc1
  2697  01217E  0060  F44F  FFE6   	movff	_C+19,postinc1
  2698  012184  0E04               	movlw	low STR_16
  2699  012186  6EE6               	movwf	postinc1,c
  2700  012188  0EFF               	movlw	high STR_16
  2701  01218A  6EE6               	movwf	postinc1,c
  2702  01218C  0E00               	movlw	0
  2703  01218E  6EE6               	movwf	postinc1,c
  2704  012190  0E01               	movlw	1
  2705  012192  6EE6               	movwf	postinc1,c
  2706  012194  EC31  F0C4         	call	_get_vterm_ptr	;wreg free
  2707  012198  0060  F0CB  FFE6   	movff	btemp,postinc1
  2708  01219E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2709  0121A4  0E0C               	movlw	12
  2710  0121A6  6EE6               	movwf	postinc1,c
  2711  0121A8  ECD1  F0B7         	call	_sprintf	;wreg free
  2712                           
  2713                           ;main.c: 291:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_
      +                          load);
  2714  0121AC  0060  F503  FFE6   	movff	_C+64,postinc1
  2715  0121B2  0060  F507  FFE6   	movff	_C+65,postinc1
  2716  0121B8  0060  F50B  FFE6   	movff	_C+66,postinc1
  2717  0121BE  0060  F50F  FFE6   	movff	_C+67,postinc1
  2718  0121C4  0060  F423  FFE6   	movff	_C+8,postinc1
  2719  0121CA  0060  F427  FFE6   	movff	_C+9,postinc1
  2720  0121D0  0060  F42B  FFE6   	movff	_C+10,postinc1
  2721  0121D6  0060  F42F  FFE6   	movff	_C+11,postinc1
  2722  0121DC  0E17               	movlw	low STR_17
  2723  0121DE  6EE6               	movwf	postinc1,c
  2724  0121E0  0EFF               	movlw	high STR_17
  2725  0121E2  6EE6               	movwf	postinc1,c
  2726  0121E4  0E00               	movlw	0
  2727  0121E6  6EE6               	movwf	postinc1,c
  2728  0121E8  0E02               	movlw	2
  2729  0121EA  6EE6               	movwf	postinc1,c
  2730  0121EC  EC31  F0C4         	call	_get_vterm_ptr	;wreg free
  2731  0121F0  0060  F0CB  FFE6   	movff	btemp,postinc1
  2732  0121F6  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2733  0121FC  0E0C               	movlw	12
  2734  0121FE  6EE6               	movwf	postinc1,c
  2735  012200  ECD1  F0B7         	call	_sprintf	;wreg free
  2736                           
  2737                           ;main.c: 292:      break;
  2738  012204  D167               	goto	l10916
  2739  012206                     l1281:
  2740                           
  2741                           ; BSR set to: 0
  2742                           ;main.c: 294:      V.calib = 0;
  2743  012206  0102               	movlb	2	; () banked
  2744  012208  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  2745                           
  2746                           ; BSR set to: 2
  2747                           ;main.c: 295:      sprintf(get_vterm_ptr(0, 0), "BAT  PWR %3.2f    ", C.p_bat);
  2748  01220A  0060  F5D3  FFE6   	movff	_C+116,postinc1
  2749  012210  0060  F5D7  FFE6   	movff	_C+117,postinc1
  2750  012216  0060  F5DB  FFE6   	movff	_C+118,postinc1
  2751  01221C  0060  F5DF  FFE6   	movff	_C+119,postinc1
  2752  012222  0ECB               	movlw	low STR_18
  2753  012224  6EE6               	movwf	postinc1,c
  2754  012226  0EFE               	movlw	high STR_18
  2755  012228  6EE6               	movwf	postinc1,c
  2756  01222A  0E00               	movlw	0
  2757  01222C  6EE6               	movwf	postinc1,c
  2758  01222E  0E00               	movlw	0
  2759  012230  6EE6               	movwf	postinc1,c
  2760  012232  EC31  F0C4         	call	_get_vterm_ptr	;wreg free
  2761  012236  0060  F0CB  FFE6   	movff	btemp,postinc1
  2762  01223C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2763  012242  0E08               	movlw	8
  2764  012244  6EE6               	movwf	postinc1,c
  2765  012246  ECD1  F0B7         	call	_sprintf	;wreg free
  2766                           
  2767                           ;main.c: 296:      sprintf(get_vterm_ptr(1, 0), "BAT AH   %3.2f    ", C.dynamic_ah);
  2768  01224A  0060  F613  FFE6   	movff	_C+132,postinc1
  2769  012250  0060  F617  FFE6   	movff	_C+133,postinc1
  2770  012256  0060  F61B  FFE6   	movff	_C+134,postinc1
  2771  01225C  0060  F61F  FFE6   	movff	_C+135,postinc1
  2772  012262  0EA5               	movlw	low STR_19
  2773  012264  6EE6               	movwf	postinc1,c
  2774  012266  0EFE               	movlw	high STR_19
  2775  012268  6EE6               	movwf	postinc1,c
  2776  01226A  0E00               	movlw	0
  2777  01226C  6EE6               	movwf	postinc1,c
  2778  01226E  0E01               	movlw	1
  2779  012270  6EE6               	movwf	postinc1,c
  2780  012272  EC31  F0C4         	call	_get_vterm_ptr	;wreg free
  2781  012276  0060  F0CB  FFE6   	movff	btemp,postinc1
  2782  01227C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2783  012282  0E08               	movlw	8
  2784  012284  6EE6               	movwf	postinc1,c
  2785  012286  ECD1  F0B7         	call	_sprintf	;wreg free
  2786                           
  2787                           ;main.c: 297:      sprintf(get_vterm_ptr(2, 0), "SOC %d RUN %d     ", C.soc, C.runtime);
  2788  01228A  0060  F623  FFE6   	movff	_C+136,postinc1
  2789  012290  0060  F627  FFE6   	movff	_C+137,postinc1
  2790  012296  0060  F62B  FFE6   	movff	_C+138,postinc1
  2791  01229C  0060  F62F  FFE6   	movff	_C+139,postinc1
  2792  0122A2  0E92               	movlw	low STR_20
  2793  0122A4  6EE6               	movwf	postinc1,c
  2794  0122A6  0EFE               	movlw	high STR_20
  2795  0122A8  6EE6               	movwf	postinc1,c
  2796  0122AA  0E00               	movlw	0
  2797  0122AC  6EE6               	movwf	postinc1,c
  2798  0122AE  0E02               	movlw	2
  2799  0122B0  6EE6               	movwf	postinc1,c
  2800  0122B2  EC31  F0C4         	call	_get_vterm_ptr	;wreg free
  2801  0122B6  0060  F0CB  FFE6   	movff	btemp,postinc1
  2802  0122BC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2803  0122C2  0E08               	movlw	8
  2804  0122C4  6EE6               	movwf	postinc1,c
  2805  0122C6  ECD1  F0B7         	call	_sprintf	;wreg free
  2806                           
  2807                           ;main.c: 298:      break;
  2808  0122CA  D104               	goto	l10916
  2809  0122CC                     l10900:
  2810                           
  2811                           ; BSR set to: 0
  2812                           ;main.c: 300:      if (!V.calib) {
  2813  0122CC  0102               	movlb	2	; () banked
  2814  0122CE  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  2815  0122D0  A4D8               	btfss	status,2,c
  2816  0122D2  D02D               	goto	l10904
  2817                           
  2818                           ; BSR set to: 2
  2819                           ;main.c: 301:       lp_filter(0.0, i, -1);
  2820  0122D4  0EFF               	movlw	255
  2821  0122D6  6EE6               	movwf	postinc1,c
  2822                           
  2823                           ;stkvar	_i @ sp[(-6)+2]
  2824  0122D8  0EFC               	movlw	-4
  2825  0122DA  50E3               	movf	plusw1,w,c
  2826  0122DC  6EE6               	movwf	postinc1,c
  2827  0122DE  0E00               	movlw	0
  2828  0122E0  6EE6               	movwf	postinc1,c
  2829  0122E2  0E00               	movlw	0
  2830  0122E4  6EE6               	movwf	postinc1,c
  2831  0122E6  0E00               	movlw	0
  2832  0122E8  6EE6               	movwf	postinc1,c
  2833  0122EA  0E00               	movlw	0
  2834  0122EC  6EE6               	movwf	postinc1,c
  2835  0122EE  ECAB  F0B0         	call	_lp_filter	;wreg free
  2836                           
  2837                           ;main.c: 302:       lp_filter(0.0, j, -1);
  2838  0122F2  0EFF               	movlw	255
  2839  0122F4  6EE6               	movwf	postinc1,c
  2840                           
  2841                           ;stkvar	_j @ sp[(-6)+1]
  2842  0122F6  0EFB               	movlw	-5
  2843  0122F8  50E3               	movf	plusw1,w,c
  2844  0122FA  6EE6               	movwf	postinc1,c
  2845  0122FC  0E00               	movlw	0
  2846  0122FE  6EE6               	movwf	postinc1,c
  2847  012300  0E00               	movlw	0
  2848  012302  6EE6               	movwf	postinc1,c
  2849  012304  0E00               	movlw	0
  2850  012306  6EE6               	movwf	postinc1,c
  2851  012308  0E00               	movlw	0
  2852  01230A  6EE6               	movwf	postinc1,c
  2853  01230C  ECAB  F0B0         	call	_lp_filter	;wreg free
  2854                           
  2855                           ;main.c: 303:       lp_filter(0.0, k, -1);
  2856  012310  0EFF               	movlw	255
  2857  012312  6EE6               	movwf	postinc1,c
  2858                           
  2859                           ;stkvar	_k @ sp[(-6)+0]
  2860  012314  0EFA               	movlw	-6
  2861  012316  50E3               	movf	plusw1,w,c
  2862  012318  6EE6               	movwf	postinc1,c
  2863  01231A  0E00               	movlw	0
  2864  01231C  6EE6               	movwf	postinc1,c
  2865  01231E  0E00               	movlw	0
  2866  012320  6EE6               	movwf	postinc1,c
  2867  012322  0E00               	movlw	0
  2868  012324  6EE6               	movwf	postinc1,c
  2869  012326  0E00               	movlw	0
  2870  012328  6EE6               	movwf	postinc1,c
  2871  01232A  ECAB  F0B0         	call	_lp_filter	;wreg free
  2872  01232E                     l10904:
  2873                           
  2874                           ;main.c: 305:      V.calib = 1;
  2875  01232E  0E01               	movlw	1
  2876  012330  0102               	movlb	2	; () banked
  2877  012332  6FAB               	movwf	(_V+171)& (0+255),b	;volatile
  2878                           
  2879                           ; BSR set to: 2
  2880                           ;main.c: 306:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d  ", get_raw_result(i), C.
      +                          calc[i], get_switch(SSELECT));
  2881  012334  0E02               	movlw	2
  2882  012336  6EE6               	movwf	postinc1,c
  2883  012338  ECDB  F0C4         	call	_get_switch	;wreg free
  2884  01233C  5032               	movf	btemp^0,w,c
  2885  01233E  6EE6               	movwf	postinc1,c
  2886  012340  0E00               	movlw	0
  2887  012342  6EE6               	movwf	postinc1,c
  2888                           
  2889                           ;stkvar	_i @ sp[(-7)+2]
  2890  012344  0EFB               	movlw	-5
  2891  012346  50E3               	movf	plusw1,w,c
  2892  012348  0D04               	mullw	4
  2893  01234A  0E00               	movlw	low _C
  2894  01234C  24F3               	addwf	243,w,c
  2895  01234E  6ED9               	movwf	fsr2l,c
  2896  012350  0E01               	movlw	high _C
  2897  012352  20F4               	addwfc	prodh,w,c
  2898  012354  6EDA               	movwf	fsr2h,c
  2899  012356  006F FF7B FFE6     	movff	postinc2,postinc1
  2900  01235C  006F FF7B FFE6     	movff	postinc2,postinc1
  2901  012362  006F FF7B FFE6     	movff	postinc2,postinc1
  2902  012368  006F FF7B FFE6     	movff	postinc2,postinc1
  2903                           
  2904                           ;stkvar	_i @ sp[(-11)+2]
  2905  01236E  0EF7               	movlw	-9
  2906  012370  50E3               	movf	plusw1,w,c
  2907  012372  6EE6               	movwf	postinc1,c
  2908  012374  ECB6  F0C6         	call	_get_raw_result	;wreg free
  2909  012378  0060  F0CB  FFE6   	movff	btemp,postinc1
  2910  01237E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2911  012384  0E92               	movlw	low STR_9
  2912  012386  6EE6               	movwf	postinc1,c
  2913  012388  0EFF               	movlw	high STR_9
  2914  01238A  6EE6               	movwf	postinc1,c
  2915  01238C  0E00               	movlw	0
  2916  01238E  6EE6               	movwf	postinc1,c
  2917  012390  0E00               	movlw	0
  2918  012392  6EE6               	movwf	postinc1,c
  2919  012394  EC31  F0C4         	call	_get_vterm_ptr	;wreg free
  2920  012398  0060  F0CB  FFE6   	movff	btemp,postinc1
  2921  01239E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2922  0123A4  0E0C               	movlw	12
  2923  0123A6  6EE6               	movwf	postinc1,c
  2924  0123A8  ECD1  F0B7         	call	_sprintf	;wreg free
  2925                           
  2926                           ;main.c: 307:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d  ", get_raw_result(j), C.
      +                          calc[j], get_switch(SENTER));
  2927  0123AC  0E03               	movlw	3
  2928  0123AE  6EE6               	movwf	postinc1,c
  2929  0123B0  ECDB  F0C4         	call	_get_switch	;wreg free
  2930  0123B4  5032               	movf	btemp^0,w,c
  2931  0123B6  6EE6               	movwf	postinc1,c
  2932  0123B8  0E00               	movlw	0
  2933  0123BA  6EE6               	movwf	postinc1,c
  2934                           
  2935                           ;stkvar	_j @ sp[(-7)+1]
  2936  0123BC  0EFA               	movlw	-6
  2937  0123BE  50E3               	movf	plusw1,w,c
  2938  0123C0  0D04               	mullw	4
  2939  0123C2  0E00               	movlw	low _C
  2940  0123C4  24F3               	addwf	243,w,c
  2941  0123C6  6ED9               	movwf	fsr2l,c
  2942  0123C8  0E01               	movlw	high _C
  2943  0123CA  20F4               	addwfc	prodh,w,c
  2944  0123CC  6EDA               	movwf	fsr2h,c
  2945  0123CE  006F FF7B FFE6     	movff	postinc2,postinc1
  2946  0123D4  006F FF7B FFE6     	movff	postinc2,postinc1
  2947  0123DA  006F FF7B FFE6     	movff	postinc2,postinc1
  2948  0123E0  006F FF7B FFE6     	movff	postinc2,postinc1
  2949                           
  2950                           ;stkvar	_j @ sp[(-11)+1]
  2951  0123E6  0EF6               	movlw	-10
  2952  0123E8  50E3               	movf	plusw1,w,c
  2953  0123EA  6EE6               	movwf	postinc1,c
  2954  0123EC  ECB6  F0C6         	call	_get_raw_result	;wreg free
  2955  0123F0  0060  F0CB  FFE6   	movff	btemp,postinc1
  2956  0123F6  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2957  0123FC  0E92               	movlw	low STR_9
  2958  0123FE  6EE6               	movwf	postinc1,c
  2959  012400  0EFF               	movlw	high STR_9
  2960  012402  6EE6               	movwf	postinc1,c
  2961  012404  0E00               	movlw	0
  2962  012406  6EE6               	movwf	postinc1,c
  2963  012408  0E01               	movlw	1
  2964  01240A  6EE6               	movwf	postinc1,c
  2965  01240C  EC31  F0C4         	call	_get_vterm_ptr	;wreg free
  2966  012410  0060  F0CB  FFE6   	movff	btemp,postinc1
  2967  012416  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2968  01241C  0E0C               	movlw	12
  2969  01241E  6EE6               	movwf	postinc1,c
  2970  012420  ECD1  F0B7         	call	_sprintf	;wreg free
  2971                           
  2972                           ;main.c: 308:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(k), C
      +                          .calc[k], inp_index + 1);
  2973                           ;stkvar	_inp_index @ sp[(-5)+3]
  2974  012424  0EFE               	movlw	-2
  2975  012426  50E3               	movf	plusw1,w,c
  2976  012428  6E3C               	movwf	(btemp+10)^0,c
  2977  01242A  6A3D               	clrf	(btemp+11)^0,c
  2978  01242C  0E01               	movlw	1
  2979  01242E  263C               	addwf	(btemp+10)^0,f,c
  2980  012430  0E00               	movlw	0
  2981  012432  223D               	addwfc	(btemp+11)^0,f,c
  2982  012434  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  2983  01243A  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  2984                           
  2985                           ;stkvar	_k @ sp[(-7)+0]
  2986  012440  0EF9               	movlw	-7
  2987  012442  50E3               	movf	plusw1,w,c
  2988  012444  0D04               	mullw	4
  2989  012446  0E00               	movlw	low _C
  2990  012448  24F3               	addwf	243,w,c
  2991  01244A  6ED9               	movwf	fsr2l,c
  2992  01244C  0E01               	movlw	high _C
  2993  01244E  20F4               	addwfc	prodh,w,c
  2994  012450  6EDA               	movwf	fsr2h,c
  2995  012452  006F FF7B FFE6     	movff	postinc2,postinc1
  2996  012458  006F FF7B FFE6     	movff	postinc2,postinc1
  2997  01245E  006F FF7B FFE6     	movff	postinc2,postinc1
  2998  012464  006F FF7B FFE6     	movff	postinc2,postinc1
  2999                           
  3000                           ;stkvar	_k @ sp[(-11)+0]
  3001  01246A  0EF5               	movlw	-11
  3002  01246C  50E3               	movf	plusw1,w,c
  3003  01246E  6EE6               	movwf	postinc1,c
  3004  012470  ECB6  F0C6         	call	_get_raw_result	;wreg free
  3005  012474  0060  F0CB  FFE6   	movff	btemp,postinc1
  3006  01247A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3007  012480  0E81               	movlw	low STR_11
  3008  012482  6EE6               	movwf	postinc1,c
  3009  012484  0EFF               	movlw	high STR_11
  3010  012486  6EE6               	movwf	postinc1,c
  3011  012488  0E00               	movlw	0
  3012  01248A  6EE6               	movwf	postinc1,c
  3013  01248C  0E02               	movlw	2
  3014  01248E  6EE6               	movwf	postinc1,c
  3015  012490  EC31  F0C4         	call	_get_vterm_ptr	;wreg free
  3016  012494  0060  F0CB  FFE6   	movff	btemp,postinc1
  3017  01249A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3018  0124A0  0E0C               	movlw	12
  3019  0124A2  6EE6               	movwf	postinc1,c
  3020  0124A4  ECD1  F0B7         	call	_sprintf	;wreg free
  3021                           
  3022                           ;main.c: 309:      break;
  3023  0124A8  D015               	goto	l10916
  3024  0124AA                     l10914:
  3025  0124AA  0100               	movlb	0	; () banked
  3026  0124AC  51EF               	movf	_H& (0+255),w,b
  3027  0124AE  6E3C               	movwf	(btemp+10)^0,c
  3028  0124B0  6A3D               	clrf	(btemp+11)^0,c
  3029                           
  3030                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3031                           ; Switch size 1, requested type "simple"
  3032                           ; Number of cases is 1, Range of values is 0 to 0
  3033                           ; switch strategies available:
  3034                           ; Name         Instructions Cycles
  3035                           ; simple_byte            4     3 (average)
  3036                           ;	Chosen strategy is simple_byte
  3037  0124B2  503D               	movf	(btemp+11)^0,w,c
  3038  0124B4  0A00               	xorlw	0	; case 0
  3039  0124B6  A4D8               	btfss	status,2,c
  3040  0124B8  D00D               	goto	l10916
  3041                           
  3042                           ; BSR set to: 0
  3043                           ; Switch size 1, requested type "simple"
  3044                           ; Number of cases is 4, Range of values is 0 to 3
  3045                           ; switch strategies available:
  3046                           ; Name         Instructions Cycles
  3047                           ; simple_byte           13     7 (average)
  3048                           ;	Chosen strategy is simple_byte
  3049  0124BA  503C               	movf	(btemp+10)^0,w,c
  3050  0124BC  0A00               	xorlw	0	; case 0
  3051  0124BE  B4D8               	btfsc	status,2,c
  3052  0124C0  D61B               	goto	l1280
  3053  0124C2  0A01               	xorlw	1	; case 1
  3054  0124C4  B4D8               	btfsc	status,2,c
  3055  0124C6  D5B5               	goto	l1278
  3056  0124C8  0A03               	xorlw	3	; case 2
  3057  0124CA  B4D8               	btfsc	status,2,c
  3058  0124CC  D69C               	goto	l1281
  3059  0124CE  0A01               	xorlw	1	; case 3
  3060  0124D0  B4D8               	btfsc	status,2,c
  3061  0124D2  D6FC               	goto	l10900
  3062  0124D4                     l10916:
  3063                           
  3064                           ;main.c: 313:     clear_hid_pflags(&H);
  3065  0124D4  0EEF               	movlw	_H& (0+255)
  3066  0124D6  6EE6               	movwf	postinc1,c
  3067  0124D8  EC2D  F0C6         	call	_clear_hid_pflags	;wreg free
  3068                           
  3069                           ;main.c: 315:    StartTimer(TMR_DISPLAY, 250);
  3070  0124DC  0EFA               	movlw	250
  3071  0124DE  6EE6               	movwf	postinc1,c
  3072  0124E0  0E00               	movlw	0
  3073  0124E2  6EE6               	movwf	postinc1,c
  3074  0124E4  0E0A               	movlw	10
  3075  0124E6  6EE6               	movwf	postinc1,c
  3076  0124E8  EC2D  F0C3         	call	_StartTimer	;wreg free
  3077                           
  3078                           ;main.c: 316:    update_lcd(0);
  3079  0124EC  0E00               	movlw	0
  3080  0124EE  6EE6               	movwf	postinc1,c
  3081  0124F0  EC4A  F0B7         	call	_update_lcd	;wreg free
  3082  0124F4                     l10922:
  3083                           
  3084                           ;main.c: 322:   check_help(V.flipper);
  3085  0124F4  0102               	movlb	2	; () banked
  3086  0124F6  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  3087  0124F8  6EE6               	movwf	postinc1,c
  3088  0124FA  ECBC  F0AD         	call	_check_help	;wreg free
  3089                           
  3090                           ;main.c: 324:   if (check_enter_button(&H)) {
  3091  0124FE  0EEF               	movlw	_H& (0+255)
  3092  012500  6EE6               	movwf	postinc1,c
  3093  012502  ECCE  F0C2         	call	_check_enter_button	;wreg free
  3094  012506  5032               	movf	btemp^0,w,c
  3095  012508  B4D8               	btfsc	status,2,c
  3096  01250A  D062               	goto	l1285
  3097                           
  3098                           ;main.c: 325:    V.calib = 0;
  3099  01250C  0102               	movlb	2	; () banked
  3100  01250E  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  3101                           
  3102                           ; BSR set to: 2
  3103                           ;main.c: 326:    inp_index += 3;
  3104                           ;stkvar	_inp_index @ sp[(-5)+3]
  3105  012510  0EFE               	movlw	-2
  3106  012512  006F FF8C  F032    	movff	plusw1,btemp
  3107  012518  0E03               	movlw	3
  3108  01251A  2632               	addwf	btemp^0,f,c
  3109  01251C  0EFE               	movlw	-2
  3110  01251E  0060  F0CB  FFE3   	movff	btemp,plusw1
  3111                           
  3112                           ;main.c: 327:    if (inp_index > 9)
  3113                           ;stkvar	_inp_index @ sp[(-5)+3]
  3114  012524  0EFE               	movlw	-2
  3115  012526  006F FF8C  F032    	movff	plusw1,btemp
  3116  01252C  0E09               	movlw	9
  3117  01252E  6432               	cpfsgt	btemp^0,c
  3118  012530  D03A               	goto	l10950
  3119                           
  3120                           ; BSR set to: 2
  3121                           ;main.c: 328:     inp_index = 0;
  3122                           ;stkvar	_inp_index @ sp[(-5)+3]
  3123  012532  0EFE               	movlw	-2
  3124  012534  6AE3               	clrf	plusw1,c
  3125  012536  D037               	goto	l10950
  3126  012538                     l10932:
  3127                           
  3128                           ; BSR set to: 2
  3129                           ;main.c: 331:     i = C_BATT;
  3130                           ;stkvar	_i @ sp[(-5)+2]
  3131  012538  0EFD               	movlw	-3
  3132  01253A  6AE3               	clrf	plusw1,c
  3133                           
  3134                           ; BSR set to: 2
  3135                           ;main.c: 332:     j = C_PV;
  3136                           ;stkvar	_j @ sp[(-5)+1]
  3137  01253C  0EFC               	movlw	-4
  3138  01253E  6AE3               	clrf	plusw1,c
  3139  012540  2AE3               	incf	plusw1,f,c
  3140                           
  3141                           ; BSR set to: 2
  3142                           ;main.c: 333:     k = V_CC;
  3143                           ;stkvar	_k @ sp[(-5)+0]
  3144  012542  0EFB               	movlw	-5
  3145  012544  6AE3               	clrf	plusw1,c
  3146  012546  82E3               	bsf	plusw1,1,c
  3147                           
  3148                           ;main.c: 334:     break;
  3149  012548  D043               	goto	l1285
  3150  01254A                     l10938:
  3151                           
  3152                           ; BSR set to: 2
  3153                           ;main.c: 336:     i = V_BAT;
  3154                           ;stkvar	_i @ sp[(-5)+2]
  3155  01254A  0EFD               	movlw	-3
  3156  01254C  6AE3               	clrf	plusw1,c
  3157  01254E  84E3               	bsf	plusw1,2,c
  3158                           
  3159                           ;main.c: 337:     j = V_PV;
  3160                           ;stkvar	_j @ sp[(-5)+1]
  3161  012550  0EFC               	movlw	-4
  3162  012552  6AE3               	clrf	plusw1,c
  3163  012554  80E3               	bsf	plusw1,0,c
  3164  012556  84E3               	bsf	plusw1,2,c	;indir
  3165                           
  3166                           ;main.c: 338:     k = V_CBUS;
  3167                           ;stkvar	_k @ sp[(-5)+0]
  3168  012558  0EFB               	movlw	-5
  3169  01255A  6AE3               	clrf	plusw1,c
  3170  01255C  82E3               	bsf	plusw1,1,c
  3171  01255E  84E3               	bsf	plusw1,2,c	;indir
  3172                           
  3173                           ;main.c: 339:     break;
  3174  012560  D037               	goto	l1285
  3175  012562                     l10940:
  3176                           
  3177                           ; BSR set to: 2
  3178                           ;main.c: 341:     i = V_BBAT;
  3179                           ;stkvar	_i @ sp[(-5)+2]
  3180  012562  0EFD               	movlw	-3
  3181  012564  6AE3               	clrf	plusw1,c
  3182  012566  82E3               	bsf	plusw1,1,c
  3183  012568  86E3               	bsf	plusw1,3,c	;indir
  3184                           
  3185                           ; BSR set to: 2
  3186                           ;main.c: 342:     j = V_TEMP;
  3187  01256A  0E0B               	movlw	11
  3188  01256C  6E3D               	movwf	(btemp+11)^0,c
  3189                           
  3190                           ;stkvar	_j @ sp[(-5)+1]
  3191  01256E  0EFC               	movlw	-4
  3192  012570  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  3193                           
  3194                           ; BSR set to: 2
  3195                           ;main.c: 343:     k = V_INVERTER;
  3196                           ;stkvar	_k @ sp[(-5)+0]
  3197  012576  0EFB               	movlw	-5
  3198  012578  6AE3               	clrf	plusw1,c
  3199  01257A  84E3               	bsf	plusw1,2,c
  3200  01257C  86E3               	bsf	plusw1,3,c	;indir
  3201                           
  3202                           ;main.c: 344:     break;
  3203  01257E  D028               	goto	l1285
  3204  012580                     l10946:
  3205                           
  3206                           ; BSR set to: 2
  3207                           ;main.c: 346:     i = channel_ANB5;
  3208  012580  0E0D               	movlw	13
  3209  012582  6E3D               	movwf	(btemp+11)^0,c
  3210                           
  3211                           ;stkvar	_i @ sp[(-5)+2]
  3212  012584  0EFD               	movlw	-3
  3213  012586  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  3214                           
  3215                           ;main.c: 347:     j = channel_ANB5;
  3216  01258C  0E0D               	movlw	13
  3217  01258E  6E3D               	movwf	(btemp+11)^0,c
  3218                           
  3219                           ;stkvar	_j @ sp[(-5)+1]
  3220  012590  0EFC               	movlw	-4
  3221  012592  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  3222                           
  3223                           ;main.c: 348:     k = channel_ANB5;
  3224  012598  0E0D               	movlw	13
  3225  01259A  6E3D               	movwf	(btemp+11)^0,c
  3226                           
  3227                           ;stkvar	_k @ sp[(-5)+0]
  3228  01259C  0EFB               	movlw	-5
  3229  01259E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  3230                           
  3231                           ;main.c: 349:     break;
  3232  0125A4  D015               	goto	l1285
  3233  0125A6                     l10950:
  3234                           
  3235                           ; BSR set to: 2
  3236                           ;stkvar	_inp_index @ sp[(-5)+3]
  3237  0125A6  0EFE               	movlw	-2
  3238  0125A8  50E3               	movf	plusw1,w,c
  3239  0125AA  6E3C               	movwf	(btemp+10)^0,c
  3240  0125AC  6A3D               	clrf	(btemp+11)^0,c
  3241                           
  3242                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3243                           ; Switch size 1, requested type "simple"
  3244                           ; Number of cases is 1, Range of values is 0 to 0
  3245                           ; switch strategies available:
  3246                           ; Name         Instructions Cycles
  3247                           ; simple_byte            4     3 (average)
  3248                           ;	Chosen strategy is simple_byte
  3249  0125AE  503D               	movf	(btemp+11)^0,w,c
  3250  0125B0  0A00               	xorlw	0	; case 0
  3251  0125B2  A4D8               	btfss	status,2,c
  3252  0125B4  D00D               	goto	l1285
  3253                           
  3254                           ; BSR set to: 2
  3255                           ; Switch size 1, requested type "simple"
  3256                           ; Number of cases is 4, Range of values is 0 to 9
  3257                           ; switch strategies available:
  3258                           ; Name         Instructions Cycles
  3259                           ; simple_byte           13     7 (average)
  3260                           ;	Chosen strategy is simple_byte
  3261  0125B6  503C               	movf	(btemp+10)^0,w,c
  3262  0125B8  0A00               	xorlw	0	; case 0
  3263  0125BA  B4D8               	btfsc	status,2,c
  3264  0125BC  D7BD               	goto	l10932
  3265  0125BE  0A03               	xorlw	3	; case 3
  3266  0125C0  B4D8               	btfsc	status,2,c
  3267  0125C2  D7C3               	goto	l10938
  3268  0125C4  0A05               	xorlw	5	; case 6
  3269  0125C6  B4D8               	btfsc	status,2,c
  3270  0125C8  D7CC               	goto	l10940
  3271  0125CA  0A0F               	xorlw	15	; case 9
  3272  0125CC  B4D8               	btfsc	status,2,c
  3273  0125CE  D7D8               	goto	l10946
  3274  0125D0                     l1285:
  3275                           
  3276                           ;main.c: 358:   if (V.set_sequ) {
  3277  0125D0  0102               	movlb	2	; () banked
  3278  0125D2  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  3279  0125D4  D4E4               	goto	l10866
  3280                           
  3281                           ; BSR set to: 2
  3282                           ;main.c: 359:    if (TimerDone(TMR_INFO)) {
  3283  0125D6  0E07               	movlw	7
  3284  0125D8  6EE6               	movwf	postinc1,c
  3285  0125DA  EC3F  F0C6         	call	_TimerDone	;wreg free
  3286  0125DE  5032               	movf	btemp^0,w,c
  3287  0125E0  B4D8               	btfsc	status,2,c
  3288  0125E2  D00B               	goto	l10960
  3289                           
  3290                           ;main.c: 360:     V.set_sequ = 0;
  3291  0125E4  0102               	movlb	2	; () banked
  3292  0125E6  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  3293                           
  3294                           ; BSR set to: 2
  3295                           ;main.c: 361:     set_vterm(0);
  3296  0125E8  0E00               	movlw	0
  3297  0125EA  6EE6               	movwf	postinc1,c
  3298  0125EC  EC00  F0C7         	call	_set_vterm	;wreg free
  3299                           
  3300                           ; BSR set to: 5
  3301                           ;main.c: 362:     update_lcd(0);
  3302  0125F0  0E00               	movlw	0
  3303  0125F2  6EE6               	movwf	postinc1,c
  3304  0125F4  EC4A  F0B7         	call	_update_lcd	;wreg free
  3305                           
  3306                           ;main.c: 363:    } else {
  3307  0125F8  D4D2               	goto	l10866
  3308  0125FA                     l10960:
  3309                           
  3310                           ;main.c: 364:     set_vterm(2);
  3311  0125FA  0E02               	movlw	2
  3312  0125FC  6EE6               	movwf	postinc1,c
  3313  0125FE  EC00  F0C7         	call	_set_vterm	;wreg free
  3314                           
  3315                           ; BSR set to: 5
  3316                           ;main.c: 365:     update_lcd(2);
  3317  012602  0E02               	movlw	2
  3318  012604  6EE6               	movwf	postinc1,c
  3319  012606  EC4A  F0B7         	call	_update_lcd	;wreg free
  3320  01260A  D4C9               	goto	l10866
  3321  01260C                     __end_of_main:
  3322                           	opt callstack 0
  3323                           
  3324 ;; *************** function _static_soc *****************
  3325 ;; Defined at:
  3326 ;;		line 83 in file "mbmc.c"
  3327 ;; Parameters:    Size  Location     Type
  3328 ;;		None
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;		None
  3331 ;; Return value:  Size  Location     Type
  3332 ;;                  1  [STACK] void 
  3333 ;; Registers used:
  3334 ;;		wreg, status,2
  3335 ;; Tracked objects:
  3336 ;;		On entry : 3F/39
  3337 ;;		On exit  : 3F/1
  3338 ;;		Unchanged: 0/0
  3339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3344 ;;Total ram usage:        0 bytes
  3345 ;; Hardware stack levels used:    1
  3346 ;; Hardware stack levels required when called:    6
  3347 ;; This function calls:
  3348 ;;		Nothing
  3349 ;; This function is called by:
  3350 ;;		_main
  3351 ;; This function uses a reentrant model
  3352 ;;
  3353                           
  3354                           	psect	text1
  3355  018C36                     __ptext1:
  3356                           	opt callstack 0
  3357  018C36                     _static_soc:
  3358                           	opt callstack 24
  3359                           
  3360                           ;mbmc.c: 85:  C.static_ah = C.bank_ah;
  3361                           
  3362                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3363                           ;incstack = 0
  3364  018C36  C17C  F180         	movff	_C+124,_C+128
  3365  018C3A  C17D  F181         	movff	_C+125,_C+129
  3366  018C3E  C17E  F182         	movff	_C+126,_C+130
  3367  018C42  C17F  F183         	movff	_C+127,_C+131
  3368                           
  3369                           ;mbmc.c: 86:  C.runtime = 120;
  3370  018C46  0E00               	movlw	0
  3371  018C48  0101               	movlb	1	; () banked
  3372  018C4A  6F89               	movwf	(_C+137)& (0+255),b
  3373  018C4C  0E78               	movlw	120
  3374  018C4E  6F88               	movwf	(_C+136)& (0+255),b
  3375                           
  3376                           ;mbmc.c: 87:  C.soc = 100;
  3377  018C50  0E00               	movlw	0
  3378  018C52  6F8B               	movwf	(_C+139)& (0+255),b
  3379  018C54  0E64               	movlw	100
  3380  018C56  6F8A               	movwf	(_C+138)& (0+255),b
  3381                           
  3382                           ; BSR set to: 1
  3383                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  3384  018C58  0012               	return		;funcret
  3385  018C5A                     __end_of_static_soc:
  3386                           	opt callstack 0
  3387                           
  3388 ;; *************** function _start_switch_handler *****************
  3389 ;; Defined at:
  3390 ;;		line 119 in file "dio.c"
  3391 ;; Parameters:    Size  Location     Type
  3392 ;;		None
  3393 ;; Auto vars:     Size  Location     Type
  3394 ;;		None
  3395 ;; Return value:  Size  Location     Type
  3396 ;;                  1  [STACK] void 
  3397 ;; Registers used:
  3398 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  3399 ;; Tracked objects:
  3400 ;;		On entry : 1/4
  3401 ;;		On exit  : 3F/39
  3402 ;;		Unchanged: 0/0
  3403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3408 ;;Total ram usage:        0 bytes
  3409 ;; Hardware stack levels used:    1
  3410 ;; Hardware stack levels required when called:    7
  3411 ;; This function calls:
  3412 ;;		_INT1_SetInterruptHandler
  3413 ;; This function is called by:
  3414 ;;		_main
  3415 ;; This function uses a reentrant model
  3416 ;;
  3417                           
  3418                           	psect	text2
  3419  018D2E                     __ptext2:
  3420                           	opt callstack 0
  3421  018D2E                     _start_switch_handler:
  3422                           	opt callstack 23
  3423                           
  3424                           ;dio.c: 121:  (PIE5bits.INT1IE = 0);
  3425                           
  3426                           ; BSR set to: 1
  3427                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3428                           ;incstack = 0
  3429  018D2E  0139               	movlb	57	; () banked
  3430  018D30  9195               	bcf	149,0,b	;volatile
  3431                           
  3432                           ; BSR set to: 57
  3433                           ;dio.c: 122:  INT1_SetInterruptHandler(switch_handler);
  3434  018D32  0ECE               	movlw	low _switch_handler
  3435  018D34  6EE6               	movwf	postinc1,c
  3436  018D36  0E68               	movlw	high _switch_handler
  3437  018D38  6EE6               	movwf	postinc1,c
  3438  018D3A  0E01               	movlw	low (_switch_handler shr (0+16))
  3439  018D3C  6EE6               	movwf	postinc1,c
  3440  018D3E  EC67  F0C5         	call	_INT1_SetInterruptHandler	;wreg free
  3441                           
  3442                           ;dio.c: 123:  S.button[SNULL].sw = SW_INVALID;
  3443  018D42  0E02               	movlw	2
  3444  018D44  0100               	movlb	0	; () banked
  3445  018D46  6F83               	movwf	(_S+35)& (0+255),b	;volatile
  3446                           
  3447                           ; BSR set to: 0
  3448                           ;dio.c: 124:  (PIE5bits.INT1IE = 1);
  3449  018D48  0139               	movlb	57	; () banked
  3450  018D4A  8195               	bsf	149,0,b	;volatile
  3451                           
  3452                           ; BSR set to: 57
  3453                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  3454  018D4C  0012               	return		;funcret
  3455  018D4E                     __end_of_start_switch_handler:
  3456                           	opt callstack 0
  3457                           
  3458 ;; *************** function _start_adc_scan *****************
  3459 ;; Defined at:
  3460 ;;		line 33 in file "daq.c"
  3461 ;; Parameters:    Size  Location     Type
  3462 ;;		None
  3463 ;; Auto vars:     Size  Location     Type
  3464 ;;		None
  3465 ;; Return value:  Size  Location     Type
  3466 ;;                  1  [STACK] _Bool 
  3467 ;; Registers used:
  3468 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  3469 ;; Tracked objects:
  3470 ;;		On entry : 0/5
  3471 ;;		On exit  : 1/0
  3472 ;;		Unchanged: 0/0
  3473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3478 ;;Total ram usage:        0 bytes
  3479 ;; Hardware stack levels used:    1
  3480 ;; Hardware stack levels required when called:    7
  3481 ;; This function calls:
  3482 ;;		_ADCC_DischargeSampleCapacitor
  3483 ;;		_ADCC_SetADIInterruptHandler
  3484 ;;		_ADCC_SetADTIInterruptHandler
  3485 ;;		_ADCC_StartConversion
  3486 ;; This function is called by:
  3487 ;;		_main
  3488 ;; This function uses a reentrant model
  3489 ;;
  3490                           
  3491                           	psect	text3
  3492  017FD2                     __ptext3:
  3493                           	opt callstack 0
  3494  017FD2                     _start_adc_scan:
  3495                           	opt callstack 23
  3496                           
  3497                           ;daq.c: 35:  if (R.done)
  3498                           
  3499                           ; BSR set to: 57
  3500                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3501                           ;incstack = 0
  3502  017FD2  0100               	movlb	0	; () banked
  3503  017FD4  51EE               	movf	(_R+39)& (0+255),w,b	;volatile
  3504  017FD6  A4D8               	btfss	status,2,c
  3505  017FD8  0012               	return	
  3506                           
  3507                           ; BSR set to: 0
  3508                           ;daq.c: 38:  R.scan_index = 0;
  3509  017FDA  6BEB               	clrf	(_R+36)& (0+255),b	;volatile
  3510                           
  3511                           ; BSR set to: 0
  3512                           ;daq.c: 39:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  3513  017FDC  013A               	movlb	58	; () banked
  3514  017FDE  5140               	movf	64,w,b	;volatile
  3515  017FE0  006E F940  F032    	movff	14928,btemp	;volatile
  3516  017FE6  6A33               	clrf	(btemp+1)^0,c
  3517  017FE8  0060  F0C8  F033   	movff	btemp,btemp+1
  3518  017FEE  6A32               	clrf	btemp^0,c
  3519  017FF0  2632               	addwf	btemp^0,f,c
  3520  017FF2  0E00               	movlw	0
  3521  017FF4  2233               	addwfc	(btemp+1)^0,f,c
  3522  017FF6  0E77               	movlw	119
  3523  017FF8  1432               	andwf	btemp^0,w,c
  3524  017FFA  0100               	movlb	0	; () banked
  3525  017FFC  6FEC               	movwf	(_R+37)& (0+255),b	;volatile
  3526  017FFE  0E3C               	movlw	60
  3527  018000  1433               	andwf	(btemp+1)^0,w,c
  3528  018002  6FED               	movwf	(_R+38)& (0+255),b	;volatile
  3529                           
  3530                           ; BSR set to: 0
  3531                           ;daq.c: 40:  ADCC_SetADIInterruptHandler(adc_int_handler);
  3532  018004  0EA8               	movlw	low _adc_int_handler
  3533  018006  6EE6               	movwf	postinc1,c
  3534  018008  0E8F               	movlw	high _adc_int_handler
  3535  01800A  6EE6               	movwf	postinc1,c
  3536  01800C  0E01               	movlw	low (_adc_int_handler shr (0+16))
  3537  01800E  6EE6               	movwf	postinc1,c
  3538  018010  ECA3  F0C5         	call	_ADCC_SetADIInterruptHandler	;wreg free
  3539                           
  3540                           ;daq.c: 41:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  3541  018014  0EB2               	movlw	low _adc_int_t_handler
  3542  018016  6EE6               	movwf	postinc1,c
  3543  018018  0E7D               	movlw	high _adc_int_t_handler
  3544  01801A  6EE6               	movwf	postinc1,c
  3545  01801C  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  3546  01801E  6EE6               	movwf	postinc1,c
  3547  018020  EC8F  F0C5         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  3548                           
  3549                           ;daq.c: 42:  ADCC_DischargeSampleCapacitor();
  3550  018024  ECB1  F0C7         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  3551                           
  3552                           ; BSR set to: 62
  3553                           ;daq.c: 43:  ADCC_StartConversion(R.scan_index & 0xf);
  3554  018028  0100               	movlb	0	; () banked
  3555  01802A  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
  3556  01802C  0B0F               	andlw	15
  3557  01802E  6EE6               	movwf	postinc1,c
  3558  018030  EC6C  F0C7         	call	_ADCC_StartConversion	;wreg free
  3559                           
  3560                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  3561  018034  0012               	return		;funcret
  3562  018036                     __end_of_start_adc_scan:
  3563                           	opt callstack 0
  3564                           
  3565 ;; *************** function _ADCC_StartConversion *****************
  3566 ;; Defined at:
  3567 ;;		line 128 in file "mcc_generated_files/adcc.c"
  3568 ;; Parameters:    Size  Location     Type
  3569 ;;  channel         1  [STACK] enum E16136
  3570 ;; Auto vars:     Size  Location     Type
  3571 ;;		None
  3572 ;; Return value:  Size  Location     Type
  3573 ;;                  1  [STACK] void 
  3574 ;; Registers used:
  3575 ;;		fsr1l, fsr1h
  3576 ;; Tracked objects:
  3577 ;;		On entry : 3F/0
  3578 ;;		On exit  : 3F/3E
  3579 ;;		Unchanged: 0/0
  3580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3585 ;;Total ram usage:        0 bytes
  3586 ;; Hardware stack levels used:    1
  3587 ;; Hardware stack levels required when called:    6
  3588 ;; This function calls:
  3589 ;;		Nothing
  3590 ;; This function is called by:
  3591 ;;		_start_adc_scan
  3592 ;;		_adc_int_t_handler
  3593 ;; This function uses a reentrant model
  3594 ;;
  3595                           
  3596                           	psect	text4
  3597  018ED8                     __ptext4:
  3598                           	opt callstack 0
  3599  018ED8                     _ADCC_StartConversion:
  3600                           	opt callstack 6
  3601                           
  3602                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  3603                           ;stkvar	_channel @ sp[(0)+-1]
  3604                           
  3605                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3606                           ;incstack = 0
  3607  018ED8  0EFF               	movlw	-1
  3608  018EDA  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  3609                           
  3610                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  3611  018EE0  013E               	movlb	62	; () banked
  3612  018EE2  8FF8               	bsf	248,7,b	;volatile
  3613                           
  3614                           ; BSR set to: 62
  3615                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  3616  018EE4  81F8               	bsf	248,0,b	;volatile
  3617                           
  3618                           ; BSR set to: 62
  3619                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  3620  018EE6  52E5               	movf	postdec1,f,c
  3621  018EE8  0012               	return		;funcret
  3622  018EEA                     __end_of_ADCC_StartConversion:
  3623                           	opt callstack 0
  3624                           
  3625 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  3626 ;; Defined at:
  3627 ;;		line 189 in file "mcc_generated_files/adcc.c"
  3628 ;; Parameters:    Size  Location     Type
  3629 ;;		None
  3630 ;; Auto vars:     Size  Location     Type
  3631 ;;		None
  3632 ;; Return value:  Size  Location     Type
  3633 ;;                  1  [STACK] void 
  3634 ;; Registers used:
  3635 ;;		wreg, status,2
  3636 ;; Tracked objects:
  3637 ;;		On entry : 0/0
  3638 ;;		On exit  : 3F/3E
  3639 ;;		Unchanged: 0/0
  3640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3645 ;;Total ram usage:        0 bytes
  3646 ;; Hardware stack levels used:    1
  3647 ;; Hardware stack levels required when called:    6
  3648 ;; This function calls:
  3649 ;;		Nothing
  3650 ;; This function is called by:
  3651 ;;		_start_adc_scan
  3652 ;;		_adc_int_t_handler
  3653 ;; This function uses a reentrant model
  3654 ;;
  3655                           
  3656                           	psect	text5
  3657  018F62                     __ptext5:
  3658                           	opt callstack 0
  3659  018F62                     _ADCC_DischargeSampleCapacitor:
  3660                           	opt callstack 6
  3661                           
  3662                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  3663                           
  3664                           ; BSR set to: 62
  3665                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3666                           ;incstack = 0
  3667  018F62  0E3B               	movlw	59
  3668  018F64  013E               	movlb	62	; () banked
  3669  018F66  6FF1               	movwf	241,b	;volatile
  3670                           
  3671                           ; BSR set to: 62
  3672                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  3673  018F68  0012               	return		;funcret
  3674  018F6A                     __end_of_ADCC_DischargeSampleCapacitor:
  3675                           	opt callstack 0
  3676                           
  3677 ;; *************** function _srand *****************
  3678 ;; Defined at:
  3679 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  3680 ;; Parameters:    Size  Location     Type
  3681 ;;  s               2  [STACK] unsigned int 
  3682 ;; Auto vars:     Size  Location     Type
  3683 ;;		None
  3684 ;; Return value:  Size  Location     Type
  3685 ;;                  1  [STACK] void 
  3686 ;; Registers used:
  3687 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  3688 ;; Tracked objects:
  3689 ;;		On entry : 3F/0
  3690 ;;		On exit  : 3F/1
  3691 ;;		Unchanged: 0/0
  3692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3697 ;;Total ram usage:        0 bytes
  3698 ;; Hardware stack levels used:    1
  3699 ;; Hardware stack levels required when called:    6
  3700 ;; This function calls:
  3701 ;;		Nothing
  3702 ;; This function is called by:
  3703 ;;		_main
  3704 ;; This function uses a reentrant model
  3705 ;;
  3706                           
  3707                           	psect	text6
  3708  01873A                     __ptext6:
  3709                           	opt callstack 0
  3710  01873A                     _srand:
  3711                           	opt callstack 24
  3712                           
  3713                           ;stkvar	_s @ sp[(0)+-2]
  3714                           
  3715                           ; BSR set to: 62
  3716                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3717                           ;incstack = 0
  3718  01873A  0EFE               	movlw	-2
  3719  01873C  50E3               	movf	plusw1,w,c
  3720  01873E  0FFF               	addlw	255
  3721  018740  6E3C               	movwf	(btemp+10)^0,c
  3722  018742  0EFF               	movlw	-1
  3723  018744  006F FF8C  F03D    	movff	plusw1,btemp+11
  3724  01874A  0EFF               	movlw	255
  3725  01874C  223D               	addwfc	(btemp+11)^0,f,c
  3726  01874E  0060  F0F0  F1F3   	movff	btemp+10,_seed
  3727  018754  0060  F0F4  F1F4   	movff	btemp+11,_seed+1
  3728  01875A  0101               	movlb	1	; () banked
  3729  01875C  6BF5               	clrf	(_seed+2)& (0+255),b
  3730  01875E  6BF6               	clrf	(_seed+3)& (0+255),b
  3731  018760  6BF7               	clrf	(_seed+4)& (0+255),b
  3732  018762  6BF8               	clrf	(_seed+5)& (0+255),b
  3733  018764  6BF9               	clrf	(_seed+6)& (0+255),b
  3734  018766  6BFA               	clrf	(_seed+7)& (0+255),b
  3735                           
  3736                           ; BSR set to: 1
  3737                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  3738  018768  52E5               	movf	postdec1,f,c
  3739  01876A  52E5               	movf	postdec1,f,c
  3740  01876C  0012               	return		;funcret
  3741  01876E                     __end_of_srand:
  3742                           	opt callstack 0
  3743                           
  3744 ;; *************** function _init_display *****************
  3745 ;; Defined at:
  3746 ;;		line 37 in file "eadog.c"
  3747 ;; Parameters:    Size  Location     Type
  3748 ;;		None
  3749 ;; Auto vars:     Size  Location     Type
  3750 ;;		None
  3751 ;; Return value:  Size  Location     Type
  3752 ;;                  1  [STACK] void 
  3753 ;; Registers used:
  3754 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  3755 ;; Tracked objects:
  3756 ;;		On entry : 0/2
  3757 ;;		On exit  : 3F/3D
  3758 ;;		Unchanged: 0/0
  3759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3764 ;;Total ram usage:        0 bytes
  3765 ;; Hardware stack levels used:    1
  3766 ;; Hardware stack levels required when called:    8
  3767 ;; This function calls:
  3768 ;;		_ringBufS_init
  3769 ;;		_send_lcd_cmd
  3770 ;;		_send_lcd_cmd_long
  3771 ;;		_wdtdelay
  3772 ;; This function is called by:
  3773 ;;		_main
  3774 ;; This function uses a reentrant model
  3775 ;;
  3776                           
  3777                           	psect	text7
  3778  0172A2                     __ptext7:
  3779                           	opt callstack 0
  3780  0172A2                     _init_display:
  3781                           	opt callstack 22
  3782                           
  3783                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
  3784                           
  3785                           ; BSR set to: 1
  3786                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3787                           ;incstack = 0
  3788  0172A2  0E94               	movlw	low _ring_buf1
  3789  0172A4  0100               	movlb	0	; () banked
  3790  0172A6  6FA7               	movwf	(_spi_link+6)& (0+255),b	;volatile
  3791  0172A8  0E03               	movlw	high _ring_buf1
  3792  0172AA  6FA8               	movwf	(_spi_link+7)& (0+255),b	;volatile
  3793                           
  3794                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
  3795  0172AC  0E00               	movlw	low _ring_buf2
  3796  0172AE  6FA5               	movwf	(_spi_link+4)& (0+255),b	;volatile
  3797  0172B0  0E04               	movlw	high _ring_buf2
  3798  0172B2  6FA6               	movwf	(_spi_link+5)& (0+255),b	;volatile
  3799                           
  3800                           ; BSR set to: 0
  3801                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
  3802  0172B4  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  3803  0172BA  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  3804  0172C0  ECC7  F0C4         	call	_ringBufS_init	;wreg free
  3805                           
  3806                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
  3807  0172C4  0060  F297  FFE6   	movff	_spi_link+4,postinc1
  3808  0172CA  0060  F29B  FFE6   	movff	_spi_link+5,postinc1
  3809  0172D0  ECC7  F0C4         	call	_ringBufS_init	;wreg free
  3810                           
  3811                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
  3812  0172D4  84BE               	bsf	190,2,c	;volatile
  3813  0172D6  84BC               	bsf	188,2,c	;volatile
  3814                           
  3815                           ;eadog.c: 46:  wdtdelay(350000);
  3816  0172D8  0E30               	movlw	48
  3817  0172DA  6EE6               	movwf	postinc1,c
  3818  0172DC  0E57               	movlw	87
  3819  0172DE  6EE6               	movwf	postinc1,c
  3820  0172E0  0E05               	movlw	5
  3821  0172E2  6EE6               	movwf	postinc1,c
  3822  0172E4  0E00               	movlw	0
  3823  0172E6  6EE6               	movwf	postinc1,c
  3824  0172E8  EC0C  F0C1         	call	_wdtdelay	;wreg free
  3825                           
  3826                           ; BSR set to: 0
  3827                           ;eadog.c: 47:  send_lcd_cmd(0x39);
  3828  0172EC  0E39               	movlw	57
  3829  0172EE  6EE6               	movwf	postinc1,c
  3830  0172F0  ECB3  F0C4         	call	_send_lcd_cmd	;wreg free
  3831                           
  3832                           ; BSR set to: 0
  3833                           ;eadog.c: 48:  send_lcd_cmd(0x1d);
  3834  0172F4  0E1D               	movlw	29
  3835  0172F6  6EE6               	movwf	postinc1,c
  3836  0172F8  ECB3  F0C4         	call	_send_lcd_cmd	;wreg free
  3837                           
  3838                           ; BSR set to: 0
  3839                           ;eadog.c: 49:  send_lcd_cmd(0x50);
  3840  0172FC  0E50               	movlw	80
  3841  0172FE  6EE6               	movwf	postinc1,c
  3842  017300  ECB3  F0C4         	call	_send_lcd_cmd	;wreg free
  3843                           
  3844                           ; BSR set to: 0
  3845                           ;eadog.c: 50:  send_lcd_cmd(0x6c);
  3846  017304  0E6C               	movlw	108
  3847  017306  6EE6               	movwf	postinc1,c
  3848  017308  ECB3  F0C4         	call	_send_lcd_cmd	;wreg free
  3849                           
  3850                           ; BSR set to: 0
  3851                           ;eadog.c: 51:  send_lcd_cmd(0x76);
  3852  01730C  0E76               	movlw	118
  3853  01730E  6EE6               	movwf	postinc1,c
  3854  017310  ECB3  F0C4         	call	_send_lcd_cmd	;wreg free
  3855                           
  3856                           ; BSR set to: 0
  3857                           ;eadog.c: 52:  send_lcd_cmd_long(0x38);
  3858  017314  0E38               	movlw	56
  3859  017316  6EE6               	movwf	postinc1,c
  3860  017318  EC9F  F0C4         	call	_send_lcd_cmd_long	;wreg free
  3861                           
  3862                           ; BSR set to: 0
  3863                           ;eadog.c: 53:  send_lcd_cmd(0x0f);
  3864  01731C  0E0F               	movlw	15
  3865  01731E  6EE6               	movwf	postinc1,c
  3866  017320  ECB3  F0C4         	call	_send_lcd_cmd	;wreg free
  3867                           
  3868                           ; BSR set to: 0
  3869                           ;eadog.c: 54:  send_lcd_cmd_long(0x01);
  3870  017324  0E01               	movlw	1
  3871  017326  6EE6               	movwf	postinc1,c
  3872  017328  EC9F  F0C4         	call	_send_lcd_cmd_long	;wreg free
  3873                           
  3874                           ; BSR set to: 0
  3875                           ;eadog.c: 55:  send_lcd_cmd(0x02);
  3876  01732C  0E02               	movlw	2
  3877  01732E  6EE6               	movwf	postinc1,c
  3878  017330  ECB3  F0C4         	call	_send_lcd_cmd	;wreg free
  3879                           
  3880                           ; BSR set to: 0
  3881                           ;eadog.c: 56:  send_lcd_cmd(0x06);
  3882  017334  0E06               	movlw	6
  3883  017336  6EE6               	movwf	postinc1,c
  3884  017338  ECB3  F0C4         	call	_send_lcd_cmd	;wreg free
  3885                           
  3886                           ; BSR set to: 0
  3887                           ;eadog.c: 57:  wdtdelay(30);
  3888  01733C  0E1E               	movlw	30
  3889  01733E  6EE6               	movwf	postinc1,c
  3890  017340  0E00               	movlw	0
  3891  017342  6EE6               	movwf	postinc1,c
  3892  017344  0E00               	movlw	0
  3893  017346  6EE6               	movwf	postinc1,c
  3894  017348  0E00               	movlw	0
  3895  01734A  6EE6               	movwf	postinc1,c
  3896  01734C  EC0C  F0C1         	call	_wdtdelay	;wreg free
  3897                           
  3898                           ; BSR set to: 0
  3899                           ;eadog.c: 58:  SPI1CON2 = 0x02;
  3900  017350  0E02               	movlw	2
  3901  017352  013D               	movlb	61	; () banked
  3902  017354  6F16               	movwf	22,b	;volatile
  3903                           
  3904                           ; BSR set to: 61
  3905                           ;eadog.c: 59:  SPI1CON1 = 0x40;
  3906  017356  0E40               	movlw	64
  3907  017358  6F15               	movwf	21,b	;volatile
  3908                           
  3909                           ; BSR set to: 61
  3910                           ;eadog.c: 60:  SPI1CON0 = 0x83;
  3911  01735A  0E83               	movlw	131
  3912  01735C  6F14               	movwf	20,b	;volatile
  3913                           
  3914                           ; BSR set to: 61
  3915                           ;eadog.c: 61:  SPI1INTFbits.SPI1TXUIF = 0;
  3916  01735E  931A               	bcf	26,1,b	;volatile
  3917                           
  3918                           ; BSR set to: 61
  3919                           ;eadog.c: 62:  DMA1CON1bits.DMODE = 0;
  3920  017360  0E3F               	movlw	-193
  3921  017362  013B               	movlb	59	; () banked
  3922  017364  17FD               	andwf	253,f,b	;volatile
  3923                           
  3924                           ; BSR set to: 59
  3925                           ;eadog.c: 63:  DMA1CON1bits.DSTP = 0;
  3926  017366  9BFD               	bcf	253,5,b	;volatile
  3927                           
  3928                           ; BSR set to: 59
  3929                           ;eadog.c: 64:  DMA1CON1bits.SMODE = 1;
  3930  017368  51FD               	movf	253,w,b	;volatile
  3931  01736A  0BF9               	andlw	-7
  3932  01736C  0902               	iorlw	2
  3933  01736E  6FFD               	movwf	253,b	;volatile
  3934                           
  3935                           ; BSR set to: 59
  3936                           ;eadog.c: 65:  DMA1CON1bits.SMR = 0;
  3937  017370  0EE7               	movlw	-25
  3938  017372  17FD               	andwf	253,f,b	;volatile
  3939                           
  3940                           ; BSR set to: 59
  3941                           ;eadog.c: 66:  DMA1CON1bits.SSTP = 1;
  3942  017374  81FD               	bsf	253,0,b	;volatile
  3943                           
  3944                           ; BSR set to: 59
  3945                           ;eadog.c: 67:  DMA1SSA = (uint32_t) & ring_buf1;
  3946  017376  0E94               	movlw	low _ring_buf1
  3947  017378  6FF9               	movwf	249,b	;volatile
  3948  01737A  0E03               	movlw	high _ring_buf1
  3949  01737C  6FFA               	movwf	250,b	;volatile
  3950  01737E  0E00               	movlw	low (_ring_buf1 shr (0+16))
  3951  017380  6FFB               	movwf	251,b	;volatile
  3952                           
  3953                           ; BSR set to: 59
  3954                           ;eadog.c: 68:  DMA1CON0bits.DGO = 0;
  3955  017382  9BFC               	bcf	252,5,b	;volatile
  3956                           
  3957                           ; BSR set to: 59
  3958                           ;eadog.c: 69:  SPI1INTFbits.SPI1TXUIF = 1;
  3959  017384  013D               	movlb	61	; () banked
  3960  017386  831A               	bsf	26,1,b	;volatile
  3961                           
  3962                           ; BSR set to: 61
  3963                           ;eadog.c: 70:  LATEbits.LATE2 = 0;
  3964  017388  94BE               	bcf	190,2,c	;volatile
  3965                           
  3966                           ; BSR set to: 61
  3967                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  3968  01738A  0012               	return		;funcret
  3969  01738C                     __end_of_init_display:
  3970                           	opt callstack 0
  3971                           
  3972 ;; *************** function _send_lcd_cmd_long *****************
  3973 ;; Defined at:
  3974 ;;		line 114 in file "eadog.c"
  3975 ;; Parameters:    Size  Location     Type
  3976 ;;  cmd             1  [STACK] const unsigned char 
  3977 ;; Auto vars:     Size  Location     Type
  3978 ;;		None
  3979 ;; Return value:  Size  Location     Type
  3980 ;;                  1  [STACK] void 
  3981 ;; Registers used:
  3982 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  3983 ;; Tracked objects:
  3984 ;;		On entry : 3F/0
  3985 ;;		On exit  : 3F/0
  3986 ;;		Unchanged: 0/0
  3987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3992 ;;Total ram usage:        0 bytes
  3993 ;; Hardware stack levels used:    1
  3994 ;; Hardware stack levels required when called:    7
  3995 ;; This function calls:
  3996 ;;		_SPI1_Exchange8bit
  3997 ;;		_wdtdelay
  3998 ;; This function is called by:
  3999 ;;		_init_display
  4000 ;; This function uses a reentrant model
  4001 ;;
  4002                           
  4003                           	psect	text8
  4004  01893E                     __ptext8:
  4005                           	opt callstack 0
  4006  01893E                     _send_lcd_cmd_long:
  4007                           	opt callstack 22
  4008                           
  4009                           ; BSR set to: 61
  4010                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4011                           ;incstack = 0
  4012                           ;eadog.c: 114: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 115: {;eadog.c:
      +                           116:  do { LATCbits.LATC1 = 0; } while(0);
  4013  01893E  92BC               	bcf	188,1,c	;volatile
  4014                           
  4015                           ;eadog.c: 117:  do { LATCbits.LATC2 = 0; } while(0);
  4016  018940  94BC               	bcf	188,2,c	;volatile
  4017                           
  4018                           ;eadog.c: 118:  SPI1_Exchange8bit(cmd);
  4019                           ;stkvar	_cmd @ sp[(0)+-1]
  4020  018942  0EFF               	movlw	-1
  4021  018944  50E3               	movf	plusw1,w,c
  4022  018946  6EE6               	movwf	postinc1,c
  4023  018948  ECA7  F0C6         	call	_SPI1_Exchange8bit	;wreg free
  4024                           
  4025                           ; BSR set to: 57
  4026                           ;eadog.c: 119:  wdtdelay(800);
  4027  01894C  0E20               	movlw	32
  4028  01894E  6EE6               	movwf	postinc1,c
  4029  018950  0E03               	movlw	3
  4030  018952  6EE6               	movwf	postinc1,c
  4031  018954  0E00               	movlw	0
  4032  018956  6EE6               	movwf	postinc1,c
  4033  018958  0E00               	movlw	0
  4034  01895A  6EE6               	movwf	postinc1,c
  4035  01895C  EC0C  F0C1         	call	_wdtdelay	;wreg free
  4036                           
  4037                           ; BSR set to: 0
  4038  018960  82BC               	bsf	188,1,c	;volatile
  4039                           
  4040                           ; BSR set to: 0
  4041                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  4042  018962  52E5               	movf	postdec1,f,c
  4043  018964  0012               	return		;funcret
  4044  018966                     __end_of_send_lcd_cmd_long:
  4045                           	opt callstack 0
  4046                           
  4047 ;; *************** function _send_lcd_cmd *****************
  4048 ;; Defined at:
  4049 ;;		line 102 in file "eadog.c"
  4050 ;; Parameters:    Size  Location     Type
  4051 ;;  cmd             1  [STACK] const unsigned char 
  4052 ;; Auto vars:     Size  Location     Type
  4053 ;;		None
  4054 ;; Return value:  Size  Location     Type
  4055 ;;                  1  [STACK] void 
  4056 ;; Registers used:
  4057 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  4058 ;; Tracked objects:
  4059 ;;		On entry : 3F/0
  4060 ;;		On exit  : 3F/0
  4061 ;;		Unchanged: 0/0
  4062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4067 ;;Total ram usage:        0 bytes
  4068 ;; Hardware stack levels used:    1
  4069 ;; Hardware stack levels required when called:    7
  4070 ;; This function calls:
  4071 ;;		_SPI1_Exchange8bit
  4072 ;;		_wdtdelay
  4073 ;; This function is called by:
  4074 ;;		_init_display
  4075 ;; This function uses a reentrant model
  4076 ;;
  4077                           
  4078                           	psect	text9
  4079  018966                     __ptext9:
  4080                           	opt callstack 0
  4081  018966                     _send_lcd_cmd:
  4082                           	opt callstack 22
  4083                           
  4084                           ; BSR set to: 0
  4085                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4086                           ;incstack = 0
  4087                           ;eadog.c: 102: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 103: {;eadog.c: 104:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  4088  018966  92BC               	bcf	188,1,c	;volatile
  4089                           
  4090                           ;eadog.c: 105:  do { LATCbits.LATC2 = 0; } while(0);
  4091  018968  94BC               	bcf	188,2,c	;volatile
  4092                           
  4093                           ;eadog.c: 106:  SPI1_Exchange8bit(cmd);
  4094                           ;stkvar	_cmd @ sp[(0)+-1]
  4095  01896A  0EFF               	movlw	-1
  4096  01896C  50E3               	movf	plusw1,w,c
  4097  01896E  6EE6               	movwf	postinc1,c
  4098  018970  ECA7  F0C6         	call	_SPI1_Exchange8bit	;wreg free
  4099                           
  4100                           ; BSR set to: 57
  4101                           ;eadog.c: 107:  wdtdelay(30);
  4102  018974  0E1E               	movlw	30
  4103  018976  6EE6               	movwf	postinc1,c
  4104  018978  0E00               	movlw	0
  4105  01897A  6EE6               	movwf	postinc1,c
  4106  01897C  0E00               	movlw	0
  4107  01897E  6EE6               	movwf	postinc1,c
  4108  018980  0E00               	movlw	0
  4109  018982  6EE6               	movwf	postinc1,c
  4110  018984  EC0C  F0C1         	call	_wdtdelay	;wreg free
  4111                           
  4112                           ; BSR set to: 0
  4113  018988  82BC               	bsf	188,1,c	;volatile
  4114                           
  4115                           ; BSR set to: 0
  4116                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  4117  01898A  52E5               	movf	postdec1,f,c
  4118  01898C  0012               	return		;funcret
  4119  01898E                     __end_of_send_lcd_cmd:
  4120                           	opt callstack 0
  4121                           
  4122 ;; *************** function _SPI1_Exchange8bit *****************
  4123 ;; Defined at:
  4124 ;;		line 79 in file "mcc_generated_files/spi1.c"
  4125 ;; Parameters:    Size  Location     Type
  4126 ;;  data            1  [STACK] unsigned char 
  4127 ;; Auto vars:     Size  Location     Type
  4128 ;;		None
  4129 ;; Return value:  Size  Location     Type
  4130 ;;                  1  [STACK] unsigned char 
  4131 ;; Registers used:
  4132 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  4133 ;; Tracked objects:
  4134 ;;		On entry : 0/0
  4135 ;;		On exit  : 3F/39
  4136 ;;		Unchanged: 0/0
  4137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4142 ;;Total ram usage:        0 bytes
  4143 ;; Hardware stack levels used:    1
  4144 ;; Hardware stack levels required when called:    6
  4145 ;; This function calls:
  4146 ;;		Nothing
  4147 ;; This function is called by:
  4148 ;;		_send_lcd_cmd
  4149 ;;		_send_lcd_cmd_long
  4150 ;; This function uses a reentrant model
  4151 ;;
  4152                           
  4153                           	psect	text10
  4154  018D4E                     __ptext10:
  4155                           	opt callstack 0
  4156  018D4E                     _SPI1_Exchange8bit:
  4157                           	opt callstack 22
  4158                           
  4159                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  4160                           
  4161                           ; BSR set to: 0
  4162                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4163                           ;incstack = 0
  4164  018D4E  0E01               	movlw	1
  4165  018D50  013D               	movlb	61	; () banked
  4166  018D52  6F12               	movwf	18,b	;volatile
  4167                           
  4168                           ; BSR set to: 61
  4169                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  4170                           ;stkvar	_data @ sp[(0)+-1]
  4171  018D54  0EFF               	movlw	-1
  4172  018D56  006F FF8F FD11     	movff	plusw1,15633	;volatile
  4173  018D5C                     l835:
  4174                           
  4175                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  4176  018D5C  0139               	movlb	57	; () banked
  4177  018D5E  A9A2               	btfss	162,4,b	;volatile
  4178  018D60  D7FD               	goto	l835
  4179                           
  4180                           ; BSR set to: 57
  4181                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  4182  018D62  006F F440  F032    	movff	15632,btemp	;volatile
  4183                           
  4184                           ; BSR set to: 57
  4185                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  4186  018D68  52E5               	movf	postdec1,f,c
  4187  018D6A  0012               	return		;funcret
  4188  018D6C                     __end_of_SPI1_Exchange8bit:
  4189                           	opt callstack 0
  4190                           
  4191 ;; *************** function _ringBufS_init *****************
  4192 ;; Defined at:
  4193 ;;		line 22 in file "ringbufs.c"
  4194 ;; Parameters:    Size  Location     Type
  4195 ;;  _this           2  [STACK] PTR volatile struct ring
  4196 ;;		 -> ring_buf2(67), ring_buf1(67), 
  4197 ;; Auto vars:     Size  Location     Type
  4198 ;;		None
  4199 ;; Return value:  Size  Location     Type
  4200 ;;                  1  [STACK] void 
  4201 ;; Registers used:
  4202 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  4203 ;; Tracked objects:
  4204 ;;		On entry : 0/0
  4205 ;;		On exit  : 0/0
  4206 ;;		Unchanged: 0/0
  4207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4212 ;;Total ram usage:        0 bytes
  4213 ;; Hardware stack levels used:    1
  4214 ;; Hardware stack levels required when called:    7
  4215 ;; This function calls:
  4216 ;;		_memset
  4217 ;; This function is called by:
  4218 ;;		_init_display
  4219 ;; This function uses a reentrant model
  4220 ;;
  4221                           
  4222                           	psect	text11
  4223  01898E                     __ptext11:
  4224                           	opt callstack 0
  4225  01898E                     _ringBufS_init:
  4226                           	opt callstack 22
  4227                           
  4228                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  4229                           
  4230                           ; BSR set to: 57
  4231                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4232                           ;incstack = 0
  4233  01898E  0E43               	movlw	67
  4234  018990  6EE6               	movwf	postinc1,c
  4235  018992  0E00               	movlw	0
  4236  018994  6EE6               	movwf	postinc1,c
  4237  018996  0E00               	movlw	0
  4238  018998  6EE6               	movwf	postinc1,c
  4239  01899A  0E00               	movlw	0
  4240  01899C  6EE6               	movwf	postinc1,c
  4241                           
  4242                           ;stkvar	__this @ sp[(-4)+-2]
  4243  01899E  0EFA               	movlw	-6
  4244  0189A0  006F FF8F FFE6     	movff	plusw1,postinc1
  4245  0189A6  006F FF8F FFE6     	movff	plusw1,postinc1
  4246  0189AC  ECDF  F0A5         	call	_memset	;wreg free
  4247                           
  4248                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  4249  0189B0  52E5               	movf	postdec1,f,c
  4250  0189B2  52E5               	movf	postdec1,f,c
  4251  0189B4  0012               	return		;funcret
  4252  0189B6                     __end_of_ringBufS_init:
  4253                           	opt callstack 0
  4254                           
  4255 ;; *************** function _hid_display *****************
  4256 ;; Defined at:
  4257 ;;		line 17 in file "hid.c"
  4258 ;; Parameters:    Size  Location     Type
  4259 ;;  h               1  [STACK] PTR struct H_data
  4260 ;;		 -> H(7), 
  4261 ;; Auto vars:     Size  Location     Type
  4262 ;;		None
  4263 ;; Return value:  Size  Location     Type
  4264 ;;                  1  [STACK] PTR struct H_data
  4265 ;; Registers used:
  4266 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  4267 ;; Tracked objects:
  4268 ;;		On entry : 3C/1
  4269 ;;		On exit  : 0/0
  4270 ;;		Unchanged: 0/0
  4271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4276 ;;Total ram usage:        0 bytes
  4277 ;; Hardware stack levels used:    1
  4278 ;; Hardware stack levels required when called:    8
  4279 ;; This function calls:
  4280 ;;		_hid_input
  4281 ;; This function is called by:
  4282 ;;		_main
  4283 ;; This function uses a reentrant model
  4284 ;;
  4285                           
  4286                           	psect	text12
  4287  0170AC                     __ptext12:
  4288                           	opt callstack 0
  4289  0170AC                     _hid_display:
  4290                           	opt callstack 22
  4291                           
  4292                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  4293                           ;stkvar	_h @ sp[(0)+-1]
  4294                           
  4295                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4296                           ;incstack = 0
  4297  0170AC  0EFF               	movlw	-1
  4298  0170AE  50E3               	movf	plusw1,w,c
  4299  0170B0  6EE6               	movwf	postinc1,c
  4300  0170B2  ECC9  F0BD         	call	_hid_input	;wreg free
  4301                           
  4302                           ;hid.c: 21:  switch (h->h_state) {
  4303  0170B6  D066               	goto	l9248
  4304  0170B8                     l9226:
  4305                           
  4306                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  4307                           ;stkvar	_h @ sp[(0)+-1]
  4308  0170B8  0EFF               	movlw	-1
  4309  0170BA  50E3               	movf	plusw1,w,c
  4310  0170BC  6ED9               	movwf	fsr2l,c
  4311  0170BE  6ADA               	clrf	fsr2h,c
  4312  0170C0  0E01               	movlw	1
  4313  0170C2  26D9               	addwf	fsr2l,f,c
  4314  0170C4  0E01               	movlw	1
  4315  0170C6  6EDF               	movwf	indf2,c
  4316                           
  4317                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  4318                           ;stkvar	_h @ sp[(0)+-1]
  4319  0170C8  0EFF               	movlw	-1
  4320  0170CA  50E3               	movf	plusw1,w,c
  4321  0170CC  6ED9               	movwf	fsr2l,c
  4322  0170CE  6ADA               	clrf	fsr2h,c
  4323  0170D0  0E00               	movlw	0
  4324  0170D2  6EDF               	movwf	indf2,c
  4325                           
  4326                           ;hid.c: 25:   h->wait_enter = 1;
  4327                           ;stkvar	_h @ sp[(0)+-1]
  4328  0170D4  0EFF               	movlw	-1
  4329  0170D6  50E3               	movf	plusw1,w,c
  4330  0170D8  6ED9               	movwf	fsr2l,c
  4331  0170DA  6ADA               	clrf	fsr2h,c
  4332  0170DC  0E04               	movlw	4
  4333  0170DE  26D9               	addwf	fsr2l,f,c
  4334  0170E0  0E01               	movlw	1
  4335  0170E2  6EDF               	movwf	indf2,c
  4336                           
  4337                           ;hid.c: 26:   h->wait_select = 1;
  4338                           ;stkvar	_h @ sp[(0)+-1]
  4339  0170E4  0EFF               	movlw	-1
  4340  0170E6  50E3               	movf	plusw1,w,c
  4341  0170E8  6ED9               	movwf	fsr2l,c
  4342  0170EA  6ADA               	clrf	fsr2h,c
  4343  0170EC  0E02               	movlw	2
  4344  0170EE  26D9               	addwf	fsr2l,f,c
  4345  0170F0  0E01               	movlw	1
  4346  0170F2  6EDF               	movwf	indf2,c
  4347                           
  4348                           ;hid.c: 27:   h->select_p = SW_OFF;
  4349                           ;stkvar	_h @ sp[(0)+-1]
  4350  0170F4  0EFF               	movlw	-1
  4351  0170F6  50E3               	movf	plusw1,w,c
  4352  0170F8  6ED9               	movwf	fsr2l,c
  4353  0170FA  6ADA               	clrf	fsr2h,c
  4354  0170FC  0E03               	movlw	3
  4355  0170FE  26D9               	addwf	fsr2l,f,c
  4356  017100  0E00               	movlw	0
  4357  017102  6EDF               	movwf	indf2,c
  4358                           
  4359                           ;hid.c: 28:   h->enter_p = SW_OFF;
  4360                           ;stkvar	_h @ sp[(0)+-1]
  4361  017104  0EFF               	movlw	-1
  4362  017106  50E3               	movf	plusw1,w,c
  4363  017108  6ED9               	movwf	fsr2l,c
  4364  01710A  6ADA               	clrf	fsr2h,c
  4365  01710C  0E05               	movlw	5
  4366  01710E  26D9               	addwf	fsr2l,f,c
  4367  017110  0E00               	movlw	0
  4368  017112  D036               	goto	L1
  4369  017114                     l9238:
  4370                           
  4371                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  4372                           ;stkvar	_h @ sp[(0)+-1]
  4373  017114  0EFF               	movlw	-1
  4374  017116  50E3               	movf	plusw1,w,c
  4375  017118  6ED9               	movwf	fsr2l,c
  4376  01711A  6ADA               	clrf	fsr2h,c
  4377  01711C  0E02               	movlw	2
  4378  01711E  26D9               	addwf	fsr2l,f,c
  4379  017120  50DF               	movf	indf2,w,c
  4380  017122  A4D8               	btfss	status,2,c
  4381  017124  D042               	goto	l1820
  4382                           
  4383                           ;stkvar	_h @ sp[(0)+-1]
  4384  017126  0EFF               	movlw	-1
  4385  017128  50E3               	movf	plusw1,w,c
  4386  01712A  6ED9               	movwf	fsr2l,c
  4387  01712C  6ADA               	clrf	fsr2h,c
  4388  01712E  0E03               	movlw	3
  4389  017130  26D9               	addwf	fsr2l,f,c
  4390  017132  50DF               	movf	indf2,w,c
  4391  017134  A4D8               	btfss	status,2,c
  4392  017136  D039               	goto	l1820
  4393                           
  4394                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  4395                           ;stkvar	_h @ sp[(0)+-1]
  4396  017138  0EFF               	movlw	-1
  4397  01713A  50E3               	movf	plusw1,w,c
  4398  01713C  6ED9               	movwf	fsr2l,c
  4399  01713E  6ADA               	clrf	fsr2h,c
  4400  017140  0E06               	movlw	6
  4401  017142  26D9               	addwf	fsr2l,f,c
  4402                           
  4403                           ;stkvar	_h @ sp[(0)+-1]
  4404  017144  0EFF               	movlw	-1
  4405  017146  50E3               	movf	plusw1,w,c
  4406  017148  6EE9               	movwf	fsr0l,c
  4407  01714A  6AEA               	clrf	fsr0h,c
  4408  01714C  0E06               	movlw	6
  4409  01714E  26E9               	addwf	fsr0l,f,c
  4410  017150  2AEF               	incf	indf0,f,c
  4411  017152  50EF               	movf	indf0,w,c
  4412  017154  0B03               	andlw	3
  4413  017156  6EDF               	movwf	indf2,c
  4414                           
  4415                           ;hid.c: 34:    h->hid_display = h->sequence;
  4416                           ;stkvar	_h @ sp[(0)+-1]
  4417  017158  0EFF               	movlw	-1
  4418  01715A  50E3               	movf	plusw1,w,c
  4419  01715C  6ED9               	movwf	fsr2l,c
  4420  01715E  6ADA               	clrf	fsr2h,c
  4421  017160  0E06               	movlw	6
  4422  017162  26D9               	addwf	fsr2l,f,c
  4423                           
  4424                           ;stkvar	_h @ sp[(0)+-1]
  4425  017164  0EFF               	movlw	-1
  4426  017166  50E3               	movf	plusw1,w,c
  4427  017168  6EE9               	movwf	fsr0l,c
  4428  01716A  6AEA               	clrf	fsr0h,c
  4429  01716C  006F FF7F FFEF     	movff	indf2,indf0
  4430                           
  4431                           ;hid.c: 35:    h->wait_select = 1;
  4432                           ;stkvar	_h @ sp[(0)+-1]
  4433  017172  0EFF               	movlw	-1
  4434  017174  50E3               	movf	plusw1,w,c
  4435  017176  6ED9               	movwf	fsr2l,c
  4436  017178  6ADA               	clrf	fsr2h,c
  4437  01717A  0E02               	movlw	2
  4438  01717C  26D9               	addwf	fsr2l,f,c
  4439  01717E  0E01               	movlw	1
  4440  017180                     L1:
  4441  017180  6EDF               	movwf	indf2,c
  4442  017182  D013               	goto	l1820
  4443  017184                     l9248:
  4444                           
  4445                           ;stkvar	_h @ sp[(0)+-1]
  4446  017184  0EFF               	movlw	-1
  4447  017186  50E3               	movf	plusw1,w,c
  4448  017188  6ED9               	movwf	fsr2l,c
  4449  01718A  6ADA               	clrf	fsr2h,c
  4450  01718C  0E01               	movlw	1
  4451  01718E  26D9               	addwf	fsr2l,f,c
  4452  017190  50DF               	movf	indf2,w,c
  4453  017192  6E3C               	movwf	(btemp+10)^0,c
  4454  017194  6A3D               	clrf	(btemp+11)^0,c
  4455                           
  4456                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4457                           ; Switch size 1, requested type "simple"
  4458                           ; Number of cases is 1, Range of values is 0 to 0
  4459                           ; switch strategies available:
  4460                           ; Name         Instructions Cycles
  4461                           ; simple_byte            4     3 (average)
  4462                           ;	Chosen strategy is simple_byte
  4463  017196  503D               	movf	(btemp+11)^0,w,c
  4464  017198  0A00               	xorlw	0	; case 0
  4465  01719A  A4D8               	btfss	status,2,c
  4466  01719C  D7BB               	goto	l9238
  4467                           
  4468                           ; Switch size 1, requested type "simple"
  4469                           ; Number of cases is 2, Range of values is 0 to 1
  4470                           ; switch strategies available:
  4471                           ; Name         Instructions Cycles
  4472                           ; simple_byte            7     4 (average)
  4473                           ;	Chosen strategy is simple_byte
  4474  01719E  503C               	movf	(btemp+10)^0,w,c
  4475  0171A0  0A00               	xorlw	0	; case 0
  4476  0171A2  B4D8               	btfsc	status,2,c
  4477  0171A4  D789               	goto	l9226
  4478  0171A6  0A01               	xorlw	1	; case 1
  4479  0171A8  D7B5               	goto	l9238
  4480  0171AA                     l1820:
  4481                           
  4482                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  4483  0171AA  52E5               	movf	postdec1,f,c
  4484  0171AC  0012               	return		;funcret
  4485  0171AE                     __end_of_hid_display:
  4486                           	opt callstack 0
  4487                           
  4488 ;; *************** function _hid_input *****************
  4489 ;; Defined at:
  4490 ;;		line 3 in file "hid.c"
  4491 ;; Parameters:    Size  Location     Type
  4492 ;;  h               1  [STACK] PTR struct H_data
  4493 ;;		 -> H(7), 
  4494 ;; Auto vars:     Size  Location     Type
  4495 ;;		None
  4496 ;; Return value:  Size  Location     Type
  4497 ;;                  1  [STACK] PTR struct H_data
  4498 ;; Registers used:
  4499 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  4500 ;; Tracked objects:
  4501 ;;		On entry : 0/1
  4502 ;;		On exit  : 0/0
  4503 ;;		Unchanged: 0/0
  4504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4509 ;;Total ram usage:        0 bytes
  4510 ;; Hardware stack levels used:    1
  4511 ;; Hardware stack levels required when called:    7
  4512 ;; This function calls:
  4513 ;;		_get_switch
  4514 ;; This function is called by:
  4515 ;;		_hid_display
  4516 ;; This function uses a reentrant model
  4517 ;;
  4518                           
  4519                           	psect	text13
  4520  017B92                     __ptext13:
  4521                           	opt callstack 0
  4522  017B92                     _hid_input:
  4523                           	opt callstack 22
  4524                           
  4525                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  4526                           
  4527                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4528                           ;incstack = 0
  4529  017B92  0E02               	movlw	2
  4530  017B94  6EE6               	movwf	postinc1,c
  4531  017B96  ECDB  F0C4         	call	_get_switch	;wreg free
  4532  017B9A  5032               	movf	btemp^0,w,c
  4533  017B9C  B4D8               	btfsc	status,2,c
  4534  017B9E  D01C               	goto	l8992
  4535                           
  4536                           ;hid.c: 6:   h->wait_select = 0;
  4537                           ;stkvar	_h @ sp[(0)+-1]
  4538  017BA0  0EFF               	movlw	-1
  4539  017BA2  50E3               	movf	plusw1,w,c
  4540  017BA4  6ED9               	movwf	fsr2l,c
  4541  017BA6  6ADA               	clrf	fsr2h,c
  4542  017BA8  0E02               	movlw	2
  4543  017BAA  26D9               	addwf	fsr2l,f,c
  4544  017BAC  0E00               	movlw	0
  4545  017BAE  6EDF               	movwf	indf2,c
  4546                           
  4547                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  4548  017BB0  0E02               	movlw	2
  4549  017BB2  6EE6               	movwf	postinc1,c
  4550  017BB4  ECDB  F0C4         	call	_get_switch	;wreg free
  4551  017BB8  5032               	movf	btemp^0,w,c
  4552  017BBA  B4D8               	btfsc	status,2,c
  4553  017BBC  D003               	goto	u8470
  4554  017BBE  6A3D               	clrf	(btemp+11)^0,c
  4555  017BC0  2A3D               	incf	(btemp+11)^0,f,c
  4556  017BC2  D001               	goto	u8488
  4557  017BC4                     u8470:
  4558  017BC4  6A3D               	clrf	(btemp+11)^0,c
  4559  017BC6                     u8488:
  4560                           
  4561                           ;stkvar	_h @ sp[(0)+-1]
  4562  017BC6  0EFF               	movlw	-1
  4563  017BC8  50E3               	movf	plusw1,w,c
  4564  017BCA  6ED9               	movwf	fsr2l,c
  4565  017BCC  6ADA               	clrf	fsr2h,c
  4566  017BCE  0E03               	movlw	3
  4567  017BD0  26D9               	addwf	fsr2l,f,c
  4568  017BD2  0060  F0F7  FFDF   	movff	btemp+11,indf2
  4569  017BD8                     l8992:
  4570                           
  4571                           ;hid.c: 10:  if (get_switch(SENTER)) {
  4572  017BD8  0E03               	movlw	3
  4573  017BDA  6EE6               	movwf	postinc1,c
  4574  017BDC  ECDB  F0C4         	call	_get_switch	;wreg free
  4575  017BE0  5032               	movf	btemp^0,w,c
  4576  017BE2  B4D8               	btfsc	status,2,c
  4577  017BE4  D01C               	goto	l1811
  4578                           
  4579                           ;hid.c: 11:   h->wait_enter = 0;
  4580                           ;stkvar	_h @ sp[(0)+-1]
  4581  017BE6  0EFF               	movlw	-1
  4582  017BE8  50E3               	movf	plusw1,w,c
  4583  017BEA  6ED9               	movwf	fsr2l,c
  4584  017BEC  6ADA               	clrf	fsr2h,c
  4585  017BEE  0E04               	movlw	4
  4586  017BF0  26D9               	addwf	fsr2l,f,c
  4587  017BF2  0E00               	movlw	0
  4588  017BF4  6EDF               	movwf	indf2,c
  4589                           
  4590                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  4591  017BF6  0E03               	movlw	3
  4592  017BF8  6EE6               	movwf	postinc1,c
  4593  017BFA  ECDB  F0C4         	call	_get_switch	;wreg free
  4594  017BFE  5032               	movf	btemp^0,w,c
  4595  017C00  B4D8               	btfsc	status,2,c
  4596  017C02  D003               	goto	u8500
  4597  017C04  6A3D               	clrf	(btemp+11)^0,c
  4598  017C06  2A3D               	incf	(btemp+11)^0,f,c
  4599  017C08  D001               	goto	u8518
  4600  017C0A                     u8500:
  4601  017C0A  6A3D               	clrf	(btemp+11)^0,c
  4602  017C0C                     u8518:
  4603                           
  4604                           ;stkvar	_h @ sp[(0)+-1]
  4605  017C0C  0EFF               	movlw	-1
  4606  017C0E  50E3               	movf	plusw1,w,c
  4607  017C10  6ED9               	movwf	fsr2l,c
  4608  017C12  6ADA               	clrf	fsr2h,c
  4609  017C14  0E05               	movlw	5
  4610  017C16  26D9               	addwf	fsr2l,f,c
  4611  017C18  0060  F0F7  FFDF   	movff	btemp+11,indf2
  4612  017C1E                     l1811:
  4613                           
  4614                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  4615  017C1E  52E5               	movf	postdec1,f,c
  4616  017C20  0012               	return		;funcret
  4617  017C22                     __end_of_hid_input:
  4618                           	opt callstack 0
  4619                           
  4620 ;; *************** function _get_switch *****************
  4621 ;; Defined at:
  4622 ;;		line 18 in file "dio.c"
  4623 ;; Parameters:    Size  Location     Type
  4624 ;;  i               1  [STACK] unsigned char 
  4625 ;; Auto vars:     Size  Location     Type
  4626 ;;		None
  4627 ;; Return value:  Size  Location     Type
  4628 ;;                  1  [STACK] enum E17013
  4629 ;; Registers used:
  4630 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  4631 ;; Tracked objects:
  4632 ;;		On entry : 0/2
  4633 ;;		On exit  : 0/0
  4634 ;;		Unchanged: 0/0
  4635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4640 ;;Total ram usage:        0 bytes
  4641 ;; Hardware stack levels used:    1
  4642 ;; Hardware stack levels required when called:    6
  4643 ;; This function calls:
  4644 ;;		Nothing
  4645 ;; This function is called by:
  4646 ;;		_main
  4647 ;;		_hid_input
  4648 ;; This function uses a reentrant model
  4649 ;;
  4650                           
  4651                           	psect	text14
  4652  0189B6                     __ptext14:
  4653                           	opt callstack 0
  4654  0189B6                     _get_switch:
  4655                           	opt callstack 22
  4656                           
  4657                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  4658                           ;stkvar	_i @ sp[(0)+-1]
  4659                           
  4660                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4661                           ;incstack = 0
  4662  0189B6  0EFF               	movlw	-1
  4663  0189B8  006F FF8C  F032    	movff	plusw1,btemp
  4664  0189BE  0E03               	movlw	3
  4665  0189C0  6432               	cpfsgt	btemp^0,c
  4666  0189C2  D002               	goto	l8308
  4667                           
  4668                           ;dio.c: 21:   return SW_OFF;
  4669  0189C4  0E00               	movlw	0
  4670  0189C6  D008               	goto	L2
  4671  0189C8                     l8308:
  4672                           
  4673                           ;dio.c: 23:  return S.button[i].sw;
  4674                           ;stkvar	_i @ sp[(0)+-1]
  4675  0189C8  0EFF               	movlw	-1
  4676  0189CA  50E3               	movf	plusw1,w,c
  4677  0189CC  0D05               	mullw	5
  4678  0189CE  50F3               	movf	243,w,c
  4679  0189D0  0F60               	addlw	low _S
  4680  0189D2  6ED9               	movwf	fsr2l,c
  4681  0189D4  6ADA               	clrf	fsr2h,c
  4682  0189D6  50DF               	movf	indf2,w,c
  4683  0189D8                     L2:
  4684  0189D8  6E32               	movwf	btemp^0,c
  4685                           
  4686                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  4687  0189DA  52E5               	movf	postdec1,f,c
  4688  0189DC  0012               	return		;funcret
  4689  0189DE                     __end_of_get_switch:
  4690                           	opt callstack 0
  4691                           
  4692 ;; *************** function _eaDogM_WriteCommand *****************
  4693 ;; Defined at:
  4694 ;;		line 160 in file "eadog.c"
  4695 ;; Parameters:    Size  Location     Type
  4696 ;;  cmd             1  [STACK] const unsigned char 
  4697 ;; Auto vars:     Size  Location     Type
  4698 ;;		None
  4699 ;; Return value:  Size  Location     Type
  4700 ;;                  1  [STACK] void 
  4701 ;; Registers used:
  4702 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4703 ;; Tracked objects:
  4704 ;;		On entry : 3F/3D
  4705 ;;		On exit  : 3F/0
  4706 ;;		Unchanged: 0/0
  4707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4712 ;;Total ram usage:        0 bytes
  4713 ;; Hardware stack levels used:    1
  4714 ;; Hardware stack levels required when called:   16
  4715 ;; This function calls:
  4716 ;;		_send_lcd_cmd_dma
  4717 ;; This function is called by:
  4718 ;;		_main
  4719 ;; This function uses a reentrant model
  4720 ;;
  4721                           
  4722                           	psect	text15
  4723  018EFA                     __ptext15:
  4724                           	opt callstack 0
  4725  018EFA                     _eaDogM_WriteCommand:
  4726                           	opt callstack 14
  4727                           
  4728                           ;eadog.c: 160: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 161: {;eadog.c: 162:
      +                            send_lcd_cmd_dma(cmd);
  4729                           ;stkvar	_cmd @ sp[(0)+-1]
  4730                           
  4731                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4732                           ;incstack = 0
  4733  018EFA  0EFF               	movlw	-1
  4734  018EFC  50E3               	movf	plusw1,w,c
  4735  018EFE  6EE6               	movwf	postinc1,c
  4736  018F00  EC66  F0C1         	call	_send_lcd_cmd_dma	;wreg free
  4737                           
  4738                           ; BSR set to: 0
  4739                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  4740  018F04  52E5               	movf	postdec1,f,c
  4741  018F06  0012               	return		;funcret
  4742  018F08                     __end_of_eaDogM_WriteCommand:
  4743                           	opt callstack 0
  4744                           
  4745 ;; *************** function _convert_adc_data *****************
  4746 ;; Defined at:
  4747 ;;		line 39 in file "mbmc.c"
  4748 ;; Parameters:    Size  Location     Type
  4749 ;;		None
  4750 ;; Auto vars:     Size  Location     Type
  4751 ;;  i               1  [STACK] unsigned char 
  4752 ;; Return value:  Size  Location     Type
  4753 ;;                  1  [STACK] void 
  4754 ;; Registers used:
  4755 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4756 ;; Tracked objects:
  4757 ;;		On entry : 0/1
  4758 ;;		On exit  : 0/0
  4759 ;;		Unchanged: 0/0
  4760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4765 ;;Total ram usage:        0 bytes
  4766 ;; Hardware stack levels used:    1
  4767 ;; Hardware stack levels required when called:    9
  4768 ;; This function calls:
  4769 ;;		_conv_raw_result
  4770 ;;		_lp_filter
  4771 ;; This function is called by:
  4772 ;;		_main
  4773 ;; This function uses a reentrant model
  4774 ;;
  4775                           
  4776                           	psect	text16
  4777  0175E0                     __ptext16:
  4778                           	opt callstack 0
  4779  0175E0                     _convert_adc_data:
  4780                           	opt callstack 0
  4781                           
  4782                           ; BSR set to: 0
  4783                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4784  0175E0  52E6               	movf	postinc1,f,c
  4785                           
  4786                           ;mbmc.c: 41:  uint8_t i = 0;
  4787                           ;stkvar	_i @ sp[(-1)+0]
  4788                           
  4789                           ;incstack = 0
  4790  0175E2  0EFF               	movlw	-1
  4791  0175E4  6AE3               	clrf	plusw1,c
  4792  0175E6                     l9202:
  4793                           
  4794                           ;mbmc.c: 44:   if (V.calib) {
  4795  0175E6  0102               	movlb	2	; () banked
  4796  0175E8  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  4797  0175EA  B4D8               	btfsc	status,2,c
  4798  0175EC  D01B               	goto	l9206
  4799                           
  4800                           ; BSR set to: 2
  4801                           ;mbmc.c: 45:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  4802  0175EE  0E01               	movlw	1
  4803  0175F0  6EE6               	movwf	postinc1,c
  4804                           
  4805                           ;stkvar	_i @ sp[(-2)+0]
  4806  0175F2  0EFE               	movlw	-2
  4807  0175F4  50E3               	movf	plusw1,w,c
  4808  0175F6  6EE6               	movwf	postinc1,c
  4809  0175F8  0E01               	movlw	1
  4810  0175FA  6EE6               	movwf	postinc1,c
  4811                           
  4812                           ;stkvar	_i @ sp[(-4)+0]
  4813  0175FC  0EFC               	movlw	-4
  4814  0175FE  50E3               	movf	plusw1,w,c
  4815  017600  6EE6               	movwf	postinc1,c
  4816  017602  ECB6  F09D         	call	_conv_raw_result	;wreg free
  4817  017606  0060  F0CB  FFE6   	movff	btemp,postinc1
  4818  01760C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4819  017612  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4820  017618  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4821  01761E  ECAB  F0B0         	call	_lp_filter	;wreg free
  4822  017622  D01A               	goto	L3
  4823  017624                     l9206:
  4824                           
  4825                           ; BSR set to: 2
  4826                           ;mbmc.c: 47:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  4827  017624  0E00               	movlw	0
  4828  017626  6EE6               	movwf	postinc1,c
  4829                           
  4830                           ;stkvar	_i @ sp[(-2)+0]
  4831  017628  0EFE               	movlw	-2
  4832  01762A  50E3               	movf	plusw1,w,c
  4833  01762C  6EE6               	movwf	postinc1,c
  4834  01762E  0E00               	movlw	0
  4835  017630  6EE6               	movwf	postinc1,c
  4836                           
  4837                           ;stkvar	_i @ sp[(-4)+0]
  4838  017632  0EFC               	movlw	-4
  4839  017634  50E3               	movf	plusw1,w,c
  4840  017636  6EE6               	movwf	postinc1,c
  4841  017638  ECB6  F09D         	call	_conv_raw_result	;wreg free
  4842  01763C  0060  F0CB  FFE6   	movff	btemp,postinc1
  4843  017642  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4844  017648  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4845  01764E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4846  017654  ECAB  F0B0         	call	_lp_filter	;wreg free
  4847  017658                     L3:
  4848                           
  4849                           ;stkvar	_i @ sp[(-1)+0]
  4850  017658  0EFF               	movlw	-1
  4851  01765A  50E3               	movf	plusw1,w,c
  4852  01765C  0D04               	mullw	4
  4853  01765E  0E00               	movlw	low _C
  4854  017660  24F3               	addwf	243,w,c
  4855  017662  6ED9               	movwf	fsr2l,c
  4856  017664  0E01               	movlw	high _C
  4857  017666  20F4               	addwfc	prodh,w,c
  4858  017668  6EDA               	movwf	fsr2h,c
  4859  01766A  0060  F0CB  FFDE   	movff	btemp,postinc2
  4860  017670  0060  F0CF  FFDE   	movff	btemp+1,postinc2
  4861  017676  0060  F0D3  FFDE   	movff	btemp+2,postinc2
  4862  01767C  0060  F0D7  FFDE   	movff	btemp+3,postinc2
  4863                           
  4864                           ;mbmc.c: 49:  } while (++i < 16);
  4865                           ;stkvar	_i @ sp[(-1)+0]
  4866  017682  0EFF               	movlw	-1
  4867  017684  2AE3               	incf	plusw1,f,c
  4868  017686  0EFF               	movlw	-1
  4869  017688  006F FF8C  F032    	movff	plusw1,btemp
  4870  01768E  0E0F               	movlw	15
  4871  017690  6432               	cpfsgt	btemp^0,c
  4872  017692  D7A9               	goto	l9202
  4873                           
  4874                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  4875  017694  52E5               	movf	postdec1,f,c
  4876  017696  0012               	return		;funcret
  4877  017698                     __end_of_convert_adc_data:
  4878                           	opt callstack 0
  4879                           
  4880 ;; *************** function _conv_raw_result *****************
  4881 ;; Defined at:
  4882 ;;		line 80 in file "daq.c"
  4883 ;; Parameters:    Size  Location     Type
  4884 ;;  chan            1  [STACK] const enum E16136
  4885 ;;  to_what         1  [STACK] const enum E16198
  4886 ;; Auto vars:     Size  Location     Type
  4887 ;;		None
  4888 ;; Return value:  Size  Location     Type
  4889 ;;                  4  [STACK] float 
  4890 ;; Registers used:
  4891 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4892 ;; Tracked objects:
  4893 ;;		On entry : 3F/2
  4894 ;;		On exit  : 0/0
  4895 ;;		Unchanged: 0/0
  4896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4901 ;;Total ram usage:        0 bytes
  4902 ;; Hardware stack levels used:    1
  4903 ;; Hardware stack levels required when called:    8
  4904 ;; This function calls:
  4905 ;;		___fldiv
  4906 ;;		___flmul
  4907 ;;		___flsub
  4908 ;;		___xxtofl
  4909 ;;		_get_raw_result
  4910 ;;		_nanf
  4911 ;; This function is called by:
  4912 ;;		_convert_adc_data
  4913 ;; This function uses a reentrant model
  4914 ;;
  4915                           
  4916                           	psect	text17
  4917  013B6C                     __ptext17:
  4918                           	opt callstack 0
  4919  013B6C                     _conv_raw_result:
  4920                           	opt callstack 21
  4921                           
  4922                           ;daq.c: 80: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 81: {;daq.c: 83:  switch (to_what) {
  4923                           
  4924                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4925                           ;incstack = 0
  4926  013B6C  D242               	goto	l8926
  4927  013B6E                     l8872:
  4928                           
  4929                           ;daq.c: 85:   if (!(0b0011110001110111 >> chan & 0x1))
  4930                           ;stkvar	_chan @ sp[(0)+-1]
  4931  013B6E  0EFF               	movlw	-1
  4932  013B70  006F FF8C  F03D    	movff	plusw1,btemp+11
  4933  013B76  0E77               	movlw	119
  4934  013B78  6E3A               	movwf	(btemp+8)^0,c
  4935  013B7A  0E3C               	movlw	60
  4936  013B7C  6E3B               	movwf	(btemp+9)^0,c
  4937  013B7E  2A3D               	incf	(btemp+11)^0,f,c
  4938  013B80  D003               	goto	u8244
  4939  013B82                     u8245:
  4940  013B82  343B               	rlcf	(btemp+9)^0,w,c
  4941  013B84  323B               	rrcf	(btemp+9)^0,f,c
  4942  013B86  323A               	rrcf	(btemp+8)^0,f,c
  4943  013B88                     u8244:
  4944  013B88  2E3D               	decfsz	(btemp+11)^0,f,c
  4945  013B8A  D7FB               	goto	u8245
  4946  013B8C  B03A               	btfsc	(btemp+8)^0,0,c
  4947  013B8E  D007               	goto	l8878
  4948                           
  4949                           ;daq.c: 86:    return nanf("");
  4950  013B90  0E6B               	movlw	low (STR_39+18)
  4951  013B92  6EE6               	movwf	postinc1,c
  4952  013B94  0EFE               	movlw	high (STR_39+18)
  4953  013B96  6EE6               	movwf	postinc1,c
  4954  013B98  EC4D  F0C0         	call	_nanf	;wreg free
  4955  013B9C  D23A               	goto	l1687
  4956  013B9E                     l8878:
  4957                           
  4958                           ;daq.c: 88:   if (0b0000000000000011 >> chan & 0x1) {
  4959                           ;stkvar	_chan @ sp[(0)+-1]
  4960  013B9E  0EFF               	movlw	-1
  4961  013BA0  006F FF8C  F03D    	movff	plusw1,btemp+11
  4962  013BA6  0E03               	movlw	3
  4963  013BA8  6E3A               	movwf	(btemp+8)^0,c
  4964  013BAA  0E00               	movlw	0
  4965  013BAC  6E3B               	movwf	(btemp+9)^0,c
  4966  013BAE  2A3D               	incf	(btemp+11)^0,f,c
  4967  013BB0  D003               	goto	u8264
  4968  013BB2                     u8265:
  4969  013BB2  343B               	rlcf	(btemp+9)^0,w,c
  4970  013BB4  323B               	rrcf	(btemp+9)^0,f,c
  4971  013BB6  323A               	rrcf	(btemp+8)^0,f,c
  4972  013BB8                     u8264:
  4973  013BB8  2E3D               	decfsz	(btemp+11)^0,f,c
  4974  013BBA  D7FB               	goto	u8265
  4975  013BBC  A03A               	btfss	(btemp+8)^0,0,c
  4976  013BBE  D0EB               	goto	l8892
  4977                           
  4978                           ;daq.c: 89:    if (0b0000000000000001 >> chan & 0x1) {
  4979                           ;stkvar	_chan @ sp[(0)+-1]
  4980  013BC0  0EFF               	movlw	-1
  4981  013BC2  006F FF8C  F03D    	movff	plusw1,btemp+11
  4982  013BC8  0E01               	movlw	1
  4983  013BCA  6E3A               	movwf	(btemp+8)^0,c
  4984  013BCC  0E00               	movlw	0
  4985  013BCE  6E3B               	movwf	(btemp+9)^0,c
  4986  013BD0  2A3D               	incf	(btemp+11)^0,f,c
  4987  013BD2  D003               	goto	u8284
  4988  013BD4                     u8285:
  4989  013BD4  343B               	rlcf	(btemp+9)^0,w,c
  4990  013BD6  323B               	rrcf	(btemp+9)^0,f,c
  4991  013BD8  323A               	rrcf	(btemp+8)^0,f,c
  4992  013BDA                     u8284:
  4993  013BDA  2E3D               	decfsz	(btemp+11)^0,f,c
  4994  013BDC  D7FB               	goto	u8285
  4995  013BDE  A03A               	btfss	(btemp+8)^0,0,c
  4996  013BE0  D06D               	goto	l8888
  4997                           
  4998                           ;daq.c: 90:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.08500
      +                          00;
  4999  013BE2  0E7B               	movlw	123
  5000  013BE4  6EE6               	movwf	postinc1,c
  5001  013BE6  0E14               	movlw	20
  5002  013BE8  6EE6               	movwf	postinc1,c
  5003  013BEA  0EAE               	movlw	174
  5004  013BEC  6EE6               	movwf	postinc1,c
  5005  013BEE  0E3D               	movlw	61
  5006  013BF0  6EE6               	movwf	postinc1,c
  5007  013BF2  0060  F39C  F03A   	movff	_R+32,btemp+8	;volatile
  5008  013BF8  0060  F3A0  F03B   	movff	_R+33,btemp+9	;volatile
  5009  013BFE  0E00               	movlw	0
  5010  013C00  BE3B               	btfsc	(btemp+9)^0,7,c
  5011  013C02  0EFF               	movlw	255
  5012  013C04  6E3C               	movwf	(btemp+10)^0,c
  5013  013C06  6E3D               	movwf	(btemp+11)^0,c
  5014  013C08  0060  F0EB  FFE6   	movff	btemp+8,postinc1
  5015  013C0E  0060  F0EF  FFE6   	movff	btemp+9,postinc1
  5016  013C14  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5017  013C1A  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5018  013C20  0E01               	movlw	1
  5019  013C22  6EE6               	movwf	postinc1,c
  5020  013C24  ECC5  F0AE         	call	___xxtofl	;wreg free
  5021  013C28  0060  F0CB  FFE6   	movff	btemp,postinc1
  5022  013C2E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5023  013C34  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  5024  013C3A  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  5025                           
  5026                           ;stkvar	_chan @ sp[(-8)+-1]
  5027  013C40  0EF7               	movlw	-9
  5028  013C42  50E3               	movf	plusw1,w,c
  5029  013C44  6EE6               	movwf	postinc1,c
  5030  013C46  ECB6  F0C6         	call	_get_raw_result	;wreg free
  5031  013C4A  0060  F0C8  F03C   	movff	btemp,btemp+10
  5032  013C50  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  5033  013C56  503C               	movf	(btemp+10)^0,w,c
  5034  013C58  6E36               	movwf	(btemp+4)^0,c
  5035  013C5A  503D               	movf	(btemp+11)^0,w,c
  5036  013C5C  6E37               	movwf	(btemp+5)^0,c
  5037  013C5E  6A38               	clrf	(btemp+6)^0,c
  5038  013C60  6A39               	clrf	(btemp+7)^0,c
  5039  013C62  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  5040  013C68  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  5041  013C6E  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  5042  013C74  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  5043  013C7A  0E00               	movlw	0
  5044  013C7C  6EE6               	movwf	postinc1,c
  5045  013C7E  ECC5  F0AE         	call	___xxtofl	;wreg free
  5046  013C82  0060  F0CB  FFE6   	movff	btemp,postinc1
  5047  013C88  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5048  013C8E  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  5049  013C94  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  5050  013C9A  ECFF  F0C1         	call	___flsub	;wreg free
  5051  013C9E  0060  F0CB  FFE6   	movff	btemp,postinc1
  5052  013CA4  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5053  013CAA  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  5054  013CB0  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  5055  013CB6  EC06  F093         	call	___flmul	;wreg free
  5056  013CBA  D1AB               	goto	l1687
  5057  013CBC                     l8888:
  5058                           
  5059                           ;daq.c: 92:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.03500
      +                          00;
  5060  013CBC  0E29               	movlw	41
  5061  013CBE  6EE6               	movwf	postinc1,c
  5062  013CC0  0E5C               	movlw	92
  5063  013CC2  6EE6               	movwf	postinc1,c
  5064  013CC4  0E0F               	movlw	15
  5065  013CC6  6EE6               	movwf	postinc1,c
  5066  013CC8  0E3D               	movlw	61
  5067  013CCA  6EE6               	movwf	postinc1,c
  5068  013CCC  0060  F3A4  F03A   	movff	_R+34,btemp+8	;volatile
  5069  013CD2  0060  F3A8  F03B   	movff	_R+35,btemp+9	;volatile
  5070  013CD8  0E00               	movlw	0
  5071  013CDA  BE3B               	btfsc	(btemp+9)^0,7,c
  5072  013CDC  0EFF               	movlw	255
  5073  013CDE  6E3C               	movwf	(btemp+10)^0,c
  5074  013CE0  6E3D               	movwf	(btemp+11)^0,c
  5075  013CE2  0060  F0EB  FFE6   	movff	btemp+8,postinc1
  5076  013CE8  0060  F0EF  FFE6   	movff	btemp+9,postinc1
  5077  013CEE  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5078  013CF4  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5079  013CFA  0E01               	movlw	1
  5080  013CFC  6EE6               	movwf	postinc1,c
  5081  013CFE  ECC5  F0AE         	call	___xxtofl	;wreg free
  5082  013D02  0060  F0CB  FFE6   	movff	btemp,postinc1
  5083  013D08  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5084  013D0E  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  5085  013D14  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  5086                           
  5087                           ;stkvar	_chan @ sp[(-8)+-1]
  5088  013D1A  0EF7               	movlw	-9
  5089  013D1C  50E3               	movf	plusw1,w,c
  5090  013D1E  6EE6               	movwf	postinc1,c
  5091  013D20  ECB6  F0C6         	call	_get_raw_result	;wreg free
  5092  013D24  0060  F0C8  F03C   	movff	btemp,btemp+10
  5093  013D2A  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  5094  013D30  503C               	movf	(btemp+10)^0,w,c
  5095  013D32  6E36               	movwf	(btemp+4)^0,c
  5096  013D34  503D               	movf	(btemp+11)^0,w,c
  5097  013D36  6E37               	movwf	(btemp+5)^0,c
  5098  013D38  6A38               	clrf	(btemp+6)^0,c
  5099  013D3A  6A39               	clrf	(btemp+7)^0,c
  5100  013D3C  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  5101  013D42  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  5102  013D48  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  5103  013D4E  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  5104  013D54  0E00               	movlw	0
  5105  013D56  6EE6               	movwf	postinc1,c
  5106  013D58  ECC5  F0AE         	call	___xxtofl	;wreg free
  5107  013D5C  0060  F0CB  FFE6   	movff	btemp,postinc1
  5108  013D62  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5109  013D68  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  5110  013D6E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  5111  013D74  ECFF  F0C1         	call	___flsub	;wreg free
  5112  013D78  0060  F0CB  FFE6   	movff	btemp,postinc1
  5113  013D7E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5114  013D84  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  5115  013D8A  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  5116  013D90  EC06  F093         	call	___flmul	;wreg free
  5117  013D94  D13E               	goto	l1687
  5118  013D96                     l8892:
  5119                           
  5120                           ;daq.c: 95:    if (0b0000100000000000 >> chan & 0x1) {
  5121                           ;stkvar	_chan @ sp[(0)+-1]
  5122  013D96  0EFF               	movlw	-1
  5123  013D98  006F FF8C  F03D    	movff	plusw1,btemp+11
  5124  013D9E  0E00               	movlw	0
  5125  013DA0  6E3A               	movwf	(btemp+8)^0,c
  5126  013DA2  0E08               	movlw	8
  5127  013DA4  6E3B               	movwf	(btemp+9)^0,c
  5128  013DA6  2A3D               	incf	(btemp+11)^0,f,c
  5129  013DA8  D003               	goto	u8304
  5130  013DAA                     u8305:
  5131  013DAA  343B               	rlcf	(btemp+9)^0,w,c
  5132  013DAC  323B               	rrcf	(btemp+9)^0,f,c
  5133  013DAE  323A               	rrcf	(btemp+8)^0,f,c
  5134  013DB0                     u8304:
  5135  013DB0  2E3D               	decfsz	(btemp+11)^0,f,c
  5136  013DB2  D7FB               	goto	u8305
  5137  013DB4  A03A               	btfss	(btemp+8)^0,0,c
  5138  013DB6  D008               	goto	l8900
  5139                           
  5140                           ;daq.c: 96:     return 25.0;
  5141  013DB8  0E00               	movlw	0
  5142  013DBA  6E32               	movwf	btemp^0,c
  5143  013DBC  0E00               	movlw	0
  5144  013DBE  6E33               	movwf	(btemp+1)^0,c
  5145  013DC0  0EC8               	movlw	200
  5146  013DC2  6E34               	movwf	(btemp+2)^0,c
  5147  013DC4  0E41               	movlw	65
  5148  013DC6  D113               	goto	L4
  5149  013DC8                     l8900:
  5150                           
  5151                           ;daq.c: 98:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  5152  013DC8  0E00               	movlw	0
  5153  013DCA  6EE6               	movwf	postinc1,c
  5154  013DCC  0E00               	movlw	0
  5155  013DCE  6EE6               	movwf	postinc1,c
  5156  013DD0  0E7A               	movlw	122
  5157  013DD2  6EE6               	movwf	postinc1,c
  5158  013DD4  0E44               	movlw	68
  5159  013DD6  6EE6               	movwf	postinc1,c
  5160  013DD8  0E61               	movlw	97
  5161  013DDA  6EE6               	movwf	postinc1,c
  5162  013DDC  0E03               	movlw	3
  5163  013DDE  6EE6               	movwf	postinc1,c
  5164  013DE0  0E84               	movlw	132
  5165  013DE2  6EE6               	movwf	postinc1,c
  5166  013DE4  0E40               	movlw	64
  5167  013DE6  6EE6               	movwf	postinc1,c
  5168                           
  5169                           ;stkvar	_chan @ sp[(-8)+-1]
  5170  013DE8  0EF7               	movlw	-9
  5171  013DEA  50E3               	movf	plusw1,w,c
  5172  013DEC  6EE6               	movwf	postinc1,c
  5173  013DEE  ECB6  F0C6         	call	_get_raw_result	;wreg free
  5174  013DF2  0060  F0C8  F03C   	movff	btemp,btemp+10
  5175  013DF8  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  5176  013DFE  503C               	movf	(btemp+10)^0,w,c
  5177  013E00  6E36               	movwf	(btemp+4)^0,c
  5178  013E02  503D               	movf	(btemp+11)^0,w,c
  5179  013E04  6E37               	movwf	(btemp+5)^0,c
  5180  013E06  6A38               	clrf	(btemp+6)^0,c
  5181  013E08  6A39               	clrf	(btemp+7)^0,c
  5182  013E0A  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  5183  013E10  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  5184  013E16  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  5185  013E1C  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  5186  013E22  0E00               	movlw	0
  5187  013E24  6EE6               	movwf	postinc1,c
  5188  013E26  ECC5  F0AE         	call	___xxtofl	;wreg free
  5189  013E2A  0060  F0CB  FFE6   	movff	btemp,postinc1
  5190  013E30  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5191  013E36  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  5192  013E3C  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  5193  013E42  EC06  F093         	call	___flmul	;wreg free
  5194  013E46  0060  F0CB  FFE6   	movff	btemp,postinc1
  5195  013E4C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5196  013E52  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  5197  013E58  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  5198  013E5E  ECF9  F09A         	call	___fldiv	;wreg free
  5199  013E62  D0D7               	goto	l1687
  5200  013E64                     l8904:
  5201                           
  5202                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
  5203                           ;stkvar	_chan @ sp[(0)+-1]
  5204  013E64  0EFF               	movlw	-1
  5205  013E66  006F FF8C  F03D    	movff	plusw1,btemp+11
  5206  013E6C  0E03               	movlw	3
  5207  013E6E  6E3A               	movwf	(btemp+8)^0,c
  5208  013E70  0E00               	movlw	0
  5209  013E72  6E3B               	movwf	(btemp+9)^0,c
  5210  013E74  2A3D               	incf	(btemp+11)^0,f,c
  5211  013E76  D003               	goto	u8324
  5212  013E78                     u8325:
  5213  013E78  343B               	rlcf	(btemp+9)^0,w,c
  5214  013E7A  323B               	rrcf	(btemp+9)^0,f,c
  5215  013E7C  323A               	rrcf	(btemp+8)^0,f,c
  5216  013E7E                     u8324:
  5217  013E7E  2E3D               	decfsz	(btemp+11)^0,f,c
  5218  013E80  D7FB               	goto	u8325
  5219  013E82  B03A               	btfsc	(btemp+8)^0,0,c
  5220  013E84  D011               	goto	u8350
  5221                           
  5222                           ;stkvar	_chan @ sp[(0)+-1]
  5223  013E86  0EFF               	movlw	-1
  5224  013E88  006F FF8C  F03D    	movff	plusw1,btemp+11
  5225  013E8E  0E00               	movlw	0
  5226  013E90  6E3A               	movwf	(btemp+8)^0,c
  5227  013E92  0E08               	movlw	8
  5228  013E94  6E3B               	movwf	(btemp+9)^0,c
  5229  013E96  2A3D               	incf	(btemp+11)^0,f,c
  5230  013E98  D003               	goto	u8344
  5231  013E9A                     u8345:
  5232  013E9A  343B               	rlcf	(btemp+9)^0,w,c
  5233  013E9C  323B               	rrcf	(btemp+9)^0,f,c
  5234  013E9E  323A               	rrcf	(btemp+8)^0,f,c
  5235  013EA0                     u8344:
  5236  013EA0  2E3D               	decfsz	(btemp+11)^0,f,c
  5237  013EA2  D7FB               	goto	u8345
  5238  013EA4  A03A               	btfss	(btemp+8)^0,0,c
  5239  013EA6  D04E               	goto	l8912
  5240  013EA8                     u8350:
  5241                           
  5242                           ;daq.c: 104:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
  5243  013EA8  0E00               	movlw	0
  5244  013EAA  6EE6               	movwf	postinc1,c
  5245  013EAC  0E00               	movlw	0
  5246  013EAE  6EE6               	movwf	postinc1,c
  5247  013EB0  0E7A               	movlw	122
  5248  013EB2  6EE6               	movwf	postinc1,c
  5249  013EB4  0E44               	movlw	68
  5250  013EB6  6EE6               	movwf	postinc1,c
  5251  013EB8  0E00               	movlw	0
  5252  013EBA  6EE6               	movwf	postinc1,c
  5253  013EBC  0E00               	movlw	0
  5254  013EBE  6EE6               	movwf	postinc1,c
  5255  013EC0  0E20               	movlw	32
  5256  013EC2  6EE6               	movwf	postinc1,c
  5257  013EC4  0E3F               	movlw	63
  5258  013EC6  6EE6               	movwf	postinc1,c
  5259                           
  5260                           ;stkvar	_chan @ sp[(-8)+-1]
  5261  013EC8  0EF7               	movlw	-9
  5262  013ECA  50E3               	movf	plusw1,w,c
  5263  013ECC  6EE6               	movwf	postinc1,c
  5264  013ECE  ECB6  F0C6         	call	_get_raw_result	;wreg free
  5265  013ED2  0060  F0C8  F03C   	movff	btemp,btemp+10
  5266  013ED8  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  5267  013EDE  503C               	movf	(btemp+10)^0,w,c
  5268  013EE0  6E36               	movwf	(btemp+4)^0,c
  5269  013EE2  503D               	movf	(btemp+11)^0,w,c
  5270  013EE4  6E37               	movwf	(btemp+5)^0,c
  5271  013EE6  6A38               	clrf	(btemp+6)^0,c
  5272  013EE8  6A39               	clrf	(btemp+7)^0,c
  5273  013EEA  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  5274  013EF0  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  5275  013EF6  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  5276  013EFC  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  5277  013F02  0E00               	movlw	0
  5278  013F04  6EE6               	movwf	postinc1,c
  5279  013F06  ECC5  F0AE         	call	___xxtofl	;wreg free
  5280  013F0A  0060  F0CB  FFE6   	movff	btemp,postinc1
  5281  013F10  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5282  013F16  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  5283  013F1C  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  5284  013F22  EC06  F093         	call	___flmul	;wreg free
  5285  013F26  0060  F0CB  FFE6   	movff	btemp,postinc1
  5286  013F2C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5287  013F32  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  5288  013F38  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  5289  013F3E  ECF9  F09A         	call	___fldiv	;wreg free
  5290  013F42  D067               	goto	l1687
  5291  013F44                     l8912:
  5292                           
  5293                           ;daq.c: 106:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  5294  013F44  0E00               	movlw	0
  5295  013F46  6EE6               	movwf	postinc1,c
  5296  013F48  0E00               	movlw	0
  5297  013F4A  6EE6               	movwf	postinc1,c
  5298  013F4C  0E7A               	movlw	122
  5299  013F4E  6EE6               	movwf	postinc1,c
  5300  013F50  0E44               	movlw	68
  5301  013F52  6EE6               	movwf	postinc1,c
  5302  013F54  0E61               	movlw	97
  5303  013F56  6EE6               	movwf	postinc1,c
  5304  013F58  0E03               	movlw	3
  5305  013F5A  6EE6               	movwf	postinc1,c
  5306  013F5C  0E84               	movlw	132
  5307  013F5E  6EE6               	movwf	postinc1,c
  5308  013F60  0E40               	movlw	64
  5309  013F62  6EE6               	movwf	postinc1,c
  5310                           
  5311                           ;stkvar	_chan @ sp[(-8)+-1]
  5312  013F64  0EF7               	movlw	-9
  5313  013F66  50E3               	movf	plusw1,w,c
  5314  013F68  6EE6               	movwf	postinc1,c
  5315  013F6A  ECB6  F0C6         	call	_get_raw_result	;wreg free
  5316  013F6E  0060  F0C8  F03C   	movff	btemp,btemp+10
  5317  013F74  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  5318  013F7A  503C               	movf	(btemp+10)^0,w,c
  5319  013F7C  6E36               	movwf	(btemp+4)^0,c
  5320  013F7E  503D               	movf	(btemp+11)^0,w,c
  5321  013F80  6E37               	movwf	(btemp+5)^0,c
  5322  013F82  6A38               	clrf	(btemp+6)^0,c
  5323  013F84  6A39               	clrf	(btemp+7)^0,c
  5324  013F86  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  5325  013F8C  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  5326  013F92  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  5327  013F98  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  5328  013F9E  0E00               	movlw	0
  5329  013FA0  6EE6               	movwf	postinc1,c
  5330  013FA2  ECC5  F0AE         	call	___xxtofl	;wreg free
  5331  013FA6  0060  F0CB  FFE6   	movff	btemp,postinc1
  5332  013FAC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5333  013FB2  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  5334  013FB8  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  5335  013FBE  EC06  F093         	call	___flmul	;wreg free
  5336  013FC2  0060  F0CB  FFE6   	movff	btemp,postinc1
  5337  013FC8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5338  013FCE  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  5339  013FD4  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  5340  013FDA  ECF9  F09A         	call	___fldiv	;wreg free
  5341  013FDE  D019               	goto	l1687
  5342  013FE0                     l8918:
  5343                           
  5344                           ;daq.c: 109:   return 0.0;
  5345  013FE0  0E00               	movlw	0
  5346  013FE2  6E32               	movwf	btemp^0,c
  5347  013FE4  0E00               	movlw	0
  5348  013FE6  6E33               	movwf	(btemp+1)^0,c
  5349  013FE8  0E00               	movlw	0
  5350  013FEA  6E34               	movwf	(btemp+2)^0,c
  5351  013FEC  0E00               	movlw	0
  5352  013FEE                     L4:
  5353  013FEE  6E35               	movwf	(btemp+3)^0,c
  5354  013FF0  D010               	goto	l1687
  5355  013FF2                     l8926:
  5356                           
  5357                           ;stkvar	_to_what @ sp[(0)+-2]
  5358  013FF2  0EFE               	movlw	-2
  5359  013FF4  50E3               	movf	plusw1,w,c
  5360  013FF6  6E3C               	movwf	(btemp+10)^0,c
  5361  013FF8  6A3D               	clrf	(btemp+11)^0,c
  5362                           
  5363                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5364                           ; Switch size 1, requested type "simple"
  5365                           ; Number of cases is 1, Range of values is 0 to 0
  5366                           ; switch strategies available:
  5367                           ; Name         Instructions Cycles
  5368                           ; simple_byte            4     3 (average)
  5369                           ;	Chosen strategy is simple_byte
  5370  013FFA  503D               	movf	(btemp+11)^0,w,c
  5371  013FFC  0A00               	xorlw	0	; case 0
  5372  013FFE  A4D8               	btfss	status,2,c
  5373  014000  D7EF               	goto	l8918
  5374                           
  5375                           ; Switch size 1, requested type "simple"
  5376                           ; Number of cases is 2, Range of values is 0 to 1
  5377                           ; switch strategies available:
  5378                           ; Name         Instructions Cycles
  5379                           ; simple_byte            7     4 (average)
  5380                           ;	Chosen strategy is simple_byte
  5381  014002  503C               	movf	(btemp+10)^0,w,c
  5382  014004  0A00               	xorlw	0	; case 0
  5383  014006  B4D8               	btfsc	status,2,c
  5384  014008  D5B2               	goto	l8872
  5385  01400A  0A01               	xorlw	1	; case 1
  5386  01400C  B4D8               	btfsc	status,2,c
  5387  01400E  D72A               	goto	l8904
  5388  014010  D7E7               	goto	l8918
  5389  014012                     l1687:
  5390                           
  5391                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  5392  014012  52E5               	movf	postdec1,f,c
  5393  014014  52E5               	movf	postdec1,f,c
  5394  014016  0012               	return		;funcret
  5395  014018                     __end_of_conv_raw_result:
  5396                           	opt callstack 0
  5397                           
  5398 ;; *************** function _nanf *****************
  5399 ;; Defined at:
  5400 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
  5401 ;; Parameters:    Size  Location     Type
  5402 ;;  s               2  [STACK] PTR const unsigned char 
  5403 ;;		 -> STR_45(1), 
  5404 ;; Auto vars:     Size  Location     Type
  5405 ;;  u               4  [STACK] struct .
  5406 ;; Return value:  Size  Location     Type
  5407 ;;                  4  [STACK] float 
  5408 ;; Registers used:
  5409 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
  5410 ;; Tracked objects:
  5411 ;;		On entry : 0/2
  5412 ;;		On exit  : 0/0
  5413 ;;		Unchanged: 0/0
  5414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5419 ;;Total ram usage:        0 bytes
  5420 ;; Hardware stack levels used:    1
  5421 ;; Hardware stack levels required when called:    6
  5422 ;; This function calls:
  5423 ;;		Nothing
  5424 ;; This function is called by:
  5425 ;;		_conv_raw_result
  5426 ;; This function uses a reentrant model
  5427 ;;
  5428                           
  5429                           	psect	text18
  5430  01809A                     __ptext18:
  5431                           	opt callstack 0
  5432  01809A                     _nanf:
  5433                           	opt callstack 0
  5434                           
  5435                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5436  01809A  52E6               	movf	postinc1,f,c
  5437  01809C  52E6               	movf	postinc1,f,c
  5438  01809E  52E6               	movf	postinc1,f,c
  5439  0180A0  52E6               	movf	postinc1,f,c
  5440                           
  5441                           ;incstack = 0
  5442  0180A2  0EFF               	movlw	255
  5443  0180A4  6E3A               	movwf	(btemp+8)^0,c
  5444  0180A6  0EFF               	movlw	255
  5445  0180A8  6E3B               	movwf	(btemp+9)^0,c
  5446  0180AA  0EFF               	movlw	255
  5447  0180AC  6E3C               	movwf	(btemp+10)^0,c
  5448  0180AE  0E7F               	movlw	127
  5449  0180B0  6E3D               	movwf	(btemp+11)^0,c
  5450                           
  5451                           ;stkvar	_u @ sp[(-4)+0]
  5452  0180B2  0EFC               	movlw	-4
  5453  0180B4  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  5454  0180BA  0EFD               	movlw	-3
  5455  0180BC  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  5456  0180C2  0EFE               	movlw	-2
  5457  0180C4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  5458  0180CA  0EFF               	movlw	-1
  5459  0180CC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  5460                           
  5461                           ;stkvar	_u @ sp[(-4)+0]
  5462  0180D2  0EFC               	movlw	-4
  5463  0180D4  006F FF8C  F032    	movff	plusw1,btemp
  5464  0180DA  0EFD               	movlw	-3
  5465  0180DC  006F FF8C  F033    	movff	plusw1,btemp+1
  5466  0180E2  0EFE               	movlw	-2
  5467  0180E4  006F FF8C  F034    	movff	plusw1,btemp+2
  5468  0180EA  0EFF               	movlw	-1
  5469  0180EC  006F FF8C  F035    	movff	plusw1,btemp+3
  5470                           
  5471                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
  5472  0180F2  0EFA               	movlw	250
  5473  0180F4  26E1               	addwf	fsr1l,f,c
  5474  0180F6  0EFF               	movlw	255
  5475  0180F8  22E2               	addwfc	fsr1h,f,c
  5476  0180FA  0012               	return		;funcret
  5477  0180FC                     __end_of_nanf:
  5478                           	opt callstack 0
  5479                           
  5480 ;; *************** function _get_raw_result *****************
  5481 ;; Defined at:
  5482 ;;		line 72 in file "daq.c"
  5483 ;; Parameters:    Size  Location     Type
  5484 ;;  index           1  [STACK] const enum E16136
  5485 ;; Auto vars:     Size  Location     Type
  5486 ;;		None
  5487 ;; Return value:  Size  Location     Type
  5488 ;;                  2  [STACK] unsigned short 
  5489 ;; Registers used:
  5490 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  5491 ;; Tracked objects:
  5492 ;;		On entry : 0/2
  5493 ;;		On exit  : 0/0
  5494 ;;		Unchanged: 0/0
  5495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5500 ;;Total ram usage:        0 bytes
  5501 ;; Hardware stack levels used:    1
  5502 ;; Hardware stack levels required when called:    6
  5503 ;; This function calls:
  5504 ;;		Nothing
  5505 ;; This function is called by:
  5506 ;;		_main
  5507 ;;		_conv_raw_result
  5508 ;; This function uses a reentrant model
  5509 ;;
  5510                           
  5511                           	psect	text19
  5512  018D6C                     __ptext19:
  5513                           	opt callstack 0
  5514  018D6C                     _get_raw_result:
  5515                           	opt callstack 24
  5516                           
  5517                           ;daq.c: 72: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 73: {;daq.c: 
      +                          74:  return R.raw_adc[index];
  5518                           ;stkvar	_index @ sp[(0)+-1]
  5519                           
  5520                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5521                           ;incstack = 0
  5522  018D6C  0EFF               	movlw	-1
  5523  018D6E  50E3               	movf	plusw1,w,c
  5524  018D70  0D02               	mullw	2
  5525  018D72  50F3               	movf	243,w,c
  5526  018D74  0FC7               	addlw	low _R
  5527  018D76  6ED9               	movwf	fsr2l,c
  5528  018D78  6ADA               	clrf	fsr2h,c
  5529  018D7A  006F FF78  F032    	movff	postinc2,btemp
  5530  018D80  006F FF74  F033    	movff	postdec2,btemp+1
  5531                           
  5532                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  5533  018D86  52E5               	movf	postdec1,f,c
  5534  018D88  0012               	return		;funcret
  5535  018D8A                     __end_of_get_raw_result:
  5536                           	opt callstack 0
  5537                           
  5538 ;; *************** function ___xxtofl *****************
  5539 ;; Defined at:
  5540 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  5541 ;; Parameters:    Size  Location     Type
  5542 ;;  sign            1  [STACK] unsigned char 
  5543 ;;  val             4  [STACK] long 
  5544 ;; Auto vars:     Size  Location     Type
  5545 ;;  arg             4  [STACK] unsigned long 
  5546 ;;  exp             1  [STACK] unsigned char 
  5547 ;; Return value:  Size  Location     Type
  5548 ;;                  4  [STACK] unsigned char 
  5549 ;; Registers used:
  5550 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  5551 ;; Tracked objects:
  5552 ;;		On entry : 0/2
  5553 ;;		On exit  : 0/0
  5554 ;;		Unchanged: 0/0
  5555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5560 ;;Total ram usage:        0 bytes
  5561 ;; Hardware stack levels used:    1
  5562 ;; Hardware stack levels required when called:    6
  5563 ;; This function calls:
  5564 ;;		Nothing
  5565 ;; This function is called by:
  5566 ;;		_conv_raw_result
  5567 ;; This function uses a reentrant model
  5568 ;;
  5569                           
  5570                           	psect	text20
  5571  015D8A                     __ptext20:
  5572                           	opt callstack 0
  5573  015D8A                     ___xxtofl:
  5574                           	opt callstack 0
  5575                           
  5576                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5577  015D8A  0E05               	movlw	5
  5578  015D8C  26E1               	addwf	fsr1l,f,c
  5579  015D8E  0E00               	movlw	0
  5580  015D90  22E2               	addwfc	fsr1h,f,c
  5581                           
  5582                           ;stkvar	_sign @ sp[(-5)+-1]
  5583                           
  5584                           ;incstack = 0
  5585  015D92  0EFA               	movlw	-6
  5586  015D94  50E3               	movf	plusw1,w,c
  5587  015D96  B4D8               	btfsc	status,2,c
  5588  015D98  D01D               	goto	l8326
  5589                           
  5590                           ;stkvar	_val @ sp[(-5)+-5]
  5591  015D9A  0EF9               	movlw	-7
  5592  015D9C  AEE3               	btfss	plusw1,7,c
  5593  015D9E  D01A               	goto	l8326
  5594                           
  5595                           ;stkvar	_val @ sp[(-5)+-5]
  5596  015DA0  0EF6               	movlw	-10
  5597  015DA2  006F FF8C  F03A    	movff	plusw1,btemp+8
  5598  015DA8  0EF7               	movlw	-9
  5599  015DAA  006F FF8C  F03B    	movff	plusw1,btemp+9
  5600  015DB0  0EF8               	movlw	-8
  5601  015DB2  006F FF8C  F03C    	movff	plusw1,btemp+10
  5602  015DB8  0EF9               	movlw	-7
  5603  015DBA  006F FF8C  F03D    	movff	plusw1,btemp+11
  5604  015DC0  1E3A               	comf	(btemp+8)^0,f,c
  5605  015DC2  1E3B               	comf	(btemp+9)^0,f,c
  5606  015DC4  1E3C               	comf	(btemp+10)^0,f,c
  5607  015DC6  1E3D               	comf	(btemp+11)^0,f,c
  5608  015DC8  2A3A               	incf	(btemp+8)^0,f,c
  5609  015DCA  0E00               	movlw	0
  5610  015DCC  223B               	addwfc	(btemp+9)^0,f,c
  5611  015DCE  223C               	addwfc	(btemp+10)^0,f,c
  5612  015DD0  223D               	addwfc	(btemp+11)^0,f,c
  5613  015DD2  D010               	goto	L5
  5614  015DD4                     l8326:
  5615                           
  5616                           ;stkvar	_val @ sp[(-5)+-5]
  5617  015DD4  0EF6               	movlw	-10
  5618  015DD6  006F FF8C  F03A    	movff	plusw1,btemp+8
  5619  015DDC  0EF7               	movlw	-9
  5620  015DDE  006F FF8C  F03B    	movff	plusw1,btemp+9
  5621  015DE4  0EF8               	movlw	-8
  5622  015DE6  006F FF8C  F03C    	movff	plusw1,btemp+10
  5623  015DEC  0EF9               	movlw	-7
  5624  015DEE  006F FF8C  F03D    	movff	plusw1,btemp+11
  5625  015DF4                     L5:
  5626                           
  5627                           ;stkvar	_arg @ sp[(-5)+0]
  5628  015DF4  0EFB               	movlw	-5
  5629  015DF6  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  5630  015DFC  0EFC               	movlw	-4
  5631  015DFE  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  5632  015E04  0EFD               	movlw	-3
  5633  015E06  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  5634  015E0C  0EFE               	movlw	-2
  5635  015E0E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  5636                           
  5637                           ;stkvar	_val @ sp[(-5)+-5]
  5638  015E14  0EF6               	movlw	-10
  5639  015E16  50E3               	movf	plusw1,w,c
  5640  015E18  E113               	bnz	l8334
  5641  015E1A  0EF7               	movlw	-9
  5642  015E1C  50E3               	movf	plusw1,w,c
  5643  015E1E  E110               	bnz	l8334
  5644  015E20  0EF8               	movlw	-8
  5645  015E22  50E3               	movf	plusw1,w,c
  5646  015E24  E10D               	bnz	l8334
  5647  015E26  0EF9               	movlw	-7
  5648  015E28  50E3               	movf	plusw1,w,c
  5649  015E2A  A4D8               	btfss	status,2,c
  5650  015E2C  D009               	goto	l8334
  5651  015E2E  0E00               	movlw	0
  5652  015E30  6E32               	movwf	btemp^0,c
  5653  015E32  0E00               	movlw	0
  5654  015E34  6E33               	movwf	(btemp+1)^0,c
  5655  015E36  0E00               	movlw	0
  5656  015E38  6E34               	movwf	(btemp+2)^0,c
  5657  015E3A  0E00               	movlw	0
  5658  015E3C  6E35               	movwf	(btemp+3)^0,c
  5659  015E3E  D0A2               	goto	l2769
  5660  015E40                     l8334:
  5661  015E40  0E96               	movlw	150
  5662  015E42  6E3D               	movwf	(btemp+11)^0,c
  5663                           
  5664                           ;stkvar	_exp @ sp[(-5)+4]
  5665  015E44  0EFF               	movlw	-1
  5666  015E46  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  5667  015E4C  D00B               	goto	l8338
  5668  015E4E                     l8336:
  5669                           
  5670                           ;stkvar	_exp @ sp[(-5)+4]
  5671  015E4E  0EFF               	movlw	-1
  5672  015E50  2AE3               	incf	plusw1,f,c
  5673                           
  5674                           ;stkvar	_arg @ sp[(-5)+0]
  5675  015E52  90D8               	bcf	status,0,c
  5676  015E54  0EFE               	movlw	-2
  5677  015E56  32E3               	rrcf	plusw1,f,c
  5678  015E58  0EFD               	movlw	-3
  5679  015E5A  32E3               	rrcf	plusw1,f,c
  5680  015E5C  0EFC               	movlw	-4
  5681  015E5E  32E3               	rrcf	plusw1,f,c
  5682  015E60  0EFB               	movlw	-5
  5683  015E62  32E3               	rrcf	plusw1,f,c
  5684  015E64                     l8338:
  5685                           
  5686                           ;stkvar	_arg @ sp[(-5)+0]
  5687  015E64  50E1               	movf	fsr1l,w,c
  5688  015E66  0FFB               	addlw	-5
  5689  015E68  6ED9               	movwf	fsr2l,c
  5690  015E6A  50E2               	movf	fsr1h,w,c
  5691  015E6C  6EDA               	movwf	fsr2h,c
  5692  015E6E  0EFF               	movlw	255
  5693  015E70  22DA               	addwfc	fsr2h,f,c
  5694  015E72  52DE               	movf	postinc2,f,c
  5695  015E74  52DE               	movf	postinc2,f,c
  5696  015E76  52DE               	movf	postinc2,f,c
  5697  015E78  0EFE               	movlw	254
  5698  015E7A  14DD               	andwf	postdec2,w,c
  5699  015E7C  B4D8               	btfsc	status,2,c
  5700  015E7E  D018               	goto	l8346
  5701  015E80  D7E6               	goto	l8336
  5702  015E82                     l8340:
  5703                           
  5704                           ;stkvar	_exp @ sp[(-5)+4]
  5705  015E82  0EFF               	movlw	-1
  5706  015E84  2AE3               	incf	plusw1,f,c
  5707                           
  5708                           ;stkvar	_arg @ sp[(-5)+0]
  5709  015E86  50E1               	movf	fsr1l,w,c
  5710  015E88  0FFB               	addlw	-5
  5711  015E8A  6ED9               	movwf	fsr2l,c
  5712  015E8C  50E2               	movf	fsr1h,w,c
  5713  015E8E  6EDA               	movwf	fsr2h,c
  5714  015E90  0EFF               	movlw	255
  5715  015E92  22DA               	addwfc	fsr2h,f,c
  5716  015E94  2ADE               	incf	postinc2,f,c
  5717  015E96  0E00               	movlw	0
  5718  015E98  22DE               	addwfc	postinc2,f,c
  5719  015E9A  22DE               	addwfc	postinc2,f,c
  5720  015E9C  22DE               	addwfc	postinc2,f,c
  5721                           
  5722                           ;stkvar	_arg @ sp[(-5)+0]
  5723  015E9E  90D8               	bcf	status,0,c
  5724  015EA0  0EFE               	movlw	-2
  5725  015EA2  32E3               	rrcf	plusw1,f,c
  5726  015EA4  0EFD               	movlw	-3
  5727  015EA6  32E3               	rrcf	plusw1,f,c
  5728  015EA8  0EFC               	movlw	-4
  5729  015EAA  32E3               	rrcf	plusw1,f,c
  5730  015EAC  0EFB               	movlw	-5
  5731  015EAE  32E3               	rrcf	plusw1,f,c
  5732  015EB0                     l8346:
  5733                           
  5734                           ;stkvar	_arg @ sp[(-5)+0]
  5735  015EB0  50E1               	movf	fsr1l,w,c
  5736  015EB2  0FFB               	addlw	-5
  5737  015EB4  6ED9               	movwf	fsr2l,c
  5738  015EB6  50E2               	movf	fsr1h,w,c
  5739  015EB8  6EDA               	movwf	fsr2h,c
  5740  015EBA  0EFF               	movlw	255
  5741  015EBC  22DA               	addwfc	fsr2h,f,c
  5742  015EBE  52DE               	movf	postinc2,f,c
  5743  015EC0  52DE               	movf	postinc2,f,c
  5744  015EC2  52DE               	movf	postinc2,f,c
  5745  015EC4  0EFF               	movlw	255
  5746  015EC6  14DD               	andwf	postdec2,w,c
  5747  015EC8  B4D8               	btfsc	status,2,c
  5748  015ECA  D00C               	goto	l8350
  5749  015ECC  D7DA               	goto	l8340
  5750  015ECE                     l8348:
  5751                           
  5752                           ;stkvar	_exp @ sp[(-5)+4]
  5753  015ECE  0EFF               	movlw	-1
  5754  015ED0  06E3               	decf	plusw1,f,c
  5755                           
  5756                           ;stkvar	_arg @ sp[(-5)+0]
  5757  015ED2  90D8               	bcf	status,0,c
  5758  015ED4  0EFB               	movlw	-5
  5759  015ED6  36E3               	rlcf	plusw1,f,c
  5760  015ED8  0EFC               	movlw	-4
  5761  015EDA  36E3               	rlcf	plusw1,f,c
  5762  015EDC  0EFD               	movlw	-3
  5763  015EDE  36E3               	rlcf	plusw1,f,c
  5764  015EE0  0EFE               	movlw	-2
  5765  015EE2  36E3               	rlcf	plusw1,f,c
  5766  015EE4                     l8350:
  5767                           
  5768                           ;stkvar	_arg @ sp[(-5)+0]
  5769  015EE4  0EFD               	movlw	-3
  5770  015EE6  BEE3               	btfsc	plusw1,7,c
  5771  015EE8  D007               	goto	u8040
  5772                           
  5773                           ;stkvar	_exp @ sp[(-5)+4]
  5774  015EEA  0EFF               	movlw	-1
  5775  015EEC  006F FF8C  F032    	movff	plusw1,btemp
  5776  015EF2  0E02               	movlw	2
  5777  015EF4  6032               	cpfslt	btemp^0,c
  5778  015EF6  D7EB               	goto	l8348
  5779  015EF8                     u8040:
  5780                           
  5781                           ;stkvar	_exp @ sp[(-5)+4]
  5782  015EF8  0EFF               	movlw	-1
  5783  015EFA  B0E3               	btfsc	plusw1,0,c
  5784  015EFC  D002               	goto	l8358
  5785                           
  5786                           ;stkvar	_arg @ sp[(-5)+0]
  5787  015EFE  0EFD               	movlw	-3
  5788  015F00  9EE3               	bcf	plusw1,7,c
  5789  015F02                     l8358:
  5790                           
  5791                           ;stkvar	_exp @ sp[(-5)+4]
  5792  015F02  50E1               	movf	fsr1l,w,c
  5793  015F04  0FFF               	addlw	-1
  5794  015F06  6ED9               	movwf	fsr2l,c
  5795  015F08  50E2               	movf	fsr1h,w,c
  5796  015F0A  6EDA               	movwf	fsr2h,c
  5797  015F0C  0EFF               	movlw	255
  5798  015F0E  22DA               	addwfc	fsr2h,f,c
  5799  015F10  90D8               	bcf	status,0,c
  5800  015F12  32DF               	rrcf	indf2,f,c
  5801                           
  5802                           ;stkvar	_exp @ sp[(-5)+4]
  5803  015F14  0EFF               	movlw	-1
  5804  015F16  006F FF8C  F03D    	movff	plusw1,btemp+11
  5805  015F1C  0060  F0F4  F036   	movff	btemp+11,btemp+4
  5806  015F22  6A37               	clrf	(btemp+5)^0,c
  5807  015F24  6A38               	clrf	(btemp+6)^0,c
  5808  015F26  6A39               	clrf	(btemp+7)^0,c
  5809  015F28  0060  F0D8  F039   	movff	btemp+4,btemp+7
  5810  015F2E  6A38               	clrf	(btemp+6)^0,c
  5811  015F30  6A37               	clrf	(btemp+5)^0,c
  5812  015F32  6A36               	clrf	(btemp+4)^0,c
  5813                           
  5814                           ;stkvar	_arg @ sp[(-5)+0]
  5815  015F34  50E1               	movf	fsr1l,w,c
  5816  015F36  0FFB               	addlw	-5
  5817  015F38  6ED9               	movwf	fsr2l,c
  5818  015F3A  50E2               	movf	fsr1h,w,c
  5819  015F3C  6EDA               	movwf	fsr2h,c
  5820  015F3E  0EFF               	movlw	255
  5821  015F40  22DA               	addwfc	fsr2h,f,c
  5822  015F42  5036               	movf	(btemp+4)^0,w,c
  5823  015F44  12DE               	iorwf	postinc2,f,c
  5824  015F46  5037               	movf	(btemp+5)^0,w,c
  5825  015F48  12DE               	iorwf	postinc2,f,c
  5826  015F4A  5038               	movf	(btemp+6)^0,w,c
  5827  015F4C  12DE               	iorwf	postinc2,f,c
  5828  015F4E  5039               	movf	(btemp+7)^0,w,c
  5829  015F50  12DE               	iorwf	postinc2,f,c
  5830                           
  5831                           ;stkvar	_sign @ sp[(-5)+-1]
  5832  015F52  0EFA               	movlw	-6
  5833  015F54  50E3               	movf	plusw1,w,c
  5834  015F56  B4D8               	btfsc	status,2,c
  5835  015F58  D005               	goto	l8368
  5836                           
  5837                           ;stkvar	_val @ sp[(-5)+-5]
  5838  015F5A  0EF9               	movlw	-7
  5839  015F5C  AEE3               	btfss	plusw1,7,c
  5840  015F5E  D002               	goto	l8368
  5841                           
  5842                           ;stkvar	_arg @ sp[(-5)+0]
  5843  015F60  0EFE               	movlw	-2
  5844  015F62  8EE3               	bsf	plusw1,7,c
  5845  015F64                     l8368:
  5846                           
  5847                           ;stkvar	_arg @ sp[(-5)+0]
  5848  015F64  0EFB               	movlw	-5
  5849  015F66  006F FF8C  F032    	movff	plusw1,btemp
  5850  015F6C  0EFC               	movlw	-4
  5851  015F6E  006F FF8C  F033    	movff	plusw1,btemp+1
  5852  015F74  0EFD               	movlw	-3
  5853  015F76  006F FF8C  F034    	movff	plusw1,btemp+2
  5854  015F7C  0EFE               	movlw	-2
  5855  015F7E  006F FF8C  F035    	movff	plusw1,btemp+3
  5856  015F84                     l2769:
  5857                           
  5858                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  5859  015F84  0EF6               	movlw	246
  5860  015F86  26E1               	addwf	fsr1l,f,c
  5861  015F88  0EFF               	movlw	255
  5862  015F8A  22E2               	addwfc	fsr1h,f,c
  5863  015F8C  0012               	return		;funcret
  5864  015F8E                     __end_of___xxtofl:
  5865                           	opt callstack 0
  5866                           
  5867 ;; *************** function _clear_hid_pflags *****************
  5868 ;; Defined at:
  5869 ;;		line 51 in file "hid.c"
  5870 ;; Parameters:    Size  Location     Type
  5871 ;;  h               1  [STACK] PTR struct H_data
  5872 ;;		 -> H(7), 
  5873 ;; Auto vars:     Size  Location     Type
  5874 ;;		None
  5875 ;; Return value:  Size  Location     Type
  5876 ;;                  1  [STACK] void 
  5877 ;; Registers used:
  5878 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5879 ;; Tracked objects:
  5880 ;;		On entry : 0/2
  5881 ;;		On exit  : 0/0
  5882 ;;		Unchanged: 0/0
  5883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5888 ;;Total ram usage:        0 bytes
  5889 ;; Hardware stack levels used:    1
  5890 ;; Hardware stack levels required when called:    6
  5891 ;; This function calls:
  5892 ;;		Nothing
  5893 ;; This function is called by:
  5894 ;;		_main
  5895 ;; This function uses a reentrant model
  5896 ;;
  5897                           
  5898                           	psect	text21
  5899  018C5A                     __ptext21:
  5900                           	opt callstack 0
  5901  018C5A                     _clear_hid_pflags:
  5902                           	opt callstack 24
  5903                           
  5904                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  5905                           ;stkvar	_h @ sp[(0)+-1]
  5906                           
  5907                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5908                           ;incstack = 0
  5909  018C5A  0EFF               	movlw	-1
  5910  018C5C  50E3               	movf	plusw1,w,c
  5911  018C5E  6ED9               	movwf	fsr2l,c
  5912  018C60  6ADA               	clrf	fsr2h,c
  5913  018C62  0E03               	movlw	3
  5914  018C64  26D9               	addwf	fsr2l,f,c
  5915  018C66  0E00               	movlw	0
  5916  018C68  6EDF               	movwf	indf2,c
  5917                           
  5918                           ;hid.c: 54:  h->enter_p = SW_OFF;
  5919                           ;stkvar	_h @ sp[(0)+-1]
  5920  018C6A  0EFF               	movlw	-1
  5921  018C6C  50E3               	movf	plusw1,w,c
  5922  018C6E  6ED9               	movwf	fsr2l,c
  5923  018C70  6ADA               	clrf	fsr2h,c
  5924  018C72  0E05               	movlw	5
  5925  018C74  26D9               	addwf	fsr2l,f,c
  5926  018C76  0E00               	movlw	0
  5927  018C78  6EDF               	movwf	indf2,c
  5928                           
  5929                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  5930  018C7A  52E5               	movf	postdec1,f,c
  5931  018C7C  0012               	return		;funcret
  5932  018C7E                     __end_of_clear_hid_pflags:
  5933                           	opt callstack 0
  5934                           
  5935 ;; *************** function _clear_adc_scan *****************
  5936 ;; Defined at:
  5937 ;;		line 64 in file "daq.c"
  5938 ;; Parameters:    Size  Location     Type
  5939 ;;		None
  5940 ;; Auto vars:     Size  Location     Type
  5941 ;;		None
  5942 ;; Return value:  Size  Location     Type
  5943 ;;                  1  [STACK] void 
  5944 ;; Registers used:
  5945 ;;		None
  5946 ;; Tracked objects:
  5947 ;;		On entry : 0/1
  5948 ;;		On exit  : 3F/0
  5949 ;;		Unchanged: 0/0
  5950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5955 ;;Total ram usage:        0 bytes
  5956 ;; Hardware stack levels used:    1
  5957 ;; Hardware stack levels required when called:    6
  5958 ;; This function calls:
  5959 ;;		Nothing
  5960 ;; This function is called by:
  5961 ;;		_main
  5962 ;; This function uses a reentrant model
  5963 ;;
  5964                           
  5965                           	psect	text22
  5966  018F8A                     __ptext22:
  5967                           	opt callstack 0
  5968  018F8A                     _clear_adc_scan:
  5969                           	opt callstack 24
  5970                           
  5971                           ;daq.c: 66:  R.done = 0;
  5972                           
  5973                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5974                           ;incstack = 0
  5975  018F8A  0100               	movlb	0	; () banked
  5976  018F8C  6BEE               	clrf	(_R+39)& (0+255),b	;volatile
  5977                           
  5978                           ; BSR set to: 0
  5979                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  5980  018F8E  0012               	return		;funcret
  5981  018F90                     __end_of_clear_adc_scan:
  5982                           	opt callstack 0
  5983                           
  5984 ;; *************** function _check_help *****************
  5985 ;; Defined at:
  5986 ;;		line 40 in file "mconfig.c"
  5987 ;; Parameters:    Size  Location     Type
  5988 ;;  flipper         1  [STACK] const _Bool 
  5989 ;; Auto vars:     Size  Location     Type
  5990 ;;  estatus         1    0        _Bool 
  5991 ;; Return value:  Size  Location     Type
  5992 ;;                  1  [STACK] _Bool 
  5993 ;; Registers used:
  5994 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5995 ;; Tracked objects:
  5996 ;;		On entry : 3F/2
  5997 ;;		On exit  : 0/0
  5998 ;;		Unchanged: 0/0
  5999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6004 ;;Total ram usage:        0 bytes
  6005 ;; Hardware stack levels used:    1
  6006 ;; Hardware stack levels required when called:   18
  6007 ;; This function calls:
  6008 ;;		_StartTimer
  6009 ;;		_TimerDone
  6010 ;;		_display_help
  6011 ;;		_display_info
  6012 ;;		_get_vterm_ptr
  6013 ;;		_help_button
  6014 ;;		_mode_lamp_bright
  6015 ;;		_mode_lamp_dim
  6016 ;;		_set_display_info
  6017 ;;		_set_temp_display_help
  6018 ;;		_set_vterm
  6019 ;;		_sprintf
  6020 ;;		_update_lcd
  6021 ;;		_vterm_dump
  6022 ;; This function is called by:
  6023 ;;		_main
  6024 ;; This function uses a reentrant model
  6025 ;;
  6026                           
  6027                           	psect	text23
  6028  015B78                     __ptext23:
  6029                           	opt callstack 0
  6030  015B78                     _check_help:
  6031                           	opt callstack 12
  6032                           
  6033                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  6034                           
  6035                           ; BSR set to: 0
  6036                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6037                           ;incstack = 0
  6038  015B78  EC4B  F0C3         	call	_help_button	;wreg free
  6039  015B7C  5032               	movf	btemp^0,w,c
  6040  015B7E  B4D8               	btfsc	status,2,c
  6041  015B80  D0D0               	goto	l10762
  6042  015B82  ECB5  F0C7         	call	_display_info	;wreg free
  6043  015B86  0432               	decf	btemp^0,w,c
  6044  015B88  B4D8               	btfsc	status,2,c
  6045  015B8A  D0CB               	goto	l10762
  6046                           
  6047                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  6048  015B8C  0EDC               	movlw	220
  6049  015B8E  6EE6               	movwf	postinc1,c
  6050  015B90  0E05               	movlw	5
  6051  015B92  6EE6               	movwf	postinc1,c
  6052  015B94  0E0B               	movlw	11
  6053  015B96  6EE6               	movwf	postinc1,c
  6054  015B98  EC2D  F0C3         	call	_StartTimer	;wreg free
  6055                           
  6056                           ;mconfig.c: 48:   if (V.debug)
  6057  015B9C  0102               	movlb	2	; () banked
  6058  015B9E  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  6059                           
  6060                           ; BSR set to: 2
  6061                           ;mconfig.c: 49:    vterm_dump();
  6062  015BA0  EC0B  F0B5         	call	_vterm_dump	;wreg free
  6063                           
  6064                           ;mconfig.c: 51:   set_vterm(1);
  6065  015BA4  0E01               	movlw	1
  6066  015BA6  6EE6               	movwf	postinc1,c
  6067  015BA8  EC00  F0C7         	call	_set_vterm	;wreg free
  6068                           
  6069                           ; BSR set to: 5
  6070                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  6071  015BAC  ECB5  F0C7         	call	_display_info	;wreg free
  6072  015BB0  5032               	movf	btemp^0,w,c
  6073  015BB2  6EE6               	movwf	postinc1,c
  6074  015BB4  EC75  F0C7         	call	_set_temp_display_help	;wreg free
  6075                           
  6076                           ; BSR set to: 2
  6077                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  6078  015BB8  0E01               	movlw	1
  6079  015BBA  6EE6               	movwf	postinc1,c
  6080  015BBC  ECC5  F0C6         	call	_set_display_info	;wreg free
  6081                           
  6082                           ;mconfig.c: 54:   if (flipper) {
  6083                           ;stkvar	_flipper @ sp[(0)+-1]
  6084  015BC0  0EFF               	movlw	-1
  6085  015BC2  50E3               	movf	plusw1,w,c
  6086  015BC4  B4D8               	btfsc	status,2,c
  6087  015BC6  D019               	goto	l10748
  6088                           
  6089                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  6090  015BC8  0EC0               	movlw	low STR_27
  6091  015BCA  6EE6               	movwf	postinc1,c
  6092  015BCC  0EFF               	movlw	high STR_27
  6093  015BCE  6EE6               	movwf	postinc1,c
  6094  015BD0  0E6C               	movlw	low STR_29
  6095  015BD2  6EE6               	movwf	postinc1,c
  6096  015BD4  0EFE               	movlw	high STR_29
  6097  015BD6  6EE6               	movwf	postinc1,c
  6098  015BD8  0E01               	movlw	1
  6099  015BDA  6EE6               	movwf	postinc1,c
  6100  015BDC  0E00               	movlw	0
  6101  015BDE  6EE6               	movwf	postinc1,c
  6102  015BE0  EC31  F0C4         	call	_get_vterm_ptr	;wreg free
  6103  015BE4  0060  F0CB  FFE6   	movff	btemp,postinc1
  6104  015BEA  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6105  015BF0  0E06               	movlw	6
  6106  015BF2  6EE6               	movwf	postinc1,c
  6107  015BF4  ECD1  F0B7         	call	_sprintf	;wreg free
  6108                           
  6109                           ;mconfig.c: 56:   } else {
  6110  015BF8  D018               	goto	l1591
  6111  015BFA                     l10748:
  6112                           
  6113                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  6114  015BFA  0ED6               	movlw	low STR_28
  6115  015BFC  6EE6               	movwf	postinc1,c
  6116  015BFE  0EFF               	movlw	high STR_28
  6117  015C00  6EE6               	movwf	postinc1,c
  6118  015C02  0E6C               	movlw	low STR_29
  6119  015C04  6EE6               	movwf	postinc1,c
  6120  015C06  0EFE               	movlw	high STR_29
  6121  015C08  6EE6               	movwf	postinc1,c
  6122  015C0A  0E01               	movlw	1
  6123  015C0C  6EE6               	movwf	postinc1,c
  6124  015C0E  0E00               	movlw	0
  6125  015C10  6EE6               	movwf	postinc1,c
  6126  015C12  EC31  F0C4         	call	_get_vterm_ptr	;wreg free
  6127  015C16  0060  F0CB  FFE6   	movff	btemp,postinc1
  6128  015C1C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6129  015C22  0E06               	movlw	6
  6130  015C24  6EE6               	movwf	postinc1,c
  6131  015C26  ECD1  F0B7         	call	_sprintf	;wreg free
  6132  015C2A                     l1591:
  6133                           
  6134                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  6135  015C2A  0102               	movlb	2	; () banked
  6136  015C2C  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  6137  015C2E  32E8               	rrcf	wreg,f,c
  6138  015C30  32E8               	rrcf	wreg,f,c
  6139  015C32  0B03               	andlw	3
  6140  015C34  0D24               	mullw	36
  6141  015C36  0E12               	movlw	18
  6142  015C38  26F3               	addwf	243,f,c
  6143  015C3A  0E00               	movlw	0
  6144  015C3C  22F4               	addwfc	244,f,c
  6145  015C3E  0EB1               	movlw	low _T
  6146  015C40  6E3C               	movwf	(btemp+10)^0,c
  6147  015C42  0EFD               	movlw	high _T
  6148  015C44  6E3D               	movwf	(btemp+11)^0,c
  6149  015C46  50F3               	movf	243,w,c
  6150  015C48  263C               	addwf	(btemp+10)^0,f,c
  6151  015C4A  50F4               	movf	244,w,c
  6152  015C4C  223D               	addwfc	(btemp+11)^0,f,c
  6153  015C4E  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  6154  015C54  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  6155  015C5A  0ECC               	movlw	low STR_31
  6156  015C5C  6EE6               	movwf	postinc1,c
  6157  015C5E  0EFF               	movlw	high STR_31
  6158  015C60  6EE6               	movwf	postinc1,c
  6159  015C62  0E01               	movlw	1
  6160  015C64  6EE6               	movwf	postinc1,c
  6161  015C66  0E01               	movlw	1
  6162  015C68  6EE6               	movwf	postinc1,c
  6163  015C6A  EC31  F0C4         	call	_get_vterm_ptr	;wreg free
  6164  015C6E  0060  F0CB  FFE6   	movff	btemp,postinc1
  6165  015C74  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6166  015C7A  0E06               	movlw	6
  6167  015C7C  6EE6               	movwf	postinc1,c
  6168  015C7E  ECD1  F0B7         	call	_sprintf	;wreg free
  6169                           
  6170                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  6171  015C82  0102               	movlb	2	; () banked
  6172  015C84  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  6173  015C86  32E8               	rrcf	wreg,f,c
  6174  015C88  32E8               	rrcf	wreg,f,c
  6175  015C8A  0B03               	andlw	3
  6176  015C8C  0D24               	mullw	36
  6177  015C8E  0EB1               	movlw	low _T
  6178  015C90  6E3C               	movwf	(btemp+10)^0,c
  6179  015C92  0EFD               	movlw	high _T
  6180  015C94  6E3D               	movwf	(btemp+11)^0,c
  6181  015C96  50F3               	movf	243,w,c
  6182  015C98  263C               	addwf	(btemp+10)^0,f,c
  6183  015C9A  50F4               	movf	244,w,c
  6184  015C9C  223D               	addwfc	(btemp+11)^0,f,c
  6185  015C9E  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  6186  015CA4  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  6187  015CAA  0ECC               	movlw	low STR_31
  6188  015CAC  6EE6               	movwf	postinc1,c
  6189  015CAE  0EFF               	movlw	high STR_31
  6190  015CB0  6EE6               	movwf	postinc1,c
  6191  015CB2  0E01               	movlw	1
  6192  015CB4  6EE6               	movwf	postinc1,c
  6193  015CB6  0E02               	movlw	2
  6194  015CB8  6EE6               	movwf	postinc1,c
  6195  015CBA  EC31  F0C4         	call	_get_vterm_ptr	;wreg free
  6196  015CBE  0060  F0CB  FFE6   	movff	btemp,postinc1
  6197  015CC4  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6198  015CCA  0E06               	movlw	6
  6199  015CCC  6EE6               	movwf	postinc1,c
  6200  015CCE  ECD1  F0B7         	call	_sprintf	;wreg free
  6201                           
  6202                           ;mconfig.c: 61:   V.help_id++;
  6203  015CD2  EE20  F29B         	lfsr	2,_V+155	;volatile
  6204  015CD6  38DF               	swapf	223,w,c
  6205  015CD8  6E3D               	movwf	(btemp+11)^0,c
  6206  015CDA  323D               	rrcf	(btemp+11)^0,f,c
  6207  015CDC  303D               	rrcf	(btemp+11)^0,w,c
  6208  015CDE  0B03               	andlw	3
  6209  015CE0  6E3D               	movwf	(btemp+11)^0,c
  6210  015CE2  2A3D               	incf	(btemp+11)^0,f,c
  6211  015CE4  3A3D               	swapf	(btemp+11)^0,f,c
  6212  015CE6  363D               	rlcf	(btemp+11)^0,f,c
  6213  015CE8  363D               	rlcf	(btemp+11)^0,f,c
  6214  015CEA  50DF               	movf	223,w,c
  6215  015CEC  183D               	xorwf	(btemp+11)^0,w,c
  6216  015CEE  0B3F               	andlw	-193
  6217  015CF0  183D               	xorwf	(btemp+11)^0,w,c
  6218  015CF2  6EDF               	movwf	223,c
  6219                           
  6220                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  6221  015CF4  0EB8               	movlw	184
  6222  015CF6  6EE6               	movwf	postinc1,c
  6223  015CF8  0E0B               	movlw	11
  6224  015CFA  6EE6               	movwf	postinc1,c
  6225  015CFC  0E09               	movlw	9
  6226  015CFE  6EE6               	movwf	postinc1,c
  6227  015D00  EC2D  F0C3         	call	_StartTimer	;wreg free
  6228                           
  6229                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  6230  015D04  0EB8               	movlw	184
  6231  015D06  6EE6               	movwf	postinc1,c
  6232  015D08  0E0B               	movlw	11
  6233  015D0A  6EE6               	movwf	postinc1,c
  6234  015D0C  0E07               	movlw	7
  6235  015D0E  6EE6               	movwf	postinc1,c
  6236  015D10  EC2D  F0C3         	call	_StartTimer	;wreg free
  6237                           
  6238                           ;mconfig.c: 64:   mode_lamp_bright();
  6239  015D14  EC84  F0C7         	call	_mode_lamp_bright	;wreg free
  6240                           
  6241                           ;mconfig.c: 65:   update_lcd(1);
  6242  015D18  0E01               	movlw	1
  6243  015D1A  6EE6               	movwf	postinc1,c
  6244  015D1C  EC4A  F0B7         	call	_update_lcd	;wreg free
  6245                           
  6246                           ;mconfig.c: 67:  } else {
  6247  015D20  D032               	goto	l1592
  6248  015D22                     l10762:
  6249                           
  6250                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  6251  015D22  0E09               	movlw	9
  6252  015D24  6EE6               	movwf	postinc1,c
  6253  015D26  EC3F  F0C6         	call	_TimerDone	;wreg free
  6254  015D2A  5032               	movf	btemp^0,w,c
  6255  015D2C  B4D8               	btfsc	status,2,c
  6256  015D2E  D02B               	goto	l1592
  6257                           
  6258                           ;mconfig.c: 69:    set_vterm(0);
  6259  015D30  0E00               	movlw	0
  6260  015D32  6EE6               	movwf	postinc1,c
  6261  015D34  EC00  F0C7         	call	_set_vterm	;wreg free
  6262                           
  6263                           ; BSR set to: 5
  6264                           ;mconfig.c: 70:    V.help = 0;
  6265  015D38  0102               	movlb	2	; () banked
  6266  015D3A  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  6267                           
  6268                           ; BSR set to: 2
  6269                           ;mconfig.c: 71:    set_display_info(display_help());
  6270  015D3C  ECB9  F0C7         	call	_display_help	;wreg free
  6271  015D40  5032               	movf	btemp^0,w,c
  6272  015D42  6EE6               	movwf	postinc1,c
  6273  015D44  ECC5  F0C6         	call	_set_display_info	;wreg free
  6274                           
  6275                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  6276  015D48  0060  FA57  FFE6   	movff	_V+149,postinc1
  6277  015D4E  0060  FA5B  FFE6   	movff	_V+150,postinc1
  6278  015D54  EC29  F0C7         	call	_mode_lamp_dim	;wreg free
  6279                           
  6280                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  6281  015D58  0E0B               	movlw	11
  6282  015D5A  6EE6               	movwf	postinc1,c
  6283  015D5C  EC3F  F0C6         	call	_TimerDone	;wreg free
  6284  015D60  5032               	movf	btemp^0,w,c
  6285  015D62  B4D8               	btfsc	status,2,c
  6286  015D64  D010               	goto	l1592
  6287                           
  6288                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  6289  015D66  0102               	movlb	2	; () banked
  6290  015D68  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  6291  015D6A  A4D8               	btfss	status,2,c
  6292  015D6C  D002               	goto	u10600
  6293  015D6E  0E01               	movlw	1
  6294  015D70  D001               	goto	u10610
  6295  015D72                     u10600:
  6296  015D72  0E00               	movlw	0
  6297  015D74                     u10610:
  6298  015D74  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  6299                           
  6300                           ; BSR set to: 2
  6301                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  6302  015D76  0EDC               	movlw	220
  6303  015D78  6EE6               	movwf	postinc1,c
  6304  015D7A  0E05               	movlw	5
  6305  015D7C  6EE6               	movwf	postinc1,c
  6306  015D7E  0E0B               	movlw	11
  6307  015D80  6EE6               	movwf	postinc1,c
  6308  015D82  EC2D  F0C3         	call	_StartTimer	;wreg free
  6309  015D86                     l1592:
  6310                           
  6311                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  6312  015D86  52E5               	movf	postdec1,f,c
  6313  015D88  0012               	return		;funcret
  6314  015D8A                     __end_of_check_help:
  6315                           	opt callstack 0
  6316                           
  6317 ;; *************** function _vterm_dump *****************
  6318 ;; Defined at:
  6319 ;;		line 121 in file "mconfig.c"
  6320 ;; Parameters:    Size  Location     Type
  6321 ;;		None
  6322 ;; Auto vars:     Size  Location     Type
  6323 ;;		None
  6324 ;; Return value:  Size  Location     Type
  6325 ;;                  1  [STACK] void 
  6326 ;; Registers used:
  6327 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6328 ;; Tracked objects:
  6329 ;;		On entry : 3F/2
  6330 ;;		On exit  : 0/0
  6331 ;;		Unchanged: 0/0
  6332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6337 ;;Total ram usage:        0 bytes
  6338 ;; Hardware stack levels used:    1
  6339 ;; Hardware stack levels required when called:   17
  6340 ;; This function calls:
  6341 ;;		_WaitMs
  6342 ;;		_eaDogM_WriteStringAtPos
  6343 ;;		_get_vterm_ptr
  6344 ;;		_sprintf
  6345 ;;		_wait_lcd_done
  6346 ;; This function is called by:
  6347 ;;		_check_help
  6348 ;; This function uses a reentrant model
  6349 ;;
  6350                           
  6351                           	psect	text24
  6352  016A16                     __ptext24:
  6353                           	opt callstack 0
  6354  016A16                     _vterm_dump:
  6355                           	opt callstack 12
  6356                           
  6357                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  6358                           
  6359                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6360                           ;incstack = 0
  6361  016A16  0E01               	movlw	1
  6362  016A18  6EE6               	movwf	postinc1,c
  6363  016A1A  0E00               	movlw	0
  6364  016A1C  6EE6               	movwf	postinc1,c
  6365  016A1E  EC31  F0C4         	call	_get_vterm_ptr	;wreg free
  6366  016A22  0060  F0CB  FFE6   	movff	btemp,postinc1
  6367  016A28  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6368  016A2E  0E00               	movlw	0
  6369  016A30  6EE6               	movwf	postinc1,c
  6370  016A32  0E00               	movlw	0
  6371  016A34  6EE6               	movwf	postinc1,c
  6372  016A36  EC31  F0C4         	call	_get_vterm_ptr	;wreg free
  6373  016A3A  0060  F0CB  FFE6   	movff	btemp,postinc1
  6374  016A40  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6375  016A46  0EA2               	movlw	low STR_33
  6376  016A48  6EE6               	movwf	postinc1,c
  6377  016A4A  0EFF               	movlw	high STR_33
  6378  016A4C  6EE6               	movwf	postinc1,c
  6379  016A4E  0E01               	movlw	low (_V+1)
  6380  016A50  6EE6               	movwf	postinc1,c
  6381  016A52  0E02               	movlw	high (_V+1)
  6382  016A54  6EE6               	movwf	postinc1,c
  6383  016A56  0E08               	movlw	8
  6384  016A58  6EE6               	movwf	postinc1,c
  6385  016A5A  ECD1  F0B7         	call	_sprintf	;wreg free
  6386                           
  6387                           ;mconfig.c: 124:  wait_lcd_done();
  6388  016A5E  ECF2  F0C6         	call	_wait_lcd_done	;wreg free
  6389                           
  6390                           ; BSR set to: 0
  6391                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  6392  016A62  0E01               	movlw	low (_V+1)
  6393  016A64  6EE6               	movwf	postinc1,c
  6394  016A66  0E02               	movlw	high (_V+1)
  6395  016A68  6EE6               	movwf	postinc1,c
  6396  016A6A  0E00               	movlw	0
  6397  016A6C  6EE6               	movwf	postinc1,c
  6398  016A6E  0E00               	movlw	0
  6399  016A70  6EE6               	movwf	postinc1,c
  6400  016A72  EC82  F0C3         	call	_eaDogM_WriteStringAtPos	;wreg free
  6401                           
  6402                           ; BSR set to: 59
  6403                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  6404  016A76  0E01               	movlw	1
  6405  016A78  6EE6               	movwf	postinc1,c
  6406  016A7A  0E01               	movlw	1
  6407  016A7C  6EE6               	movwf	postinc1,c
  6408  016A7E  EC31  F0C4         	call	_get_vterm_ptr	;wreg free
  6409  016A82  0060  F0CB  FFE6   	movff	btemp,postinc1
  6410  016A88  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6411  016A8E  0E00               	movlw	0
  6412  016A90  6EE6               	movwf	postinc1,c
  6413  016A92  0E01               	movlw	1
  6414  016A94  6EE6               	movwf	postinc1,c
  6415  016A96  EC31  F0C4         	call	_get_vterm_ptr	;wreg free
  6416  016A9A  0060  F0CB  FFE6   	movff	btemp,postinc1
  6417  016AA0  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6418  016AA6  0EA2               	movlw	low STR_33
  6419  016AA8  6EE6               	movwf	postinc1,c
  6420  016AAA  0EFF               	movlw	high STR_33
  6421  016AAC  6EE6               	movwf	postinc1,c
  6422  016AAE  0E01               	movlw	low (_V+1)
  6423  016AB0  6EE6               	movwf	postinc1,c
  6424  016AB2  0E02               	movlw	high (_V+1)
  6425  016AB4  6EE6               	movwf	postinc1,c
  6426  016AB6  0E08               	movlw	8
  6427  016AB8  6EE6               	movwf	postinc1,c
  6428  016ABA  ECD1  F0B7         	call	_sprintf	;wreg free
  6429                           
  6430                           ;mconfig.c: 127:  wait_lcd_done();
  6431  016ABE  ECF2  F0C6         	call	_wait_lcd_done	;wreg free
  6432                           
  6433                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  6434  016AC2  0E01               	movlw	low (_V+1)
  6435  016AC4  6EE6               	movwf	postinc1,c
  6436  016AC6  0E02               	movlw	high (_V+1)
  6437  016AC8  6EE6               	movwf	postinc1,c
  6438  016ACA  0E00               	movlw	0
  6439  016ACC  6EE6               	movwf	postinc1,c
  6440  016ACE  0E01               	movlw	1
  6441  016AD0  6EE6               	movwf	postinc1,c
  6442  016AD2  EC82  F0C3         	call	_eaDogM_WriteStringAtPos	;wreg free
  6443                           
  6444                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  6445  016AD6  0E01               	movlw	1
  6446  016AD8  6EE6               	movwf	postinc1,c
  6447  016ADA  0E02               	movlw	2
  6448  016ADC  6EE6               	movwf	postinc1,c
  6449  016ADE  EC31  F0C4         	call	_get_vterm_ptr	;wreg free
  6450  016AE2  0060  F0CB  FFE6   	movff	btemp,postinc1
  6451  016AE8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6452  016AEE  0E00               	movlw	0
  6453  016AF0  6EE6               	movwf	postinc1,c
  6454  016AF2  0E02               	movlw	2
  6455  016AF4  6EE6               	movwf	postinc1,c
  6456  016AF6  EC31  F0C4         	call	_get_vterm_ptr	;wreg free
  6457  016AFA  0060  F0CB  FFE6   	movff	btemp,postinc1
  6458  016B00  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6459  016B06  0EA2               	movlw	low STR_33
  6460  016B08  6EE6               	movwf	postinc1,c
  6461  016B0A  0EFF               	movlw	high STR_33
  6462  016B0C  6EE6               	movwf	postinc1,c
  6463  016B0E  0E01               	movlw	low (_V+1)
  6464  016B10  6EE6               	movwf	postinc1,c
  6465  016B12  0E02               	movlw	high (_V+1)
  6466  016B14  6EE6               	movwf	postinc1,c
  6467  016B16  0E08               	movlw	8
  6468  016B18  6EE6               	movwf	postinc1,c
  6469  016B1A  ECD1  F0B7         	call	_sprintf	;wreg free
  6470                           
  6471                           ;mconfig.c: 130:  wait_lcd_done();
  6472  016B1E  ECF2  F0C6         	call	_wait_lcd_done	;wreg free
  6473                           
  6474                           ; BSR set to: 0
  6475                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  6476  016B22  0E01               	movlw	low (_V+1)
  6477  016B24  6EE6               	movwf	postinc1,c
  6478  016B26  0E02               	movlw	high (_V+1)
  6479  016B28  6EE6               	movwf	postinc1,c
  6480  016B2A  0E00               	movlw	0
  6481  016B2C  6EE6               	movwf	postinc1,c
  6482  016B2E  0E02               	movlw	2
  6483  016B30  6EE6               	movwf	postinc1,c
  6484  016B32  EC82  F0C3         	call	_eaDogM_WriteStringAtPos	;wreg free
  6485                           
  6486                           ; BSR set to: 59
  6487                           ;mconfig.c: 132:  WaitMs(3000);
  6488  016B36  0EB8               	movlw	184
  6489  016B38  6EE6               	movwf	postinc1,c
  6490  016B3A  0E0B               	movlw	11
  6491  016B3C  6EE6               	movwf	postinc1,c
  6492  016B3E  EC67  F0C3         	call	_WaitMs	;wreg free
  6493                           
  6494                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6495  016B42  0012               	return		;funcret
  6496  016B44                     __end_of_vterm_dump:
  6497                           	opt callstack 0
  6498                           
  6499 ;; *************** function _sprintf *****************
  6500 ;; Defined at:
  6501 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  6502 ;; Parameters:    Size  Location     Type
  6503 ;;  s               2  [STACK] PTR unsigned char 
  6504 ;;		 -> D.lcd(216), D(218), V(188), 
  6505 ;;  fmt             2  [STACK] PTR const unsigned char 
  6506 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
  6507 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
  6508 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
  6509 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
  6510 ;;		 -> STR_23(17), STR_22(16), STR_21(16), STR_20(19), 
  6511 ;;		 -> STR_19(19), STR_18(19), STR_17(19), STR_16(19), 
  6512 ;;		 -> STR_15(19), STR_14(19), STR_13(19), STR_12(19), 
  6513 ;;		 -> STR_11(17), STR_10(16), STR_9(16), STR_8(17), 
  6514 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
  6515 ;;		 -> STR_1(17), 
  6516 ;; Auto vars:     Size  Location     Type
  6517 ;;  f               6  [STACK] struct _IO_FILE
  6518 ;;  ap              2  [STACK] PTR void [1]
  6519 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6520 ;;  ret             2    0        int 
  6521 ;; Return value:  Size  Location     Type
  6522 ;;                  2  [STACK] int 
  6523 ;; Registers used:
  6524 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6525 ;; Tracked objects:
  6526 ;;		On entry : 0/5
  6527 ;;		On exit  : 0/0
  6528 ;;		Unchanged: 0/0
  6529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6534 ;;Total ram usage:        0 bytes
  6535 ;; Hardware stack levels used:    1
  6536 ;; Hardware stack levels required when called:   14
  6537 ;; This function calls:
  6538 ;;		_vfprintf
  6539 ;; This function is called by:
  6540 ;;		_main
  6541 ;;		_check_help
  6542 ;;		_vterm_dump
  6543 ;; This function uses a reentrant model
  6544 ;;
  6545                           
  6546                           	psect	text25
  6547  016FA2                     __ptext25:
  6548                           	opt callstack 0
  6549  016FA2                     _sprintf:
  6550                           	opt callstack 0
  6551                           
  6552                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  6553  016FA2  0E08               	movlw	8
  6554  016FA4  26E1               	addwf	fsr1l,f,c
  6555  016FA6  0E00               	movlw	0
  6556  016FA8  22E2               	addwfc	fsr1h,f,c
  6557                           
  6558                           ;incstack = 0
  6559  016FAA  0EFE               	movlw	254
  6560  016FAC  6E3C               	movwf	(btemp+10)^0,c
  6561  016FAE  0EFF               	movlw	255
  6562  016FB0  6E3D               	movwf	(btemp+11)^0,c
  6563                           
  6564                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  6565  016FB2  0EF5               	movlw	245
  6566  016FB4  24E1               	addwf	fsr1l,w,c
  6567  016FB6  6E3A               	movwf	(btemp+8)^0,c
  6568  016FB8  0EFF               	movlw	255
  6569  016FBA  20E2               	addwfc	fsr1h,w,c
  6570  016FBC  6E3B               	movwf	(btemp+9)^0,c
  6571  016FBE  503C               	movf	(btemp+10)^0,w,c
  6572  016FC0  263A               	addwf	(btemp+8)^0,f,c
  6573  016FC2  503D               	movf	(btemp+11)^0,w,c
  6574  016FC4  223B               	addwfc	(btemp+9)^0,f,c
  6575                           
  6576                           ;stkvar	_ap @ sp[(-8)+6]
  6577  016FC6  0EFF               	movlw	-1
  6578  016FC8  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  6579  016FCE  0EFE               	movlw	-2
  6580  016FD0  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  6581                           
  6582                           ;stkvar	_s @ sp[(-8)+-3]
  6583  016FD6  0EF5               	movlw	-11
  6584  016FD8  006F FF8C  F03C    	movff	plusw1,btemp+10
  6585  016FDE  0EF6               	movlw	-10
  6586  016FE0  006F FF8C  F03D    	movff	plusw1,btemp+11
  6587                           
  6588                           ;stkvar	_f @ sp[(-8)+0]
  6589  016FE6  0EF9               	movlw	-7
  6590  016FE8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  6591  016FEE  0EF8               	movlw	-8
  6592  016FF0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  6593                           
  6594                           ;stkvar	_f @ sp[(-8)+0]
  6595  016FF6  0EFA               	movlw	250
  6596  016FF8  24E1               	addwf	fsr1l,w,c
  6597  016FFA  6ED9               	movwf	fsr2l,c
  6598  016FFC  0EFF               	movlw	255
  6599  016FFE  20E2               	addwfc	fsr1h,w,c
  6600  017000  6EDA               	movwf	fsr2h,c
  6601  017002  0E00               	movlw	0
  6602  017004  6EDE               	movwf	postinc2,c
  6603  017006  0E00               	movlw	0
  6604  017008  6EDD               	movwf	postdec2,c
  6605                           
  6606                           ;stkvar	_f @ sp[(-8)+0]
  6607  01700A  0EFC               	movlw	252
  6608  01700C  24E1               	addwf	fsr1l,w,c
  6609  01700E  6ED9               	movwf	fsr2l,c
  6610  017010  0EFF               	movlw	255
  6611  017012  20E2               	addwfc	fsr1h,w,c
  6612  017014  6EDA               	movwf	fsr2h,c
  6613  017016  0E00               	movlw	0
  6614  017018  6EDE               	movwf	postinc2,c
  6615  01701A  0E00               	movlw	0
  6616  01701C  6EDD               	movwf	postdec2,c
  6617                           
  6618                           ;stkvar	_ap @ sp[(-8)+6]
  6619  01701E  0EFE               	movlw	254
  6620  017020  24E1               	addwf	fsr1l,w,c
  6621  017022  6E32               	movwf	btemp^0,c
  6622  017024  0EFF               	movlw	255
  6623  017026  20E2               	addwfc	fsr1h,w,c
  6624  017028  6E33               	movwf	(btemp+1)^0,c
  6625  01702A  0060  F0CB  FFE6   	movff	btemp,postinc1
  6626  017030  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6627                           
  6628                           ;stkvar	_fmt @ sp[(-10)+-5]
  6629  017036  0EF1               	movlw	-15
  6630  017038  006F FF8F FFE6     	movff	plusw1,postinc1
  6631  01703E  006F FF8F FFE6     	movff	plusw1,postinc1
  6632                           
  6633                           ;stkvar	_f @ sp[(-12)+0]
  6634  017044  0EF4               	movlw	244
  6635  017046  24E1               	addwf	fsr1l,w,c
  6636  017048  6E32               	movwf	btemp^0,c
  6637  01704A  0EFF               	movlw	255
  6638  01704C  20E2               	addwfc	fsr1h,w,c
  6639  01704E  6E33               	movwf	(btemp+1)^0,c
  6640  017050  0060  F0CB  FFE6   	movff	btemp,postinc1
  6641  017056  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6642  01705C  ECA1  F0BB         	call	_vfprintf	;wreg free
  6643                           
  6644                           ;stkvar	_f @ sp[(-8)+0]
  6645  017060  0EFA               	movlw	250
  6646  017062  24E1               	addwf	fsr1l,w,c
  6647  017064  6ED9               	movwf	fsr2l,c
  6648  017066  0EFF               	movlw	255
  6649  017068  20E2               	addwfc	fsr1h,w,c
  6650  01706A  6EDA               	movwf	fsr2h,c
  6651  01706C  006F FF78  F03C    	movff	postinc2,btemp+10
  6652  017072  006F FF74  F03D    	movff	postdec2,btemp+11
  6653                           
  6654                           ;stkvar	_s @ sp[(-8)+-3]
  6655  017078  0EF5               	movlw	-11
  6656  01707A  006F FF8C  F03A    	movff	plusw1,btemp+8
  6657  017080  0EF6               	movlw	-10
  6658  017082  006F FF8C  F03B    	movff	plusw1,btemp+9
  6659  017088  503C               	movf	(btemp+10)^0,w,c
  6660  01708A  243A               	addwf	(btemp+8)^0,w,c
  6661  01708C  6ED9               	movwf	fsr2l,c
  6662  01708E  503D               	movf	(btemp+11)^0,w,c
  6663  017090  203B               	addwfc	(btemp+9)^0,w,c
  6664  017092  6EDA               	movwf	fsr2h,c
  6665  017094  0E00               	movlw	0
  6666  017096  6EDF               	movwf	indf2,c
  6667                           
  6668                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, args
      +                          ize = 4, vargsize = 0
  6669  017098  0EF8               	movlw	248
  6670  01709A  26E1               	addwf	fsr1l,f,c
  6671  01709C  0EFF               	movlw	255
  6672  01709E  22E2               	addwfc	fsr1h,f,c
  6673  0170A0  52E5               	movf	postdec1,f,c
  6674  0170A2  50E7               	movf	indf1,w,c
  6675  0170A4  5EE1               	subwf	fsr1l,f,c
  6676  0170A6  0E00               	movlw	0
  6677  0170A8  5AE2               	subwfb	fsr1h,f,c
  6678  0170AA  0012               	return		;funcret
  6679  0170AC                     __end_of_sprintf:
  6680                           	opt callstack 0
  6681                           
  6682 ;; *************** function _get_vterm_ptr *****************
  6683 ;; Defined at:
  6684 ;;		line 116 in file "mconfig.c"
  6685 ;; Parameters:    Size  Location     Type
  6686 ;;  line            1  [STACK] const unsigned char 
  6687 ;;  vterm           1  [STACK] const unsigned char 
  6688 ;; Auto vars:     Size  Location     Type
  6689 ;;		None
  6690 ;; Return value:  Size  Location     Type
  6691 ;;                  2  [STACK] PTR unsigned char 
  6692 ;; Registers used:
  6693 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  6694 ;; Tracked objects:
  6695 ;;		On entry : 0/5
  6696 ;;		On exit  : 0/0
  6697 ;;		Unchanged: 0/0
  6698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6703 ;;Total ram usage:        0 bytes
  6704 ;; Hardware stack levels used:    1
  6705 ;; Hardware stack levels required when called:    6
  6706 ;; This function calls:
  6707 ;;		Nothing
  6708 ;; This function is called by:
  6709 ;;		_main
  6710 ;;		_check_help
  6711 ;;		_vterm_dump
  6712 ;; This function uses a reentrant model
  6713 ;;
  6714                           
  6715                           	psect	text26
  6716  018862                     __ptext26:
  6717                           	opt callstack 0
  6718  018862                     _get_vterm_ptr:
  6719                           	opt callstack 24
  6720                           
  6721                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  6722                           ;stkvar	_vterm @ sp[(0)+-2]
  6723                           
  6724                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6725                           ;incstack = 0
  6726  018862  0EFE               	movlw	-2
  6727  018864  50E3               	movf	plusw1,w,c
  6728  018866  0B03               	andlw	3
  6729  018868  0D36               	mullw	54
  6730  01886A  0E00               	movlw	low _D
  6731  01886C  6E32               	movwf	btemp^0,c
  6732  01886E  0E05               	movlw	high _D
  6733  018870  6E33               	movwf	(btemp+1)^0,c
  6734  018872  50F3               	movf	243,w,c
  6735  018874  2632               	addwf	btemp^0,f,c
  6736  018876  50F4               	movf	244,w,c
  6737  018878  2233               	addwfc	(btemp+1)^0,f,c
  6738                           
  6739                           ;stkvar	_line @ sp[(0)+-1]
  6740  01887A  0EFF               	movlw	-1
  6741  01887C  50E3               	movf	plusw1,w,c
  6742  01887E  0B03               	andlw	3
  6743  018880  0D12               	mullw	18
  6744  018882  50F3               	movf	243,w,c
  6745  018884  2632               	addwf	btemp^0,f,c
  6746  018886  50F4               	movf	244,w,c
  6747  018888  2233               	addwfc	(btemp+1)^0,f,c
  6748                           
  6749                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  6750  01888A  52E5               	movf	postdec1,f,c
  6751  01888C  52E5               	movf	postdec1,f,c
  6752  01888E  0012               	return		;funcret
  6753  018890                     __end_of_get_vterm_ptr:
  6754                           	opt callstack 0
  6755                           
  6756 ;; *************** function _WaitMs *****************
  6757 ;; Defined at:
  6758 ;;		line 32 in file "timers.c"
  6759 ;; Parameters:    Size  Location     Type
  6760 ;;  numMilliseco    2  [STACK] const unsigned short 
  6761 ;; Auto vars:     Size  Location     Type
  6762 ;;		None
  6763 ;; Return value:  Size  Location     Type
  6764 ;;                  1  [STACK] void 
  6765 ;; Registers used:
  6766 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6767 ;; Tracked objects:
  6768 ;;		On entry : 0/2
  6769 ;;		On exit  : 0/0
  6770 ;;		Unchanged: 0/0
  6771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6776 ;;Total ram usage:        0 bytes
  6777 ;; Hardware stack levels used:    1
  6778 ;; Hardware stack levels required when called:    7
  6779 ;; This function calls:
  6780 ;;		_StartTimer
  6781 ;;		_TimerDone
  6782 ;; This function is called by:
  6783 ;;		_main
  6784 ;;		_vterm_dump
  6785 ;; This function uses a reentrant model
  6786 ;;
  6787                           
  6788                           	psect	text27
  6789  0186CE                     __ptext27:
  6790                           	opt callstack 0
  6791  0186CE                     _WaitMs:
  6792                           	opt callstack 21
  6793                           
  6794                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  6795                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  6796                           
  6797                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6798                           ;incstack = 0
  6799  0186CE  0EFE               	movlw	-2
  6800  0186D0  006F FF8F FFE6     	movff	plusw1,postinc1
  6801  0186D6  006F FF8F FFE6     	movff	plusw1,postinc1
  6802  0186DC  0E00               	movlw	0
  6803  0186DE  6EE6               	movwf	postinc1,c
  6804  0186E0  EC2D  F0C3         	call	_StartTimer	;wreg free
  6805                           
  6806                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  6807  0186E4  D005               	goto	l8278
  6808  0186E6                     l1521:
  6809                           
  6810                           ;timers.c: 36:   __nop();
  6811  0186E6  F000               	nop	
  6812                           
  6813                           ;timers.c: 37:   __nop();
  6814  0186E8  F000               	nop	
  6815                           
  6816                           ;timers.c: 38:   __nop();
  6817  0186EA  F000               	nop	
  6818                           
  6819                           ;timers.c: 39:   __nop();
  6820  0186EC  F000               	nop	
  6821  0186EE  0004               	clrwdt		;# 
  6822  0186F0                     l8278:
  6823                           
  6824                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  6825  0186F0  0E00               	movlw	0
  6826  0186F2  6EE6               	movwf	postinc1,c
  6827  0186F4  EC3F  F0C6         	call	_TimerDone	;wreg free
  6828  0186F8  5032               	movf	btemp^0,w,c
  6829  0186FA  B4D8               	btfsc	status,2,c
  6830  0186FC  D7F4               	goto	l1521
  6831                           
  6832                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  6833  0186FE  52E5               	movf	postdec1,f,c
  6834  018700  52E5               	movf	postdec1,f,c
  6835  018702  0012               	return		;funcret
  6836  018704                     __end_of_WaitMs:
  6837                           	opt callstack 0
  6838                           
  6839 ;; *************** function _update_lcd *****************
  6840 ;; Defined at:
  6841 ;;		line 85 in file "mconfig.c"
  6842 ;; Parameters:    Size  Location     Type
  6843 ;;  vterm           1  [STACK] unsigned char 
  6844 ;; Auto vars:     Size  Location     Type
  6845 ;;		None
  6846 ;; Return value:  Size  Location     Type
  6847 ;;                  1  [STACK] unsigned char 
  6848 ;; Registers used:
  6849 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6850 ;; Tracked objects:
  6851 ;;		On entry : 0/5
  6852 ;;		On exit  : 1/1
  6853 ;;		Unchanged: 0/0
  6854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6859 ;;Total ram usage:        0 bytes
  6860 ;; Hardware stack levels used:    1
  6861 ;; Hardware stack levels required when called:   17
  6862 ;; This function calls:
  6863 ;;		_eaDogM_WriteStringAtPos
  6864 ;;		_wait_lcd_done
  6865 ;; This function is called by:
  6866 ;;		_main
  6867 ;;		_check_help
  6868 ;; This function uses a reentrant model
  6869 ;;
  6870                           
  6871                           	psect	text28
  6872  016E94                     __ptext28:
  6873                           	opt callstack 0
  6874  016E94                     _update_lcd:
  6875                           	opt callstack 13
  6876                           
  6877                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  6878                           ;stkvar	_vterm @ sp[(0)+-1]
  6879                           
  6880                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6881                           ;incstack = 0
  6882  016E94  0EFF               	movlw	-1
  6883  016E96  006F FF8C  F032    	movff	plusw1,btemp
  6884  016E9C  0E03               	movlw	3
  6885  016E9E  1632               	andwf	btemp^0,f,c
  6886  016EA0  0EFF               	movlw	-1
  6887  016EA2  0060  F0CB  FFE3   	movff	btemp,plusw1
  6888                           
  6889                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  6890  016EA8  0105               	movlb	5	; () banked
  6891  016EAA  A1D8               	btfss	(_D+216)& (0+255),0,b
  6892  016EAC  D004               	goto	l10630
  6893                           
  6894                           ; BSR set to: 5
  6895                           ;stkvar	_vterm @ sp[(0)+-1]
  6896  016EAE  0EFF               	movlw	-1
  6897  016EB0  50E3               	movf	plusw1,w,c
  6898  016EB2  B4D8               	btfsc	status,2,c
  6899  016EB4  D074               	goto	l1599
  6900  016EB6                     l10630:
  6901                           
  6902                           ; BSR set to: 5
  6903                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  6904                           ;stkvar	_vterm @ sp[(0)+-1]
  6905  016EB6  0EFF               	movlw	-1
  6906  016EB8  50E3               	movf	plusw1,w,c
  6907  016EBA  0D36               	mullw	54
  6908  016EBC  0E10               	movlw	low (_D+16)
  6909  016EBE  24F3               	addwf	243,w,c
  6910  016EC0  6ED9               	movwf	fsr2l,c
  6911  016EC2  0E05               	movlw	high (_D+16)
  6912  016EC4  20F4               	addwfc	prodh,w,c
  6913  016EC6  6EDA               	movwf	fsr2h,c
  6914  016EC8  0E00               	movlw	0
  6915  016ECA  6EDF               	movwf	indf2,c
  6916                           
  6917                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  6918                           ;stkvar	_vterm @ sp[(0)+-1]
  6919  016ECC  0EFF               	movlw	-1
  6920  016ECE  50E3               	movf	plusw1,w,c
  6921  016ED0  0D36               	mullw	54
  6922  016ED2  0E22               	movlw	low (_D+34)
  6923  016ED4  24F3               	addwf	243,w,c
  6924  016ED6  6ED9               	movwf	fsr2l,c
  6925  016ED8  0E05               	movlw	high (_D+34)
  6926  016EDA  20F4               	addwfc	prodh,w,c
  6927  016EDC  6EDA               	movwf	fsr2h,c
  6928  016EDE  0E00               	movlw	0
  6929  016EE0  6EDF               	movwf	indf2,c
  6930                           
  6931                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  6932                           ;stkvar	_vterm @ sp[(0)+-1]
  6933  016EE2  0EFF               	movlw	-1
  6934  016EE4  50E3               	movf	plusw1,w,c
  6935  016EE6  0D36               	mullw	54
  6936  016EE8  0E34               	movlw	low (_D+52)
  6937  016EEA  24F3               	addwf	243,w,c
  6938  016EEC  6ED9               	movwf	fsr2l,c
  6939  016EEE  0E05               	movlw	high (_D+52)
  6940  016EF0  20F4               	addwfc	prodh,w,c
  6941  016EF2  6EDA               	movwf	fsr2h,c
  6942  016EF4  0E00               	movlw	0
  6943  016EF6  6EDF               	movwf	indf2,c
  6944                           
  6945                           ; BSR set to: 5
  6946                           ;mconfig.c: 95:  wait_lcd_done();
  6947  016EF8  ECF2  F0C6         	call	_wait_lcd_done	;wreg free
  6948                           
  6949                           ; BSR set to: 0
  6950                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  6951                           ;stkvar	_vterm @ sp[(0)+-1]
  6952  016EFC  0EFF               	movlw	-1
  6953  016EFE  50E3               	movf	plusw1,w,c
  6954  016F00  0D36               	mullw	54
  6955  016F02  0E00               	movlw	low _D
  6956  016F04  6E3C               	movwf	(btemp+10)^0,c
  6957  016F06  0E05               	movlw	high _D
  6958  016F08  6E3D               	movwf	(btemp+11)^0,c
  6959  016F0A  50F3               	movf	243,w,c
  6960  016F0C  263C               	addwf	(btemp+10)^0,f,c
  6961  016F0E  50F4               	movf	244,w,c
  6962  016F10  223D               	addwfc	(btemp+11)^0,f,c
  6963  016F12  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  6964  016F18  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  6965  016F1E  0E00               	movlw	0
  6966  016F20  6EE6               	movwf	postinc1,c
  6967  016F22  0E00               	movlw	0
  6968  016F24  6EE6               	movwf	postinc1,c
  6969  016F26  EC82  F0C3         	call	_eaDogM_WriteStringAtPos	;wreg free
  6970                           
  6971                           ; BSR set to: 59
  6972                           ;mconfig.c: 97:  wait_lcd_done();
  6973  016F2A  ECF2  F0C6         	call	_wait_lcd_done	;wreg free
  6974                           
  6975                           ; BSR set to: 0
  6976                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  6977                           ;stkvar	_vterm @ sp[(0)+-1]
  6978  016F2E  0EFF               	movlw	-1
  6979  016F30  50E3               	movf	plusw1,w,c
  6980  016F32  0D36               	mullw	54
  6981  016F34  0E00               	movlw	low _D
  6982  016F36  6E3C               	movwf	(btemp+10)^0,c
  6983  016F38  0E05               	movlw	high _D
  6984  016F3A  6E3D               	movwf	(btemp+11)^0,c
  6985  016F3C  0E12               	movlw	18
  6986  016F3E  263C               	addwf	(btemp+10)^0,f,c
  6987  016F40  0E00               	movlw	0
  6988  016F42  223D               	addwfc	(btemp+11)^0,f,c
  6989  016F44  50F3               	movf	243,w,c
  6990  016F46  263C               	addwf	(btemp+10)^0,f,c
  6991  016F48  50F4               	movf	244,w,c
  6992  016F4A  223D               	addwfc	(btemp+11)^0,f,c
  6993  016F4C  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  6994  016F52  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  6995  016F58  0E00               	movlw	0
  6996  016F5A  6EE6               	movwf	postinc1,c
  6997  016F5C  0E01               	movlw	1
  6998  016F5E  6EE6               	movwf	postinc1,c
  6999  016F60  EC82  F0C3         	call	_eaDogM_WriteStringAtPos	;wreg free
  7000                           
  7001                           ; BSR set to: 59
  7002                           ;mconfig.c: 99:  wait_lcd_done();
  7003  016F64  ECF2  F0C6         	call	_wait_lcd_done	;wreg free
  7004                           
  7005                           ; BSR set to: 0
  7006                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  7007                           ;stkvar	_vterm @ sp[(0)+-1]
  7008  016F68  0EFF               	movlw	-1
  7009  016F6A  50E3               	movf	plusw1,w,c
  7010  016F6C  0D36               	mullw	54
  7011  016F6E  0E00               	movlw	low _D
  7012  016F70  6E3C               	movwf	(btemp+10)^0,c
  7013  016F72  0E05               	movlw	high _D
  7014  016F74  6E3D               	movwf	(btemp+11)^0,c
  7015  016F76  0E24               	movlw	36
  7016  016F78  263C               	addwf	(btemp+10)^0,f,c
  7017  016F7A  0E00               	movlw	0
  7018  016F7C  223D               	addwfc	(btemp+11)^0,f,c
  7019  016F7E  50F3               	movf	243,w,c
  7020  016F80  263C               	addwf	(btemp+10)^0,f,c
  7021  016F82  50F4               	movf	244,w,c
  7022  016F84  223D               	addwfc	(btemp+11)^0,f,c
  7023  016F86  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  7024  016F8C  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  7025  016F92  0E00               	movlw	0
  7026  016F94  6EE6               	movwf	postinc1,c
  7027  016F96  0E02               	movlw	2
  7028  016F98  6EE6               	movwf	postinc1,c
  7029  016F9A  EC82  F0C3         	call	_eaDogM_WriteStringAtPos	;wreg free
  7030  016F9E                     l1599:
  7031                           
  7032                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  7033  016F9E  52E5               	movf	postdec1,f,c
  7034  016FA0  0012               	return		;funcret
  7035  016FA2                     __end_of_update_lcd:
  7036                           	opt callstack 0
  7037                           
  7038 ;; *************** function _eaDogM_WriteStringAtPos *****************
  7039 ;; Defined at:
  7040 ;;		line 252 in file "eadog.c"
  7041 ;; Parameters:    Size  Location     Type
  7042 ;;  r               1  [STACK] const unsigned char 
  7043 ;;  c               1  [STACK] const unsigned char 
  7044 ;;  strPtr          2  [STACK] PTR unsigned char 
  7045 ;;		 -> D.lcd(216), D(218), V(188), 
  7046 ;; Auto vars:     Size  Location     Type
  7047 ;;		None
  7048 ;; Return value:  Size  Location     Type
  7049 ;;                  1  [STACK] void 
  7050 ;; Registers used:
  7051 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7052 ;; Tracked objects:
  7053 ;;		On entry : 3F/0
  7054 ;;		On exit  : 3F/3B
  7055 ;;		Unchanged: 0/0
  7056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7061 ;;Total ram usage:        0 bytes
  7062 ;; Hardware stack levels used:    1
  7063 ;; Hardware stack levels required when called:   16
  7064 ;; This function calls:
  7065 ;;		_eaDogM_WriteString
  7066 ;;		_send_lcd_cmd_dma
  7067 ;; This function is called by:
  7068 ;;		_update_lcd
  7069 ;;		_vterm_dump
  7070 ;; This function uses a reentrant model
  7071 ;;
  7072                           
  7073                           	psect	text29
  7074  018704                     __ptext29:
  7075                           	opt callstack 0
  7076  018704                     _eaDogM_WriteStringAtPos:
  7077                           	opt callstack 13
  7078                           
  7079                           ;eadog.c: 252: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 253: {;eadog.c: 254:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  7080                           ;stkvar	_c @ sp[(0)+-2]
  7081                           
  7082                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7083                           ;incstack = 0
  7084  018704  0EFE               	movlw	-2
  7085  018706  006F FF8C  F03D    	movff	plusw1,btemp+11
  7086                           
  7087                           ;stkvar	_r @ sp[(0)+-1]
  7088  01870C  0EFF               	movlw	-1
  7089  01870E  50E3               	movf	plusw1,w,c
  7090  018710  0D10               	mullw	16
  7091  018712  50F3               	movf	243,w,c
  7092  018714  243D               	addwf	(btemp+11)^0,w,c
  7093  018716  0F80               	addlw	128
  7094  018718  6EE6               	movwf	postinc1,c
  7095  01871A  EC66  F0C1         	call	_send_lcd_cmd_dma	;wreg free
  7096                           
  7097                           ;eadog.c: 255:  eaDogM_WriteString(strPtr);
  7098                           ;stkvar	_strPtr @ sp[(0)+-4]
  7099  01871E  0EFC               	movlw	-4
  7100  018720  006F FF8F FFE6     	movff	plusw1,postinc1
  7101  018726  006F FF8F FFE6     	movff	plusw1,postinc1
  7102  01872C  ECF5  F0BB         	call	_eaDogM_WriteString	;wreg free
  7103                           
  7104                           ; BSR set to: 59
  7105                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  7106  018730  52E5               	movf	postdec1,f,c
  7107  018732  52E5               	movf	postdec1,f,c
  7108  018734  52E5               	movf	postdec1,f,c
  7109  018736  52E5               	movf	postdec1,f,c
  7110  018738  0012               	return		;funcret
  7111  01873A                     __end_of_eaDogM_WriteStringAtPos:
  7112                           	opt callstack 0
  7113                           
  7114 ;; *************** function _send_lcd_cmd_dma *****************
  7115 ;; Defined at:
  7116 ;;		line 205 in file "eadog.c"
  7117 ;; Parameters:    Size  Location     Type
  7118 ;;  strPtr          1  [STACK] unsigned char 
  7119 ;; Auto vars:     Size  Location     Type
  7120 ;;		None
  7121 ;; Return value:  Size  Location     Type
  7122 ;;                  1  [STACK] void 
  7123 ;; Registers used:
  7124 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7125 ;; Tracked objects:
  7126 ;;		On entry : 0/3D
  7127 ;;		On exit  : 3F/0
  7128 ;;		Unchanged: 0/0
  7129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7134 ;;Total ram usage:        0 bytes
  7135 ;; Hardware stack levels used:    1
  7136 ;; Hardware stack levels required when called:   15
  7137 ;; This function calls:
  7138 ;;		_printf
  7139 ;;		_ringBufS_flush
  7140 ;;		_start_lcd
  7141 ;;		_wait_lcd_done
  7142 ;;		_wait_lcd_set
  7143 ;; This function is called by:
  7144 ;;		_eaDogM_WriteCommand
  7145 ;;		_eaDogM_WriteStringAtPos
  7146 ;; This function uses a reentrant model
  7147 ;;
  7148                           
  7149                           	psect	text30
  7150  0182CC                     __ptext30:
  7151                           	opt callstack 0
  7152  0182CC                     _send_lcd_cmd_dma:
  7153                           	opt callstack 13
  7154                           
  7155                           ;eadog.c: 205: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 206: {;eadog.c: 208:  wait
      +                          _lcd_set();
  7156                           
  7157                           ; BSR set to: 59
  7158                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7159                           ;incstack = 0
  7160  0182CC  ECC8  F0C7         	call	_wait_lcd_set	;wreg free
  7161                           
  7162                           ; BSR set to: 0
  7163                           ;eadog.c: 210:  ringBufS_flush(spi_link.tx1a, 0);
  7164  0182D0  0E00               	movlw	0
  7165  0182D2  6EE6               	movwf	postinc1,c
  7166  0182D4  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  7167  0182DA  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  7168  0182E0  EC37  F0BD         	call	_ringBufS_flush	;wreg free
  7169  0182E4  92BC               	bcf	188,1,c	;volatile
  7170  0182E6  94BC               	bcf	188,2,c	;volatile
  7171                           
  7172                           ;eadog.c: 213:  DMA1CON0bits.EN = 0;
  7173  0182E8  013B               	movlb	59	; () banked
  7174  0182EA  9FFC               	bcf	252,7,b	;volatile
  7175                           
  7176                           ; BSR set to: 59
  7177                           ;eadog.c: 214:  DMA1SSZ = 1;
  7178  0182EC  0E00               	movlw	0
  7179  0182EE  6FF8               	movwf	248,b	;volatile
  7180  0182F0  0E01               	movlw	1
  7181  0182F2  6FF7               	movwf	247,b	;volatile
  7182                           
  7183                           ; BSR set to: 59
  7184                           ;eadog.c: 215:  DMA1CON0bits.EN = 1;
  7185  0182F4  8FFC               	bsf	252,7,b	;volatile
  7186                           
  7187                           ; BSR set to: 59
  7188                           ;eadog.c: 216:  printf("%c", strPtr);
  7189                           ;stkvar	_strPtr @ sp[(0)+-1]
  7190  0182F6  0EFF               	movlw	-1
  7191  0182F8  50E3               	movf	plusw1,w,c
  7192  0182FA  6EE6               	movwf	postinc1,c
  7193  0182FC  0E00               	movlw	0
  7194  0182FE  6EE6               	movwf	postinc1,c
  7195  018300  0EF8               	movlw	low STR_25
  7196  018302  6EE6               	movwf	postinc1,c
  7197  018304  0EFF               	movlw	high STR_25
  7198  018306  6EE6               	movwf	postinc1,c
  7199  018308  0E04               	movlw	4
  7200  01830A  6EE6               	movwf	postinc1,c
  7201  01830C  EC7E  F0C0         	call	_printf	;wreg free
  7202                           
  7203                           ;eadog.c: 217:  start_lcd();
  7204  018310  ECCB  F0C7         	call	_start_lcd	;wreg free
  7205                           
  7206                           ; BSR set to: 59
  7207                           ;eadog.c: 218:  wait_lcd_done();
  7208  018314  ECF2  F0C6         	call	_wait_lcd_done	;wreg free
  7209                           
  7210                           ; BSR set to: 0
  7211  018318  82BC               	bsf	188,1,c	;volatile
  7212                           
  7213                           ; BSR set to: 0
  7214                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  7215  01831A  52E5               	movf	postdec1,f,c
  7216  01831C  0012               	return		;funcret
  7217  01831E                     __end_of_send_lcd_cmd_dma:
  7218                           	opt callstack 0
  7219                           
  7220 ;; *************** function _wait_lcd_done *****************
  7221 ;; Defined at:
  7222 ;;		line 141 in file "eadog.c"
  7223 ;; Parameters:    Size  Location     Type
  7224 ;;		None
  7225 ;; Auto vars:     Size  Location     Type
  7226 ;;		None
  7227 ;; Return value:  Size  Location     Type
  7228 ;;                  1  [STACK] void 
  7229 ;; Registers used:
  7230 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7231 ;; Tracked objects:
  7232 ;;		On entry : 0/2
  7233 ;;		On exit  : 3F/0
  7234 ;;		Unchanged: 0/0
  7235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7240 ;;Total ram usage:        0 bytes
  7241 ;; Hardware stack levels used:    1
  7242 ;; Hardware stack levels required when called:    7
  7243 ;; This function calls:
  7244 ;;		_wdtdelay
  7245 ;; This function is called by:
  7246 ;;		_send_lcd_cmd_dma
  7247 ;;		_update_lcd
  7248 ;;		_vterm_dump
  7249 ;; This function uses a reentrant model
  7250 ;;
  7251                           
  7252                           	psect	text31
  7253  018DE4                     __ptext31:
  7254                           	opt callstack 0
  7255  018DE4                     _wait_lcd_done:
  7256                           	opt callstack 22
  7257                           
  7258                           ;eadog.c: 143:  while (spi_link.LCD_DATA);
  7259                           
  7260                           ; BSR set to: 0
  7261                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7262                           ;incstack = 0
  7263  018DE4  0100               	movlb	0	; () banked
  7264  018DE6  B7A1               	btfsc	_spi_link& (0+255),3,b	;volatile
  7265  018DE8  D7FD               	goto	_wait_lcd_done
  7266                           
  7267                           ; BSR set to: 0
  7268                           ;eadog.c: 144:  wdtdelay(50);
  7269  018DEA  0E32               	movlw	50
  7270  018DEC  6EE6               	movwf	postinc1,c
  7271  018DEE  0E00               	movlw	0
  7272  018DF0  6EE6               	movwf	postinc1,c
  7273  018DF2  0E00               	movlw	0
  7274  018DF4  6EE6               	movwf	postinc1,c
  7275  018DF6  0E00               	movlw	0
  7276  018DF8  6EE6               	movwf	postinc1,c
  7277  018DFA  EC0C  F0C1         	call	_wdtdelay	;wreg free
  7278                           
  7279                           ; BSR set to: 0
  7280                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  7281  018DFE  0012               	return		;funcret
  7282  018E00                     __end_of_wait_lcd_done:
  7283                           	opt callstack 0
  7284                           
  7285 ;; *************** function _wdtdelay *****************
  7286 ;; Defined at:
  7287 ;;		line 22 in file "eadog.c"
  7288 ;; Parameters:    Size  Location     Type
  7289 ;;  delay           4  [STACK] const unsigned long 
  7290 ;; Auto vars:     Size  Location     Type
  7291 ;;		None
  7292 ;; Return value:  Size  Location     Type
  7293 ;;                  1  [STACK] void 
  7294 ;; Registers used:
  7295 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7296 ;; Tracked objects:
  7297 ;;		On entry : 0/0
  7298 ;;		On exit  : 3F/0
  7299 ;;		Unchanged: 0/0
  7300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7305 ;;Total ram usage:        0 bytes
  7306 ;; Hardware stack levels used:    1
  7307 ;; Hardware stack levels required when called:    6
  7308 ;; This function calls:
  7309 ;;		Nothing
  7310 ;; This function is called by:
  7311 ;;		_init_display
  7312 ;;		_send_lcd_cmd
  7313 ;;		_send_lcd_cmd_long
  7314 ;;		_wait_lcd_done
  7315 ;; This function uses a reentrant model
  7316 ;;
  7317                           
  7318                           	psect	text32
  7319  018218                     __ptext32:
  7320                           	opt callstack 0
  7321  018218                     _wdtdelay:
  7322                           	opt callstack 22
  7323                           
  7324                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
  7325                           
  7326                           ; BSR set to: 0
  7327                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7328                           ;incstack = 0
  7329  018218  0100               	movlb	0	; () banked
  7330  01821A  6BB9               	clrf	wdtdelay@dcount& (0+255),b
  7331  01821C  6BBA               	clrf	(wdtdelay@dcount+1)& (0+255),b
  7332  01821E  6BBB               	clrf	(wdtdelay@dcount+2)& (0+255),b
  7333  018220  6BBC               	clrf	(wdtdelay@dcount+3)& (0+255),b
  7334  018222                     l1366:
  7335                           
  7336                           ; BSR set to: 0
  7337                           ;eadog.c: 27:   __nop();
  7338  018222  F000               	nop	
  7339  018224  0004               	clrwdt		;# 
  7340                           
  7341                           ;eadog.c: 29:  };
  7342  018226  0E01               	movlw	1
  7343  018228  0100               	movlb	0	; () banked
  7344  01822A  27B9               	addwf	wdtdelay@dcount& (0+255),f,b
  7345  01822C  0E00               	movlw	0
  7346  01822E  23BA               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  7347  018230  23BB               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  7348  018232  23BC               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  7349                           
  7350                           ; BSR set to: 0
  7351                           ;stkvar	_delay @ sp[(0)+-4]
  7352  018234  0EFC               	movlw	-4
  7353  018236  006F FF8C  F032    	movff	plusw1,btemp
  7354  01823C  51B9               	movf	wdtdelay@dcount& (0+255),w,b
  7355  01823E  5C32               	subwf	btemp^0,w,c
  7356  018240  0EFD               	movlw	-3
  7357  018242  006F FF8C  F032    	movff	plusw1,btemp
  7358  018248  51BA               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  7359  01824A  5832               	subwfb	btemp^0,w,c
  7360  01824C  0EFE               	movlw	-2
  7361  01824E  006F FF8C  F032    	movff	plusw1,btemp
  7362  018254  51BB               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  7363  018256  5832               	subwfb	btemp^0,w,c
  7364  018258  0EFF               	movlw	-1
  7365  01825A  006F FF8C  F032    	movff	plusw1,btemp
  7366  018260  51BC               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  7367  018262  5832               	subwfb	btemp^0,w,c
  7368  018264  B0D8               	btfsc	status,0,c
  7369  018266  D7DD               	goto	l1366
  7370                           
  7371                           ; BSR set to: 0
  7372                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  7373  018268  52E5               	movf	postdec1,f,c
  7374  01826A  52E5               	movf	postdec1,f,c
  7375  01826C  52E5               	movf	postdec1,f,c
  7376  01826E  52E5               	movf	postdec1,f,c
  7377  018270  0012               	return		;funcret
  7378  018272                     __end_of_wdtdelay:
  7379                           	opt callstack 0
  7380                           
  7381 ;; *************** function _eaDogM_WriteString *****************
  7382 ;; Defined at:
  7383 ;;		line 184 in file "eadog.c"
  7384 ;; Parameters:    Size  Location     Type
  7385 ;;  strPtr          2  [STACK] PTR unsigned char 
  7386 ;;		 -> D.lcd(216), D(218), V(188), 
  7387 ;; Auto vars:     Size  Location     Type
  7388 ;;		None
  7389 ;; Return value:  Size  Location     Type
  7390 ;;                  1  [STACK] void 
  7391 ;; Registers used:
  7392 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7393 ;; Tracked objects:
  7394 ;;		On entry : 3F/0
  7395 ;;		On exit  : 3F/3B
  7396 ;;		Unchanged: 0/0
  7397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7402 ;;Total ram usage:        0 bytes
  7403 ;; Hardware stack levels used:    1
  7404 ;; Hardware stack levels required when called:   15
  7405 ;; This function calls:
  7406 ;;		_printf
  7407 ;;		_ringBufS_flush
  7408 ;;		_start_lcd
  7409 ;;		_strlen
  7410 ;;		_wait_lcd_set
  7411 ;; This function is called by:
  7412 ;;		_eaDogM_WriteStringAtPos
  7413 ;; This function uses a reentrant model
  7414 ;;
  7415                           
  7416                           	psect	text33
  7417  0177EA                     __ptext33:
  7418                           	opt callstack 0
  7419  0177EA                     _eaDogM_WriteString:
  7420                           	opt callstack 13
  7421                           
  7422                           ;eadog.c: 184: void eaDogM_WriteString(char *strPtr);eadog.c: 185: {;eadog.c: 187:  wait
      +                          _lcd_set();
  7423                           
  7424                           ; BSR set to: 0
  7425                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7426                           ;incstack = 0
  7427  0177EA  ECC8  F0C7         	call	_wait_lcd_set	;wreg free
  7428                           
  7429                           ; BSR set to: 0
  7430                           ;eadog.c: 189:  ringBufS_flush(spi_link.tx1a, 0);
  7431  0177EE  0E00               	movlw	0
  7432  0177F0  6EE6               	movwf	postinc1,c
  7433  0177F2  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  7434  0177F8  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  7435  0177FE  EC37  F0BD         	call	_ringBufS_flush	;wreg free
  7436  017802  94BC               	bcf	188,2,c	;volatile
  7437                           
  7438                           ;eadog.c: 191:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  7439                           ;stkvar	_strPtr @ sp[(0)+-2]
  7440  017804  0EFE               	movlw	-2
  7441  017806  006F FF8F FFE6     	movff	plusw1,postinc1
  7442  01780C  006F FF8F FFE6     	movff	plusw1,postinc1
  7443  017812  EC9A  F0BC         	call	_strlen	;wreg free
  7444  017816  5033               	movf	(btemp+1)^0,w,c
  7445  017818  E104               	bnz	u10510
  7446  01781A  0E41               	movlw	65
  7447  01781C  5C32               	subwf	btemp^0,w,c
  7448  01781E  A0D8               	btfss	status,0,c
  7449  017820  D010               	goto	l10596
  7450  017822                     u10510:
  7451                           
  7452                           ;stkvar	_strPtr @ sp[(0)+-2]
  7453  017822  0EFE               	movlw	-2
  7454  017824  006F FF8C  F03C    	movff	plusw1,btemp+10
  7455  01782A  0EFF               	movlw	-1
  7456  01782C  006F FF8C  F03D    	movff	plusw1,btemp+11
  7457  017832  0E40               	movlw	64
  7458  017834  243C               	addwf	(btemp+10)^0,w,c
  7459  017836  6ED9               	movwf	fsr2l,c
  7460  017838  0E00               	movlw	0
  7461  01783A  203D               	addwfc	(btemp+11)^0,w,c
  7462  01783C  6EDA               	movwf	fsr2h,c
  7463  01783E  0E00               	movlw	0
  7464  017840  6EDF               	movwf	indf2,c
  7465  017842                     l10596:
  7466                           
  7467                           ;eadog.c: 192:  DMA1CON0bits.EN = 0;
  7468  017842  013B               	movlb	59	; () banked
  7469  017844  9FFC               	bcf	252,7,b	;volatile
  7470                           
  7471                           ; BSR set to: 59
  7472                           ;eadog.c: 193:  DMA1SSZ = strlen(strPtr);
  7473                           ;stkvar	_strPtr @ sp[(0)+-2]
  7474  017846  0EFE               	movlw	-2
  7475  017848  006F FF8F FFE6     	movff	plusw1,postinc1
  7476  01784E  006F FF8F FFE6     	movff	plusw1,postinc1
  7477  017854  EC9A  F0BC         	call	_strlen	;wreg free
  7478  017858  0060  F0CB  FBF7   	movff	btemp,15351	;volatile
  7479  01785E  0060  F0CF  FBF8   	movff	btemp+1,15352	;volatile
  7480                           
  7481                           ;eadog.c: 194:  DMA1CON0bits.EN = 1;
  7482  017864  013B               	movlb	59	; () banked
  7483  017866  8FFC               	bsf	252,7,b	;volatile
  7484                           
  7485                           ; BSR set to: 59
  7486                           ;eadog.c: 195:  printf("%s", strPtr);
  7487                           ;stkvar	_strPtr @ sp[(0)+-2]
  7488  017868  0EFE               	movlw	-2
  7489  01786A  006F FF8F FFE6     	movff	plusw1,postinc1
  7490  017870  006F FF8F FFE6     	movff	plusw1,postinc1
  7491  017876  0EFB               	movlw	low STR_24
  7492  017878  6EE6               	movwf	postinc1,c
  7493  01787A  0EFF               	movlw	high STR_24
  7494  01787C  6EE6               	movwf	postinc1,c
  7495  01787E  0E04               	movlw	4
  7496  017880  6EE6               	movwf	postinc1,c
  7497  017882  EC7E  F0C0         	call	_printf	;wreg free
  7498                           
  7499                           ;eadog.c: 196:  start_lcd();
  7500  017886  ECCB  F0C7         	call	_start_lcd	;wreg free
  7501                           
  7502                           ; BSR set to: 59
  7503                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  7504  01788A  52E5               	movf	postdec1,f,c
  7505  01788C  52E5               	movf	postdec1,f,c
  7506  01788E  0012               	return		;funcret
  7507  017890                     __end_of_eaDogM_WriteString:
  7508                           	opt callstack 0
  7509                           
  7510 ;; *************** function _wait_lcd_set *****************
  7511 ;; Defined at:
  7512 ;;		line 131 in file "eadog.c"
  7513 ;; Parameters:    Size  Location     Type
  7514 ;;		None
  7515 ;; Auto vars:     Size  Location     Type
  7516 ;;		None
  7517 ;; Return value:  Size  Location     Type
  7518 ;;                  1  [STACK] void 
  7519 ;; Registers used:
  7520 ;;		None
  7521 ;; Tracked objects:
  7522 ;;		On entry : 0/3D
  7523 ;;		On exit  : 3F/0
  7524 ;;		Unchanged: 0/0
  7525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7530 ;;Total ram usage:        0 bytes
  7531 ;; Hardware stack levels used:    1
  7532 ;; Hardware stack levels required when called:    6
  7533 ;; This function calls:
  7534 ;;		Nothing
  7535 ;; This function is called by:
  7536 ;;		_eaDogM_WriteString
  7537 ;;		_send_lcd_cmd_dma
  7538 ;; This function uses a reentrant model
  7539 ;;
  7540                           
  7541                           	psect	text34
  7542  018F90                     __ptext34:
  7543                           	opt callstack 0
  7544  018F90                     _wait_lcd_set:
  7545                           	opt callstack 21
  7546                           
  7547                           ;eadog.c: 133:  spi_link.LCD_DATA = 1;
  7548                           
  7549                           ; BSR set to: 59
  7550                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7551                           ;incstack = 0
  7552  018F90  0100               	movlb	0	; () banked
  7553  018F92  87A1               	bsf	_spi_link& (0+255),3,b	;volatile
  7554                           
  7555                           ; BSR set to: 0
  7556                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  7557  018F94  0012               	return		;funcret
  7558  018F96                     __end_of_wait_lcd_set:
  7559                           	opt callstack 0
  7560                           
  7561 ;; *************** function _start_lcd *****************
  7562 ;; Defined at:
  7563 ;;		line 126 in file "eadog.c"
  7564 ;; Parameters:    Size  Location     Type
  7565 ;;		None
  7566 ;; Auto vars:     Size  Location     Type
  7567 ;;		None
  7568 ;; Return value:  Size  Location     Type
  7569 ;;                  1  [STACK] void 
  7570 ;; Registers used:
  7571 ;;		None
  7572 ;; Tracked objects:
  7573 ;;		On entry : 0/3B
  7574 ;;		On exit  : 3F/3B
  7575 ;;		Unchanged: 0/0
  7576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7581 ;;Total ram usage:        0 bytes
  7582 ;; Hardware stack levels used:    1
  7583 ;; Hardware stack levels required when called:    6
  7584 ;; This function calls:
  7585 ;;		Nothing
  7586 ;; This function is called by:
  7587 ;;		_eaDogM_WriteString
  7588 ;;		_send_lcd_cmd_dma
  7589 ;; This function uses a reentrant model
  7590 ;;
  7591                           
  7592                           	psect	text35
  7593  018F96                     __ptext35:
  7594                           	opt callstack 0
  7595  018F96                     _start_lcd:
  7596                           	opt callstack 21
  7597                           
  7598                           ;eadog.c: 128:  DMA1CON0bits.DMA1SIRQEN = 1;
  7599                           
  7600                           ; BSR set to: 0
  7601                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7602                           ;incstack = 0
  7603  018F96  013B               	movlb	59	; () banked
  7604  018F98  8DFC               	bsf	252,6,b	;volatile
  7605                           
  7606                           ; BSR set to: 59
  7607                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  7608  018F9A  0012               	return		;funcret
  7609  018F9C                     __end_of_start_lcd:
  7610                           	opt callstack 0
  7611                           
  7612 ;; *************** function _ringBufS_flush *****************
  7613 ;; Defined at:
  7614 ;;		line 76 in file "ringbufs.c"
  7615 ;; Parameters:    Size  Location     Type
  7616 ;;  _this           2  [STACK] PTR struct ringBufS_t
  7617 ;;		 -> ring_buf1(67), 
  7618 ;;  clearBuffer     1  [STACK] const char 
  7619 ;; Auto vars:     Size  Location     Type
  7620 ;;		None
  7621 ;; Return value:  Size  Location     Type
  7622 ;;                  1  [STACK] void 
  7623 ;; Registers used:
  7624 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7625 ;; Tracked objects:
  7626 ;;		On entry : 3F/0
  7627 ;;		On exit  : 0/0
  7628 ;;		Unchanged: 0/0
  7629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7634 ;;Total ram usage:        0 bytes
  7635 ;; Hardware stack levels used:    1
  7636 ;; Hardware stack levels required when called:    7
  7637 ;; This function calls:
  7638 ;;		_memset
  7639 ;; This function is called by:
  7640 ;;		_eaDogM_WriteString
  7641 ;;		_send_lcd_cmd_dma
  7642 ;; This function uses a reentrant model
  7643 ;;
  7644                           
  7645                           	psect	text36
  7646  017A6E                     __ptext36:
  7647                           	opt callstack 0
  7648  017A6E                     _ringBufS_flush:
  7649                           	opt callstack 20
  7650                           
  7651                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  7652                           ;stkvar	__this @ sp[(0)+-2]
  7653                           
  7654                           ; BSR set to: 59
  7655                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7656                           ;incstack = 0
  7657  017A6E  0EFE               	movlw	-2
  7658  017A70  006F FF8C  F03C    	movff	plusw1,btemp+10
  7659  017A76  0EFF               	movlw	-1
  7660  017A78  006F FF8C  F03D    	movff	plusw1,btemp+11
  7661  017A7E  0E42               	movlw	66
  7662  017A80  243C               	addwf	(btemp+10)^0,w,c
  7663  017A82  6ED9               	movwf	fsr2l,c
  7664  017A84  0E00               	movlw	0
  7665  017A86  203D               	addwfc	(btemp+11)^0,w,c
  7666  017A88  6EDA               	movwf	fsr2h,c
  7667  017A8A  0E00               	movlw	0
  7668  017A8C  6EDF               	movwf	indf2,c
  7669                           
  7670                           ;ringbufs.c: 79:  _this->head = 0;
  7671                           ;stkvar	__this @ sp[(0)+-2]
  7672  017A8E  0EFE               	movlw	-2
  7673  017A90  006F FF8C  F03C    	movff	plusw1,btemp+10
  7674  017A96  0EFF               	movlw	-1
  7675  017A98  006F FF8C  F03D    	movff	plusw1,btemp+11
  7676  017A9E  0E40               	movlw	64
  7677  017AA0  243C               	addwf	(btemp+10)^0,w,c
  7678  017AA2  6ED9               	movwf	fsr2l,c
  7679  017AA4  0E00               	movlw	0
  7680  017AA6  203D               	addwfc	(btemp+11)^0,w,c
  7681  017AA8  6EDA               	movwf	fsr2h,c
  7682  017AAA  0E00               	movlw	0
  7683  017AAC  6EDF               	movwf	indf2,c
  7684                           
  7685                           ;ringbufs.c: 80:  _this->tail = 0;
  7686                           ;stkvar	__this @ sp[(0)+-2]
  7687  017AAE  0EFE               	movlw	-2
  7688  017AB0  006F FF8C  F03C    	movff	plusw1,btemp+10
  7689  017AB6  0EFF               	movlw	-1
  7690  017AB8  006F FF8C  F03D    	movff	plusw1,btemp+11
  7691  017ABE  0E41               	movlw	65
  7692  017AC0  243C               	addwf	(btemp+10)^0,w,c
  7693  017AC2  6ED9               	movwf	fsr2l,c
  7694  017AC4  0E00               	movlw	0
  7695  017AC6  203D               	addwfc	(btemp+11)^0,w,c
  7696  017AC8  6EDA               	movwf	fsr2h,c
  7697  017ACA  0E00               	movlw	0
  7698  017ACC  6EDF               	movwf	indf2,c
  7699                           
  7700                           ;ringbufs.c: 81:  if (clearBuffer) {
  7701                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  7702  017ACE  0EFD               	movlw	-3
  7703  017AD0  50E3               	movf	plusw1,w,c
  7704  017AD2  B4D8               	btfsc	status,2,c
  7705  017AD4  D011               	goto	l1506
  7706                           
  7707                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  7708  017AD6  0E40               	movlw	64
  7709  017AD8  6EE6               	movwf	postinc1,c
  7710  017ADA  0E00               	movlw	0
  7711  017ADC  6EE6               	movwf	postinc1,c
  7712  017ADE  0E00               	movlw	0
  7713  017AE0  6EE6               	movwf	postinc1,c
  7714  017AE2  0E00               	movlw	0
  7715  017AE4  6EE6               	movwf	postinc1,c
  7716                           
  7717                           ;stkvar	__this @ sp[(-4)+-2]
  7718  017AE6  0EFA               	movlw	-6
  7719  017AE8  006F FF8F FFE6     	movff	plusw1,postinc1
  7720  017AEE  006F FF8F FFE6     	movff	plusw1,postinc1
  7721  017AF4  ECDF  F0A5         	call	_memset	;wreg free
  7722  017AF8                     l1506:
  7723                           
  7724                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  7725  017AF8  52E5               	movf	postdec1,f,c
  7726  017AFA  52E5               	movf	postdec1,f,c
  7727  017AFC  52E5               	movf	postdec1,f,c
  7728  017AFE  0012               	return		;funcret
  7729  017B00                     __end_of_ringBufS_flush:
  7730                           	opt callstack 0
  7731                           
  7732 ;; *************** function _memset *****************
  7733 ;; Defined at:
  7734 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  7735 ;; Parameters:    Size  Location     Type
  7736 ;;  dest            2  [STACK] PTR void 
  7737 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7738 ;;  c               2  [STACK] int 
  7739 ;;  n               2  [STACK] unsigned int 
  7740 ;; Auto vars:     Size  Location     Type
  7741 ;;  s               2  [STACK] PTR unsigned char 
  7742 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7743 ;;  k               2  [STACK] unsigned int 
  7744 ;; Return value:  Size  Location     Type
  7745 ;;                  2  [STACK] PTR void 
  7746 ;; Registers used:
  7747 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7748 ;; Tracked objects:
  7749 ;;		On entry : 0/0
  7750 ;;		On exit  : 0/0
  7751 ;;		Unchanged: 0/0
  7752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7757 ;;Total ram usage:        0 bytes
  7758 ;; Hardware stack levels used:    1
  7759 ;; Hardware stack levels required when called:    6
  7760 ;; This function calls:
  7761 ;;		Nothing
  7762 ;; This function is called by:
  7763 ;;		_ringBufS_init
  7764 ;;		_ringBufS_flush
  7765 ;; This function uses a reentrant model
  7766 ;;
  7767                           
  7768                           	psect	text37
  7769  014BBE                     __ptext37:
  7770                           	opt callstack 0
  7771  014BBE                     _memset:
  7772                           	opt callstack 0
  7773                           
  7774                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7775  014BBE  52E6               	movf	postinc1,f,c
  7776  014BC0  52E6               	movf	postinc1,f,c
  7777  014BC2  52E6               	movf	postinc1,f,c
  7778  014BC4  52E6               	movf	postinc1,f,c
  7779                           
  7780                           ;stkvar	_dest @ sp[(-4)+-2]
  7781                           
  7782                           ;incstack = 0
  7783  014BC6  0EFA               	movlw	-6
  7784  014BC8  006F FF8C  F03C    	movff	plusw1,btemp+10
  7785  014BCE  0EFB               	movlw	-5
  7786  014BD0  006F FF8C  F03D    	movff	plusw1,btemp+11
  7787                           
  7788                           ;stkvar	_s @ sp[(-4)+0]
  7789  014BD6  0EFD               	movlw	-3
  7790  014BD8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7791  014BDE  0EFC               	movlw	-4
  7792  014BE0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7793                           
  7794                           ;stkvar	_n @ sp[(-4)+-6]
  7795  014BE6  0EF6               	movlw	-10
  7796  014BE8  006F FF8C  F032    	movff	plusw1,btemp
  7797  014BEE  0EF7               	movlw	-9
  7798  014BF0  50E3               	movf	plusw1,w,c
  7799  014BF2  1032               	iorwf	btemp^0,w,c
  7800  014BF4  B4D8               	btfsc	status,2,c
  7801  014BF6  D154               	goto	u10480
  7802                           
  7803                           ;stkvar	_c @ sp[(-4)+-4]
  7804                           ;stkvar	_s @ sp[(-4)+0]
  7805  014BF8  0EFC               	movlw	-4
  7806  014BFA  006F FF8F FFD9     	movff	plusw1,fsr2l
  7807  014C00  0EFD               	movlw	-3
  7808  014C02  006F FF8F FFDA     	movff	plusw1,fsr2h
  7809  014C08  0EF8               	movlw	-8
  7810  014C0A  006F FF8F FFDF     	movff	plusw1,indf2
  7811                           
  7812                           ;stkvar	_c @ sp[(-4)+-4]
  7813                           ;stkvar	_n @ sp[(-4)+-6]
  7814                           ;stkvar	_s @ sp[(-4)+0]
  7815  014C10  0EFC               	movlw	-4
  7816  014C12  006F FF8C  F03C    	movff	plusw1,btemp+10
  7817  014C18  0EFD               	movlw	-3
  7818  014C1A  006F FF8C  F03D    	movff	plusw1,btemp+11
  7819  014C20  0EF6               	movlw	-10
  7820  014C22  50E3               	movf	plusw1,w,c
  7821  014C24  263C               	addwf	(btemp+10)^0,f,c
  7822  014C26  0EF7               	movlw	-9
  7823  014C28  50E3               	movf	plusw1,w,c
  7824  014C2A  223D               	addwfc	(btemp+11)^0,f,c
  7825  014C2C  0EFF               	movlw	255
  7826  014C2E  243C               	addwf	(btemp+10)^0,w,c
  7827  014C30  6ED9               	movwf	fsr2l,c
  7828  014C32  0EFF               	movlw	255
  7829  014C34  203D               	addwfc	(btemp+11)^0,w,c
  7830  014C36  6EDA               	movwf	fsr2h,c
  7831  014C38  0EF8               	movlw	-8
  7832  014C3A  006F FF8F FFDF     	movff	plusw1,indf2
  7833                           
  7834                           ;stkvar	_n @ sp[(-4)+-6]
  7835  014C40  0EF7               	movlw	-9
  7836  014C42  50E3               	movf	plusw1,w,c
  7837  014C44  E108               	bnz	l10512
  7838  014C46  0EF6               	movlw	-10
  7839  014C48  006F FF8C  F032    	movff	plusw1,btemp
  7840  014C4E  0E03               	movlw	3
  7841  014C50  5E32               	subwf	btemp^0,f,c
  7842  014C52  A0D8               	btfss	status,0,c
  7843  014C54  D125               	goto	u10480
  7844  014C56                     l10512:
  7845                           
  7846                           ;stkvar	_c @ sp[(-4)+-4]
  7847                           ;stkvar	_s @ sp[(-4)+0]
  7848  014C56  0EFC               	movlw	-4
  7849  014C58  006F FF8C  F03C    	movff	plusw1,btemp+10
  7850  014C5E  0EFD               	movlw	-3
  7851  014C60  006F FF8C  F03D    	movff	plusw1,btemp+11
  7852  014C66  0E01               	movlw	1
  7853  014C68  243C               	addwf	(btemp+10)^0,w,c
  7854  014C6A  6ED9               	movwf	fsr2l,c
  7855  014C6C  0E00               	movlw	0
  7856  014C6E  203D               	addwfc	(btemp+11)^0,w,c
  7857  014C70  6EDA               	movwf	fsr2h,c
  7858  014C72  0EF8               	movlw	-8
  7859  014C74  006F FF8F FFDF     	movff	plusw1,indf2
  7860                           
  7861                           ;stkvar	_c @ sp[(-4)+-4]
  7862                           ;stkvar	_s @ sp[(-4)+0]
  7863  014C7A  0EFC               	movlw	-4
  7864  014C7C  006F FF8C  F03C    	movff	plusw1,btemp+10
  7865  014C82  0EFD               	movlw	-3
  7866  014C84  006F FF8C  F03D    	movff	plusw1,btemp+11
  7867  014C8A  0E02               	movlw	2
  7868  014C8C  243C               	addwf	(btemp+10)^0,w,c
  7869  014C8E  6ED9               	movwf	fsr2l,c
  7870  014C90  0E00               	movlw	0
  7871  014C92  203D               	addwfc	(btemp+11)^0,w,c
  7872  014C94  6EDA               	movwf	fsr2h,c
  7873  014C96  0EF8               	movlw	-8
  7874  014C98  006F FF8F FFDF     	movff	plusw1,indf2
  7875                           
  7876                           ;stkvar	_c @ sp[(-4)+-4]
  7877                           ;stkvar	_n @ sp[(-4)+-6]
  7878                           ;stkvar	_s @ sp[(-4)+0]
  7879  014C9E  0EFC               	movlw	-4
  7880  014CA0  006F FF8C  F03C    	movff	plusw1,btemp+10
  7881  014CA6  0EFD               	movlw	-3
  7882  014CA8  006F FF8C  F03D    	movff	plusw1,btemp+11
  7883  014CAE  0EF6               	movlw	-10
  7884  014CB0  50E3               	movf	plusw1,w,c
  7885  014CB2  263C               	addwf	(btemp+10)^0,f,c
  7886  014CB4  0EF7               	movlw	-9
  7887  014CB6  50E3               	movf	plusw1,w,c
  7888  014CB8  223D               	addwfc	(btemp+11)^0,f,c
  7889  014CBA  0EFE               	movlw	254
  7890  014CBC  243C               	addwf	(btemp+10)^0,w,c
  7891  014CBE  6ED9               	movwf	fsr2l,c
  7892  014CC0  0EFF               	movlw	255
  7893  014CC2  203D               	addwfc	(btemp+11)^0,w,c
  7894  014CC4  6EDA               	movwf	fsr2h,c
  7895  014CC6  0EF8               	movlw	-8
  7896  014CC8  006F FF8F FFDF     	movff	plusw1,indf2
  7897                           
  7898                           ;stkvar	_c @ sp[(-4)+-4]
  7899                           ;stkvar	_n @ sp[(-4)+-6]
  7900                           ;stkvar	_s @ sp[(-4)+0]
  7901  014CCE  0EFC               	movlw	-4
  7902  014CD0  006F FF8C  F03C    	movff	plusw1,btemp+10
  7903  014CD6  0EFD               	movlw	-3
  7904  014CD8  006F FF8C  F03D    	movff	plusw1,btemp+11
  7905  014CDE  0EF6               	movlw	-10
  7906  014CE0  50E3               	movf	plusw1,w,c
  7907  014CE2  263C               	addwf	(btemp+10)^0,f,c
  7908  014CE4  0EF7               	movlw	-9
  7909  014CE6  50E3               	movf	plusw1,w,c
  7910  014CE8  223D               	addwfc	(btemp+11)^0,f,c
  7911  014CEA  0EFD               	movlw	253
  7912  014CEC  243C               	addwf	(btemp+10)^0,w,c
  7913  014CEE  6ED9               	movwf	fsr2l,c
  7914  014CF0  0EFF               	movlw	255
  7915  014CF2  203D               	addwfc	(btemp+11)^0,w,c
  7916  014CF4  6EDA               	movwf	fsr2h,c
  7917  014CF6  0EF8               	movlw	-8
  7918  014CF8  006F FF8F FFDF     	movff	plusw1,indf2
  7919                           
  7920                           ;stkvar	_n @ sp[(-4)+-6]
  7921  014CFE  0EF7               	movlw	-9
  7922  014D00  50E3               	movf	plusw1,w,c
  7923  014D02  E108               	bnz	l10518
  7924  014D04  0EF6               	movlw	-10
  7925  014D06  006F FF8C  F032    	movff	plusw1,btemp
  7926  014D0C  0E07               	movlw	7
  7927  014D0E  5E32               	subwf	btemp^0,f,c
  7928  014D10  A0D8               	btfss	status,0,c
  7929  014D12  D0C6               	goto	u10480
  7930  014D14                     l10518:
  7931                           
  7932                           ;stkvar	_c @ sp[(-4)+-4]
  7933                           ;stkvar	_s @ sp[(-4)+0]
  7934  014D14  0EFC               	movlw	-4
  7935  014D16  006F FF8C  F03C    	movff	plusw1,btemp+10
  7936  014D1C  0EFD               	movlw	-3
  7937  014D1E  006F FF8C  F03D    	movff	plusw1,btemp+11
  7938  014D24  0E03               	movlw	3
  7939  014D26  243C               	addwf	(btemp+10)^0,w,c
  7940  014D28  6ED9               	movwf	fsr2l,c
  7941  014D2A  0E00               	movlw	0
  7942  014D2C  203D               	addwfc	(btemp+11)^0,w,c
  7943  014D2E  6EDA               	movwf	fsr2h,c
  7944  014D30  0EF8               	movlw	-8
  7945  014D32  006F FF8F FFDF     	movff	plusw1,indf2
  7946                           
  7947                           ;stkvar	_c @ sp[(-4)+-4]
  7948                           ;stkvar	_n @ sp[(-4)+-6]
  7949                           ;stkvar	_s @ sp[(-4)+0]
  7950  014D38  0EFC               	movlw	-4
  7951  014D3A  006F FF8C  F03C    	movff	plusw1,btemp+10
  7952  014D40  0EFD               	movlw	-3
  7953  014D42  006F FF8C  F03D    	movff	plusw1,btemp+11
  7954  014D48  0EF6               	movlw	-10
  7955  014D4A  50E3               	movf	plusw1,w,c
  7956  014D4C  263C               	addwf	(btemp+10)^0,f,c
  7957  014D4E  0EF7               	movlw	-9
  7958  014D50  50E3               	movf	plusw1,w,c
  7959  014D52  223D               	addwfc	(btemp+11)^0,f,c
  7960  014D54  0EFC               	movlw	252
  7961  014D56  243C               	addwf	(btemp+10)^0,w,c
  7962  014D58  6ED9               	movwf	fsr2l,c
  7963  014D5A  0EFF               	movlw	255
  7964  014D5C  203D               	addwfc	(btemp+11)^0,w,c
  7965  014D5E  6EDA               	movwf	fsr2h,c
  7966  014D60  0EF8               	movlw	-8
  7967  014D62  006F FF8F FFDF     	movff	plusw1,indf2
  7968                           
  7969                           ;stkvar	_n @ sp[(-4)+-6]
  7970  014D68  0EF7               	movlw	-9
  7971  014D6A  50E3               	movf	plusw1,w,c
  7972  014D6C  E108               	bnz	l10524
  7973  014D6E  0EF6               	movlw	-10
  7974  014D70  006F FF8C  F032    	movff	plusw1,btemp
  7975  014D76  0E09               	movlw	9
  7976  014D78  5E32               	subwf	btemp^0,f,c
  7977  014D7A  A0D8               	btfss	status,0,c
  7978  014D7C  D091               	goto	u10480
  7979  014D7E                     l10524:
  7980                           
  7981                           ;stkvar	_s @ sp[(-4)+0]
  7982  014D7E  0EFC               	movlw	-4
  7983  014D80  006F FF8C  F03C    	movff	plusw1,btemp+10
  7984  014D86  1E3C               	comf	(btemp+10)^0,f,c
  7985  014D88  0EFD               	movlw	-3
  7986  014D8A  006F FF8C  F03D    	movff	plusw1,btemp+11
  7987  014D90  1E3D               	comf	(btemp+11)^0,f,c
  7988  014D92  2A3C               	incf	(btemp+10)^0,f,c
  7989  014D94  B4D8               	btfsc	status,2,c
  7990  014D96  2A3D               	incf	(btemp+11)^0,f,c
  7991  014D98  0E03               	movlw	3
  7992  014D9A  163C               	andwf	(btemp+10)^0,f,c
  7993  014D9C  0E00               	movlw	0
  7994  014D9E  163D               	andwf	(btemp+11)^0,f,c
  7995                           
  7996                           ;stkvar	_k @ sp[(-4)+2]
  7997  014DA0  0EFE               	movlw	-2
  7998  014DA2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7999  014DA8  0EFF               	movlw	-1
  8000  014DAA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8001                           
  8002                           ;stkvar	_k @ sp[(-4)+2]
  8003                           ;stkvar	_s @ sp[(-4)+0]
  8004  014DB0  0EFC               	movlw	-4
  8005  014DB2  50E3               	movf	plusw1,w,c
  8006  014DB4  6E32               	movwf	btemp^0,c
  8007  014DB6  0EFE               	movlw	-2
  8008  014DB8  50E3               	movf	plusw1,w,c
  8009  014DBA  2632               	addwf	btemp^0,f,c
  8010  014DBC  0EFC               	movlw	-4
  8011  014DBE  0060  F0CB  FFE3   	movff	btemp,plusw1
  8012  014DC4  0EFD               	movlw	-3
  8013  014DC6  50E3               	movf	plusw1,w,c
  8014  014DC8  6E32               	movwf	btemp^0,c
  8015  014DCA  0EFF               	movlw	-1
  8016  014DCC  50E3               	movf	plusw1,w,c
  8017  014DCE  2232               	addwfc	btemp^0,f,c
  8018  014DD0  0EFD               	movlw	-3
  8019  014DD2  0060  F0CB  FFE3   	movff	btemp,plusw1
  8020                           
  8021                           ;stkvar	_k @ sp[(-4)+2]
  8022                           ;stkvar	_n @ sp[(-4)+-6]
  8023  014DD8  0EF6               	movlw	-10
  8024  014DDA  50E3               	movf	plusw1,w,c
  8025  014DDC  6E32               	movwf	btemp^0,c
  8026  014DDE  0EFE               	movlw	-2
  8027  014DE0  50E3               	movf	plusw1,w,c
  8028  014DE2  5E32               	subwf	btemp^0,f,c
  8029  014DE4  0EF6               	movlw	-10
  8030  014DE6  0060  F0CB  FFE3   	movff	btemp,plusw1
  8031  014DEC  0EF7               	movlw	-9
  8032  014DEE  50E3               	movf	plusw1,w,c
  8033  014DF0  6E32               	movwf	btemp^0,c
  8034  014DF2  0EFF               	movlw	-1
  8035  014DF4  50E3               	movf	plusw1,w,c
  8036  014DF6  5A32               	subwfb	btemp^0,f,c
  8037  014DF8  0EF7               	movlw	-9
  8038  014DFA  0060  F0CB  FFE3   	movff	btemp,plusw1
  8039  014E00  0EFC               	movlw	252
  8040  014E02  6E3C               	movwf	(btemp+10)^0,c
  8041  014E04  0EFF               	movlw	255
  8042  014E06  6E3D               	movwf	(btemp+11)^0,c
  8043                           
  8044                           ;stkvar	_n @ sp[(-4)+-6]
  8045  014E08  0EF6               	movlw	-10
  8046  014E0A  006F FF8C  F032    	movff	plusw1,btemp
  8047  014E10  503C               	movf	(btemp+10)^0,w,c
  8048  014E12  1632               	andwf	btemp^0,f,c
  8049  014E14  0EF6               	movlw	-10
  8050  014E16  0060  F0CB  FFE3   	movff	btemp,plusw1
  8051  014E1C  0EF7               	movlw	-9
  8052  014E1E  006F FF8C  F032    	movff	plusw1,btemp
  8053  014E24  503D               	movf	(btemp+11)^0,w,c
  8054  014E26  1632               	andwf	btemp^0,f,c
  8055  014E28  0EF7               	movlw	-9
  8056  014E2A  D02E               	goto	L6
  8057  014E2C                     l10532:
  8058                           
  8059                           ;stkvar	_c @ sp[(-4)+-4]
  8060                           ;stkvar	_s @ sp[(-4)+0]
  8061  014E2C  0EFC               	movlw	-4
  8062  014E2E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8063  014E34  0EFD               	movlw	-3
  8064  014E36  006F FF8F FFDA     	movff	plusw1,fsr2h
  8065  014E3C  0EF8               	movlw	-8
  8066  014E3E  006F FF8F FFDF     	movff	plusw1,indf2
  8067                           
  8068                           ;stkvar	_n @ sp[(-4)+-6]
  8069  014E44  0EF6               	movlw	-10
  8070  014E46  006F FF8C  F032    	movff	plusw1,btemp
  8071  014E4C  0E01               	movlw	1
  8072  014E4E  5E32               	subwf	btemp^0,f,c
  8073  014E50  0EF6               	movlw	-10
  8074  014E52  0060  F0CB  FFE3   	movff	btemp,plusw1
  8075  014E58  0EF7               	movlw	-9
  8076  014E5A  006F FF8C  F032    	movff	plusw1,btemp
  8077  014E60  0E00               	movlw	0
  8078  014E62  5A32               	subwfb	btemp^0,f,c
  8079  014E64  0EF7               	movlw	-9
  8080  014E66  0060  F0CB  FFE3   	movff	btemp,plusw1
  8081                           
  8082                           ;stkvar	_s @ sp[(-4)+0]
  8083  014E6C  0EFC               	movlw	-4
  8084  014E6E  50E3               	movf	plusw1,w,c
  8085  014E70  0F01               	addlw	1
  8086  014E72  6E32               	movwf	btemp^0,c
  8087  014E74  0EFC               	movlw	-4
  8088  014E76  0060  F0CB  FFE3   	movff	btemp,plusw1
  8089  014E7C  6A32               	clrf	btemp^0,c
  8090  014E7E  0EFD               	movlw	-3
  8091  014E80  50E3               	movf	plusw1,w,c
  8092  014E82  2032               	addwfc	btemp^0,w,c
  8093  014E84  6E32               	movwf	btemp^0,c
  8094  014E86  0EFD               	movlw	-3
  8095  014E88                     L6:
  8096  014E88  0060  F0CB  FFE3   	movff	btemp,plusw1
  8097                           
  8098                           ;stkvar	_n @ sp[(-4)+-6]
  8099  014E8E  0EF6               	movlw	-10
  8100  014E90  006F FF8C  F032    	movff	plusw1,btemp
  8101  014E96  0EF7               	movlw	-9
  8102  014E98  50E3               	movf	plusw1,w,c
  8103  014E9A  1032               	iorwf	btemp^0,w,c
  8104  014E9C  A4D8               	btfss	status,2,c
  8105  014E9E  D7C6               	goto	l10532
  8106  014EA0                     u10480:
  8107                           
  8108                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  8109  014EA0  0EF6               	movlw	246
  8110  014EA2  26E1               	addwf	fsr1l,f,c
  8111  014EA4  0EFF               	movlw	255
  8112  014EA6  22E2               	addwfc	fsr1h,f,c
  8113  014EA8  0012               	return		;funcret
  8114  014EAA                     __end_of_memset:
  8115                           	opt callstack 0
  8116                           
  8117 ;; *************** function _printf *****************
  8118 ;; Defined at:
  8119 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  8120 ;; Parameters:    Size  Location     Type
  8121 ;;  fmt             2  [STACK] PTR const unsigned char 
  8122 ;;		 -> STR_26(3), STR_25(3), STR_24(3), 
  8123 ;; Auto vars:     Size  Location     Type
  8124 ;;  ap              2  [STACK] PTR void [1]
  8125 ;;		 -> ?_printf(2), ?_sprintf(2), 
  8126 ;;  ret             2    0        int 
  8127 ;; Return value:  Size  Location     Type
  8128 ;;                  2  [STACK] int 
  8129 ;; Registers used:
  8130 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8131 ;; Tracked objects:
  8132 ;;		On entry : 3F/3B
  8133 ;;		On exit  : 0/0
  8134 ;;		Unchanged: 0/0
  8135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8140 ;;Total ram usage:        0 bytes
  8141 ;; Hardware stack levels used:    1
  8142 ;; Hardware stack levels required when called:   14
  8143 ;; This function calls:
  8144 ;;		_vfprintf
  8145 ;; This function is called by:
  8146 ;;		_eaDogM_WriteString
  8147 ;;		_send_lcd_cmd_dma
  8148 ;; This function uses a reentrant model
  8149 ;;
  8150                           
  8151                           	psect	text38
  8152  0180FC                     __ptext38:
  8153                           	opt callstack 0
  8154  0180FC                     _printf:
  8155                           	opt callstack 0
  8156                           
  8157                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8158  0180FC  52E6               	movf	postinc1,f,c
  8159  0180FE  52E6               	movf	postinc1,f,c
  8160                           
  8161                           ;stkvar	?_printf @ sp[(-2)+-3]
  8162                           
  8163                           ;incstack = 0
  8164  018100  0EFB               	movlw	251
  8165  018102  24E1               	addwf	fsr1l,w,c
  8166  018104  6E3C               	movwf	(btemp+10)^0,c
  8167  018106  0EFF               	movlw	255
  8168  018108  20E2               	addwfc	fsr1h,w,c
  8169  01810A  6E3D               	movwf	(btemp+11)^0,c
  8170                           
  8171                           ;stkvar	_ap @ sp[(-2)+0]
  8172  01810C  0EFF               	movlw	-1
  8173  01810E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8174  018114  0EFE               	movlw	-2
  8175  018116  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8176                           
  8177                           ;stkvar	_ap @ sp[(-2)+0]
  8178  01811C  0EFE               	movlw	254
  8179  01811E  24E1               	addwf	fsr1l,w,c
  8180  018120  6E32               	movwf	btemp^0,c
  8181  018122  0EFF               	movlw	255
  8182  018124  20E2               	addwfc	fsr1h,w,c
  8183  018126  6E33               	movwf	(btemp+1)^0,c
  8184  018128  0060  F0CB  FFE6   	movff	btemp,postinc1
  8185  01812E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  8186                           
  8187                           ;stkvar	_fmt @ sp[(-4)+-3]
  8188  018134  0EF9               	movlw	-7
  8189  018136  006F FF8F FFE6     	movff	plusw1,postinc1
  8190  01813C  006F FF8F FFE6     	movff	plusw1,postinc1
  8191  018142  0E00               	movlw	0
  8192  018144  6EE6               	movwf	postinc1,c
  8193  018146  0E00               	movlw	0
  8194  018148  6EE6               	movwf	postinc1,c
  8195  01814A  ECA1  F0BB         	call	_vfprintf	;wreg free
  8196                           
  8197                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  8198  01814E  52E5               	movf	postdec1,f,c
  8199  018150  52E5               	movf	postdec1,f,c
  8200  018152  52E5               	movf	postdec1,f,c
  8201  018154  50E7               	movf	indf1,w,c
  8202  018156  5EE1               	subwf	fsr1l,f,c
  8203  018158  0E00               	movlw	0
  8204  01815A  5AE2               	subwfb	fsr1h,f,c
  8205  01815C  0012               	return		;funcret
  8206  01815E                     __end_of_printf:
  8207                           	opt callstack 0
  8208                           
  8209 ;; *************** function _vfprintf *****************
  8210 ;; Defined at:
  8211 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8212 ;; Parameters:    Size  Location     Type
  8213 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8214 ;;		 -> f(6), NULL(0), 
  8215 ;;  fmt             2  [STACK] PTR const unsigned char 
  8216 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
  8217 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
  8218 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
  8219 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
  8220 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(17), 
  8221 ;;		 -> STR_22(16), STR_21(16), STR_20(19), STR_19(19), 
  8222 ;;		 -> STR_18(19), STR_17(19), STR_16(19), STR_15(19), 
  8223 ;;		 -> STR_14(19), STR_13(19), STR_12(19), STR_11(17), 
  8224 ;;		 -> STR_10(16), STR_9(16), STR_8(17), STR_6(15), 
  8225 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  8226 ;;  ap              2  [STACK] PTR PTR void 
  8227 ;;		 -> ap(2), ap(2), 
  8228 ;; Auto vars:     Size  Location     Type
  8229 ;;  cfmt            2  [STACK] PTR unsigned char 
  8230 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
  8231 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
  8232 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
  8233 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
  8234 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(17), 
  8235 ;;		 -> STR_22(16), STR_21(16), STR_20(19), STR_19(19), 
  8236 ;;		 -> STR_18(19), STR_17(19), STR_16(19), STR_15(19), 
  8237 ;;		 -> STR_14(19), STR_13(19), STR_12(19), STR_11(17), 
  8238 ;;		 -> STR_10(16), STR_9(16), STR_8(17), STR_6(15), 
  8239 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  8240 ;; Return value:  Size  Location     Type
  8241 ;;                  2  [STACK] int 
  8242 ;; Registers used:
  8243 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8244 ;; Tracked objects:
  8245 ;;		On entry : 0/5
  8246 ;;		On exit  : 0/0
  8247 ;;		Unchanged: 0/0
  8248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8253 ;;Total ram usage:        0 bytes
  8254 ;; Hardware stack levels used:    1
  8255 ;; Hardware stack levels required when called:   13
  8256 ;; This function calls:
  8257 ;;		_vfpfcnvrt
  8258 ;; This function is called by:
  8259 ;;		_sprintf
  8260 ;;		_printf
  8261 ;; This function uses a reentrant model
  8262 ;;
  8263                           
  8264                           	psect	text39
  8265  017742                     __ptext39:
  8266                           	opt callstack 0
  8267  017742                     _vfprintf:
  8268                           	opt callstack 0
  8269                           
  8270                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8271  017742  52E6               	movf	postinc1,f,c
  8272  017744  52E6               	movf	postinc1,f,c
  8273                           
  8274                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  8275                           ;stkvar	_fmt @ sp[(-2)+-4]
  8276                           
  8277                           ;incstack = 0
  8278  017746  0EFA               	movlw	-6
  8279  017748  006F FF8C  F03C    	movff	plusw1,btemp+10
  8280  01774E  0EFB               	movlw	-5
  8281  017750  006F FF8C  F03D    	movff	plusw1,btemp+11
  8282                           
  8283                           ;stkvar	_cfmt @ sp[(-2)+0]
  8284  017756  0EFF               	movlw	-1
  8285  017758  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8286  01775E  0EFE               	movlw	-2
  8287  017760  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8288                           
  8289                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  8290  017766  6A19               	clrf	_nout^0,c
  8291  017768  6A1A               	clrf	(_nout+1)^0,c
  8292                           
  8293                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  8294  01776A  D020               	goto	l10546
  8295  01776C                     l10544:
  8296                           
  8297                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  8298                           ;stkvar	_ap @ sp[(-2)+-6]
  8299  01776C  0EF8               	movlw	-8
  8300  01776E  006F FF8F FFE6     	movff	plusw1,postinc1
  8301  017774  006F FF8F FFE6     	movff	plusw1,postinc1
  8302                           
  8303                           ;stkvar	_cfmt @ sp[(-4)+0]
  8304  01777A  0EFC               	movlw	252
  8305  01777C  24E1               	addwf	fsr1l,w,c
  8306  01777E  6E32               	movwf	btemp^0,c
  8307  017780  0EFF               	movlw	255
  8308  017782  20E2               	addwfc	fsr1h,w,c
  8309  017784  6E33               	movwf	(btemp+1)^0,c
  8310  017786  0060  F0CB  FFE6   	movff	btemp,postinc1
  8311  01778C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  8312                           
  8313                           ;stkvar	_fp @ sp[(-6)+-2]
  8314  017792  0EF8               	movlw	-8
  8315  017794  006F FF8F FFE6     	movff	plusw1,postinc1
  8316  01779A  006F FF8F FFE6     	movff	plusw1,postinc1
  8317  0177A0  EC22  F089         	call	_vfpfcnvrt	;wreg free
  8318  0177A4  5032               	movf	btemp^0,w,c
  8319  0177A6  2619               	addwf	_nout^0,f,c
  8320  0177A8  5033               	movf	(btemp+1)^0,w,c
  8321  0177AA  221A               	addwfc	(_nout+1)^0,f,c
  8322  0177AC                     l10546:
  8323                           
  8324                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  8325                           ;stkvar	_cfmt @ sp[(-2)+0]
  8326  0177AC  50E1               	movf	fsr1l,w,c
  8327  0177AE  0FFE               	addlw	-2
  8328  0177B0  6ED9               	movwf	fsr2l,c
  8329  0177B2  50E2               	movf	fsr1h,w,c
  8330  0177B4  6EDA               	movwf	fsr2h,c
  8331  0177B6  0EFF               	movlw	255
  8332  0177B8  22DA               	addwfc	fsr2h,f,c
  8333  0177BA  006F FF7B FFF6     	movff	postinc2,tblptrl
  8334  0177C0  006F FF77 FFF7     	movff	postdec2,tblptrh
  8335  0177C6                     	if	0	;tblptru may be non-zero
  8336  0177C6                     	endif
  8337  0177C6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8338  0177C6  0E00               	movlw	low (__mediumconst shr (0+16))
  8339  0177C8  6EF8               	movwf	tblptru,c
  8340  0177CA                     	endif
  8341  0177CA  0008               	tblrd		*
  8342  0177CC  50F5               	movf	tablat,w,c
  8343  0177CE  0900               	iorlw	0
  8344  0177D0  A4D8               	btfss	status,2,c
  8345  0177D2  D7CC               	goto	l10544
  8346                           
  8347                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  8348  0177D4  0060  F064  F032   	movff	_nout,btemp
  8349  0177DA  0060  F068  F033   	movff	_nout+1,btemp+1
  8350                           
  8351                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  8352  0177E0  0EF8               	movlw	248
  8353  0177E2  26E1               	addwf	fsr1l,f,c
  8354  0177E4  0EFF               	movlw	255
  8355  0177E6  22E2               	addwfc	fsr1h,f,c
  8356  0177E8  0012               	return		;funcret
  8357  0177EA                     __end_of_vfprintf:
  8358                           	opt callstack 0
  8359                           
  8360 ;; *************** function _vfpfcnvrt *****************
  8361 ;; Defined at:
  8362 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8363 ;; Parameters:    Size  Location     Type
  8364 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8365 ;;		 -> f(6), NULL(0), 
  8366 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  8367 ;;		 -> cfmt(2), 
  8368 ;;  ap              2  [STACK] PTR PTR void 
  8369 ;;		 -> ap(2), ap(2), 
  8370 ;; Auto vars:     Size  Location     Type
  8371 ;;  llu             8  [STACK] unsigned long long 
  8372 ;;  ll              8  [STACK] long long 
  8373 ;;  f               4  [STACK] long long 
  8374 ;;  ct              3  [STACK] unsigned char [3]
  8375 ;;  vp              3    0        PTR void 
  8376 ;;  cp              2  [STACK] PTR unsigned char 
  8377 ;;		 -> ?_printf(2), ?_sprintf(2), STR_28(9), STR_27(12), 
  8378 ;;		 -> D.lcd(216), D(218), T(144), STR_7(6), 
  8379 ;;		 -> STR_3(6), V(188), 
  8380 ;;  i               2    0        int 
  8381 ;;  done            2    0        int 
  8382 ;;  c               1  [STACK] unsigned char 
  8383 ;; Return value:  Size  Location     Type
  8384 ;;                  2  [STACK] int 
  8385 ;; Registers used:
  8386 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8387 ;; Tracked objects:
  8388 ;;		On entry : 0/5
  8389 ;;		On exit  : 0/0
  8390 ;;		Unchanged: 0/0
  8391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8396 ;;Total ram usage:        0 bytes
  8397 ;; Hardware stack levels used:    1
  8398 ;; Hardware stack levels required when called:   12
  8399 ;; This function calls:
  8400 ;;		_atoi
  8401 ;;		_ctoa
  8402 ;;		_dtoa
  8403 ;;		_efgtoa
  8404 ;;		_fputc
  8405 ;;		_isdigit
  8406 ;;		_isupper
  8407 ;;		_stoa
  8408 ;;		_strncmp
  8409 ;;		_tolower
  8410 ;;		_xtoa
  8411 ;; This function is called by:
  8412 ;;		_vfprintf
  8413 ;; This function uses a reentrant model
  8414 ;;
  8415                           
  8416                           	psect	text40
  8417  011244                     __ptext40:
  8418                           	opt callstack 0
  8419  011244                     _vfpfcnvrt:
  8420                           	opt callstack 0
  8421                           
  8422                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  8423  011244  0E20               	movlw	32
  8424  011246  26E1               	addwf	fsr1l,f,c
  8425  011248  0E00               	movlw	0
  8426  01124A  22E2               	addwfc	fsr1h,f,c
  8427                           
  8428                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  8429                           ;stkvar	_fmt @ sp[(-32)+-4]
  8430                           
  8431                           ;incstack = 0
  8432  01124C  0EDC               	movlw	-36
  8433  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8434  011254  0EDD               	movlw	-35
  8435  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  8436  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8437  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  8438  011268                     	if	0	;tblptru may be non-zero
  8439  011268                     	endif
  8440  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8441  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  8442  01126A  6EF8               	movwf	tblptru,c
  8443  01126C                     	endif
  8444  01126C  0008               	tblrd		*
  8445  01126E  50F5               	movf	tablat,w,c
  8446  011270  0A25               	xorlw	37
  8447  011272  A4D8               	btfss	status,2,c
  8448  011274  EF92  F08E         	goto	l10490
  8449                           
  8450                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  8451                           ;stkvar	_fmt @ sp[(-32)+-4]
  8452  011278  0EDC               	movlw	-36
  8453  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8454  011280  0EDD               	movlw	-35
  8455  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  8456  011288  2ADE               	incf	postinc2,f,c
  8457  01128A  0E00               	movlw	0
  8458  01128C  22DD               	addwfc	postdec2,f,c
  8459                           
  8460                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  8461  01128E  6A1B               	clrf	_width^0,c
  8462  011290  6A1C               	clrf	(_width+1)^0,c
  8463  011292  6A1F               	clrf	_flags^0,c
  8464  011294  6A20               	clrf	(_flags+1)^0,c
  8465                           
  8466                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  8467  011296  681D               	setf	_prec^0,c
  8468  011298  681E               	setf	(_prec+1)^0,c
  8469                           
  8470                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  8471                           ;stkvar	_fmt @ sp[(-32)+-4]
  8472  01129A  0EDC               	movlw	-36
  8473  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8474  0112A2  0EDD               	movlw	-35
  8475  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8476  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  8477  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  8478  0112B6                     	if	0	;tblptru may be non-zero
  8479  0112B6                     	endif
  8480  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8481  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  8482  0112B8  6EF8               	movwf	tblptru,c
  8483  0112BA                     	endif
  8484  0112BA  0008               	tblrd		*
  8485  0112BC  50F5               	movf	tablat,w,c
  8486  0112BE  0A2A               	xorlw	42
  8487  0112C0  A4D8               	btfss	status,2,c
  8488  0112C2  D031               	goto	l10354
  8489                           
  8490                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  8491                           ;stkvar	_fmt @ sp[(-32)+-4]
  8492  0112C4  0EDC               	movlw	-36
  8493  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  8494  0112CC  0EDD               	movlw	-35
  8495  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  8496  0112D4  2ADE               	incf	postinc2,f,c
  8497  0112D6  0E00               	movlw	0
  8498  0112D8  22DD               	addwfc	postdec2,f,c
  8499                           
  8500                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  8501                           ;stkvar	_ap @ sp[(-32)+-6]
  8502  0112DA  0EDA               	movlw	-38
  8503  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8504  0112E2  0EDB               	movlw	-37
  8505  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8506  0112EA  0E02               	movlw	2
  8507  0112EC  5EDE               	subwf	postinc2,f,c
  8508  0112EE  0E00               	movlw	0
  8509  0112F0  5ADD               	subwfb	postdec2,f,c
  8510  0112F2  006F FF78  F03C    	movff	postinc2,btemp+10
  8511  0112F8  006F FF74  F03D    	movff	postdec2,btemp+11
  8512  0112FE  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8513  011304  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8514  01130A  006F FF78  F01B    	movff	postinc2,_width
  8515  011310  006F FF74  F01C    	movff	postdec2,_width+1
  8516                           
  8517                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  8518  011316  AE1C               	btfss	(_width+1)^0,7,c
  8519  011318  D066               	goto	u10240
  8520                           
  8521                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  8522  01131A  801F               	bsf	_flags^0,0,c
  8523                           
  8524                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  8525  01131C  6C1B               	negf	_width^0,c
  8526  01131E  1E1C               	comf	(_width+1)^0,f,c
  8527  011320  B0D8               	btfsc	status,0,c
  8528  011322  2A1C               	incf	(_width+1)^0,f,c
  8529  011324  D060               	goto	u10240
  8530  011326                     l10354:
  8531                           
  8532                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  8533                           ;stkvar	_fmt @ sp[(-32)+-4]
  8534  011326  0EDC               	movlw	-36
  8535  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
  8536  01132E  0EDD               	movlw	-35
  8537  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
  8538  011336  006F FF78  F03C    	movff	postinc2,btemp+10
  8539  01133C  006F FF74  F03D    	movff	postdec2,btemp+11
  8540  011342  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  8541  011348  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  8542  01134E  EC62  F0AB         	call	_atoi	;wreg free
  8543  011352  0060  F0C8  F01B   	movff	btemp,_width
  8544  011358  0060  F0CC  F01C   	movff	btemp+1,_width+1
  8545                           
  8546                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8547  01135E  D00B               	goto	l10358
  8548  011360                     l10356:
  8549                           
  8550                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  8551                           ;stkvar	_fmt @ sp[(-32)+-4]
  8552  011360  0EDC               	movlw	-36
  8553  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
  8554  011368  0EDD               	movlw	-35
  8555  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8556  011370  2ADE               	incf	postinc2,f,c
  8557  011372  0E00               	movlw	0
  8558  011374  22DD               	addwfc	postdec2,f,c
  8559  011376                     l10358:
  8560  011376  0ED0               	movlw	208
  8561  011378  6E3C               	movwf	(btemp+10)^0,c
  8562  01137A  0EFF               	movlw	255
  8563  01137C  6E3D               	movwf	(btemp+11)^0,c
  8564                           
  8565                           ;stkvar	_fmt @ sp[(-32)+-4]
  8566  01137E  0EDC               	movlw	-36
  8567  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
  8568  011386  0EDD               	movlw	-35
  8569  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
  8570  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
  8571  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
  8572  01139A                     	if	0	;tblptru may be non-zero
  8573  01139A                     	endif
  8574  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8575  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
  8576  01139C  6EF8               	movwf	tblptru,c
  8577  01139E                     	endif
  8578  01139E  0008               	tblrd		*
  8579  0113A0  50F5               	movf	tablat,w,c
  8580  0113A2  6E3A               	movwf	(btemp+8)^0,c
  8581  0113A4  6A3B               	clrf	(btemp+9)^0,c
  8582  0113A6  503C               	movf	(btemp+10)^0,w,c
  8583  0113A8  263A               	addwf	(btemp+8)^0,f,c
  8584  0113AA  503D               	movf	(btemp+11)^0,w,c
  8585  0113AC  223B               	addwfc	(btemp+9)^0,f,c
  8586  0113AE  503B               	movf	(btemp+9)^0,w,c
  8587  0113B0  E106               	bnz	u10220
  8588  0113B2  0E0A               	movlw	10
  8589  0113B4  5C3A               	subwf	(btemp+8)^0,w,c
  8590  0113B6  B0D8               	btfsc	status,0,c
  8591  0113B8  D002               	goto	u10220
  8592  0113BA  0E01               	movlw	1
  8593  0113BC  D001               	goto	u10230
  8594  0113BE                     u10220:
  8595  0113BE  0E00               	movlw	0
  8596  0113C0                     u10230:
  8597  0113C0  6E3C               	movwf	(btemp+10)^0,c
  8598  0113C2  6A3D               	clrf	(btemp+11)^0,c
  8599                           
  8600                           ;stkvar	_vfpfcnvrt$4682 @ sp[(-32)+4]
  8601  0113C4  0EE4               	movlw	-28
  8602  0113C6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8603  0113CC  0EE5               	movlw	-27
  8604  0113CE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8605                           
  8606                           ;stkvar	_vfpfcnvrt$4682 @ sp[(-32)+4]
  8607  0113D4  0EE4               	movlw	-28
  8608  0113D6  006F FF8C  F032    	movff	plusw1,btemp
  8609  0113DC  0EE5               	movlw	-27
  8610  0113DE  50E3               	movf	plusw1,w,c
  8611  0113E0  1032               	iorwf	btemp^0,w,c
  8612  0113E2  A4D8               	btfss	status,2,c
  8613  0113E4  D7BD               	goto	l10356
  8614  0113E6                     u10240:
  8615                           
  8616                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  8617                           ;stkvar	_fmt @ sp[(-32)+-4]
  8618  0113E6  0EDC               	movlw	-36
  8619  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8620  0113EE  0EDD               	movlw	-35
  8621  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8622  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
  8623  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
  8624  011402                     	if	0	;tblptru may be non-zero
  8625  011402                     	endif
  8626  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8627  011402  0E00               	movlw	low (__mediumconst shr (0+16))
  8628  011404  6EF8               	movwf	tblptru,c
  8629  011406                     	endif
  8630  011406  0008               	tblrd		*
  8631  011408  50F5               	movf	tablat,w,c
  8632  01140A  0A2E               	xorlw	46
  8633  01140C  A4D8               	btfss	status,2,c
  8634  01140E  D0AC               	goto	u10290
  8635                           
  8636                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  8637  011410  6A1D               	clrf	_prec^0,c
  8638  011412  6A1E               	clrf	(_prec+1)^0,c
  8639                           
  8640                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  8641                           ;stkvar	_fmt @ sp[(-32)+-4]
  8642  011414  0EDC               	movlw	-36
  8643  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
  8644  01141C  0EDD               	movlw	-35
  8645  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8646  011424  2ADE               	incf	postinc2,f,c
  8647  011426  0E00               	movlw	0
  8648  011428  22DD               	addwfc	postdec2,f,c
  8649                           
  8650                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  8651                           ;stkvar	_fmt @ sp[(-32)+-4]
  8652  01142A  0EDC               	movlw	-36
  8653  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8654  011432  0EDD               	movlw	-35
  8655  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
  8656  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
  8657  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
  8658  011446                     	if	0	;tblptru may be non-zero
  8659  011446                     	endif
  8660  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8661  011446  0E00               	movlw	low (__mediumconst shr (0+16))
  8662  011448  6EF8               	movwf	tblptru,c
  8663  01144A                     	endif
  8664  01144A  0008               	tblrd		*
  8665  01144C  50F5               	movf	tablat,w,c
  8666  01144E  0A2A               	xorlw	42
  8667  011450  A4D8               	btfss	status,2,c
  8668  011452  D02A               	goto	l10376
  8669                           
  8670                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  8671                           ;stkvar	_fmt @ sp[(-32)+-4]
  8672  011454  0EDC               	movlw	-36
  8673  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
  8674  01145C  0EDD               	movlw	-35
  8675  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8676  011464  2ADE               	incf	postinc2,f,c
  8677  011466  0E00               	movlw	0
  8678  011468  22DD               	addwfc	postdec2,f,c
  8679                           
  8680                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  8681                           ;stkvar	_ap @ sp[(-32)+-6]
  8682  01146A  0EDA               	movlw	-38
  8683  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8684  011472  0EDB               	movlw	-37
  8685  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
  8686  01147A  0E02               	movlw	2
  8687  01147C  5EDE               	subwf	postinc2,f,c
  8688  01147E  0E00               	movlw	0
  8689  011480  5ADD               	subwfb	postdec2,f,c
  8690  011482  006F FF78  F03C    	movff	postinc2,btemp+10
  8691  011488  006F FF74  F03D    	movff	postdec2,btemp+11
  8692  01148E  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8693  011494  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8694  01149A  006F FF78  F01D    	movff	postinc2,_prec
  8695  0114A0  006F FF74  F01E    	movff	postdec2,_prec+1
  8696                           
  8697                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
  8698  0114A6  D060               	goto	u10290
  8699  0114A8                     l10376:
  8700                           
  8701                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  8702                           ;stkvar	_fmt @ sp[(-32)+-4]
  8703  0114A8  0EDC               	movlw	-36
  8704  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  8705  0114B0  0EDD               	movlw	-35
  8706  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  8707  0114B8  006F FF78  F03C    	movff	postinc2,btemp+10
  8708  0114BE  006F FF74  F03D    	movff	postdec2,btemp+11
  8709  0114C4  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  8710  0114CA  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  8711  0114D0  EC62  F0AB         	call	_atoi	;wreg free
  8712  0114D4  0060  F0C8  F01D   	movff	btemp,_prec
  8713  0114DA  0060  F0CC  F01E   	movff	btemp+1,_prec+1
  8714                           
  8715                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8716  0114E0  D00B               	goto	l10380
  8717  0114E2                     l10378:
  8718                           
  8719                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  8720                           ;stkvar	_fmt @ sp[(-32)+-4]
  8721  0114E2  0EDC               	movlw	-36
  8722  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  8723  0114EA  0EDD               	movlw	-35
  8724  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  8725  0114F2  2ADE               	incf	postinc2,f,c
  8726  0114F4  0E00               	movlw	0
  8727  0114F6  22DD               	addwfc	postdec2,f,c
  8728  0114F8                     l10380:
  8729  0114F8  0ED0               	movlw	208
  8730  0114FA  6E3C               	movwf	(btemp+10)^0,c
  8731  0114FC  0EFF               	movlw	255
  8732  0114FE  6E3D               	movwf	(btemp+11)^0,c
  8733                           
  8734                           ;stkvar	_fmt @ sp[(-32)+-4]
  8735  011500  0EDC               	movlw	-36
  8736  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
  8737  011508  0EDD               	movlw	-35
  8738  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8739  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
  8740  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
  8741  01151C                     	if	0	;tblptru may be non-zero
  8742  01151C                     	endif
  8743  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8744  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
  8745  01151E  6EF8               	movwf	tblptru,c
  8746  011520                     	endif
  8747  011520  0008               	tblrd		*
  8748  011522  50F5               	movf	tablat,w,c
  8749  011524  6E3A               	movwf	(btemp+8)^0,c
  8750  011526  6A3B               	clrf	(btemp+9)^0,c
  8751  011528  503C               	movf	(btemp+10)^0,w,c
  8752  01152A  263A               	addwf	(btemp+8)^0,f,c
  8753  01152C  503D               	movf	(btemp+11)^0,w,c
  8754  01152E  223B               	addwfc	(btemp+9)^0,f,c
  8755  011530  503B               	movf	(btemp+9)^0,w,c
  8756  011532  E106               	bnz	u10270
  8757  011534  0E0A               	movlw	10
  8758  011536  5C3A               	subwf	(btemp+8)^0,w,c
  8759  011538  B0D8               	btfsc	status,0,c
  8760  01153A  D002               	goto	u10270
  8761  01153C  0E01               	movlw	1
  8762  01153E  D001               	goto	u10280
  8763  011540                     u10270:
  8764  011540  0E00               	movlw	0
  8765  011542                     u10280:
  8766  011542  6E3C               	movwf	(btemp+10)^0,c
  8767  011544  6A3D               	clrf	(btemp+11)^0,c
  8768                           
  8769                           ;stkvar	_vfpfcnvrt$4683 @ sp[(-32)+0]
  8770  011546  0EE0               	movlw	-32
  8771  011548  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8772  01154E  0EE1               	movlw	-31
  8773  011550  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8774                           
  8775                           ;stkvar	_vfpfcnvrt$4683 @ sp[(-32)+0]
  8776  011556  0EE0               	movlw	-32
  8777  011558  006F FF8C  F032    	movff	plusw1,btemp
  8778  01155E  0EE1               	movlw	-31
  8779  011560  50E3               	movf	plusw1,w,c
  8780  011562  1032               	iorwf	btemp^0,w,c
  8781  011564  A4D8               	btfss	status,2,c
  8782  011566  D7BD               	goto	l10378
  8783  011568                     u10290:
  8784                           
  8785                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  8786                           ;stkvar	_fmt @ sp[(-32)+-4]
  8787  011568  0EDC               	movlw	-36
  8788  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8789  011570  0EDD               	movlw	-35
  8790  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
  8791  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
  8792  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
  8793  011584                     	if	0	;tblptru may be non-zero
  8794  011584                     	endif
  8795  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8796  011584  0E00               	movlw	low (__mediumconst shr (0+16))
  8797  011586  6EF8               	movwf	tblptru,c
  8798  011588                     	endif
  8799  011588  0008               	tblrd		*
  8800  01158A  50F5               	movf	tablat,w,c
  8801  01158C  6EE6               	movwf	postinc1,c
  8802  01158E  0E00               	movlw	0
  8803  011590  6EE6               	movwf	postinc1,c
  8804  011592  EC97  F0BE         	call	_tolower	;wreg free
  8805                           
  8806                           ;stkvar	_ct @ sp[(-32)+26]
  8807  011596  0EFA               	movlw	-6
  8808  011598  0060  F0CB  FFE3   	movff	btemp,plusw1
  8809                           
  8810                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  8811                           ;stkvar	_ct @ sp[(-32)+26]
  8812  01159E  0EFA               	movlw	-6
  8813  0115A0  50E3               	movf	plusw1,w,c
  8814  0115A2  B4D8               	btfsc	status,2,c
  8815  0115A4  D05B               	goto	l10396
  8816                           
  8817                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  8818                           ;stkvar	_ct @ sp[(-32)+26]
  8819  0115A6  0EFB               	movlw	251
  8820  0115A8  24E1               	addwf	fsr1l,w,c
  8821  0115AA  6ED9               	movwf	fsr2l,c
  8822  0115AC  0EFF               	movlw	255
  8823  0115AE  20E2               	addwfc	fsr1h,w,c
  8824  0115B0  6EDA               	movwf	fsr2h,c
  8825                           
  8826                           ;stkvar	_fmt @ sp[(-32)+-4]
  8827  0115B2  0EDC               	movlw	-36
  8828  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
  8829  0115BA  0EDD               	movlw	-35
  8830  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
  8831  0115C2  006F FFB8  F03C    	movff	postinc0,btemp+10
  8832  0115C8  006F FFB4  F03D    	movff	postdec0,btemp+11
  8833  0115CE  0E01               	movlw	1
  8834  0115D0  263C               	addwf	(btemp+10)^0,f,c
  8835  0115D2  0E00               	movlw	0
  8836  0115D4  223D               	addwfc	(btemp+11)^0,f,c
  8837  0115D6  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  8838  0115DC  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  8839  0115E2                     	if	0	;tblptru may be non-zero
  8840  0115E2                     	endif
  8841  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8842  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
  8843  0115E4  6EF8               	movwf	tblptru,c
  8844  0115E6                     	endif
  8845  0115E6  0008               	tblrd		*
  8846  0115E8  50F5               	movf	tablat,w,c
  8847  0115EA  6EE6               	movwf	postinc1,c
  8848  0115EC  0E00               	movlw	0
  8849  0115EE  6EE6               	movwf	postinc1,c
  8850  0115F0  EC97  F0BE         	call	_tolower	;wreg free
  8851  0115F4  5032               	movf	btemp^0,w,c
  8852  0115F6  6EDF               	movwf	indf2,c
  8853                           
  8854                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  8855                           ;stkvar	_ct @ sp[(-32)+26]
  8856  0115F8  0EFB               	movlw	251
  8857  0115FA  24E1               	addwf	fsr1l,w,c
  8858  0115FC  6ED9               	movwf	fsr2l,c
  8859  0115FE  0EFF               	movlw	255
  8860  011600  20E2               	addwfc	fsr1h,w,c
  8861  011602  6EDA               	movwf	fsr2h,c
  8862  011604  50DF               	movf	indf2,w,c
  8863  011606  B4D8               	btfsc	status,2,c
  8864  011608  D029               	goto	l10396
  8865                           
  8866                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  8867                           ;stkvar	_ct @ sp[(-32)+26]
  8868  01160A  0EFC               	movlw	252
  8869  01160C  24E1               	addwf	fsr1l,w,c
  8870  01160E  6ED9               	movwf	fsr2l,c
  8871  011610  0EFF               	movlw	255
  8872  011612  20E2               	addwfc	fsr1h,w,c
  8873  011614  6EDA               	movwf	fsr2h,c
  8874                           
  8875                           ;stkvar	_fmt @ sp[(-32)+-4]
  8876  011616  0EDC               	movlw	-36
  8877  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
  8878  01161E  0EDD               	movlw	-35
  8879  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
  8880  011626  006F FFB8  F03C    	movff	postinc0,btemp+10
  8881  01162C  006F FFB4  F03D    	movff	postdec0,btemp+11
  8882  011632  0E02               	movlw	2
  8883  011634  263C               	addwf	(btemp+10)^0,f,c
  8884  011636  0E00               	movlw	0
  8885  011638  223D               	addwfc	(btemp+11)^0,f,c
  8886  01163A  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  8887  011640  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  8888  011646                     	if	0	;tblptru may be non-zero
  8889  011646                     	endif
  8890  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8891  011646  0E00               	movlw	low (__mediumconst shr (0+16))
  8892  011648  6EF8               	movwf	tblptru,c
  8893  01164A                     	endif
  8894  01164A  0008               	tblrd		*
  8895  01164C  50F5               	movf	tablat,w,c
  8896  01164E  6EE6               	movwf	postinc1,c
  8897  011650  0E00               	movlw	0
  8898  011652  6EE6               	movwf	postinc1,c
  8899  011654  EC97  F0BE         	call	_tolower	;wreg free
  8900  011658  5032               	movf	btemp^0,w,c
  8901  01165A  6EDF               	movwf	indf2,c
  8902  01165C                     l10396:
  8903                           
  8904                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  8905                           ;stkvar	_fmt @ sp[(-32)+-4]
  8906  01165C  0EDC               	movlw	-36
  8907  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8908  011664  0EDD               	movlw	-35
  8909  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
  8910  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8911  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
  8912  011678                     	if	0	;tblptru may be non-zero
  8913  011678                     	endif
  8914  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8915  011678  0E00               	movlw	low (__mediumconst shr (0+16))
  8916  01167A  6EF8               	movwf	tblptru,c
  8917  01167C                     	endif
  8918  01167C  0008               	tblrd		*
  8919  01167E  50F5               	movf	tablat,w,c
  8920  011680  0A63               	xorlw	99
  8921  011682  A4D8               	btfss	status,2,c
  8922  011684  D036               	goto	l10406
  8923                           
  8924                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  8925                           ;stkvar	_fmt @ sp[(-32)+-4]
  8926  011686  0EDC               	movlw	-36
  8927  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
  8928  01168E  0EDD               	movlw	-35
  8929  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
  8930  011696  2ADE               	incf	postinc2,f,c
  8931  011698  0E00               	movlw	0
  8932  01169A  22DD               	addwfc	postdec2,f,c
  8933                           
  8934                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  8935                           ;stkvar	_ap @ sp[(-32)+-6]
  8936  01169C  0EDA               	movlw	-38
  8937  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8938  0116A4  0EDB               	movlw	-37
  8939  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
  8940  0116AC  0E02               	movlw	2
  8941  0116AE  5EDE               	subwf	postinc2,f,c
  8942  0116B0  0E00               	movlw	0
  8943  0116B2  5ADD               	subwfb	postdec2,f,c
  8944  0116B4  006F FF78  F03C    	movff	postinc2,btemp+10
  8945  0116BA  006F FF74  F03D    	movff	postdec2,btemp+11
  8946  0116C0  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8947  0116C6  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8948  0116CC  50DF               	movf	indf2,w,c
  8949  0116CE  6E3D               	movwf	(btemp+11)^0,c
  8950                           
  8951                           ;stkvar	_c @ sp[(-32)+31]
  8952  0116D0  0EFF               	movlw	-1
  8953  0116D2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8954                           
  8955                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  8956                           ;stkvar	_c @ sp[(-32)+31]
  8957  0116D8  0EFF               	movlw	-1
  8958  0116DA  50E3               	movf	plusw1,w,c
  8959  0116DC  6EE6               	movwf	postinc1,c
  8960                           
  8961                           ;stkvar	_fp @ sp[(-33)+-2]
  8962  0116DE  0EDD               	movlw	-35
  8963  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  8964  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  8965  0116EC  EC11  F0BE         	call	_ctoa	;wreg free
  8966  0116F0  D343               	goto	l2086
  8967  0116F2                     l10406:
  8968                           
  8969                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  8970                           ;stkvar	_fmt @ sp[(-32)+-4]
  8971  0116F2  0EDC               	movlw	-36
  8972  0116F4  006F FF8F FFD9     	movff	plusw1,fsr2l
  8973  0116FA  0EDD               	movlw	-35
  8974  0116FC  006F FF8F FFDA     	movff	plusw1,fsr2h
  8975  011702  006F FF7B FFF6     	movff	postinc2,tblptrl
  8976  011708  006F FF77 FFF7     	movff	postdec2,tblptrh
  8977  01170E                     	if	0	;tblptru may be non-zero
  8978  01170E                     	endif
  8979  01170E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8980  01170E  0E00               	movlw	low (__mediumconst shr (0+16))
  8981  011710  6EF8               	movwf	tblptru,c
  8982  011712                     	endif
  8983  011712  0008               	tblrd		*
  8984  011714  50F5               	movf	tablat,w,c
  8985  011716  0A64               	xorlw	100
  8986  011718  B4D8               	btfsc	status,2,c
  8987  01171A  D015               	goto	u10340
  8988                           
  8989                           ;stkvar	_fmt @ sp[(-32)+-4]
  8990  01171C  0EDC               	movlw	-36
  8991  01171E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8992  011724  0EDD               	movlw	-35
  8993  011726  006F FF8F FFDA     	movff	plusw1,fsr2h
  8994  01172C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8995  011732  006F FF77 FFF7     	movff	postdec2,tblptrh
  8996  011738                     	if	0	;tblptru may be non-zero
  8997  011738                     	endif
  8998  011738                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8999  011738  0E00               	movlw	low (__mediumconst shr (0+16))
  9000  01173A  6EF8               	movwf	tblptru,c
  9001  01173C                     	endif
  9002  01173C  0008               	tblrd		*
  9003  01173E  50F5               	movf	tablat,w,c
  9004  011740  0A69               	xorlw	105
  9005  011742  A4D8               	btfss	status,2,c
  9006  011744  D075               	goto	l10418
  9007  011746                     u10340:
  9008                           
  9009                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  9010                           ;stkvar	_fmt @ sp[(-32)+-4]
  9011  011746  0EDC               	movlw	-36
  9012  011748  006F FF8F FFD9     	movff	plusw1,fsr2l
  9013  01174E  0EDD               	movlw	-35
  9014  011750  006F FF8F FFDA     	movff	plusw1,fsr2h
  9015  011756  2ADE               	incf	postinc2,f,c
  9016  011758  0E00               	movlw	0
  9017  01175A  22DD               	addwfc	postdec2,f,c
  9018                           
  9019                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  9020                           ;stkvar	_ap @ sp[(-32)+-6]
  9021  01175C  0EDA               	movlw	-38
  9022  01175E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9023  011764  0EDB               	movlw	-37
  9024  011766  006F FF8F FFDA     	movff	plusw1,fsr2h
  9025  01176C  0E02               	movlw	2
  9026  01176E  5EDE               	subwf	postinc2,f,c
  9027  011770  0E00               	movlw	0
  9028  011772  5ADD               	subwfb	postdec2,f,c
  9029  011774  006F FF78  F03C    	movff	postinc2,btemp+10
  9030  01177A  006F FF74  F03D    	movff	postdec2,btemp+11
  9031  011780  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  9032  011786  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  9033  01178C  006F FF78  F03C    	movff	postinc2,btemp+10
  9034  011792  006F FF74  F03D    	movff	postdec2,btemp+11
  9035                           
  9036                           ;stkvar	_ll @ sp[(-32)+14]
  9037  011798  0EEE               	movlw	-18
  9038  01179A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9039  0117A0  0EEF               	movlw	-17
  9040  0117A2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9041  0117A8  6A32               	clrf	btemp^0,c
  9042  0117AA  BEE3               	btfsc	plusw1,7,c
  9043  0117AC  6832               	setf	btemp^0,c
  9044  0117AE  0EF0               	movlw	-16
  9045  0117B0  0060  F0CB  FFE3   	movff	btemp,plusw1
  9046  0117B6  0EF1               	movlw	-15
  9047  0117B8  0060  F0CB  FFE3   	movff	btemp,plusw1
  9048  0117BE  0EF2               	movlw	-14
  9049  0117C0  0060  F0CB  FFE3   	movff	btemp,plusw1
  9050  0117C6  0EF3               	movlw	-13
  9051  0117C8  0060  F0CB  FFE3   	movff	btemp,plusw1
  9052  0117CE  0EF4               	movlw	-12
  9053  0117D0  0060  F0CB  FFE3   	movff	btemp,plusw1
  9054  0117D6  0EF5               	movlw	-11
  9055  0117D8  0060  F0CB  FFE3   	movff	btemp,plusw1
  9056                           
  9057                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  9058                           ;stkvar	_ll @ sp[(-32)+14]
  9059  0117DE  50E1               	movf	fsr1l,w,c
  9060  0117E0  0FEE               	addlw	-18
  9061  0117E2  6ED9               	movwf	fsr2l,c
  9062  0117E4  50E2               	movf	fsr1h,w,c
  9063  0117E6  6EDA               	movwf	fsr2h,c
  9064  0117E8  0EFF               	movlw	255
  9065  0117EA  22DA               	addwfc	fsr2h,f,c
  9066  0117EC  006F FF7B FFE6     	movff	postinc2,postinc1
  9067  0117F2  006F FF7B FFE6     	movff	postinc2,postinc1
  9068  0117F8  006F FF7B FFE6     	movff	postinc2,postinc1
  9069  0117FE  006F FF7B FFE6     	movff	postinc2,postinc1
  9070  011804  006F FF7B FFE6     	movff	postinc2,postinc1
  9071  01180A  006F FF7B FFE6     	movff	postinc2,postinc1
  9072  011810  006F FF7B FFE6     	movff	postinc2,postinc1
  9073  011816  006F FF7B FFE6     	movff	postinc2,postinc1
  9074                           
  9075                           ;stkvar	_fp @ sp[(-40)+-2]
  9076  01181C  0ED6               	movlw	-42
  9077  01181E  006F FF8F FFE6     	movff	plusw1,postinc1
  9078  011824  006F FF8F FFE6     	movff	plusw1,postinc1
  9079  01182A  EC0C  F0A0         	call	_dtoa	;wreg free
  9080  01182E  D2A4               	goto	l2086
  9081  011830                     l10418:
  9082                           
  9083                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  9084                           ;stkvar	_ct @ sp[(-32)+26]
  9085  011830  0EFA               	movlw	-6
  9086  011832  006F FF8C  F032    	movff	plusw1,btemp
  9087  011838  0E66               	movlw	102
  9088  01183A  1832               	xorwf	btemp^0,w,c
  9089  01183C  A4D8               	btfss	status,2,c
  9090  01183E  D06E               	goto	l10430
  9091                           
  9092                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  9093                           ;stkvar	_fmt @ sp[(-32)+-4]
  9094  011840  0EDC               	movlw	-36
  9095  011842  006F FF8F FFD9     	movff	plusw1,fsr2l
  9096  011848  0EDD               	movlw	-35
  9097  01184A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9098  011850  006F FF7B FFF6     	movff	postinc2,tblptrl
  9099  011856  006F FF77 FFF7     	movff	postdec2,tblptrh
  9100  01185C                     	if	0	;tblptru may be non-zero
  9101  01185C                     	endif
  9102  01185C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9103  01185C  0E00               	movlw	low (__mediumconst shr (0+16))
  9104  01185E  6EF8               	movwf	tblptru,c
  9105  011860                     	endif
  9106                           
  9107                           ;stkvar	_c @ sp[(-32)+31]
  9108  011860  0008               	tblrd		*
  9109  011862  0EFF               	movlw	-1
  9110  011864  006F FFD7 FFE3     	movff	tablat,plusw1
  9111                           
  9112                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  9113                           ;stkvar	_fmt @ sp[(-32)+-4]
  9114  01186A  0EDC               	movlw	-36
  9115  01186C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9116  011872  0EDD               	movlw	-35
  9117  011874  006F FF8F FFDA     	movff	plusw1,fsr2h
  9118  01187A  2ADE               	incf	postinc2,f,c
  9119  01187C  0E00               	movlw	0
  9120  01187E  22DD               	addwfc	postdec2,f,c
  9121                           
  9122                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  9123                           ;stkvar	_ap @ sp[(-32)+-6]
  9124  011880  0EDA               	movlw	-38
  9125  011882  006F FF8F FFD9     	movff	plusw1,fsr2l
  9126  011888  0EDB               	movlw	-37
  9127  01188A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9128  011890  0E04               	movlw	4
  9129  011892  5EDE               	subwf	postinc2,f,c
  9130  011894  0E00               	movlw	0
  9131  011896  5ADD               	subwfb	postdec2,f,c
  9132  011898  006F FF78  F03C    	movff	postinc2,btemp+10
  9133  01189E  006F FF74  F03D    	movff	postdec2,btemp+11
  9134  0118A4  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  9135  0118AA  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  9136  0118B0  006F FF78  F03A    	movff	postinc2,btemp+8
  9137  0118B6  006F FF78  F03B    	movff	postinc2,btemp+9
  9138  0118BC  006F FF78  F03C    	movff	postinc2,btemp+10
  9139  0118C2  006F FF78  F03D    	movff	postinc2,btemp+11
  9140                           
  9141                           ;stkvar	_f @ sp[(-32)+22]
  9142  0118C8  0EF6               	movlw	-10
  9143  0118CA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  9144  0118D0  0EF7               	movlw	-9
  9145  0118D2  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  9146  0118D8  0EF8               	movlw	-8
  9147  0118DA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9148  0118E0  0EF9               	movlw	-7
  9149  0118E2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9150  0118E8                     l10426:
  9151                           
  9152                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  9153                           ;stkvar	_c @ sp[(-32)+31]
  9154  0118E8  0EFF               	movlw	-1
  9155  0118EA  50E3               	movf	plusw1,w,c
  9156  0118EC  6EE6               	movwf	postinc1,c
  9157                           
  9158                           ;stkvar	_f @ sp[(-33)+22]
  9159  0118EE  0EF5               	movlw	-11
  9160  0118F0  006F FF8F FFE6     	movff	plusw1,postinc1
  9161  0118F6  006F FF8F FFE6     	movff	plusw1,postinc1
  9162  0118FC  006F FF8F FFE6     	movff	plusw1,postinc1
  9163  011902  006F FF8F FFE6     	movff	plusw1,postinc1
  9164                           
  9165                           ;stkvar	_fp @ sp[(-37)+-2]
  9166  011908  0ED9               	movlw	-39
  9167  01190A  006F FF8F FFE6     	movff	plusw1,postinc1
  9168  011910  006F FF8F FFE6     	movff	plusw1,postinc1
  9169  011916  EC00  F080         	call	_efgtoa	;wreg free
  9170  01191A  D22E               	goto	l2086
  9171  01191C                     l10430:
  9172                           
  9173                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  9174  01191C  0E02               	movlw	2
  9175  01191E  6EE6               	movwf	postinc1,c
  9176  011920  0E00               	movlw	0
  9177  011922  6EE6               	movwf	postinc1,c
  9178  011924  0EF5               	movlw	low STR_54
  9179  011926  6EE6               	movwf	postinc1,c
  9180  011928  0EFF               	movlw	high STR_54
  9181  01192A  6EE6               	movwf	postinc1,c
  9182                           
  9183                           ;stkvar	_ct @ sp[(-36)+26]
  9184  01192C  0EF6               	movlw	246
  9185  01192E  24E1               	addwf	fsr1l,w,c
  9186  011930  6E32               	movwf	btemp^0,c
  9187  011932  0EFF               	movlw	255
  9188  011934  20E2               	addwfc	fsr1h,w,c
  9189  011936  6E33               	movwf	(btemp+1)^0,c
  9190  011938  0060  F0CB  FFE6   	movff	btemp,postinc1
  9191  01193E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  9192  011944  ECC7  F0AF         	call	_strncmp	;wreg free
  9193  011948  5032               	movf	btemp^0,w,c
  9194  01194A  1033               	iorwf	(btemp+1)^0,w,c
  9195  01194C  A4D8               	btfss	status,2,c
  9196  01194E  D096               	goto	l10450
  9197                           
  9198                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  9199                           ;stkvar	_fmt @ sp[(-32)+-4]
  9200  011950  0EDC               	movlw	-36
  9201  011952  006F FF8F FFD9     	movff	plusw1,fsr2l
  9202  011958  0EDD               	movlw	-35
  9203  01195A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9204  011960  006F FF78  F03C    	movff	postinc2,btemp+10
  9205  011966  006F FF74  F03D    	movff	postdec2,btemp+11
  9206  01196C  0E01               	movlw	1
  9207  01196E  263C               	addwf	(btemp+10)^0,f,c
  9208  011970  0E00               	movlw	0
  9209  011972  223D               	addwfc	(btemp+11)^0,f,c
  9210  011974  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  9211  01197A  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  9212  011980                     	if	0	;tblptru may be non-zero
  9213  011980                     	endif
  9214  011980                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9215  011980  0E00               	movlw	low (__mediumconst shr (0+16))
  9216  011982  6EF8               	movwf	tblptru,c
  9217  011984                     	endif
  9218                           
  9219                           ;stkvar	_c @ sp[(-32)+31]
  9220  011984  0008               	tblrd		*
  9221  011986  0EFF               	movlw	-1
  9222  011988  006F FFD7 FFE3     	movff	tablat,plusw1
  9223  01198E  0EBF               	movlw	191
  9224  011990  6E3C               	movwf	(btemp+10)^0,c
  9225  011992  0EFF               	movlw	255
  9226  011994  6E3D               	movwf	(btemp+11)^0,c
  9227                           
  9228                           ;stkvar	_fmt @ sp[(-32)+-4]
  9229  011996  0EDC               	movlw	-36
  9230  011998  006F FF8F FFD9     	movff	plusw1,fsr2l
  9231  01199E  0EDD               	movlw	-35
  9232  0119A0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9233  0119A6  006F FF7B FFF6     	movff	postinc2,tblptrl
  9234  0119AC  006F FF77 FFF7     	movff	postdec2,tblptrh
  9235  0119B2                     	if	0	;tblptru may be non-zero
  9236  0119B2                     	endif
  9237  0119B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9238  0119B2  0E00               	movlw	low (__mediumconst shr (0+16))
  9239  0119B4  6EF8               	movwf	tblptru,c
  9240  0119B6                     	endif
  9241  0119B6  0008               	tblrd		*
  9242  0119B8  50F5               	movf	tablat,w,c
  9243  0119BA  6E3A               	movwf	(btemp+8)^0,c
  9244  0119BC  6A3B               	clrf	(btemp+9)^0,c
  9245  0119BE  503C               	movf	(btemp+10)^0,w,c
  9246  0119C0  263A               	addwf	(btemp+8)^0,f,c
  9247  0119C2  503D               	movf	(btemp+11)^0,w,c
  9248  0119C4  223B               	addwfc	(btemp+9)^0,f,c
  9249  0119C6  503B               	movf	(btemp+9)^0,w,c
  9250  0119C8  E106               	bnz	u10370
  9251  0119CA  0E1A               	movlw	26
  9252  0119CC  5C3A               	subwf	(btemp+8)^0,w,c
  9253  0119CE  B0D8               	btfsc	status,0,c
  9254  0119D0  D002               	goto	u10370
  9255  0119D2  0E01               	movlw	1
  9256  0119D4  D001               	goto	u10380
  9257  0119D6                     u10370:
  9258  0119D6  0E00               	movlw	0
  9259  0119D8                     u10380:
  9260  0119D8  6E3C               	movwf	(btemp+10)^0,c
  9261  0119DA  6A3D               	clrf	(btemp+11)^0,c
  9262                           
  9263                           ;stkvar	_vfpfcnvrt$4689 @ sp[(-32)+2]
  9264  0119DC  0EE2               	movlw	-30
  9265  0119DE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9266  0119E4  0EE3               	movlw	-29
  9267  0119E6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9268                           
  9269                           ;stkvar	_vfpfcnvrt$4689 @ sp[(-32)+2]
  9270  0119EC  0EE2               	movlw	-30
  9271  0119EE  006F FF8C  F032    	movff	plusw1,btemp
  9272  0119F4  0EE3               	movlw	-29
  9273  0119F6  50E3               	movf	plusw1,w,c
  9274  0119F8  1032               	iorwf	btemp^0,w,c
  9275                           
  9276                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  9277                           ;stkvar	_ap @ sp[(-32)+-6]
  9278                           
  9279                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
  9280                           
  9281                           ;stkvar	_f @ sp[(-32)+22]
  9282                           
  9283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  9284                           ;stkvar	_ap @ sp[(-32)+-6]
  9285  0119FA  0EDA               	movlw	-38
  9286  0119FC  006F FF8F FFD9     	movff	plusw1,fsr2l
  9287  011A02  0EDB               	movlw	-37
  9288  011A04  006F FF8F FFDA     	movff	plusw1,fsr2h
  9289  011A0A  0E04               	movlw	4
  9290  011A0C  5EDE               	subwf	postinc2,f,c
  9291  011A0E  0E00               	movlw	0
  9292  011A10  5ADD               	subwfb	postdec2,f,c
  9293  011A12  006F FF78  F03C    	movff	postinc2,btemp+10
  9294  011A18  006F FF74  F03D    	movff	postdec2,btemp+11
  9295  011A1E  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  9296  011A24  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  9297  011A2A  006F FF78  F03A    	movff	postinc2,btemp+8
  9298  011A30  006F FF78  F03B    	movff	postinc2,btemp+9
  9299  011A36  006F FF78  F03C    	movff	postinc2,btemp+10
  9300  011A3C  006F FF78  F03D    	movff	postinc2,btemp+11
  9301                           
  9302                           ;stkvar	_f @ sp[(-32)+22]
  9303  011A42  0EF6               	movlw	-10
  9304  011A44  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  9305  011A4A  0EF7               	movlw	-9
  9306  011A4C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  9307  011A52  0EF8               	movlw	-8
  9308  011A54  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9309  011A5A  0EF9               	movlw	-7
  9310  011A5C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9311                           
  9312                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  9313                           ;stkvar	_fmt @ sp[(-32)+-4]
  9314  011A62  0EDC               	movlw	-36
  9315  011A64  006F FF8F FFD9     	movff	plusw1,fsr2l
  9316  011A6A  0EDD               	movlw	-35
  9317  011A6C  006F FF8F FFDA     	movff	plusw1,fsr2h
  9318  011A72  0E02               	movlw	2
  9319  011A74  26DE               	addwf	postinc2,f,c
  9320  011A76  0E00               	movlw	0
  9321  011A78  22DD               	addwfc	postdec2,f,c
  9322  011A7A  D736               	goto	l10426
  9323  011A7C                     l10450:
  9324                           
  9325                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  9326                           ;stkvar	_fmt @ sp[(-32)+-4]
  9327  011A7C  0EDC               	movlw	-36
  9328  011A7E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9329  011A84  0EDD               	movlw	-35
  9330  011A86  006F FF8F FFDA     	movff	plusw1,fsr2h
  9331  011A8C  006F FF7B FFF6     	movff	postinc2,tblptrl
  9332  011A92  006F FF77 FFF7     	movff	postdec2,tblptrh
  9333  011A98                     	if	0	;tblptru may be non-zero
  9334  011A98                     	endif
  9335  011A98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9336  011A98  0E00               	movlw	low (__mediumconst shr (0+16))
  9337  011A9A  6EF8               	movwf	tblptru,c
  9338  011A9C                     	endif
  9339  011A9C  0008               	tblrd		*
  9340  011A9E  50F5               	movf	tablat,w,c
  9341  011AA0  0A73               	xorlw	115
  9342  011AA2  A4D8               	btfss	status,2,c
  9343  011AA4  D042               	goto	l10460
  9344                           
  9345                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  9346                           ;stkvar	_fmt @ sp[(-32)+-4]
  9347  011AA6  0EDC               	movlw	-36
  9348  011AA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  9349  011AAE  0EDD               	movlw	-35
  9350  011AB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9351  011AB6  2ADE               	incf	postinc2,f,c
  9352  011AB8  0E00               	movlw	0
  9353  011ABA  22DD               	addwfc	postdec2,f,c
  9354                           
  9355                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  9356                           ;stkvar	_ap @ sp[(-32)+-6]
  9357  011ABC  0EDA               	movlw	-38
  9358  011ABE  006F FF8F FFD9     	movff	plusw1,fsr2l
  9359  011AC4  0EDB               	movlw	-37
  9360  011AC6  006F FF8F FFDA     	movff	plusw1,fsr2h
  9361  011ACC  0E02               	movlw	2
  9362  011ACE  5EDE               	subwf	postinc2,f,c
  9363  011AD0  0E00               	movlw	0
  9364  011AD2  5ADD               	subwfb	postdec2,f,c
  9365  011AD4  006F FF78  F03C    	movff	postinc2,btemp+10
  9366  011ADA  006F FF74  F03D    	movff	postdec2,btemp+11
  9367  011AE0  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  9368  011AE6  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  9369  011AEC  006F FF78  F03C    	movff	postinc2,btemp+10
  9370  011AF2  006F FF74  F03D    	movff	postdec2,btemp+11
  9371                           
  9372                           ;stkvar	_cp @ sp[(-32)+29]
  9373  011AF8  0EFE               	movlw	-2
  9374  011AFA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9375  011B00  0EFD               	movlw	-3
  9376  011B02  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9377                           
  9378                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  9379                           ;stkvar	_cp @ sp[(-32)+29]
  9380  011B08  0EFD               	movlw	-3
  9381  011B0A  006F FF8F FFE6     	movff	plusw1,postinc1
  9382  011B10  006F FF8F FFE6     	movff	plusw1,postinc1
  9383                           
  9384                           ;stkvar	_fp @ sp[(-34)+-2]
  9385  011B16  0EDC               	movlw	-36
  9386  011B18  006F FF8F FFE6     	movff	plusw1,postinc1
  9387  011B1E  006F FF8F FFE6     	movff	plusw1,postinc1
  9388  011B24  ECC3  F0A8         	call	_stoa	;wreg free
  9389  011B28  D127               	goto	l2086
  9390  011B2A                     l10460:
  9391                           
  9392                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  9393                           ;stkvar	_fmt @ sp[(-32)+-4]
  9394  011B2A  0EDC               	movlw	-36
  9395  011B2C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9396  011B32  0EDD               	movlw	-35
  9397  011B34  006F FF8F FFDA     	movff	plusw1,fsr2h
  9398  011B3A  006F FF7B FFF6     	movff	postinc2,tblptrl
  9399  011B40  006F FF77 FFF7     	movff	postdec2,tblptrh
  9400  011B46                     	if	0	;tblptru may be non-zero
  9401  011B46                     	endif
  9402  011B46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9403  011B46  0E00               	movlw	low (__mediumconst shr (0+16))
  9404  011B48  6EF8               	movwf	tblptru,c
  9405  011B4A                     	endif
  9406  011B4A  0008               	tblrd		*
  9407  011B4C  50F5               	movf	tablat,w,c
  9408  011B4E  0A78               	xorlw	120
  9409  011B50  B4D8               	btfsc	status,2,c
  9410  011B52  D015               	goto	u10420
  9411                           
  9412                           ;stkvar	_fmt @ sp[(-32)+-4]
  9413  011B54  0EDC               	movlw	-36
  9414  011B56  006F FF8F FFD9     	movff	plusw1,fsr2l
  9415  011B5C  0EDD               	movlw	-35
  9416  011B5E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9417  011B64  006F FF7B FFF6     	movff	postinc2,tblptrl
  9418  011B6A  006F FF77 FFF7     	movff	postdec2,tblptrh
  9419  011B70                     	if	0	;tblptru may be non-zero
  9420  011B70                     	endif
  9421  011B70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9422  011B70  0E00               	movlw	low (__mediumconst shr (0+16))
  9423  011B72  6EF8               	movwf	tblptru,c
  9424  011B74                     	endif
  9425  011B74  0008               	tblrd		*
  9426  011B76  50F5               	movf	tablat,w,c
  9427  011B78  0A58               	xorlw	88
  9428  011B7A  A4D8               	btfss	status,2,c
  9429  011B7C  D094               	goto	l10474
  9430  011B7E                     u10420:
  9431                           
  9432                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  9433                           ;stkvar	_fmt @ sp[(-32)+-4]
  9434  011B7E  0EDC               	movlw	-36
  9435  011B80  006F FF8F FFD9     	movff	plusw1,fsr2l
  9436  011B86  0EDD               	movlw	-35
  9437  011B88  006F FF8F FFDA     	movff	plusw1,fsr2h
  9438  011B8E  006F FF7B FFF6     	movff	postinc2,tblptrl
  9439  011B94  006F FF77 FFF7     	movff	postdec2,tblptrh
  9440  011B9A                     	if	0	;tblptru may be non-zero
  9441  011B9A                     	endif
  9442  011B9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9443  011B9A  0E00               	movlw	low (__mediumconst shr (0+16))
  9444  011B9C  6EF8               	movwf	tblptru,c
  9445  011B9E                     	endif
  9446                           
  9447                           ;stkvar	_c @ sp[(-32)+31]
  9448  011B9E  0008               	tblrd		*
  9449  011BA0  0EFF               	movlw	-1
  9450  011BA2  006F FFD7 FFE3     	movff	tablat,plusw1
  9451                           
  9452                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  9453                           ;stkvar	_fmt @ sp[(-32)+-4]
  9454  011BA8  0EDC               	movlw	-36
  9455  011BAA  006F FF8F FFD9     	movff	plusw1,fsr2l
  9456  011BB0  0EDD               	movlw	-35
  9457  011BB2  006F FF8F FFDA     	movff	plusw1,fsr2h
  9458  011BB8  2ADE               	incf	postinc2,f,c
  9459  011BBA  0E00               	movlw	0
  9460  011BBC  22DD               	addwfc	postdec2,f,c
  9461                           
  9462                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  9463                           ;stkvar	_ap @ sp[(-32)+-6]
  9464  011BBE  0EDA               	movlw	-38
  9465  011BC0  006F FF8F FFD9     	movff	plusw1,fsr2l
  9466  011BC6  0EDB               	movlw	-37
  9467  011BC8  006F FF8F FFDA     	movff	plusw1,fsr2h
  9468  011BCE  0E02               	movlw	2
  9469  011BD0  5EDE               	subwf	postinc2,f,c
  9470  011BD2  0E00               	movlw	0
  9471  011BD4  5ADD               	subwfb	postdec2,f,c
  9472  011BD6  006F FF78  F03C    	movff	postinc2,btemp+10
  9473  011BDC  006F FF74  F03D    	movff	postdec2,btemp+11
  9474  011BE2  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  9475  011BE8  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  9476  011BEE  006F FF78  F03C    	movff	postinc2,btemp+10
  9477  011BF4  006F FF74  F03D    	movff	postdec2,btemp+11
  9478  011BFA  503C               	movf	(btemp+10)^0,w,c
  9479  011BFC  6E42               	movwf	(btemp+16)^0,c
  9480  011BFE  503D               	movf	(btemp+11)^0,w,c
  9481  011C00  6E43               	movwf	(btemp+17)^0,c
  9482  011C02  6A44               	clrf	(btemp+18)^0,c
  9483  011C04  6A45               	clrf	(btemp+19)^0,c
  9484  011C06  6A46               	clrf	(btemp+20)^0,c
  9485  011C08  6A47               	clrf	(btemp+21)^0,c
  9486  011C0A  6A48               	clrf	(btemp+22)^0,c
  9487  011C0C  6A49               	clrf	(btemp+23)^0,c
  9488                           
  9489                           ;stkvar	_llu @ sp[(-32)+6]
  9490  011C0E  0EE6               	movlw	-26
  9491  011C10  0060  F10B  FFE3   	movff	btemp+16,plusw1
  9492  011C16  0EE7               	movlw	-25
  9493  011C18  0060  F10F  FFE3   	movff	btemp+17,plusw1
  9494  011C1E  0EE8               	movlw	-24
  9495  011C20  0060  F113  FFE3   	movff	btemp+18,plusw1
  9496  011C26  0EE9               	movlw	-23
  9497  011C28  0060  F117  FFE3   	movff	btemp+19,plusw1
  9498  011C2E  0EEA               	movlw	-22
  9499  011C30  0060  F11B  FFE3   	movff	btemp+20,plusw1
  9500  011C36  0EEB               	movlw	-21
  9501  011C38  0060  F11F  FFE3   	movff	btemp+21,plusw1
  9502  011C3E  0EEC               	movlw	-20
  9503  011C40  0060  F123  FFE3   	movff	btemp+22,plusw1
  9504  011C46  0EED               	movlw	-19
  9505  011C48  0060  F127  FFE3   	movff	btemp+23,plusw1
  9506                           
  9507                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  9508                           ;stkvar	_c @ sp[(-32)+31]
  9509  011C4E  0EFF               	movlw	-1
  9510  011C50  50E3               	movf	plusw1,w,c
  9511  011C52  6EE6               	movwf	postinc1,c
  9512                           
  9513                           ;stkvar	_llu @ sp[(-33)+6]
  9514  011C54  50E1               	movf	fsr1l,w,c
  9515  011C56  0FE5               	addlw	-27
  9516  011C58  6ED9               	movwf	fsr2l,c
  9517  011C5A  50E2               	movf	fsr1h,w,c
  9518  011C5C  6EDA               	movwf	fsr2h,c
  9519  011C5E  0EFF               	movlw	255
  9520  011C60  22DA               	addwfc	fsr2h,f,c
  9521  011C62  006F FF7B FFE6     	movff	postinc2,postinc1
  9522  011C68  006F FF7B FFE6     	movff	postinc2,postinc1
  9523  011C6E  006F FF7B FFE6     	movff	postinc2,postinc1
  9524  011C74  006F FF7B FFE6     	movff	postinc2,postinc1
  9525  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
  9526  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
  9527  011C86  006F FF7B FFE6     	movff	postinc2,postinc1
  9528  011C8C  006F FF7B FFE6     	movff	postinc2,postinc1
  9529                           
  9530                           ;stkvar	_fp @ sp[(-41)+-2]
  9531  011C92  0ED5               	movlw	-43
  9532  011C94  006F FF8F FFE6     	movff	plusw1,postinc1
  9533  011C9A  006F FF8F FFE6     	movff	plusw1,postinc1
  9534  011CA0  EC4C  F0A2         	call	_xtoa	;wreg free
  9535  011CA4  D069               	goto	l2086
  9536  011CA6                     l10474:
  9537                           
  9538                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  9539                           ;stkvar	_fmt @ sp[(-32)+-4]
  9540  011CA6  0EDC               	movlw	-36
  9541  011CA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  9542  011CAE  0EDD               	movlw	-35
  9543  011CB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9544  011CB6  006F FF7B FFF6     	movff	postinc2,tblptrl
  9545  011CBC  006F FF77 FFF7     	movff	postdec2,tblptrh
  9546  011CC2                     	if	0	;tblptru may be non-zero
  9547  011CC2                     	endif
  9548  011CC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9549  011CC2  0E00               	movlw	low (__mediumconst shr (0+16))
  9550  011CC4  6EF8               	movwf	tblptru,c
  9551  011CC6                     	endif
  9552  011CC6  0008               	tblrd		*
  9553  011CC8  50F5               	movf	tablat,w,c
  9554  011CCA  0A25               	xorlw	37
  9555  011CCC  A4D8               	btfss	status,2,c
  9556  011CCE  D01A               	goto	l10484
  9557                           
  9558                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  9559                           ;stkvar	_fmt @ sp[(-32)+-4]
  9560  011CD0  0EDC               	movlw	-36
  9561  011CD2  006F FF8F FFD9     	movff	plusw1,fsr2l
  9562  011CD8  0EDD               	movlw	-35
  9563  011CDA  006F FF8F FFDA     	movff	plusw1,fsr2h
  9564  011CE0  2ADE               	incf	postinc2,f,c
  9565  011CE2  0E00               	movlw	0
  9566  011CE4  22DD               	addwfc	postdec2,f,c
  9567                           
  9568                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  9569                           ;stkvar	_fp @ sp[(-32)+-2]
  9570  011CE6  0EDE               	movlw	-34
  9571  011CE8  006F FF8F FFE6     	movff	plusw1,postinc1
  9572  011CEE  006F FF8F FFE6     	movff	plusw1,postinc1
  9573  011CF4  0E25               	movlw	37
  9574  011CF6  6EE6               	movwf	postinc1,c
  9575  011CF8  0E00               	movlw	0
  9576  011CFA  6EE6               	movwf	postinc1,c
  9577  011CFC  ECA2  F0B5         	call	_fputc	;wreg free
  9578  011D00                     l10480:
  9579                           
  9580                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  9581  011D00  0E01               	movlw	1
  9582  011D02  D00C               	goto	L7
  9583  011D04                     l10484:
  9584                           
  9585                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  9586                           ;stkvar	_fmt @ sp[(-32)+-4]
  9587  011D04  0EDC               	movlw	-36
  9588  011D06  006F FF8F FFD9     	movff	plusw1,fsr2l
  9589  011D0C  0EDD               	movlw	-35
  9590  011D0E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9591  011D14  2ADE               	incf	postinc2,f,c
  9592  011D16  0E00               	movlw	0
  9593  011D18  22DD               	addwfc	postdec2,f,c
  9594                           
  9595                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  9596  011D1A  0E00               	movlw	0
  9597  011D1C                     L7:
  9598  011D1C  6E32               	movwf	btemp^0,c
  9599  011D1E  0E00               	movlw	0
  9600  011D20  6E33               	movwf	(btemp+1)^0,c
  9601  011D22  D02A               	goto	l2086
  9602  011D24                     l10490:
  9603                           
  9604                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  9605                           ;stkvar	_fp @ sp[(-32)+-2]
  9606  011D24  0EDE               	movlw	-34
  9607  011D26  006F FF8F FFE6     	movff	plusw1,postinc1
  9608  011D2C  006F FF8F FFE6     	movff	plusw1,postinc1
  9609                           
  9610                           ;stkvar	_fmt @ sp[(-34)+-4]
  9611  011D32  0EDA               	movlw	-38
  9612  011D34  006F FF8F FFD9     	movff	plusw1,fsr2l
  9613  011D3A  0EDB               	movlw	-37
  9614  011D3C  006F FF8F FFDA     	movff	plusw1,fsr2h
  9615  011D42  006F FF7B FFF6     	movff	postinc2,tblptrl
  9616  011D48  006F FF77 FFF7     	movff	postdec2,tblptrh
  9617  011D4E                     	if	0	;tblptru may be non-zero
  9618  011D4E                     	endif
  9619  011D4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9620  011D4E  0E00               	movlw	low (__mediumconst shr (0+16))
  9621  011D50  6EF8               	movwf	tblptru,c
  9622  011D52                     	endif
  9623  011D52  0008               	tblrd		*
  9624  011D54  50F5               	movf	tablat,w,c
  9625  011D56  6EE6               	movwf	postinc1,c
  9626  011D58  0E00               	movlw	0
  9627  011D5A  6EE6               	movwf	postinc1,c
  9628  011D5C  ECA2  F0B5         	call	_fputc	;wreg free
  9629                           
  9630                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  9631                           ;stkvar	_fmt @ sp[(-32)+-4]
  9632  011D60  0EDC               	movlw	-36
  9633  011D62  006F FF8F FFD9     	movff	plusw1,fsr2l
  9634  011D68  0EDD               	movlw	-35
  9635  011D6A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9636  011D70  2ADE               	incf	postinc2,f,c
  9637  011D72  0E00               	movlw	0
  9638  011D74  22DD               	addwfc	postdec2,f,c
  9639  011D76  D7C4               	goto	l10480
  9640  011D78                     l2086:
  9641                           
  9642                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  9643  011D78  0EDA               	movlw	218
  9644  011D7A  26E1               	addwf	fsr1l,f,c
  9645  011D7C  0EFF               	movlw	255
  9646  011D7E  22E2               	addwfc	fsr1h,f,c
  9647  011D80  0012               	return		;funcret
  9648  011D82                     __end_of_vfpfcnvrt:
  9649                           	opt callstack 0
  9650                           
  9651 ;; *************** function _xtoa *****************
  9652 ;; Defined at:
  9653 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9654 ;; Parameters:    Size  Location     Type
  9655 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9656 ;;		 -> f(6), NULL(0), 
  9657 ;;  d               8  [STACK] unsigned long long 
  9658 ;;  x               1  [STACK] unsigned char 
  9659 ;; Auto vars:     Size  Location     Type
  9660 ;;  n               8  [STACK] unsigned long long 
  9661 ;;  c               2  [STACK] int 
  9662 ;;  i               2  [STACK] int 
  9663 ;;  w               2  [STACK] int 
  9664 ;;  p               2  [STACK] int 
  9665 ;; Return value:  Size  Location     Type
  9666 ;;                  2  [STACK] int 
  9667 ;; Registers used:
  9668 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  9669 ;; Tracked objects:
  9670 ;;		On entry : 0/5
  9671 ;;		On exit  : 0/0
  9672 ;;		Unchanged: 0/0
  9673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9678 ;;Total ram usage:        0 bytes
  9679 ;; Hardware stack levels used:    1
  9680 ;; Hardware stack levels required when called:   11
  9681 ;; This function calls:
  9682 ;;		_isalpha
  9683 ;;		_isupper
  9684 ;;		_pad
  9685 ;;		_toupper
  9686 ;; This function is called by:
  9687 ;;		_vfpfcnvrt
  9688 ;; This function uses a reentrant model
  9689 ;;
  9690                           
  9691                           	psect	text41
  9692  014498                     __ptext41:
  9693                           	opt callstack 0
  9694  014498                     _xtoa:
  9695                           	opt callstack 0
  9696                           
  9697                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  9698  014498  0E14               	movlw	20
  9699  01449A  26E1               	addwf	fsr1l,f,c
  9700  01449C  0E00               	movlw	0
  9701  01449E  22E2               	addwfc	fsr1h,f,c
  9702                           
  9703                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  9704                           
  9705                           ;incstack = 0
  9706  0144A0  AE1E               	btfss	(_prec+1)^0,7,c
  9707                           
  9708                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  9709  0144A2  921F               	bcf	_flags^0,1,c
  9710                           
  9711                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  9712  0144A4  BE1E               	btfsc	(_prec+1)^0,7,c
  9713  0144A6  D005               	goto	u10020
  9714  0144A8  501E               	movf	(_prec+1)^0,w,c
  9715  0144AA  E110               	bnz	l10272
  9716  0144AC  041D               	decf	_prec^0,w,c
  9717  0144AE  B0D8               	btfsc	status,0,c
  9718  0144B0  D00D               	goto	l10272
  9719  0144B2                     u10020:
  9720  0144B2  0E01               	movlw	1
  9721  0144B4  6E3C               	movwf	(btemp+10)^0,c
  9722  0144B6  0E00               	movlw	0
  9723  0144B8  6E3D               	movwf	(btemp+11)^0,c
  9724                           
  9725                           ;stkvar	_p @ sp[(-20)+18]
  9726  0144BA  0EFE               	movlw	-2
  9727  0144BC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9728  0144C2  0EFF               	movlw	-1
  9729  0144C4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9730  0144CA  D008               	goto	l2036
  9731  0144CC                     l10272:
  9732                           
  9733                           ;stkvar	_p @ sp[(-20)+18]
  9734  0144CC  0EFE               	movlw	-2
  9735  0144CE  0060  F077  FFE3   	movff	_prec,plusw1
  9736  0144D4  0EFF               	movlw	-1
  9737  0144D6  0060  F07B  FFE3   	movff	_prec+1,plusw1
  9738  0144DC                     l2036:
  9739                           
  9740                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
  9741                           ;stkvar	_w @ sp[(-20)+16]
  9742  0144DC  0EFC               	movlw	-4
  9743  0144DE  0060  F06F  FFE3   	movff	_width,plusw1
  9744  0144E4  0EFD               	movlw	-3
  9745  0144E6  0060  F073  FFE3   	movff	_width+1,plusw1
  9746                           
  9747                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  9748  0144EC  A81F               	btfss	_flags^0,4,c
  9749  0144EE  D00B               	goto	l10278
  9750                           
  9751                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  9752                           ;stkvar	_w @ sp[(-20)+16]
  9753  0144F0  50E1               	movf	fsr1l,w,c
  9754  0144F2  0FFC               	addlw	-4
  9755  0144F4  6ED9               	movwf	fsr2l,c
  9756  0144F6  50E2               	movf	fsr1h,w,c
  9757  0144F8  6EDA               	movwf	fsr2h,c
  9758  0144FA  0EFF               	movlw	255
  9759  0144FC  22DA               	addwfc	fsr2h,f,c
  9760  0144FE  0EFE               	movlw	254
  9761  014500  26DE               	addwf	postinc2,f,c
  9762  014502  0EFF               	movlw	255
  9763  014504  22DD               	addwfc	postdec2,f,c
  9764  014506                     l10278:
  9765                           
  9766                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
  9767                           ;stkvar	_d @ sp[(-20)+-10]
  9768  014506  0EE2               	movlw	226
  9769  014508  24E1               	addwf	fsr1l,w,c
  9770  01450A  6ED9               	movwf	fsr2l,c
  9771  01450C  0EFF               	movlw	255
  9772  01450E  20E2               	addwfc	fsr1h,w,c
  9773  014510  6EDA               	movwf	fsr2h,c
  9774                           
  9775                           ;stkvar	_n @ sp[(-20)+4]
  9776  014512  0E08               	movlw	8
  9777  014514  6E32               	movwf	btemp^0,c
  9778  014516  0EF0               	movlw	-16
  9779  014518                     us1004999:
  9780  014518  006F FF7B FFE3     	movff	postinc2,plusw1
  9781  01451E  28E8               	incf	wreg,w,c
  9782  014520  2E32               	decfsz	btemp^0,f,c
  9783  014522  D7FA               	bra	us1004999
  9784                           
  9785                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  9786  014524  0E4F               	movlw	79
  9787  014526  6E3C               	movwf	(btemp+10)^0,c
  9788  014528  0E00               	movlw	0
  9789  01452A  6E3D               	movwf	(btemp+11)^0,c
  9790                           
  9791                           ;stkvar	_i @ sp[(-20)+14]
  9792  01452C  0EFA               	movlw	-6
  9793  01452E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9794  014534  0EFB               	movlw	-5
  9795  014536  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9796                           
  9797                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  9798  01453C  0101               	movlb	1	; () banked
  9799  01453E  6BF2               	clrf	(_dbuf+79)& (0+255),b
  9800                           
  9801                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9802  014540  D0EE               	goto	l10316
  9803  014542                     l10284:
  9804                           
  9805                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
  9806                           ;stkvar	_i @ sp[(-20)+14]
  9807  014542  50E1               	movf	fsr1l,w,c
  9808  014544  0FFA               	addlw	-6
  9809  014546  6ED9               	movwf	fsr2l,c
  9810  014548  50E2               	movf	fsr1h,w,c
  9811  01454A  6EDA               	movwf	fsr2h,c
  9812  01454C  0EFF               	movlw	255
  9813  01454E  22DA               	addwfc	fsr2h,f,c
  9814  014550  06DE               	decf	postinc2,f,c
  9815  014552  0E00               	movlw	0
  9816  014554  5ADD               	subwfb	postdec2,f,c
  9817                           
  9818                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  9819                           ;stkvar	_n @ sp[(-20)+4]
  9820  014556  0EF0               	movlw	-16
  9821  014558  006F FF8C  F03C    	movff	plusw1,btemp+10
  9822  01455E  0EF1               	movlw	-15
  9823  014560  006F FF8C  F03D    	movff	plusw1,btemp+11
  9824  014566  0E0F               	movlw	15
  9825  014568  163C               	andwf	(btemp+10)^0,f,c
  9826  01456A  0E00               	movlw	0
  9827  01456C  163D               	andwf	(btemp+11)^0,f,c
  9828                           
  9829                           ;stkvar	_c @ sp[(-20)+12]
  9830  01456E  0EF8               	movlw	-8
  9831  014570  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9832  014576  0EF9               	movlw	-7
  9833  014578  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9834                           
  9835                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  9836                           ;stkvar	_c @ sp[(-20)+12]
  9837  01457E  0EF9               	movlw	-7
  9838  014580  BEE3               	btfsc	plusw1,7,c
  9839  014582  D00F               	goto	l10292
  9840  014584  0EF9               	movlw	-7
  9841  014586  50E3               	movf	plusw1,w,c
  9842  014588  E108               	bnz	u10050
  9843  01458A  0EF8               	movlw	-8
  9844  01458C  006F FF8C  F032    	movff	plusw1,btemp
  9845  014592  0E0A               	movlw	10
  9846  014594  5E32               	subwf	btemp^0,f,c
  9847  014596  A0D8               	btfss	status,0,c
  9848  014598  D004               	goto	l10292
  9849  01459A                     u10050:
  9850                           
  9851                           ;stkvar	_c @ sp[(-20)+12]
  9852  01459A  0EF8               	movlw	-8
  9853  01459C  50E3               	movf	plusw1,w,c
  9854  01459E  0F57               	addlw	87
  9855  0145A0  D003               	goto	L8
  9856  0145A2                     l10292:
  9857                           
  9858                           ;stkvar	_c @ sp[(-20)+12]
  9859  0145A2  0EF8               	movlw	-8
  9860  0145A4  50E3               	movf	plusw1,w,c
  9861  0145A6  0F30               	addlw	48
  9862  0145A8                     L8:
  9863  0145A8  6E3C               	movwf	(btemp+10)^0,c
  9864  0145AA  0EF9               	movlw	-7
  9865  0145AC  006F FF8C  F03D    	movff	plusw1,btemp+11
  9866  0145B2  0E00               	movlw	0
  9867  0145B4  223D               	addwfc	(btemp+11)^0,f,c
  9868                           
  9869                           ;stkvar	_c @ sp[(-20)+12]
  9870  0145B6  0EF8               	movlw	-8
  9871  0145B8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9872  0145BE  0EF9               	movlw	-7
  9873  0145C0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9874  0145C6  0EBF               	movlw	191
  9875  0145C8  6E3C               	movwf	(btemp+10)^0,c
  9876  0145CA  0EFF               	movlw	255
  9877  0145CC  6E3D               	movwf	(btemp+11)^0,c
  9878                           
  9879                           ;stkvar	_x @ sp[(-20)+-11]
  9880  0145CE  0EE1               	movlw	-31
  9881  0145D0  50E3               	movf	plusw1,w,c
  9882  0145D2  6E3A               	movwf	(btemp+8)^0,c
  9883  0145D4  6A3B               	clrf	(btemp+9)^0,c
  9884  0145D6  503C               	movf	(btemp+10)^0,w,c
  9885  0145D8  263A               	addwf	(btemp+8)^0,f,c
  9886  0145DA  503D               	movf	(btemp+11)^0,w,c
  9887  0145DC  223B               	addwfc	(btemp+9)^0,f,c
  9888  0145DE  503B               	movf	(btemp+9)^0,w,c
  9889  0145E0  E106               	bnz	u10060
  9890  0145E2  0E1A               	movlw	26
  9891  0145E4  5C3A               	subwf	(btemp+8)^0,w,c
  9892  0145E6  B0D8               	btfsc	status,0,c
  9893  0145E8  D002               	goto	u10060
  9894  0145EA  0E01               	movlw	1
  9895  0145EC  D001               	goto	u10070
  9896  0145EE                     u10060:
  9897  0145EE  0E00               	movlw	0
  9898  0145F0                     u10070:
  9899  0145F0  6E3C               	movwf	(btemp+10)^0,c
  9900  0145F2  6A3D               	clrf	(btemp+11)^0,c
  9901                           
  9902                           ;stkvar	_xtoa$4667 @ sp[(-20)+2]
  9903  0145F4  0EEE               	movlw	-18
  9904  0145F6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9905  0145FC  0EEF               	movlw	-17
  9906  0145FE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9907                           
  9908                           ;stkvar	_xtoa$4667 @ sp[(-20)+2]
  9909  014604  0EEE               	movlw	-18
  9910  014606  006F FF8C  F032    	movff	plusw1,btemp
  9911  01460C  0EEF               	movlw	-17
  9912  01460E  50E3               	movf	plusw1,w,c
  9913  014610  1032               	iorwf	btemp^0,w,c
  9914  014612  B4D8               	btfsc	status,2,c
  9915  014614  D041               	goto	l10308
  9916  014616  0E9F               	movlw	159
  9917  014618  6E3C               	movwf	(btemp+10)^0,c
  9918  01461A  0EFF               	movlw	255
  9919  01461C  6E3D               	movwf	(btemp+11)^0,c
  9920                           
  9921                           ;stkvar	_c @ sp[(-20)+12]
  9922  01461E  0EF8               	movlw	-8
  9923  014620  006F FF8C  F03A    	movff	plusw1,btemp+8
  9924  014626  0EF9               	movlw	-7
  9925  014628  006F FF8C  F03B    	movff	plusw1,btemp+9
  9926  01462E  0E20               	movlw	32
  9927  014630  123A               	iorwf	(btemp+8)^0,f,c
  9928  014632  0E00               	movlw	0
  9929  014634  123B               	iorwf	(btemp+9)^0,f,c
  9930  014636  503C               	movf	(btemp+10)^0,w,c
  9931  014638  263A               	addwf	(btemp+8)^0,f,c
  9932  01463A  503D               	movf	(btemp+11)^0,w,c
  9933  01463C  223B               	addwfc	(btemp+9)^0,f,c
  9934  01463E  503B               	movf	(btemp+9)^0,w,c
  9935  014640  E106               	bnz	u10090
  9936  014642  0E1A               	movlw	26
  9937  014644  5C3A               	subwf	(btemp+8)^0,w,c
  9938  014646  B0D8               	btfsc	status,0,c
  9939  014648  D002               	goto	u10090
  9940  01464A  0E01               	movlw	1
  9941  01464C  D001               	goto	u10100
  9942  01464E                     u10090:
  9943  01464E  0E00               	movlw	0
  9944  014650                     u10100:
  9945  014650  6E3C               	movwf	(btemp+10)^0,c
  9946  014652  6A3D               	clrf	(btemp+11)^0,c
  9947                           
  9948                           ;stkvar	_xtoa$4668 @ sp[(-20)+0]
  9949  014654  0EEC               	movlw	-20
  9950  014656  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9951  01465C  0EED               	movlw	-19
  9952  01465E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9953                           
  9954                           ;stkvar	_xtoa$4668 @ sp[(-20)+0]
  9955  014664  0EEC               	movlw	-20
  9956  014666  006F FF8C  F032    	movff	plusw1,btemp
  9957  01466C  0EED               	movlw	-19
  9958  01466E  50E3               	movf	plusw1,w,c
  9959  014670  1032               	iorwf	btemp^0,w,c
  9960  014672  B4D8               	btfsc	status,2,c
  9961  014674  D011               	goto	l10308
  9962                           
  9963                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  9964                           ;stkvar	_c @ sp[(-20)+12]
  9965  014676  0EF8               	movlw	-8
  9966  014678  006F FF8F FFE6     	movff	plusw1,postinc1
  9967  01467E  006F FF8F FFE6     	movff	plusw1,postinc1
  9968  014684  EC55  F0BE         	call	_toupper	;wreg free
  9969                           
  9970                           ;stkvar	_c @ sp[(-20)+12]
  9971  014688  0EF8               	movlw	-8
  9972  01468A  0060  F0CB  FFE3   	movff	btemp,plusw1
  9973  014690  0EF9               	movlw	-7
  9974  014692  0060  F0CF  FFE3   	movff	btemp+1,plusw1
  9975  014698                     l10308:
  9976                           
  9977                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  9978                           ;stkvar	_c @ sp[(-20)+12]
  9979                           ;stkvar	_i @ sp[(-20)+14]
  9980  014698  0EFA               	movlw	-6
  9981  01469A  006F FF8C  F03C    	movff	plusw1,btemp+10
  9982  0146A0  0EFB               	movlw	-5
  9983  0146A2  006F FF8C  F03D    	movff	plusw1,btemp+11
  9984  0146A8  0EA3               	movlw	low _dbuf
  9985  0146AA  243C               	addwf	(btemp+10)^0,w,c
  9986  0146AC  6ED9               	movwf	fsr2l,c
  9987  0146AE  0E01               	movlw	high _dbuf
  9988  0146B0  203D               	addwfc	(btemp+11)^0,w,c
  9989  0146B2  6EDA               	movwf	fsr2h,c
  9990  0146B4  0EF8               	movlw	-8
  9991  0146B6  006F FF8F FFDF     	movff	plusw1,indf2
  9992                           
  9993                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
  9994                           ;stkvar	_p @ sp[(-20)+18]
  9995  0146BC  50E1               	movf	fsr1l,w,c
  9996  0146BE  0FFE               	addlw	-2
  9997  0146C0  6ED9               	movwf	fsr2l,c
  9998  0146C2  50E2               	movf	fsr1h,w,c
  9999  0146C4  6EDA               	movwf	fsr2h,c
 10000  0146C6  0EFF               	movlw	255
 10001  0146C8  22DA               	addwfc	fsr2h,f,c
 10002  0146CA  06DE               	decf	postinc2,f,c
 10003  0146CC  0E00               	movlw	0
 10004  0146CE  5ADD               	subwfb	postdec2,f,c
 10005                           
 10006                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 10007                           ;stkvar	_w @ sp[(-20)+16]
 10008  0146D0  50E1               	movf	fsr1l,w,c
 10009  0146D2  0FFC               	addlw	-4
 10010  0146D4  6ED9               	movwf	fsr2l,c
 10011  0146D6  50E2               	movf	fsr1h,w,c
 10012  0146D8  6EDA               	movwf	fsr2h,c
 10013  0146DA  0EFF               	movlw	255
 10014  0146DC  22DA               	addwfc	fsr2h,f,c
 10015  0146DE  06DE               	decf	postinc2,f,c
 10016  0146E0  0E00               	movlw	0
 10017  0146E2  5ADD               	subwfb	postdec2,f,c
 10018                           
 10019                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 10020  0146E4  0E04               	movlw	4
 10021  0146E6  6E3D               	movwf	(btemp+11)^0,c
 10022                           
 10023                           ;stkvar	_n @ sp[(-20)+4]
 10024  0146E8  50E1               	movf	fsr1l,w,c
 10025  0146EA  0FF0               	addlw	-16
 10026  0146EC  6ED9               	movwf	fsr2l,c
 10027  0146EE  50E2               	movf	fsr1h,w,c
 10028  0146F0  6EDA               	movwf	fsr2h,c
 10029  0146F2  0EFF               	movlw	255
 10030  0146F4  22DA               	addwfc	fsr2h,f,c
 10031  0146F6  283D               	incf	(btemp+11)^0,w,c
 10032  0146F8  52DE               	movf	postinc2,f,c
 10033  0146FA  D00F               	goto	u10120
 10034  0146FC                     u10125:
 10035  0146FC  52DE               	movf	postinc2,f,c
 10036  0146FE  52DE               	movf	postinc2,f,c
 10037  014700  52DE               	movf	postinc2,f,c
 10038  014702  52DE               	movf	postinc2,f,c
 10039  014704  52DE               	movf	postinc2,f,c
 10040  014706  52DE               	movf	postinc2,f,c
 10041  014708  90D8               	bcf	status,0,c
 10042  01470A  32DD               	rrcf	postdec2,f,c
 10043  01470C  32DD               	rrcf	postdec2,f,c
 10044  01470E  32DD               	rrcf	postdec2,f,c
 10045  014710  32DD               	rrcf	postdec2,f,c
 10046  014712  32DD               	rrcf	postdec2,f,c
 10047  014714  32DD               	rrcf	postdec2,f,c
 10048  014716  32DD               	rrcf	postdec2,f,c
 10049  014718  32DE               	rrcf	postinc2,f,c
 10050  01471A                     u10120:
 10051  01471A  2EE8               	decfsz	wreg,f,c
 10052  01471C  D7EF               	goto	u10125
 10053  01471E                     l10316:
 10054                           
 10055                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10056                           ;stkvar	_i @ sp[(-20)+14]
 10057  01471E  0EFB               	movlw	-5
 10058  014720  BEE3               	btfsc	plusw1,7,c
 10059  014722  D03A               	goto	u10170
 10060  014724  0EFB               	movlw	-5
 10061  014726  50E3               	movf	plusw1,w,c
 10062  014728  E108               	bnz	u10130
 10063  01472A  0EFA               	movlw	-6
 10064  01472C  006F FF8C  F032    	movff	plusw1,btemp
 10065  014732  0E02               	movlw	2
 10066  014734  5E32               	subwf	btemp^0,f,c
 10067  014736  A0D8               	btfss	status,0,c
 10068  014738  D02F               	goto	u10170
 10069  01473A                     u10130:
 10070                           
 10071                           ;stkvar	_n @ sp[(-20)+4]
 10072  01473A  0EF0               	movlw	-16
 10073  01473C  50E3               	movf	plusw1,w,c
 10074  01473E  E115               	bnz	u10141
 10075  014740  0EF1               	movlw	-15
 10076  014742  50E3               	movf	plusw1,w,c
 10077  014744  E112               	bnz	u10141
 10078  014746  0EF2               	movlw	-14
 10079  014748  50E3               	movf	plusw1,w,c
 10080  01474A  E10F               	bnz	u10141
 10081  01474C  0EF3               	movlw	-13
 10082  01474E  50E3               	movf	plusw1,w,c
 10083  014750  E10C               	bnz	u10141
 10084  014752  0EF4               	movlw	-12
 10085  014754  50E3               	movf	plusw1,w,c
 10086  014756  E109               	bnz	u10141
 10087  014758  0EF5               	movlw	-11
 10088  01475A  50E3               	movf	plusw1,w,c
 10089  01475C  E106               	bnz	u10141
 10090  01475E  0EF6               	movlw	-10
 10091  014760  50E3               	movf	plusw1,w,c
 10092  014762  E103               	bnz	u10141
 10093  014764  0EF7               	movlw	-9
 10094  014766  50E3               	movf	plusw1,w,c
 10095  014768  A4D8               	btfss	status,2,c
 10096  01476A                     u10141:
 10097  01476A  D6EB               	goto	l10284
 10098                           
 10099                           ;stkvar	_p @ sp[(-20)+18]
 10100  01476C  0EFF               	movlw	-1
 10101  01476E  BEE3               	btfsc	plusw1,7,c
 10102  014770  D007               	goto	u10150
 10103  014772  0EFF               	movlw	-1
 10104  014774  50E3               	movf	plusw1,w,c
 10105  014776  E103               	bnz	u10151
 10106  014778  0EFE               	movlw	-2
 10107  01477A  04E3               	decf	plusw1,w,c
 10108  01477C  B0D8               	btfsc	status,0,c
 10109  01477E                     u10151:
 10110  01477E  D6E1               	goto	l10284
 10111  014780                     u10150:
 10112                           
 10113                           ;stkvar	_w @ sp[(-20)+16]
 10114  014780  0EFD               	movlw	-3
 10115  014782  BEE3               	btfsc	plusw1,7,c
 10116  014784  D009               	goto	u10170
 10117  014786  0EFD               	movlw	-3
 10118  014788  50E3               	movf	plusw1,w,c
 10119  01478A  E104               	bnz	u10160
 10120  01478C  0EFC               	movlw	-4
 10121  01478E  04E3               	decf	plusw1,w,c
 10122  014790  A0D8               	btfss	status,0,c
 10123  014792  D002               	goto	u10170
 10124  014794                     u10160:
 10125  014794  B21F               	btfsc	_flags^0,1,c
 10126  014796  D6D5               	goto	l10284
 10127  014798                     u10170:
 10128                           
 10129                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 10130  014798  A81F               	btfss	_flags^0,4,c
 10131  01479A  D036               	goto	l10332
 10132                           
 10133                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 10134                           ;stkvar	_i @ sp[(-20)+14]
 10135  01479C  50E1               	movf	fsr1l,w,c
 10136  01479E  0FFA               	addlw	-6
 10137  0147A0  6ED9               	movwf	fsr2l,c
 10138  0147A2  50E2               	movf	fsr1h,w,c
 10139  0147A4  6EDA               	movwf	fsr2h,c
 10140  0147A6  0EFF               	movlw	255
 10141  0147A8  22DA               	addwfc	fsr2h,f,c
 10142  0147AA  06DE               	decf	postinc2,f,c
 10143  0147AC  0E00               	movlw	0
 10144  0147AE  5ADD               	subwfb	postdec2,f,c
 10145                           
 10146                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 10147                           ;stkvar	_x @ sp[(-20)+-11]
 10148                           ;stkvar	_i @ sp[(-20)+14]
 10149  0147B0  0EFA               	movlw	-6
 10150  0147B2  006F FF8C  F03C    	movff	plusw1,btemp+10
 10151  0147B8  0EFB               	movlw	-5
 10152  0147BA  006F FF8C  F03D    	movff	plusw1,btemp+11
 10153  0147C0  0EA3               	movlw	low _dbuf
 10154  0147C2  243C               	addwf	(btemp+10)^0,w,c
 10155  0147C4  6ED9               	movwf	fsr2l,c
 10156  0147C6  0E01               	movlw	high _dbuf
 10157  0147C8  203D               	addwfc	(btemp+11)^0,w,c
 10158  0147CA  6EDA               	movwf	fsr2h,c
 10159  0147CC  0EE1               	movlw	-31
 10160  0147CE  006F FF8F FFDF     	movff	plusw1,indf2
 10161                           
 10162                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 10163                           ;stkvar	_i @ sp[(-20)+14]
 10164  0147D4  50E1               	movf	fsr1l,w,c
 10165  0147D6  0FFA               	addlw	-6
 10166  0147D8  6ED9               	movwf	fsr2l,c
 10167  0147DA  50E2               	movf	fsr1h,w,c
 10168  0147DC  6EDA               	movwf	fsr2h,c
 10169  0147DE  0EFF               	movlw	255
 10170  0147E0  22DA               	addwfc	fsr2h,f,c
 10171  0147E2  06DE               	decf	postinc2,f,c
 10172  0147E4  0E00               	movlw	0
 10173  0147E6  5ADD               	subwfb	postdec2,f,c
 10174                           
 10175                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 10176                           ;stkvar	_i @ sp[(-20)+14]
 10177  0147E8  0EFA               	movlw	-6
 10178  0147EA  006F FF8C  F03C    	movff	plusw1,btemp+10
 10179  0147F0  0EFB               	movlw	-5
 10180  0147F2  006F FF8C  F03D    	movff	plusw1,btemp+11
 10181  0147F8  0EA3               	movlw	low _dbuf
 10182  0147FA  243C               	addwf	(btemp+10)^0,w,c
 10183  0147FC  6ED9               	movwf	fsr2l,c
 10184  0147FE  0E01               	movlw	high _dbuf
 10185  014800  203D               	addwfc	(btemp+11)^0,w,c
 10186  014802  6EDA               	movwf	fsr2h,c
 10187  014804  0E30               	movlw	48
 10188  014806  6EDF               	movwf	indf2,c
 10189  014808                     l10332:
 10190                           
 10191                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 10192                           ;stkvar	_w @ sp[(-20)+16]
 10193  014808  0EFC               	movlw	-4
 10194  01480A  006F FF8F FFE6     	movff	plusw1,postinc1
 10195  014810  006F FF8F FFE6     	movff	plusw1,postinc1
 10196                           
 10197                           ;stkvar	_i @ sp[(-22)+14]
 10198  014816  0EA3               	movlw	low _dbuf
 10199  014818  6E3C               	movwf	(btemp+10)^0,c
 10200  01481A  0E01               	movlw	high _dbuf
 10201  01481C  6E3D               	movwf	(btemp+11)^0,c
 10202  01481E  0EF8               	movlw	-8
 10203  014820  50E3               	movf	plusw1,w,c
 10204  014822  263C               	addwf	(btemp+10)^0,f,c
 10205  014824  0EF9               	movlw	-7
 10206  014826  50E3               	movf	plusw1,w,c
 10207  014828  223D               	addwfc	(btemp+11)^0,f,c
 10208  01482A  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10209  014830  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10210                           
 10211                           ;stkvar	_fp @ sp[(-24)+-2]
 10212  014836  0EE6               	movlw	-26
 10213  014838  006F FF8F FFE6     	movff	plusw1,postinc1
 10214  01483E  006F FF8F FFE6     	movff	plusw1,postinc1
 10215  014844  ECC0  F0B6         	call	_pad	;wreg free
 10216                           
 10217                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 10218  014848  0EE1               	movlw	225
 10219  01484A  26E1               	addwf	fsr1l,f,c
 10220  01484C  0EFF               	movlw	255
 10221  01484E  22E2               	addwfc	fsr1h,f,c
 10222  014850  0012               	return		;funcret
 10223  014852                     __end_of_xtoa:
 10224                           	opt callstack 0
 10225                           
 10226 ;; *************** function _toupper *****************
 10227 ;; Defined at:
 10228 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 10229 ;; Parameters:    Size  Location     Type
 10230 ;;  c               2  [STACK] int 
 10231 ;; Auto vars:     Size  Location     Type
 10232 ;;		None
 10233 ;; Return value:  Size  Location     Type
 10234 ;;                  2  [STACK] int 
 10235 ;; Registers used:
 10236 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 10237 ;; Tracked objects:
 10238 ;;		On entry : 0/1
 10239 ;;		On exit  : 0/0
 10240 ;;		Unchanged: 0/0
 10241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10246 ;;Total ram usage:        0 bytes
 10247 ;; Hardware stack levels used:    1
 10248 ;; Hardware stack levels required when called:    7
 10249 ;; This function calls:
 10250 ;;		_islower
 10251 ;; This function is called by:
 10252 ;;		_xtoa
 10253 ;; This function uses a reentrant model
 10254 ;;
 10255                           
 10256                           	psect	text42
 10257  017CAA                     __ptext42:
 10258                           	opt callstack 0
 10259  017CAA                     _toupper:
 10260                           	opt callstack 0
 10261                           
 10262                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10263  017CAA  52E6               	movf	postinc1,f,c
 10264  017CAC  52E6               	movf	postinc1,f,c
 10265                           
 10266                           ;stkvar	_c @ sp[(-2)+-2]
 10267                           
 10268                           ;incstack = 0
 10269  017CAE  0EFC               	movlw	-4
 10270  017CB0  50E3               	movf	plusw1,w,c
 10271  017CB2  0F9F               	addlw	159
 10272  017CB4  6E3C               	movwf	(btemp+10)^0,c
 10273  017CB6  0EFD               	movlw	-3
 10274  017CB8  006F FF8C  F03D    	movff	plusw1,btemp+11
 10275  017CBE  0EFF               	movlw	255
 10276  017CC0  223D               	addwfc	(btemp+11)^0,f,c
 10277  017CC2  503D               	movf	(btemp+11)^0,w,c
 10278  017CC4  E106               	bnz	u5390
 10279  017CC6  0E1A               	movlw	26
 10280  017CC8  5C3C               	subwf	(btemp+10)^0,w,c
 10281  017CCA  B0D8               	btfsc	status,0,c
 10282  017CCC  D002               	goto	u5390
 10283  017CCE  0E01               	movlw	1
 10284  017CD0  D001               	goto	u5400
 10285  017CD2                     u5390:
 10286  017CD2  0E00               	movlw	0
 10287  017CD4                     u5400:
 10288  017CD4  6E3C               	movwf	(btemp+10)^0,c
 10289  017CD6  6A3D               	clrf	(btemp+11)^0,c
 10290                           
 10291                           ;stkvar	_toupper$5328 @ sp[(-2)+0]
 10292  017CD8  0EFE               	movlw	-2
 10293  017CDA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10294  017CE0  0EFF               	movlw	-1
 10295  017CE2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10296                           
 10297                           ;stkvar	_toupper$5328 @ sp[(-2)+0]
 10298  017CE8  0EFE               	movlw	-2
 10299  017CEA  006F FF8C  F032    	movff	plusw1,btemp
 10300  017CF0  0EFF               	movlw	-1
 10301  017CF2  50E3               	movf	plusw1,w,c
 10302  017CF4  1032               	iorwf	btemp^0,w,c
 10303  017CF6  B4D8               	btfsc	status,2,c
 10304  017CF8  D00D               	goto	l6772
 10305                           
 10306                           ;stkvar	_c @ sp[(-2)+-2]
 10307  017CFA  0EFC               	movlw	-4
 10308  017CFC  006F FF8C  F032    	movff	plusw1,btemp
 10309  017D02  0EFD               	movlw	-3
 10310  017D04  006F FF8C  F033    	movff	plusw1,btemp+1
 10311  017D0A  0E5F               	movlw	95
 10312  017D0C  1632               	andwf	btemp^0,f,c
 10313  017D0E  0E00               	movlw	0
 10314  017D10  1633               	andwf	(btemp+1)^0,f,c
 10315  017D12  D008               	goto	l2969
 10316  017D14                     l6772:
 10317                           
 10318                           ;stkvar	_c @ sp[(-2)+-2]
 10319  017D14  0EFC               	movlw	-4
 10320  017D16  006F FF8C  F032    	movff	plusw1,btemp
 10321  017D1C  0EFD               	movlw	-3
 10322  017D1E  006F FF8C  F033    	movff	plusw1,btemp+1
 10323  017D24                     l2969:
 10324                           
 10325                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 10326  017D24  52E5               	movf	postdec1,f,c
 10327  017D26  52E5               	movf	postdec1,f,c
 10328  017D28  52E5               	movf	postdec1,f,c
 10329  017D2A  52E5               	movf	postdec1,f,c
 10330  017D2C  0012               	return		;funcret
 10331  017D2E                     __end_of_toupper:
 10332                           	opt callstack 0
 10333                           
 10334 ;; *************** function _islower *****************
 10335 ;; Defined at:
 10336 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 10337 ;; Parameters:    Size  Location     Type
 10338 ;;  c               2  [STACK] int 
 10339 ;; Auto vars:     Size  Location     Type
 10340 ;;		None
 10341 ;; Return value:  Size  Location     Type
 10342 ;;                  2  [STACK] int 
 10343 ;; Registers used:
 10344 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 10345 ;; Tracked objects:
 10346 ;;		On entry : 0/0
 10347 ;;		On exit  : 0/0
 10348 ;;		Unchanged: 0/0
 10349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10354 ;;Total ram usage:        0 bytes
 10355 ;; Hardware stack levels used:    1
 10356 ;; Hardware stack levels required when called:    6
 10357 ;; This function calls:
 10358 ;;		Nothing
 10359 ;; This function is called by:
 10360 ;;		_toupper
 10361 ;; This function uses a reentrant model
 10362 ;;
 10363                           
 10364                           	psect	text43
 10365  0187A2                     __ptext43:
 10366                           	opt callstack 0
 10367  0187A2                     _islower:
 10368                           	opt callstack 16
 10369                           
 10370                           ;stkvar	_c @ sp[(0)+-2]
 10371                           
 10372                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10373                           ;incstack = 0
 10374  0187A2  0EFE               	movlw	-2
 10375  0187A4  50E3               	movf	plusw1,w,c
 10376  0187A6  0F9F               	addlw	159
 10377  0187A8  6E3C               	movwf	(btemp+10)^0,c
 10378  0187AA  0EFF               	movlw	-1
 10379  0187AC  006F FF8C  F03D    	movff	plusw1,btemp+11
 10380  0187B2  0EFF               	movlw	255
 10381  0187B4  223D               	addwfc	(btemp+11)^0,f,c
 10382  0187B6  503D               	movf	(btemp+11)^0,w,c
 10383  0187B8  E106               	bnz	u5080
 10384  0187BA  0E1A               	movlw	26
 10385  0187BC  5C3C               	subwf	(btemp+10)^0,w,c
 10386  0187BE  B0D8               	btfsc	status,0,c
 10387  0187C0  D002               	goto	u5080
 10388  0187C2  0E01               	movlw	1
 10389  0187C4  D001               	goto	u5090
 10390  0187C6                     u5080:
 10391  0187C6  0E00               	movlw	0
 10392  0187C8                     u5090:
 10393  0187C8  6E32               	movwf	btemp^0,c
 10394  0187CA  6A33               	clrf	(btemp+1)^0,c
 10395                           
 10396                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 10397  0187CC  52E5               	movf	postdec1,f,c
 10398  0187CE  52E5               	movf	postdec1,f,c
 10399  0187D0  0012               	return		;funcret
 10400  0187D2                     __end_of_islower:
 10401                           	opt callstack 0
 10402                           
 10403 ;; *************** function _isalpha *****************
 10404 ;; Defined at:
 10405 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 10406 ;; Parameters:    Size  Location     Type
 10407 ;;  c               2  [STACK] int 
 10408 ;; Auto vars:     Size  Location     Type
 10409 ;;		None
 10410 ;; Return value:  Size  Location     Type
 10411 ;;                  2  [STACK] int 
 10412 ;; Registers used:
 10413 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 10414 ;; Tracked objects:
 10415 ;;		On entry : 0/0
 10416 ;;		On exit  : 0/0
 10417 ;;		Unchanged: 0/0
 10418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10423 ;;Total ram usage:        0 bytes
 10424 ;; Hardware stack levels used:    1
 10425 ;; Hardware stack levels required when called:    6
 10426 ;; This function calls:
 10427 ;;		Nothing
 10428 ;; This function is called by:
 10429 ;;		_xtoa
 10430 ;; This function uses a reentrant model
 10431 ;;
 10432                           
 10433                           	psect	text44
 10434  018516                     __ptext44:
 10435                           	opt callstack 0
 10436  018516                     _isalpha:
 10437                           	opt callstack 17
 10438                           
 10439                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10440                           ;incstack = 0
 10441  018516  0E9F               	movlw	159
 10442  018518  6E3C               	movwf	(btemp+10)^0,c
 10443  01851A  0EFF               	movlw	255
 10444  01851C  6E3D               	movwf	(btemp+11)^0,c
 10445                           
 10446                           ;stkvar	_c @ sp[(0)+-2]
 10447  01851E  0EFE               	movlw	-2
 10448  018520  006F FF8C  F03A    	movff	plusw1,btemp+8
 10449  018526  0EFF               	movlw	-1
 10450  018528  006F FF8C  F03B    	movff	plusw1,btemp+9
 10451  01852E  0E20               	movlw	32
 10452  018530  123A               	iorwf	(btemp+8)^0,f,c
 10453  018532  0E00               	movlw	0
 10454  018534  123B               	iorwf	(btemp+9)^0,f,c
 10455  018536  503C               	movf	(btemp+10)^0,w,c
 10456  018538  263A               	addwf	(btemp+8)^0,f,c
 10457  01853A  503D               	movf	(btemp+11)^0,w,c
 10458  01853C  223B               	addwfc	(btemp+9)^0,f,c
 10459  01853E  503B               	movf	(btemp+9)^0,w,c
 10460  018540  E106               	bnz	u5370
 10461  018542  0E1A               	movlw	26
 10462  018544  5C3A               	subwf	(btemp+8)^0,w,c
 10463  018546  B0D8               	btfsc	status,0,c
 10464  018548  D002               	goto	u5370
 10465  01854A  0E01               	movlw	1
 10466  01854C  D001               	goto	u5380
 10467  01854E                     u5370:
 10468  01854E  0E00               	movlw	0
 10469  018550                     u5380:
 10470  018550  6E32               	movwf	btemp^0,c
 10471  018552  6A33               	clrf	(btemp+1)^0,c
 10472                           
 10473                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 10474  018554  52E5               	movf	postdec1,f,c
 10475  018556  52E5               	movf	postdec1,f,c
 10476  018558  0012               	return		;funcret
 10477  01855A                     __end_of_isalpha:
 10478                           	opt callstack 0
 10479                           
 10480 ;; *************** function _strncmp *****************
 10481 ;; Defined at:
 10482 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 10483 ;; Parameters:    Size  Location     Type
 10484 ;;  _l              2  [STACK] PTR const unsigned char 
 10485 ;;		 -> ct(3), 
 10486 ;;  _r              2  [STACK] PTR const unsigned char 
 10487 ;;		 -> STR_56(3), 
 10488 ;;  n               2  [STACK] unsigned int 
 10489 ;; Auto vars:     Size  Location     Type
 10490 ;;  r               2  [STACK] PTR const unsigned char 
 10491 ;;		 -> STR_56(3), 
 10492 ;;  l               2  [STACK] PTR const unsigned char 
 10493 ;;		 -> ct(3), 
 10494 ;; Return value:  Size  Location     Type
 10495 ;;                  2  [STACK] int 
 10496 ;; Registers used:
 10497 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru,
      + prodl
 10498 ;; Tracked objects:
 10499 ;;		On entry : 0/5
 10500 ;;		On exit  : 0/0
 10501 ;;		Unchanged: 0/0
 10502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10507 ;;Total ram usage:        0 bytes
 10508 ;; Hardware stack levels used:    1
 10509 ;; Hardware stack levels required when called:    6
 10510 ;; This function calls:
 10511 ;;		Nothing
 10512 ;; This function is called by:
 10513 ;;		_vfpfcnvrt
 10514 ;; This function uses a reentrant model
 10515 ;;
 10516                           
 10517                           	psect	text45
 10518  015F8E                     __ptext45:
 10519                           	opt callstack 0
 10520  015F8E                     _strncmp:
 10521                           	opt callstack 0
 10522                           
 10523                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10524  015F8E  52E6               	movf	postinc1,f,c
 10525  015F90  52E6               	movf	postinc1,f,c
 10526  015F92  52E6               	movf	postinc1,f,c
 10527  015F94  52E6               	movf	postinc1,f,c
 10528                           
 10529                           ;stkvar	__l @ sp[(-4)+-2]
 10530                           
 10531                           ;incstack = 0
 10532  015F96  0EFA               	movlw	-6
 10533  015F98  006F FF8C  F03C    	movff	plusw1,btemp+10
 10534  015F9E  0EFB               	movlw	-5
 10535  015FA0  006F FF8C  F03D    	movff	plusw1,btemp+11
 10536                           
 10537                           ;stkvar	_l @ sp[(-4)+2]
 10538  015FA6  0EFF               	movlw	-1
 10539  015FA8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10540  015FAE  0EFE               	movlw	-2
 10541  015FB0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10542                           
 10543                           ;stkvar	__r @ sp[(-4)+-4]
 10544  015FB6  0EF8               	movlw	-8
 10545  015FB8  006F FF8C  F03C    	movff	plusw1,btemp+10
 10546  015FBE  0EF9               	movlw	-7
 10547  015FC0  006F FF8C  F03D    	movff	plusw1,btemp+11
 10548                           
 10549                           ;stkvar	_r @ sp[(-4)+0]
 10550  015FC6  0EFD               	movlw	-3
 10551  015FC8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10552  015FCE  0EFC               	movlw	-4
 10553  015FD0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10554                           
 10555                           ;stkvar	_n @ sp[(-4)+-6]
 10556  015FD6  0EF6               	movlw	-10
 10557  015FD8  006F FF8C  F032    	movff	plusw1,btemp
 10558  015FDE  0E01               	movlw	1
 10559  015FE0  5E32               	subwf	btemp^0,f,c
 10560  015FE2  0EF6               	movlw	-10
 10561  015FE4  0060  F0CB  FFE3   	movff	btemp,plusw1
 10562  015FEA  0EF7               	movlw	-9
 10563  015FEC  006F FF8C  F032    	movff	plusw1,btemp
 10564  015FF2  0E00               	movlw	0
 10565  015FF4  5A32               	subwfb	btemp^0,f,c
 10566  015FF6  0EF7               	movlw	-9
 10567  015FF8  0060  F0CB  FFE3   	movff	btemp,plusw1
 10568  015FFE  0EF6               	movlw	-10
 10569  016000  28E3               	incf	plusw1,w,c
 10570  016002  E13F               	bnz	l7930
 10571  016004  0EF7               	movlw	-9
 10572  016006  28E3               	incf	plusw1,w,c
 10573  016008  A4D8               	btfss	status,2,c
 10574  01600A  D03B               	goto	l7930
 10575  01600C  0E00               	movlw	0
 10576  01600E  6E32               	movwf	btemp^0,c
 10577  016010  0E00               	movlw	0
 10578  016012  6E33               	movwf	(btemp+1)^0,c
 10579  016014  D09B               	goto	l2941
 10580  016016                     l7928:
 10581                           
 10582                           ;stkvar	_l @ sp[(-4)+2]
 10583  016016  0EFE               	movlw	-2
 10584  016018  50E3               	movf	plusw1,w,c
 10585  01601A  0F01               	addlw	1
 10586  01601C  6E32               	movwf	btemp^0,c
 10587  01601E  0EFE               	movlw	-2
 10588  016020  0060  F0CB  FFE3   	movff	btemp,plusw1
 10589  016026  6A32               	clrf	btemp^0,c
 10590  016028  0EFF               	movlw	-1
 10591  01602A  50E3               	movf	plusw1,w,c
 10592  01602C  2032               	addwfc	btemp^0,w,c
 10593  01602E  6E32               	movwf	btemp^0,c
 10594  016030  0EFF               	movlw	-1
 10595  016032  0060  F0CB  FFE3   	movff	btemp,plusw1
 10596                           
 10597                           ;stkvar	_r @ sp[(-4)+0]
 10598  016038  0EFC               	movlw	-4
 10599  01603A  50E3               	movf	plusw1,w,c
 10600  01603C  0F01               	addlw	1
 10601  01603E  6E32               	movwf	btemp^0,c
 10602  016040  0EFC               	movlw	-4
 10603  016042  0060  F0CB  FFE3   	movff	btemp,plusw1
 10604  016048  6A32               	clrf	btemp^0,c
 10605  01604A  0EFD               	movlw	-3
 10606  01604C  50E3               	movf	plusw1,w,c
 10607  01604E  2032               	addwfc	btemp^0,w,c
 10608  016050  6E32               	movwf	btemp^0,c
 10609  016052  0EFD               	movlw	-3
 10610  016054  0060  F0CB  FFE3   	movff	btemp,plusw1
 10611                           
 10612                           ;stkvar	_n @ sp[(-4)+-6]
 10613  01605A  0EF6               	movlw	-10
 10614  01605C  006F FF8C  F032    	movff	plusw1,btemp
 10615  016062  0E01               	movlw	1
 10616  016064  5E32               	subwf	btemp^0,f,c
 10617  016066  0EF6               	movlw	-10
 10618  016068  0060  F0CB  FFE3   	movff	btemp,plusw1
 10619  01606E  0EF7               	movlw	-9
 10620  016070  006F FF8C  F032    	movff	plusw1,btemp
 10621  016076  0E00               	movlw	0
 10622  016078  5A32               	subwfb	btemp^0,f,c
 10623  01607A  0EF7               	movlw	-9
 10624  01607C  0060  F0CB  FFE3   	movff	btemp,plusw1
 10625  016082                     l7930:
 10626                           
 10627                           ;stkvar	_l @ sp[(-4)+2]
 10628  016082  0EFE               	movlw	-2
 10629  016084  006F FF8F FFD9     	movff	plusw1,fsr2l
 10630  01608A  0EFF               	movlw	-1
 10631  01608C  006F FF8F FFDA     	movff	plusw1,fsr2h
 10632  016092  50DF               	movf	indf2,w,c
 10633  016094  B4D8               	btfsc	status,2,c
 10634  016096  D03B               	goto	u7570
 10635                           
 10636                           ;stkvar	_r @ sp[(-4)+0]
 10637  016098  50E1               	movf	fsr1l,w,c
 10638  01609A  0FFC               	addlw	-4
 10639  01609C  6ED9               	movwf	fsr2l,c
 10640  01609E  50E2               	movf	fsr1h,w,c
 10641  0160A0  6EDA               	movwf	fsr2h,c
 10642  0160A2  0EFF               	movlw	255
 10643  0160A4  22DA               	addwfc	fsr2h,f,c
 10644  0160A6  006F FF7B FFF6     	movff	postinc2,tblptrl
 10645  0160AC  006F FF77 FFF7     	movff	postdec2,tblptrh
 10646  0160B2                     	if	0	;tblptru may be non-zero
 10647  0160B2                     	endif
 10648  0160B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10649  0160B2  0E00               	movlw	low (__mediumconst shr (0+16))
 10650  0160B4  6EF8               	movwf	tblptru,c
 10651  0160B6                     	endif
 10652  0160B6  0008               	tblrd		*
 10653  0160B8  50F5               	movf	tablat,w,c
 10654  0160BA  0900               	iorlw	0
 10655  0160BC  B4D8               	btfsc	status,2,c
 10656  0160BE  D027               	goto	u7570
 10657                           
 10658                           ;stkvar	_n @ sp[(-4)+-6]
 10659  0160C0  0EF6               	movlw	-10
 10660  0160C2  006F FF8C  F032    	movff	plusw1,btemp
 10661  0160C8  0EF7               	movlw	-9
 10662  0160CA  50E3               	movf	plusw1,w,c
 10663  0160CC  1032               	iorwf	btemp^0,w,c
 10664  0160CE  B4D8               	btfsc	status,2,c
 10665  0160D0  D01E               	goto	u7570
 10666                           
 10667                           ;stkvar	_l @ sp[(-4)+2]
 10668  0160D2  0EFE               	movlw	-2
 10669  0160D4  006F FF8F FFD9     	movff	plusw1,fsr2l
 10670  0160DA  0EFF               	movlw	-1
 10671  0160DC  006F FF8F FFDA     	movff	plusw1,fsr2h
 10672  0160E2  50DF               	movf	indf2,w,c
 10673  0160E4  6E3D               	movwf	(btemp+11)^0,c
 10674                           
 10675                           ;stkvar	_r @ sp[(-4)+0]
 10676  0160E6  50E1               	movf	fsr1l,w,c
 10677  0160E8  0FFC               	addlw	-4
 10678  0160EA  6ED9               	movwf	fsr2l,c
 10679  0160EC  50E2               	movf	fsr1h,w,c
 10680  0160EE  6EDA               	movwf	fsr2h,c
 10681  0160F0  0EFF               	movlw	255
 10682  0160F2  22DA               	addwfc	fsr2h,f,c
 10683  0160F4  006F FF7B FFF6     	movff	postinc2,tblptrl
 10684  0160FA  006F FF77 FFF7     	movff	postdec2,tblptrh
 10685  016100                     	if	0	;tblptru may be non-zero
 10686  016100                     	endif
 10687  016100                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10688  016100  0E00               	movlw	low (__mediumconst shr (0+16))
 10689  016102  6EF8               	movwf	tblptru,c
 10690  016104                     	endif
 10691  016104  0008               	tblrd		*
 10692  016106  50F5               	movf	tablat,w,c
 10693  016108  183D               	xorwf	(btemp+11)^0,w,c
 10694  01610A  B4D8               	btfsc	status,2,c
 10695  01610C  D784               	goto	l7928
 10696  01610E                     u7570:
 10697                           
 10698                           ;stkvar	_l @ sp[(-4)+2]
 10699  01610E  0EFE               	movlw	-2
 10700  016110  006F FF8F FFD9     	movff	plusw1,fsr2l
 10701  016116  0EFF               	movlw	-1
 10702  016118  006F FF8F FFDA     	movff	plusw1,fsr2h
 10703  01611E  50DF               	movf	indf2,w,c
 10704  016120  6E32               	movwf	btemp^0,c
 10705  016122  6A33               	clrf	(btemp+1)^0,c
 10706                           
 10707                           ;stkvar	_r @ sp[(-4)+0]
 10708  016124  50E1               	movf	fsr1l,w,c
 10709  016126  0FFC               	addlw	-4
 10710  016128  6ED9               	movwf	fsr2l,c
 10711  01612A  50E2               	movf	fsr1h,w,c
 10712  01612C  6EDA               	movwf	fsr2h,c
 10713  01612E  0EFF               	movlw	255
 10714  016130  22DA               	addwfc	fsr2h,f,c
 10715  016132  006F FF7B FFF6     	movff	postinc2,tblptrl
 10716  016138  006F FF77 FFF7     	movff	postdec2,tblptrh
 10717  01613E                     	if	0	;tblptru may be non-zero
 10718  01613E                     	endif
 10719  01613E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10720  01613E  0E00               	movlw	low (__mediumconst shr (0+16))
 10721  016140  6EF8               	movwf	tblptru,c
 10722  016142                     	endif
 10723  016142  0008               	tblrd		*
 10724  016144  50F5               	movf	tablat,w,c
 10725  016146  5E32               	subwf	btemp^0,f,c
 10726  016148  0E00               	movlw	0
 10727  01614A  5A33               	subwfb	(btemp+1)^0,f,c
 10728  01614C                     l2941:
 10729                           
 10730                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 10731  01614C  0EF6               	movlw	246
 10732  01614E  26E1               	addwf	fsr1l,f,c
 10733  016150  0EFF               	movlw	255
 10734  016152  22E2               	addwfc	fsr1h,f,c
 10735  016154  0012               	return		;funcret
 10736  016156                     __end_of_strncmp:
 10737                           	opt callstack 0
 10738                           
 10739 ;; *************** function _stoa *****************
 10740 ;; Defined at:
 10741 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10742 ;; Parameters:    Size  Location     Type
 10743 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10744 ;;		 -> f(6), NULL(0), 
 10745 ;;  s               2  [STACK] PTR unsigned char 
 10746 ;;		 -> ?_printf(2), ?_sprintf(2), STR_28(9), STR_27(12), 
 10747 ;;		 -> D.lcd(216), D(218), T(144), STR_7(6), 
 10748 ;;		 -> STR_3(6), V(188), 
 10749 ;; Auto vars:     Size  Location     Type
 10750 ;;  nuls            7  [STACK] unsigned char [7]
 10751 ;;  l               2  [STACK] int 
 10752 ;;  p               2  [STACK] int 
 10753 ;;  cp              2  [STACK] PTR unsigned char 
 10754 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_28(9), 
 10755 ;;		 -> STR_27(12), D.lcd(216), D(218), T(144), 
 10756 ;;		 -> STR_7(6), STR_3(6), V(188), 
 10757 ;;  w               2  [STACK] int 
 10758 ;;  i               2  [STACK] int 
 10759 ;; Return value:  Size  Location     Type
 10760 ;;                  2  [STACK] int 
 10761 ;; Registers used:
 10762 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 10763 ;; Tracked objects:
 10764 ;;		On entry : 0/5
 10765 ;;		On exit  : 0/0
 10766 ;;		Unchanged: 0/0
 10767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10772 ;;Total ram usage:        0 bytes
 10773 ;; Hardware stack levels used:    1
 10774 ;; Hardware stack levels required when called:    9
 10775 ;; This function calls:
 10776 ;;		_fputc
 10777 ;;		_strlen
 10778 ;; This function is called by:
 10779 ;;		_vfpfcnvrt
 10780 ;; This function uses a reentrant model
 10781 ;;
 10782                           
 10783                           	psect	text46
 10784  015186                     __ptext46:
 10785                           	opt callstack 0
 10786  015186                     _stoa:
 10787                           	opt callstack 0
 10788                           
 10789                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10790  015186  0E11               	movlw	17
 10791  015188  26E1               	addwf	fsr1l,f,c
 10792  01518A  0E00               	movlw	0
 10793  01518C  22E2               	addwfc	fsr1h,f,c
 10794                           
 10795                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 10796                           
 10797                           ;incstack = 0
 10798  01518E  EE20  F18C         	lfsr	2,stoa@F1166
 10799                           
 10800                           ;stkvar	_nuls @ sp[(-17)+0]
 10801  015192  0E07               	movlw	7
 10802  015194  6E32               	movwf	btemp^0,c
 10803  015196  0EEF               	movlw	-17
 10804  015198                     us991999:
 10805  015198  006F FF7B FFE3     	movff	postinc2,plusw1
 10806  01519E  28E8               	incf	wreg,w,c
 10807  0151A0  2E32               	decfsz	btemp^0,f,c
 10808  0151A2  D7FA               	bra	us991999
 10809                           
 10810                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 10811                           ;stkvar	_s @ sp[(-17)+-4]
 10812  0151A4  0EEB               	movlw	-21
 10813  0151A6  006F FF8C  F03C    	movff	plusw1,btemp+10
 10814  0151AC  0EEC               	movlw	-20
 10815  0151AE  006F FF8C  F03D    	movff	plusw1,btemp+11
 10816                           
 10817                           ;stkvar	_cp @ sp[(-17)+11]
 10818  0151B4  0EFB               	movlw	-5
 10819  0151B6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10820  0151BC  0EFA               	movlw	-6
 10821  0151BE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10822                           
 10823                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 10824                           ;stkvar	_cp @ sp[(-17)+11]
 10825  0151C4  0EFA               	movlw	-6
 10826  0151C6  006F FF8C  F032    	movff	plusw1,btemp
 10827  0151CC  0EFB               	movlw	-5
 10828  0151CE  50E3               	movf	plusw1,w,c
 10829  0151D0  1032               	iorwf	btemp^0,w,c
 10830  0151D2  A4D8               	btfss	status,2,c
 10831  0151D4  D00E               	goto	l10220
 10832                           
 10833                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 10834                           ;stkvar	_nuls @ sp[(-17)+0]
 10835  0151D6  0EEF               	movlw	239
 10836  0151D8  24E1               	addwf	fsr1l,w,c
 10837  0151DA  6E3C               	movwf	(btemp+10)^0,c
 10838  0151DC  0EFF               	movlw	255
 10839  0151DE  20E2               	addwfc	fsr1h,w,c
 10840  0151E0  6E3D               	movwf	(btemp+11)^0,c
 10841                           
 10842                           ;stkvar	_cp @ sp[(-17)+11]
 10843  0151E2  0EFB               	movlw	-5
 10844  0151E4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10845  0151EA  0EFA               	movlw	-6
 10846  0151EC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10847  0151F2                     l10220:
 10848                           
 10849                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 10850                           ;stkvar	_cp @ sp[(-17)+11]
 10851  0151F2  0EFA               	movlw	-6
 10852  0151F4  006F FF8F FFE6     	movff	plusw1,postinc1
 10853  0151FA  006F FF8F FFE6     	movff	plusw1,postinc1
 10854  015200  EC9A  F0BC         	call	_strlen	;wreg free
 10855                           
 10856                           ;stkvar	_l @ sp[(-17)+7]
 10857  015204  0EF6               	movlw	-10
 10858  015206  0060  F0CB  FFE3   	movff	btemp,plusw1
 10859  01520C  0EF7               	movlw	-9
 10860  01520E  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10861                           
 10862                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 10863                           ;stkvar	_p @ sp[(-17)+9]
 10864  015214  0EF8               	movlw	-8
 10865  015216  0060  F077  FFE3   	movff	_prec,plusw1
 10866  01521C  0EF9               	movlw	-7
 10867  01521E  0060  F07B  FFE3   	movff	_prec+1,plusw1
 10868                           
 10869                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 10870                           ;stkvar	_p @ sp[(-17)+9]
 10871  015224  0EF9               	movlw	-7
 10872  015226  BEE3               	btfsc	plusw1,7,c
 10873  015228  D023               	goto	l2015
 10874                           
 10875                           ;stkvar	_l @ sp[(-17)+7]
 10876                           ;stkvar	_p @ sp[(-17)+9]
 10877  01522A  50E1               	movf	fsr1l,w,c
 10878  01522C  0FF8               	addlw	-8
 10879  01522E  6ED9               	movwf	fsr2l,c
 10880  015230  50E2               	movf	fsr1h,w,c
 10881  015232  6EDA               	movwf	fsr2h,c
 10882  015234  0EFF               	movlw	255
 10883  015236  22DA               	addwfc	fsr2h,f,c
 10884  015238  0EF6               	movlw	-10
 10885  01523A  50E3               	movf	plusw1,w,c
 10886  01523C  5CDE               	subwf	postinc2,w,c
 10887  01523E  50DE               	movf	postinc2,w,c
 10888  015240  0A80               	xorlw	128
 10889  015242  6E32               	movwf	btemp^0,c
 10890  015244  0EF7               	movlw	-9
 10891  015246  50E3               	movf	plusw1,w,c
 10892  015248  0A80               	xorlw	128
 10893  01524A  5832               	subwfb	btemp^0,w,c
 10894  01524C  B0D8               	btfsc	status,0,c
 10895  01524E  D010               	goto	l2015
 10896                           
 10897                           ;stkvar	_p @ sp[(-17)+9]
 10898                           ;stkvar	_l @ sp[(-17)+7]
 10899  015250  0EF8               	movlw	-8
 10900  015252  006F FF8C  F032    	movff	plusw1,btemp
 10901  015258  0EF6               	movlw	-10
 10902  01525A  0060  F0CB  FFE3   	movff	btemp,plusw1
 10903  015260  0EF9               	movlw	-7
 10904  015262  006F FF8C  F032    	movff	plusw1,btemp
 10905  015268  0EF7               	movlw	-9
 10906  01526A  0060  F0CB  FFE3   	movff	btemp,plusw1
 10907  015270                     l2015:
 10908                           
 10909                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 10910                           ;stkvar	_l @ sp[(-17)+7]
 10911                           ;stkvar	_p @ sp[(-17)+9]
 10912  015270  0EF6               	movlw	-10
 10913  015272  006F FF8C  F032    	movff	plusw1,btemp
 10914  015278  0EF8               	movlw	-8
 10915  01527A  0060  F0CB  FFE3   	movff	btemp,plusw1
 10916  015280  0EF7               	movlw	-9
 10917  015282  006F FF8C  F032    	movff	plusw1,btemp
 10918  015288  0EF9               	movlw	-7
 10919  01528A  0060  F0CB  FFE3   	movff	btemp,plusw1
 10920                           
 10921                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 10922                           ;stkvar	_w @ sp[(-17)+13]
 10923  015290  0EFC               	movlw	-4
 10924  015292  0060  F06F  FFE3   	movff	_width,plusw1
 10925  015298  0EFD               	movlw	-3
 10926  01529A  0060  F073  FFE3   	movff	_width+1,plusw1
 10927                           
 10928                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 10929  0152A0  A01F               	btfss	_flags^0,0,c
 10930  0152A2  D01F               	goto	l10240
 10931  0152A4  D031               	goto	u9960
 10932  0152A6                     l10236:
 10933                           
 10934                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 10935                           ;stkvar	_fp @ sp[(-17)+-2]
 10936  0152A6  0EED               	movlw	-19
 10937  0152A8  006F FF8F FFE6     	movff	plusw1,postinc1
 10938  0152AE  006F FF8F FFE6     	movff	plusw1,postinc1
 10939  0152B4  0E20               	movlw	32
 10940  0152B6  6EE6               	movwf	postinc1,c
 10941  0152B8  0E00               	movlw	0
 10942  0152BA  6EE6               	movwf	postinc1,c
 10943  0152BC  ECA2  F0B5         	call	_fputc	;wreg free
 10944                           
 10945                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 10946                           ;stkvar	_l @ sp[(-17)+7]
 10947  0152C0  0EF6               	movlw	-10
 10948  0152C2  50E3               	movf	plusw1,w,c
 10949  0152C4  0F01               	addlw	1
 10950  0152C6  6E32               	movwf	btemp^0,c
 10951  0152C8  0EF6               	movlw	-10
 10952  0152CA  0060  F0CB  FFE3   	movff	btemp,plusw1
 10953  0152D0  6A32               	clrf	btemp^0,c
 10954  0152D2  0EF7               	movlw	-9
 10955  0152D4  50E3               	movf	plusw1,w,c
 10956  0152D6  2032               	addwfc	btemp^0,w,c
 10957  0152D8  6E32               	movwf	btemp^0,c
 10958  0152DA  0EF7               	movlw	-9
 10959  0152DC  0060  F0CB  FFE3   	movff	btemp,plusw1
 10960  0152E2                     l10240:
 10961                           
 10962                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 10963                           ;stkvar	_w @ sp[(-17)+13]
 10964                           ;stkvar	_l @ sp[(-17)+7]
 10965  0152E2  50E1               	movf	fsr1l,w,c
 10966  0152E4  0FF6               	addlw	-10
 10967  0152E6  6ED9               	movwf	fsr2l,c
 10968  0152E8  50E2               	movf	fsr1h,w,c
 10969  0152EA  6EDA               	movwf	fsr2h,c
 10970  0152EC  0EFF               	movlw	255
 10971  0152EE  22DA               	addwfc	fsr2h,f,c
 10972  0152F0  0EFC               	movlw	-4
 10973  0152F2  50E3               	movf	plusw1,w,c
 10974  0152F4  5CDE               	subwf	postinc2,w,c
 10975  0152F6  50DE               	movf	postinc2,w,c
 10976  0152F8  0A80               	xorlw	128
 10977  0152FA  6E32               	movwf	btemp^0,c
 10978  0152FC  0EFD               	movlw	-3
 10979  0152FE  50E3               	movf	plusw1,w,c
 10980  015300  0A80               	xorlw	128
 10981  015302  5832               	subwfb	btemp^0,w,c
 10982  015304  A0D8               	btfss	status,0,c
 10983  015306  D7CF               	goto	l10236
 10984  015308                     u9960:
 10985                           
 10986                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 10987                           ;stkvar	_i @ sp[(-17)+15]
 10988  015308  0EFE               	movlw	-2
 10989  01530A  6AE3               	clrf	plusw1,c
 10990  01530C  0EFF               	movlw	-1
 10991  01530E  6AE3               	clrf	plusw1,c
 10992                           
 10993                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 10994  015310  D045               	goto	l10250
 10995  015312                     l10244:
 10996                           
 10997                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 10998                           ;stkvar	_fp @ sp[(-17)+-2]
 10999  015312  0EED               	movlw	-19
 11000  015314  006F FF8F FFE6     	movff	plusw1,postinc1
 11001  01531A  006F FF8F FFE6     	movff	plusw1,postinc1
 11002                           
 11003                           ;stkvar	_cp @ sp[(-19)+11]
 11004  015320  0EF8               	movlw	-8
 11005  015322  006F FF8F FFF6     	movff	plusw1,tblptrl
 11006  015328  0EF9               	movlw	-7
 11007  01532A  006F FF8F FFF7     	movff	plusw1,tblptrh
 11008  015330  0E00               	movlw	low (__mediumconst shr (0+16))
 11009  015332  6EF8               	movwf	tblptru,c
 11010  015334  0E1F               	movlw	(high __ramtop+-1)
 11011  015336  64F7               	cpfsgt	tblptrh,c
 11012  015338  D003               	bra	u9977
 11013  01533A  0008               	tblrd		*
 11014  01533C  50F5               	movf	tablat,w,c
 11015  01533E  D007               	bra	u9970
 11016  015340                     u9977:
 11017  015340  006F FFDB FFE9     	movff	tblptrl,fsr0l
 11018  015346  006F FFDF FFEA     	movff	tblptrh,fsr0h
 11019  01534C  50EF               	movf	indf0,w,c
 11020  01534E                     u9970:
 11021  01534E  6EE6               	movwf	postinc1,c
 11022  015350  0E00               	movlw	0
 11023  015352  6EE6               	movwf	postinc1,c
 11024  015354  ECA2  F0B5         	call	_fputc	;wreg free
 11025                           
 11026                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 11027                           ;stkvar	_cp @ sp[(-17)+11]
 11028  015358  0EFA               	movlw	-6
 11029  01535A  50E3               	movf	plusw1,w,c
 11030  01535C  0F01               	addlw	1
 11031  01535E  6E32               	movwf	btemp^0,c
 11032  015360  0EFA               	movlw	-6
 11033  015362  0060  F0CB  FFE3   	movff	btemp,plusw1
 11034  015368  6A32               	clrf	btemp^0,c
 11035  01536A  0EFB               	movlw	-5
 11036  01536C  50E3               	movf	plusw1,w,c
 11037  01536E  2032               	addwfc	btemp^0,w,c
 11038  015370  6E32               	movwf	btemp^0,c
 11039  015372  0EFB               	movlw	-5
 11040  015374  0060  F0CB  FFE3   	movff	btemp,plusw1
 11041                           
 11042                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 11043                           ;stkvar	_i @ sp[(-17)+15]
 11044  01537A  0EFE               	movlw	-2
 11045  01537C  50E3               	movf	plusw1,w,c
 11046  01537E  0F01               	addlw	1
 11047  015380  6E32               	movwf	btemp^0,c
 11048  015382  0EFE               	movlw	-2
 11049  015384  0060  F0CB  FFE3   	movff	btemp,plusw1
 11050  01538A  6A32               	clrf	btemp^0,c
 11051  01538C  0EFF               	movlw	-1
 11052  01538E  50E3               	movf	plusw1,w,c
 11053  015390  2032               	addwfc	btemp^0,w,c
 11054  015392  6E32               	movwf	btemp^0,c
 11055  015394  0EFF               	movlw	-1
 11056  015396  0060  F0CB  FFE3   	movff	btemp,plusw1
 11057  01539C                     l10250:
 11058                           
 11059                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 11060                           ;stkvar	_p @ sp[(-17)+9]
 11061                           ;stkvar	_i @ sp[(-17)+15]
 11062  01539C  50E1               	movf	fsr1l,w,c
 11063  01539E  0FFE               	addlw	-2
 11064  0153A0  6ED9               	movwf	fsr2l,c
 11065  0153A2  50E2               	movf	fsr1h,w,c
 11066  0153A4  6EDA               	movwf	fsr2h,c
 11067  0153A6  0EFF               	movlw	255
 11068  0153A8  22DA               	addwfc	fsr2h,f,c
 11069  0153AA  0EF8               	movlw	-8
 11070  0153AC  50E3               	movf	plusw1,w,c
 11071  0153AE  5CDE               	subwf	postinc2,w,c
 11072  0153B0  50DE               	movf	postinc2,w,c
 11073  0153B2  0A80               	xorlw	128
 11074  0153B4  6E32               	movwf	btemp^0,c
 11075  0153B6  0EF9               	movlw	-7
 11076  0153B8  50E3               	movf	plusw1,w,c
 11077  0153BA  0A80               	xorlw	128
 11078  0153BC  5832               	subwfb	btemp^0,w,c
 11079  0153BE  A0D8               	btfss	status,0,c
 11080  0153C0  D7A8               	goto	l10244
 11081                           
 11082                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 11083  0153C2  B01F               	btfsc	_flags^0,0,c
 11084  0153C4  D01F               	goto	l10258
 11085  0153C6  D031               	goto	u10000
 11086  0153C8                     l10254:
 11087                           
 11088                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 11089                           ;stkvar	_fp @ sp[(-17)+-2]
 11090  0153C8  0EED               	movlw	-19
 11091  0153CA  006F FF8F FFE6     	movff	plusw1,postinc1
 11092  0153D0  006F FF8F FFE6     	movff	plusw1,postinc1
 11093  0153D6  0E20               	movlw	32
 11094  0153D8  6EE6               	movwf	postinc1,c
 11095  0153DA  0E00               	movlw	0
 11096  0153DC  6EE6               	movwf	postinc1,c
 11097  0153DE  ECA2  F0B5         	call	_fputc	;wreg free
 11098                           
 11099                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 11100                           ;stkvar	_l @ sp[(-17)+7]
 11101  0153E2  0EF6               	movlw	-10
 11102  0153E4  50E3               	movf	plusw1,w,c
 11103  0153E6  0F01               	addlw	1
 11104  0153E8  6E32               	movwf	btemp^0,c
 11105  0153EA  0EF6               	movlw	-10
 11106  0153EC  0060  F0CB  FFE3   	movff	btemp,plusw1
 11107  0153F2  6A32               	clrf	btemp^0,c
 11108  0153F4  0EF7               	movlw	-9
 11109  0153F6  50E3               	movf	plusw1,w,c
 11110  0153F8  2032               	addwfc	btemp^0,w,c
 11111  0153FA  6E32               	movwf	btemp^0,c
 11112  0153FC  0EF7               	movlw	-9
 11113  0153FE  0060  F0CB  FFE3   	movff	btemp,plusw1
 11114  015404                     l10258:
 11115                           
 11116                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 11117                           ;stkvar	_w @ sp[(-17)+13]
 11118                           ;stkvar	_l @ sp[(-17)+7]
 11119  015404  50E1               	movf	fsr1l,w,c
 11120  015406  0FF6               	addlw	-10
 11121  015408  6ED9               	movwf	fsr2l,c
 11122  01540A  50E2               	movf	fsr1h,w,c
 11123  01540C  6EDA               	movwf	fsr2h,c
 11124  01540E  0EFF               	movlw	255
 11125  015410  22DA               	addwfc	fsr2h,f,c
 11126  015412  0EFC               	movlw	-4
 11127  015414  50E3               	movf	plusw1,w,c
 11128  015416  5CDE               	subwf	postinc2,w,c
 11129  015418  50DE               	movf	postinc2,w,c
 11130  01541A  0A80               	xorlw	128
 11131  01541C  6E32               	movwf	btemp^0,c
 11132  01541E  0EFD               	movlw	-3
 11133  015420  50E3               	movf	plusw1,w,c
 11134  015422  0A80               	xorlw	128
 11135  015424  5832               	subwfb	btemp^0,w,c
 11136  015426  A0D8               	btfss	status,0,c
 11137  015428  D7CF               	goto	l10254
 11138  01542A                     u10000:
 11139                           
 11140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 11141                           ;stkvar	_l @ sp[(-17)+7]
 11142  01542A  0EF6               	movlw	-10
 11143  01542C  006F FF8C  F032    	movff	plusw1,btemp
 11144  015432  0EF7               	movlw	-9
 11145  015434  006F FF8C  F033    	movff	plusw1,btemp+1
 11146                           
 11147                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 11148  01543A  0EEB               	movlw	235
 11149  01543C  26E1               	addwf	fsr1l,f,c
 11150  01543E  0EFF               	movlw	255
 11151  015440  22E2               	addwfc	fsr1h,f,c
 11152  015442  0012               	return		;funcret
 11153  015444                     __end_of_stoa:
 11154                           	opt callstack 0
 11155                           
 11156 ;; *************** function _efgtoa *****************
 11157 ;; Defined at:
 11158 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11159 ;; Parameters:    Size  Location     Type
 11160 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11161 ;;		 -> f(6), NULL(0), 
 11162 ;;  f               4  [STACK] PTR struct _IO_FILE
 11163 ;;  c               1  [STACK] unsigned char 
 11164 ;; Auto vars:     Size  Location     Type
 11165 ;;  u               4  [STACK] unsigned char 
 11166 ;;  g               4  [STACK] unsigned char 
 11167 ;;  l               4  [STACK] unsigned char 
 11168 ;;  h               4  [STACK] unsigned char 
 11169 ;;  ou              4  [STACK] unsigned char 
 11170 ;;  n               2  [STACK] int 
 11171 ;;  e               2  [STACK] int 
 11172 ;;  i               2  [STACK] int 
 11173 ;;  w               2  [STACK] int 
 11174 ;;  p               2  [STACK] int 
 11175 ;;  sign            2  [STACK] int 
 11176 ;;  d               2  [STACK] int 
 11177 ;;  ne              2  [STACK] int 
 11178 ;;  m               2  [STACK] int 
 11179 ;;  pp              2  [STACK] int 
 11180 ;;  t               2  [STACK] int 
 11181 ;;  mode            1  [STACK] unsigned char 
 11182 ;;  nmode           1  [STACK] unsigned char 
 11183 ;; Return value:  Size  Location     Type
 11184 ;;                  2  [STACK] int 
 11185 ;; Registers used:
 11186 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 11187 ;; Tracked objects:
 11188 ;;		On entry : 0/5
 11189 ;;		On exit  : 0/0
 11190 ;;		Unchanged: 0/0
 11191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11196 ;;Total ram usage:        0 bytes
 11197 ;; Hardware stack levels used:    1
 11198 ;; Hardware stack levels required when called:   11
 11199 ;; This function calls:
 11200 ;;		___awdiv
 11201 ;;		___awmod
 11202 ;;		___fladd
 11203 ;;		___fldiv
 11204 ;;		___fleq
 11205 ;;		___flge
 11206 ;;		___flmul
 11207 ;;		___flneg
 11208 ;;		___flsub
 11209 ;;		___fltol
 11210 ;;		___fpclassifyf
 11211 ;;		_floorf
 11212 ;;		_isupper
 11213 ;;		_pad
 11214 ;;		_strcpy
 11215 ;;		_tolower
 11216 ;; This function is called by:
 11217 ;;		_vfpfcnvrt
 11218 ;; This function uses a reentrant model
 11219 ;;
 11220                           
 11221                           	psect	text47
 11222  010000                     __ptext47:
 11223                           	opt callstack 0
 11224  010000                     _efgtoa:
 11225                           	opt callstack 0
 11226                           
 11227                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11228  010000  0E38               	movlw	56
 11229  010002  26E1               	addwf	fsr1l,f,c
 11230  010004  0E00               	movlw	0
 11231  010006  22E2               	addwfc	fsr1h,f,c
 11232                           
 11233                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 11234                           ;stkvar	_sign @ sp[(-56)+42]
 11235                           
 11236                           ;incstack = 0
 11237  010008  0EF2               	movlw	-14
 11238  01000A  6AE3               	clrf	plusw1,c
 11239  01000C  0EF3               	movlw	-13
 11240  01000E  6AE3               	clrf	plusw1,c
 11241                           
 11242                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 11243                           ;stkvar	_f @ sp[(-56)+-6]
 11244  010010  0EC2               	movlw	-62
 11245  010012  006F FF8C  F03A    	movff	plusw1,btemp+8
 11246  010018  0EC3               	movlw	-61
 11247  01001A  006F FF8C  F03B    	movff	plusw1,btemp+9
 11248  010020  0EC4               	movlw	-60
 11249  010022  006F FF8C  F03C    	movff	plusw1,btemp+10
 11250  010028  0EC5               	movlw	-59
 11251  01002A  006F FF8C  F03D    	movff	plusw1,btemp+11
 11252                           
 11253                           ;stkvar	_g @ sp[(-56)+16]
 11254  010030  0ED8               	movlw	-40
 11255  010032  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11256  010038  0ED9               	movlw	-39
 11257  01003A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11258  010040  0EDA               	movlw	-38
 11259  010042  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11260  010048  0EDB               	movlw	-37
 11261  01004A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11262                           
 11263                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 11264                           ;stkvar	_g @ sp[(-56)+16]
 11265  010050  0EDB               	movlw	-37
 11266  010052  AEE3               	btfss	plusw1,7,c
 11267  010054  D02B               	goto	l9918
 11268                           
 11269                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 11270  010056  0E01               	movlw	1
 11271  010058  6E3C               	movwf	(btemp+10)^0,c
 11272  01005A  0E00               	movlw	0
 11273  01005C  6E3D               	movwf	(btemp+11)^0,c
 11274                           
 11275                           ;stkvar	_sign @ sp[(-56)+42]
 11276  01005E  0EF2               	movlw	-14
 11277  010060  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11278  010066  0EF3               	movlw	-13
 11279  010068  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11280                           
 11281                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 11282                           ;stkvar	_g @ sp[(-56)+16]
 11283  01006E  0ED8               	movlw	-40
 11284  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 11285  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 11286  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 11287  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 11288  010088  ECB8  F0C1         	call	___flneg	;wreg free
 11289                           
 11290                           ;stkvar	_g @ sp[(-56)+16]
 11291  01008C  0ED8               	movlw	-40
 11292  01008E  0060  F0CB  FFE3   	movff	btemp,plusw1
 11293  010094  0ED9               	movlw	-39
 11294  010096  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11295  01009C  0EDA               	movlw	-38
 11296  01009E  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11297  0100A4  0EDB               	movlw	-37
 11298  0100A6  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11299  0100AC                     l9918:
 11300                           
 11301                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 11302                           ;stkvar	_n @ sp[(-56)+32]
 11303  0100AC  0EE8               	movlw	-24
 11304  0100AE  6AE3               	clrf	plusw1,c
 11305  0100B0  0EE9               	movlw	-23
 11306  0100B2  6AE3               	clrf	plusw1,c
 11307                           
 11308                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 11309                           ;stkvar	_w @ sp[(-56)+38]
 11310  0100B4  0EEE               	movlw	-18
 11311  0100B6  0060  F06F  FFE3   	movff	_width,plusw1
 11312  0100BC  0EEF               	movlw	-17
 11313  0100BE  0060  F073  FFE3   	movff	_width+1,plusw1
 11314                           
 11315                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 11316                           ;stkvar	_sign @ sp[(-56)+42]
 11317  0100C4  0EF2               	movlw	-14
 11318  0100C6  006F FF8C  F032    	movff	plusw1,btemp
 11319  0100CC  0EF3               	movlw	-13
 11320  0100CE  50E3               	movf	plusw1,w,c
 11321  0100D0  1032               	iorwf	btemp^0,w,c
 11322  0100D2  A4D8               	btfss	status,2,c
 11323  0100D4  D002               	goto	u9410
 11324  0100D6  A41F               	btfss	_flags^0,2,c
 11325  0100D8  D036               	goto	l9938
 11326  0100DA                     u9410:
 11327                           
 11328                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 11329                           ;stkvar	_sign @ sp[(-56)+42]
 11330  0100DA  0EF2               	movlw	-14
 11331  0100DC  006F FF8C  F032    	movff	plusw1,btemp
 11332  0100E2  0EF3               	movlw	-13
 11333  0100E4  50E3               	movf	plusw1,w,c
 11334  0100E6  1032               	iorwf	btemp^0,w,c
 11335  0100E8  A4D8               	btfss	status,2,c
 11336  0100EA  D002               	goto	l9930
 11337  0100EC  0E2B               	movlw	43
 11338  0100EE  D001               	goto	L9
 11339  0100F0                     l9930:
 11340  0100F0  0E2D               	movlw	45
 11341  0100F2                     L9:
 11342  0100F2  6E3C               	movwf	(btemp+10)^0,c
 11343  0100F4  0E00               	movlw	0
 11344  0100F6  6E3D               	movwf	(btemp+11)^0,c
 11345                           
 11346                           ;stkvar	_efgtoa$4636 @ sp[(-56)+10]
 11347  0100F8  0ED2               	movlw	-46
 11348  0100FA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11349  010100  0ED3               	movlw	-45
 11350  010102  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11351                           
 11352                           ;stkvar	_efgtoa$4636 @ sp[(-56)+10]
 11353  010108  0ED2               	movlw	-46
 11354  01010A  006F FF8C  F1A3    	movff	plusw1,_dbuf
 11355                           
 11356                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 11357                           ;stkvar	_n @ sp[(-56)+32]
 11358  010110  0EE8               	movlw	-24
 11359  010112  50E3               	movf	plusw1,w,c
 11360  010114  0F01               	addlw	1
 11361  010116  6E32               	movwf	btemp^0,c
 11362  010118  0EE8               	movlw	-24
 11363  01011A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11364  010120  6A32               	clrf	btemp^0,c
 11365  010122  0EE9               	movlw	-23
 11366  010124  50E3               	movf	plusw1,w,c
 11367  010126  2032               	addwfc	btemp^0,w,c
 11368  010128  6E32               	movwf	btemp^0,c
 11369  01012A  0EE9               	movlw	-23
 11370  01012C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11371                           
 11372                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 11373                           ;stkvar	_w @ sp[(-56)+38]
 11374  010132  50E1               	movf	fsr1l,w,c
 11375  010134  0FEE               	addlw	-18
 11376  010136  6ED9               	movwf	fsr2l,c
 11377  010138  50E2               	movf	fsr1h,w,c
 11378  01013A  6EDA               	movwf	fsr2h,c
 11379  01013C  0EFF               	movlw	255
 11380  01013E  22DA               	addwfc	fsr2h,f,c
 11381  010140  06DE               	decf	postinc2,f,c
 11382  010142  0E00               	movlw	0
 11383  010144  5ADD               	subwfb	postdec2,f,c
 11384  010146                     l9938:
 11385                           
 11386                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 11387                           ;stkvar	_g @ sp[(-56)+16]
 11388  010146  0ED8               	movlw	-40
 11389  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 11390  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 11391  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 11392  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 11393  010160  EC8B  F0B1         	call	___fpclassifyf	;wreg free
 11394  010164  0432               	decf	btemp^0,w,c
 11395  010166  1033               	iorwf	(btemp+1)^0,w,c
 11396  010168  A4D8               	btfss	status,2,c
 11397  01016A  D076               	goto	l9956
 11398  01016C  0EBF               	movlw	191
 11399  01016E  6E3C               	movwf	(btemp+10)^0,c
 11400  010170  0EFF               	movlw	255
 11401  010172  6E3D               	movwf	(btemp+11)^0,c
 11402                           
 11403                           ;stkvar	_c @ sp[(-56)+-7]
 11404  010174  0EC1               	movlw	-63
 11405  010176  50E3               	movf	plusw1,w,c
 11406  010178  6E3A               	movwf	(btemp+8)^0,c
 11407  01017A  6A3B               	clrf	(btemp+9)^0,c
 11408  01017C  503C               	movf	(btemp+10)^0,w,c
 11409  01017E  263A               	addwf	(btemp+8)^0,f,c
 11410  010180  503D               	movf	(btemp+11)^0,w,c
 11411  010182  223B               	addwfc	(btemp+9)^0,f,c
 11412  010184  503B               	movf	(btemp+9)^0,w,c
 11413  010186  E106               	bnz	u9440
 11414  010188  0E1A               	movlw	26
 11415  01018A  5C3A               	subwf	(btemp+8)^0,w,c
 11416  01018C  B0D8               	btfsc	status,0,c
 11417  01018E  D002               	goto	u9440
 11418  010190  0E01               	movlw	1
 11419  010192  D001               	goto	u9450
 11420  010194                     u9440:
 11421  010194  0E00               	movlw	0
 11422  010196                     u9450:
 11423  010196  6E3C               	movwf	(btemp+10)^0,c
 11424  010198  6A3D               	clrf	(btemp+11)^0,c
 11425                           
 11426                           ;stkvar	_efgtoa$4637 @ sp[(-56)+8]
 11427  01019A  0ED0               	movlw	-48
 11428  01019C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11429  0101A2  0ED1               	movlw	-47
 11430  0101A4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11431                           
 11432                           ;stkvar	_efgtoa$4637 @ sp[(-56)+8]
 11433  0101AA  0ED0               	movlw	-48
 11434  0101AC  006F FF8C  F032    	movff	plusw1,btemp
 11435  0101B2  0ED1               	movlw	-47
 11436  0101B4  50E3               	movf	plusw1,w,c
 11437  0101B6  1032               	iorwf	btemp^0,w,c
 11438  0101B8  B4D8               	btfsc	status,2,c
 11439  0101BA  D017               	goto	l9948
 11440                           
 11441                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 11442  0101BC  0EE5               	movlw	low STR_46
 11443  0101BE  6EE6               	movwf	postinc1,c
 11444  0101C0  0EFF               	movlw	high STR_46
 11445  0101C2  6EE6               	movwf	postinc1,c
 11446                           
 11447                           ;stkvar	_n @ sp[(-58)+32]
 11448  0101C4  0EA3               	movlw	low _dbuf
 11449  0101C6  6E3C               	movwf	(btemp+10)^0,c
 11450  0101C8  0E01               	movlw	high _dbuf
 11451  0101CA  6E3D               	movwf	(btemp+11)^0,c
 11452  0101CC  0EE6               	movlw	-26
 11453  0101CE  50E3               	movf	plusw1,w,c
 11454  0101D0  263C               	addwf	(btemp+10)^0,f,c
 11455  0101D2  0EE7               	movlw	-25
 11456  0101D4  50E3               	movf	plusw1,w,c
 11457  0101D6  223D               	addwfc	(btemp+11)^0,f,c
 11458  0101D8  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 11459  0101DE  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 11460  0101E4  ECC6  F0B9         	call	_strcpy	;wreg free
 11461                           
 11462                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 11463  0101E8  D016               	goto	l9950
 11464  0101EA                     l9948:
 11465                           
 11466                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 11467  0101EA  0EED               	movlw	low STR_47
 11468  0101EC  6EE6               	movwf	postinc1,c
 11469  0101EE  0EFF               	movlw	high STR_47
 11470  0101F0  6EE6               	movwf	postinc1,c
 11471                           
 11472                           ;stkvar	_n @ sp[(-58)+32]
 11473  0101F2  0EA3               	movlw	low _dbuf
 11474  0101F4  6E3C               	movwf	(btemp+10)^0,c
 11475  0101F6  0E01               	movlw	high _dbuf
 11476  0101F8  6E3D               	movwf	(btemp+11)^0,c
 11477  0101FA  0EE6               	movlw	-26
 11478  0101FC  50E3               	movf	plusw1,w,c
 11479  0101FE  263C               	addwf	(btemp+10)^0,f,c
 11480  010200  0EE7               	movlw	-25
 11481  010202  50E3               	movf	plusw1,w,c
 11482  010204  223D               	addwfc	(btemp+11)^0,f,c
 11483  010206  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 11484  01020C  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 11485  010212  ECC6  F0B9         	call	_strcpy	;wreg free
 11486  010216                     l9950:
 11487                           
 11488                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 11489                           ;stkvar	_w @ sp[(-56)+38]
 11490  010216  50E1               	movf	fsr1l,w,c
 11491  010218  0FEE               	addlw	-18
 11492  01021A  6ED9               	movwf	fsr2l,c
 11493  01021C  50E2               	movf	fsr1h,w,c
 11494  01021E  6EDA               	movwf	fsr2h,c
 11495  010220  0EFF               	movlw	255
 11496  010222  22DA               	addwfc	fsr2h,f,c
 11497  010224  0EFD               	movlw	253
 11498  010226  26DE               	addwf	postinc2,f,c
 11499  010228  0EFF               	movlw	255
 11500  01022A  22DD               	addwfc	postdec2,f,c
 11501  01022C                     l9952:
 11502                           
 11503                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 11504                           ;stkvar	_w @ sp[(-56)+38]
 11505  01022C  0EEE               	movlw	-18
 11506  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 11507  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 11508  01023A  0EA3               	movlw	low _dbuf
 11509  01023C  6EE6               	movwf	postinc1,c
 11510  01023E  0E01               	movlw	high _dbuf
 11511  010240  6EE6               	movwf	postinc1,c
 11512                           
 11513                           ;stkvar	_fp @ sp[(-60)+-2]
 11514  010242  0EC2               	movlw	-62
 11515  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 11516  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 11517  010250  ECC0  F0B6         	call	_pad	;wreg free
 11518  010254  EF1D  F089         	goto	l1933
 11519  010258                     l9956:
 11520                           
 11521                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 11522                           ;stkvar	_g @ sp[(-56)+16]
 11523  010258  0ED8               	movlw	-40
 11524  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 11525  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 11526  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 11527  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 11528  010272  EC8B  F0B1         	call	___fpclassifyf	;wreg free
 11529  010276  5032               	movf	btemp^0,w,c
 11530  010278  1033               	iorwf	(btemp+1)^0,w,c
 11531  01027A  A4D8               	btfss	status,2,c
 11532  01027C  D056               	goto	l9974
 11533  01027E  0EBF               	movlw	191
 11534  010280  6E3C               	movwf	(btemp+10)^0,c
 11535  010282  0EFF               	movlw	255
 11536  010284  6E3D               	movwf	(btemp+11)^0,c
 11537                           
 11538                           ;stkvar	_c @ sp[(-56)+-7]
 11539  010286  0EC1               	movlw	-63
 11540  010288  50E3               	movf	plusw1,w,c
 11541  01028A  6E3A               	movwf	(btemp+8)^0,c
 11542  01028C  6A3B               	clrf	(btemp+9)^0,c
 11543  01028E  503C               	movf	(btemp+10)^0,w,c
 11544  010290  263A               	addwf	(btemp+8)^0,f,c
 11545  010292  503D               	movf	(btemp+11)^0,w,c
 11546  010294  223B               	addwfc	(btemp+9)^0,f,c
 11547  010296  503B               	movf	(btemp+9)^0,w,c
 11548  010298  E106               	bnz	u9480
 11549  01029A  0E1A               	movlw	26
 11550  01029C  5C3A               	subwf	(btemp+8)^0,w,c
 11551  01029E  B0D8               	btfsc	status,0,c
 11552  0102A0  D002               	goto	u9480
 11553  0102A2  0E01               	movlw	1
 11554  0102A4  D001               	goto	u9490
 11555  0102A6                     u9480:
 11556  0102A6  0E00               	movlw	0
 11557  0102A8                     u9490:
 11558  0102A8  6E3C               	movwf	(btemp+10)^0,c
 11559  0102AA  6A3D               	clrf	(btemp+11)^0,c
 11560                           
 11561                           ;stkvar	_efgtoa$4641 @ sp[(-56)+6]
 11562  0102AC  0ECE               	movlw	-50
 11563  0102AE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11564  0102B4  0ECF               	movlw	-49
 11565  0102B6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11566                           
 11567                           ;stkvar	_efgtoa$4641 @ sp[(-56)+6]
 11568  0102BC  0ECE               	movlw	-50
 11569  0102BE  006F FF8C  F032    	movff	plusw1,btemp
 11570  0102C4  0ECF               	movlw	-49
 11571  0102C6  50E3               	movf	plusw1,w,c
 11572  0102C8  1032               	iorwf	btemp^0,w,c
 11573  0102CA  B4D8               	btfsc	status,2,c
 11574  0102CC  D017               	goto	l9966
 11575                           
 11576                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 11577  0102CE  0EE9               	movlw	low STR_50
 11578  0102D0  6EE6               	movwf	postinc1,c
 11579  0102D2  0EFF               	movlw	high STR_50
 11580  0102D4  6EE6               	movwf	postinc1,c
 11581                           
 11582                           ;stkvar	_n @ sp[(-58)+32]
 11583  0102D6  0EA3               	movlw	low _dbuf
 11584  0102D8  6E3C               	movwf	(btemp+10)^0,c
 11585  0102DA  0E01               	movlw	high _dbuf
 11586  0102DC  6E3D               	movwf	(btemp+11)^0,c
 11587  0102DE  0EE6               	movlw	-26
 11588  0102E0  50E3               	movf	plusw1,w,c
 11589  0102E2  263C               	addwf	(btemp+10)^0,f,c
 11590  0102E4  0EE7               	movlw	-25
 11591  0102E6  50E3               	movf	plusw1,w,c
 11592  0102E8  223D               	addwfc	(btemp+11)^0,f,c
 11593  0102EA  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 11594  0102F0  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 11595  0102F6  ECC6  F0B9         	call	_strcpy	;wreg free
 11596                           
 11597                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 11598  0102FA  D78D               	goto	l9950
 11599  0102FC                     l9966:
 11600                           
 11601                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 11602  0102FC  0EF1               	movlw	low STR_51
 11603  0102FE  6EE6               	movwf	postinc1,c
 11604  010300  0EFF               	movlw	high STR_51
 11605  010302  6EE6               	movwf	postinc1,c
 11606                           
 11607                           ;stkvar	_n @ sp[(-58)+32]
 11608  010304  0EA3               	movlw	low _dbuf
 11609  010306  6E3C               	movwf	(btemp+10)^0,c
 11610  010308  0E01               	movlw	high _dbuf
 11611  01030A  6E3D               	movwf	(btemp+11)^0,c
 11612  01030C  0EE6               	movlw	-26
 11613  01030E  50E3               	movf	plusw1,w,c
 11614  010310  263C               	addwf	(btemp+10)^0,f,c
 11615  010312  0EE7               	movlw	-25
 11616  010314  50E3               	movf	plusw1,w,c
 11617  010316  223D               	addwfc	(btemp+11)^0,f,c
 11618  010318  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 11619  01031E  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 11620  010324  ECC6  F0B9         	call	_strcpy	;wreg free
 11621  010328  D776               	goto	l9950
 11622  01032A                     l9974:
 11623                           
 11624                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 11625  01032A  0E00               	movlw	0
 11626  01032C  6E3A               	movwf	(btemp+8)^0,c
 11627  01032E  0E00               	movlw	0
 11628  010330  6E3B               	movwf	(btemp+9)^0,c
 11629  010332  0E80               	movlw	128
 11630  010334  6E3C               	movwf	(btemp+10)^0,c
 11631  010336  0E3F               	movlw	63
 11632  010338  6E3D               	movwf	(btemp+11)^0,c
 11633                           
 11634                           ;stkvar	_u @ sp[(-56)+12]
 11635  01033A  0ED4               	movlw	-44
 11636  01033C  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11637  010342  0ED5               	movlw	-43
 11638  010344  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11639  01034A  0ED6               	movlw	-42
 11640  01034C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11641  010352  0ED7               	movlw	-41
 11642  010354  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11643                           
 11644                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 11645                           ;stkvar	_e @ sp[(-56)+34]
 11646  01035A  0EEA               	movlw	-22
 11647  01035C  6AE3               	clrf	plusw1,c
 11648  01035E  0EEB               	movlw	-21
 11649  010360  6AE3               	clrf	plusw1,c
 11650                           
 11651                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 11652  010362  0E00               	movlw	0
 11653  010364  6EE6               	movwf	postinc1,c
 11654  010366  0E00               	movlw	0
 11655  010368  6EE6               	movwf	postinc1,c
 11656  01036A  0E00               	movlw	0
 11657  01036C  6EE6               	movwf	postinc1,c
 11658  01036E  0E00               	movlw	0
 11659  010370  6EE6               	movwf	postinc1,c
 11660                           
 11661                           ;stkvar	_g @ sp[(-60)+16]
 11662  010372  0ED4               	movlw	-44
 11663  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 11664  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 11665  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 11666  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 11667  01038C  EC30  F0BA         	call	___fleq	;wreg free
 11668  010390  A032               	btfss	btemp& (0+255),0,c
 11669  010392  D039               	goto	l9986
 11670  010394  D0BC               	goto	u9530
 11671  010396                     l9982:
 11672                           
 11673                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 11674  010396  0E00               	movlw	0
 11675  010398  6EE6               	movwf	postinc1,c
 11676  01039A  0E00               	movlw	0
 11677  01039C  6EE6               	movwf	postinc1,c
 11678  01039E  0E20               	movlw	32
 11679  0103A0  6EE6               	movwf	postinc1,c
 11680  0103A2  0E41               	movlw	65
 11681  0103A4  6EE6               	movwf	postinc1,c
 11682                           
 11683                           ;stkvar	_u @ sp[(-60)+12]
 11684  0103A6  0ED0               	movlw	-48
 11685  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11686  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 11687  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 11688  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 11689  0103C0  EC06  F093         	call	___flmul	;wreg free
 11690                           
 11691                           ;stkvar	_u @ sp[(-56)+12]
 11692  0103C4  0ED4               	movlw	-44
 11693  0103C6  0060  F0CB  FFE3   	movff	btemp,plusw1
 11694  0103CC  0ED5               	movlw	-43
 11695  0103CE  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11696  0103D4  0ED6               	movlw	-42
 11697  0103D6  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11698  0103DC  0ED7               	movlw	-41
 11699  0103DE  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11700                           
 11701                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 11702                           ;stkvar	_e @ sp[(-56)+34]
 11703  0103E4  0EEA               	movlw	-22
 11704  0103E6  50E3               	movf	plusw1,w,c
 11705  0103E8  0F01               	addlw	1
 11706  0103EA  6E32               	movwf	btemp^0,c
 11707  0103EC  0EEA               	movlw	-22
 11708  0103EE  0060  F0CB  FFE3   	movff	btemp,plusw1
 11709  0103F4  6A32               	clrf	btemp^0,c
 11710  0103F6  0EEB               	movlw	-21
 11711  0103F8  50E3               	movf	plusw1,w,c
 11712  0103FA  2032               	addwfc	btemp^0,w,c
 11713  0103FC  6E32               	movwf	btemp^0,c
 11714  0103FE  0EEB               	movlw	-21
 11715  010400  0060  F0CB  FFE3   	movff	btemp,plusw1
 11716  010406                     l9986:
 11717                           
 11718                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 11719  010406  0E00               	movlw	0
 11720  010408  6EE6               	movwf	postinc1,c
 11721  01040A  0E00               	movlw	0
 11722  01040C  6EE6               	movwf	postinc1,c
 11723  01040E  0E20               	movlw	32
 11724  010410  6EE6               	movwf	postinc1,c
 11725  010412  0E41               	movlw	65
 11726  010414  6EE6               	movwf	postinc1,c
 11727                           
 11728                           ;stkvar	_u @ sp[(-60)+12]
 11729  010416  0ED0               	movlw	-48
 11730  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 11731  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 11732  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 11733  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 11734  010430  EC06  F093         	call	___flmul	;wreg free
 11735  010434  0060  F0CB  FFE6   	movff	btemp,postinc1
 11736  01043A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11737  010440  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11738  010446  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11739                           
 11740                           ;stkvar	_g @ sp[(-60)+16]
 11741  01044C  0ED4               	movlw	-44
 11742  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 11743  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 11744  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 11745  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 11746  010466  EC0F  F0B3         	call	___flge	;wreg free
 11747  01046A  A032               	btfss	btemp& (0+255),0,c
 11748  01046C  D032               	goto	l9992
 11749  01046E  D793               	goto	l9982
 11750  010470                     l9988:
 11751                           
 11752                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 11753  010470  0E00               	movlw	0
 11754  010472  6EE6               	movwf	postinc1,c
 11755  010474  0E00               	movlw	0
 11756  010476  6EE6               	movwf	postinc1,c
 11757  010478  0E20               	movlw	32
 11758  01047A  6EE6               	movwf	postinc1,c
 11759  01047C  0E41               	movlw	65
 11760  01047E  6EE6               	movwf	postinc1,c
 11761                           
 11762                           ;stkvar	_u @ sp[(-60)+12]
 11763  010480  0ED0               	movlw	-48
 11764  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 11765  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 11766  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 11767  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 11768  01049A  ECF9  F09A         	call	___fldiv	;wreg free
 11769                           
 11770                           ;stkvar	_u @ sp[(-56)+12]
 11771  01049E  0ED4               	movlw	-44
 11772  0104A0  0060  F0CB  FFE3   	movff	btemp,plusw1
 11773  0104A6  0ED5               	movlw	-43
 11774  0104A8  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11775  0104AE  0ED6               	movlw	-42
 11776  0104B0  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11777  0104B6  0ED7               	movlw	-41
 11778  0104B8  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11779                           
 11780                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 11781                           ;stkvar	_e @ sp[(-56)+34]
 11782  0104BE  50E1               	movf	fsr1l,w,c
 11783  0104C0  0FEA               	addlw	-22
 11784  0104C2  6ED9               	movwf	fsr2l,c
 11785  0104C4  50E2               	movf	fsr1h,w,c
 11786  0104C6  6EDA               	movwf	fsr2h,c
 11787  0104C8  0EFF               	movlw	255
 11788  0104CA  22DA               	addwfc	fsr2h,f,c
 11789  0104CC  06DE               	decf	postinc2,f,c
 11790  0104CE  0E00               	movlw	0
 11791  0104D0  5ADD               	subwfb	postdec2,f,c
 11792  0104D2                     l9992:
 11793                           
 11794                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 11795                           ;stkvar	_u @ sp[(-56)+12]
 11796  0104D2  0ED4               	movlw	-44
 11797  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 11798  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 11799  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 11800  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 11801                           
 11802                           ;stkvar	_g @ sp[(-60)+16]
 11803  0104EC  0ED4               	movlw	-44
 11804  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 11805  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 11806  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 11807  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 11808  010506  EC0F  F0B3         	call	___flge	;wreg free
 11809  01050A  A032               	btfss	btemp& (0+255),0,c
 11810  01050C  D7B1               	goto	l9988
 11811  01050E                     u9530:
 11812                           
 11813                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 11814                           ;stkvar	_c @ sp[(-56)+-7]
 11815  01050E  0EC1               	movlw	-63
 11816  010510  50E3               	movf	plusw1,w,c
 11817  010512  6EE6               	movwf	postinc1,c
 11818  010514  0E00               	movlw	0
 11819  010516  6EE6               	movwf	postinc1,c
 11820  010518  EC97  F0BE         	call	_tolower	;wreg free
 11821                           
 11822                           ;stkvar	_mode @ sp[(-56)+54]
 11823  01051C  0EFE               	movlw	-2
 11824  01051E  0060  F0CB  FFE3   	movff	btemp,plusw1
 11825                           
 11826                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 11827                           ;stkvar	_mode @ sp[(-56)+54]
 11828                           ;stkvar	_nmode @ sp[(-56)+55]
 11829  010524  0EFE               	movlw	-2
 11830  010526  006F FF8C  F032    	movff	plusw1,btemp
 11831  01052C  0EFF               	movlw	-1
 11832  01052E  0060  F0CB  FFE3   	movff	btemp,plusw1
 11833                           
 11834                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 11835                           ;stkvar	_mode @ sp[(-56)+54]
 11836  010534  0EFE               	movlw	-2
 11837  010536  006F FF8C  F032    	movff	plusw1,btemp
 11838  01053C  0E67               	movlw	103
 11839  01053E  1832               	xorwf	btemp^0,w,c
 11840  010540  A4D8               	btfss	status,2,c
 11841  010542  D025               	goto	l10010
 11842                           
 11843                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 11844  010544  501D               	movf	_prec^0,w,c
 11845  010546  101E               	iorwf	(_prec+1)^0,w,c
 11846  010548  A4D8               	btfss	status,2,c
 11847  01054A  D004               	goto	l10004
 11848                           
 11849                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 11850  01054C  0E00               	movlw	0
 11851  01054E  6E1E               	movwf	(_prec+1)^0,c
 11852  010550  0E01               	movlw	1
 11853  010552  6E1D               	movwf	_prec^0,c
 11854  010554                     l10004:
 11855                           
 11856                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 11857  010554  BE1E               	btfsc	(_prec+1)^0,7,c
 11858  010556  D005               	goto	u9560
 11859  010558  501E               	movf	(_prec+1)^0,w,c
 11860  01055A  E110               	bnz	l10008
 11861  01055C  041D               	decf	_prec^0,w,c
 11862  01055E  B0D8               	btfsc	status,0,c
 11863  010560  D00D               	goto	l10008
 11864  010562                     u9560:
 11865  010562  0E06               	movlw	6
 11866  010564  6E3C               	movwf	(btemp+10)^0,c
 11867  010566  0E00               	movlw	0
 11868  010568  6E3D               	movwf	(btemp+11)^0,c
 11869                           
 11870                           ;stkvar	_p @ sp[(-56)+40]
 11871  01056A  0EF0               	movlw	-16
 11872  01056C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11873  010572  0EF1               	movlw	-15
 11874  010574  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11875  01057A  D00C               	goto	l10016
 11876  01057C                     l10008:
 11877                           
 11878                           ;stkvar	_p @ sp[(-56)+40]
 11879  01057C  0EF0               	movlw	-16
 11880  01057E  0060  F077  FFE3   	movff	_prec,plusw1
 11881  010584  0EF1               	movlw	-15
 11882  010586  0060  F07B  FFE3   	movff	_prec+1,plusw1
 11883  01058C  D003               	goto	l10016
 11884  01058E                     l10010:
 11885                           
 11886                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 11887  01058E  AE1E               	btfss	(_prec+1)^0,7,c
 11888  010590  D7F5               	goto	l10008
 11889  010592  D7E7               	goto	u9560
 11890  010594                     l10016:
 11891                           
 11892                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 11893                           ;stkvar	_mode @ sp[(-56)+54]
 11894  010594  0EFE               	movlw	-2
 11895  010596  006F FF8C  F032    	movff	plusw1,btemp
 11896  01059C  0E67               	movlw	103
 11897  01059E  1832               	xorwf	btemp^0,w,c
 11898  0105A0  A4D8               	btfss	status,2,c
 11899  0105A2  D02F               	goto	l10026
 11900                           
 11901                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 11902                           ;stkvar	_e @ sp[(-56)+34]
 11903  0105A4  0EEB               	movlw	-21
 11904  0105A6  AEE3               	btfss	plusw1,7,c
 11905  0105A8  D00E               	goto	u9590
 11906  0105AA  0EEA               	movlw	-22
 11907  0105AC  006F FF8C  F032    	movff	plusw1,btemp
 11908  0105B2  0EFC               	movlw	252
 11909  0105B4  5E32               	subwf	btemp^0,f,c
 11910  0105B6  0EEB               	movlw	-21
 11911  0105B8  006F FF8C  F032    	movff	plusw1,btemp
 11912  0105BE  0EFF               	movlw	255
 11913  0105C0  5A32               	subwfb	btemp^0,f,c
 11914  0105C2  A0D8               	btfss	status,0,c
 11915  0105C4  D018               	goto	l10024
 11916  0105C6                     u9590:
 11917                           
 11918                           ;stkvar	_e @ sp[(-56)+34]
 11919                           ;stkvar	_p @ sp[(-56)+40]
 11920  0105C6  0EF0               	movlw	-16
 11921  0105C8  50E3               	movf	plusw1,w,c
 11922  0105CA  0FFF               	addlw	255
 11923  0105CC  6E3C               	movwf	(btemp+10)^0,c
 11924  0105CE  0EF1               	movlw	-15
 11925  0105D0  006F FF8C  F03D    	movff	plusw1,btemp+11
 11926  0105D6  0EFF               	movlw	255
 11927  0105D8  223D               	addwfc	(btemp+11)^0,f,c
 11928  0105DA  0EEA               	movlw	-22
 11929  0105DC  50E3               	movf	plusw1,w,c
 11930  0105DE  5C3C               	subwf	(btemp+10)^0,w,c
 11931  0105E0  503D               	movf	(btemp+11)^0,w,c
 11932  0105E2  0A80               	xorlw	128
 11933  0105E4  6E32               	movwf	btemp^0,c
 11934  0105E6  0EEB               	movlw	-21
 11935  0105E8  50E3               	movf	plusw1,w,c
 11936  0105EA  0A80               	xorlw	128
 11937  0105EC  5832               	subwfb	btemp^0,w,c
 11938  0105EE  A0D8               	btfss	status,0,c
 11939  0105F0  D002               	goto	l10024
 11940                           
 11941                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 11942  0105F2  0E66               	movlw	102
 11943  0105F4  D001               	goto	L10
 11944  0105F6                     l10024:
 11945                           
 11946                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 11947  0105F6  0E65               	movlw	101
 11948  0105F8                     L10:
 11949  0105F8  6E3D               	movwf	(btemp+11)^0,c
 11950                           
 11951                           ;stkvar	_nmode @ sp[(-56)+55]
 11952  0105FA  0EFF               	movlw	-1
 11953  0105FC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11954  010602                     l10026:
 11955                           
 11956                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 11957                           ;stkvar	_p @ sp[(-56)+40]
 11958                           ;stkvar	_m @ sp[(-56)+48]
 11959  010602  0EF0               	movlw	-16
 11960  010604  006F FF8C  F032    	movff	plusw1,btemp
 11961  01060A  0EF8               	movlw	-8
 11962  01060C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11963  010612  0EF1               	movlw	-15
 11964  010614  006F FF8C  F032    	movff	plusw1,btemp
 11965  01061A  0EF9               	movlw	-7
 11966  01061C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11967                           
 11968                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 11969                           ;stkvar	_mode @ sp[(-56)+54]
 11970  010622  0EFE               	movlw	-2
 11971  010624  006F FF8C  F032    	movff	plusw1,btemp
 11972  01062A  0E67               	movlw	103
 11973  01062C  1832               	xorwf	btemp^0,w,c
 11974  01062E  A4D8               	btfss	status,2,c
 11975  010630  D00B               	goto	u9630
 11976                           
 11977                           ;stkvar	_nmode @ sp[(-56)+55]
 11978  010632  0EFF               	movlw	-1
 11979  010634  006F FF8C  F032    	movff	plusw1,btemp
 11980  01063A  0E66               	movlw	102
 11981  01063C  1832               	xorwf	btemp^0,w,c
 11982  01063E  A4D8               	btfss	status,2,c
 11983  010640  D014               	goto	l1962
 11984                           
 11985                           ;stkvar	_e @ sp[(-56)+34]
 11986  010642  0EEB               	movlw	-21
 11987  010644  AEE3               	btfss	plusw1,7,c
 11988  010646  D011               	goto	l1962
 11989  010648                     u9630:
 11990                           
 11991                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 11992                           ;stkvar	_m @ sp[(-56)+48]
 11993  010648  0EF8               	movlw	-8
 11994  01064A  50E3               	movf	plusw1,w,c
 11995  01064C  0F01               	addlw	1
 11996  01064E  6E32               	movwf	btemp^0,c
 11997  010650  0EF8               	movlw	-8
 11998  010652  0060  F0CB  FFE3   	movff	btemp,plusw1
 11999  010658  6A32               	clrf	btemp^0,c
 12000  01065A  0EF9               	movlw	-7
 12001  01065C  50E3               	movf	plusw1,w,c
 12002  01065E  2032               	addwfc	btemp^0,w,c
 12003  010660  6E32               	movwf	btemp^0,c
 12004  010662  0EF9               	movlw	-7
 12005  010664  0060  F0CB  FFE3   	movff	btemp,plusw1
 12006  01066A                     l1962:
 12007                           
 12008                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 12009                           ;stkvar	_nmode @ sp[(-56)+55]
 12010  01066A  0EFF               	movlw	-1
 12011  01066C  006F FF8C  F032    	movff	plusw1,btemp
 12012  010672  0E66               	movlw	102
 12013  010674  1832               	xorwf	btemp^0,w,c
 12014  010676  A4D8               	btfss	status,2,c
 12015  010678  D03B               	goto	l10046
 12016                           
 12017                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 12018                           ;stkvar	_e @ sp[(-56)+34]
 12019  01067A  0EEB               	movlw	-21
 12020  01067C  AEE3               	btfss	plusw1,7,c
 12021  01067E  D01C               	goto	l10042
 12022                           
 12023                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 12024  010680  0E00               	movlw	0
 12025  010682  6E3A               	movwf	(btemp+8)^0,c
 12026  010684  0E00               	movlw	0
 12027  010686  6E3B               	movwf	(btemp+9)^0,c
 12028  010688  0E80               	movlw	128
 12029  01068A  6E3C               	movwf	(btemp+10)^0,c
 12030  01068C  0E3F               	movlw	63
 12031  01068E  6E3D               	movwf	(btemp+11)^0,c
 12032                           
 12033                           ;stkvar	_u @ sp[(-56)+12]
 12034  010690  0ED4               	movlw	-44
 12035  010692  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12036  010698  0ED5               	movlw	-43
 12037  01069A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12038  0106A0  0ED6               	movlw	-42
 12039  0106A2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12040  0106A8  0ED7               	movlw	-41
 12041  0106AA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12042                           
 12043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 12044                           ;stkvar	_e @ sp[(-56)+34]
 12045  0106B0  0EEA               	movlw	-22
 12046  0106B2  6AE3               	clrf	plusw1,c
 12047  0106B4  0EEB               	movlw	-21
 12048  0106B6  6AE3               	clrf	plusw1,c
 12049  0106B8                     l10042:
 12050                           
 12051                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 12052                           ;stkvar	_mode @ sp[(-56)+54]
 12053  0106B8  0EFE               	movlw	-2
 12054  0106BA  006F FF8C  F032    	movff	plusw1,btemp
 12055  0106C0  0E67               	movlw	103
 12056  0106C2  1832               	xorwf	btemp^0,w,c
 12057  0106C4  B4D8               	btfsc	status,2,c
 12058  0106C6  D014               	goto	l10046
 12059                           
 12060                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 12061                           ;stkvar	_e @ sp[(-56)+34]
 12062                           ;stkvar	_m @ sp[(-56)+48]
 12063  0106C8  0EF8               	movlw	-8
 12064  0106CA  50E3               	movf	plusw1,w,c
 12065  0106CC  6E32               	movwf	btemp^0,c
 12066  0106CE  0EEA               	movlw	-22
 12067  0106D0  50E3               	movf	plusw1,w,c
 12068  0106D2  2632               	addwf	btemp^0,f,c
 12069  0106D4  0EF8               	movlw	-8
 12070  0106D6  0060  F0CB  FFE3   	movff	btemp,plusw1
 12071  0106DC  0EF9               	movlw	-7
 12072  0106DE  50E3               	movf	plusw1,w,c
 12073  0106E0  6E32               	movwf	btemp^0,c
 12074  0106E2  0EEB               	movlw	-21
 12075  0106E4  50E3               	movf	plusw1,w,c
 12076  0106E6  2232               	addwfc	btemp^0,f,c
 12077  0106E8  0EF9               	movlw	-7
 12078  0106EA  0060  F0CB  FFE3   	movff	btemp,plusw1
 12079  0106F0                     l10046:
 12080                           
 12081                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 12082                           ;stkvar	_i @ sp[(-56)+36]
 12083  0106F0  0EEC               	movlw	-20
 12084  0106F2  6AE3               	clrf	plusw1,c
 12085  0106F4  0EED               	movlw	-19
 12086  0106F6  6AE3               	clrf	plusw1,c
 12087                           
 12088                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 12089                           ;stkvar	_g @ sp[(-56)+16]
 12090  0106F8  0ED8               	movlw	-40
 12091  0106FA  006F FF8C  F03A    	movff	plusw1,btemp+8
 12092  010700  0ED9               	movlw	-39
 12093  010702  006F FF8C  F03B    	movff	plusw1,btemp+9
 12094  010708  0EDA               	movlw	-38
 12095  01070A  006F FF8C  F03C    	movff	plusw1,btemp+10
 12096  010710  0EDB               	movlw	-37
 12097  010712  006F FF8C  F03D    	movff	plusw1,btemp+11
 12098                           
 12099                           ;stkvar	_h @ sp[(-56)+24]
 12100  010718  0EE0               	movlw	-32
 12101  01071A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12102  010720  0EE1               	movlw	-31
 12103  010722  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12104  010728  0EE2               	movlw	-30
 12105  01072A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12106  010730  0EE3               	movlw	-29
 12107  010732  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12108                           
 12109                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 12110                           ;stkvar	_u @ sp[(-56)+12]
 12111  010738  0ED4               	movlw	-44
 12112  01073A  006F FF8C  F03A    	movff	plusw1,btemp+8
 12113  010740  0ED5               	movlw	-43
 12114  010742  006F FF8C  F03B    	movff	plusw1,btemp+9
 12115  010748  0ED6               	movlw	-42
 12116  01074A  006F FF8C  F03C    	movff	plusw1,btemp+10
 12117  010750  0ED7               	movlw	-41
 12118  010752  006F FF8C  F03D    	movff	plusw1,btemp+11
 12119                           
 12120                           ;stkvar	_ou @ sp[(-56)+28]
 12121  010758  0EE4               	movlw	-28
 12122  01075A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12123  010760  0EE5               	movlw	-27
 12124  010762  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12125  010768  0EE6               	movlw	-26
 12126  01076A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12127  010770  0EE7               	movlw	-25
 12128  010772  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12129                           
 12130                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 12131  010778  D0D6               	goto	l10062
 12132  01077A                     l10052:
 12133                           
 12134                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 12135                           ;stkvar	_u @ sp[(-56)+12]
 12136  01077A  0ED4               	movlw	-44
 12137  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 12138  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 12139  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 12140  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 12141                           
 12142                           ;stkvar	_h @ sp[(-60)+24]
 12143  010794  0EDC               	movlw	-36
 12144  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 12145  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 12146  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 12147  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 12148  0107AE  ECF9  F09A         	call	___fldiv	;wreg free
 12149  0107B2  0060  F0CB  FFE6   	movff	btemp,postinc1
 12150  0107B8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 12151  0107BE  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 12152  0107C4  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 12153  0107CA  EC29  F0A4         	call	_floorf	;wreg free
 12154                           
 12155                           ;stkvar	_l @ sp[(-56)+20]
 12156  0107CE  0EDC               	movlw	-36
 12157  0107D0  0060  F0CB  FFE3   	movff	btemp,plusw1
 12158  0107D6  0EDD               	movlw	-35
 12159  0107D8  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12160  0107DE  0EDE               	movlw	-34
 12161  0107E0  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12162  0107E6  0EDF               	movlw	-33
 12163  0107E8  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12164                           
 12165                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 12166                           ;stkvar	_l @ sp[(-56)+20]
 12167  0107EE  0EDC               	movlw	-36
 12168  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 12169  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 12170  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 12171  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 12172  010808  EC56  F0B2         	call	___fltol	;wreg free
 12173  01080C  0060  F0C8  F03C   	movff	btemp,btemp+10
 12174  010812  0060  F0CC  F03D   	movff	btemp+1,btemp+11
 12175                           
 12176                           ;stkvar	_d @ sp[(-56)+44]
 12177  010818  0EF4               	movlw	-12
 12178  01081A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12179  010820  0EF5               	movlw	-11
 12180  010822  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12181                           
 12182                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 12183                           ;stkvar	_u @ sp[(-56)+12]
 12184  010828  0ED4               	movlw	-44
 12185  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 12186  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 12187  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 12188  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 12189                           
 12190                           ;stkvar	_l @ sp[(-60)+20]
 12191  010842  0ED8               	movlw	-40
 12192  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 12193  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 12194  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 12195  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 12196  01085C  EC06  F093         	call	___flmul	;wreg free
 12197  010860  0060  F0CB  FFE6   	movff	btemp,postinc1
 12198  010866  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 12199  01086C  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 12200  010872  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 12201                           
 12202                           ;stkvar	_h @ sp[(-60)+24]
 12203  010878  0EDC               	movlw	-36
 12204  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 12205  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 12206  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 12207  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 12208  010892  ECFF  F0C1         	call	___flsub	;wreg free
 12209                           
 12210                           ;stkvar	_h @ sp[(-56)+24]
 12211  010896  0EE0               	movlw	-32
 12212  010898  0060  F0CB  FFE3   	movff	btemp,plusw1
 12213  01089E  0EE1               	movlw	-31
 12214  0108A0  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12215  0108A6  0EE2               	movlw	-30
 12216  0108A8  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12217  0108AE  0EE3               	movlw	-29
 12218  0108B0  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12219                           
 12220                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 12221  0108B6  0E00               	movlw	0
 12222  0108B8  6EE6               	movwf	postinc1,c
 12223  0108BA  0E00               	movlw	0
 12224  0108BC  6EE6               	movwf	postinc1,c
 12225  0108BE  0E20               	movlw	32
 12226  0108C0  6EE6               	movwf	postinc1,c
 12227  0108C2  0E41               	movlw	65
 12228  0108C4  6EE6               	movwf	postinc1,c
 12229                           
 12230                           ;stkvar	_u @ sp[(-60)+12]
 12231  0108C6  0ED0               	movlw	-48
 12232  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12233  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 12234  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 12235  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 12236  0108E0  ECF9  F09A         	call	___fldiv	;wreg free
 12237                           
 12238                           ;stkvar	_u @ sp[(-56)+12]
 12239  0108E4  0ED4               	movlw	-44
 12240  0108E6  0060  F0CB  FFE3   	movff	btemp,plusw1
 12241  0108EC  0ED5               	movlw	-43
 12242  0108EE  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12243  0108F4  0ED6               	movlw	-42
 12244  0108F6  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12245  0108FC  0ED7               	movlw	-41
 12246  0108FE  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12247                           
 12248                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 12249                           ;stkvar	_i @ sp[(-56)+36]
 12250  010904  0EEC               	movlw	-20
 12251  010906  50E3               	movf	plusw1,w,c
 12252  010908  0F01               	addlw	1
 12253  01090A  6E32               	movwf	btemp^0,c
 12254  01090C  0EEC               	movlw	-20
 12255  01090E  0060  F0CB  FFE3   	movff	btemp,plusw1
 12256  010914  6A32               	clrf	btemp^0,c
 12257  010916  0EED               	movlw	-19
 12258  010918  50E3               	movf	plusw1,w,c
 12259  01091A  2032               	addwfc	btemp^0,w,c
 12260  01091C  6E32               	movwf	btemp^0,c
 12261  01091E  0EED               	movlw	-19
 12262  010920  0060  F0CB  FFE3   	movff	btemp,plusw1
 12263  010926                     l10062:
 12264                           
 12265                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 12266                           ;stkvar	_m @ sp[(-56)+48]
 12267                           ;stkvar	_i @ sp[(-56)+36]
 12268  010926  50E1               	movf	fsr1l,w,c
 12269  010928  0FEC               	addlw	-20
 12270  01092A  6ED9               	movwf	fsr2l,c
 12271  01092C  50E2               	movf	fsr1h,w,c
 12272  01092E  6EDA               	movwf	fsr2h,c
 12273  010930  0EFF               	movlw	255
 12274  010932  22DA               	addwfc	fsr2h,f,c
 12275  010934  0EF8               	movlw	-8
 12276  010936  50E3               	movf	plusw1,w,c
 12277  010938  5CDE               	subwf	postinc2,w,c
 12278  01093A  50DE               	movf	postinc2,w,c
 12279  01093C  0A80               	xorlw	128
 12280  01093E  6E32               	movwf	btemp^0,c
 12281  010940  0EF9               	movlw	-7
 12282  010942  50E3               	movf	plusw1,w,c
 12283  010944  0A80               	xorlw	128
 12284  010946  5832               	subwfb	btemp^0,w,c
 12285  010948  A0D8               	btfss	status,0,c
 12286  01094A  D717               	goto	l10052
 12287                           
 12288                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 12289  01094C  0E00               	movlw	0
 12290  01094E  6EE6               	movwf	postinc1,c
 12291  010950  0E00               	movlw	0
 12292  010952  6EE6               	movwf	postinc1,c
 12293  010954  0EA0               	movlw	160
 12294  010956  6EE6               	movwf	postinc1,c
 12295  010958  0E40               	movlw	64
 12296  01095A  6EE6               	movwf	postinc1,c
 12297                           
 12298                           ;stkvar	_u @ sp[(-60)+12]
 12299  01095C  0ED0               	movlw	-48
 12300  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 12301  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 12302  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 12303  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 12304  010976  EC06  F093         	call	___flmul	;wreg free
 12305                           
 12306                           ;stkvar	_l @ sp[(-56)+20]
 12307  01097A  0EDC               	movlw	-36
 12308  01097C  0060  F0CB  FFE3   	movff	btemp,plusw1
 12309  010982  0EDD               	movlw	-35
 12310  010984  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12311  01098A  0EDE               	movlw	-34
 12312  01098C  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12313  010992  0EDF               	movlw	-33
 12314  010994  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12315                           
 12316                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 12317                           ;stkvar	_l @ sp[(-56)+20]
 12318  01099A  0EDC               	movlw	-36
 12319  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 12320  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 12321  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 12322  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 12323                           
 12324                           ;stkvar	_h @ sp[(-60)+24]
 12325  0109B4  0EDC               	movlw	-36
 12326  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 12327  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 12328  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 12329  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12330  0109CE  EC0F  F0B3         	call	___flge	;wreg free
 12331  0109D2  A032               	btfss	btemp& (0+255),0,c
 12332  0109D4  D021               	goto	u9700
 12333                           
 12334                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 12335                           ;stkvar	_l @ sp[(-56)+20]
 12336                           
 12337                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 12338                           
 12339                           ;stkvar	_l @ sp[(-56)+20]
 12340                           
 12341                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 12342  0109D6  0EDC               	movlw	-36
 12343  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 12344  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 12345  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 12346  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 12347                           
 12348                           ;stkvar	_h @ sp[(-60)+24]
 12349  0109F0  0EDC               	movlw	-36
 12350  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 12351  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 12352  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 12353  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 12354  010A0A  EC30  F0BA         	call	___fleq	;wreg free
 12355  010A0E  A032               	btfss	btemp& (0+255),0,c
 12356  010A10  D01B               	goto	l10076
 12357                           
 12358                           ;stkvar	_d @ sp[(-56)+44]
 12359  010A12  0EF4               	movlw	-12
 12360  010A14  B0E3               	btfsc	plusw1,0,c
 12361  010A16  D018               	goto	l10076
 12362  010A18                     u9700:
 12363                           
 12364                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 12365  010A18  0E00               	movlw	0
 12366  010A1A  6E3A               	movwf	(btemp+8)^0,c
 12367  010A1C  0E00               	movlw	0
 12368  010A1E  6E3B               	movwf	(btemp+9)^0,c
 12369  010A20  0E00               	movlw	0
 12370  010A22  6E3C               	movwf	(btemp+10)^0,c
 12371  010A24  0E00               	movlw	0
 12372  010A26  6E3D               	movwf	(btemp+11)^0,c
 12373                           
 12374                           ;stkvar	_l @ sp[(-56)+20]
 12375  010A28  0EDC               	movlw	-36
 12376  010A2A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12377  010A30  0EDD               	movlw	-35
 12378  010A32  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12379  010A38  0EDE               	movlw	-34
 12380  010A3A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12381  010A40  0EDF               	movlw	-33
 12382  010A42  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12383  010A48                     l10076:
 12384                           
 12385                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 12386                           ;stkvar	_l @ sp[(-56)+20]
 12387  010A48  0EDC               	movlw	-36
 12388  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 12389  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 12390  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 12391  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 12392                           
 12393                           ;stkvar	_g @ sp[(-60)+16]
 12394  010A62  0ED4               	movlw	-44
 12395  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 12396  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 12397  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 12398  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 12399  010A7C  EC1B  F097         	call	___fladd	;wreg free
 12400                           
 12401                           ;stkvar	_h @ sp[(-56)+24]
 12402  010A80  0EE0               	movlw	-32
 12403  010A82  0060  F0CB  FFE3   	movff	btemp,plusw1
 12404  010A88  0EE1               	movlw	-31
 12405  010A8A  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12406  010A90  0EE2               	movlw	-30
 12407  010A92  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12408  010A98  0EE3               	movlw	-29
 12409  010A9A  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12410                           
 12411                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 12412                           ;stkvar	_ou @ sp[(-56)+28]
 12413  010AA0  0EE4               	movlw	-28
 12414  010AA2  006F FF8C  F03A    	movff	plusw1,btemp+8
 12415  010AA8  0EE5               	movlw	-27
 12416  010AAA  006F FF8C  F03B    	movff	plusw1,btemp+9
 12417  010AB0  0EE6               	movlw	-26
 12418  010AB2  006F FF8C  F03C    	movff	plusw1,btemp+10
 12419  010AB8  0EE7               	movlw	-25
 12420  010ABA  006F FF8C  F03D    	movff	plusw1,btemp+11
 12421                           
 12422                           ;stkvar	_u @ sp[(-56)+12]
 12423  010AC0  0ED4               	movlw	-44
 12424  010AC2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12425  010AC8  0ED5               	movlw	-43
 12426  010ACA  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12427  010AD0  0ED6               	movlw	-42
 12428  010AD2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12429  010AD8  0ED7               	movlw	-41
 12430  010ADA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12431                           
 12432                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 12433                           ;stkvar	_nmode @ sp[(-56)+55]
 12434  010AE0  0EFF               	movlw	-1
 12435  010AE2  006F FF8C  F032    	movff	plusw1,btemp
 12436  010AE8  0E65               	movlw	101
 12437  010AEA  1832               	xorwf	btemp^0,w,c
 12438  010AEC  B4D8               	btfsc	status,2,c
 12439  010AEE  D011               	goto	l10084
 12440                           
 12441                           ;stkvar	_e @ sp[(-56)+34]
 12442                           ;stkvar	_ne @ sp[(-56)+46]
 12443  010AF0  0EEA               	movlw	-22
 12444  010AF2  006F FF8C  F032    	movff	plusw1,btemp
 12445  010AF8  0EF6               	movlw	-10
 12446  010AFA  0060  F0CB  FFE3   	movff	btemp,plusw1
 12447  010B00  0EEB               	movlw	-21
 12448  010B02  006F FF8C  F032    	movff	plusw1,btemp
 12449  010B08  0EF7               	movlw	-9
 12450  010B0A  0060  F0CB  FFE3   	movff	btemp,plusw1
 12451  010B10  D004               	goto	l1977
 12452  010B12                     l10084:
 12453                           
 12454                           ;stkvar	_ne @ sp[(-56)+46]
 12455  010B12  0EF6               	movlw	-10
 12456  010B14  6AE3               	clrf	plusw1,c
 12457  010B16  0EF7               	movlw	-9
 12458  010B18  6AE3               	clrf	plusw1,c
 12459  010B1A                     l1977:
 12460                           
 12461                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 12462                           ;stkvar	_pp @ sp[(-56)+50]
 12463  010B1A  0EFA               	movlw	-6
 12464  010B1C  6AE3               	clrf	plusw1,c
 12465  010B1E  0EFB               	movlw	-5
 12466  010B20  6AE3               	clrf	plusw1,c
 12467                           
 12468                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 12469                           ;stkvar	_t @ sp[(-56)+52]
 12470  010B22  0EFC               	movlw	-4
 12471  010B24  6AE3               	clrf	plusw1,c
 12472  010B26  0EFD               	movlw	-3
 12473  010B28  6AE3               	clrf	plusw1,c
 12474                           
 12475                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 12476                           ;stkvar	_i @ sp[(-56)+36]
 12477  010B2A  0EEC               	movlw	-20
 12478  010B2C  6AE3               	clrf	plusw1,c
 12479  010B2E  0EED               	movlw	-19
 12480  010B30  6AE3               	clrf	plusw1,c
 12481                           
 12482                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 12483  010B32  D1B7               	goto	l10136
 12484  010B34                     l10086:
 12485                           
 12486                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 12487                           ;stkvar	_u @ sp[(-56)+12]
 12488  010B34  0ED4               	movlw	-44
 12489  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 12490  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 12491  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 12492  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 12493                           
 12494                           ;stkvar	_h @ sp[(-60)+24]
 12495  010B4E  0EDC               	movlw	-36
 12496  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 12497  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 12498  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 12499  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 12500  010B68  ECF9  F09A         	call	___fldiv	;wreg free
 12501  010B6C  0060  F0CB  FFE6   	movff	btemp,postinc1
 12502  010B72  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 12503  010B78  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 12504  010B7E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 12505  010B84  EC29  F0A4         	call	_floorf	;wreg free
 12506                           
 12507                           ;stkvar	_l @ sp[(-56)+20]
 12508  010B88  0EDC               	movlw	-36
 12509  010B8A  0060  F0CB  FFE3   	movff	btemp,plusw1
 12510  010B90  0EDD               	movlw	-35
 12511  010B92  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12512  010B98  0EDE               	movlw	-34
 12513  010B9A  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12514  010BA0  0EDF               	movlw	-33
 12515  010BA2  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12516                           
 12517                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 12518                           ;stkvar	_l @ sp[(-56)+20]
 12519  010BA8  0EDC               	movlw	-36
 12520  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 12521  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 12522  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 12523  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 12524  010BC2  EC56  F0B2         	call	___fltol	;wreg free
 12525  010BC6  0060  F0C8  F03C   	movff	btemp,btemp+10
 12526  010BCC  0060  F0CC  F03D   	movff	btemp+1,btemp+11
 12527                           
 12528                           ;stkvar	_d @ sp[(-56)+44]
 12529  010BD2  0EF4               	movlw	-12
 12530  010BD4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12531  010BDA  0EF5               	movlw	-11
 12532  010BDC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12533                           
 12534                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 12535  010BE2  B81F               	btfsc	_flags^0,4,c
 12536  010BE4  D026               	goto	l10100
 12537                           
 12538                           ;stkvar	_d @ sp[(-56)+44]
 12539  010BE6  0EF4               	movlw	-12
 12540  010BE8  006F FF8C  F032    	movff	plusw1,btemp
 12541  010BEE  0EF5               	movlw	-11
 12542  010BF0  50E3               	movf	plusw1,w,c
 12543  010BF2  1032               	iorwf	btemp^0,w,c
 12544  010BF4  A4D8               	btfss	status,2,c
 12545  010BF6  D01D               	goto	l10100
 12546                           
 12547                           ;stkvar	_mode @ sp[(-56)+54]
 12548  010BF8  0EFE               	movlw	-2
 12549  010BFA  006F FF8C  F032    	movff	plusw1,btemp
 12550  010C00  0E67               	movlw	103
 12551  010C02  1832               	xorwf	btemp^0,w,c
 12552  010C04  A4D8               	btfss	status,2,c
 12553  010C06  D015               	goto	l10100
 12554                           
 12555                           ;stkvar	_ne @ sp[(-56)+46]
 12556  010C08  0EF7               	movlw	-9
 12557  010C0A  AEE3               	btfss	plusw1,7,c
 12558  010C0C  D012               	goto	l10100
 12559                           
 12560                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 12561                           ;stkvar	_t @ sp[(-56)+52]
 12562  010C0E  0EFC               	movlw	-4
 12563  010C10  50E3               	movf	plusw1,w,c
 12564  010C12  0F01               	addlw	1
 12565  010C14  6E32               	movwf	btemp^0,c
 12566  010C16  0EFC               	movlw	-4
 12567  010C18  0060  F0CB  FFE3   	movff	btemp,plusw1
 12568  010C1E  6A32               	clrf	btemp^0,c
 12569  010C20  0EFD               	movlw	-3
 12570  010C22  50E3               	movf	plusw1,w,c
 12571  010C24  2032               	addwfc	btemp^0,w,c
 12572  010C26  6E32               	movwf	btemp^0,c
 12573  010C28  0EFD               	movlw	-3
 12574  010C2A  0060  F0CB  FFE3   	movff	btemp,plusw1
 12575                           
 12576                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 12577  010C30  D0AF               	goto	l10128
 12578  010C32                     l10100:
 12579                           
 12580                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 12581                           ;stkvar	_pp @ sp[(-56)+50]
 12582  010C32  0EFA               	movlw	-6
 12583  010C34  006F FF8C  F032    	movff	plusw1,btemp
 12584  010C3A  0EFB               	movlw	-5
 12585  010C3C  50E3               	movf	plusw1,w,c
 12586  010C3E  1032               	iorwf	btemp^0,w,c
 12587  010C40  A4D8               	btfss	status,2,c
 12588  010C42  D070               	goto	l10120
 12589                           
 12590                           ;stkvar	_ne @ sp[(-56)+46]
 12591  010C44  0EF7               	movlw	-9
 12592  010C46  AEE3               	btfss	plusw1,7,c
 12593  010C48  D06D               	goto	l10120
 12594                           
 12595                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 12596                           ;stkvar	_n @ sp[(-56)+32]
 12597  010C4A  0EE8               	movlw	-24
 12598  010C4C  006F FF8C  F03C    	movff	plusw1,btemp+10
 12599  010C52  0EE9               	movlw	-23
 12600  010C54  006F FF8C  F03D    	movff	plusw1,btemp+11
 12601  010C5A  0EA3               	movlw	low _dbuf
 12602  010C5C  243C               	addwf	(btemp+10)^0,w,c
 12603  010C5E  6ED9               	movwf	fsr2l,c
 12604  010C60  0E01               	movlw	high _dbuf
 12605  010C62  203D               	addwfc	(btemp+11)^0,w,c
 12606  010C64  6EDA               	movwf	fsr2h,c
 12607  010C66  0E2E               	movlw	46
 12608  010C68  6EDF               	movwf	indf2,c
 12609                           
 12610                           ;stkvar	_n @ sp[(-56)+32]
 12611  010C6A  0EE8               	movlw	-24
 12612  010C6C  50E3               	movf	plusw1,w,c
 12613  010C6E  0F01               	addlw	1
 12614  010C70  6E32               	movwf	btemp^0,c
 12615  010C72  0EE8               	movlw	-24
 12616  010C74  0060  F0CB  FFE3   	movff	btemp,plusw1
 12617  010C7A  6A32               	clrf	btemp^0,c
 12618  010C7C  0EE9               	movlw	-23
 12619  010C7E  50E3               	movf	plusw1,w,c
 12620  010C80  2032               	addwfc	btemp^0,w,c
 12621  010C82  6E32               	movwf	btemp^0,c
 12622  010C84  0EE9               	movlw	-23
 12623  010C86  0060  F0CB  FFE3   	movff	btemp,plusw1
 12624                           
 12625                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 12626                           ;stkvar	_w @ sp[(-56)+38]
 12627  010C8C  50E1               	movf	fsr1l,w,c
 12628  010C8E  0FEE               	addlw	-18
 12629  010C90  6ED9               	movwf	fsr2l,c
 12630  010C92  50E2               	movf	fsr1h,w,c
 12631  010C94  6EDA               	movwf	fsr2h,c
 12632  010C96  0EFF               	movlw	255
 12633  010C98  22DA               	addwfc	fsr2h,f,c
 12634  010C9A  06DE               	decf	postinc2,f,c
 12635  010C9C  0E00               	movlw	0
 12636  010C9E  5ADD               	subwfb	postdec2,f,c
 12637                           
 12638                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 12639  010CA0  0E01               	movlw	1
 12640  010CA2  6E3C               	movwf	(btemp+10)^0,c
 12641  010CA4  0E00               	movlw	0
 12642  010CA6  6E3D               	movwf	(btemp+11)^0,c
 12643                           
 12644                           ;stkvar	_pp @ sp[(-56)+50]
 12645  010CA8  0EFA               	movlw	-6
 12646  010CAA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12647  010CB0  0EFB               	movlw	-5
 12648  010CB2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12649  010CB8  D035               	goto	l10120
 12650  010CBA                     l10112:
 12651                           
 12652                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 12653                           ;stkvar	_n @ sp[(-56)+32]
 12654  010CBA  0EE8               	movlw	-24
 12655  010CBC  006F FF8C  F03C    	movff	plusw1,btemp+10
 12656  010CC2  0EE9               	movlw	-23
 12657  010CC4  006F FF8C  F03D    	movff	plusw1,btemp+11
 12658  010CCA  0EA3               	movlw	low _dbuf
 12659  010CCC  243C               	addwf	(btemp+10)^0,w,c
 12660  010CCE  6ED9               	movwf	fsr2l,c
 12661  010CD0  0E01               	movlw	high _dbuf
 12662  010CD2  203D               	addwfc	(btemp+11)^0,w,c
 12663  010CD4  6EDA               	movwf	fsr2h,c
 12664  010CD6  0E30               	movlw	48
 12665  010CD8  6EDF               	movwf	indf2,c
 12666                           
 12667                           ;stkvar	_n @ sp[(-56)+32]
 12668  010CDA  0EE8               	movlw	-24
 12669  010CDC  50E3               	movf	plusw1,w,c
 12670  010CDE  0F01               	addlw	1
 12671  010CE0  6E32               	movwf	btemp^0,c
 12672  010CE2  0EE8               	movlw	-24
 12673  010CE4  0060  F0CB  FFE3   	movff	btemp,plusw1
 12674  010CEA  6A32               	clrf	btemp^0,c
 12675  010CEC  0EE9               	movlw	-23
 12676  010CEE  50E3               	movf	plusw1,w,c
 12677  010CF0  2032               	addwfc	btemp^0,w,c
 12678  010CF2  6E32               	movwf	btemp^0,c
 12679  010CF4  0EE9               	movlw	-23
 12680  010CF6  0060  F0CB  FFE3   	movff	btemp,plusw1
 12681                           
 12682                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 12683                           ;stkvar	_w @ sp[(-56)+38]
 12684  010CFC  50E1               	movf	fsr1l,w,c
 12685  010CFE  0FEE               	addlw	-18
 12686  010D00  6ED9               	movwf	fsr2l,c
 12687  010D02  50E2               	movf	fsr1h,w,c
 12688  010D04  6EDA               	movwf	fsr2h,c
 12689  010D06  0EFF               	movlw	255
 12690  010D08  22DA               	addwfc	fsr2h,f,c
 12691  010D0A  06DE               	decf	postinc2,f,c
 12692  010D0C  0E00               	movlw	0
 12693  010D0E  5ADD               	subwfb	postdec2,f,c
 12694                           
 12695                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 12696                           ;stkvar	_t @ sp[(-56)+52]
 12697  010D10  50E1               	movf	fsr1l,w,c
 12698  010D12  0FFC               	addlw	-4
 12699  010D14  6ED9               	movwf	fsr2l,c
 12700  010D16  50E2               	movf	fsr1h,w,c
 12701  010D18  6EDA               	movwf	fsr2h,c
 12702  010D1A  0EFF               	movlw	255
 12703  010D1C  22DA               	addwfc	fsr2h,f,c
 12704  010D1E  06DE               	decf	postinc2,f,c
 12705  010D20  0E00               	movlw	0
 12706  010D22  5ADD               	subwfb	postdec2,f,c
 12707  010D24                     l10120:
 12708                           
 12709                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 12710                           ;stkvar	_t @ sp[(-56)+52]
 12711  010D24  0EFC               	movlw	-4
 12712  010D26  006F FF8C  F032    	movff	plusw1,btemp
 12713  010D2C  0EFD               	movlw	-3
 12714  010D2E  50E3               	movf	plusw1,w,c
 12715  010D30  1032               	iorwf	btemp^0,w,c
 12716  010D32  A4D8               	btfss	status,2,c
 12717  010D34  D7C2               	goto	l10112
 12718                           
 12719                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 12720                           ;stkvar	_n @ sp[(-56)+32]
 12721  010D36  0EE8               	movlw	-24
 12722  010D38  006F FF8C  F03C    	movff	plusw1,btemp+10
 12723  010D3E  0EE9               	movlw	-23
 12724  010D40  006F FF8C  F03D    	movff	plusw1,btemp+11
 12725  010D46  0EA3               	movlw	low _dbuf
 12726  010D48  243C               	addwf	(btemp+10)^0,w,c
 12727  010D4A  6ED9               	movwf	fsr2l,c
 12728  010D4C  0E01               	movlw	high _dbuf
 12729  010D4E  203D               	addwfc	(btemp+11)^0,w,c
 12730  010D50  6EDA               	movwf	fsr2h,c
 12731                           
 12732                           ;stkvar	_d @ sp[(-56)+44]
 12733  010D52  0EF4               	movlw	-12
 12734  010D54  50E3               	movf	plusw1,w,c
 12735  010D56  0F30               	addlw	48
 12736  010D58  6EDF               	movwf	indf2,c
 12737                           
 12738                           ;stkvar	_n @ sp[(-56)+32]
 12739  010D5A  0EE8               	movlw	-24
 12740  010D5C  50E3               	movf	plusw1,w,c
 12741  010D5E  0F01               	addlw	1
 12742  010D60  6E32               	movwf	btemp^0,c
 12743  010D62  0EE8               	movlw	-24
 12744  010D64  0060  F0CB  FFE3   	movff	btemp,plusw1
 12745  010D6A  6A32               	clrf	btemp^0,c
 12746  010D6C  0EE9               	movlw	-23
 12747  010D6E  50E3               	movf	plusw1,w,c
 12748  010D70  2032               	addwfc	btemp^0,w,c
 12749  010D72  6E32               	movwf	btemp^0,c
 12750  010D74  0EE9               	movlw	-23
 12751  010D76  0060  F0CB  FFE3   	movff	btemp,plusw1
 12752                           
 12753                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 12754                           ;stkvar	_w @ sp[(-56)+38]
 12755  010D7C  50E1               	movf	fsr1l,w,c
 12756  010D7E  0FEE               	addlw	-18
 12757  010D80  6ED9               	movwf	fsr2l,c
 12758  010D82  50E2               	movf	fsr1h,w,c
 12759  010D84  6EDA               	movwf	fsr2h,c
 12760  010D86  0EFF               	movlw	255
 12761  010D88  22DA               	addwfc	fsr2h,f,c
 12762  010D8A  06DE               	decf	postinc2,f,c
 12763  010D8C  0E00               	movlw	0
 12764  010D8E  5ADD               	subwfb	postdec2,f,c
 12765  010D90                     l10128:
 12766                           
 12767                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 12768                           ;stkvar	_u @ sp[(-56)+12]
 12769  010D90  0ED4               	movlw	-44
 12770  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 12771  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 12772  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 12773  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 12774                           
 12775                           ;stkvar	_l @ sp[(-60)+20]
 12776  010DAA  0ED8               	movlw	-40
 12777  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 12778  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 12779  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 12780  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 12781  010DC4  EC06  F093         	call	___flmul	;wreg free
 12782  010DC8  0060  F0CB  FFE6   	movff	btemp,postinc1
 12783  010DCE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 12784  010DD4  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 12785  010DDA  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 12786                           
 12787                           ;stkvar	_h @ sp[(-60)+24]
 12788  010DE0  0EDC               	movlw	-36
 12789  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 12790  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 12791  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 12792  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 12793  010DFA  ECFF  F0C1         	call	___flsub	;wreg free
 12794                           
 12795                           ;stkvar	_h @ sp[(-56)+24]
 12796  010DFE  0EE0               	movlw	-32
 12797  010E00  0060  F0CB  FFE3   	movff	btemp,plusw1
 12798  010E06  0EE1               	movlw	-31
 12799  010E08  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12800  010E0E  0EE2               	movlw	-30
 12801  010E10  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12802  010E16  0EE3               	movlw	-29
 12803  010E18  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12804                           
 12805                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 12806  010E1E  0E00               	movlw	0
 12807  010E20  6EE6               	movwf	postinc1,c
 12808  010E22  0E00               	movlw	0
 12809  010E24  6EE6               	movwf	postinc1,c
 12810  010E26  0E20               	movlw	32
 12811  010E28  6EE6               	movwf	postinc1,c
 12812  010E2A  0E41               	movlw	65
 12813  010E2C  6EE6               	movwf	postinc1,c
 12814                           
 12815                           ;stkvar	_u @ sp[(-60)+12]
 12816  010E2E  0ED0               	movlw	-48
 12817  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 12818  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 12819  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 12820  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 12821  010E48  ECF9  F09A         	call	___fldiv	;wreg free
 12822                           
 12823                           ;stkvar	_u @ sp[(-56)+12]
 12824  010E4C  0ED4               	movlw	-44
 12825  010E4E  0060  F0CB  FFE3   	movff	btemp,plusw1
 12826  010E54  0ED5               	movlw	-43
 12827  010E56  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12828  010E5C  0ED6               	movlw	-42
 12829  010E5E  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12830  010E64  0ED7               	movlw	-41
 12831  010E66  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12832                           
 12833                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 12834                           ;stkvar	_ne @ sp[(-56)+46]
 12835  010E6C  50E1               	movf	fsr1l,w,c
 12836  010E6E  0FF6               	addlw	-10
 12837  010E70  6ED9               	movwf	fsr2l,c
 12838  010E72  50E2               	movf	fsr1h,w,c
 12839  010E74  6EDA               	movwf	fsr2h,c
 12840  010E76  0EFF               	movlw	255
 12841  010E78  22DA               	addwfc	fsr2h,f,c
 12842  010E7A  06DE               	decf	postinc2,f,c
 12843  010E7C  0E00               	movlw	0
 12844  010E7E  5ADD               	subwfb	postdec2,f,c
 12845                           
 12846                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 12847                           ;stkvar	_i @ sp[(-56)+36]
 12848  010E80  0EEC               	movlw	-20
 12849  010E82  50E3               	movf	plusw1,w,c
 12850  010E84  0F01               	addlw	1
 12851  010E86  6E32               	movwf	btemp^0,c
 12852  010E88  0EEC               	movlw	-20
 12853  010E8A  0060  F0CB  FFE3   	movff	btemp,plusw1
 12854  010E90  6A32               	clrf	btemp^0,c
 12855  010E92  0EED               	movlw	-19
 12856  010E94  50E3               	movf	plusw1,w,c
 12857  010E96  2032               	addwfc	btemp^0,w,c
 12858  010E98  6E32               	movwf	btemp^0,c
 12859  010E9A  0EED               	movlw	-19
 12860  010E9C  0060  F0CB  FFE3   	movff	btemp,plusw1
 12861  010EA2                     l10136:
 12862                           
 12863                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 12864                           ;stkvar	_m @ sp[(-56)+48]
 12865                           ;stkvar	_i @ sp[(-56)+36]
 12866  010EA2  50E1               	movf	fsr1l,w,c
 12867  010EA4  0FEC               	addlw	-20
 12868  010EA6  6ED9               	movwf	fsr2l,c
 12869  010EA8  50E2               	movf	fsr1h,w,c
 12870  010EAA  6EDA               	movwf	fsr2h,c
 12871  010EAC  0EFF               	movlw	255
 12872  010EAE  22DA               	addwfc	fsr2h,f,c
 12873  010EB0  0EF8               	movlw	-8
 12874  010EB2  50E3               	movf	plusw1,w,c
 12875  010EB4  5CDE               	subwf	postinc2,w,c
 12876  010EB6  50DE               	movf	postinc2,w,c
 12877  010EB8  0A80               	xorlw	128
 12878  010EBA  6E32               	movwf	btemp^0,c
 12879  010EBC  0EF9               	movlw	-7
 12880  010EBE  50E3               	movf	plusw1,w,c
 12881  010EC0  0A80               	xorlw	128
 12882  010EC2  5832               	subwfb	btemp^0,w,c
 12883  010EC4  B0D8               	btfsc	status,0,c
 12884  010EC6  D00E               	goto	u9800
 12885                           
 12886                           ;stkvar	_n @ sp[(-56)+32]
 12887  010EC8  0EE9               	movlw	-23
 12888  010ECA  BEE3               	btfsc	plusw1,7,c
 12889  010ECC  D633               	goto	l10086
 12890  010ECE  0EE9               	movlw	-23
 12891  010ED0  50E3               	movf	plusw1,w,c
 12892  010ED2  E108               	bnz	u9800
 12893  010ED4  0EE8               	movlw	-24
 12894  010ED6  006F FF8C  F032    	movff	plusw1,btemp
 12895  010EDC  0E4B               	movlw	75
 12896  010EDE  5E32               	subwf	btemp^0,f,c
 12897  010EE0  A0D8               	btfss	status,0,c
 12898  010EE2  D628               	goto	l10086
 12899  010EE4                     u9800:
 12900                           
 12901                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 12902                           ;stkvar	_pp @ sp[(-56)+50]
 12903  010EE4  0EFA               	movlw	-6
 12904  010EE6  006F FF8C  F032    	movff	plusw1,btemp
 12905  010EEC  0EFB               	movlw	-5
 12906  010EEE  50E3               	movf	plusw1,w,c
 12907  010EF0  1032               	iorwf	btemp^0,w,c
 12908  010EF2  B4D8               	btfsc	status,2,c
 12909  010EF4  A81F               	btfss	_flags^0,4,c
 12910  010EF6  D021               	goto	l10148
 12911                           
 12912                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 12913                           ;stkvar	_n @ sp[(-56)+32]
 12914  010EF8  0EE8               	movlw	-24
 12915  010EFA  006F FF8C  F03C    	movff	plusw1,btemp+10
 12916  010F00  0EE9               	movlw	-23
 12917  010F02  006F FF8C  F03D    	movff	plusw1,btemp+11
 12918  010F08  0EA3               	movlw	low _dbuf
 12919  010F0A  243C               	addwf	(btemp+10)^0,w,c
 12920  010F0C  6ED9               	movwf	fsr2l,c
 12921  010F0E  0E01               	movlw	high _dbuf
 12922  010F10  203D               	addwfc	(btemp+11)^0,w,c
 12923  010F12  6EDA               	movwf	fsr2h,c
 12924  010F14  0E2E               	movlw	46
 12925  010F16  6EDF               	movwf	indf2,c
 12926                           
 12927                           ;stkvar	_n @ sp[(-56)+32]
 12928  010F18  0EE8               	movlw	-24
 12929  010F1A  50E3               	movf	plusw1,w,c
 12930  010F1C  0F01               	addlw	1
 12931  010F1E  6E32               	movwf	btemp^0,c
 12932  010F20  0EE8               	movlw	-24
 12933  010F22  0060  F0CB  FFE3   	movff	btemp,plusw1
 12934  010F28  6A32               	clrf	btemp^0,c
 12935  010F2A  0EE9               	movlw	-23
 12936  010F2C  50E3               	movf	plusw1,w,c
 12937  010F2E  2032               	addwfc	btemp^0,w,c
 12938  010F30  6E32               	movwf	btemp^0,c
 12939  010F32  0EE9               	movlw	-23
 12940  010F34  0060  F0CB  FFE3   	movff	btemp,plusw1
 12941  010F3A                     l10148:
 12942                           
 12943                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 12944                           ;stkvar	_n @ sp[(-56)+32]
 12945  010F3A  0EE8               	movlw	-24
 12946  010F3C  006F FF8C  F03C    	movff	plusw1,btemp+10
 12947  010F42  0EE9               	movlw	-23
 12948  010F44  006F FF8C  F03D    	movff	plusw1,btemp+11
 12949  010F4A  0EA3               	movlw	low _dbuf
 12950  010F4C  243C               	addwf	(btemp+10)^0,w,c
 12951  010F4E  6ED9               	movwf	fsr2l,c
 12952  010F50  0E01               	movlw	high _dbuf
 12953  010F52  203D               	addwfc	(btemp+11)^0,w,c
 12954  010F54  6EDA               	movwf	fsr2h,c
 12955  010F56  0E00               	movlw	0
 12956  010F58  6EDF               	movwf	indf2,c
 12957                           
 12958                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 12959                           ;stkvar	_nmode @ sp[(-56)+55]
 12960  010F5A  0EFF               	movlw	-1
 12961  010F5C  006F FF8C  F032    	movff	plusw1,btemp
 12962  010F62  0E65               	movlw	101
 12963  010F64  1832               	xorwf	btemp^0,w,c
 12964  010F66  A4D8               	btfss	status,2,c
 12965  010F68  EF16  F081         	goto	l9952
 12966                           
 12967                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 12968  010F6C  0E4F               	movlw	79
 12969  010F6E  6E3C               	movwf	(btemp+10)^0,c
 12970  010F70  0E00               	movlw	0
 12971  010F72  6E3D               	movwf	(btemp+11)^0,c
 12972                           
 12973                           ;stkvar	_i @ sp[(-56)+36]
 12974  010F74  0EEC               	movlw	-20
 12975  010F76  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12976  010F7C  0EED               	movlw	-19
 12977  010F7E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12978                           
 12979                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 12980                           ;stkvar	_i @ sp[(-56)+36]
 12981  010F84  0EEC               	movlw	-20
 12982  010F86  006F FF8C  F03C    	movff	plusw1,btemp+10
 12983  010F8C  0EED               	movlw	-19
 12984  010F8E  006F FF8C  F03D    	movff	plusw1,btemp+11
 12985  010F94  0EA3               	movlw	low _dbuf
 12986  010F96  243C               	addwf	(btemp+10)^0,w,c
 12987  010F98  6ED9               	movwf	fsr2l,c
 12988  010F9A  0E01               	movlw	high _dbuf
 12989  010F9C  203D               	addwfc	(btemp+11)^0,w,c
 12990  010F9E  6EDA               	movwf	fsr2h,c
 12991  010FA0  0E00               	movlw	0
 12992  010FA2  6EDF               	movwf	indf2,c
 12993                           
 12994                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 12995                           ;stkvar	_sign @ sp[(-56)+42]
 12996  010FA4  0EF2               	movlw	-14
 12997  010FA6  6AE3               	clrf	plusw1,c
 12998  010FA8  0EF3               	movlw	-13
 12999  010FAA  6AE3               	clrf	plusw1,c
 13000                           
 13001                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 13002                           ;stkvar	_e @ sp[(-56)+34]
 13003  010FAC  0EEB               	movlw	-21
 13004  010FAE  AEE3               	btfss	plusw1,7,c
 13005  010FB0  D012               	goto	l10162
 13006                           
 13007                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 13008  010FB2  0E01               	movlw	1
 13009  010FB4  6E3C               	movwf	(btemp+10)^0,c
 13010  010FB6  0E00               	movlw	0
 13011  010FB8  6E3D               	movwf	(btemp+11)^0,c
 13012                           
 13013                           ;stkvar	_sign @ sp[(-56)+42]
 13014  010FBA  0EF2               	movlw	-14
 13015  010FBC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13016  010FC2  0EF3               	movlw	-13
 13017  010FC4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13018                           
 13019                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 13020                           ;stkvar	_e @ sp[(-56)+34]
 13021                           ;stkvar	_e @ sp[(-56)+34]
 13022  010FCA  0EEA               	movlw	-22
 13023  010FCC  6CE3               	negf	plusw1,c
 13024  010FCE  0EEB               	movlw	-21
 13025  010FD0  1EE3               	comf	plusw1,f,c
 13026  010FD2  B0D8               	btfsc	status,0,c
 13027  010FD4  2AE3               	incf	plusw1,f,c
 13028  010FD6                     l10162:
 13029                           
 13030                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 13031  010FD6  0E02               	movlw	2
 13032  010FD8  6E3C               	movwf	(btemp+10)^0,c
 13033  010FDA  0E00               	movlw	0
 13034  010FDC  6E3D               	movwf	(btemp+11)^0,c
 13035                           
 13036                           ;stkvar	_p @ sp[(-56)+40]
 13037  010FDE  0EF0               	movlw	-16
 13038  010FE0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13039  010FE6  0EF1               	movlw	-15
 13040  010FE8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13041                           
 13042                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 13043  010FEE  D051               	goto	l10174
 13044  010FF0                     l10164:
 13045                           
 13046                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 13047                           ;stkvar	_i @ sp[(-56)+36]
 13048  010FF0  50E1               	movf	fsr1l,w,c
 13049  010FF2  0FEC               	addlw	-20
 13050  010FF4  6ED9               	movwf	fsr2l,c
 13051  010FF6  50E2               	movf	fsr1h,w,c
 13052  010FF8  6EDA               	movwf	fsr2h,c
 13053  010FFA  0EFF               	movlw	255
 13054  010FFC  22DA               	addwfc	fsr2h,f,c
 13055  010FFE  06DE               	decf	postinc2,f,c
 13056  011000  0E00               	movlw	0
 13057  011002  5ADD               	subwfb	postdec2,f,c
 13058                           
 13059                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 13060                           ;stkvar	_i @ sp[(-56)+36]
 13061  011004  0EEC               	movlw	-20
 13062  011006  006F FF8C  F03C    	movff	plusw1,btemp+10
 13063  01100C  0EED               	movlw	-19
 13064  01100E  006F FF8C  F03D    	movff	plusw1,btemp+11
 13065  011014  0EA3               	movlw	low _dbuf
 13066  011016  243C               	addwf	(btemp+10)^0,w,c
 13067  011018  6ED9               	movwf	fsr2l,c
 13068  01101A  0E01               	movlw	high _dbuf
 13069  01101C  203D               	addwfc	(btemp+11)^0,w,c
 13070  01101E  6EDA               	movwf	fsr2h,c
 13071  011020  0E0A               	movlw	10
 13072  011022  6EE6               	movwf	postinc1,c
 13073  011024  0E00               	movlw	0
 13074  011026  6EE6               	movwf	postinc1,c
 13075                           
 13076                           ;stkvar	_e @ sp[(-58)+34]
 13077  011028  0EE8               	movlw	-24
 13078  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 13079  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 13080  011036  EC34  F0B6         	call	___awmod	;wreg free
 13081  01103A  5032               	movf	btemp^0,w,c
 13082  01103C  0F30               	addlw	48
 13083  01103E  6EDF               	movwf	indf2,c
 13084                           
 13085                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 13086  011040  0E0A               	movlw	10
 13087  011042  6EE6               	movwf	postinc1,c
 13088  011044  0E00               	movlw	0
 13089  011046  6EE6               	movwf	postinc1,c
 13090                           
 13091                           ;stkvar	_e @ sp[(-58)+34]
 13092  011048  0EE8               	movlw	-24
 13093  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 13094  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 13095  011056  ECC0  F0B3         	call	___awdiv	;wreg free
 13096                           
 13097                           ;stkvar	_e @ sp[(-56)+34]
 13098  01105A  0EEA               	movlw	-22
 13099  01105C  0060  F0CB  FFE3   	movff	btemp,plusw1
 13100  011062  0EEB               	movlw	-21
 13101  011064  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 13102                           
 13103                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 13104                           ;stkvar	_p @ sp[(-56)+40]
 13105  01106A  50E1               	movf	fsr1l,w,c
 13106  01106C  0FF0               	addlw	-16
 13107  01106E  6ED9               	movwf	fsr2l,c
 13108  011070  50E2               	movf	fsr1h,w,c
 13109  011072  6EDA               	movwf	fsr2h,c
 13110  011074  0EFF               	movlw	255
 13111  011076  22DA               	addwfc	fsr2h,f,c
 13112  011078  06DE               	decf	postinc2,f,c
 13113  01107A  0E00               	movlw	0
 13114  01107C  5ADD               	subwfb	postdec2,f,c
 13115                           
 13116                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 13117                           ;stkvar	_w @ sp[(-56)+38]
 13118  01107E  50E1               	movf	fsr1l,w,c
 13119  011080  0FEE               	addlw	-18
 13120  011082  6ED9               	movwf	fsr2l,c
 13121  011084  50E2               	movf	fsr1h,w,c
 13122  011086  6EDA               	movwf	fsr2h,c
 13123  011088  0EFF               	movlw	255
 13124  01108A  22DA               	addwfc	fsr2h,f,c
 13125  01108C  06DE               	decf	postinc2,f,c
 13126  01108E  0E00               	movlw	0
 13127  011090  5ADD               	subwfb	postdec2,f,c
 13128  011092                     l10174:
 13129                           
 13130                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 13131                           ;stkvar	_e @ sp[(-56)+34]
 13132  011092  0EEA               	movlw	-22
 13133  011094  006F FF8C  F032    	movff	plusw1,btemp
 13134  01109A  0EEB               	movlw	-21
 13135  01109C  50E3               	movf	plusw1,w,c
 13136  01109E  1032               	iorwf	btemp^0,w,c
 13137  0110A0  A4D8               	btfss	status,2,c
 13138  0110A2  D7A6               	goto	l10164
 13139                           
 13140                           ;stkvar	_p @ sp[(-56)+40]
 13141  0110A4  0EF1               	movlw	-15
 13142  0110A6  BEE3               	btfsc	plusw1,7,c
 13143  0110A8  D007               	goto	u9860
 13144  0110AA  0EF1               	movlw	-15
 13145  0110AC  50E3               	movf	plusw1,w,c
 13146  0110AE  E1A0               	bnz	l10164
 13147  0110B0  0EF0               	movlw	-16
 13148  0110B2  04E3               	decf	plusw1,w,c
 13149  0110B4  B0D8               	btfsc	status,0,c
 13150  0110B6  D79C               	goto	l10164
 13151  0110B8                     u9860:
 13152                           
 13153                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 13154                           ;stkvar	_i @ sp[(-56)+36]
 13155  0110B8  50E1               	movf	fsr1l,w,c
 13156  0110BA  0FEC               	addlw	-20
 13157  0110BC  6ED9               	movwf	fsr2l,c
 13158  0110BE  50E2               	movf	fsr1h,w,c
 13159  0110C0  6EDA               	movwf	fsr2h,c
 13160  0110C2  0EFF               	movlw	255
 13161  0110C4  22DA               	addwfc	fsr2h,f,c
 13162  0110C6  06DE               	decf	postinc2,f,c
 13163  0110C8  0E00               	movlw	0
 13164  0110CA  5ADD               	subwfb	postdec2,f,c
 13165                           
 13166                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 13167                           ;stkvar	_sign @ sp[(-56)+42]
 13168  0110CC  0EF2               	movlw	-14
 13169  0110CE  006F FF8C  F032    	movff	plusw1,btemp
 13170  0110D4  0EF3               	movlw	-13
 13171  0110D6  50E3               	movf	plusw1,w,c
 13172  0110D8  1032               	iorwf	btemp^0,w,c
 13173  0110DA  A4D8               	btfss	status,2,c
 13174  0110DC  D002               	goto	l10184
 13175  0110DE  0E2B               	movlw	43
 13176  0110E0  D001               	goto	L11
 13177  0110E2                     l10184:
 13178  0110E2  0E2D               	movlw	45
 13179  0110E4                     L11:
 13180  0110E4  6E3C               	movwf	(btemp+10)^0,c
 13181  0110E6  0E00               	movlw	0
 13182  0110E8  6E3D               	movwf	(btemp+11)^0,c
 13183                           
 13184                           ;stkvar	_efgtoa$4645 @ sp[(-56)+4]
 13185  0110EA  0ECC               	movlw	-52
 13186  0110EC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13187  0110F2  0ECD               	movlw	-51
 13188  0110F4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13189                           
 13190                           ;stkvar	_efgtoa$4645 @ sp[(-56)+4]
 13191                           ;stkvar	_i @ sp[(-56)+36]
 13192  0110FA  0EEC               	movlw	-20
 13193  0110FC  006F FF8C  F03C    	movff	plusw1,btemp+10
 13194  011102  0EED               	movlw	-19
 13195  011104  006F FF8C  F03D    	movff	plusw1,btemp+11
 13196  01110A  0EA3               	movlw	low _dbuf
 13197  01110C  243C               	addwf	(btemp+10)^0,w,c
 13198  01110E  6ED9               	movwf	fsr2l,c
 13199  011110  0E01               	movlw	high _dbuf
 13200  011112  203D               	addwfc	(btemp+11)^0,w,c
 13201  011114  6EDA               	movwf	fsr2h,c
 13202  011116  0ECC               	movlw	-52
 13203  011118  006F FF8F FFDF     	movff	plusw1,indf2
 13204                           
 13205                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 13206                           ;stkvar	_w @ sp[(-56)+38]
 13207  01111E  50E1               	movf	fsr1l,w,c
 13208  011120  0FEE               	addlw	-18
 13209  011122  6ED9               	movwf	fsr2l,c
 13210  011124  50E2               	movf	fsr1h,w,c
 13211  011126  6EDA               	movwf	fsr2h,c
 13212  011128  0EFF               	movlw	255
 13213  01112A  22DA               	addwfc	fsr2h,f,c
 13214  01112C  06DE               	decf	postinc2,f,c
 13215  01112E  0E00               	movlw	0
 13216  011130  5ADD               	subwfb	postdec2,f,c
 13217                           
 13218                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 13219                           ;stkvar	_i @ sp[(-56)+36]
 13220  011132  50E1               	movf	fsr1l,w,c
 13221  011134  0FEC               	addlw	-20
 13222  011136  6ED9               	movwf	fsr2l,c
 13223  011138  50E2               	movf	fsr1h,w,c
 13224  01113A  6EDA               	movwf	fsr2h,c
 13225  01113C  0EFF               	movlw	255
 13226  01113E  22DA               	addwfc	fsr2h,f,c
 13227  011140  06DE               	decf	postinc2,f,c
 13228  011142  0E00               	movlw	0
 13229  011144  5ADD               	subwfb	postdec2,f,c
 13230  011146  0EBF               	movlw	191
 13231  011148  6E3C               	movwf	(btemp+10)^0,c
 13232  01114A  0EFF               	movlw	255
 13233  01114C  6E3D               	movwf	(btemp+11)^0,c
 13234                           
 13235                           ;stkvar	_c @ sp[(-56)+-7]
 13236  01114E  0EC1               	movlw	-63
 13237  011150  50E3               	movf	plusw1,w,c
 13238  011152  6E3A               	movwf	(btemp+8)^0,c
 13239  011154  6A3B               	clrf	(btemp+9)^0,c
 13240  011156  503C               	movf	(btemp+10)^0,w,c
 13241  011158  263A               	addwf	(btemp+8)^0,f,c
 13242  01115A  503D               	movf	(btemp+11)^0,w,c
 13243  01115C  223B               	addwfc	(btemp+9)^0,f,c
 13244  01115E  503B               	movf	(btemp+9)^0,w,c
 13245  011160  E106               	bnz	u9880
 13246  011162  0E1A               	movlw	26
 13247  011164  5C3A               	subwf	(btemp+8)^0,w,c
 13248  011166  B0D8               	btfsc	status,0,c
 13249  011168  D002               	goto	u9880
 13250  01116A  0E01               	movlw	1
 13251  01116C  D001               	goto	u9890
 13252  01116E                     u9880:
 13253  01116E  0E00               	movlw	0
 13254  011170                     u9890:
 13255  011170  6E3C               	movwf	(btemp+10)^0,c
 13256  011172  6A3D               	clrf	(btemp+11)^0,c
 13257                           
 13258                           ;stkvar	_efgtoa$4647 @ sp[(-56)+0]
 13259  011174  0EC8               	movlw	-56
 13260  011176  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13261  01117C  0EC9               	movlw	-55
 13262  01117E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13263                           
 13264                           ;stkvar	_efgtoa$4647 @ sp[(-56)+0]
 13265  011184  0EC8               	movlw	-56
 13266  011186  006F FF8C  F032    	movff	plusw1,btemp
 13267  01118C  0EC9               	movlw	-55
 13268  01118E  50E3               	movf	plusw1,w,c
 13269  011190  1032               	iorwf	btemp^0,w,c
 13270  011192  A4D8               	btfss	status,2,c
 13271  011194  D002               	goto	l10200
 13272  011196  0E65               	movlw	101
 13273  011198  D001               	goto	L12
 13274  01119A                     l10200:
 13275  01119A  0E45               	movlw	69
 13276  01119C                     L12:
 13277  01119C  6E3C               	movwf	(btemp+10)^0,c
 13278  01119E  0E00               	movlw	0
 13279  0111A0  6E3D               	movwf	(btemp+11)^0,c
 13280                           
 13281                           ;stkvar	_efgtoa$4646 @ sp[(-56)+2]
 13282  0111A2  0ECA               	movlw	-54
 13283  0111A4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13284  0111AA  0ECB               	movlw	-53
 13285  0111AC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13286                           
 13287                           ;stkvar	_efgtoa$4646 @ sp[(-56)+2]
 13288                           ;stkvar	_i @ sp[(-56)+36]
 13289  0111B2  0EEC               	movlw	-20
 13290  0111B4  006F FF8C  F03C    	movff	plusw1,btemp+10
 13291  0111BA  0EED               	movlw	-19
 13292  0111BC  006F FF8C  F03D    	movff	plusw1,btemp+11
 13293  0111C2  0EA3               	movlw	low _dbuf
 13294  0111C4  243C               	addwf	(btemp+10)^0,w,c
 13295  0111C6  6ED9               	movwf	fsr2l,c
 13296  0111C8  0E01               	movlw	high _dbuf
 13297  0111CA  203D               	addwfc	(btemp+11)^0,w,c
 13298  0111CC  6EDA               	movwf	fsr2h,c
 13299  0111CE  0ECA               	movlw	-54
 13300  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 13301                           
 13302                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 13303                           ;stkvar	_w @ sp[(-56)+38]
 13304  0111D6  50E1               	movf	fsr1l,w,c
 13305  0111D8  0FEE               	addlw	-18
 13306  0111DA  6ED9               	movwf	fsr2l,c
 13307  0111DC  50E2               	movf	fsr1h,w,c
 13308  0111DE  6EDA               	movwf	fsr2h,c
 13309  0111E0  0EFF               	movlw	255
 13310  0111E2  22DA               	addwfc	fsr2h,f,c
 13311  0111E4  06DE               	decf	postinc2,f,c
 13312  0111E6  0E00               	movlw	0
 13313  0111E8  5ADD               	subwfb	postdec2,f,c
 13314                           
 13315                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 13316                           ;stkvar	_i @ sp[(-56)+36]
 13317  0111EA  0EEC               	movlw	-20
 13318  0111EC  006F FF8C  F03C    	movff	plusw1,btemp+10
 13319  0111F2  0EED               	movlw	-19
 13320  0111F4  006F FF8C  F03D    	movff	plusw1,btemp+11
 13321  0111FA  0EA3               	movlw	low _dbuf
 13322  0111FC  243C               	addwf	(btemp+10)^0,w,c
 13323  0111FE  6E3A               	movwf	(btemp+8)^0,c
 13324  011200  0E01               	movlw	high _dbuf
 13325  011202  203D               	addwfc	(btemp+11)^0,w,c
 13326  011204  6E3B               	movwf	(btemp+9)^0,c
 13327  011206  0060  F0EB  FFE6   	movff	btemp+8,postinc1
 13328  01120C  0060  F0EF  FFE6   	movff	btemp+9,postinc1
 13329                           
 13330                           ;stkvar	_n @ sp[(-58)+32]
 13331  011212  0EA3               	movlw	low _dbuf
 13332  011214  6E3C               	movwf	(btemp+10)^0,c
 13333  011216  0E01               	movlw	high _dbuf
 13334  011218  6E3D               	movwf	(btemp+11)^0,c
 13335  01121A  0EE6               	movlw	-26
 13336  01121C  50E3               	movf	plusw1,w,c
 13337  01121E  263C               	addwf	(btemp+10)^0,f,c
 13338  011220  0EE7               	movlw	-25
 13339  011222  50E3               	movf	plusw1,w,c
 13340  011224  223D               	addwfc	(btemp+11)^0,f,c
 13341  011226  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 13342  01122C  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 13343  011232  ECC6  F0B9         	call	_strcpy	;wreg free
 13344  011236  EF16  F081         	goto	l9952
 13345  01123A                     l1933:
 13346                           
 13347                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 13348  01123A  0EC1               	movlw	193
 13349  01123C  26E1               	addwf	fsr1l,f,c
 13350  01123E  0EFF               	movlw	255
 13351  011240  22E2               	addwfc	fsr1h,f,c
 13352  011242  0012               	return		;funcret
 13353  011244                     __end_of_efgtoa:
 13354                           	opt callstack 0
 13355                           
 13356 ;; *************** function _tolower *****************
 13357 ;; Defined at:
 13358 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 13359 ;; Parameters:    Size  Location     Type
 13360 ;;  c               2  [STACK] int 
 13361 ;; Auto vars:     Size  Location     Type
 13362 ;;		None
 13363 ;; Return value:  Size  Location     Type
 13364 ;;                  2  [STACK] int 
 13365 ;; Registers used:
 13366 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 13367 ;; Tracked objects:
 13368 ;;		On entry : 0/5
 13369 ;;		On exit  : 0/0
 13370 ;;		Unchanged: 0/0
 13371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13376 ;;Total ram usage:        0 bytes
 13377 ;; Hardware stack levels used:    1
 13378 ;; Hardware stack levels required when called:    7
 13379 ;; This function calls:
 13380 ;;		_isupper
 13381 ;; This function is called by:
 13382 ;;		_efgtoa
 13383 ;;		_vfpfcnvrt
 13384 ;; This function uses a reentrant model
 13385 ;;
 13386                           
 13387                           	psect	text48
 13388  017D2E                     __ptext48:
 13389                           	opt callstack 0
 13390  017D2E                     _tolower:
 13391                           	opt callstack 0
 13392                           
 13393                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13394  017D2E  52E6               	movf	postinc1,f,c
 13395  017D30  52E6               	movf	postinc1,f,c
 13396                           
 13397                           ;stkvar	_c @ sp[(-2)+-2]
 13398                           
 13399                           ;incstack = 0
 13400  017D32  0EFC               	movlw	-4
 13401  017D34  50E3               	movf	plusw1,w,c
 13402  017D36  0FBF               	addlw	191
 13403  017D38  6E3C               	movwf	(btemp+10)^0,c
 13404  017D3A  0EFD               	movlw	-3
 13405  017D3C  006F FF8C  F03D    	movff	plusw1,btemp+11
 13406  017D42  0EFF               	movlw	255
 13407  017D44  223D               	addwfc	(btemp+11)^0,f,c
 13408  017D46  503D               	movf	(btemp+11)^0,w,c
 13409  017D48  E106               	bnz	u5240
 13410  017D4A  0E1A               	movlw	26
 13411  017D4C  5C3C               	subwf	(btemp+10)^0,w,c
 13412  017D4E  B0D8               	btfsc	status,0,c
 13413  017D50  D002               	goto	u5240
 13414  017D52  0E01               	movlw	1
 13415  017D54  D001               	goto	u5250
 13416  017D56                     u5240:
 13417  017D56  0E00               	movlw	0
 13418  017D58                     u5250:
 13419  017D58  6E3C               	movwf	(btemp+10)^0,c
 13420  017D5A  6A3D               	clrf	(btemp+11)^0,c
 13421                           
 13422                           ;stkvar	_tolower$5313 @ sp[(-2)+0]
 13423  017D5C  0EFE               	movlw	-2
 13424  017D5E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13425  017D64  0EFF               	movlw	-1
 13426  017D66  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13427                           
 13428                           ;stkvar	_tolower$5313 @ sp[(-2)+0]
 13429  017D6C  0EFE               	movlw	-2
 13430  017D6E  006F FF8C  F032    	movff	plusw1,btemp
 13431  017D74  0EFF               	movlw	-1
 13432  017D76  50E3               	movf	plusw1,w,c
 13433  017D78  1032               	iorwf	btemp^0,w,c
 13434  017D7A  B4D8               	btfsc	status,2,c
 13435  017D7C  D00D               	goto	l6716
 13436                           
 13437                           ;stkvar	_c @ sp[(-2)+-2]
 13438  017D7E  0EFC               	movlw	-4
 13439  017D80  006F FF8C  F032    	movff	plusw1,btemp
 13440  017D86  0EFD               	movlw	-3
 13441  017D88  006F FF8C  F033    	movff	plusw1,btemp+1
 13442  017D8E  0E20               	movlw	32
 13443  017D90  1232               	iorwf	btemp^0,f,c
 13444  017D92  0E00               	movlw	0
 13445  017D94  1233               	iorwf	(btemp+1)^0,f,c
 13446  017D96  D008               	goto	l2956
 13447  017D98                     l6716:
 13448                           
 13449                           ;stkvar	_c @ sp[(-2)+-2]
 13450  017D98  0EFC               	movlw	-4
 13451  017D9A  006F FF8C  F032    	movff	plusw1,btemp
 13452  017DA0  0EFD               	movlw	-3
 13453  017DA2  006F FF8C  F033    	movff	plusw1,btemp+1
 13454  017DA8                     l2956:
 13455                           
 13456                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13457  017DA8  52E5               	movf	postdec1,f,c
 13458  017DAA  52E5               	movf	postdec1,f,c
 13459  017DAC  52E5               	movf	postdec1,f,c
 13460  017DAE  52E5               	movf	postdec1,f,c
 13461  017DB0  0012               	return		;funcret
 13462  017DB2                     __end_of_tolower:
 13463                           	opt callstack 0
 13464                           
 13465 ;; *************** function _isupper *****************
 13466 ;; Defined at:
 13467 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 13468 ;; Parameters:    Size  Location     Type
 13469 ;;  c               2  [STACK] int 
 13470 ;; Auto vars:     Size  Location     Type
 13471 ;;		None
 13472 ;; Return value:  Size  Location     Type
 13473 ;;                  2  [STACK] int 
 13474 ;; Registers used:
 13475 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 13476 ;; Tracked objects:
 13477 ;;		On entry : 0/0
 13478 ;;		On exit  : 0/0
 13479 ;;		Unchanged: 0/0
 13480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13485 ;;Total ram usage:        0 bytes
 13486 ;; Hardware stack levels used:    1
 13487 ;; Hardware stack levels required when called:    6
 13488 ;; This function calls:
 13489 ;;		Nothing
 13490 ;; This function is called by:
 13491 ;;		_efgtoa
 13492 ;;		_xtoa
 13493 ;;		_vfpfcnvrt
 13494 ;;		_tolower
 13495 ;; This function uses a reentrant model
 13496 ;;
 13497                           
 13498                           	psect	text49
 13499  0187D2                     __ptext49:
 13500                           	opt callstack 0
 13501  0187D2                     _isupper:
 13502                           	opt callstack 17
 13503                           
 13504                           ;stkvar	_c @ sp[(0)+-2]
 13505                           
 13506                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13507                           ;incstack = 0
 13508  0187D2  0EFE               	movlw	-2
 13509  0187D4  50E3               	movf	plusw1,w,c
 13510  0187D6  0FBF               	addlw	191
 13511  0187D8  6E3C               	movwf	(btemp+10)^0,c
 13512  0187DA  0EFF               	movlw	-1
 13513  0187DC  006F FF8C  F03D    	movff	plusw1,btemp+11
 13514  0187E2  0EFF               	movlw	255
 13515  0187E4  223D               	addwfc	(btemp+11)^0,f,c
 13516  0187E6  503D               	movf	(btemp+11)^0,w,c
 13517  0187E8  E106               	bnz	u4640
 13518  0187EA  0E1A               	movlw	26
 13519  0187EC  5C3C               	subwf	(btemp+10)^0,w,c
 13520  0187EE  B0D8               	btfsc	status,0,c
 13521  0187F0  D002               	goto	u4640
 13522  0187F2  0E01               	movlw	1
 13523  0187F4  D001               	goto	u4650
 13524  0187F6                     u4640:
 13525  0187F6  0E00               	movlw	0
 13526  0187F8                     u4650:
 13527  0187F8  6E32               	movwf	btemp^0,c
 13528  0187FA  6A33               	clrf	(btemp+1)^0,c
 13529                           
 13530                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13531  0187FC  52E5               	movf	postdec1,f,c
 13532  0187FE  52E5               	movf	postdec1,f,c
 13533  018800  0012               	return		;funcret
 13534  018802                     __end_of_isupper:
 13535                           	opt callstack 0
 13536                           
 13537 ;; *************** function _strcpy *****************
 13538 ;; Defined at:
 13539 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 13540 ;; Parameters:    Size  Location     Type
 13541 ;;  dest            2  [STACK] PTR unsigned char 
 13542 ;;		 -> dbuf(80), 
 13543 ;;  src             2  [STACK] PTR const unsigned char 
 13544 ;;		 -> STR_51(4), STR_50(4), STR_47(4), STR_46(4), 
 13545 ;;		 -> dbuf(80), 
 13546 ;; Auto vars:     Size  Location     Type
 13547 ;;  d               2  [STACK] PTR unsigned char 
 13548 ;;		 -> dbuf(80), 
 13549 ;;  s               2  [STACK] PTR const unsigned char 
 13550 ;;		 -> STR_51(4), STR_50(4), STR_47(4), STR_46(4), 
 13551 ;;		 -> dbuf(80), 
 13552 ;; Return value:  Size  Location     Type
 13553 ;;                  2  [STACK] PTR unsigned char 
 13554 ;; Registers used:
 13555 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 13556 ;; Tracked objects:
 13557 ;;		On entry : 0/5
 13558 ;;		On exit  : 0/0
 13559 ;;		Unchanged: 0/0
 13560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13565 ;;Total ram usage:        0 bytes
 13566 ;; Hardware stack levels used:    1
 13567 ;; Hardware stack levels required when called:    6
 13568 ;; This function calls:
 13569 ;;		Nothing
 13570 ;; This function is called by:
 13571 ;;		_efgtoa
 13572 ;; This function uses a reentrant model
 13573 ;;
 13574                           
 13575                           	psect	text50
 13576  01738C                     __ptext50:
 13577                           	opt callstack 0
 13578  01738C                     _strcpy:
 13579                           	opt callstack 0
 13580                           
 13581                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13582  01738C  52E6               	movf	postinc1,f,c
 13583  01738E  52E6               	movf	postinc1,f,c
 13584  017390  52E6               	movf	postinc1,f,c
 13585  017392  52E6               	movf	postinc1,f,c
 13586                           
 13587                           ;stkvar	_src @ sp[(-4)+-4]
 13588                           
 13589                           ;incstack = 0
 13590  017394  0EF8               	movlw	-8
 13591  017396  006F FF8C  F03C    	movff	plusw1,btemp+10
 13592  01739C  0EF9               	movlw	-7
 13593  01739E  006F FF8C  F03D    	movff	plusw1,btemp+11
 13594                           
 13595                           ;stkvar	_s @ sp[(-4)+2]
 13596  0173A4  0EFF               	movlw	-1
 13597  0173A6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13598  0173AC  0EFE               	movlw	-2
 13599  0173AE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13600                           
 13601                           ;stkvar	_dest @ sp[(-4)+-2]
 13602  0173B4  0EFA               	movlw	-6
 13603  0173B6  006F FF8C  F03C    	movff	plusw1,btemp+10
 13604  0173BC  0EFB               	movlw	-5
 13605  0173BE  006F FF8C  F03D    	movff	plusw1,btemp+11
 13606                           
 13607                           ;stkvar	_d @ sp[(-4)+0]
 13608  0173C4  0EFD               	movlw	-3
 13609  0173C6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13610  0173CC  0EFC               	movlw	-4
 13611  0173CE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13612  0173D4                     l9826:
 13613                           
 13614                           ;stkvar	_s @ sp[(-4)+2]
 13615  0173D4  50E1               	movf	fsr1l,w,c
 13616  0173D6  0FFE               	addlw	-2
 13617  0173D8  6ED9               	movwf	fsr2l,c
 13618  0173DA  50E2               	movf	fsr1h,w,c
 13619  0173DC  6EDA               	movwf	fsr2h,c
 13620  0173DE  0EFF               	movlw	255
 13621  0173E0  22DA               	addwfc	fsr2h,f,c
 13622  0173E2  006F FF7C  F03C    	movff	indf2,btemp+10
 13623  0173E8  0E01               	movlw	1
 13624  0173EA  26DE               	addwf	postinc2,f,c
 13625  0173EC  006F FF7C  F03D    	movff	indf2,btemp+11
 13626  0173F2  0E00               	movlw	0
 13627  0173F4  22DD               	addwfc	postdec2,f,c
 13628  0173F6  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
 13629  0173FC  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
 13630  017402  0E00               	movlw	low (__mediumconst shr (0+16))
 13631  017404  6EF8               	movwf	tblptru,c
 13632                           
 13633                           ;stkvar	_d @ sp[(-4)+0]
 13634  017406  50E1               	movf	fsr1l,w,c
 13635  017408  0FFC               	addlw	-4
 13636  01740A  6ED9               	movwf	fsr2l,c
 13637  01740C  50E2               	movf	fsr1h,w,c
 13638  01740E  6EDA               	movwf	fsr2h,c
 13639  017410  0EFF               	movlw	255
 13640  017412  22DA               	addwfc	fsr2h,f,c
 13641  017414  006F FF7C  F03C    	movff	indf2,btemp+10
 13642  01741A  0E01               	movlw	1
 13643  01741C  26DE               	addwf	postinc2,f,c
 13644  01741E  006F FF7C  F03D    	movff	indf2,btemp+11
 13645  017424  0E00               	movlw	0
 13646  017426  22DD               	addwfc	postdec2,f,c
 13647  017428  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
 13648  01742E  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
 13649  017434  0E1F               	movlw	(high __ramtop+-1)
 13650  017436  64F7               	cpfsgt	tblptrh,c
 13651  017438  D003               	bra	u9197
 13652  01743A  0008               	tblrd		*
 13653  01743C  50F5               	movf	tablat,w,c
 13654  01743E  D007               	bra	u9190
 13655  017440                     u9197:
 13656  017440  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13657  017446  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13658  01744C  50EF               	movf	indf0,w,c
 13659  01744E                     u9190:
 13660  01744E  6EDF               	movwf	indf2,c
 13661  017450  50DF               	movf	indf2,w,c
 13662  017452  A4D8               	btfss	status,2,c
 13663  017454  D7BF               	goto	l9826
 13664                           
 13665                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 13666  017456  0EF8               	movlw	248
 13667  017458  26E1               	addwf	fsr1l,f,c
 13668  01745A  0EFF               	movlw	255
 13669  01745C  22E2               	addwfc	fsr1h,f,c
 13670  01745E  0012               	return		;funcret
 13671  017460                     __end_of_strcpy:
 13672                           	opt callstack 0
 13673                           
 13674 ;; *************** function _floorf *****************
 13675 ;; Defined at:
 13676 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 13677 ;; Parameters:    Size  Location     Type
 13678 ;;  x               4  [STACK] float 
 13679 ;; Auto vars:     Size  Location     Type
 13680 ;;  u               4  [STACK] struct .
 13681 ;;  m               4  [STACK] unsigned long 
 13682 ;;  e               2  [STACK] int 
 13683 ;; Return value:  Size  Location     Type
 13684 ;;                  4  [STACK] float 
 13685 ;; Registers used:
 13686 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 13687 ;; Tracked objects:
 13688 ;;		On entry : 0/5
 13689 ;;		On exit  : 0/0
 13690 ;;		Unchanged: 0/0
 13691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13696 ;;Total ram usage:        0 bytes
 13697 ;; Hardware stack levels used:    1
 13698 ;; Hardware stack levels required when called:    6
 13699 ;; This function calls:
 13700 ;;		Nothing
 13701 ;; This function is called by:
 13702 ;;		_efgtoa
 13703 ;; This function uses a reentrant model
 13704 ;;
 13705                           
 13706                           	psect	text51
 13707  014852                     __ptext51:
 13708                           	opt callstack 0
 13709  014852                     _floorf:
 13710                           	opt callstack 0
 13711                           
 13712                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 13713  014852  0E0A               	movlw	10
 13714  014854  26E1               	addwf	fsr1l,f,c
 13715  014856  0E00               	movlw	0
 13716  014858  22E2               	addwfc	fsr1h,f,c
 13717                           
 13718                           ;incstack = 0
 13719  01485A  0060  F2B4  F03A   	movff	floorf@F524,btemp+8
 13720  014860  0060  F2B8  F03B   	movff	floorf@F524+1,btemp+9
 13721  014866  0060  F2BC  F03C   	movff	floorf@F524+2,btemp+10
 13722  01486C  0060  F2C0  F03D   	movff	floorf@F524+3,btemp+11
 13723                           
 13724                           ;stkvar	_u @ sp[(-10)+0]
 13725  014872  0EF6               	movlw	-10
 13726  014874  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13727  01487A  0EF7               	movlw	-9
 13728  01487C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13729  014882  0EF8               	movlw	-8
 13730  014884  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13731  01488A  0EF9               	movlw	-7
 13732  01488C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13733                           
 13734                           ;stkvar	_x @ sp[(-10)+-4]
 13735  014892  0EF2               	movlw	-14
 13736  014894  006F FF8C  F03A    	movff	plusw1,btemp+8
 13737  01489A  0EF3               	movlw	-13
 13738  01489C  006F FF8C  F03B    	movff	plusw1,btemp+9
 13739  0148A2  0EF4               	movlw	-12
 13740  0148A4  006F FF8C  F03C    	movff	plusw1,btemp+10
 13741  0148AA  0EF5               	movlw	-11
 13742  0148AC  006F FF8C  F03D    	movff	plusw1,btemp+11
 13743                           
 13744                           ;stkvar	_u @ sp[(-10)+0]
 13745  0148B2  0EF6               	movlw	-10
 13746  0148B4  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13747  0148BA  0EF7               	movlw	-9
 13748  0148BC  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13749  0148C2  0EF8               	movlw	-8
 13750  0148C4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13751  0148CA  0EF9               	movlw	-7
 13752  0148CC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13753  0148D2  0E81               	movlw	129
 13754  0148D4  6E3C               	movwf	(btemp+10)^0,c
 13755  0148D6  0EFF               	movlw	255
 13756  0148D8  6E3D               	movwf	(btemp+11)^0,c
 13757                           
 13758                           ;stkvar	_u @ sp[(-10)+0]
 13759  0148DA  0EF6               	movlw	-10
 13760  0148DC  006F FF8C  F036    	movff	plusw1,btemp+4
 13761  0148E2  0EF7               	movlw	-9
 13762  0148E4  006F FF8C  F037    	movff	plusw1,btemp+5
 13763  0148EA  0EF8               	movlw	-8
 13764  0148EC  006F FF8C  F038    	movff	plusw1,btemp+6
 13765  0148F2  0EF9               	movlw	-7
 13766  0148F4  006F FF8C  F039    	movff	plusw1,btemp+7
 13767  0148FA  0E18               	movlw	24
 13768  0148FC  D005               	goto	u5270
 13769  0148FE                     u5275:
 13770  0148FE  90D8               	bcf	status,0,c
 13771  014900  3239               	rrcf	(btemp+7)^0,f,c
 13772  014902  3238               	rrcf	(btemp+6)^0,f,c
 13773  014904  3237               	rrcf	(btemp+5)^0,f,c
 13774  014906  3236               	rrcf	(btemp+4)^0,f,c
 13775  014908                     u5270:
 13776  014908  2EE8               	decfsz	wreg,f,c
 13777  01490A  D7F9               	goto	u5275
 13778  01490C  0060  F0D8  F03A   	movff	btemp+4,btemp+8
 13779  014912  0060  F0DC  F03B   	movff	btemp+5,btemp+9
 13780  014918  0EFF               	movlw	255
 13781  01491A  163A               	andwf	(btemp+8)^0,f,c
 13782  01491C  0E00               	movlw	0
 13783  01491E  163B               	andwf	(btemp+9)^0,f,c
 13784  014920  503C               	movf	(btemp+10)^0,w,c
 13785  014922  263A               	addwf	(btemp+8)^0,f,c
 13786  014924  503D               	movf	(btemp+11)^0,w,c
 13787  014926  223B               	addwfc	(btemp+9)^0,f,c
 13788                           
 13789                           ;stkvar	_e @ sp[(-10)+8]
 13790  014928  0EFE               	movlw	-2
 13791  01492A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13792  014930  0EFF               	movlw	-1
 13793  014932  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13794                           
 13795                           ;stkvar	_e @ sp[(-10)+8]
 13796  014938  0EFF               	movlw	-1
 13797  01493A  BEE3               	btfsc	plusw1,7,c
 13798  01493C  D019               	goto	l6730
 13799  01493E  0EFF               	movlw	-1
 13800  014940  50E3               	movf	plusw1,w,c
 13801  014942  E108               	bnz	u5280
 13802  014944  0EFE               	movlw	-2
 13803  014946  006F FF8C  F032    	movff	plusw1,btemp
 13804  01494C  0E17               	movlw	23
 13805  01494E  5E32               	subwf	btemp^0,f,c
 13806  014950  A0D8               	btfss	status,0,c
 13807  014952  D00E               	goto	l6730
 13808  014954                     u5280:
 13809                           
 13810                           ;stkvar	_x @ sp[(-10)+-4]
 13811  014954  0EF2               	movlw	-14
 13812  014956  006F FF8C  F032    	movff	plusw1,btemp
 13813  01495C  0EF3               	movlw	-13
 13814  01495E  006F FF8C  F033    	movff	plusw1,btemp+1
 13815  014964  0EF4               	movlw	-12
 13816  014966  006F FF8C  F034    	movff	plusw1,btemp+2
 13817  01496C  0EF5               	movlw	-11
 13818  01496E  D11F               	goto	L13
 13819  014970                     l6730:
 13820                           
 13821                           ;stkvar	_e @ sp[(-10)+8]
 13822  014970  0EFF               	movlw	-1
 13823  014972  BEE3               	btfsc	plusw1,7,c
 13824  014974  D0B4               	goto	l6746
 13825                           
 13826                           ;stkvar	_e @ sp[(-10)+8]
 13827  014976  0EFE               	movlw	-2
 13828  014978  006F FF8C  F03D    	movff	plusw1,btemp+11
 13829  01497E  0EFF               	movlw	255
 13830  014980  6E36               	movwf	(btemp+4)^0,c
 13831  014982  0EFF               	movlw	255
 13832  014984  6E37               	movwf	(btemp+5)^0,c
 13833  014986  0E7F               	movlw	127
 13834  014988  6E38               	movwf	(btemp+6)^0,c
 13835  01498A  0E00               	movlw	0
 13836  01498C  6E39               	movwf	(btemp+7)^0,c
 13837  01498E                     u5305:
 13838  01498E  663D               	tstfsz	(btemp+11)^0,c
 13839  014990  D001               	goto	u5306
 13840  014992  D007               	goto	u5307
 13841  014994                     u5306:
 13842  014994  3439               	rlcf	(btemp+7)^0,w,c
 13843  014996  3239               	rrcf	(btemp+7)^0,f,c
 13844  014998  3238               	rrcf	(btemp+6)^0,f,c
 13845  01499A  3237               	rrcf	(btemp+5)^0,f,c
 13846  01499C  3236               	rrcf	(btemp+4)^0,f,c
 13847  01499E  2E3D               	decfsz	(btemp+11)^0,f,c
 13848  0149A0  D7F6               	goto	u5305
 13849  0149A2                     u5307:
 13850                           
 13851                           ;stkvar	_m @ sp[(-10)+4]
 13852  0149A2  0EFA               	movlw	-6
 13853  0149A4  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 13854  0149AA  0EFB               	movlw	-5
 13855  0149AC  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 13856  0149B2  0EFC               	movlw	-4
 13857  0149B4  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 13858  0149BA  0EFD               	movlw	-3
 13859  0149BC  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 13860                           
 13861                           ;stkvar	_m @ sp[(-10)+4]
 13862                           ;stkvar	_u @ sp[(-10)+0]
 13863  0149C2  0EF6               	movlw	-10
 13864  0149C4  006F FF8C  F03A    	movff	plusw1,btemp+8
 13865  0149CA  0EF7               	movlw	-9
 13866  0149CC  006F FF8C  F03B    	movff	plusw1,btemp+9
 13867  0149D2  0EF8               	movlw	-8
 13868  0149D4  006F FF8C  F03C    	movff	plusw1,btemp+10
 13869  0149DA  0EF9               	movlw	-7
 13870  0149DC  006F FF8C  F03D    	movff	plusw1,btemp+11
 13871  0149E2  0EFA               	movlw	-6
 13872  0149E4  50E3               	movf	plusw1,w,c
 13873  0149E6  163A               	andwf	(btemp+8)^0,f,c
 13874  0149E8  0EFB               	movlw	-5
 13875  0149EA  50E3               	movf	plusw1,w,c
 13876  0149EC  163B               	andwf	(btemp+9)^0,f,c
 13877  0149EE  0EFC               	movlw	-4
 13878  0149F0  50E3               	movf	plusw1,w,c
 13879  0149F2  163C               	andwf	(btemp+10)^0,f,c
 13880  0149F4  0EFD               	movlw	-3
 13881  0149F6  50E3               	movf	plusw1,w,c
 13882  0149F8  163D               	andwf	(btemp+11)^0,f,c
 13883  0149FA  503A               	movf	(btemp+8)^0,w,c
 13884  0149FC  103B               	iorwf	(btemp+9)^0,w,c
 13885  0149FE  103C               	iorwf	(btemp+10)^0,w,c
 13886  014A00  103D               	iorwf	(btemp+11)^0,w,c
 13887  014A02  B4D8               	btfsc	status,2,c
 13888  014A04  D7A7               	goto	u5280
 13889                           
 13890                           ;stkvar	_u @ sp[(-10)+0]
 13891  014A06  0EF6               	movlw	-10
 13892  014A08  006F FF8C  F03A    	movff	plusw1,btemp+8
 13893  014A0E  0EF7               	movlw	-9
 13894  014A10  006F FF8C  F03B    	movff	plusw1,btemp+9
 13895  014A16  0EF8               	movlw	-8
 13896  014A18  006F FF8C  F03C    	movff	plusw1,btemp+10
 13897  014A1E  0EF9               	movlw	-7
 13898  014A20  006F FF8C  F03D    	movff	plusw1,btemp+11
 13899  014A26  0E20               	movlw	32
 13900  014A28  D005               	goto	u5320
 13901  014A2A                     u5325:
 13902  014A2A  90D8               	bcf	status,0,c
 13903  014A2C  323D               	rrcf	(btemp+11)^0,f,c
 13904  014A2E  323C               	rrcf	(btemp+10)^0,f,c
 13905  014A30  323B               	rrcf	(btemp+9)^0,f,c
 13906  014A32  323A               	rrcf	(btemp+8)^0,f,c
 13907  014A34                     u5320:
 13908  014A34  2EE8               	decfsz	wreg,f,c
 13909  014A36  D7F9               	goto	u5325
 13910  014A38  503A               	movf	(btemp+8)^0,w,c
 13911  014A3A  B4D8               	btfsc	status,2,c
 13912  014A3C  D028               	goto	l6744
 13913                           
 13914                           ;stkvar	_m @ sp[(-10)+4]
 13915                           ;stkvar	_u @ sp[(-10)+0]
 13916  014A3E  0EF6               	movlw	-10
 13917  014A40  50E3               	movf	plusw1,w,c
 13918  014A42  6E32               	movwf	btemp^0,c
 13919  014A44  0EFA               	movlw	-6
 13920  014A46  50E3               	movf	plusw1,w,c
 13921  014A48  2632               	addwf	btemp^0,f,c
 13922  014A4A  0EF6               	movlw	-10
 13923  014A4C  0060  F0CB  FFE3   	movff	btemp,plusw1
 13924  014A52  0EF7               	movlw	-9
 13925  014A54  50E3               	movf	plusw1,w,c
 13926  014A56  6E32               	movwf	btemp^0,c
 13927  014A58  0EFB               	movlw	-5
 13928  014A5A  50E3               	movf	plusw1,w,c
 13929  014A5C  2232               	addwfc	btemp^0,f,c
 13930  014A5E  0EF7               	movlw	-9
 13931  014A60  0060  F0CB  FFE3   	movff	btemp,plusw1
 13932  014A66  0EF8               	movlw	-8
 13933  014A68  50E3               	movf	plusw1,w,c
 13934  014A6A  6E32               	movwf	btemp^0,c
 13935  014A6C  0EFC               	movlw	-4
 13936  014A6E  50E3               	movf	plusw1,w,c
 13937  014A70  2232               	addwfc	btemp^0,f,c
 13938  014A72  0EF8               	movlw	-8
 13939  014A74  0060  F0CB  FFE3   	movff	btemp,plusw1
 13940  014A7A  0EF9               	movlw	-7
 13941  014A7C  50E3               	movf	plusw1,w,c
 13942  014A7E  6E32               	movwf	btemp^0,c
 13943  014A80  0EFD               	movlw	-3
 13944  014A82  50E3               	movf	plusw1,w,c
 13945  014A84  2232               	addwfc	btemp^0,f,c
 13946  014A86  0EF9               	movlw	-7
 13947  014A88  0060  F0CB  FFE3   	movff	btemp,plusw1
 13948  014A8E                     l6744:
 13949                           
 13950                           ;stkvar	_m @ sp[(-10)+4]
 13951  014A8E  0EFA               	movlw	-6
 13952  014A90  006F FF8C  F03A    	movff	plusw1,btemp+8
 13953  014A96  0EFB               	movlw	-5
 13954  014A98  006F FF8C  F03B    	movff	plusw1,btemp+9
 13955  014A9E  0EFC               	movlw	-4
 13956  014AA0  006F FF8C  F03C    	movff	plusw1,btemp+10
 13957  014AA6  0EFD               	movlw	-3
 13958  014AA8  006F FF8C  F03D    	movff	plusw1,btemp+11
 13959  014AAE  1C3A               	comf	(btemp+8)^0,w,c
 13960  014AB0  6E36               	movwf	(btemp+4)^0,c
 13961  014AB2  1C3B               	comf	(btemp+9)^0,w,c
 13962  014AB4  6E37               	movwf	(btemp+5)^0,c
 13963  014AB6  1C3C               	comf	(btemp+10)^0,w,c
 13964  014AB8  6E38               	movwf	(btemp+6)^0,c
 13965  014ABA  1C3D               	comf	(btemp+11)^0,w,c
 13966  014ABC  6E39               	movwf	(btemp+7)^0,c
 13967                           
 13968                           ;stkvar	_u @ sp[(-10)+0]
 13969  014ABE  50E1               	movf	fsr1l,w,c
 13970  014AC0  0FF6               	addlw	-10
 13971  014AC2  6ED9               	movwf	fsr2l,c
 13972  014AC4  50E2               	movf	fsr1h,w,c
 13973  014AC6  6EDA               	movwf	fsr2h,c
 13974  014AC8  0EFF               	movlw	255
 13975  014ACA  22DA               	addwfc	fsr2h,f,c
 13976  014ACC  5036               	movf	(btemp+4)^0,w,c
 13977  014ACE  16DE               	andwf	postinc2,f,c
 13978  014AD0  5037               	movf	(btemp+5)^0,w,c
 13979  014AD2  16DE               	andwf	postinc2,f,c
 13980  014AD4  5038               	movf	(btemp+6)^0,w,c
 13981  014AD6  16DE               	andwf	postinc2,f,c
 13982  014AD8  5039               	movf	(btemp+7)^0,w,c
 13983  014ADA  16DE               	andwf	postinc2,f,c
 13984  014ADC  D05B               	goto	l6754
 13985  014ADE                     l6746:
 13986                           
 13987                           ;stkvar	_u @ sp[(-10)+0]
 13988  014ADE  0EF6               	movlw	-10
 13989  014AE0  006F FF8C  F03A    	movff	plusw1,btemp+8
 13990  014AE6  0EF7               	movlw	-9
 13991  014AE8  006F FF8C  F03B    	movff	plusw1,btemp+9
 13992  014AEE  0EF8               	movlw	-8
 13993  014AF0  006F FF8C  F03C    	movff	plusw1,btemp+10
 13994  014AF6  0EF9               	movlw	-7
 13995  014AF8  006F FF8C  F03D    	movff	plusw1,btemp+11
 13996  014AFE  0E20               	movlw	32
 13997  014B00  D005               	goto	u5340
 13998  014B02                     u5345:
 13999  014B02  90D8               	bcf	status,0,c
 14000  014B04  323D               	rrcf	(btemp+11)^0,f,c
 14001  014B06  323C               	rrcf	(btemp+10)^0,f,c
 14002  014B08  323B               	rrcf	(btemp+9)^0,f,c
 14003  014B0A  323A               	rrcf	(btemp+8)^0,f,c
 14004  014B0C                     u5340:
 14005  014B0C  2EE8               	decfsz	wreg,f,c
 14006  014B0E  D7F9               	goto	u5345
 14007  014B10  663A               	tstfsz	(btemp+8)^0,c
 14008  014B12  D009               	goto	l6750
 14009                           
 14010                           ;stkvar	_u @ sp[(-10)+0]
 14011  014B14  0EF6               	movlw	-10
 14012  014B16  6AE3               	clrf	plusw1,c
 14013  014B18  0EF7               	movlw	-9
 14014  014B1A  6AE3               	clrf	plusw1,c
 14015  014B1C  0EF8               	movlw	-8
 14016  014B1E  6AE3               	clrf	plusw1,c
 14017  014B20  0EF9               	movlw	-7
 14018  014B22  6AE3               	clrf	plusw1,c
 14019  014B24  D037               	goto	l6754
 14020  014B26                     l6750:
 14021                           
 14022                           ;stkvar	_u @ sp[(-10)+0]
 14023  014B26  0EF6               	movlw	-10
 14024  014B28  006F FF8C  F03A    	movff	plusw1,btemp+8
 14025  014B2E  0EF7               	movlw	-9
 14026  014B30  006F FF8C  F03B    	movff	plusw1,btemp+9
 14027  014B36  0EF8               	movlw	-8
 14028  014B38  006F FF8C  F03C    	movff	plusw1,btemp+10
 14029  014B3E  0EF9               	movlw	-7
 14030  014B40  006F FF8C  F03D    	movff	plusw1,btemp+11
 14031  014B46  90D8               	bcf	status,0,c
 14032  014B48  343A               	rlcf	(btemp+8)^0,w,c
 14033  014B4A  6E36               	movwf	(btemp+4)^0,c
 14034  014B4C  343B               	rlcf	(btemp+9)^0,w,c
 14035  014B4E  6E37               	movwf	(btemp+5)^0,c
 14036  014B50  343C               	rlcf	(btemp+10)^0,w,c
 14037  014B52  6E38               	movwf	(btemp+6)^0,c
 14038  014B54  343D               	rlcf	(btemp+11)^0,w,c
 14039  014B56  6E39               	movwf	(btemp+7)^0,c
 14040  014B58  5036               	movf	(btemp+4)^0,w,c
 14041  014B5A  1037               	iorwf	(btemp+5)^0,w,c
 14042  014B5C  1038               	iorwf	(btemp+6)^0,w,c
 14043  014B5E  1039               	iorwf	(btemp+7)^0,w,c
 14044  014B60  B4D8               	btfsc	status,2,c
 14045  014B62  D018               	goto	l6754
 14046  014B64  0E00               	movlw	0
 14047  014B66  6E3A               	movwf	(btemp+8)^0,c
 14048  014B68  0E00               	movlw	0
 14049  014B6A  6E3B               	movwf	(btemp+9)^0,c
 14050  014B6C  0E80               	movlw	128
 14051  014B6E  6E3C               	movwf	(btemp+10)^0,c
 14052  014B70  0EBF               	movlw	191
 14053  014B72  6E3D               	movwf	(btemp+11)^0,c
 14054                           
 14055                           ;stkvar	_u @ sp[(-10)+0]
 14056  014B74  0EF6               	movlw	-10
 14057  014B76  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14058  014B7C  0EF7               	movlw	-9
 14059  014B7E  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14060  014B84  0EF8               	movlw	-8
 14061  014B86  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14062  014B8C  0EF9               	movlw	-7
 14063  014B8E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14064  014B94                     l6754:
 14065                           
 14066                           ;stkvar	_u @ sp[(-10)+0]
 14067  014B94  0EF6               	movlw	-10
 14068  014B96  006F FF8C  F032    	movff	plusw1,btemp
 14069  014B9C  0EF7               	movlw	-9
 14070  014B9E  006F FF8C  F033    	movff	plusw1,btemp+1
 14071  014BA4  0EF8               	movlw	-8
 14072  014BA6  006F FF8C  F034    	movff	plusw1,btemp+2
 14073  014BAC  0EF9               	movlw	-7
 14074  014BAE                     L13:
 14075  014BAE  006F FF8C  F035    	movff	plusw1,btemp+3
 14076                           
 14077                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14078  014BB4  0EF2               	movlw	242
 14079  014BB6  26E1               	addwf	fsr1l,f,c
 14080  014BB8  0EFF               	movlw	255
 14081  014BBA  22E2               	addwfc	fsr1h,f,c
 14082  014BBC  0012               	return		;funcret
 14083  014BBE                     __end_of_floorf:
 14084                           	opt callstack 0
 14085                           
 14086 ;; *************** function ___fpclassifyf *****************
 14087 ;; Defined at:
 14088 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 14089 ;; Parameters:    Size  Location     Type
 14090 ;;  x               4  [STACK] float 
 14091 ;; Auto vars:     Size  Location     Type
 14092 ;;  u               4  [STACK] struct .
 14093 ;;  e               2  [STACK] int 
 14094 ;; Return value:  Size  Location     Type
 14095 ;;                  2  [STACK] int 
 14096 ;; Registers used:
 14097 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 14098 ;; Tracked objects:
 14099 ;;		On entry : 0/5
 14100 ;;		On exit  : 0/0
 14101 ;;		Unchanged: 0/0
 14102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14107 ;;Total ram usage:        0 bytes
 14108 ;; Hardware stack levels used:    1
 14109 ;; Hardware stack levels required when called:    6
 14110 ;; This function calls:
 14111 ;;		Nothing
 14112 ;; This function is called by:
 14113 ;;		_efgtoa
 14114 ;; This function uses a reentrant model
 14115 ;;
 14116                           
 14117                           	psect	text52
 14118  016316                     __ptext52:
 14119                           	opt callstack 0
 14120  016316                     ___fpclassifyf:
 14121                           	opt callstack 0
 14122                           
 14123                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14124  016316  0E06               	movlw	6
 14125  016318  26E1               	addwf	fsr1l,f,c
 14126  01631A  0E00               	movlw	0
 14127  01631C  22E2               	addwfc	fsr1h,f,c
 14128                           
 14129                           ;incstack = 0
 14130  01631E  0060  F2C4  F03A   	movff	___fpclassifyf@F463,btemp+8
 14131  016324  0060  F2C8  F03B   	movff	___fpclassifyf@F463+1,btemp+9
 14132  01632A  0060  F2CC  F03C   	movff	___fpclassifyf@F463+2,btemp+10
 14133  016330  0060  F2D0  F03D   	movff	___fpclassifyf@F463+3,btemp+11
 14134                           
 14135                           ;stkvar	_u @ sp[(-6)+0]
 14136  016336  0EFA               	movlw	-6
 14137  016338  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14138  01633E  0EFB               	movlw	-5
 14139  016340  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14140  016346  0EFC               	movlw	-4
 14141  016348  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14142  01634E  0EFD               	movlw	-3
 14143  016350  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14144                           
 14145                           ;stkvar	_x @ sp[(-6)+-4]
 14146  016356  0EF6               	movlw	-10
 14147  016358  006F FF8C  F03A    	movff	plusw1,btemp+8
 14148  01635E  0EF7               	movlw	-9
 14149  016360  006F FF8C  F03B    	movff	plusw1,btemp+9
 14150  016366  0EF8               	movlw	-8
 14151  016368  006F FF8C  F03C    	movff	plusw1,btemp+10
 14152  01636E  0EF9               	movlw	-7
 14153  016370  006F FF8C  F03D    	movff	plusw1,btemp+11
 14154                           
 14155                           ;stkvar	_u @ sp[(-6)+0]
 14156  016376  0EFA               	movlw	-6
 14157  016378  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14158  01637E  0EFB               	movlw	-5
 14159  016380  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14160  016386  0EFC               	movlw	-4
 14161  016388  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14162  01638E  0EFD               	movlw	-3
 14163  016390  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14164                           
 14165                           ;stkvar	_u @ sp[(-6)+0]
 14166  016396  0EFA               	movlw	-6
 14167  016398  006F FF8C  F03A    	movff	plusw1,btemp+8
 14168  01639E  0EFB               	movlw	-5
 14169  0163A0  006F FF8C  F03B    	movff	plusw1,btemp+9
 14170  0163A6  0EFC               	movlw	-4
 14171  0163A8  006F FF8C  F03C    	movff	plusw1,btemp+10
 14172  0163AE  0EFD               	movlw	-3
 14173  0163B0  006F FF8C  F03D    	movff	plusw1,btemp+11
 14174  0163B6  0E18               	movlw	24
 14175  0163B8  D005               	goto	u5150
 14176  0163BA                     u5155:
 14177  0163BA  90D8               	bcf	status,0,c
 14178  0163BC  323D               	rrcf	(btemp+11)^0,f,c
 14179  0163BE  323C               	rrcf	(btemp+10)^0,f,c
 14180  0163C0  323B               	rrcf	(btemp+9)^0,f,c
 14181  0163C2  323A               	rrcf	(btemp+8)^0,f,c
 14182  0163C4                     u5150:
 14183  0163C4  2EE8               	decfsz	wreg,f,c
 14184  0163C6  D7F9               	goto	u5155
 14185  0163C8  0060  F0E8  F038   	movff	btemp+8,btemp+6
 14186  0163CE  0060  F0EC  F039   	movff	btemp+9,btemp+7
 14187  0163D4  0EFF               	movlw	255
 14188  0163D6  1638               	andwf	(btemp+6)^0,f,c
 14189  0163D8  0E00               	movlw	0
 14190  0163DA  1639               	andwf	(btemp+7)^0,f,c
 14191                           
 14192                           ;stkvar	_e @ sp[(-6)+4]
 14193  0163DC  0EFE               	movlw	-2
 14194  0163DE  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 14195  0163E4  0EFF               	movlw	-1
 14196  0163E6  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 14197                           
 14198                           ;stkvar	_e @ sp[(-6)+4]
 14199  0163EC  0EFE               	movlw	-2
 14200  0163EE  006F FF8C  F032    	movff	plusw1,btemp
 14201  0163F4  0EFF               	movlw	-1
 14202  0163F6  50E3               	movf	plusw1,w,c
 14203  0163F8  1032               	iorwf	btemp^0,w,c
 14204  0163FA  A4D8               	btfss	status,2,c
 14205  0163FC  D023               	goto	l6692
 14206                           
 14207                           ;stkvar	_u @ sp[(-6)+0]
 14208  0163FE  0EFA               	movlw	-6
 14209  016400  006F FF8C  F03A    	movff	plusw1,btemp+8
 14210  016406  0EFB               	movlw	-5
 14211  016408  006F FF8C  F03B    	movff	plusw1,btemp+9
 14212  01640E  0EFC               	movlw	-4
 14213  016410  006F FF8C  F03C    	movff	plusw1,btemp+10
 14214  016416  0EFD               	movlw	-3
 14215  016418  006F FF8C  F03D    	movff	plusw1,btemp+11
 14216  01641E  90D8               	bcf	status,0,c
 14217  016420  343A               	rlcf	(btemp+8)^0,w,c
 14218  016422  6E36               	movwf	(btemp+4)^0,c
 14219  016424  343B               	rlcf	(btemp+9)^0,w,c
 14220  016426  6E37               	movwf	(btemp+5)^0,c
 14221  016428  343C               	rlcf	(btemp+10)^0,w,c
 14222  01642A  6E38               	movwf	(btemp+6)^0,c
 14223  01642C  343D               	rlcf	(btemp+11)^0,w,c
 14224  01642E  6E39               	movwf	(btemp+7)^0,c
 14225  016430  5036               	movf	(btemp+4)^0,w,c
 14226  016432  1037               	iorwf	(btemp+5)^0,w,c
 14227  016434  1038               	iorwf	(btemp+6)^0,w,c
 14228  016436  1039               	iorwf	(btemp+7)^0,w,c
 14229  016438  A4D8               	btfss	status,2,c
 14230  01643A  D002               	goto	l6688
 14231  01643C  0E02               	movlw	2
 14232  01643E  D02E               	goto	L14
 14233  016440                     l6688:
 14234  016440  0E03               	movlw	3
 14235  016442  D02C               	goto	L14
 14236  016444                     l6692:
 14237                           
 14238                           ;stkvar	_e @ sp[(-6)+4]
 14239  016444  0EFE               	movlw	-2
 14240  016446  28E3               	incf	plusw1,w,c
 14241  016448  E128               	bnz	l6698
 14242  01644A  0EFF               	movlw	-1
 14243  01644C  50E3               	movf	plusw1,w,c
 14244  01644E  A4D8               	btfss	status,2,c
 14245  016450  D024               	goto	l6698
 14246                           
 14247                           ;stkvar	_u @ sp[(-6)+0]
 14248  016452  0EFA               	movlw	-6
 14249  016454  006F FF8C  F03A    	movff	plusw1,btemp+8
 14250  01645A  0EFB               	movlw	-5
 14251  01645C  006F FF8C  F03B    	movff	plusw1,btemp+9
 14252  016462  0EFC               	movlw	-4
 14253  016464  006F FF8C  F03C    	movff	plusw1,btemp+10
 14254  01646A  0EFD               	movlw	-3
 14255  01646C  006F FF8C  F03D    	movff	plusw1,btemp+11
 14256  016472  0E09               	movlw	9
 14257  016474                     u5195:
 14258  016474  90D8               	bcf	status,0,c
 14259  016476  363A               	rlcf	(btemp+8)^0,f,c
 14260  016478  363B               	rlcf	(btemp+9)^0,f,c
 14261  01647A  363C               	rlcf	(btemp+10)^0,f,c
 14262  01647C  363D               	rlcf	(btemp+11)^0,f,c
 14263  01647E  2EE8               	decfsz	wreg,f,c
 14264  016480  D7F9               	goto	u5195
 14265  016482  503A               	movf	(btemp+8)^0,w,c
 14266  016484  103B               	iorwf	(btemp+9)^0,w,c
 14267  016486  103C               	iorwf	(btemp+10)^0,w,c
 14268  016488  103D               	iorwf	(btemp+11)^0,w,c
 14269  01648A  A4D8               	btfss	status,2,c
 14270  01648C  D002               	goto	u5200
 14271  01648E  0E01               	movlw	1
 14272  016490  D001               	goto	u5210
 14273  016492                     u5200:
 14274  016492  0E00               	movlw	0
 14275  016494                     u5210:
 14276  016494  6E32               	movwf	btemp^0,c
 14277  016496  6A33               	clrf	(btemp+1)^0,c
 14278  016498  D004               	goto	l2792
 14279  01649A                     l6698:
 14280  01649A  0E04               	movlw	4
 14281  01649C                     L14:
 14282  01649C  6E32               	movwf	btemp^0,c
 14283  01649E  0E00               	movlw	0
 14284  0164A0  6E33               	movwf	(btemp+1)^0,c
 14285  0164A2                     l2792:
 14286                           
 14287                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 14288  0164A2  0EF6               	movlw	246
 14289  0164A4  26E1               	addwf	fsr1l,f,c
 14290  0164A6  0EFF               	movlw	255
 14291  0164A8  22E2               	addwfc	fsr1h,f,c
 14292  0164AA  0012               	return		;funcret
 14293  0164AC                     __end_of___fpclassifyf:
 14294                           	opt callstack 0
 14295                           
 14296 ;; *************** function ___fltol *****************
 14297 ;; Defined at:
 14298 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 14299 ;; Parameters:    Size  Location     Type
 14300 ;;  f1              4  [STACK] int 
 14301 ;; Auto vars:     Size  Location     Type
 14302 ;;  exp1            1  [STACK] unsigned char 
 14303 ;;  sign1           1  [STACK] unsigned char 
 14304 ;; Return value:  Size  Location     Type
 14305 ;;                  4  [STACK] long 
 14306 ;; Registers used:
 14307 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 14308 ;; Tracked objects:
 14309 ;;		On entry : 0/5
 14310 ;;		On exit  : 0/0
 14311 ;;		Unchanged: 0/0
 14312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14317 ;;Total ram usage:        0 bytes
 14318 ;; Hardware stack levels used:    1
 14319 ;; Hardware stack levels required when called:    6
 14320 ;; This function calls:
 14321 ;;		Nothing
 14322 ;; This function is called by:
 14323 ;;		_efgtoa
 14324 ;; This function uses a reentrant model
 14325 ;;
 14326                           
 14327                           	psect	text53
 14328  0164AC                     __ptext53:
 14329                           	opt callstack 0
 14330  0164AC                     ___fltol:
 14331                           	opt callstack 0
 14332                           
 14333                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14334  0164AC  52E6               	movf	postinc1,f,c
 14335  0164AE  52E6               	movf	postinc1,f,c
 14336                           
 14337                           ;stkvar	_f1 @ sp[(-2)+-4]
 14338                           
 14339                           ;incstack = 0
 14340  0164B0  0EFA               	movlw	-6
 14341  0164B2  006F FF8C  F03A    	movff	plusw1,btemp+8
 14342  0164B8  0EFB               	movlw	-5
 14343  0164BA  006F FF8C  F03B    	movff	plusw1,btemp+9
 14344  0164C0  0EFC               	movlw	-4
 14345  0164C2  006F FF8C  F03C    	movff	plusw1,btemp+10
 14346  0164C8  0EFD               	movlw	-3
 14347  0164CA  006F FF8C  F03D    	movff	plusw1,btemp+11
 14348  0164D0  0E18               	movlw	24
 14349  0164D2  D005               	goto	u6360
 14350  0164D4                     u6365:
 14351  0164D4  90D8               	bcf	status,0,c
 14352  0164D6  323D               	rrcf	(btemp+11)^0,f,c
 14353  0164D8  323C               	rrcf	(btemp+10)^0,f,c
 14354  0164DA  323B               	rrcf	(btemp+9)^0,f,c
 14355  0164DC  323A               	rrcf	(btemp+8)^0,f,c
 14356  0164DE                     u6360:
 14357  0164DE  2EE8               	decfsz	wreg,f,c
 14358  0164E0  D7F9               	goto	u6365
 14359                           
 14360                           ;stkvar	_exp1 @ sp[(-2)+0]
 14361  0164E2  0EFE               	movlw	-2
 14362  0164E4  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14363  0164EA  0EFE               	movlw	-2
 14364  0164EC  50E3               	movf	plusw1,w,c
 14365  0164EE  A4D8               	btfss	status,2,c
 14366  0164F0  D006               	goto	l7318
 14367  0164F2                     u6370:
 14368  0164F2  0E00               	movlw	0
 14369  0164F4  6E32               	movwf	btemp^0,c
 14370  0164F6  6A33               	clrf	(btemp+1)^0,c
 14371  0164F8  6A34               	clrf	(btemp+2)^0,c
 14372  0164FA  6A35               	clrf	(btemp+3)^0,c
 14373  0164FC  D08B               	goto	l2408
 14374  0164FE                     l7318:
 14375                           
 14376                           ;stkvar	_f1 @ sp[(-2)+-4]
 14377  0164FE  0EFA               	movlw	-6
 14378  016500  006F FF8C  F03A    	movff	plusw1,btemp+8
 14379  016506  0EFB               	movlw	-5
 14380  016508  006F FF8C  F03B    	movff	plusw1,btemp+9
 14381  01650E  0EFC               	movlw	-4
 14382  016510  006F FF8C  F03C    	movff	plusw1,btemp+10
 14383  016516  0EFD               	movlw	-3
 14384  016518  006F FF8C  F03D    	movff	plusw1,btemp+11
 14385  01651E  0E20               	movlw	32
 14386  016520  D005               	goto	u6380
 14387  016522                     u6385:
 14388  016522  90D8               	bcf	status,0,c
 14389  016524  323D               	rrcf	(btemp+11)^0,f,c
 14390  016526  323C               	rrcf	(btemp+10)^0,f,c
 14391  016528  323B               	rrcf	(btemp+9)^0,f,c
 14392  01652A  323A               	rrcf	(btemp+8)^0,f,c
 14393  01652C                     u6380:
 14394  01652C  2EE8               	decfsz	wreg,f,c
 14395  01652E  D7F9               	goto	u6385
 14396                           
 14397                           ;stkvar	_sign1 @ sp[(-2)+1]
 14398  016530  0EFF               	movlw	-1
 14399  016532  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14400                           
 14401                           ;stkvar	_f1 @ sp[(-2)+-4]
 14402  016538  0EFC               	movlw	-4
 14403  01653A  8EE3               	bsf	plusw1,7,c
 14404                           
 14405                           ;stkvar	_f1 @ sp[(-2)+-4]
 14406  01653C  50E1               	movf	fsr1l,w,c
 14407  01653E  0FFA               	addlw	-6
 14408  016540  6ED9               	movwf	fsr2l,c
 14409  016542  50E2               	movf	fsr1h,w,c
 14410  016544  6EDA               	movwf	fsr2h,c
 14411  016546  0EFF               	movlw	255
 14412  016548  22DA               	addwfc	fsr2h,f,c
 14413  01654A  0EFF               	movlw	255
 14414  01654C  16DE               	andwf	postinc2,f,c
 14415  01654E  0EFF               	movlw	255
 14416  016550  16DE               	andwf	postinc2,f,c
 14417  016552  0EFF               	movlw	255
 14418  016554  16DE               	andwf	postinc2,f,c
 14419  016556  0E00               	movlw	0
 14420  016558  16DE               	andwf	postinc2,f,c
 14421                           
 14422                           ;stkvar	_exp1 @ sp[(-2)+0]
 14423  01655A  0EFE               	movlw	-2
 14424  01655C  006F FF8C  F032    	movff	plusw1,btemp
 14425  016562  0E96               	movlw	150
 14426  016564  5E32               	subwf	btemp^0,f,c
 14427  016566  0EFE               	movlw	-2
 14428  016568  0060  F0CB  FFE3   	movff	btemp,plusw1
 14429                           
 14430                           ;stkvar	_exp1 @ sp[(-2)+0]
 14431  01656E  0EFE               	movlw	-2
 14432  016570  AEE3               	btfss	plusw1,7,c
 14433  016572  D014               	goto	l7336
 14434                           
 14435                           ;stkvar	_exp1 @ sp[(-2)+0]
 14436  016574  0EFE               	movlw	-2
 14437  016576  50E3               	movf	plusw1,w,c
 14438  016578  0A80               	xorlw	128
 14439  01657A  0F97               	addlw	151
 14440  01657C  A0D8               	btfss	status,0,c
 14441  01657E  D7B9               	goto	u6370
 14442  016580                     l7334:
 14443                           
 14444                           ;stkvar	_f1 @ sp[(-2)+-4]
 14445  016580  90D8               	bcf	status,0,c
 14446  016582  0EFD               	movlw	-3
 14447  016584  32E3               	rrcf	plusw1,f,c
 14448  016586  0EFC               	movlw	-4
 14449  016588  32E3               	rrcf	plusw1,f,c
 14450  01658A  0EFB               	movlw	-5
 14451  01658C  32E3               	rrcf	plusw1,f,c
 14452  01658E  0EFA               	movlw	-6
 14453  016590  32E3               	rrcf	plusw1,f,c
 14454                           
 14455                           ;stkvar	_exp1 @ sp[(-2)+0]
 14456  016592  0EFE               	movlw	-2
 14457  016594  2AE3               	incf	plusw1,f,c
 14458  016596  B4D8               	btfsc	status,2,c
 14459  016598  D018               	goto	u6430
 14460  01659A  D7F2               	goto	l7334
 14461  01659C                     l7336:
 14462                           
 14463                           ;stkvar	_exp1 @ sp[(-2)+0]
 14464  01659C  0EFE               	movlw	-2
 14465  01659E  006F FF8C  F032    	movff	plusw1,btemp
 14466  0165A4  0E1F               	movlw	31
 14467  0165A6  6432               	cpfsgt	btemp^0,c
 14468  0165A8  D00C               	goto	l7344
 14469  0165AA  D7A3               	goto	u6370
 14470  0165AC                     l7342:
 14471                           
 14472                           ;stkvar	_f1 @ sp[(-2)+-4]
 14473  0165AC  90D8               	bcf	status,0,c
 14474  0165AE  0EFA               	movlw	-6
 14475  0165B0  36E3               	rlcf	plusw1,f,c
 14476  0165B2  0EFB               	movlw	-5
 14477  0165B4  36E3               	rlcf	plusw1,f,c
 14478  0165B6  0EFC               	movlw	-4
 14479  0165B8  36E3               	rlcf	plusw1,f,c
 14480  0165BA  0EFD               	movlw	-3
 14481  0165BC  36E3               	rlcf	plusw1,f,c
 14482                           
 14483                           ;stkvar	_exp1 @ sp[(-2)+0]
 14484  0165BE  0EFE               	movlw	-2
 14485  0165C0  06E3               	decf	plusw1,f,c
 14486  0165C2                     l7344:
 14487                           
 14488                           ;stkvar	_exp1 @ sp[(-2)+0]
 14489  0165C2  0EFE               	movlw	-2
 14490  0165C4  50E3               	movf	plusw1,w,c
 14491  0165C6  A4D8               	btfss	status,2,c
 14492  0165C8  D7F1               	goto	l7342
 14493  0165CA                     u6430:
 14494                           
 14495                           ;stkvar	_sign1 @ sp[(-2)+1]
 14496  0165CA  0EFF               	movlw	-1
 14497  0165CC  50E3               	movf	plusw1,w,c
 14498  0165CE  B4D8               	btfsc	status,2,c
 14499  0165D0  D011               	goto	u6450
 14500                           
 14501                           ;stkvar	_f1 @ sp[(-2)+-4]
 14502                           ;stkvar	_f1 @ sp[(-2)+-4]
 14503  0165D2  0EFA               	movlw	-6
 14504  0165D4  6CE3               	negf	plusw1,c
 14505  0165D6  0EFB               	movlw	-5
 14506  0165D8  1EE3               	comf	plusw1,f,c
 14507  0165DA  0EFC               	movlw	-4
 14508  0165DC  1EE3               	comf	plusw1,f,c
 14509  0165DE  0EFD               	movlw	-3
 14510  0165E0  1EE3               	comf	plusw1,f,c
 14511  0165E2  E308               	bnc	u6450
 14512  0165E4  0EFB               	movlw	-5
 14513  0165E6  2AE3               	incf	plusw1,f,c
 14514  0165E8  E305               	bnc	u6450
 14515  0165EA  0EFC               	movlw	-4
 14516  0165EC  2AE3               	incf	plusw1,f,c
 14517  0165EE  E302               	bnc	u6450
 14518  0165F0  0EFD               	movlw	-3
 14519  0165F2  2AE3               	incf	plusw1,f,c
 14520  0165F4                     u6450:
 14521                           
 14522                           ;stkvar	_f1 @ sp[(-2)+-4]
 14523  0165F4  0EFA               	movlw	-6
 14524  0165F6  006F FF8C  F032    	movff	plusw1,btemp
 14525  0165FC  0EFB               	movlw	-5
 14526  0165FE  006F FF8C  F033    	movff	plusw1,btemp+1
 14527  016604  0EFC               	movlw	-4
 14528  016606  006F FF8C  F034    	movff	plusw1,btemp+2
 14529  01660C  0EFD               	movlw	-3
 14530  01660E  006F FF8C  F035    	movff	plusw1,btemp+3
 14531  016614                     l2408:
 14532                           
 14533                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14534  016614  0EFA               	movlw	250
 14535  016616  26E1               	addwf	fsr1l,f,c
 14536  016618  0EFF               	movlw	255
 14537  01661A  22E2               	addwfc	fsr1h,f,c
 14538  01661C  0012               	return		;funcret
 14539  01661E                     __end_of___fltol:
 14540                           	opt callstack 0
 14541                           
 14542 ;; *************** function ___flneg *****************
 14543 ;; Defined at:
 14544 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 14545 ;; Parameters:    Size  Location     Type
 14546 ;;  f1              4  [STACK] long 
 14547 ;; Auto vars:     Size  Location     Type
 14548 ;;		None
 14549 ;; Return value:  Size  Location     Type
 14550 ;;                  4  [STACK] long 
 14551 ;; Registers used:
 14552 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 14553 ;; Tracked objects:
 14554 ;;		On entry : 0/5
 14555 ;;		On exit  : 0/0
 14556 ;;		Unchanged: 0/0
 14557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14562 ;;Total ram usage:        0 bytes
 14563 ;; Hardware stack levels used:    1
 14564 ;; Hardware stack levels required when called:    6
 14565 ;; This function calls:
 14566 ;;		Nothing
 14567 ;; This function is called by:
 14568 ;;		_efgtoa
 14569 ;; This function uses a reentrant model
 14570 ;;
 14571                           
 14572                           	psect	text54
 14573  018370                     __ptext54:
 14574                           	opt callstack 0
 14575  018370                     ___flneg:
 14576                           	opt callstack 17
 14577                           
 14578                           ;stkvar	_f1 @ sp[(0)+-4]
 14579                           
 14580                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14581                           ;incstack = 0
 14582  018370  0EFC               	movlw	-4
 14583  018372  50E3               	movf	plusw1,w,c
 14584  018374  E10A               	bnz	u6350
 14585  018376  0EFD               	movlw	-3
 14586  018378  50E3               	movf	plusw1,w,c
 14587  01837A  E107               	bnz	u6350
 14588  01837C  0EFE               	movlw	-2
 14589  01837E  50E3               	movf	plusw1,w,c
 14590  018380  E104               	bnz	u6350
 14591  018382  0EFF               	movlw	-1
 14592  018384  50E3               	movf	plusw1,w,c
 14593  018386  B4D8               	btfsc	status,2,c
 14594  018388  D002               	goto	l7308
 14595  01838A                     u6350:
 14596                           
 14597                           ;stkvar	_f1 @ sp[(0)+-4]
 14598  01838A  0EFF               	movlw	-1
 14599  01838C  7EE3               	btg	plusw1,7,c
 14600  01838E                     l7308:
 14601                           
 14602                           ;stkvar	_f1 @ sp[(0)+-4]
 14603  01838E  0EFC               	movlw	-4
 14604  018390  006F FF8C  F032    	movff	plusw1,btemp
 14605  018396  0EFD               	movlw	-3
 14606  018398  006F FF8C  F033    	movff	plusw1,btemp+1
 14607  01839E  0EFE               	movlw	-2
 14608  0183A0  006F FF8C  F034    	movff	plusw1,btemp+2
 14609  0183A6  0EFF               	movlw	-1
 14610  0183A8  006F FF8C  F035    	movff	plusw1,btemp+3
 14611                           
 14612                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14613  0183AE  52E5               	movf	postdec1,f,c
 14614  0183B0  52E5               	movf	postdec1,f,c
 14615  0183B2  52E5               	movf	postdec1,f,c
 14616  0183B4  52E5               	movf	postdec1,f,c
 14617  0183B6  0012               	return		;funcret
 14618  0183B8                     __end_of___flneg:
 14619                           	opt callstack 0
 14620                           
 14621 ;; *************** function ___flge *****************
 14622 ;; Defined at:
 14623 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 14624 ;; Parameters:    Size  Location     Type
 14625 ;;  ff1             4  [STACK] long 
 14626 ;;  ff2             4  [STACK] long 
 14627 ;; Auto vars:     Size  Location     Type
 14628 ;;		None
 14629 ;; Return value:  Size  Location     Type
 14630 ;;		None               void
 14631 ;; Registers used:
 14632 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 14633 ;; Tracked objects:
 14634 ;;		On entry : 0/5
 14635 ;;		On exit  : 0/0
 14636 ;;		Unchanged: 0/0
 14637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14642 ;;Total ram usage:        0 bytes
 14643 ;; Hardware stack levels used:    1
 14644 ;; Hardware stack levels required when called:    6
 14645 ;; This function calls:
 14646 ;;		Nothing
 14647 ;; This function is called by:
 14648 ;;		_efgtoa
 14649 ;; This function uses a reentrant model
 14650 ;;
 14651                           
 14652                           	psect	text55
 14653  01661E                     __ptext55:
 14654                           	opt callstack 0
 14655  01661E                     ___flge:
 14656                           	opt callstack 17
 14657                           
 14658                           ;stkvar	_ff1 @ sp[(0)+-4]
 14659                           
 14660                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14661                           ;incstack = 0
 14662  01661E  50E1               	movf	fsr1l,w,c
 14663  016620  0FFC               	addlw	-4
 14664  016622  6ED9               	movwf	fsr2l,c
 14665  016624  50E2               	movf	fsr1h,w,c
 14666  016626  6EDA               	movwf	fsr2h,c
 14667  016628  0EFF               	movlw	255
 14668  01662A  22DA               	addwfc	fsr2h,f,c
 14669  01662C  0E00               	movlw	0
 14670  01662E  14DE               	andwf	postinc2,w,c
 14671  016630  6E3A               	movwf	(btemp+8)^0,c
 14672  016632  0E00               	movlw	0
 14673  016634  14DE               	andwf	postinc2,w,c
 14674  016636  6E3B               	movwf	(btemp+9)^0,c
 14675  016638  0E80               	movlw	128
 14676  01663A  14DE               	andwf	postinc2,w,c
 14677  01663C  6E3C               	movwf	(btemp+10)^0,c
 14678  01663E  0E7F               	movlw	127
 14679  016640  14DE               	andwf	postinc2,w,c
 14680  016642  6E3D               	movwf	(btemp+11)^0,c
 14681  016644  503A               	movf	(btemp+8)^0,w,c
 14682  016646  103B               	iorwf	(btemp+9)^0,w,c
 14683  016648  103C               	iorwf	(btemp+10)^0,w,c
 14684  01664A  103D               	iorwf	(btemp+11)^0,w,c
 14685  01664C  A4D8               	btfss	status,2,c
 14686  01664E  D008               	goto	l7282
 14687                           
 14688                           ;stkvar	_ff1 @ sp[(0)+-4]
 14689  016650  0EFC               	movlw	-4
 14690  016652  6AE3               	clrf	plusw1,c
 14691  016654  0EFD               	movlw	-3
 14692  016656  6AE3               	clrf	plusw1,c
 14693  016658  0EFE               	movlw	-2
 14694  01665A  6AE3               	clrf	plusw1,c
 14695  01665C  0EFF               	movlw	-1
 14696  01665E  6AE3               	clrf	plusw1,c
 14697  016660                     l7282:
 14698                           
 14699                           ;stkvar	_ff2 @ sp[(0)+-8]
 14700  016660  50E1               	movf	fsr1l,w,c
 14701  016662  0FF8               	addlw	-8
 14702  016664  6ED9               	movwf	fsr2l,c
 14703  016666  50E2               	movf	fsr1h,w,c
 14704  016668  6EDA               	movwf	fsr2h,c
 14705  01666A  0EFF               	movlw	255
 14706  01666C  22DA               	addwfc	fsr2h,f,c
 14707  01666E  0E00               	movlw	0
 14708  016670  14DE               	andwf	postinc2,w,c
 14709  016672  6E3A               	movwf	(btemp+8)^0,c
 14710  016674  0E00               	movlw	0
 14711  016676  14DE               	andwf	postinc2,w,c
 14712  016678  6E3B               	movwf	(btemp+9)^0,c
 14713  01667A  0E80               	movlw	128
 14714  01667C  14DE               	andwf	postinc2,w,c
 14715  01667E  6E3C               	movwf	(btemp+10)^0,c
 14716  016680  0E7F               	movlw	127
 14717  016682  14DE               	andwf	postinc2,w,c
 14718  016684  6E3D               	movwf	(btemp+11)^0,c
 14719  016686  503A               	movf	(btemp+8)^0,w,c
 14720  016688  103B               	iorwf	(btemp+9)^0,w,c
 14721  01668A  103C               	iorwf	(btemp+10)^0,w,c
 14722  01668C  103D               	iorwf	(btemp+11)^0,w,c
 14723  01668E  A4D8               	btfss	status,2,c
 14724  016690  D008               	goto	l2374
 14725                           
 14726                           ;stkvar	_ff2 @ sp[(0)+-8]
 14727  016692  0EF8               	movlw	-8
 14728  016694  6AE3               	clrf	plusw1,c
 14729  016696  0EF9               	movlw	-7
 14730  016698  6AE3               	clrf	plusw1,c
 14731  01669A  0EFA               	movlw	-6
 14732  01669C  6AE3               	clrf	plusw1,c
 14733  01669E  0EFB               	movlw	-5
 14734  0166A0  6AE3               	clrf	plusw1,c
 14735  0166A2                     l2374:
 14736                           
 14737                           ;stkvar	_ff1 @ sp[(0)+-4]
 14738  0166A2  0EFF               	movlw	-1
 14739  0166A4  AEE3               	btfss	plusw1,7,c
 14740  0166A6  D024               	goto	l7288
 14741                           
 14742                           ;stkvar	_ff1 @ sp[(0)+-4]
 14743  0166A8  0E00               	movlw	0
 14744  0166AA  6E3A               	movwf	(btemp+8)^0,c
 14745  0166AC  0E00               	movlw	0
 14746  0166AE  6E3B               	movwf	(btemp+9)^0,c
 14747  0166B0  0E00               	movlw	0
 14748  0166B2  6E3C               	movwf	(btemp+10)^0,c
 14749  0166B4  0E80               	movlw	128
 14750  0166B6  6E3D               	movwf	(btemp+11)^0,c
 14751  0166B8  0EFC               	movlw	-4
 14752  0166BA  50E3               	movf	plusw1,w,c
 14753  0166BC  5E3A               	subwf	(btemp+8)^0,f,c
 14754  0166BE  0EFD               	movlw	-3
 14755  0166C0  50E3               	movf	plusw1,w,c
 14756  0166C2  5A3B               	subwfb	(btemp+9)^0,f,c
 14757  0166C4  0EFE               	movlw	-2
 14758  0166C6  50E3               	movf	plusw1,w,c
 14759  0166C8  5A3C               	subwfb	(btemp+10)^0,f,c
 14760  0166CA  0EFF               	movlw	-1
 14761  0166CC  50E3               	movf	plusw1,w,c
 14762  0166CE  5A3D               	subwfb	(btemp+11)^0,f,c
 14763                           
 14764                           ;stkvar	_ff1 @ sp[(0)+-4]
 14765  0166D0  0EFC               	movlw	-4
 14766  0166D2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14767  0166D8  0EFD               	movlw	-3
 14768  0166DA  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14769  0166E0  0EFE               	movlw	-2
 14770  0166E2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14771  0166E8  0EFF               	movlw	-1
 14772  0166EA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14773  0166F0                     l7288:
 14774                           
 14775                           ;stkvar	_ff2 @ sp[(0)+-8]
 14776  0166F0  0EFB               	movlw	-5
 14777  0166F2  AEE3               	btfss	plusw1,7,c
 14778  0166F4  D024               	goto	l7292
 14779                           
 14780                           ;stkvar	_ff2 @ sp[(0)+-8]
 14781  0166F6  0E00               	movlw	0
 14782  0166F8  6E3A               	movwf	(btemp+8)^0,c
 14783  0166FA  0E00               	movlw	0
 14784  0166FC  6E3B               	movwf	(btemp+9)^0,c
 14785  0166FE  0E00               	movlw	0
 14786  016700  6E3C               	movwf	(btemp+10)^0,c
 14787  016702  0E80               	movlw	128
 14788  016704  6E3D               	movwf	(btemp+11)^0,c
 14789  016706  0EF8               	movlw	-8
 14790  016708  50E3               	movf	plusw1,w,c
 14791  01670A  5E3A               	subwf	(btemp+8)^0,f,c
 14792  01670C  0EF9               	movlw	-7
 14793  01670E  50E3               	movf	plusw1,w,c
 14794  016710  5A3B               	subwfb	(btemp+9)^0,f,c
 14795  016712  0EFA               	movlw	-6
 14796  016714  50E3               	movf	plusw1,w,c
 14797  016716  5A3C               	subwfb	(btemp+10)^0,f,c
 14798  016718  0EFB               	movlw	-5
 14799  01671A  50E3               	movf	plusw1,w,c
 14800  01671C  5A3D               	subwfb	(btemp+11)^0,f,c
 14801                           
 14802                           ;stkvar	_ff2 @ sp[(0)+-8]
 14803  01671E  0EF8               	movlw	-8
 14804  016720  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14805  016726  0EF9               	movlw	-7
 14806  016728  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14807  01672E  0EFA               	movlw	-6
 14808  016730  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14809  016736  0EFB               	movlw	-5
 14810  016738  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14811  01673E                     l7292:
 14812                           
 14813                           ;stkvar	_ff1 @ sp[(0)+-4]
 14814  01673E  0EFF               	movlw	-1
 14815  016740  7EE3               	btg	plusw1,7,c
 14816                           
 14817                           ;stkvar	_ff2 @ sp[(0)+-8]
 14818  016742  0EFB               	movlw	-5
 14819  016744  7EE3               	btg	plusw1,7,c
 14820                           
 14821                           ;stkvar	_ff2 @ sp[(0)+-8]
 14822                           ;stkvar	_ff1 @ sp[(0)+-4]
 14823  016746  50E1               	movf	fsr1l,w,c
 14824  016748  0FFC               	addlw	-4
 14825  01674A  6ED9               	movwf	fsr2l,c
 14826  01674C  50E2               	movf	fsr1h,w,c
 14827  01674E  6EDA               	movwf	fsr2h,c
 14828  016750  0EFF               	movlw	255
 14829  016752  22DA               	addwfc	fsr2h,f,c
 14830  016754  0EF8               	movlw	-8
 14831  016756  50E3               	movf	plusw1,w,c
 14832  016758  5CDE               	subwf	postinc2,w,c
 14833  01675A  0EF9               	movlw	-7
 14834  01675C  50E3               	movf	plusw1,w,c
 14835  01675E  58DE               	subwfb	postinc2,w,c
 14836  016760  0EFA               	movlw	-6
 14837  016762  50E3               	movf	plusw1,w,c
 14838  016764  58DE               	subwfb	postinc2,w,c
 14839  016766  0EFB               	movlw	-5
 14840  016768  50E3               	movf	plusw1,w,c
 14841  01676A  58DE               	subwfb	postinc2,w,c
 14842  01676C  B0D8               	btfsc	status,0,c
 14843  01676E  D002               	goto	l7300
 14844  016770  9032               	bcf	btemp& (0+255),0,c
 14845  016772  D001               	goto	l2381
 14846  016774                     l7300:
 14847  016774  8032               	bsf	btemp& (0+255),0,c
 14848  016776                     l2381:
 14849                           
 14850                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 14851  016776  0EF8               	movlw	248
 14852  016778  26E1               	addwf	fsr1l,f,c
 14853  01677A  0EFF               	movlw	255
 14854  01677C  22E2               	addwfc	fsr1h,f,c
 14855  01677E  0012               	return		;funcret
 14856  016780                     __end_of___flge:
 14857                           	opt callstack 0
 14858                           
 14859 ;; *************** function ___fleq *****************
 14860 ;; Defined at:
 14861 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 14862 ;; Parameters:    Size  Location     Type
 14863 ;;  ff1             4  [STACK] long 
 14864 ;;  ff2             4  [STACK] long 
 14865 ;; Auto vars:     Size  Location     Type
 14866 ;;		None
 14867 ;; Return value:  Size  Location     Type
 14868 ;;		None               void
 14869 ;; Registers used:
 14870 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 14871 ;; Tracked objects:
 14872 ;;		On entry : 0/5
 14873 ;;		On exit  : 0/0
 14874 ;;		Unchanged: 0/0
 14875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14880 ;;Total ram usage:        0 bytes
 14881 ;; Hardware stack levels used:    1
 14882 ;; Hardware stack levels required when called:    6
 14883 ;; This function calls:
 14884 ;;		Nothing
 14885 ;; This function is called by:
 14886 ;;		_efgtoa
 14887 ;; This function uses a reentrant model
 14888 ;;
 14889                           
 14890                           	psect	text56
 14891  017460                     __ptext56:
 14892                           	opt callstack 0
 14893  017460                     ___fleq:
 14894                           	opt callstack 17
 14895                           
 14896                           ;stkvar	_ff1 @ sp[(0)+-4]
 14897                           
 14898                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14899                           ;incstack = 0
 14900  017460  50E1               	movf	fsr1l,w,c
 14901  017462  0FFC               	addlw	-4
 14902  017464  6ED9               	movwf	fsr2l,c
 14903  017466  50E2               	movf	fsr1h,w,c
 14904  017468  6EDA               	movwf	fsr2h,c
 14905  01746A  0EFF               	movlw	255
 14906  01746C  22DA               	addwfc	fsr2h,f,c
 14907  01746E  0E00               	movlw	0
 14908  017470  14DE               	andwf	postinc2,w,c
 14909  017472  6E3A               	movwf	(btemp+8)^0,c
 14910  017474  0E00               	movlw	0
 14911  017476  14DE               	andwf	postinc2,w,c
 14912  017478  6E3B               	movwf	(btemp+9)^0,c
 14913  01747A  0E80               	movlw	128
 14914  01747C  14DE               	andwf	postinc2,w,c
 14915  01747E  6E3C               	movwf	(btemp+10)^0,c
 14916  017480  0E7F               	movlw	127
 14917  017482  14DE               	andwf	postinc2,w,c
 14918  017484  6E3D               	movwf	(btemp+11)^0,c
 14919  017486  503A               	movf	(btemp+8)^0,w,c
 14920  017488  103B               	iorwf	(btemp+9)^0,w,c
 14921  01748A  103C               	iorwf	(btemp+10)^0,w,c
 14922  01748C  103D               	iorwf	(btemp+11)^0,w,c
 14923  01748E  A4D8               	btfss	status,2,c
 14924  017490  D008               	goto	l7266
 14925                           
 14926                           ;stkvar	_ff1 @ sp[(0)+-4]
 14927  017492  0EFC               	movlw	-4
 14928  017494  6AE3               	clrf	plusw1,c
 14929  017496  0EFD               	movlw	-3
 14930  017498  6AE3               	clrf	plusw1,c
 14931  01749A  0EFE               	movlw	-2
 14932  01749C  6AE3               	clrf	plusw1,c
 14933  01749E  0EFF               	movlw	-1
 14934  0174A0  6AE3               	clrf	plusw1,c
 14935  0174A2                     l7266:
 14936                           
 14937                           ;stkvar	_ff2 @ sp[(0)+-8]
 14938  0174A2  50E1               	movf	fsr1l,w,c
 14939  0174A4  0FF8               	addlw	-8
 14940  0174A6  6ED9               	movwf	fsr2l,c
 14941  0174A8  50E2               	movf	fsr1h,w,c
 14942  0174AA  6EDA               	movwf	fsr2h,c
 14943  0174AC  0EFF               	movlw	255
 14944  0174AE  22DA               	addwfc	fsr2h,f,c
 14945  0174B0  0E00               	movlw	0
 14946  0174B2  14DE               	andwf	postinc2,w,c
 14947  0174B4  6E3A               	movwf	(btemp+8)^0,c
 14948  0174B6  0E00               	movlw	0
 14949  0174B8  14DE               	andwf	postinc2,w,c
 14950  0174BA  6E3B               	movwf	(btemp+9)^0,c
 14951  0174BC  0E80               	movlw	128
 14952  0174BE  14DE               	andwf	postinc2,w,c
 14953  0174C0  6E3C               	movwf	(btemp+10)^0,c
 14954  0174C2  0E7F               	movlw	127
 14955  0174C4  14DE               	andwf	postinc2,w,c
 14956  0174C6  6E3D               	movwf	(btemp+11)^0,c
 14957  0174C8  503A               	movf	(btemp+8)^0,w,c
 14958  0174CA  103B               	iorwf	(btemp+9)^0,w,c
 14959  0174CC  103C               	iorwf	(btemp+10)^0,w,c
 14960  0174CE  103D               	iorwf	(btemp+11)^0,w,c
 14961  0174D0  A4D8               	btfss	status,2,c
 14962  0174D2  D008               	goto	l7270
 14963                           
 14964                           ;stkvar	_ff2 @ sp[(0)+-8]
 14965  0174D4  0EF8               	movlw	-8
 14966  0174D6  6AE3               	clrf	plusw1,c
 14967  0174D8  0EF9               	movlw	-7
 14968  0174DA  6AE3               	clrf	plusw1,c
 14969  0174DC  0EFA               	movlw	-6
 14970  0174DE  6AE3               	clrf	plusw1,c
 14971  0174E0  0EFB               	movlw	-5
 14972  0174E2  6AE3               	clrf	plusw1,c
 14973  0174E4                     l7270:
 14974                           
 14975                           ;stkvar	_ff2 @ sp[(0)+-8]
 14976                           ;stkvar	_ff1 @ sp[(0)+-4]
 14977  0174E4  50E1               	movf	fsr1l,w,c
 14978  0174E6  0FFC               	addlw	-4
 14979  0174E8  6ED9               	movwf	fsr2l,c
 14980  0174EA  50E2               	movf	fsr1h,w,c
 14981  0174EC  6EDA               	movwf	fsr2h,c
 14982  0174EE  0EFF               	movlw	255
 14983  0174F0  22DA               	addwfc	fsr2h,f,c
 14984  0174F2  0EF8               	movlw	-8
 14985  0174F4  50E3               	movf	plusw1,w,c
 14986  0174F6  18DE               	xorwf	postinc2,w,c
 14987  0174F8  E10D               	bnz	u6290
 14988  0174FA  0EF9               	movlw	-7
 14989  0174FC  50E3               	movf	plusw1,w,c
 14990  0174FE  18DE               	xorwf	postinc2,w,c
 14991  017500  E109               	bnz	u6290
 14992  017502  0EFA               	movlw	-6
 14993  017504  50E3               	movf	plusw1,w,c
 14994  017506  18DE               	xorwf	postinc2,w,c
 14995  017508  E105               	bnz	u6290
 14996  01750A  0EFB               	movlw	-5
 14997  01750C  50E3               	movf	plusw1,w,c
 14998  01750E  18DE               	xorwf	postinc2,w,c
 14999  017510  B4D8               	btfsc	status,2,c
 15000  017512  D002               	goto	l7274
 15001  017514                     u6290:
 15002  017514  9032               	bcf	btemp& (0+255),0,c
 15003  017516  D001               	goto	l2370
 15004  017518                     l7274:
 15005  017518  8032               	bsf	btemp& (0+255),0,c
 15006  01751A                     l2370:
 15007                           
 15008                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 15009  01751A  0EF8               	movlw	248
 15010  01751C  26E1               	addwf	fsr1l,f,c
 15011  01751E  0EFF               	movlw	255
 15012  017520  22E2               	addwfc	fsr1h,f,c
 15013  017522  0012               	return		;funcret
 15014  017524                     __end_of___fleq:
 15015                           	opt callstack 0
 15016                           
 15017 ;; *************** function ___fldiv *****************
 15018 ;; Defined at:
 15019 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 15020 ;; Parameters:    Size  Location     Type
 15021 ;;  b               4  [STACK] long 
 15022 ;;  a               4  [STACK] long 
 15023 ;; Auto vars:     Size  Location     Type
 15024 ;;  grs             4  [STACK] unsigned long 
 15025 ;;  rem             4  [STACK] unsigned long 
 15026 ;;  new_exp         2  [STACK] short 
 15027 ;;  aexp            1  [STACK] unsigned char 
 15028 ;;  bexp            1  [STACK] unsigned char 
 15029 ;;  sign            1  [STACK] unsigned char 
 15030 ;; Return value:  Size  Location     Type
 15031 ;;                  4  [STACK] unsigned char 
 15032 ;; Registers used:
 15033 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 15034 ;; Tracked objects:
 15035 ;;		On entry : 0/2
 15036 ;;		On exit  : 0/0
 15037 ;;		Unchanged: 0/0
 15038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15043 ;;Total ram usage:        0 bytes
 15044 ;; Hardware stack levels used:    1
 15045 ;; Hardware stack levels required when called:    6
 15046 ;; This function calls:
 15047 ;;		Nothing
 15048 ;; This function is called by:
 15049 ;;		_conv_raw_result
 15050 ;;		_efgtoa
 15051 ;; This function uses a reentrant model
 15052 ;;
 15053                           
 15054                           	psect	text57
 15055  0135F2                     __ptext57:
 15056                           	opt callstack 0
 15057  0135F2                     ___fldiv:
 15058                           	opt callstack 0
 15059                           
 15060                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15061  0135F2  0E0D               	movlw	13
 15062  0135F4  26E1               	addwf	fsr1l,f,c
 15063  0135F6  0E00               	movlw	0
 15064  0135F8  22E2               	addwfc	fsr1h,f,c
 15065                           
 15066                           ;stkvar	_b @ sp[(-13)+-4]
 15067                           
 15068                           ;incstack = 0
 15069  0135FA  0EF2               	movlw	242
 15070  0135FC  24E1               	addwf	fsr1l,w,c
 15071  0135FE  6ED9               	movwf	fsr2l,c
 15072  013600  0EFF               	movlw	255
 15073  013602  20E2               	addwfc	fsr1h,w,c
 15074  013604  6EDA               	movwf	fsr2h,c
 15075  013606  50DF               	movf	indf2,w,c
 15076  013608  6E3D               	movwf	(btemp+11)^0,c
 15077  01360A  0E80               	movlw	128
 15078  01360C  163D               	andwf	(btemp+11)^0,f,c
 15079                           
 15080                           ;stkvar	_sign @ sp[(-13)+12]
 15081  01360E  0EFF               	movlw	-1
 15082  013610  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15083                           
 15084                           ;stkvar	_b @ sp[(-13)+-4]
 15085  013616  0EF2               	movlw	242
 15086  013618  24E1               	addwf	fsr1l,w,c
 15087  01361A  6ED9               	movwf	fsr2l,c
 15088  01361C  0EFF               	movlw	255
 15089  01361E  20E2               	addwfc	fsr1h,w,c
 15090  013620  6EDA               	movwf	fsr2h,c
 15091  013622  50DF               	movf	indf2,w,c
 15092  013624  6E3D               	movwf	(btemp+11)^0,c
 15093  013626  90D8               	bcf	status,0,c
 15094  013628  343D               	rlcf	(btemp+11)^0,w,c
 15095  01362A  6E3C               	movwf	(btemp+10)^0,c
 15096                           
 15097                           ;stkvar	_bexp @ sp[(-13)+11]
 15098  01362C  0EFE               	movlw	-2
 15099  01362E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15100                           
 15101                           ;stkvar	_b @ sp[(-13)+-4]
 15102  013634  0EF1               	movlw	241
 15103  013636  24E1               	addwf	fsr1l,w,c
 15104  013638  6ED9               	movwf	fsr2l,c
 15105  01363A  0EFF               	movlw	255
 15106  01363C  20E2               	addwfc	fsr1h,w,c
 15107  01363E  6EDA               	movwf	fsr2h,c
 15108  013640  AEDF               	btfss	indf2,7,c
 15109  013642  D002               	goto	l6868
 15110                           
 15111                           ;stkvar	_bexp @ sp[(-13)+11]
 15112  013644  0EFE               	movlw	-2
 15113  013646  80E3               	bsf	plusw1,0,c
 15114  013648                     l6868:
 15115                           
 15116                           ;stkvar	_bexp @ sp[(-13)+11]
 15117  013648  0EFE               	movlw	-2
 15118  01364A  50E3               	movf	plusw1,w,c
 15119  01364C  B4D8               	btfsc	status,2,c
 15120  01364E  D027               	goto	l6878
 15121                           
 15122                           ;stkvar	_bexp @ sp[(-13)+11]
 15123  013650  0EFE               	movlw	-2
 15124  013652  28E3               	incf	plusw1,w,c
 15125  013654  A4D8               	btfss	status,2,c
 15126  013656  D018               	goto	l6874
 15127  013658  0E00               	movlw	0
 15128  01365A  6E3A               	movwf	(btemp+8)^0,c
 15129  01365C  0E00               	movlw	0
 15130  01365E  6E3B               	movwf	(btemp+9)^0,c
 15131  013660  0E00               	movlw	0
 15132  013662  6E3C               	movwf	(btemp+10)^0,c
 15133  013664  0E00               	movlw	0
 15134  013666  6E3D               	movwf	(btemp+11)^0,c
 15135                           
 15136                           ;stkvar	_b @ sp[(-13)+-4]
 15137  013668  0EEF               	movlw	-17
 15138  01366A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15139  013670  0EF0               	movlw	-16
 15140  013672  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15141  013678  0EF1               	movlw	-15
 15142  01367A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15143  013680  0EF2               	movlw	-14
 15144  013682  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15145  013688                     l6874:
 15146                           
 15147                           ;stkvar	_b @ sp[(-13)+-4]
 15148  013688  0EF1               	movlw	-15
 15149  01368A  8EE3               	bsf	plusw1,7,c
 15150                           
 15151                           ;stkvar	_b @ sp[(-13)+-4]
 15152  01368C  0EF2               	movlw	242
 15153  01368E  24E1               	addwf	fsr1l,w,c
 15154  013690  6ED9               	movwf	fsr2l,c
 15155  013692  0EFF               	movlw	255
 15156  013694  20E2               	addwfc	fsr1h,w,c
 15157  013696  6EDA               	movwf	fsr2h,c
 15158  013698  0E00               	movlw	0
 15159  01369A  6EDF               	movwf	indf2,c
 15160  01369C  D018               	goto	l6880
 15161  01369E                     l6878:
 15162  01369E  0E00               	movlw	0
 15163  0136A0  6E3A               	movwf	(btemp+8)^0,c
 15164  0136A2  0E00               	movlw	0
 15165  0136A4  6E3B               	movwf	(btemp+9)^0,c
 15166  0136A6  0E00               	movlw	0
 15167  0136A8  6E3C               	movwf	(btemp+10)^0,c
 15168  0136AA  0E00               	movlw	0
 15169  0136AC  6E3D               	movwf	(btemp+11)^0,c
 15170                           
 15171                           ;stkvar	_b @ sp[(-13)+-4]
 15172  0136AE  0EEF               	movlw	-17
 15173  0136B0  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15174  0136B6  0EF0               	movlw	-16
 15175  0136B8  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15176  0136BE  0EF1               	movlw	-15
 15177  0136C0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15178  0136C6  0EF2               	movlw	-14
 15179  0136C8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15180  0136CE                     l6880:
 15181                           
 15182                           ;stkvar	_a @ sp[(-13)+-8]
 15183  0136CE  0EEE               	movlw	238
 15184  0136D0  24E1               	addwf	fsr1l,w,c
 15185  0136D2  6ED9               	movwf	fsr2l,c
 15186  0136D4  0EFF               	movlw	255
 15187  0136D6  20E2               	addwfc	fsr1h,w,c
 15188  0136D8  6EDA               	movwf	fsr2h,c
 15189  0136DA  50DF               	movf	indf2,w,c
 15190  0136DC  6E3D               	movwf	(btemp+11)^0,c
 15191  0136DE  0E80               	movlw	128
 15192  0136E0  163D               	andwf	(btemp+11)^0,f,c
 15193                           
 15194                           ;stkvar	_sign @ sp[(-13)+12]
 15195  0136E2  50E1               	movf	fsr1l,w,c
 15196  0136E4  0FFF               	addlw	-1
 15197  0136E6  6ED9               	movwf	fsr2l,c
 15198  0136E8  50E2               	movf	fsr1h,w,c
 15199  0136EA  6EDA               	movwf	fsr2h,c
 15200  0136EC  0EFF               	movlw	255
 15201  0136EE  22DA               	addwfc	fsr2h,f,c
 15202  0136F0  503D               	movf	(btemp+11)^0,w,c
 15203  0136F2  1ADF               	xorwf	indf2,f,c
 15204                           
 15205                           ;stkvar	_a @ sp[(-13)+-8]
 15206  0136F4  0EEE               	movlw	238
 15207  0136F6  24E1               	addwf	fsr1l,w,c
 15208  0136F8  6ED9               	movwf	fsr2l,c
 15209  0136FA  0EFF               	movlw	255
 15210  0136FC  20E2               	addwfc	fsr1h,w,c
 15211  0136FE  6EDA               	movwf	fsr2h,c
 15212  013700  50DF               	movf	indf2,w,c
 15213  013702  6E3D               	movwf	(btemp+11)^0,c
 15214  013704  90D8               	bcf	status,0,c
 15215  013706  343D               	rlcf	(btemp+11)^0,w,c
 15216  013708  6E3C               	movwf	(btemp+10)^0,c
 15217                           
 15218                           ;stkvar	_aexp @ sp[(-13)+10]
 15219  01370A  0EFD               	movlw	-3
 15220  01370C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15221                           
 15222                           ;stkvar	_a @ sp[(-13)+-8]
 15223  013712  0EED               	movlw	237
 15224  013714  24E1               	addwf	fsr1l,w,c
 15225  013716  6ED9               	movwf	fsr2l,c
 15226  013718  0EFF               	movlw	255
 15227  01371A  20E2               	addwfc	fsr1h,w,c
 15228  01371C  6EDA               	movwf	fsr2h,c
 15229  01371E  AEDF               	btfss	indf2,7,c
 15230  013720  D002               	goto	l6888
 15231                           
 15232                           ;stkvar	_aexp @ sp[(-13)+10]
 15233  013722  0EFD               	movlw	-3
 15234  013724  80E3               	bsf	plusw1,0,c
 15235  013726                     l6888:
 15236                           
 15237                           ;stkvar	_aexp @ sp[(-13)+10]
 15238  013726  0EFD               	movlw	-3
 15239  013728  50E3               	movf	plusw1,w,c
 15240  01372A  B4D8               	btfsc	status,2,c
 15241  01372C  D027               	goto	l6898
 15242                           
 15243                           ;stkvar	_aexp @ sp[(-13)+10]
 15244  01372E  0EFD               	movlw	-3
 15245  013730  28E3               	incf	plusw1,w,c
 15246  013732  A4D8               	btfss	status,2,c
 15247  013734  D018               	goto	l6894
 15248  013736  0E00               	movlw	0
 15249  013738  6E3A               	movwf	(btemp+8)^0,c
 15250  01373A  0E00               	movlw	0
 15251  01373C  6E3B               	movwf	(btemp+9)^0,c
 15252  01373E  0E00               	movlw	0
 15253  013740  6E3C               	movwf	(btemp+10)^0,c
 15254  013742  0E00               	movlw	0
 15255  013744  6E3D               	movwf	(btemp+11)^0,c
 15256                           
 15257                           ;stkvar	_a @ sp[(-13)+-8]
 15258  013746  0EEB               	movlw	-21
 15259  013748  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15260  01374E  0EEC               	movlw	-20
 15261  013750  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15262  013756  0EED               	movlw	-19
 15263  013758  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15264  01375E  0EEE               	movlw	-18
 15265  013760  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15266  013766                     l6894:
 15267                           
 15268                           ;stkvar	_a @ sp[(-13)+-8]
 15269  013766  0EED               	movlw	-19
 15270  013768  8EE3               	bsf	plusw1,7,c
 15271                           
 15272                           ;stkvar	_a @ sp[(-13)+-8]
 15273  01376A  0EEE               	movlw	238
 15274  01376C  24E1               	addwf	fsr1l,w,c
 15275  01376E  6ED9               	movwf	fsr2l,c
 15276  013770  0EFF               	movlw	255
 15277  013772  20E2               	addwfc	fsr1h,w,c
 15278  013774  6EDA               	movwf	fsr2h,c
 15279  013776  0E00               	movlw	0
 15280  013778  6EDF               	movwf	indf2,c
 15281  01377A  D018               	goto	l6900
 15282  01377C                     l6898:
 15283  01377C  0E00               	movlw	0
 15284  01377E  6E3A               	movwf	(btemp+8)^0,c
 15285  013780  0E00               	movlw	0
 15286  013782  6E3B               	movwf	(btemp+9)^0,c
 15287  013784  0E00               	movlw	0
 15288  013786  6E3C               	movwf	(btemp+10)^0,c
 15289  013788  0E00               	movlw	0
 15290  01378A  6E3D               	movwf	(btemp+11)^0,c
 15291                           
 15292                           ;stkvar	_a @ sp[(-13)+-8]
 15293  01378C  0EEB               	movlw	-21
 15294  01378E  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15295  013794  0EEC               	movlw	-20
 15296  013796  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15297  01379C  0EED               	movlw	-19
 15298  01379E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15299  0137A4  0EEE               	movlw	-18
 15300  0137A6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15301  0137AC                     l6900:
 15302                           
 15303                           ;stkvar	_a @ sp[(-13)+-8]
 15304  0137AC  0EEB               	movlw	-21
 15305  0137AE  50E3               	movf	plusw1,w,c
 15306  0137B0  E139               	bnz	l6912
 15307  0137B2  0EEC               	movlw	-20
 15308  0137B4  50E3               	movf	plusw1,w,c
 15309  0137B6  E136               	bnz	l6912
 15310  0137B8  0EED               	movlw	-19
 15311  0137BA  50E3               	movf	plusw1,w,c
 15312  0137BC  E133               	bnz	l6912
 15313  0137BE  0EEE               	movlw	-18
 15314  0137C0  50E3               	movf	plusw1,w,c
 15315  0137C2  A4D8               	btfss	status,2,c
 15316  0137C4  D02F               	goto	l6912
 15317                           
 15318                           ;stkvar	_b @ sp[(-13)+-4]
 15319  0137C6  0EEF               	movlw	-17
 15320  0137C8  6AE3               	clrf	plusw1,c
 15321  0137CA  0EF0               	movlw	-16
 15322  0137CC  6AE3               	clrf	plusw1,c
 15323  0137CE  0EF1               	movlw	-15
 15324  0137D0  6AE3               	clrf	plusw1,c
 15325  0137D2  0EF2               	movlw	-14
 15326  0137D4  6AE3               	clrf	plusw1,c
 15327                           
 15328                           ;stkvar	_b @ sp[(-13)+-4]
 15329  0137D6  0EF1               	movlw	241
 15330  0137D8  24E1               	addwf	fsr1l,w,c
 15331  0137DA  6ED9               	movwf	fsr2l,c
 15332  0137DC  0EFF               	movlw	255
 15333  0137DE  20E2               	addwfc	fsr1h,w,c
 15334  0137E0  6EDA               	movwf	fsr2h,c
 15335  0137E2  0E80               	movlw	128
 15336  0137E4  12DE               	iorwf	postinc2,f,c
 15337  0137E6  0E7F               	movlw	127
 15338  0137E8  12DD               	iorwf	postdec2,f,c
 15339  0137EA                     l6906:
 15340                           
 15341                           ;stkvar	_sign @ sp[(-13)+12]
 15342  0137EA  0EFF               	movlw	-1
 15343  0137EC  006F FF8C  F03D    	movff	plusw1,btemp+11
 15344                           
 15345                           ;stkvar	_b @ sp[(-13)+-4]
 15346  0137F2  0EF2               	movlw	242
 15347  0137F4  24E1               	addwf	fsr1l,w,c
 15348  0137F6  6ED9               	movwf	fsr2l,c
 15349  0137F8  0EFF               	movlw	255
 15350  0137FA  20E2               	addwfc	fsr1h,w,c
 15351  0137FC  6EDA               	movwf	fsr2h,c
 15352  0137FE  503D               	movf	(btemp+11)^0,w,c
 15353  013800  12DF               	iorwf	indf2,f,c
 15354                           
 15355                           ;stkvar	_b @ sp[(-13)+-4]
 15356  013802  0EEF               	movlw	-17
 15357  013804  006F FF8C  F032    	movff	plusw1,btemp
 15358  01380A  0EF0               	movlw	-16
 15359  01380C  006F FF8C  F033    	movff	plusw1,btemp+1
 15360  013812  0EF1               	movlw	-15
 15361  013814  006F FF8C  F034    	movff	plusw1,btemp+2
 15362  01381A  0EF2               	movlw	-14
 15363  01381C  006F FF8C  F035    	movff	plusw1,btemp+3
 15364  013822  D19F               	goto	l2693
 15365  013824                     l6912:
 15366                           
 15367                           ;stkvar	_bexp @ sp[(-13)+11]
 15368  013824  0EFE               	movlw	-2
 15369  013826  50E3               	movf	plusw1,w,c
 15370  013828  A4D8               	btfss	status,2,c
 15371  01382A  D009               	goto	l6920
 15372  01382C  0E00               	movlw	0
 15373  01382E  6E32               	movwf	btemp^0,c
 15374  013830  0E00               	movlw	0
 15375  013832  6E33               	movwf	(btemp+1)^0,c
 15376  013834  0E00               	movlw	0
 15377  013836  6E34               	movwf	(btemp+2)^0,c
 15378  013838  0E00               	movlw	0
 15379  01383A  6E35               	movwf	(btemp+3)^0,c
 15380  01383C  D192               	goto	l2693
 15381  01383E                     l6920:
 15382                           
 15383                           ;stkvar	_bexp @ sp[(-13)+11]
 15384  01383E  0EFE               	movlw	-2
 15385  013840  50E3               	movf	plusw1,w,c
 15386  013842  6E3C               	movwf	(btemp+10)^0,c
 15387  013844  6A3D               	clrf	(btemp+11)^0,c
 15388                           
 15389                           ;stkvar	_aexp @ sp[(-13)+10]
 15390  013846  0EFD               	movlw	-3
 15391  013848  50E3               	movf	plusw1,w,c
 15392  01384A  5E3C               	subwf	(btemp+10)^0,f,c
 15393  01384C  0E00               	movlw	0
 15394  01384E  5A3D               	subwfb	(btemp+11)^0,f,c
 15395  013850  0E7F               	movlw	127
 15396  013852  263C               	addwf	(btemp+10)^0,f,c
 15397  013854  0E00               	movlw	0
 15398  013856  223D               	addwfc	(btemp+11)^0,f,c
 15399                           
 15400                           ;stkvar	_new_exp @ sp[(-13)+8]
 15401  013858  0EFB               	movlw	-5
 15402  01385A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15403  013860  0EFC               	movlw	-4
 15404  013862  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15405                           
 15406                           ;stkvar	_b @ sp[(-13)+-4]
 15407  013868  0EEF               	movlw	-17
 15408  01386A  006F FF8C  F03A    	movff	plusw1,btemp+8
 15409  013870  0EF0               	movlw	-16
 15410  013872  006F FF8C  F03B    	movff	plusw1,btemp+9
 15411  013878  0EF1               	movlw	-15
 15412  01387A  006F FF8C  F03C    	movff	plusw1,btemp+10
 15413  013880  0EF2               	movlw	-14
 15414  013882  006F FF8C  F03D    	movff	plusw1,btemp+11
 15415                           
 15416                           ;stkvar	_rem @ sp[(-13)+4]
 15417  013888  0EF7               	movlw	-9
 15418  01388A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15419  013890  0EF8               	movlw	-8
 15420  013892  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15421  013898  0EF9               	movlw	-7
 15422  01389A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15423  0138A0  0EFA               	movlw	-6
 15424  0138A2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15425                           
 15426                           ;stkvar	_b @ sp[(-13)+-4]
 15427  0138A8  0EEF               	movlw	-17
 15428  0138AA  6AE3               	clrf	plusw1,c
 15429  0138AC  0EF0               	movlw	-16
 15430  0138AE  6AE3               	clrf	plusw1,c
 15431  0138B0  0EF1               	movlw	-15
 15432  0138B2  6AE3               	clrf	plusw1,c
 15433  0138B4  0EF2               	movlw	-14
 15434  0138B6  6AE3               	clrf	plusw1,c
 15435                           
 15436                           ;stkvar	_grs @ sp[(-13)+0]
 15437  0138B8  0EF3               	movlw	-13
 15438  0138BA  6AE3               	clrf	plusw1,c
 15439  0138BC  0EF4               	movlw	-12
 15440  0138BE  6AE3               	clrf	plusw1,c
 15441  0138C0  0EF5               	movlw	-11
 15442  0138C2  6AE3               	clrf	plusw1,c
 15443  0138C4  0EF6               	movlw	-10
 15444  0138C6  6AE3               	clrf	plusw1,c
 15445                           
 15446                           ;stkvar	_aexp @ sp[(-13)+10]
 15447  0138C8  0EFD               	movlw	-3
 15448  0138CA  6AE3               	clrf	plusw1,c
 15449  0138CC  D050               	goto	l6948
 15450  0138CE                     l6930:
 15451                           
 15452                           ;stkvar	_aexp @ sp[(-13)+10]
 15453  0138CE  0EFD               	movlw	-3
 15454  0138D0  50E3               	movf	plusw1,w,c
 15455  0138D2  B4D8               	btfsc	status,2,c
 15456  0138D4  D020               	goto	l6940
 15457                           
 15458                           ;stkvar	_rem @ sp[(-13)+4]
 15459  0138D6  90D8               	bcf	status,0,c
 15460  0138D8  0EF7               	movlw	-9
 15461  0138DA  36E3               	rlcf	plusw1,f,c
 15462  0138DC  0EF8               	movlw	-8
 15463  0138DE  36E3               	rlcf	plusw1,f,c
 15464  0138E0  0EF9               	movlw	-7
 15465  0138E2  36E3               	rlcf	plusw1,f,c
 15466  0138E4  0EFA               	movlw	-6
 15467  0138E6  36E3               	rlcf	plusw1,f,c
 15468                           
 15469                           ;stkvar	_b @ sp[(-13)+-4]
 15470  0138E8  90D8               	bcf	status,0,c
 15471  0138EA  0EEF               	movlw	-17
 15472  0138EC  36E3               	rlcf	plusw1,f,c
 15473  0138EE  0EF0               	movlw	-16
 15474  0138F0  36E3               	rlcf	plusw1,f,c
 15475  0138F2  0EF1               	movlw	-15
 15476  0138F4  36E3               	rlcf	plusw1,f,c
 15477  0138F6  0EF2               	movlw	-14
 15478  0138F8  36E3               	rlcf	plusw1,f,c
 15479                           
 15480                           ;stkvar	_grs @ sp[(-13)+0]
 15481  0138FA  0EF6               	movlw	-10
 15482  0138FC  AEE3               	btfss	plusw1,7,c
 15483  0138FE  D002               	goto	l6938
 15484                           
 15485                           ;stkvar	_b @ sp[(-13)+-4]
 15486  013900  0EEF               	movlw	-17
 15487  013902  80E3               	bsf	plusw1,0,c
 15488  013904                     l6938:
 15489                           
 15490                           ;stkvar	_grs @ sp[(-13)+0]
 15491  013904  90D8               	bcf	status,0,c
 15492  013906  0EF3               	movlw	-13
 15493  013908  36E3               	rlcf	plusw1,f,c
 15494  01390A  0EF4               	movlw	-12
 15495  01390C  36E3               	rlcf	plusw1,f,c
 15496  01390E  0EF5               	movlw	-11
 15497  013910  36E3               	rlcf	plusw1,f,c
 15498  013912  0EF6               	movlw	-10
 15499  013914  36E3               	rlcf	plusw1,f,c
 15500  013916                     l6940:
 15501                           
 15502                           ;stkvar	_a @ sp[(-13)+-8]
 15503                           ;stkvar	_rem @ sp[(-13)+4]
 15504  013916  50E1               	movf	fsr1l,w,c
 15505  013918  0FF7               	addlw	-9
 15506  01391A  6ED9               	movwf	fsr2l,c
 15507  01391C  50E2               	movf	fsr1h,w,c
 15508  01391E  6EDA               	movwf	fsr2h,c
 15509  013920  0EFF               	movlw	255
 15510  013922  22DA               	addwfc	fsr2h,f,c
 15511  013924  0EEB               	movlw	-21
 15512  013926  50E3               	movf	plusw1,w,c
 15513  013928  5CDE               	subwf	postinc2,w,c
 15514  01392A  0EEC               	movlw	-20
 15515  01392C  50E3               	movf	plusw1,w,c
 15516  01392E  58DE               	subwfb	postinc2,w,c
 15517  013930  0EED               	movlw	-19
 15518  013932  50E3               	movf	plusw1,w,c
 15519  013934  58DE               	subwfb	postinc2,w,c
 15520  013936  0EEE               	movlw	-18
 15521  013938  50E3               	movf	plusw1,w,c
 15522  01393A  58DE               	subwfb	postinc2,w,c
 15523  01393C  A0D8               	btfss	status,0,c
 15524  01393E  D015               	goto	l6946
 15525                           
 15526                           ;stkvar	_grs @ sp[(-13)+0]
 15527  013940  0EF6               	movlw	-10
 15528  013942  8CE3               	bsf	plusw1,6,c
 15529                           
 15530                           ;stkvar	_a @ sp[(-13)+-8]
 15531                           ;stkvar	_rem @ sp[(-13)+4]
 15532  013944  50E1               	movf	fsr1l,w,c
 15533  013946  0FF7               	addlw	-9
 15534  013948  6ED9               	movwf	fsr2l,c
 15535  01394A  50E2               	movf	fsr1h,w,c
 15536  01394C  6EDA               	movwf	fsr2h,c
 15537  01394E  0EFF               	movlw	255
 15538  013950  22DA               	addwfc	fsr2h,f,c
 15539  013952  0EEB               	movlw	-21
 15540  013954  50E3               	movf	plusw1,w,c
 15541  013956  5EDE               	subwf	postinc2,f,c
 15542  013958  0EEC               	movlw	-20
 15543  01395A  50E3               	movf	plusw1,w,c
 15544  01395C  5ADE               	subwfb	postinc2,f,c
 15545  01395E  0EED               	movlw	-19
 15546  013960  50E3               	movf	plusw1,w,c
 15547  013962  5ADE               	subwfb	postinc2,f,c
 15548  013964  0EEE               	movlw	-18
 15549  013966  50E3               	movf	plusw1,w,c
 15550  013968  5ADE               	subwfb	postinc2,f,c
 15551  01396A                     l6946:
 15552                           
 15553                           ;stkvar	_aexp @ sp[(-13)+10]
 15554  01396A  0EFD               	movlw	-3
 15555  01396C  2AE3               	incf	plusw1,f,c
 15556  01396E                     l6948:
 15557                           
 15558                           ;stkvar	_aexp @ sp[(-13)+10]
 15559  01396E  0EFD               	movlw	-3
 15560  013970  006F FF8C  F032    	movff	plusw1,btemp
 15561  013976  0E19               	movlw	25
 15562  013978  6432               	cpfsgt	btemp^0,c
 15563  01397A  D7A9               	goto	l6930
 15564                           
 15565                           ;stkvar	_rem @ sp[(-13)+4]
 15566  01397C  0EF7               	movlw	-9
 15567  01397E  50E3               	movf	plusw1,w,c
 15568  013980  E10A               	bnz	u5790
 15569  013982  0EF8               	movlw	-8
 15570  013984  50E3               	movf	plusw1,w,c
 15571  013986  E107               	bnz	u5790
 15572  013988  0EF9               	movlw	-7
 15573  01398A  50E3               	movf	plusw1,w,c
 15574  01398C  E104               	bnz	u5790
 15575  01398E  0EFA               	movlw	-6
 15576  013990  50E3               	movf	plusw1,w,c
 15577  013992  B4D8               	btfsc	status,2,c
 15578  013994  D024               	goto	l6964
 15579  013996                     u5790:
 15580                           
 15581                           ;stkvar	_grs @ sp[(-13)+0]
 15582  013996  0EF3               	movlw	-13
 15583  013998  80E3               	bsf	plusw1,0,c
 15584  01399A  D021               	goto	l6964
 15585  01399C                     l6954:
 15586                           
 15587                           ;stkvar	_b @ sp[(-13)+-4]
 15588  01399C  90D8               	bcf	status,0,c
 15589  01399E  0EEF               	movlw	-17
 15590  0139A0  36E3               	rlcf	plusw1,f,c
 15591  0139A2  0EF0               	movlw	-16
 15592  0139A4  36E3               	rlcf	plusw1,f,c
 15593  0139A6  0EF1               	movlw	-15
 15594  0139A8  36E3               	rlcf	plusw1,f,c
 15595  0139AA  0EF2               	movlw	-14
 15596  0139AC  36E3               	rlcf	plusw1,f,c
 15597                           
 15598                           ;stkvar	_grs @ sp[(-13)+0]
 15599  0139AE  0EF6               	movlw	-10
 15600  0139B0  AEE3               	btfss	plusw1,7,c
 15601  0139B2  D002               	goto	l6960
 15602                           
 15603                           ;stkvar	_b @ sp[(-13)+-4]
 15604  0139B4  0EEF               	movlw	-17
 15605  0139B6  80E3               	bsf	plusw1,0,c
 15606  0139B8                     l6960:
 15607                           
 15608                           ;stkvar	_grs @ sp[(-13)+0]
 15609  0139B8  90D8               	bcf	status,0,c
 15610  0139BA  0EF3               	movlw	-13
 15611  0139BC  36E3               	rlcf	plusw1,f,c
 15612  0139BE  0EF4               	movlw	-12
 15613  0139C0  36E3               	rlcf	plusw1,f,c
 15614  0139C2  0EF5               	movlw	-11
 15615  0139C4  36E3               	rlcf	plusw1,f,c
 15616  0139C6  0EF6               	movlw	-10
 15617  0139C8  36E3               	rlcf	plusw1,f,c
 15618                           
 15619                           ;stkvar	_new_exp @ sp[(-13)+8]
 15620  0139CA  50E1               	movf	fsr1l,w,c
 15621  0139CC  0FFB               	addlw	-5
 15622  0139CE  6ED9               	movwf	fsr2l,c
 15623  0139D0  50E2               	movf	fsr1h,w,c
 15624  0139D2  6EDA               	movwf	fsr2h,c
 15625  0139D4  0EFF               	movlw	255
 15626  0139D6  22DA               	addwfc	fsr2h,f,c
 15627  0139D8  06DE               	decf	postinc2,f,c
 15628  0139DA  0E00               	movlw	0
 15629  0139DC  5ADD               	subwfb	postdec2,f,c
 15630  0139DE                     l6964:
 15631                           
 15632                           ;stkvar	_b @ sp[(-13)+-4]
 15633  0139DE  0EF1               	movlw	-15
 15634  0139E0  AEE3               	btfss	plusw1,7,c
 15635  0139E2  D7DC               	goto	l6954
 15636                           
 15637                           ;stkvar	_aexp @ sp[(-13)+10]
 15638  0139E4  0EFD               	movlw	-3
 15639  0139E6  6AE3               	clrf	plusw1,c
 15640                           
 15641                           ;stkvar	_grs @ sp[(-13)+0]
 15642  0139E8  0EF6               	movlw	-10
 15643  0139EA  AEE3               	btfss	plusw1,7,c
 15644  0139EC  D020               	goto	l6978
 15645                           
 15646                           ;stkvar	_grs @ sp[(-13)+0]
 15647  0139EE  50E1               	movf	fsr1l,w,c
 15648  0139F0  0FF3               	addlw	-13
 15649  0139F2  6ED9               	movwf	fsr2l,c
 15650  0139F4  50E2               	movf	fsr1h,w,c
 15651  0139F6  6EDA               	movwf	fsr2h,c
 15652  0139F8  0EFF               	movlw	255
 15653  0139FA  22DA               	addwfc	fsr2h,f,c
 15654  0139FC  0EFF               	movlw	255
 15655  0139FE  14DE               	andwf	postinc2,w,c
 15656  013A00  6E3A               	movwf	(btemp+8)^0,c
 15657  013A02  0EFF               	movlw	255
 15658  013A04  14DE               	andwf	postinc2,w,c
 15659  013A06  6E3B               	movwf	(btemp+9)^0,c
 15660  013A08  0EFF               	movlw	255
 15661  013A0A  14DE               	andwf	postinc2,w,c
 15662  013A0C  6E3C               	movwf	(btemp+10)^0,c
 15663  013A0E  0E7F               	movlw	127
 15664  013A10  14DE               	andwf	postinc2,w,c
 15665  013A12  6E3D               	movwf	(btemp+11)^0,c
 15666  013A14  503A               	movf	(btemp+8)^0,w,c
 15667  013A16  103B               	iorwf	(btemp+9)^0,w,c
 15668  013A18  103C               	iorwf	(btemp+10)^0,w,c
 15669  013A1A  103D               	iorwf	(btemp+11)^0,w,c
 15670  013A1C  B4D8               	btfsc	status,2,c
 15671  013A1E  D004               	goto	l6974
 15672  013A20                     u5830:
 15673                           
 15674                           ;stkvar	_aexp @ sp[(-13)+10]
 15675  013A20  0EFD               	movlw	-3
 15676  013A22  6AE3               	clrf	plusw1,c
 15677  013A24  2AE3               	incf	plusw1,f,c
 15678  013A26  D003               	goto	l6978
 15679  013A28                     l6974:
 15680                           
 15681                           ;stkvar	_b @ sp[(-13)+-4]
 15682  013A28  0EEF               	movlw	-17
 15683  013A2A  B0E3               	btfsc	plusw1,0,c
 15684  013A2C  D7F9               	goto	u5830
 15685  013A2E                     l6978:
 15686                           
 15687                           ;stkvar	_aexp @ sp[(-13)+10]
 15688  013A2E  0EFD               	movlw	-3
 15689  013A30  50E3               	movf	plusw1,w,c
 15690  013A32  B4D8               	btfsc	status,2,c
 15691  013A34  D036               	goto	l6988
 15692                           
 15693                           ;stkvar	_b @ sp[(-13)+-4]
 15694  013A36  50E1               	movf	fsr1l,w,c
 15695  013A38  0FEF               	addlw	-17
 15696  013A3A  6ED9               	movwf	fsr2l,c
 15697  013A3C  50E2               	movf	fsr1h,w,c
 15698  013A3E  6EDA               	movwf	fsr2h,c
 15699  013A40  0EFF               	movlw	255
 15700  013A42  22DA               	addwfc	fsr2h,f,c
 15701  013A44  2ADE               	incf	postinc2,f,c
 15702  013A46  0E00               	movlw	0
 15703  013A48  22DE               	addwfc	postinc2,f,c
 15704  013A4A  22DE               	addwfc	postinc2,f,c
 15705  013A4C  22DE               	addwfc	postinc2,f,c
 15706                           
 15707                           ;stkvar	_b @ sp[(-13)+-4]
 15708  013A4E  0EF2               	movlw	-14
 15709  013A50  A0E3               	btfss	plusw1,0,c
 15710  013A52  D027               	goto	l6988
 15711  013A54  0E01               	movlw	1
 15712  013A56  6E3D               	movwf	(btemp+11)^0,c
 15713                           
 15714                           ;stkvar	_b @ sp[(-13)+-4]
 15715  013A58  50E1               	movf	fsr1l,w,c
 15716  013A5A  0FEF               	addlw	-17
 15717  013A5C  6ED9               	movwf	fsr2l,c
 15718  013A5E  50E2               	movf	fsr1h,w,c
 15719  013A60  6EDA               	movwf	fsr2h,c
 15720  013A62  0EFF               	movlw	255
 15721  013A64  22DA               	addwfc	fsr2h,f,c
 15722  013A66  283D               	incf	(btemp+11)^0,w,c
 15723  013A68  52DE               	movf	postinc2,f,c
 15724  013A6A  D008               	goto	u5870
 15725  013A6C                     u5875:
 15726  013A6C  52DE               	movf	postinc2,f,c
 15727  013A6E  90D8               	bcf	status,0,c
 15728  013A70  BEDC               	btfsc	preinc2,7,c
 15729  013A72  80D8               	bsf	status,0,c
 15730  013A74  32DD               	rrcf	postdec2,f,c
 15731  013A76  32DD               	rrcf	postdec2,f,c
 15732  013A78  32DD               	rrcf	postdec2,f,c
 15733  013A7A  32DE               	rrcf	postinc2,f,c
 15734  013A7C                     u5870:
 15735  013A7C  2EE8               	decfsz	wreg,f,c
 15736  013A7E  D7F6               	goto	u5875
 15737                           
 15738                           ;stkvar	_new_exp @ sp[(-13)+8]
 15739  013A80  0EFB               	movlw	-5
 15740  013A82  50E3               	movf	plusw1,w,c
 15741  013A84  0F01               	addlw	1
 15742  013A86  6E32               	movwf	btemp^0,c
 15743  013A88  0EFB               	movlw	-5
 15744  013A8A  0060  F0CB  FFE3   	movff	btemp,plusw1
 15745  013A90  6A32               	clrf	btemp^0,c
 15746  013A92  0EFC               	movlw	-4
 15747  013A94  50E3               	movf	plusw1,w,c
 15748  013A96  2032               	addwfc	btemp^0,w,c
 15749  013A98  6E32               	movwf	btemp^0,c
 15750  013A9A  0EFC               	movlw	-4
 15751  013A9C  0060  F0CB  FFE3   	movff	btemp,plusw1
 15752  013AA2                     l6988:
 15753                           
 15754                           ;stkvar	_new_exp @ sp[(-13)+8]
 15755  013AA2  0EFC               	movlw	-4
 15756  013AA4  BEE3               	btfsc	plusw1,7,c
 15757  013AA6  D01B               	goto	l6994
 15758  013AA8  0EFC               	movlw	-4
 15759  013AAA  50E3               	movf	plusw1,w,c
 15760  013AAC  E104               	bnz	u5880
 15761  013AAE  0EFB               	movlw	-5
 15762  013AB0  28E3               	incf	plusw1,w,c
 15763  013AB2  A0D8               	btfss	status,0,c
 15764  013AB4  D014               	goto	l6994
 15765  013AB6                     u5880:
 15766  013AB6  0EFF               	movlw	255
 15767  013AB8  6E3C               	movwf	(btemp+10)^0,c
 15768  013ABA  0E00               	movlw	0
 15769  013ABC  6E3D               	movwf	(btemp+11)^0,c
 15770                           
 15771                           ;stkvar	_new_exp @ sp[(-13)+8]
 15772  013ABE  0EFB               	movlw	-5
 15773  013AC0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15774  013AC6  0EFC               	movlw	-4
 15775  013AC8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15776                           
 15777                           ;stkvar	_b @ sp[(-13)+-4]
 15778  013ACE  0EEF               	movlw	-17
 15779  013AD0  6AE3               	clrf	plusw1,c
 15780  013AD2  0EF0               	movlw	-16
 15781  013AD4  6AE3               	clrf	plusw1,c
 15782  013AD6  0EF1               	movlw	-15
 15783  013AD8  6AE3               	clrf	plusw1,c
 15784  013ADA  0EF2               	movlw	-14
 15785  013ADC  6AE3               	clrf	plusw1,c
 15786  013ADE                     l6994:
 15787                           
 15788                           ;stkvar	_new_exp @ sp[(-13)+8]
 15789  013ADE  0EFC               	movlw	-4
 15790  013AE0  BEE3               	btfsc	plusw1,7,c
 15791  013AE2  D007               	goto	u5890
 15792  013AE4  0EFC               	movlw	-4
 15793  013AE6  50E3               	movf	plusw1,w,c
 15794  013AE8  E112               	bnz	l7000
 15795  013AEA  0EFB               	movlw	-5
 15796  013AEC  04E3               	decf	plusw1,w,c
 15797  013AEE  B0D8               	btfsc	status,0,c
 15798  013AF0  D00E               	goto	l7000
 15799  013AF2                     u5890:
 15800                           
 15801                           ;stkvar	_new_exp @ sp[(-13)+8]
 15802  013AF2  0EFB               	movlw	-5
 15803  013AF4  6AE3               	clrf	plusw1,c
 15804  013AF6  0EFC               	movlw	-4
 15805  013AF8  6AE3               	clrf	plusw1,c
 15806                           
 15807                           ;stkvar	_b @ sp[(-13)+-4]
 15808  013AFA  0EEF               	movlw	-17
 15809  013AFC  6AE3               	clrf	plusw1,c
 15810  013AFE  0EF0               	movlw	-16
 15811  013B00  6AE3               	clrf	plusw1,c
 15812  013B02  0EF1               	movlw	-15
 15813  013B04  6AE3               	clrf	plusw1,c
 15814  013B06  0EF2               	movlw	-14
 15815  013B08  6AE3               	clrf	plusw1,c
 15816                           
 15817                           ;stkvar	_sign @ sp[(-13)+12]
 15818  013B0A  0EFF               	movlw	-1
 15819  013B0C  6AE3               	clrf	plusw1,c
 15820  013B0E                     l7000:
 15821                           
 15822                           ;stkvar	_new_exp @ sp[(-13)+8]
 15823                           ;stkvar	_bexp @ sp[(-13)+11]
 15824  013B0E  0EFB               	movlw	-5
 15825  013B10  006F FF8C  F032    	movff	plusw1,btemp
 15826  013B16  0EFE               	movlw	-2
 15827  013B18  0060  F0CB  FFE3   	movff	btemp,plusw1
 15828                           
 15829                           ;stkvar	_bexp @ sp[(-13)+11]
 15830  013B1E  0EFE               	movlw	-2
 15831  013B20  A0E3               	btfss	plusw1,0,c
 15832  013B22  D009               	goto	l7006
 15833                           
 15834                           ;stkvar	_b @ sp[(-13)+-4]
 15835  013B24  0EF1               	movlw	241
 15836  013B26  24E1               	addwf	fsr1l,w,c
 15837  013B28  6ED9               	movwf	fsr2l,c
 15838  013B2A  0EFF               	movlw	255
 15839  013B2C  20E2               	addwfc	fsr1h,w,c
 15840  013B2E  6EDA               	movwf	fsr2h,c
 15841  013B30  0E00               	movlw	0
 15842  013B32  8EDB               	bsf	plusw2,7,c
 15843  013B34  D008               	goto	l7008
 15844  013B36                     l7006:
 15845                           
 15846                           ;stkvar	_b @ sp[(-13)+-4]
 15847  013B36  0EF1               	movlw	241
 15848  013B38  24E1               	addwf	fsr1l,w,c
 15849  013B3A  6ED9               	movwf	fsr2l,c
 15850  013B3C  0EFF               	movlw	255
 15851  013B3E  20E2               	addwfc	fsr1h,w,c
 15852  013B40  6EDA               	movwf	fsr2h,c
 15853  013B42  0E7F               	movlw	127
 15854  013B44  16DF               	andwf	indf2,f,c
 15855  013B46                     l7008:
 15856                           
 15857                           ;stkvar	_b @ sp[(-13)+-4]
 15858  013B46  0EF2               	movlw	242
 15859  013B48  24E1               	addwf	fsr1l,w,c
 15860  013B4A  6ED9               	movwf	fsr2l,c
 15861  013B4C  0EFF               	movlw	255
 15862  013B4E  20E2               	addwfc	fsr1h,w,c
 15863  013B50  6EDA               	movwf	fsr2h,c
 15864                           
 15865                           ;stkvar	_bexp @ sp[(-13)+11]
 15866  013B52  0EFE               	movlw	-2
 15867  013B54  006F FF8C  F03D    	movff	plusw1,btemp+11
 15868  013B5A  90D8               	bcf	status,0,c
 15869  013B5C  303D               	rrcf	(btemp+11)^0,w,c
 15870  013B5E  6EDF               	movwf	indf2,c
 15871  013B60  D644               	goto	l6906
 15872  013B62                     l2693:
 15873                           
 15874                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 15875  013B62  0EEB               	movlw	235
 15876  013B64  26E1               	addwf	fsr1l,f,c
 15877  013B66  0EFF               	movlw	255
 15878  013B68  22E2               	addwfc	fsr1h,f,c
 15879  013B6A  0012               	return		;funcret
 15880  013B6C                     __end_of___fldiv:
 15881                           	opt callstack 0
 15882                           
 15883 ;; *************** function ___awmod *****************
 15884 ;; Defined at:
 15885 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 15886 ;; Parameters:    Size  Location     Type
 15887 ;;  dividend        2  [STACK] int 
 15888 ;;  divisor         2  [STACK] int 
 15889 ;; Auto vars:     Size  Location     Type
 15890 ;;  sign            1  [STACK] unsigned char 
 15891 ;;  counter         1  [STACK] unsigned char 
 15892 ;; Return value:  Size  Location     Type
 15893 ;;                  2  [STACK] int 
 15894 ;; Registers used:
 15895 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 15896 ;; Tracked objects:
 15897 ;;		On entry : 0/5
 15898 ;;		On exit  : 0/0
 15899 ;;		Unchanged: 0/0
 15900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15905 ;;Total ram usage:        0 bytes
 15906 ;; Hardware stack levels used:    1
 15907 ;; Hardware stack levels required when called:    6
 15908 ;; This function calls:
 15909 ;;		Nothing
 15910 ;; This function is called by:
 15911 ;;		_efgtoa
 15912 ;; This function uses a reentrant model
 15913 ;;
 15914                           
 15915                           	psect	text58
 15916  016C68                     __ptext58:
 15917                           	opt callstack 0
 15918  016C68                     ___awmod:
 15919                           	opt callstack 0
 15920                           
 15921                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15922  016C68  52E6               	movf	postinc1,f,c
 15923  016C6A  52E6               	movf	postinc1,f,c
 15924                           
 15925                           ;stkvar	_sign @ sp[(-2)+0]
 15926                           
 15927                           ;incstack = 0
 15928  016C6C  0EFE               	movlw	-2
 15929  016C6E  6AE3               	clrf	plusw1,c
 15930                           
 15931                           ;stkvar	_dividend @ sp[(-2)+-2]
 15932  016C70  0EFD               	movlw	-3
 15933  016C72  AEE3               	btfss	plusw1,7,c
 15934  016C74  D009               	goto	l7232
 15935                           
 15936                           ;stkvar	_dividend @ sp[(-2)+-2]
 15937                           ;stkvar	_dividend @ sp[(-2)+-2]
 15938  016C76  0EFC               	movlw	-4
 15939  016C78  6CE3               	negf	plusw1,c
 15940  016C7A  0EFD               	movlw	-3
 15941  016C7C  1EE3               	comf	plusw1,f,c
 15942  016C7E  B0D8               	btfsc	status,0,c
 15943  016C80  2AE3               	incf	plusw1,f,c
 15944                           
 15945                           ;stkvar	_sign @ sp[(-2)+0]
 15946  016C82  0EFE               	movlw	-2
 15947  016C84  6AE3               	clrf	plusw1,c
 15948  016C86  2AE3               	incf	plusw1,f,c
 15949  016C88                     l7232:
 15950                           
 15951                           ;stkvar	_divisor @ sp[(-2)+-4]
 15952  016C88  0EFB               	movlw	-5
 15953  016C8A  AEE3               	btfss	plusw1,7,c
 15954  016C8C  D006               	goto	l7236
 15955                           
 15956                           ;stkvar	_divisor @ sp[(-2)+-4]
 15957                           ;stkvar	_divisor @ sp[(-2)+-4]
 15958  016C8E  0EFA               	movlw	-6
 15959  016C90  6CE3               	negf	plusw1,c
 15960  016C92  0EFB               	movlw	-5
 15961  016C94  1EE3               	comf	plusw1,f,c
 15962  016C96  B0D8               	btfsc	status,0,c
 15963  016C98  2AE3               	incf	plusw1,f,c
 15964  016C9A                     l7236:
 15965                           
 15966                           ;stkvar	_divisor @ sp[(-2)+-4]
 15967  016C9A  0EFA               	movlw	-6
 15968  016C9C  006F FF8C  F032    	movff	plusw1,btemp
 15969  016CA2  0EFB               	movlw	-5
 15970  016CA4  50E3               	movf	plusw1,w,c
 15971  016CA6  1032               	iorwf	btemp^0,w,c
 15972  016CA8  B4D8               	btfsc	status,2,c
 15973  016CAA  D053               	goto	u6250
 15974                           
 15975                           ;stkvar	_counter @ sp[(-2)+1]
 15976  016CAC  0EFF               	movlw	-1
 15977  016CAE  6AE3               	clrf	plusw1,c
 15978  016CB0  D012               	goto	L15
 15979  016CB2                     l7240:
 15980                           
 15981                           ;stkvar	_divisor @ sp[(-2)+-4]
 15982  016CB2  0EFA               	movlw	-6
 15983  016CB4  50E3               	movf	plusw1,w,c
 15984  016CB6  90D8               	bcf	status,0,c
 15985  016CB8  34E8               	rlcf	wreg,w,c
 15986  016CBA  6E32               	movwf	btemp^0,c
 15987  016CBC  0EFA               	movlw	-6
 15988  016CBE  0060  F0CB  FFE3   	movff	btemp,plusw1
 15989  016CC4  0EFB               	movlw	-5
 15990  016CC6  50E3               	movf	plusw1,w,c
 15991  016CC8  34E8               	rlcf	wreg,w,c
 15992  016CCA  6E32               	movwf	btemp^0,c
 15993  016CCC  0EFB               	movlw	-5
 15994  016CCE  0060  F0CB  FFE3   	movff	btemp,plusw1
 15995                           
 15996                           ;stkvar	_counter @ sp[(-2)+1]
 15997  016CD4  0EFF               	movlw	-1
 15998  016CD6                     L15:
 15999  016CD6  2AE3               	incf	plusw1,f,c
 16000                           
 16001                           ;stkvar	_divisor @ sp[(-2)+-4]
 16002  016CD8  0EFB               	movlw	-5
 16003  016CDA  AEE3               	btfss	plusw1,7,c
 16004  016CDC  D7EA               	goto	l7240
 16005  016CDE                     u6230:
 16006                           
 16007                           ;stkvar	_divisor @ sp[(-2)+-4]
 16008  016CDE  0EFA               	movlw	-6
 16009  016CE0  006F FF8C  F03C    	movff	plusw1,btemp+10
 16010  016CE6  0EFB               	movlw	-5
 16011  016CE8  006F FF8C  F03D    	movff	plusw1,btemp+11
 16012                           
 16013                           ;stkvar	_dividend @ sp[(-2)+-2]
 16014  016CEE  0EFC               	movlw	-4
 16015  016CF0  006F FF8C  F03A    	movff	plusw1,btemp+8
 16016  016CF6  0EFD               	movlw	-3
 16017  016CF8  006F FF8C  F03B    	movff	plusw1,btemp+9
 16018  016CFE  503C               	movf	(btemp+10)^0,w,c
 16019  016D00  5C3A               	subwf	(btemp+8)^0,w,c
 16020  016D02  503D               	movf	(btemp+11)^0,w,c
 16021  016D04  583B               	subwfb	(btemp+9)^0,w,c
 16022  016D06  A0D8               	btfss	status,0,c
 16023  016D08  D014               	goto	l7250
 16024                           
 16025                           ;stkvar	_divisor @ sp[(-2)+-4]
 16026                           ;stkvar	_dividend @ sp[(-2)+-2]
 16027  016D0A  0EFC               	movlw	-4
 16028  016D0C  50E3               	movf	plusw1,w,c
 16029  016D0E  6E32               	movwf	btemp^0,c
 16030  016D10  0EFA               	movlw	-6
 16031  016D12  50E3               	movf	plusw1,w,c
 16032  016D14  5E32               	subwf	btemp^0,f,c
 16033  016D16  0EFC               	movlw	-4
 16034  016D18  0060  F0CB  FFE3   	movff	btemp,plusw1
 16035  016D1E  0EFD               	movlw	-3
 16036  016D20  50E3               	movf	plusw1,w,c
 16037  016D22  6E32               	movwf	btemp^0,c
 16038  016D24  0EFB               	movlw	-5
 16039  016D26  50E3               	movf	plusw1,w,c
 16040  016D28  5A32               	subwfb	btemp^0,f,c
 16041  016D2A  0EFD               	movlw	-3
 16042  016D2C  0060  F0CB  FFE3   	movff	btemp,plusw1
 16043  016D32                     l7250:
 16044                           
 16045                           ;stkvar	_divisor @ sp[(-2)+-4]
 16046  016D32  90D8               	bcf	status,0,c
 16047  016D34  0EFB               	movlw	-5
 16048  016D36  32E3               	rrcf	plusw1,f,c
 16049  016D38  0EFA               	movlw	-6
 16050  016D3A  32E3               	rrcf	plusw1,f,c
 16051                           
 16052                           ;stkvar	_counter @ sp[(-2)+1]
 16053  016D3C  0EFF               	movlw	-1
 16054  016D3E  50E3               	movf	plusw1,w,c
 16055  016D40  6E32               	movwf	btemp^0,c
 16056  016D42  0E01               	movlw	1
 16057  016D44  5E32               	subwf	btemp^0,f,c
 16058  016D46  0EFF               	movlw	-1
 16059  016D48  0060  F0CB  FFE3   	movff	btemp,plusw1
 16060  016D4E  A4D8               	btfss	status,2,c
 16061  016D50  D7C6               	goto	u6230
 16062  016D52                     u6250:
 16063                           
 16064                           ;stkvar	_sign @ sp[(-2)+0]
 16065  016D52  0EFE               	movlw	-2
 16066  016D54  50E3               	movf	plusw1,w,c
 16067  016D56  B4D8               	btfsc	status,2,c
 16068  016D58  D006               	goto	l7258
 16069                           
 16070                           ;stkvar	_dividend @ sp[(-2)+-2]
 16071                           ;stkvar	_dividend @ sp[(-2)+-2]
 16072  016D5A  0EFC               	movlw	-4
 16073  016D5C  6CE3               	negf	plusw1,c
 16074  016D5E  0EFD               	movlw	-3
 16075  016D60  1EE3               	comf	plusw1,f,c
 16076  016D62  B0D8               	btfsc	status,0,c
 16077  016D64  2AE3               	incf	plusw1,f,c
 16078  016D66                     l7258:
 16079                           
 16080                           ;stkvar	_dividend @ sp[(-2)+-2]
 16081  016D66  0EFC               	movlw	-4
 16082  016D68  006F FF8C  F032    	movff	plusw1,btemp
 16083  016D6E  0EFD               	movlw	-3
 16084  016D70  006F FF8C  F033    	movff	plusw1,btemp+1
 16085                           
 16086                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16087  016D76  0EFA               	movlw	250
 16088  016D78  26E1               	addwf	fsr1l,f,c
 16089  016D7A  0EFF               	movlw	255
 16090  016D7C  22E2               	addwfc	fsr1h,f,c
 16091  016D7E  0012               	return		;funcret
 16092  016D80                     __end_of___awmod:
 16093                           	opt callstack 0
 16094                           
 16095 ;; *************** function ___awdiv *****************
 16096 ;; Defined at:
 16097 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 16098 ;; Parameters:    Size  Location     Type
 16099 ;;  dividend        2  [STACK] int 
 16100 ;;  divisor         2  [STACK] int 
 16101 ;; Auto vars:     Size  Location     Type
 16102 ;;  quotient        2  [STACK] int 
 16103 ;;  sign            1  [STACK] unsigned char 
 16104 ;;  counter         1  [STACK] unsigned char 
 16105 ;; Return value:  Size  Location     Type
 16106 ;;                  2  [STACK] int 
 16107 ;; Registers used:
 16108 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 16109 ;; Tracked objects:
 16110 ;;		On entry : 0/5
 16111 ;;		On exit  : 0/0
 16112 ;;		Unchanged: 0/0
 16113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16118 ;;Total ram usage:        0 bytes
 16119 ;; Hardware stack levels used:    1
 16120 ;; Hardware stack levels required when called:    6
 16121 ;; This function calls:
 16122 ;;		Nothing
 16123 ;; This function is called by:
 16124 ;;		_efgtoa
 16125 ;; This function uses a reentrant model
 16126 ;;
 16127                           
 16128                           	psect	text59
 16129  016780                     __ptext59:
 16130                           	opt callstack 0
 16131  016780                     ___awdiv:
 16132                           	opt callstack 0
 16133                           
 16134                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16135  016780  52E6               	movf	postinc1,f,c
 16136  016782  52E6               	movf	postinc1,f,c
 16137  016784  52E6               	movf	postinc1,f,c
 16138  016786  52E6               	movf	postinc1,f,c
 16139                           
 16140                           ;stkvar	_sign @ sp[(-4)+2]
 16141                           
 16142                           ;incstack = 0
 16143  016788  0EFE               	movlw	-2
 16144  01678A  6AE3               	clrf	plusw1,c
 16145                           
 16146                           ;stkvar	_divisor @ sp[(-4)+-4]
 16147  01678C  0EF9               	movlw	-7
 16148  01678E  AEE3               	btfss	plusw1,7,c
 16149  016790  D009               	goto	l7186
 16150                           
 16151                           ;stkvar	_divisor @ sp[(-4)+-4]
 16152                           ;stkvar	_divisor @ sp[(-4)+-4]
 16153  016792  0EF8               	movlw	-8
 16154  016794  6CE3               	negf	plusw1,c
 16155  016796  0EF9               	movlw	-7
 16156  016798  1EE3               	comf	plusw1,f,c
 16157  01679A  B0D8               	btfsc	status,0,c
 16158  01679C  2AE3               	incf	plusw1,f,c
 16159                           
 16160                           ;stkvar	_sign @ sp[(-4)+2]
 16161  01679E  0EFE               	movlw	-2
 16162  0167A0  6AE3               	clrf	plusw1,c
 16163  0167A2  2AE3               	incf	plusw1,f,c
 16164  0167A4                     l7186:
 16165                           
 16166                           ;stkvar	_dividend @ sp[(-4)+-2]
 16167  0167A4  0EFB               	movlw	-5
 16168  0167A6  AEE3               	btfss	plusw1,7,c
 16169  0167A8  D008               	goto	l7192
 16170                           
 16171                           ;stkvar	_dividend @ sp[(-4)+-2]
 16172                           ;stkvar	_dividend @ sp[(-4)+-2]
 16173  0167AA  0EFA               	movlw	-6
 16174  0167AC  6CE3               	negf	plusw1,c
 16175  0167AE  0EFB               	movlw	-5
 16176  0167B0  1EE3               	comf	plusw1,f,c
 16177  0167B2  B0D8               	btfsc	status,0,c
 16178  0167B4  2AE3               	incf	plusw1,f,c
 16179                           
 16180                           ;stkvar	_sign @ sp[(-4)+2]
 16181  0167B6  0EFE               	movlw	-2
 16182  0167B8  70E3               	btg	plusw1,0,c
 16183  0167BA                     l7192:
 16184                           
 16185                           ;stkvar	_quotient @ sp[(-4)+0]
 16186  0167BA  0EFC               	movlw	-4
 16187  0167BC  6AE3               	clrf	plusw1,c
 16188  0167BE  0EFD               	movlw	-3
 16189  0167C0  6AE3               	clrf	plusw1,c
 16190                           
 16191                           ;stkvar	_divisor @ sp[(-4)+-4]
 16192  0167C2  0EF8               	movlw	-8
 16193  0167C4  006F FF8C  F032    	movff	plusw1,btemp
 16194  0167CA  0EF9               	movlw	-7
 16195  0167CC  50E3               	movf	plusw1,w,c
 16196  0167CE  1032               	iorwf	btemp^0,w,c
 16197  0167D0  B4D8               	btfsc	status,2,c
 16198  0167D2  D066               	goto	u6180
 16199                           
 16200                           ;stkvar	_counter @ sp[(-4)+3]
 16201  0167D4  0EFF               	movlw	-1
 16202  0167D6  6AE3               	clrf	plusw1,c
 16203  0167D8  D012               	goto	L16
 16204  0167DA                     l7198:
 16205                           
 16206                           ;stkvar	_divisor @ sp[(-4)+-4]
 16207  0167DA  0EF8               	movlw	-8
 16208  0167DC  50E3               	movf	plusw1,w,c
 16209  0167DE  90D8               	bcf	status,0,c
 16210  0167E0  34E8               	rlcf	wreg,w,c
 16211  0167E2  6E32               	movwf	btemp^0,c
 16212  0167E4  0EF8               	movlw	-8
 16213  0167E6  0060  F0CB  FFE3   	movff	btemp,plusw1
 16214  0167EC  0EF9               	movlw	-7
 16215  0167EE  50E3               	movf	plusw1,w,c
 16216  0167F0  34E8               	rlcf	wreg,w,c
 16217  0167F2  6E32               	movwf	btemp^0,c
 16218  0167F4  0EF9               	movlw	-7
 16219  0167F6  0060  F0CB  FFE3   	movff	btemp,plusw1
 16220                           
 16221                           ;stkvar	_counter @ sp[(-4)+3]
 16222  0167FC  0EFF               	movlw	-1
 16223  0167FE                     L16:
 16224  0167FE  2AE3               	incf	plusw1,f,c
 16225                           
 16226                           ;stkvar	_divisor @ sp[(-4)+-4]
 16227  016800  0EF9               	movlw	-7
 16228  016802  AEE3               	btfss	plusw1,7,c
 16229  016804  D7EA               	goto	l7198
 16230  016806                     u6160:
 16231                           
 16232                           ;stkvar	_quotient @ sp[(-4)+0]
 16233  016806  0EFC               	movlw	-4
 16234  016808  50E3               	movf	plusw1,w,c
 16235  01680A  90D8               	bcf	status,0,c
 16236  01680C  34E8               	rlcf	wreg,w,c
 16237  01680E  6E32               	movwf	btemp^0,c
 16238  016810  0EFC               	movlw	-4
 16239  016812  0060  F0CB  FFE3   	movff	btemp,plusw1
 16240  016818  0EFD               	movlw	-3
 16241  01681A  50E3               	movf	plusw1,w,c
 16242  01681C  34E8               	rlcf	wreg,w,c
 16243  01681E  6E32               	movwf	btemp^0,c
 16244  016820  0EFD               	movlw	-3
 16245  016822  0060  F0CB  FFE3   	movff	btemp,plusw1
 16246                           
 16247                           ;stkvar	_divisor @ sp[(-4)+-4]
 16248  016828  0EF8               	movlw	-8
 16249  01682A  006F FF8C  F03C    	movff	plusw1,btemp+10
 16250  016830  0EF9               	movlw	-7
 16251  016832  006F FF8C  F03D    	movff	plusw1,btemp+11
 16252                           
 16253                           ;stkvar	_dividend @ sp[(-4)+-2]
 16254  016838  0EFA               	movlw	-6
 16255  01683A  006F FF8C  F03A    	movff	plusw1,btemp+8
 16256  016840  0EFB               	movlw	-5
 16257  016842  006F FF8C  F03B    	movff	plusw1,btemp+9
 16258  016848  503C               	movf	(btemp+10)^0,w,c
 16259  01684A  5C3A               	subwf	(btemp+8)^0,w,c
 16260  01684C  503D               	movf	(btemp+11)^0,w,c
 16261  01684E  583B               	subwfb	(btemp+9)^0,w,c
 16262  016850  A0D8               	btfss	status,0,c
 16263  016852  D016               	goto	l7212
 16264                           
 16265                           ;stkvar	_divisor @ sp[(-4)+-4]
 16266                           ;stkvar	_dividend @ sp[(-4)+-2]
 16267  016854  0EFA               	movlw	-6
 16268  016856  50E3               	movf	plusw1,w,c
 16269  016858  6E32               	movwf	btemp^0,c
 16270  01685A  0EF8               	movlw	-8
 16271  01685C  50E3               	movf	plusw1,w,c
 16272  01685E  5E32               	subwf	btemp^0,f,c
 16273  016860  0EFA               	movlw	-6
 16274  016862  0060  F0CB  FFE3   	movff	btemp,plusw1
 16275  016868  0EFB               	movlw	-5
 16276  01686A  50E3               	movf	plusw1,w,c
 16277  01686C  6E32               	movwf	btemp^0,c
 16278  01686E  0EF9               	movlw	-7
 16279  016870  50E3               	movf	plusw1,w,c
 16280  016872  5A32               	subwfb	btemp^0,f,c
 16281  016874  0EFB               	movlw	-5
 16282  016876  0060  F0CB  FFE3   	movff	btemp,plusw1
 16283                           
 16284                           ;stkvar	_quotient @ sp[(-4)+0]
 16285  01687C  0EFC               	movlw	-4
 16286  01687E  80E3               	bsf	plusw1,0,c
 16287  016880                     l7212:
 16288                           
 16289                           ;stkvar	_divisor @ sp[(-4)+-4]
 16290  016880  90D8               	bcf	status,0,c
 16291  016882  0EF9               	movlw	-7
 16292  016884  32E3               	rrcf	plusw1,f,c
 16293  016886  0EF8               	movlw	-8
 16294  016888  32E3               	rrcf	plusw1,f,c
 16295                           
 16296                           ;stkvar	_counter @ sp[(-4)+3]
 16297  01688A  0EFF               	movlw	-1
 16298  01688C  50E3               	movf	plusw1,w,c
 16299  01688E  6E32               	movwf	btemp^0,c
 16300  016890  0E01               	movlw	1
 16301  016892  5E32               	subwf	btemp^0,f,c
 16302  016894  0EFF               	movlw	-1
 16303  016896  0060  F0CB  FFE3   	movff	btemp,plusw1
 16304  01689C  A4D8               	btfss	status,2,c
 16305  01689E  D7B3               	goto	u6160
 16306  0168A0                     u6180:
 16307                           
 16308                           ;stkvar	_sign @ sp[(-4)+2]
 16309  0168A0  0EFE               	movlw	-2
 16310  0168A2  50E3               	movf	plusw1,w,c
 16311  0168A4  B4D8               	btfsc	status,2,c
 16312  0168A6  D006               	goto	l7220
 16313                           
 16314                           ;stkvar	_quotient @ sp[(-4)+0]
 16315                           ;stkvar	_quotient @ sp[(-4)+0]
 16316  0168A8  0EFC               	movlw	-4
 16317  0168AA  6CE3               	negf	plusw1,c
 16318  0168AC  0EFD               	movlw	-3
 16319  0168AE  1EE3               	comf	plusw1,f,c
 16320  0168B0  B0D8               	btfsc	status,0,c
 16321  0168B2  2AE3               	incf	plusw1,f,c
 16322  0168B4                     l7220:
 16323                           
 16324                           ;stkvar	_quotient @ sp[(-4)+0]
 16325  0168B4  0EFC               	movlw	-4
 16326  0168B6  006F FF8C  F032    	movff	plusw1,btemp
 16327  0168BC  0EFD               	movlw	-3
 16328  0168BE  006F FF8C  F033    	movff	plusw1,btemp+1
 16329                           
 16330                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16331  0168C4  0EF8               	movlw	248
 16332  0168C6  26E1               	addwf	fsr1l,f,c
 16333  0168C8  0EFF               	movlw	255
 16334  0168CA  22E2               	addwfc	fsr1h,f,c
 16335  0168CC  0012               	return		;funcret
 16336  0168CE                     __end_of___awdiv:
 16337                           	opt callstack 0
 16338                           
 16339 ;; *************** function _dtoa *****************
 16340 ;; Defined at:
 16341 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16342 ;; Parameters:    Size  Location     Type
 16343 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16344 ;;		 -> f(6), NULL(0), 
 16345 ;;  d               8  [STACK] long long 
 16346 ;; Auto vars:     Size  Location     Type
 16347 ;;  n               8  [STACK] long long 
 16348 ;;  i               2  [STACK] int 
 16349 ;;  s               2  [STACK] int 
 16350 ;;  w               2  [STACK] int 
 16351 ;;  p               2  [STACK] int 
 16352 ;; Return value:  Size  Location     Type
 16353 ;;                  2  [STACK] int 
 16354 ;; Registers used:
 16355 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 16356 ;; Tracked objects:
 16357 ;;		On entry : 0/5
 16358 ;;		On exit  : 0/0
 16359 ;;		Unchanged: 0/0
 16360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16365 ;;Total ram usage:        0 bytes
 16366 ;; Hardware stack levels used:    1
 16367 ;; Hardware stack levels required when called:   11
 16368 ;; This function calls:
 16369 ;;		___aodiv
 16370 ;;		___aomod
 16371 ;;		_abs
 16372 ;;		_pad
 16373 ;; This function is called by:
 16374 ;;		_vfpfcnvrt
 16375 ;; This function uses a reentrant model
 16376 ;;
 16377                           
 16378                           	psect	text60
 16379  014018                     __ptext60:
 16380                           	opt callstack 0
 16381  014018                     _dtoa:
 16382                           	opt callstack 0
 16383                           
 16384                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 16385  014018  0E12               	movlw	18
 16386  01401A  26E1               	addwf	fsr1l,f,c
 16387  01401C  0E00               	movlw	0
 16388  01401E  22E2               	addwfc	fsr1h,f,c
 16389                           
 16390                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 16391                           ;stkvar	_d @ sp[(-18)+-10]
 16392                           
 16393                           ;incstack = 0
 16394  014020  0EE4               	movlw	228
 16395  014022  24E1               	addwf	fsr1l,w,c
 16396  014024  6ED9               	movwf	fsr2l,c
 16397  014026  0EFF               	movlw	255
 16398  014028  20E2               	addwfc	fsr1h,w,c
 16399  01402A  6EDA               	movwf	fsr2h,c
 16400                           
 16401                           ;stkvar	_n @ sp[(-18)+2]
 16402  01402C  0E08               	movlw	8
 16403  01402E  6E32               	movwf	btemp^0,c
 16404  014030  0EF0               	movlw	-16
 16405  014032                     us922999:
 16406  014032  006F FF7B FFE3     	movff	postinc2,plusw1
 16407  014038  28E8               	incf	wreg,w,c
 16408  01403A  2E32               	decfsz	btemp^0,f,c
 16409  01403C  D7FA               	bra	us922999
 16410                           
 16411                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 16412                           ;stkvar	_n @ sp[(-18)+2]
 16413  01403E  0EF7               	movlw	-9
 16414  014040  AEE3               	btfss	plusw1,7,c
 16415  014042  D002               	goto	u9230
 16416  014044  0E01               	movlw	1
 16417  014046  D001               	goto	u9240
 16418  014048                     u9230:
 16419  014048  0E00               	movlw	0
 16420  01404A                     u9240:
 16421  01404A  6E3C               	movwf	(btemp+10)^0,c
 16422  01404C  6A3D               	clrf	(btemp+11)^0,c
 16423                           
 16424                           ;stkvar	_s @ sp[(-18)+12]
 16425  01404E  0EFA               	movlw	-6
 16426  014050  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16427  014056  0EFB               	movlw	-5
 16428  014058  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16429                           
 16430                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 16431                           ;stkvar	_s @ sp[(-18)+12]
 16432  01405E  0EFA               	movlw	-6
 16433  014060  006F FF8C  F032    	movff	plusw1,btemp
 16434  014066  0EFB               	movlw	-5
 16435  014068  50E3               	movf	plusw1,w,c
 16436  01406A  1032               	iorwf	btemp^0,w,c
 16437  01406C  B4D8               	btfsc	status,2,c
 16438  01406E  D025               	goto	u9260
 16439                           
 16440                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 16441                           ;stkvar	_n @ sp[(-18)+2]
 16442                           ;stkvar	_n @ sp[(-18)+2]
 16443  014070  0EF0               	movlw	-16
 16444  014072  6CE3               	negf	plusw1,c
 16445  014074  0EF1               	movlw	-15
 16446  014076  1EE3               	comf	plusw1,f,c
 16447  014078  0EF2               	movlw	-14
 16448  01407A  1EE3               	comf	plusw1,f,c
 16449  01407C  0EF3               	movlw	-13
 16450  01407E  1EE3               	comf	plusw1,f,c
 16451  014080  0EF4               	movlw	-12
 16452  014082  1EE3               	comf	plusw1,f,c
 16453  014084  0EF5               	movlw	-11
 16454  014086  1EE3               	comf	plusw1,f,c
 16455  014088  0EF6               	movlw	-10
 16456  01408A  1EE3               	comf	plusw1,f,c
 16457  01408C  0EF7               	movlw	-9
 16458  01408E  1EE3               	comf	plusw1,f,c
 16459  014090  E314               	bnc	u9260
 16460  014092  0EF1               	movlw	-15
 16461  014094  2AE3               	incf	plusw1,f,c
 16462  014096  E311               	bnc	u9260
 16463  014098  0EF2               	movlw	-14
 16464  01409A  2AE3               	incf	plusw1,f,c
 16465  01409C  E30E               	bnc	u9260
 16466  01409E  0EF3               	movlw	-13
 16467  0140A0  2AE3               	incf	plusw1,f,c
 16468  0140A2  E30B               	bnc	u9260
 16469  0140A4  0EF4               	movlw	-12
 16470  0140A6  2AE3               	incf	plusw1,f,c
 16471  0140A8  E308               	bnc	u9260
 16472  0140AA  0EF5               	movlw	-11
 16473  0140AC  2AE3               	incf	plusw1,f,c
 16474  0140AE  E305               	bnc	u9260
 16475  0140B0  0EF6               	movlw	-10
 16476  0140B2  2AE3               	incf	plusw1,f,c
 16477  0140B4  E302               	bnc	u9260
 16478  0140B6  0EF7               	movlw	-9
 16479  0140B8  2AE3               	incf	plusw1,f,c
 16480  0140BA                     u9260:
 16481                           
 16482                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 16483  0140BA  AE1E               	btfss	(_prec+1)^0,7,c
 16484                           
 16485                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 16486  0140BC  921F               	bcf	_flags^0,1,c
 16487                           
 16488                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 16489  0140BE  BE1E               	btfsc	(_prec+1)^0,7,c
 16490  0140C0  D005               	goto	u9280
 16491  0140C2  501E               	movf	(_prec+1)^0,w,c
 16492  0140C4  E110               	bnz	l9858
 16493  0140C6  041D               	decf	_prec^0,w,c
 16494  0140C8  B0D8               	btfsc	status,0,c
 16495  0140CA  D00D               	goto	l9858
 16496  0140CC                     u9280:
 16497  0140CC  0E01               	movlw	1
 16498  0140CE  6E3C               	movwf	(btemp+10)^0,c
 16499  0140D0  0E00               	movlw	0
 16500  0140D2  6E3D               	movwf	(btemp+11)^0,c
 16501                           
 16502                           ;stkvar	_p @ sp[(-18)+16]
 16503  0140D4  0EFE               	movlw	-2
 16504  0140D6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16505  0140DC  0EFF               	movlw	-1
 16506  0140DE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16507  0140E4  D008               	goto	l1897
 16508  0140E6                     l9858:
 16509                           
 16510                           ;stkvar	_p @ sp[(-18)+16]
 16511  0140E6  0EFE               	movlw	-2
 16512  0140E8  0060  F077  FFE3   	movff	_prec,plusw1
 16513  0140EE  0EFF               	movlw	-1
 16514  0140F0  0060  F07B  FFE3   	movff	_prec+1,plusw1
 16515  0140F6                     l1897:
 16516                           
 16517                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 16518                           ;stkvar	_w @ sp[(-18)+14]
 16519  0140F6  0EFC               	movlw	-4
 16520  0140F8  0060  F06F  FFE3   	movff	_width,plusw1
 16521  0140FE  0EFD               	movlw	-3
 16522  014100  0060  F073  FFE3   	movff	_width+1,plusw1
 16523                           
 16524                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 16525                           ;stkvar	_s @ sp[(-18)+12]
 16526  014106  0EFA               	movlw	-6
 16527  014108  006F FF8C  F032    	movff	plusw1,btemp
 16528  01410E  0EFB               	movlw	-5
 16529  014110  50E3               	movf	plusw1,w,c
 16530  014112  1032               	iorwf	btemp^0,w,c
 16531  014114  A4D8               	btfss	status,2,c
 16532  014116  D002               	goto	u9300
 16533  014118  A41F               	btfss	_flags^0,2,c
 16534  01411A  D00A               	goto	l9866
 16535  01411C                     u9300:
 16536                           
 16537                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 16538                           ;stkvar	_w @ sp[(-18)+14]
 16539  01411C  50E1               	movf	fsr1l,w,c
 16540  01411E  0FFC               	addlw	-4
 16541  014120  6ED9               	movwf	fsr2l,c
 16542  014122  50E2               	movf	fsr1h,w,c
 16543  014124  6EDA               	movwf	fsr2h,c
 16544  014126  0EFF               	movlw	255
 16545  014128  22DA               	addwfc	fsr2h,f,c
 16546  01412A  06DE               	decf	postinc2,f,c
 16547  01412C  0E00               	movlw	0
 16548  01412E  5ADD               	subwfb	postdec2,f,c
 16549  014130                     l9866:
 16550                           
 16551                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 16552  014130  0E4F               	movlw	79
 16553  014132  6E3C               	movwf	(btemp+10)^0,c
 16554  014134  0E00               	movlw	0
 16555  014136  6E3D               	movwf	(btemp+11)^0,c
 16556                           
 16557                           ;stkvar	_i @ sp[(-18)+10]
 16558  014138  0EF8               	movlw	-8
 16559  01413A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16560  014140  0EF9               	movlw	-7
 16561  014142  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16562                           
 16563                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 16564  014148  0101               	movlb	1	; () banked
 16565  01414A  6BF2               	clrf	(_dbuf+79)& (0+255),b
 16566                           
 16567                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16568  01414C  D109               	goto	l9880
 16569  01414E                     l9870:
 16570                           
 16571                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 16572                           ;stkvar	_i @ sp[(-18)+10]
 16573  01414E  50E1               	movf	fsr1l,w,c
 16574  014150  0FF8               	addlw	-8
 16575  014152  6ED9               	movwf	fsr2l,c
 16576  014154  50E2               	movf	fsr1h,w,c
 16577  014156  6EDA               	movwf	fsr2h,c
 16578  014158  0EFF               	movlw	255
 16579  01415A  22DA               	addwfc	fsr2h,f,c
 16580  01415C  06DE               	decf	postinc2,f,c
 16581  01415E  0E00               	movlw	0
 16582  014160  5ADD               	subwfb	postdec2,f,c
 16583                           
 16584                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 16585  014162  0E0A               	movlw	10
 16586  014164  6EE6               	movwf	postinc1,c
 16587  014166  0E00               	movlw	0
 16588  014168  6EE6               	movwf	postinc1,c
 16589  01416A  0E00               	movlw	0
 16590  01416C  6EE6               	movwf	postinc1,c
 16591  01416E  0E00               	movlw	0
 16592  014170  6EE6               	movwf	postinc1,c
 16593  014172  0E00               	movlw	0
 16594  014174  6EE6               	movwf	postinc1,c
 16595  014176  0E00               	movlw	0
 16596  014178  6EE6               	movwf	postinc1,c
 16597  01417A  0E00               	movlw	0
 16598  01417C  6EE6               	movwf	postinc1,c
 16599  01417E  0E00               	movlw	0
 16600  014180  6EE6               	movwf	postinc1,c
 16601                           
 16602                           ;stkvar	_n @ sp[(-26)+2]
 16603  014182  50E1               	movf	fsr1l,w,c
 16604  014184  0FE8               	addlw	-24
 16605  014186  6ED9               	movwf	fsr2l,c
 16606  014188  50E2               	movf	fsr1h,w,c
 16607  01418A  6EDA               	movwf	fsr2h,c
 16608  01418C  0EFF               	movlw	255
 16609  01418E  22DA               	addwfc	fsr2h,f,c
 16610  014190  006F FF7B FFE6     	movff	postinc2,postinc1
 16611  014196  006F FF7B FFE6     	movff	postinc2,postinc1
 16612  01419C  006F FF7B FFE6     	movff	postinc2,postinc1
 16613  0141A2  006F FF7B FFE6     	movff	postinc2,postinc1
 16614  0141A8  006F FF7B FFE6     	movff	postinc2,postinc1
 16615  0141AE  006F FF7B FFE6     	movff	postinc2,postinc1
 16616  0141B4  006F FF7B FFE6     	movff	postinc2,postinc1
 16617  0141BA  006F FF7B FFE6     	movff	postinc2,postinc1
 16618  0141C0  EC9C  F0AC         	call	___aomod	;wreg free
 16619  0141C4  52E5               	movf	postdec1,f,c
 16620  0141C6  006F FF9C  F049    	movff	indf1,btemp+23
 16621  0141CC  52E5               	movf	postdec1,f,c
 16622  0141CE  006F FF9C  F048    	movff	indf1,btemp+22
 16623  0141D4  52E5               	movf	postdec1,f,c
 16624  0141D6  006F FF9C  F047    	movff	indf1,btemp+21
 16625  0141DC  52E5               	movf	postdec1,f,c
 16626  0141DE  006F FF9C  F046    	movff	indf1,btemp+20
 16627  0141E4  52E5               	movf	postdec1,f,c
 16628  0141E6  006F FF9C  F045    	movff	indf1,btemp+19
 16629  0141EC  52E5               	movf	postdec1,f,c
 16630  0141EE  006F FF9C  F044    	movff	indf1,btemp+18
 16631  0141F4  52E5               	movf	postdec1,f,c
 16632  0141F6  006F FF9C  F043    	movff	indf1,btemp+17
 16633  0141FC  52E5               	movf	postdec1,f,c
 16634  0141FE  006F FF9C  F042    	movff	indf1,btemp+16
 16635  014204  0EF8               	movlw	248
 16636  014206  26E1               	addwf	fsr1l,f,c
 16637  014208  0EFF               	movlw	255
 16638  01420A  22E2               	addwfc	fsr1h,f,c
 16639  01420C  0060  F108  F03C   	movff	btemp+16,btemp+10
 16640  014212  0060  F10C  F03D   	movff	btemp+17,btemp+11
 16641  014218  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 16642  01421E  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 16643  014224  ECDC  F0C1         	call	_abs	;wreg free
 16644  014228  0E30               	movlw	48
 16645  01422A  2632               	addwf	btemp^0,f,c
 16646                           
 16647                           ;stkvar	_i @ sp[(-18)+10]
 16648  01422C  0EF8               	movlw	-8
 16649  01422E  006F FF8C  F03C    	movff	plusw1,btemp+10
 16650  014234  0EF9               	movlw	-7
 16651  014236  006F FF8C  F03D    	movff	plusw1,btemp+11
 16652  01423C  0EA3               	movlw	low _dbuf
 16653  01423E  243C               	addwf	(btemp+10)^0,w,c
 16654  014240  6ED9               	movwf	fsr2l,c
 16655  014242  0E01               	movlw	high _dbuf
 16656  014244  203D               	addwfc	(btemp+11)^0,w,c
 16657  014246  6EDA               	movwf	fsr2h,c
 16658  014248  0060  F0CB  FFDF   	movff	btemp,indf2
 16659                           
 16660                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 16661                           ;stkvar	_p @ sp[(-18)+16]
 16662  01424E  50E1               	movf	fsr1l,w,c
 16663  014250  0FFE               	addlw	-2
 16664  014252  6ED9               	movwf	fsr2l,c
 16665  014254  50E2               	movf	fsr1h,w,c
 16666  014256  6EDA               	movwf	fsr2h,c
 16667  014258  0EFF               	movlw	255
 16668  01425A  22DA               	addwfc	fsr2h,f,c
 16669  01425C  06DE               	decf	postinc2,f,c
 16670  01425E  0E00               	movlw	0
 16671  014260  5ADD               	subwfb	postdec2,f,c
 16672                           
 16673                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 16674                           ;stkvar	_w @ sp[(-18)+14]
 16675  014262  50E1               	movf	fsr1l,w,c
 16676  014264  0FFC               	addlw	-4
 16677  014266  6ED9               	movwf	fsr2l,c
 16678  014268  50E2               	movf	fsr1h,w,c
 16679  01426A  6EDA               	movwf	fsr2h,c
 16680  01426C  0EFF               	movlw	255
 16681  01426E  22DA               	addwfc	fsr2h,f,c
 16682  014270  06DE               	decf	postinc2,f,c
 16683  014272  0E00               	movlw	0
 16684  014274  5ADD               	subwfb	postdec2,f,c
 16685                           
 16686                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 16687  014276  0E0A               	movlw	10
 16688  014278  6EE6               	movwf	postinc1,c
 16689  01427A  0E00               	movlw	0
 16690  01427C  6EE6               	movwf	postinc1,c
 16691  01427E  0E00               	movlw	0
 16692  014280  6EE6               	movwf	postinc1,c
 16693  014282  0E00               	movlw	0
 16694  014284  6EE6               	movwf	postinc1,c
 16695  014286  0E00               	movlw	0
 16696  014288  6EE6               	movwf	postinc1,c
 16697  01428A  0E00               	movlw	0
 16698  01428C  6EE6               	movwf	postinc1,c
 16699  01428E  0E00               	movlw	0
 16700  014290  6EE6               	movwf	postinc1,c
 16701  014292  0E00               	movlw	0
 16702  014294  6EE6               	movwf	postinc1,c
 16703                           
 16704                           ;stkvar	_n @ sp[(-26)+2]
 16705  014296  50E1               	movf	fsr1l,w,c
 16706  014298  0FE8               	addlw	-24
 16707  01429A  6ED9               	movwf	fsr2l,c
 16708  01429C  50E2               	movf	fsr1h,w,c
 16709  01429E  6EDA               	movwf	fsr2h,c
 16710  0142A0  0EFF               	movlw	255
 16711  0142A2  22DA               	addwfc	fsr2h,f,c
 16712  0142A4  006F FF7B FFE6     	movff	postinc2,postinc1
 16713  0142AA  006F FF7B FFE6     	movff	postinc2,postinc1
 16714  0142B0  006F FF7B FFE6     	movff	postinc2,postinc1
 16715  0142B6  006F FF7B FFE6     	movff	postinc2,postinc1
 16716  0142BC  006F FF7B FFE6     	movff	postinc2,postinc1
 16717  0142C2  006F FF7B FFE6     	movff	postinc2,postinc1
 16718  0142C8  006F FF7B FFE6     	movff	postinc2,postinc1
 16719  0142CE  006F FF7B FFE6     	movff	postinc2,postinc1
 16720  0142D4  EC22  F0AA         	call	___aodiv	;wreg free
 16721  0142D8  52E5               	movf	postdec1,f,c
 16722  0142DA  006F FF9C  F049    	movff	indf1,btemp+23
 16723  0142E0  52E5               	movf	postdec1,f,c
 16724  0142E2  006F FF9C  F048    	movff	indf1,btemp+22
 16725  0142E8  52E5               	movf	postdec1,f,c
 16726  0142EA  006F FF9C  F047    	movff	indf1,btemp+21
 16727  0142F0  52E5               	movf	postdec1,f,c
 16728  0142F2  006F FF9C  F046    	movff	indf1,btemp+20
 16729  0142F8  52E5               	movf	postdec1,f,c
 16730  0142FA  006F FF9C  F045    	movff	indf1,btemp+19
 16731  014300  52E5               	movf	postdec1,f,c
 16732  014302  006F FF9C  F044    	movff	indf1,btemp+18
 16733  014308  52E5               	movf	postdec1,f,c
 16734  01430A  006F FF9C  F043    	movff	indf1,btemp+17
 16735  014310  52E5               	movf	postdec1,f,c
 16736  014312  006F FF9C  F042    	movff	indf1,btemp+16
 16737  014318  0EF8               	movlw	248
 16738  01431A  26E1               	addwf	fsr1l,f,c
 16739  01431C  0EFF               	movlw	255
 16740  01431E  22E2               	addwfc	fsr1h,f,c
 16741                           
 16742                           ;stkvar	_n @ sp[(-18)+2]
 16743  014320  0EF0               	movlw	-16
 16744  014322  0060  F10B  FFE3   	movff	btemp+16,plusw1
 16745  014328  0EF1               	movlw	-15
 16746  01432A  0060  F10F  FFE3   	movff	btemp+17,plusw1
 16747  014330  0EF2               	movlw	-14
 16748  014332  0060  F113  FFE3   	movff	btemp+18,plusw1
 16749  014338  0EF3               	movlw	-13
 16750  01433A  0060  F117  FFE3   	movff	btemp+19,plusw1
 16751  014340  0EF4               	movlw	-12
 16752  014342  0060  F11B  FFE3   	movff	btemp+20,plusw1
 16753  014348  0EF5               	movlw	-11
 16754  01434A  0060  F11F  FFE3   	movff	btemp+21,plusw1
 16755  014350  0EF6               	movlw	-10
 16756  014352  0060  F123  FFE3   	movff	btemp+22,plusw1
 16757  014358  0EF7               	movlw	-9
 16758  01435A  0060  F127  FFE3   	movff	btemp+23,plusw1
 16759  014360                     l9880:
 16760                           
 16761                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16762                           ;stkvar	_i @ sp[(-18)+10]
 16763  014360  0EF9               	movlw	-7
 16764  014362  BEE3               	btfsc	plusw1,7,c
 16765  014364  D036               	goto	u9350
 16766  014366  0EF9               	movlw	-7
 16767  014368  50E3               	movf	plusw1,w,c
 16768  01436A  E104               	bnz	u9310
 16769  01436C  0EF8               	movlw	-8
 16770  01436E  04E3               	decf	plusw1,w,c
 16771  014370  A0D8               	btfss	status,0,c
 16772  014372  D02F               	goto	u9350
 16773  014374                     u9310:
 16774                           
 16775                           ;stkvar	_n @ sp[(-18)+2]
 16776  014374  0EF0               	movlw	-16
 16777  014376  50E3               	movf	plusw1,w,c
 16778  014378  E115               	bnz	u9321
 16779  01437A  0EF1               	movlw	-15
 16780  01437C  50E3               	movf	plusw1,w,c
 16781  01437E  E112               	bnz	u9321
 16782  014380  0EF2               	movlw	-14
 16783  014382  50E3               	movf	plusw1,w,c
 16784  014384  E10F               	bnz	u9321
 16785  014386  0EF3               	movlw	-13
 16786  014388  50E3               	movf	plusw1,w,c
 16787  01438A  E10C               	bnz	u9321
 16788  01438C  0EF4               	movlw	-12
 16789  01438E  50E3               	movf	plusw1,w,c
 16790  014390  E109               	bnz	u9321
 16791  014392  0EF5               	movlw	-11
 16792  014394  50E3               	movf	plusw1,w,c
 16793  014396  E106               	bnz	u9321
 16794  014398  0EF6               	movlw	-10
 16795  01439A  50E3               	movf	plusw1,w,c
 16796  01439C  E103               	bnz	u9321
 16797  01439E  0EF7               	movlw	-9
 16798  0143A0  50E3               	movf	plusw1,w,c
 16799  0143A2  A4D8               	btfss	status,2,c
 16800  0143A4                     u9321:
 16801  0143A4  D6D4               	goto	l9870
 16802                           
 16803                           ;stkvar	_p @ sp[(-18)+16]
 16804  0143A6  0EFF               	movlw	-1
 16805  0143A8  BEE3               	btfsc	plusw1,7,c
 16806  0143AA  D007               	goto	u9330
 16807  0143AC  0EFF               	movlw	-1
 16808  0143AE  50E3               	movf	plusw1,w,c
 16809  0143B0  E103               	bnz	u9331
 16810  0143B2  0EFE               	movlw	-2
 16811  0143B4  04E3               	decf	plusw1,w,c
 16812  0143B6  B0D8               	btfsc	status,0,c
 16813  0143B8                     u9331:
 16814  0143B8  D6CA               	goto	l9870
 16815  0143BA                     u9330:
 16816                           
 16817                           ;stkvar	_w @ sp[(-18)+14]
 16818  0143BA  0EFD               	movlw	-3
 16819  0143BC  BEE3               	btfsc	plusw1,7,c
 16820  0143BE  D009               	goto	u9350
 16821  0143C0  0EFD               	movlw	-3
 16822  0143C2  50E3               	movf	plusw1,w,c
 16823  0143C4  E104               	bnz	u9340
 16824  0143C6  0EFC               	movlw	-4
 16825  0143C8  04E3               	decf	plusw1,w,c
 16826  0143CA  A0D8               	btfss	status,0,c
 16827  0143CC  D002               	goto	u9350
 16828  0143CE                     u9340:
 16829  0143CE  B21F               	btfsc	_flags^0,1,c
 16830  0143D0  D6BE               	goto	l9870
 16831  0143D2                     u9350:
 16832                           
 16833                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 16834                           ;stkvar	_s @ sp[(-18)+12]
 16835  0143D2  0EFA               	movlw	-6
 16836  0143D4  006F FF8C  F032    	movff	plusw1,btemp
 16837  0143DA  0EFB               	movlw	-5
 16838  0143DC  50E3               	movf	plusw1,w,c
 16839  0143DE  1032               	iorwf	btemp^0,w,c
 16840  0143E0  A4D8               	btfss	status,2,c
 16841  0143E2  D002               	goto	u9370
 16842  0143E4  A41F               	btfss	_flags^0,2,c
 16843  0143E6  D033               	goto	l9904
 16844  0143E8                     u9370:
 16845                           
 16846                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 16847                           ;stkvar	_i @ sp[(-18)+10]
 16848  0143E8  50E1               	movf	fsr1l,w,c
 16849  0143EA  0FF8               	addlw	-8
 16850  0143EC  6ED9               	movwf	fsr2l,c
 16851  0143EE  50E2               	movf	fsr1h,w,c
 16852  0143F0  6EDA               	movwf	fsr2h,c
 16853  0143F2  0EFF               	movlw	255
 16854  0143F4  22DA               	addwfc	fsr2h,f,c
 16855  0143F6  06DE               	decf	postinc2,f,c
 16856  0143F8  0E00               	movlw	0
 16857  0143FA  5ADD               	subwfb	postdec2,f,c
 16858                           
 16859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 16860                           ;stkvar	_s @ sp[(-18)+12]
 16861  0143FC  0EFA               	movlw	-6
 16862  0143FE  006F FF8C  F032    	movff	plusw1,btemp
 16863  014404  0EFB               	movlw	-5
 16864  014406  50E3               	movf	plusw1,w,c
 16865  014408  1032               	iorwf	btemp^0,w,c
 16866  01440A  A4D8               	btfss	status,2,c
 16867  01440C  D002               	goto	l9900
 16868  01440E  0E2B               	movlw	43
 16869  014410  D001               	goto	L17
 16870  014412                     l9900:
 16871  014412  0E2D               	movlw	45
 16872  014414                     L17:
 16873  014414  6E3C               	movwf	(btemp+10)^0,c
 16874  014416  0E00               	movlw	0
 16875  014418  6E3D               	movwf	(btemp+11)^0,c
 16876                           
 16877                           ;stkvar	_dtoa$4613 @ sp[(-18)+0]
 16878  01441A  0EEE               	movlw	-18
 16879  01441C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16880  014422  0EEF               	movlw	-17
 16881  014424  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16882                           
 16883                           ;stkvar	_dtoa$4613 @ sp[(-18)+0]
 16884                           ;stkvar	_i @ sp[(-18)+10]
 16885  01442A  0EF8               	movlw	-8
 16886  01442C  006F FF8C  F03C    	movff	plusw1,btemp+10
 16887  014432  0EF9               	movlw	-7
 16888  014434  006F FF8C  F03D    	movff	plusw1,btemp+11
 16889  01443A  0EA3               	movlw	low _dbuf
 16890  01443C  243C               	addwf	(btemp+10)^0,w,c
 16891  01443E  6ED9               	movwf	fsr2l,c
 16892  014440  0E01               	movlw	high _dbuf
 16893  014442  203D               	addwfc	(btemp+11)^0,w,c
 16894  014444  6EDA               	movwf	fsr2h,c
 16895  014446  0EEE               	movlw	-18
 16896  014448  006F FF8F FFDF     	movff	plusw1,indf2
 16897  01444E                     l9904:
 16898                           
 16899                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 16900                           ;stkvar	_w @ sp[(-18)+14]
 16901  01444E  0EFC               	movlw	-4
 16902  014450  006F FF8F FFE6     	movff	plusw1,postinc1
 16903  014456  006F FF8F FFE6     	movff	plusw1,postinc1
 16904                           
 16905                           ;stkvar	_i @ sp[(-20)+10]
 16906  01445C  0EA3               	movlw	low _dbuf
 16907  01445E  6E3C               	movwf	(btemp+10)^0,c
 16908  014460  0E01               	movlw	high _dbuf
 16909  014462  6E3D               	movwf	(btemp+11)^0,c
 16910  014464  0EF6               	movlw	-10
 16911  014466  50E3               	movf	plusw1,w,c
 16912  014468  263C               	addwf	(btemp+10)^0,f,c
 16913  01446A  0EF7               	movlw	-9
 16914  01446C  50E3               	movf	plusw1,w,c
 16915  01446E  223D               	addwfc	(btemp+11)^0,f,c
 16916  014470  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 16917  014476  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 16918                           
 16919                           ;stkvar	_fp @ sp[(-22)+-2]
 16920  01447C  0EE8               	movlw	-24
 16921  01447E  006F FF8F FFE6     	movff	plusw1,postinc1
 16922  014484  006F FF8F FFE6     	movff	plusw1,postinc1
 16923  01448A  ECC0  F0B6         	call	_pad	;wreg free
 16924                           
 16925                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 16926  01448E  0EE4               	movlw	228
 16927  014490  26E1               	addwf	fsr1l,f,c
 16928  014492  0EFF               	movlw	255
 16929  014494  22E2               	addwfc	fsr1h,f,c
 16930  014496  0012               	return		;funcret
 16931  014498                     __end_of_dtoa:
 16932                           	opt callstack 0
 16933                           
 16934 ;; *************** function _abs *****************
 16935 ;; Defined at:
 16936 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 16937 ;; Parameters:    Size  Location     Type
 16938 ;;  a               2  [STACK] int 
 16939 ;; Auto vars:     Size  Location     Type
 16940 ;;		None
 16941 ;; Return value:  Size  Location     Type
 16942 ;;                  2  [STACK] int 
 16943 ;; Registers used:
 16944 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 16945 ;; Tracked objects:
 16946 ;;		On entry : 0/1
 16947 ;;		On exit  : 0/0
 16948 ;;		Unchanged: 0/0
 16949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16954 ;;Total ram usage:        0 bytes
 16955 ;; Hardware stack levels used:    1
 16956 ;; Hardware stack levels required when called:    6
 16957 ;; This function calls:
 16958 ;;		Nothing
 16959 ;; This function is called by:
 16960 ;;		_dtoa
 16961 ;; This function uses a reentrant model
 16962 ;;
 16963                           
 16964                           	psect	text61
 16965  0183B8                     __ptext61:
 16966                           	opt callstack 0
 16967  0183B8                     _abs:
 16968                           	opt callstack 17
 16969                           
 16970                           ;stkvar	_a @ sp[(0)+-2]
 16971                           
 16972                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16973                           ;incstack = 0
 16974  0183B8  0EFF               	movlw	-1
 16975  0183BA  BEE3               	btfsc	plusw1,7,c
 16976  0183BC  D007               	goto	u5140
 16977  0183BE  0EFF               	movlw	-1
 16978  0183C0  50E3               	movf	plusw1,w,c
 16979  0183C2  E112               	bnz	l6674
 16980  0183C4  0EFE               	movlw	-2
 16981  0183C6  04E3               	decf	plusw1,w,c
 16982  0183C8  B0D8               	btfsc	status,0,c
 16983  0183CA  D00E               	goto	l6674
 16984  0183CC                     u5140:
 16985                           
 16986                           ;stkvar	_a @ sp[(0)+-2]
 16987  0183CC  0EFE               	movlw	-2
 16988  0183CE  006F FF8C  F032    	movff	plusw1,btemp
 16989  0183D4  1E32               	comf	btemp^0,f,c
 16990  0183D6  0EFF               	movlw	-1
 16991  0183D8  006F FF8C  F033    	movff	plusw1,btemp+1
 16992  0183DE  1E33               	comf	(btemp+1)^0,f,c
 16993  0183E0  2A32               	incf	btemp^0,f,c
 16994  0183E2  B4D8               	btfsc	status,2,c
 16995  0183E4  2A33               	incf	(btemp+1)^0,f,c
 16996  0183E6  D008               	goto	l2800
 16997  0183E8                     l6674:
 16998                           
 16999                           ;stkvar	_a @ sp[(0)+-2]
 17000  0183E8  0EFE               	movlw	-2
 17001  0183EA  006F FF8C  F032    	movff	plusw1,btemp
 17002  0183F0  0EFF               	movlw	-1
 17003  0183F2  006F FF8C  F033    	movff	plusw1,btemp+1
 17004  0183F8                     l2800:
 17005                           
 17006                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 17007  0183F8  52E5               	movf	postdec1,f,c
 17008  0183FA  52E5               	movf	postdec1,f,c
 17009  0183FC  0012               	return		;funcret
 17010  0183FE                     __end_of_abs:
 17011                           	opt callstack 0
 17012                           
 17013 ;; *************** function ___aomod *****************
 17014 ;; Defined at:
 17015 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 17016 ;; Parameters:    Size  Location     Type
 17017 ;;  dividend        8  [STACK] long long 
 17018 ;;  divisor         8  [STACK] long long 
 17019 ;; Auto vars:     Size  Location     Type
 17020 ;;  sign            1  [STACK] unsigned char 
 17021 ;;  counter         1  [STACK] unsigned char 
 17022 ;; Return value:  Size  Location     Type
 17023 ;;                  8  [STACK] long long 
 17024 ;; Registers used:
 17025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 17026 ;; Tracked objects:
 17027 ;;		On entry : 0/1
 17028 ;;		On exit  : 0/0
 17029 ;;		Unchanged: 0/0
 17030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17035 ;;Total ram usage:        0 bytes
 17036 ;; Hardware stack levels used:    1
 17037 ;; Hardware stack levels required when called:    6
 17038 ;; This function calls:
 17039 ;;		Nothing
 17040 ;; This function is called by:
 17041 ;;		_dtoa
 17042 ;; This function uses a reentrant model
 17043 ;;
 17044                           
 17045                           	psect	text62
 17046  015938                     __ptext62:
 17047                           	opt callstack 0
 17048  015938                     ___aomod:
 17049                           	opt callstack 0
 17050                           
 17051                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 17052  015938  52E6               	movf	postinc1,f,c
 17053  01593A  52E6               	movf	postinc1,f,c
 17054                           
 17055                           ;stkvar	_sign @ sp[(-2)+0]
 17056                           
 17057                           ;incstack = 0
 17058  01593C  0EFE               	movlw	-2
 17059  01593E  6AE3               	clrf	plusw1,c
 17060                           
 17061                           ;stkvar	_dividend @ sp[(-2)+-8]
 17062  015940  0EFD               	movlw	-3
 17063  015942  AEE3               	btfss	plusw1,7,c
 17064  015944  D028               	goto	l6832
 17065                           
 17066                           ;stkvar	_dividend @ sp[(-2)+-8]
 17067                           ;stkvar	_dividend @ sp[(-2)+-8]
 17068  015946  0EF6               	movlw	-10
 17069  015948  6CE3               	negf	plusw1,c
 17070  01594A  0EF7               	movlw	-9
 17071  01594C  1EE3               	comf	plusw1,f,c
 17072  01594E  0EF8               	movlw	-8
 17073  015950  1EE3               	comf	plusw1,f,c
 17074  015952  0EF9               	movlw	-7
 17075  015954  1EE3               	comf	plusw1,f,c
 17076  015956  0EFA               	movlw	-6
 17077  015958  1EE3               	comf	plusw1,f,c
 17078  01595A  0EFB               	movlw	-5
 17079  01595C  1EE3               	comf	plusw1,f,c
 17080  01595E  0EFC               	movlw	-4
 17081  015960  1EE3               	comf	plusw1,f,c
 17082  015962  0EFD               	movlw	-3
 17083  015964  1EE3               	comf	plusw1,f,c
 17084  015966  E314               	bnc	u5570
 17085  015968  0EF7               	movlw	-9
 17086  01596A  2AE3               	incf	plusw1,f,c
 17087  01596C  E311               	bnc	u5570
 17088  01596E  0EF8               	movlw	-8
 17089  015970  2AE3               	incf	plusw1,f,c
 17090  015972  E30E               	bnc	u5570
 17091  015974  0EF9               	movlw	-7
 17092  015976  2AE3               	incf	plusw1,f,c
 17093  015978  E30B               	bnc	u5570
 17094  01597A  0EFA               	movlw	-6
 17095  01597C  2AE3               	incf	plusw1,f,c
 17096  01597E  E308               	bnc	u5570
 17097  015980  0EFB               	movlw	-5
 17098  015982  2AE3               	incf	plusw1,f,c
 17099  015984  E305               	bnc	u5570
 17100  015986  0EFC               	movlw	-4
 17101  015988  2AE3               	incf	plusw1,f,c
 17102  01598A  E302               	bnc	u5570
 17103  01598C  0EFD               	movlw	-3
 17104  01598E  2AE3               	incf	plusw1,f,c
 17105  015990                     u5570:
 17106                           
 17107                           ;stkvar	_sign @ sp[(-2)+0]
 17108  015990  0EFE               	movlw	-2
 17109  015992  6AE3               	clrf	plusw1,c
 17110  015994  2AE3               	incf	plusw1,f,c
 17111  015996                     l6832:
 17112                           
 17113                           ;stkvar	_divisor @ sp[(-2)+-16]
 17114  015996  0EF5               	movlw	-11
 17115  015998  AEE3               	btfss	plusw1,7,c
 17116  01599A  D025               	goto	u5590
 17117                           
 17118                           ;stkvar	_divisor @ sp[(-2)+-16]
 17119                           ;stkvar	_divisor @ sp[(-2)+-16]
 17120  01599C  0EEE               	movlw	-18
 17121  01599E  6CE3               	negf	plusw1,c
 17122  0159A0  0EEF               	movlw	-17
 17123  0159A2  1EE3               	comf	plusw1,f,c
 17124  0159A4  0EF0               	movlw	-16
 17125  0159A6  1EE3               	comf	plusw1,f,c
 17126  0159A8  0EF1               	movlw	-15
 17127  0159AA  1EE3               	comf	plusw1,f,c
 17128  0159AC  0EF2               	movlw	-14
 17129  0159AE  1EE3               	comf	plusw1,f,c
 17130  0159B0  0EF3               	movlw	-13
 17131  0159B2  1EE3               	comf	plusw1,f,c
 17132  0159B4  0EF4               	movlw	-12
 17133  0159B6  1EE3               	comf	plusw1,f,c
 17134  0159B8  0EF5               	movlw	-11
 17135  0159BA  1EE3               	comf	plusw1,f,c
 17136  0159BC  E314               	bnc	u5590
 17137  0159BE  0EEF               	movlw	-17
 17138  0159C0  2AE3               	incf	plusw1,f,c
 17139  0159C2  E311               	bnc	u5590
 17140  0159C4  0EF0               	movlw	-16
 17141  0159C6  2AE3               	incf	plusw1,f,c
 17142  0159C8  E30E               	bnc	u5590
 17143  0159CA  0EF1               	movlw	-15
 17144  0159CC  2AE3               	incf	plusw1,f,c
 17145  0159CE  E30B               	bnc	u5590
 17146  0159D0  0EF2               	movlw	-14
 17147  0159D2  2AE3               	incf	plusw1,f,c
 17148  0159D4  E308               	bnc	u5590
 17149  0159D6  0EF3               	movlw	-13
 17150  0159D8  2AE3               	incf	plusw1,f,c
 17151  0159DA  E305               	bnc	u5590
 17152  0159DC  0EF4               	movlw	-12
 17153  0159DE  2AE3               	incf	plusw1,f,c
 17154  0159E0  E302               	bnc	u5590
 17155  0159E2  0EF5               	movlw	-11
 17156  0159E4  2AE3               	incf	plusw1,f,c
 17157  0159E6                     u5590:
 17158                           
 17159                           ;stkvar	_divisor @ sp[(-2)+-16]
 17160  0159E6  0EEE               	movlw	-18
 17161  0159E8  50E3               	movf	plusw1,w,c
 17162  0159EA  E116               	bnz	u5600
 17163  0159EC  0EEF               	movlw	-17
 17164  0159EE  50E3               	movf	plusw1,w,c
 17165  0159F0  E113               	bnz	u5600
 17166  0159F2  0EF0               	movlw	-16
 17167  0159F4  50E3               	movf	plusw1,w,c
 17168  0159F6  E110               	bnz	u5600
 17169  0159F8  0EF1               	movlw	-15
 17170  0159FA  50E3               	movf	plusw1,w,c
 17171  0159FC  E10D               	bnz	u5600
 17172  0159FE  0EF2               	movlw	-14
 17173  015A00  50E3               	movf	plusw1,w,c
 17174  015A02  E10A               	bnz	u5600
 17175  015A04  0EF3               	movlw	-13
 17176  015A06  50E3               	movf	plusw1,w,c
 17177  015A08  E107               	bnz	u5600
 17178  015A0A  0EF4               	movlw	-12
 17179  015A0C  50E3               	movf	plusw1,w,c
 17180  015A0E  E104               	bnz	u5600
 17181  015A10  0EF5               	movlw	-11
 17182  015A12  50E3               	movf	plusw1,w,c
 17183  015A14  B4D8               	btfsc	status,2,c
 17184  015A16  D075               	goto	u5630
 17185  015A18                     u5600:
 17186                           
 17187                           ;stkvar	_counter @ sp[(-2)+1]
 17188  015A18  0EFF               	movlw	-1
 17189  015A1A  6AE3               	clrf	plusw1,c
 17190  015A1C  D012               	goto	L18
 17191  015A1E                     l6840:
 17192                           
 17193                           ;stkvar	_divisor @ sp[(-2)+-16]
 17194  015A1E  90D8               	bcf	status,0,c
 17195  015A20  0EEE               	movlw	-18
 17196  015A22  36E3               	rlcf	plusw1,f,c
 17197  015A24  0EEF               	movlw	-17
 17198  015A26  36E3               	rlcf	plusw1,f,c
 17199  015A28  0EF0               	movlw	-16
 17200  015A2A  36E3               	rlcf	plusw1,f,c
 17201  015A2C  0EF1               	movlw	-15
 17202  015A2E  36E3               	rlcf	plusw1,f,c
 17203  015A30  0EF2               	movlw	-14
 17204  015A32  36E3               	rlcf	plusw1,f,c
 17205  015A34  0EF3               	movlw	-13
 17206  015A36  36E3               	rlcf	plusw1,f,c
 17207  015A38  0EF4               	movlw	-12
 17208  015A3A  36E3               	rlcf	plusw1,f,c
 17209  015A3C  0EF5               	movlw	-11
 17210  015A3E  36E3               	rlcf	plusw1,f,c
 17211                           
 17212                           ;stkvar	_counter @ sp[(-2)+1]
 17213  015A40  0EFF               	movlw	-1
 17214  015A42                     L18:
 17215  015A42  2AE3               	incf	plusw1,f,c
 17216                           
 17217                           ;stkvar	_divisor @ sp[(-2)+-16]
 17218  015A44  0EF5               	movlw	-11
 17219  015A46  AEE3               	btfss	plusw1,7,c
 17220  015A48  D7EA               	goto	l6840
 17221  015A4A                     u5610:
 17222                           
 17223                           ;stkvar	_divisor @ sp[(-2)+-16]
 17224                           ;stkvar	_dividend @ sp[(-2)+-8]
 17225  015A4A  50E1               	movf	fsr1l,w,c
 17226  015A4C  0FF6               	addlw	-10
 17227  015A4E  6ED9               	movwf	fsr2l,c
 17228  015A50  50E2               	movf	fsr1h,w,c
 17229  015A52  6EDA               	movwf	fsr2h,c
 17230  015A54  0EFF               	movlw	255
 17231  015A56  22DA               	addwfc	fsr2h,f,c
 17232  015A58  0EEE               	movlw	-18
 17233  015A5A  50E3               	movf	plusw1,w,c
 17234  015A5C  5CDE               	subwf	postinc2,w,c
 17235  015A5E  0EEF               	movlw	-17
 17236  015A60  50E3               	movf	plusw1,w,c
 17237  015A62  58DE               	subwfb	postinc2,w,c
 17238  015A64  0EF0               	movlw	-16
 17239  015A66  50E3               	movf	plusw1,w,c
 17240  015A68  58DE               	subwfb	postinc2,w,c
 17241  015A6A  0EF1               	movlw	-15
 17242  015A6C  50E3               	movf	plusw1,w,c
 17243  015A6E  58DE               	subwfb	postinc2,w,c
 17244  015A70  0EF2               	movlw	-14
 17245  015A72  50E3               	movf	plusw1,w,c
 17246  015A74  58DE               	subwfb	postinc2,w,c
 17247  015A76  0EF3               	movlw	-13
 17248  015A78  50E3               	movf	plusw1,w,c
 17249  015A7A  58DE               	subwfb	postinc2,w,c
 17250  015A7C  0EF4               	movlw	-12
 17251  015A7E  50E3               	movf	plusw1,w,c
 17252  015A80  58DE               	subwfb	postinc2,w,c
 17253  015A82  0EF5               	movlw	-11
 17254  015A84  50E3               	movf	plusw1,w,c
 17255  015A86  58DE               	subwfb	postinc2,w,c
 17256  015A88  A0D8               	btfss	status,0,c
 17257  015A8A  D01F               	goto	l6848
 17258                           
 17259                           ;stkvar	_divisor @ sp[(-2)+-16]
 17260                           ;stkvar	_dividend @ sp[(-2)+-8]
 17261  015A8C  50E1               	movf	fsr1l,w,c
 17262  015A8E  0FF6               	addlw	-10
 17263  015A90  6ED9               	movwf	fsr2l,c
 17264  015A92  50E2               	movf	fsr1h,w,c
 17265  015A94  6EDA               	movwf	fsr2h,c
 17266  015A96  0EFF               	movlw	255
 17267  015A98  22DA               	addwfc	fsr2h,f,c
 17268  015A9A  0EEE               	movlw	-18
 17269  015A9C  50E3               	movf	plusw1,w,c
 17270  015A9E  5EDE               	subwf	postinc2,f,c
 17271  015AA0  0EEF               	movlw	-17
 17272  015AA2  50E3               	movf	plusw1,w,c
 17273  015AA4  5ADE               	subwfb	postinc2,f,c
 17274  015AA6  0EF0               	movlw	-16
 17275  015AA8  50E3               	movf	plusw1,w,c
 17276  015AAA  5ADE               	subwfb	postinc2,f,c
 17277  015AAC  0EF1               	movlw	-15
 17278  015AAE  50E3               	movf	plusw1,w,c
 17279  015AB0  5ADE               	subwfb	postinc2,f,c
 17280  015AB2  0EF2               	movlw	-14
 17281  015AB4  50E3               	movf	plusw1,w,c
 17282  015AB6  5ADE               	subwfb	postinc2,f,c
 17283  015AB8  0EF3               	movlw	-13
 17284  015ABA  50E3               	movf	plusw1,w,c
 17285  015ABC  5ADE               	subwfb	postinc2,f,c
 17286  015ABE  0EF4               	movlw	-12
 17287  015AC0  50E3               	movf	plusw1,w,c
 17288  015AC2  5ADE               	subwfb	postinc2,f,c
 17289  015AC4  0EF5               	movlw	-11
 17290  015AC6  50E3               	movf	plusw1,w,c
 17291  015AC8  5ADE               	subwfb	postinc2,f,c
 17292  015ACA                     l6848:
 17293                           
 17294                           ;stkvar	_divisor @ sp[(-2)+-16]
 17295  015ACA  90D8               	bcf	status,0,c
 17296  015ACC  0EF5               	movlw	-11
 17297  015ACE  32E3               	rrcf	plusw1,f,c
 17298  015AD0  0EF4               	movlw	-12
 17299  015AD2  32E3               	rrcf	plusw1,f,c
 17300  015AD4  0EF3               	movlw	-13
 17301  015AD6  32E3               	rrcf	plusw1,f,c
 17302  015AD8  0EF2               	movlw	-14
 17303  015ADA  32E3               	rrcf	plusw1,f,c
 17304  015ADC  0EF1               	movlw	-15
 17305  015ADE  32E3               	rrcf	plusw1,f,c
 17306  015AE0  0EF0               	movlw	-16
 17307  015AE2  32E3               	rrcf	plusw1,f,c
 17308  015AE4  0EEF               	movlw	-17
 17309  015AE6  32E3               	rrcf	plusw1,f,c
 17310  015AE8  0EEE               	movlw	-18
 17311  015AEA  32E3               	rrcf	plusw1,f,c
 17312                           
 17313                           ;stkvar	_counter @ sp[(-2)+1]
 17314  015AEC  0EFF               	movlw	-1
 17315  015AEE  50E3               	movf	plusw1,w,c
 17316  015AF0  6E32               	movwf	btemp^0,c
 17317  015AF2  0E01               	movlw	1
 17318  015AF4  5E32               	subwf	btemp^0,f,c
 17319  015AF6  0EFF               	movlw	-1
 17320  015AF8  0060  F0CB  FFE3   	movff	btemp,plusw1
 17321  015AFE  A4D8               	btfss	status,2,c
 17322  015B00  D7A4               	goto	u5610
 17323  015B02                     u5630:
 17324                           
 17325                           ;stkvar	_sign @ sp[(-2)+0]
 17326  015B02  0EFE               	movlw	-2
 17327  015B04  50E3               	movf	plusw1,w,c
 17328  015B06  B4D8               	btfsc	status,2,c
 17329  015B08  D025               	goto	u5650
 17330                           
 17331                           ;stkvar	_dividend @ sp[(-2)+-8]
 17332                           ;stkvar	_dividend @ sp[(-2)+-8]
 17333  015B0A  0EF6               	movlw	-10
 17334  015B0C  6CE3               	negf	plusw1,c
 17335  015B0E  0EF7               	movlw	-9
 17336  015B10  1EE3               	comf	plusw1,f,c
 17337  015B12  0EF8               	movlw	-8
 17338  015B14  1EE3               	comf	plusw1,f,c
 17339  015B16  0EF9               	movlw	-7
 17340  015B18  1EE3               	comf	plusw1,f,c
 17341  015B1A  0EFA               	movlw	-6
 17342  015B1C  1EE3               	comf	plusw1,f,c
 17343  015B1E  0EFB               	movlw	-5
 17344  015B20  1EE3               	comf	plusw1,f,c
 17345  015B22  0EFC               	movlw	-4
 17346  015B24  1EE3               	comf	plusw1,f,c
 17347  015B26  0EFD               	movlw	-3
 17348  015B28  1EE3               	comf	plusw1,f,c
 17349  015B2A  E314               	bnc	u5650
 17350  015B2C  0EF7               	movlw	-9
 17351  015B2E  2AE3               	incf	plusw1,f,c
 17352  015B30  E311               	bnc	u5650
 17353  015B32  0EF8               	movlw	-8
 17354  015B34  2AE3               	incf	plusw1,f,c
 17355  015B36  E30E               	bnc	u5650
 17356  015B38  0EF9               	movlw	-7
 17357  015B3A  2AE3               	incf	plusw1,f,c
 17358  015B3C  E30B               	bnc	u5650
 17359  015B3E  0EFA               	movlw	-6
 17360  015B40  2AE3               	incf	plusw1,f,c
 17361  015B42  E308               	bnc	u5650
 17362  015B44  0EFB               	movlw	-5
 17363  015B46  2AE3               	incf	plusw1,f,c
 17364  015B48  E305               	bnc	u5650
 17365  015B4A  0EFC               	movlw	-4
 17366  015B4C  2AE3               	incf	plusw1,f,c
 17367  015B4E  E302               	bnc	u5650
 17368  015B50  0EFD               	movlw	-3
 17369  015B52  2AE3               	incf	plusw1,f,c
 17370  015B54                     u5650:
 17371                           
 17372                           ;stkvar	_dividend @ sp[(-2)+-8]
 17373  015B54  0EF6               	movlw	246
 17374  015B56  24E1               	addwf	fsr1l,w,c
 17375  015B58  6ED9               	movwf	fsr2l,c
 17376  015B5A  0EFF               	movlw	255
 17377  015B5C  20E2               	addwfc	fsr1h,w,c
 17378  015B5E  6EDA               	movwf	fsr2h,c
 17379                           
 17380                           ;stkvar	?___aomod @ sp[(-2)+-8]
 17381  015B60  0E08               	movlw	8
 17382  015B62  6E32               	movwf	btemp^0,c
 17383  015B64  0EF6               	movlw	-10
 17384  015B66                     us566999:
 17385  015B66  006F FF7B FFE3     	movff	postinc2,plusw1
 17386  015B6C  28E8               	incf	wreg,w,c
 17387  015B6E  2E32               	decfsz	btemp^0,f,c
 17388  015B70  D7FA               	bra	us566999
 17389                           
 17390                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 17391  015B72  52E5               	movf	postdec1,f,c
 17392  015B74  52E5               	movf	postdec1,f,c
 17393  015B76  0012               	return		;funcret
 17394  015B78                     __end_of___aomod:
 17395                           	opt callstack 0
 17396                           
 17397 ;; *************** function ___aodiv *****************
 17398 ;; Defined at:
 17399 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 17400 ;; Parameters:    Size  Location     Type
 17401 ;;  dividend        8  [STACK] long long 
 17402 ;;  divisor         8  [STACK] long long 
 17403 ;; Auto vars:     Size  Location     Type
 17404 ;;  quotient        8  [STACK] long long 
 17405 ;;  sign            1  [STACK] unsigned char 
 17406 ;;  counter         1  [STACK] unsigned char 
 17407 ;; Return value:  Size  Location     Type
 17408 ;;                  8  [STACK] long long 
 17409 ;; Registers used:
 17410 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 17411 ;; Tracked objects:
 17412 ;;		On entry : 0/1
 17413 ;;		On exit  : 0/0
 17414 ;;		Unchanged: 0/0
 17415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17420 ;;Total ram usage:        0 bytes
 17421 ;; Hardware stack levels used:    1
 17422 ;; Hardware stack levels required when called:    6
 17423 ;; This function calls:
 17424 ;;		Nothing
 17425 ;; This function is called by:
 17426 ;;		_dtoa
 17427 ;; This function uses a reentrant model
 17428 ;;
 17429                           
 17430                           	psect	text63
 17431  015444                     __ptext63:
 17432                           	opt callstack 0
 17433  015444                     ___aodiv:
 17434                           	opt callstack 0
 17435                           
 17436                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 17437  015444  0E0A               	movlw	10
 17438  015446  26E1               	addwf	fsr1l,f,c
 17439  015448  0E00               	movlw	0
 17440  01544A  22E2               	addwfc	fsr1h,f,c
 17441                           
 17442                           ;stkvar	_sign @ sp[(-10)+8]
 17443                           
 17444                           ;incstack = 0
 17445  01544C  0EFE               	movlw	-2
 17446  01544E  6AE3               	clrf	plusw1,c
 17447                           
 17448                           ;stkvar	_divisor @ sp[(-10)+-16]
 17449  015450  0EED               	movlw	-19
 17450  015452  AEE3               	btfss	plusw1,7,c
 17451  015454  D028               	goto	l6788
 17452                           
 17453                           ;stkvar	_divisor @ sp[(-10)+-16]
 17454                           ;stkvar	_divisor @ sp[(-10)+-16]
 17455  015456  0EE6               	movlw	-26
 17456  015458  6CE3               	negf	plusw1,c
 17457  01545A  0EE7               	movlw	-25
 17458  01545C  1EE3               	comf	plusw1,f,c
 17459  01545E  0EE8               	movlw	-24
 17460  015460  1EE3               	comf	plusw1,f,c
 17461  015462  0EE9               	movlw	-23
 17462  015464  1EE3               	comf	plusw1,f,c
 17463  015466  0EEA               	movlw	-22
 17464  015468  1EE3               	comf	plusw1,f,c
 17465  01546A  0EEB               	movlw	-21
 17466  01546C  1EE3               	comf	plusw1,f,c
 17467  01546E  0EEC               	movlw	-20
 17468  015470  1EE3               	comf	plusw1,f,c
 17469  015472  0EED               	movlw	-19
 17470  015474  1EE3               	comf	plusw1,f,c
 17471  015476  E314               	bnc	u5450
 17472  015478  0EE7               	movlw	-25
 17473  01547A  2AE3               	incf	plusw1,f,c
 17474  01547C  E311               	bnc	u5450
 17475  01547E  0EE8               	movlw	-24
 17476  015480  2AE3               	incf	plusw1,f,c
 17477  015482  E30E               	bnc	u5450
 17478  015484  0EE9               	movlw	-23
 17479  015486  2AE3               	incf	plusw1,f,c
 17480  015488  E30B               	bnc	u5450
 17481  01548A  0EEA               	movlw	-22
 17482  01548C  2AE3               	incf	plusw1,f,c
 17483  01548E  E308               	bnc	u5450
 17484  015490  0EEB               	movlw	-21
 17485  015492  2AE3               	incf	plusw1,f,c
 17486  015494  E305               	bnc	u5450
 17487  015496  0EEC               	movlw	-20
 17488  015498  2AE3               	incf	plusw1,f,c
 17489  01549A  E302               	bnc	u5450
 17490  01549C  0EED               	movlw	-19
 17491  01549E  2AE3               	incf	plusw1,f,c
 17492  0154A0                     u5450:
 17493                           
 17494                           ;stkvar	_sign @ sp[(-10)+8]
 17495  0154A0  0EFE               	movlw	-2
 17496  0154A2  6AE3               	clrf	plusw1,c
 17497  0154A4  2AE3               	incf	plusw1,f,c
 17498  0154A6                     l6788:
 17499                           
 17500                           ;stkvar	_dividend @ sp[(-10)+-8]
 17501  0154A6  0EF5               	movlw	-11
 17502  0154A8  AEE3               	btfss	plusw1,7,c
 17503  0154AA  D027               	goto	l6794
 17504                           
 17505                           ;stkvar	_dividend @ sp[(-10)+-8]
 17506                           ;stkvar	_dividend @ sp[(-10)+-8]
 17507  0154AC  0EEE               	movlw	-18
 17508  0154AE  6CE3               	negf	plusw1,c
 17509  0154B0  0EEF               	movlw	-17
 17510  0154B2  1EE3               	comf	plusw1,f,c
 17511  0154B4  0EF0               	movlw	-16
 17512  0154B6  1EE3               	comf	plusw1,f,c
 17513  0154B8  0EF1               	movlw	-15
 17514  0154BA  1EE3               	comf	plusw1,f,c
 17515  0154BC  0EF2               	movlw	-14
 17516  0154BE  1EE3               	comf	plusw1,f,c
 17517  0154C0  0EF3               	movlw	-13
 17518  0154C2  1EE3               	comf	plusw1,f,c
 17519  0154C4  0EF4               	movlw	-12
 17520  0154C6  1EE3               	comf	plusw1,f,c
 17521  0154C8  0EF5               	movlw	-11
 17522  0154CA  1EE3               	comf	plusw1,f,c
 17523  0154CC  E314               	bnc	u5470
 17524  0154CE  0EEF               	movlw	-17
 17525  0154D0  2AE3               	incf	plusw1,f,c
 17526  0154D2  E311               	bnc	u5470
 17527  0154D4  0EF0               	movlw	-16
 17528  0154D6  2AE3               	incf	plusw1,f,c
 17529  0154D8  E30E               	bnc	u5470
 17530  0154DA  0EF1               	movlw	-15
 17531  0154DC  2AE3               	incf	plusw1,f,c
 17532  0154DE  E30B               	bnc	u5470
 17533  0154E0  0EF2               	movlw	-14
 17534  0154E2  2AE3               	incf	plusw1,f,c
 17535  0154E4  E308               	bnc	u5470
 17536  0154E6  0EF3               	movlw	-13
 17537  0154E8  2AE3               	incf	plusw1,f,c
 17538  0154EA  E305               	bnc	u5470
 17539  0154EC  0EF4               	movlw	-12
 17540  0154EE  2AE3               	incf	plusw1,f,c
 17541  0154F0  E302               	bnc	u5470
 17542  0154F2  0EF5               	movlw	-11
 17543  0154F4  2AE3               	incf	plusw1,f,c
 17544  0154F6                     u5470:
 17545                           
 17546                           ;stkvar	_sign @ sp[(-10)+8]
 17547  0154F6  0EFE               	movlw	-2
 17548  0154F8  70E3               	btg	plusw1,0,c
 17549  0154FA                     l6794:
 17550                           
 17551                           ;stkvar	_quotient @ sp[(-10)+0]
 17552  0154FA  0E07               	movlw	7
 17553  0154FC  6E32               	movwf	btemp^0,c
 17554  0154FE  0EF6               	movlw	-10
 17555  015500                     u5481:
 17556  015500  6AE3               	clrf	plusw1,c
 17557  015502  2AE8               	incf	wreg,f,c
 17558  015504  0632               	decf	btemp^0,f,c
 17559  015506  E2FC               	bc	u5481
 17560                           
 17561                           ;stkvar	_divisor @ sp[(-10)+-16]
 17562  015508  0EE6               	movlw	-26
 17563  01550A  50E3               	movf	plusw1,w,c
 17564  01550C  E116               	bnz	u5490
 17565  01550E  0EE7               	movlw	-25
 17566  015510  50E3               	movf	plusw1,w,c
 17567  015512  E113               	bnz	u5490
 17568  015514  0EE8               	movlw	-24
 17569  015516  50E3               	movf	plusw1,w,c
 17570  015518  E110               	bnz	u5490
 17571  01551A  0EE9               	movlw	-23
 17572  01551C  50E3               	movf	plusw1,w,c
 17573  01551E  E10D               	bnz	u5490
 17574  015520  0EEA               	movlw	-22
 17575  015522  50E3               	movf	plusw1,w,c
 17576  015524  E10A               	bnz	u5490
 17577  015526  0EEB               	movlw	-21
 17578  015528  50E3               	movf	plusw1,w,c
 17579  01552A  E107               	bnz	u5490
 17580  01552C  0EEC               	movlw	-20
 17581  01552E  50E3               	movf	plusw1,w,c
 17582  015530  E104               	bnz	u5490
 17583  015532  0EED               	movlw	-19
 17584  015534  50E3               	movf	plusw1,w,c
 17585  015536  B4D8               	btfsc	status,2,c
 17586  015538  D088               	goto	u5520
 17587  01553A                     u5490:
 17588                           
 17589                           ;stkvar	_counter @ sp[(-10)+9]
 17590  01553A  0EFF               	movlw	-1
 17591  01553C  6AE3               	clrf	plusw1,c
 17592  01553E  D012               	goto	L19
 17593  015540                     l6800:
 17594                           
 17595                           ;stkvar	_divisor @ sp[(-10)+-16]
 17596  015540  90D8               	bcf	status,0,c
 17597  015542  0EE6               	movlw	-26
 17598  015544  36E3               	rlcf	plusw1,f,c
 17599  015546  0EE7               	movlw	-25
 17600  015548  36E3               	rlcf	plusw1,f,c
 17601  01554A  0EE8               	movlw	-24
 17602  01554C  36E3               	rlcf	plusw1,f,c
 17603  01554E  0EE9               	movlw	-23
 17604  015550  36E3               	rlcf	plusw1,f,c
 17605  015552  0EEA               	movlw	-22
 17606  015554  36E3               	rlcf	plusw1,f,c
 17607  015556  0EEB               	movlw	-21
 17608  015558  36E3               	rlcf	plusw1,f,c
 17609  01555A  0EEC               	movlw	-20
 17610  01555C  36E3               	rlcf	plusw1,f,c
 17611  01555E  0EED               	movlw	-19
 17612  015560  36E3               	rlcf	plusw1,f,c
 17613                           
 17614                           ;stkvar	_counter @ sp[(-10)+9]
 17615  015562  0EFF               	movlw	-1
 17616  015564                     L19:
 17617  015564  2AE3               	incf	plusw1,f,c
 17618                           
 17619                           ;stkvar	_divisor @ sp[(-10)+-16]
 17620  015566  0EED               	movlw	-19
 17621  015568  AEE3               	btfss	plusw1,7,c
 17622  01556A  D7EA               	goto	l6800
 17623  01556C                     u5500:
 17624                           
 17625                           ;stkvar	_quotient @ sp[(-10)+0]
 17626  01556C  90D8               	bcf	status,0,c
 17627  01556E  0EF6               	movlw	-10
 17628  015570  36E3               	rlcf	plusw1,f,c
 17629  015572  0EF7               	movlw	-9
 17630  015574  36E3               	rlcf	plusw1,f,c
 17631  015576  0EF8               	movlw	-8
 17632  015578  36E3               	rlcf	plusw1,f,c
 17633  01557A  0EF9               	movlw	-7
 17634  01557C  36E3               	rlcf	plusw1,f,c
 17635  01557E  0EFA               	movlw	-6
 17636  015580  36E3               	rlcf	plusw1,f,c
 17637  015582  0EFB               	movlw	-5
 17638  015584  36E3               	rlcf	plusw1,f,c
 17639  015586  0EFC               	movlw	-4
 17640  015588  36E3               	rlcf	plusw1,f,c
 17641  01558A  0EFD               	movlw	-3
 17642  01558C  36E3               	rlcf	plusw1,f,c
 17643                           
 17644                           ;stkvar	_divisor @ sp[(-10)+-16]
 17645                           ;stkvar	_dividend @ sp[(-10)+-8]
 17646  01558E  50E1               	movf	fsr1l,w,c
 17647  015590  0FEE               	addlw	-18
 17648  015592  6ED9               	movwf	fsr2l,c
 17649  015594  50E2               	movf	fsr1h,w,c
 17650  015596  6EDA               	movwf	fsr2h,c
 17651  015598  0EFF               	movlw	255
 17652  01559A  22DA               	addwfc	fsr2h,f,c
 17653  01559C  0EE6               	movlw	-26
 17654  01559E  50E3               	movf	plusw1,w,c
 17655  0155A0  5CDE               	subwf	postinc2,w,c
 17656  0155A2  0EE7               	movlw	-25
 17657  0155A4  50E3               	movf	plusw1,w,c
 17658  0155A6  58DE               	subwfb	postinc2,w,c
 17659  0155A8  0EE8               	movlw	-24
 17660  0155AA  50E3               	movf	plusw1,w,c
 17661  0155AC  58DE               	subwfb	postinc2,w,c
 17662  0155AE  0EE9               	movlw	-23
 17663  0155B0  50E3               	movf	plusw1,w,c
 17664  0155B2  58DE               	subwfb	postinc2,w,c
 17665  0155B4  0EEA               	movlw	-22
 17666  0155B6  50E3               	movf	plusw1,w,c
 17667  0155B8  58DE               	subwfb	postinc2,w,c
 17668  0155BA  0EEB               	movlw	-21
 17669  0155BC  50E3               	movf	plusw1,w,c
 17670  0155BE  58DE               	subwfb	postinc2,w,c
 17671  0155C0  0EEC               	movlw	-20
 17672  0155C2  50E3               	movf	plusw1,w,c
 17673  0155C4  58DE               	subwfb	postinc2,w,c
 17674  0155C6  0EED               	movlw	-19
 17675  0155C8  50E3               	movf	plusw1,w,c
 17676  0155CA  58DE               	subwfb	postinc2,w,c
 17677  0155CC  A0D8               	btfss	status,0,c
 17678  0155CE  D021               	goto	l6812
 17679                           
 17680                           ;stkvar	_divisor @ sp[(-10)+-16]
 17681                           ;stkvar	_dividend @ sp[(-10)+-8]
 17682  0155D0  50E1               	movf	fsr1l,w,c
 17683  0155D2  0FEE               	addlw	-18
 17684  0155D4  6ED9               	movwf	fsr2l,c
 17685  0155D6  50E2               	movf	fsr1h,w,c
 17686  0155D8  6EDA               	movwf	fsr2h,c
 17687  0155DA  0EFF               	movlw	255
 17688  0155DC  22DA               	addwfc	fsr2h,f,c
 17689  0155DE  0EE6               	movlw	-26
 17690  0155E0  50E3               	movf	plusw1,w,c
 17691  0155E2  5EDE               	subwf	postinc2,f,c
 17692  0155E4  0EE7               	movlw	-25
 17693  0155E6  50E3               	movf	plusw1,w,c
 17694  0155E8  5ADE               	subwfb	postinc2,f,c
 17695  0155EA  0EE8               	movlw	-24
 17696  0155EC  50E3               	movf	plusw1,w,c
 17697  0155EE  5ADE               	subwfb	postinc2,f,c
 17698  0155F0  0EE9               	movlw	-23
 17699  0155F2  50E3               	movf	plusw1,w,c
 17700  0155F4  5ADE               	subwfb	postinc2,f,c
 17701  0155F6  0EEA               	movlw	-22
 17702  0155F8  50E3               	movf	plusw1,w,c
 17703  0155FA  5ADE               	subwfb	postinc2,f,c
 17704  0155FC  0EEB               	movlw	-21
 17705  0155FE  50E3               	movf	plusw1,w,c
 17706  015600  5ADE               	subwfb	postinc2,f,c
 17707  015602  0EEC               	movlw	-20
 17708  015604  50E3               	movf	plusw1,w,c
 17709  015606  5ADE               	subwfb	postinc2,f,c
 17710  015608  0EED               	movlw	-19
 17711  01560A  50E3               	movf	plusw1,w,c
 17712  01560C  5ADE               	subwfb	postinc2,f,c
 17713                           
 17714                           ;stkvar	_quotient @ sp[(-10)+0]
 17715  01560E  0EF6               	movlw	-10
 17716  015610  80E3               	bsf	plusw1,0,c
 17717  015612                     l6812:
 17718                           
 17719                           ;stkvar	_divisor @ sp[(-10)+-16]
 17720  015612  90D8               	bcf	status,0,c
 17721  015614  0EED               	movlw	-19
 17722  015616  32E3               	rrcf	plusw1,f,c
 17723  015618  0EEC               	movlw	-20
 17724  01561A  32E3               	rrcf	plusw1,f,c
 17725  01561C  0EEB               	movlw	-21
 17726  01561E  32E3               	rrcf	plusw1,f,c
 17727  015620  0EEA               	movlw	-22
 17728  015622  32E3               	rrcf	plusw1,f,c
 17729  015624  0EE9               	movlw	-23
 17730  015626  32E3               	rrcf	plusw1,f,c
 17731  015628  0EE8               	movlw	-24
 17732  01562A  32E3               	rrcf	plusw1,f,c
 17733  01562C  0EE7               	movlw	-25
 17734  01562E  32E3               	rrcf	plusw1,f,c
 17735  015630  0EE6               	movlw	-26
 17736  015632  32E3               	rrcf	plusw1,f,c
 17737                           
 17738                           ;stkvar	_counter @ sp[(-10)+9]
 17739  015634  0EFF               	movlw	-1
 17740  015636  50E3               	movf	plusw1,w,c
 17741  015638  6E32               	movwf	btemp^0,c
 17742  01563A  0E01               	movlw	1
 17743  01563C  5E32               	subwf	btemp^0,f,c
 17744  01563E  0EFF               	movlw	-1
 17745  015640  0060  F0CB  FFE3   	movff	btemp,plusw1
 17746  015646  A4D8               	btfss	status,2,c
 17747  015648  D791               	goto	u5500
 17748  01564A                     u5520:
 17749                           
 17750                           ;stkvar	_sign @ sp[(-10)+8]
 17751  01564A  0EFE               	movlw	-2
 17752  01564C  50E3               	movf	plusw1,w,c
 17753  01564E  B4D8               	btfsc	status,2,c
 17754  015650  D025               	goto	u5540
 17755                           
 17756                           ;stkvar	_quotient @ sp[(-10)+0]
 17757                           ;stkvar	_quotient @ sp[(-10)+0]
 17758  015652  0EF6               	movlw	-10
 17759  015654  6CE3               	negf	plusw1,c
 17760  015656  0EF7               	movlw	-9
 17761  015658  1EE3               	comf	plusw1,f,c
 17762  01565A  0EF8               	movlw	-8
 17763  01565C  1EE3               	comf	plusw1,f,c
 17764  01565E  0EF9               	movlw	-7
 17765  015660  1EE3               	comf	plusw1,f,c
 17766  015662  0EFA               	movlw	-6
 17767  015664  1EE3               	comf	plusw1,f,c
 17768  015666  0EFB               	movlw	-5
 17769  015668  1EE3               	comf	plusw1,f,c
 17770  01566A  0EFC               	movlw	-4
 17771  01566C  1EE3               	comf	plusw1,f,c
 17772  01566E  0EFD               	movlw	-3
 17773  015670  1EE3               	comf	plusw1,f,c
 17774  015672  E314               	bnc	u5540
 17775  015674  0EF7               	movlw	-9
 17776  015676  2AE3               	incf	plusw1,f,c
 17777  015678  E311               	bnc	u5540
 17778  01567A  0EF8               	movlw	-8
 17779  01567C  2AE3               	incf	plusw1,f,c
 17780  01567E  E30E               	bnc	u5540
 17781  015680  0EF9               	movlw	-7
 17782  015682  2AE3               	incf	plusw1,f,c
 17783  015684  E30B               	bnc	u5540
 17784  015686  0EFA               	movlw	-6
 17785  015688  2AE3               	incf	plusw1,f,c
 17786  01568A  E308               	bnc	u5540
 17787  01568C  0EFB               	movlw	-5
 17788  01568E  2AE3               	incf	plusw1,f,c
 17789  015690  E305               	bnc	u5540
 17790  015692  0EFC               	movlw	-4
 17791  015694  2AE3               	incf	plusw1,f,c
 17792  015696  E302               	bnc	u5540
 17793  015698  0EFD               	movlw	-3
 17794  01569A  2AE3               	incf	plusw1,f,c
 17795  01569C                     u5540:
 17796                           
 17797                           ;stkvar	_quotient @ sp[(-10)+0]
 17798  01569C  0EF6               	movlw	246
 17799  01569E  24E1               	addwf	fsr1l,w,c
 17800  0156A0  6ED9               	movwf	fsr2l,c
 17801  0156A2  0EFF               	movlw	255
 17802  0156A4  20E2               	addwfc	fsr1h,w,c
 17803  0156A6  6EDA               	movwf	fsr2h,c
 17804                           
 17805                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 17806  0156A8  0E08               	movlw	8
 17807  0156AA  6E32               	movwf	btemp^0,c
 17808  0156AC  0EEE               	movlw	-18
 17809  0156AE                     us555999:
 17810  0156AE  006F FF7B FFE3     	movff	postinc2,plusw1
 17811  0156B4  28E8               	incf	wreg,w,c
 17812  0156B6  2E32               	decfsz	btemp^0,f,c
 17813  0156B8  D7FA               	bra	us555999
 17814                           
 17815                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 17816  0156BA  0EF6               	movlw	246
 17817  0156BC  26E1               	addwf	fsr1l,f,c
 17818  0156BE  0EFF               	movlw	255
 17819  0156C0  22E2               	addwfc	fsr1h,f,c
 17820  0156C2  0012               	return		;funcret
 17821  0156C4                     __end_of___aodiv:
 17822                           	opt callstack 0
 17823                           
 17824 ;; *************** function _ctoa *****************
 17825 ;; Defined at:
 17826 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17827 ;; Parameters:    Size  Location     Type
 17828 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17829 ;;		 -> f(6), NULL(0), 
 17830 ;;  c               1  [STACK] unsigned char 
 17831 ;; Auto vars:     Size  Location     Type
 17832 ;;  w               2  [STACK] int 
 17833 ;;  l               2    0        int 
 17834 ;; Return value:  Size  Location     Type
 17835 ;;                  2  [STACK] int 
 17836 ;; Registers used:
 17837 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 17838 ;; Tracked objects:
 17839 ;;		On entry : 0/5
 17840 ;;		On exit  : 0/0
 17841 ;;		Unchanged: 0/0
 17842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17847 ;;Total ram usage:        0 bytes
 17848 ;; Hardware stack levels used:    1
 17849 ;; Hardware stack levels required when called:   11
 17850 ;; This function calls:
 17851 ;;		_pad
 17852 ;; This function is called by:
 17853 ;;		_vfpfcnvrt
 17854 ;; This function uses a reentrant model
 17855 ;;
 17856                           
 17857                           	psect	text64
 17858  017C22                     __ptext64:
 17859                           	opt callstack 0
 17860  017C22                     _ctoa:
 17861                           	opt callstack 0
 17862                           
 17863                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17864  017C22  52E6               	movf	postinc1,f,c
 17865  017C24  52E6               	movf	postinc1,f,c
 17866                           
 17867                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 17868                           
 17869                           ;incstack = 0
 17870  017C26  501B               	movf	_width^0,w,c
 17871  017C28  101C               	iorwf	(_width+1)^0,w,c
 17872  017C2A  A4D8               	btfss	status,2,c
 17873  017C2C  D009               	goto	l9832
 17874                           
 17875                           ;stkvar	_w @ sp[(-2)+0]
 17876  017C2E  0EFE               	movlw	-2
 17877  017C30  0060  F06F  FFE3   	movff	_width,plusw1
 17878  017C36  0EFF               	movlw	-1
 17879  017C38  0060  F073  FFE3   	movff	_width+1,plusw1
 17880  017C3E  D016               	goto	l9834
 17881  017C40                     l9832:
 17882  017C40  0EFF               	movlw	255
 17883  017C42  6E3C               	movwf	(btemp+10)^0,c
 17884  017C44  0EFF               	movlw	255
 17885  017C46  6E3D               	movwf	(btemp+11)^0,c
 17886  017C48  0060  F06C  F03A   	movff	_width,btemp+8
 17887  017C4E  0060  F070  F03B   	movff	_width+1,btemp+9
 17888  017C54  503C               	movf	(btemp+10)^0,w,c
 17889  017C56  263A               	addwf	(btemp+8)^0,f,c
 17890  017C58  503D               	movf	(btemp+11)^0,w,c
 17891  017C5A  223B               	addwfc	(btemp+9)^0,f,c
 17892                           
 17893                           ;stkvar	_w @ sp[(-2)+0]
 17894  017C5C  0EFE               	movlw	-2
 17895  017C5E  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 17896  017C64  0EFF               	movlw	-1
 17897  017C66  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 17898  017C6C                     l9834:
 17899                           
 17900                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 17901                           ;stkvar	_c @ sp[(-2)+-3]
 17902  017C6C  0EFB               	movlw	-5
 17903  017C6E  006F FF8C  F1A3    	movff	plusw1,_dbuf
 17904                           
 17905                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 17906  017C74  0101               	movlb	1	; () banked
 17907  017C76  6BA4               	clrf	(_dbuf+1)& (0+255),b
 17908                           
 17909                           ; BSR set to: 1
 17910                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 17911                           ;stkvar	_w @ sp[(-2)+0]
 17912  017C78  0EFE               	movlw	-2
 17913  017C7A  006F FF8F FFE6     	movff	plusw1,postinc1
 17914  017C80  006F FF8F FFE6     	movff	plusw1,postinc1
 17915  017C86  0EA3               	movlw	low _dbuf
 17916  017C88  6EE6               	movwf	postinc1,c
 17917  017C8A  0E01               	movlw	high _dbuf
 17918  017C8C  6EE6               	movwf	postinc1,c
 17919                           
 17920                           ;stkvar	_fp @ sp[(-6)+-2]
 17921  017C8E  0EF8               	movlw	-8
 17922  017C90  006F FF8F FFE6     	movff	plusw1,postinc1
 17923  017C96  006F FF8F FFE6     	movff	plusw1,postinc1
 17924  017C9C  ECC0  F0B6         	call	_pad	;wreg free
 17925                           
 17926                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 17927  017CA0  0EFB               	movlw	251
 17928  017CA2  26E1               	addwf	fsr1l,f,c
 17929  017CA4  0EFF               	movlw	255
 17930  017CA6  22E2               	addwfc	fsr1h,f,c
 17931  017CA8  0012               	return		;funcret
 17932  017CAA                     __end_of_ctoa:
 17933                           	opt callstack 0
 17934                           
 17935 ;; *************** function _pad *****************
 17936 ;; Defined at:
 17937 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17938 ;; Parameters:    Size  Location     Type
 17939 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17940 ;;		 -> f(6), NULL(0), 
 17941 ;;  buf             2  [STACK] PTR unsigned char 
 17942 ;;		 -> dbuf(80), 
 17943 ;;  p               2  [STACK] int 
 17944 ;; Auto vars:     Size  Location     Type
 17945 ;;  w               2  [STACK] int 
 17946 ;;  i               2  [STACK] int 
 17947 ;; Return value:  Size  Location     Type
 17948 ;;                  2  [STACK] int 
 17949 ;; Registers used:
 17950 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 17951 ;; Tracked objects:
 17952 ;;		On entry : 0/1
 17953 ;;		On exit  : 0/0
 17954 ;;		Unchanged: 0/0
 17955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17960 ;;Total ram usage:        0 bytes
 17961 ;; Hardware stack levels used:    1
 17962 ;; Hardware stack levels required when called:   10
 17963 ;; This function calls:
 17964 ;;		_fputc
 17965 ;;		_fputs
 17966 ;;		_strlen
 17967 ;; This function is called by:
 17968 ;;		_ctoa
 17969 ;;		_dtoa
 17970 ;;		_efgtoa
 17971 ;;		_xtoa
 17972 ;; This function uses a reentrant model
 17973 ;;
 17974                           
 17975                           	psect	text65
 17976  016D80                     __ptext65:
 17977                           	opt callstack 0
 17978  016D80                     _pad:
 17979                           	opt callstack 0
 17980                           
 17981                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17982  016D80  52E6               	movf	postinc1,f,c
 17983  016D82  52E6               	movf	postinc1,f,c
 17984  016D84  52E6               	movf	postinc1,f,c
 17985  016D86  52E6               	movf	postinc1,f,c
 17986                           
 17987                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 17988                           
 17989                           ;incstack = 0
 17990  016D88  A01F               	btfss	_flags^0,0,c
 17991  016D8A  D010               	goto	l9806
 17992                           
 17993                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 17994                           ;stkvar	_fp @ sp[(-4)+-2]
 17995  016D8C  0EFA               	movlw	-6
 17996  016D8E  006F FF8F FFE6     	movff	plusw1,postinc1
 17997  016D94  006F FF8F FFE6     	movff	plusw1,postinc1
 17998                           
 17999                           ;stkvar	_buf @ sp[(-6)+-4]
 18000  016D9A  0EF6               	movlw	-10
 18001  016D9C  006F FF8F FFE6     	movff	plusw1,postinc1
 18002  016DA2  006F FF8F FFE6     	movff	plusw1,postinc1
 18003  016DA8  ECEB  F0BC         	call	_fputs	;wreg free
 18004  016DAC                     l9806:
 18005                           
 18006                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 18007                           ;stkvar	_p @ sp[(-4)+-6]
 18008  016DAC  0EF7               	movlw	-9
 18009  016DAE  BEE3               	btfsc	plusw1,7,c
 18010  016DB0  D011               	goto	l9810
 18011                           
 18012                           ;stkvar	_p @ sp[(-4)+-6]
 18013                           ;stkvar	_w @ sp[(-4)+0]
 18014  016DB2  0EF6               	movlw	-10
 18015  016DB4  006F FF8C  F032    	movff	plusw1,btemp
 18016  016DBA  0EFC               	movlw	-4
 18017  016DBC  0060  F0CB  FFE3   	movff	btemp,plusw1
 18018  016DC2  0EF7               	movlw	-9
 18019  016DC4  006F FF8C  F032    	movff	plusw1,btemp
 18020  016DCA  0EFD               	movlw	-3
 18021  016DCC  0060  F0CB  FFE3   	movff	btemp,plusw1
 18022  016DD2  D004               	goto	l1877
 18023  016DD4                     l9810:
 18024                           
 18025                           ;stkvar	_w @ sp[(-4)+0]
 18026  016DD4  0EFC               	movlw	-4
 18027  016DD6  6AE3               	clrf	plusw1,c
 18028  016DD8  0EFD               	movlw	-3
 18029  016DDA  6AE3               	clrf	plusw1,c
 18030  016DDC                     l1877:
 18031                           
 18032                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 18033                           ;stkvar	_i @ sp[(-4)+2]
 18034  016DDC  0EFE               	movlw	-2
 18035  016DDE  6AE3               	clrf	plusw1,c
 18036  016DE0  0EFF               	movlw	-1
 18037  016DE2  6AE3               	clrf	plusw1,c
 18038                           
 18039                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 18040  016DE4  D01E               	goto	l9816
 18041  016DE6                     l9812:
 18042                           
 18043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 18044                           ;stkvar	_fp @ sp[(-4)+-2]
 18045  016DE6  0EFA               	movlw	-6
 18046  016DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 18047  016DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 18048  016DF4  0E20               	movlw	32
 18049  016DF6  6EE6               	movwf	postinc1,c
 18050  016DF8  0E00               	movlw	0
 18051  016DFA  6EE6               	movwf	postinc1,c
 18052  016DFC  ECA2  F0B5         	call	_fputc	;wreg free
 18053                           
 18054                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 18055                           ;stkvar	_i @ sp[(-4)+2]
 18056  016E00  0EFE               	movlw	-2
 18057  016E02  50E3               	movf	plusw1,w,c
 18058  016E04  0F01               	addlw	1
 18059  016E06  6E32               	movwf	btemp^0,c
 18060  016E08  0EFE               	movlw	-2
 18061  016E0A  0060  F0CB  FFE3   	movff	btemp,plusw1
 18062  016E10  6A32               	clrf	btemp^0,c
 18063  016E12  0EFF               	movlw	-1
 18064  016E14  50E3               	movf	plusw1,w,c
 18065  016E16  2032               	addwfc	btemp^0,w,c
 18066  016E18  6E32               	movwf	btemp^0,c
 18067  016E1A  0EFF               	movlw	-1
 18068  016E1C  0060  F0CB  FFE3   	movff	btemp,plusw1
 18069  016E22                     l9816:
 18070                           
 18071                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 18072                           ;stkvar	_w @ sp[(-4)+0]
 18073                           ;stkvar	_i @ sp[(-4)+2]
 18074  016E22  50E1               	movf	fsr1l,w,c
 18075  016E24  0FFE               	addlw	-2
 18076  016E26  6ED9               	movwf	fsr2l,c
 18077  016E28  50E2               	movf	fsr1h,w,c
 18078  016E2A  6EDA               	movwf	fsr2h,c
 18079  016E2C  0EFF               	movlw	255
 18080  016E2E  22DA               	addwfc	fsr2h,f,c
 18081  016E30  0EFC               	movlw	-4
 18082  016E32  50E3               	movf	plusw1,w,c
 18083  016E34  5CDE               	subwf	postinc2,w,c
 18084  016E36  50DE               	movf	postinc2,w,c
 18085  016E38  0A80               	xorlw	128
 18086  016E3A  6E32               	movwf	btemp^0,c
 18087  016E3C  0EFD               	movlw	-3
 18088  016E3E  50E3               	movf	plusw1,w,c
 18089  016E40  0A80               	xorlw	128
 18090  016E42  5832               	subwfb	btemp^0,w,c
 18091  016E44  A0D8               	btfss	status,0,c
 18092  016E46  D7CF               	goto	l9812
 18093                           
 18094                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 18095  016E48  B01F               	btfsc	_flags^0,0,c
 18096  016E4A  D010               	goto	l9820
 18097                           
 18098                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 18099                           ;stkvar	_fp @ sp[(-4)+-2]
 18100  016E4C  0EFA               	movlw	-6
 18101  016E4E  006F FF8F FFE6     	movff	plusw1,postinc1
 18102  016E54  006F FF8F FFE6     	movff	plusw1,postinc1
 18103                           
 18104                           ;stkvar	_buf @ sp[(-6)+-4]
 18105  016E5A  0EF6               	movlw	-10
 18106  016E5C  006F FF8F FFE6     	movff	plusw1,postinc1
 18107  016E62  006F FF8F FFE6     	movff	plusw1,postinc1
 18108  016E68  ECEB  F0BC         	call	_fputs	;wreg free
 18109  016E6C                     l9820:
 18110                           
 18111                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 18112                           ;stkvar	_w @ sp[(-4)+0]
 18113                           ;stkvar	_buf @ sp[(-4)+-4]
 18114  016E6C  0EF8               	movlw	-8
 18115  016E6E  006F FF8F FFE6     	movff	plusw1,postinc1
 18116  016E74  006F FF8F FFE6     	movff	plusw1,postinc1
 18117  016E7A  EC9A  F0BC         	call	_strlen	;wreg free
 18118  016E7E  0EFC               	movlw	-4
 18119  016E80  50E3               	movf	plusw1,w,c
 18120  016E82  2632               	addwf	btemp^0,f,c
 18121  016E84  0EFD               	movlw	-3
 18122  016E86  50E3               	movf	plusw1,w,c
 18123  016E88  2233               	addwfc	(btemp+1)^0,f,c
 18124                           
 18125                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 18126  016E8A  0EF6               	movlw	246
 18127  016E8C  26E1               	addwf	fsr1l,f,c
 18128  016E8E  0EFF               	movlw	255
 18129  016E90  22E2               	addwfc	fsr1h,f,c
 18130  016E92  0012               	return		;funcret
 18131  016E94                     __end_of_pad:
 18132                           	opt callstack 0
 18133                           
 18134 ;; *************** function _strlen *****************
 18135 ;; Defined at:
 18136 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 18137 ;; Parameters:    Size  Location     Type
 18138 ;;  s               2  [STACK] PTR const unsigned char 
 18139 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 18140 ;;		 -> STR_28(9), STR_27(12), D.lcd(216), D(218), 
 18141 ;;		 -> T(144), STR_7(6), STR_3(6), V(188), 
 18142 ;; Auto vars:     Size  Location     Type
 18143 ;;  a               2  [STACK] PTR const unsigned char 
 18144 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 18145 ;;		 -> STR_28(9), STR_27(12), D.lcd(216), D(218), 
 18146 ;;		 -> T(144), STR_7(6), STR_3(6), V(188), 
 18147 ;; Return value:  Size  Location     Type
 18148 ;;                  2  [STACK] unsigned int 
 18149 ;; Registers used:
 18150 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 18151 ;; Tracked objects:
 18152 ;;		On entry : 0/0
 18153 ;;		On exit  : 0/0
 18154 ;;		Unchanged: 0/0
 18155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18160 ;;Total ram usage:        0 bytes
 18161 ;; Hardware stack levels used:    1
 18162 ;; Hardware stack levels required when called:    6
 18163 ;; This function calls:
 18164 ;;		Nothing
 18165 ;; This function is called by:
 18166 ;;		_eaDogM_WriteString
 18167 ;;		_pad
 18168 ;;		_stoa
 18169 ;; This function uses a reentrant model
 18170 ;;
 18171                           
 18172                           	psect	text66
 18173  017934                     __ptext66:
 18174                           	opt callstack 0
 18175  017934                     _strlen:
 18176                           	opt callstack 0
 18177                           
 18178                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18179  017934  52E6               	movf	postinc1,f,c
 18180  017936  52E6               	movf	postinc1,f,c
 18181                           
 18182                           ;stkvar	_s @ sp[(-2)+-2]
 18183                           
 18184                           ;incstack = 0
 18185  017938  0EFC               	movlw	-4
 18186  01793A  006F FF8C  F03C    	movff	plusw1,btemp+10
 18187  017940  0EFD               	movlw	-3
 18188  017942  006F FF8C  F03D    	movff	plusw1,btemp+11
 18189                           
 18190                           ;stkvar	_a @ sp[(-2)+0]
 18191  017948  0EFF               	movlw	-1
 18192  01794A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 18193  017950  0EFE               	movlw	-2
 18194  017952  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 18195  017958  D011               	goto	l9788
 18196  01795A                     l9786:
 18197                           
 18198                           ;stkvar	_s @ sp[(-2)+-2]
 18199  01795A  0EFC               	movlw	-4
 18200  01795C  50E3               	movf	plusw1,w,c
 18201  01795E  0F01               	addlw	1
 18202  017960  6E32               	movwf	btemp^0,c
 18203  017962  0EFC               	movlw	-4
 18204  017964  0060  F0CB  FFE3   	movff	btemp,plusw1
 18205  01796A  6A32               	clrf	btemp^0,c
 18206  01796C  0EFD               	movlw	-3
 18207  01796E  50E3               	movf	plusw1,w,c
 18208  017970  2032               	addwfc	btemp^0,w,c
 18209  017972  6E32               	movwf	btemp^0,c
 18210  017974  0EFD               	movlw	-3
 18211  017976  0060  F0CB  FFE3   	movff	btemp,plusw1
 18212  01797C                     l9788:
 18213                           
 18214                           ;stkvar	_s @ sp[(-2)+-2]
 18215  01797C  0EFC               	movlw	-4
 18216  01797E  006F FF8F FFF6     	movff	plusw1,tblptrl
 18217  017984  0EFD               	movlw	-3
 18218  017986  006F FF8F FFF7     	movff	plusw1,tblptrh
 18219  01798C  0E00               	movlw	low (__mediumconst shr (0+16))
 18220  01798E  6EF8               	movwf	tblptru,c
 18221  017990  0E1F               	movlw	(high __ramtop+-1)
 18222  017992  64F7               	cpfsgt	tblptrh,c
 18223  017994  D003               	bra	u9127
 18224  017996  0008               	tblrd		*
 18225  017998  50F5               	movf	tablat,w,c
 18226  01799A  D007               	bra	u9120
 18227  01799C                     u9127:
 18228  01799C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 18229  0179A2  006F FFDF FFEA     	movff	tblptrh,fsr0h
 18230  0179A8  50EF               	movf	indf0,w,c
 18231  0179AA                     u9120:
 18232  0179AA  0900               	iorlw	0
 18233  0179AC  A4D8               	btfss	status,2,c
 18234  0179AE  D7D5               	goto	l9786
 18235                           
 18236                           ;stkvar	_a @ sp[(-2)+0]
 18237                           ;stkvar	_s @ sp[(-2)+-2]
 18238  0179B0  0EFC               	movlw	-4
 18239  0179B2  006F FF8C  F032    	movff	plusw1,btemp
 18240  0179B8  0EFD               	movlw	-3
 18241  0179BA  006F FF8C  F033    	movff	plusw1,btemp+1
 18242  0179C0  0EFE               	movlw	-2
 18243  0179C2  50E3               	movf	plusw1,w,c
 18244  0179C4  5E32               	subwf	btemp^0,f,c
 18245  0179C6  0EFF               	movlw	-1
 18246  0179C8  50E3               	movf	plusw1,w,c
 18247  0179CA  5A33               	subwfb	(btemp+1)^0,f,c
 18248                           
 18249                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 18250  0179CC  52E5               	movf	postdec1,f,c
 18251  0179CE  52E5               	movf	postdec1,f,c
 18252  0179D0  52E5               	movf	postdec1,f,c
 18253  0179D2  52E5               	movf	postdec1,f,c
 18254  0179D4  0012               	return		;funcret
 18255  0179D6                     __end_of_strlen:
 18256                           	opt callstack 0
 18257                           
 18258 ;; *************** function _fputs *****************
 18259 ;; Defined at:
 18260 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 18261 ;; Parameters:    Size  Location     Type
 18262 ;;  s               2  [STACK] PTR const unsigned char 
 18263 ;;		 -> dbuf(80), 
 18264 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18265 ;;		 -> f(6), NULL(0), 
 18266 ;; Auto vars:     Size  Location     Type
 18267 ;;  i               2  [STACK] int 
 18268 ;;  c               1  [STACK] unsigned char 
 18269 ;; Return value:  Size  Location     Type
 18270 ;;                  2  [STACK] int 
 18271 ;; Registers used:
 18272 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 18273 ;; Tracked objects:
 18274 ;;		On entry : 0/1
 18275 ;;		On exit  : 0/0
 18276 ;;		Unchanged: 0/0
 18277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18282 ;;Total ram usage:        0 bytes
 18283 ;; Hardware stack levels used:    1
 18284 ;; Hardware stack levels required when called:    9
 18285 ;; This function calls:
 18286 ;;		_fputc
 18287 ;; This function is called by:
 18288 ;;		_pad
 18289 ;; This function uses a reentrant model
 18290 ;;
 18291                           
 18292                           	psect	text67
 18293  0179D6                     __ptext67:
 18294                           	opt callstack 0
 18295  0179D6                     _fputs:
 18296                           	opt callstack 0
 18297                           
 18298                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18299  0179D6  52E6               	movf	postinc1,f,c
 18300  0179D8  52E6               	movf	postinc1,f,c
 18301  0179DA  52E6               	movf	postinc1,f,c
 18302                           
 18303                           ;stkvar	_i @ sp[(-3)+0]
 18304                           
 18305                           ;incstack = 0
 18306  0179DC  0EFD               	movlw	-3
 18307  0179DE  6AE3               	clrf	plusw1,c
 18308  0179E0  0EFE               	movlw	-2
 18309  0179E2  6AE3               	clrf	plusw1,c
 18310  0179E4  D01F               	goto	l9800
 18311  0179E6                     l9796:
 18312                           
 18313                           ;stkvar	_fp @ sp[(-3)+-4]
 18314  0179E6  0EF9               	movlw	-7
 18315  0179E8  006F FF8F FFE6     	movff	plusw1,postinc1
 18316  0179EE  006F FF8F FFE6     	movff	plusw1,postinc1
 18317                           
 18318                           ;stkvar	_c @ sp[(-5)+2]
 18319  0179F4  0EFD               	movlw	-3
 18320  0179F6  50E3               	movf	plusw1,w,c
 18321  0179F8  6EE6               	movwf	postinc1,c
 18322  0179FA  0E00               	movlw	0
 18323  0179FC  6EE6               	movwf	postinc1,c
 18324  0179FE  ECA2  F0B5         	call	_fputc	;wreg free
 18325                           
 18326                           ;stkvar	_i @ sp[(-3)+0]
 18327  017A02  0EFD               	movlw	-3
 18328  017A04  50E3               	movf	plusw1,w,c
 18329  017A06  0F01               	addlw	1
 18330  017A08  6E32               	movwf	btemp^0,c
 18331  017A0A  0EFD               	movlw	-3
 18332  017A0C  0060  F0CB  FFE3   	movff	btemp,plusw1
 18333  017A12  6A32               	clrf	btemp^0,c
 18334  017A14  0EFE               	movlw	-2
 18335  017A16  50E3               	movf	plusw1,w,c
 18336  017A18  2032               	addwfc	btemp^0,w,c
 18337  017A1A  6E32               	movwf	btemp^0,c
 18338  017A1C  0EFE               	movlw	-2
 18339  017A1E  0060  F0CB  FFE3   	movff	btemp,plusw1
 18340  017A24                     l9800:
 18341                           
 18342                           ;stkvar	_i @ sp[(-3)+0]
 18343  017A24  0EFD               	movlw	-3
 18344  017A26  006F FF8C  F03C    	movff	plusw1,btemp+10
 18345  017A2C  0EFE               	movlw	-2
 18346  017A2E  006F FF8C  F03D    	movff	plusw1,btemp+11
 18347                           
 18348                           ;stkvar	_s @ sp[(-3)+-2]
 18349  017A34  0EFB               	movlw	-5
 18350  017A36  006F FF8C  F03A    	movff	plusw1,btemp+8
 18351  017A3C  0EFC               	movlw	-4
 18352  017A3E  006F FF8C  F03B    	movff	plusw1,btemp+9
 18353  017A44  503C               	movf	(btemp+10)^0,w,c
 18354  017A46  243A               	addwf	(btemp+8)^0,w,c
 18355  017A48  6ED9               	movwf	fsr2l,c
 18356  017A4A  503D               	movf	(btemp+11)^0,w,c
 18357  017A4C  203B               	addwfc	(btemp+9)^0,w,c
 18358  017A4E  6EDA               	movwf	fsr2h,c
 18359  017A50  50DF               	movf	indf2,w,c
 18360  017A52  6E3D               	movwf	(btemp+11)^0,c
 18361                           
 18362                           ;stkvar	_c @ sp[(-3)+2]
 18363  017A54  0EFF               	movlw	-1
 18364  017A56  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 18365  017A5C  0EFF               	movlw	-1
 18366  017A5E  50E3               	movf	plusw1,w,c
 18367  017A60  A4D8               	btfss	status,2,c
 18368  017A62  D7C1               	goto	l9796
 18369                           
 18370                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 18371  017A64  0EF9               	movlw	249
 18372  017A66  26E1               	addwf	fsr1l,f,c
 18373  017A68  0EFF               	movlw	255
 18374  017A6A  22E2               	addwfc	fsr1h,f,c
 18375  017A6C  0012               	return		;funcret
 18376  017A6E                     __end_of_fputs:
 18377                           	opt callstack 0
 18378                           
 18379 ;; *************** function _fputc *****************
 18380 ;; Defined at:
 18381 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 18382 ;; Parameters:    Size  Location     Type
 18383 ;;  c               2  [STACK] int 
 18384 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18385 ;;		 -> f(6), NULL(0), 
 18386 ;; Auto vars:     Size  Location     Type
 18387 ;;		None
 18388 ;; Return value:  Size  Location     Type
 18389 ;;                  2  [STACK] int 
 18390 ;; Registers used:
 18391 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 18392 ;; Tracked objects:
 18393 ;;		On entry : 0/5
 18394 ;;		On exit  : 0/0
 18395 ;;		Unchanged: 0/0
 18396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18401 ;;Total ram usage:        0 bytes
 18402 ;; Hardware stack levels used:    1
 18403 ;; Hardware stack levels required when called:    8
 18404 ;; This function calls:
 18405 ;;		_putch
 18406 ;; This function is called by:
 18407 ;;		_pad
 18408 ;;		_stoa
 18409 ;;		_vfpfcnvrt
 18410 ;;		_fputs
 18411 ;; This function uses a reentrant model
 18412 ;;
 18413                           
 18414                           	psect	text68
 18415  016B44                     __ptext68:
 18416                           	opt callstack 0
 18417  016B44                     _fputc:
 18418                           	opt callstack 13
 18419                           
 18420                           ;stkvar	_fp @ sp[(0)+-4]
 18421                           
 18422                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18423                           ;incstack = 0
 18424  016B44  0EFC               	movlw	-4
 18425  016B46  006F FF8C  F032    	movff	plusw1,btemp
 18426  016B4C  0EFD               	movlw	-3
 18427  016B4E  50E3               	movf	plusw1,w,c
 18428  016B50  1032               	iorwf	btemp^0,w,c
 18429  016B52  B4D8               	btfsc	status,2,c
 18430  016B54  D009               	goto	u9090
 18431                           
 18432                           ;stkvar	_fp @ sp[(0)+-4]
 18433  016B56  0EFC               	movlw	-4
 18434  016B58  006F FF8C  F032    	movff	plusw1,btemp
 18435  016B5E  0EFD               	movlw	-3
 18436  016B60  50E3               	movf	plusw1,w,c
 18437  016B62  1032               	iorwf	btemp^0,w,c
 18438  016B64  A4D8               	btfss	status,2,c
 18439  016B66  D006               	goto	l9774
 18440  016B68                     u9090:
 18441                           
 18442                           ;stkvar	_c @ sp[(0)+-2]
 18443  016B68  0EFE               	movlw	-2
 18444  016B6A  50E3               	movf	plusw1,w,c
 18445  016B6C  6EE6               	movwf	postinc1,c
 18446  016B6E  EC0E  F0C7         	call	_putch	;wreg free
 18447  016B72  D075               	goto	l2895
 18448  016B74                     l9774:
 18449                           
 18450                           ;stkvar	_fp @ sp[(0)+-4]
 18451  016B74  0EFC               	movlw	-4
 18452  016B76  006F FF8C  F03C    	movff	plusw1,btemp+10
 18453  016B7C  0EFD               	movlw	-3
 18454  016B7E  006F FF8C  F03D    	movff	plusw1,btemp+11
 18455  016B84  0E04               	movlw	4
 18456  016B86  243C               	addwf	(btemp+10)^0,w,c
 18457  016B88  6ED9               	movwf	fsr2l,c
 18458  016B8A  0E00               	movlw	0
 18459  016B8C  203D               	addwfc	(btemp+11)^0,w,c
 18460  016B8E  6EDA               	movwf	fsr2h,c
 18461  016B90  50DE               	movf	postinc2,w,c
 18462  016B92  10DE               	iorwf	postinc2,w,c
 18463  016B94  B4D8               	btfsc	status,2,c
 18464  016B96  D026               	goto	u9110
 18465                           
 18466                           ;stkvar	_fp @ sp[(0)+-4]
 18467  016B98  0EFC               	movlw	-4
 18468  016B9A  006F FF8C  F03C    	movff	plusw1,btemp+10
 18469  016BA0  0EFD               	movlw	-3
 18470  016BA2  006F FF8C  F03D    	movff	plusw1,btemp+11
 18471  016BA8  0E04               	movlw	4
 18472  016BAA  243C               	addwf	(btemp+10)^0,w,c
 18473  016BAC  6ED9               	movwf	fsr2l,c
 18474  016BAE  0E00               	movlw	0
 18475  016BB0  203D               	addwfc	(btemp+11)^0,w,c
 18476  016BB2  6EDA               	movwf	fsr2h,c
 18477                           
 18478                           ;stkvar	_fp @ sp[(0)+-4]
 18479  016BB4  0EFC               	movlw	-4
 18480  016BB6  006F FF8C  F03C    	movff	plusw1,btemp+10
 18481  016BBC  0EFD               	movlw	-3
 18482  016BBE  006F FF8C  F03D    	movff	plusw1,btemp+11
 18483  016BC4  0E02               	movlw	2
 18484  016BC6  243C               	addwf	(btemp+10)^0,w,c
 18485  016BC8  6EE9               	movwf	fsr0l,c
 18486  016BCA  0E00               	movlw	0
 18487  016BCC  203D               	addwfc	(btemp+11)^0,w,c
 18488  016BCE  6EEA               	movwf	fsr0h,c
 18489  016BD0  50DE               	movf	postinc2,w,c
 18490  016BD2  5CEE               	subwf	postinc0,w,c
 18491  016BD4  50EE               	movf	postinc0,w,c
 18492  016BD6  0A80               	xorlw	128
 18493  016BD8  6E32               	movwf	btemp^0,c
 18494  016BDA  50DE               	movf	postinc2,w,c
 18495  016BDC  0A80               	xorlw	128
 18496  016BDE  5832               	subwfb	btemp^0,w,c
 18497  016BE0  B0D8               	btfsc	status,0,c
 18498  016BE2  D03D               	goto	l2895
 18499  016BE4                     u9110:
 18500                           
 18501                           ;stkvar	_c @ sp[(0)+-2]
 18502                           ;stkvar	_fp @ sp[(0)+-4]
 18503  016BE4  0EFC               	movlw	-4
 18504  016BE6  006F FF8C  F03C    	movff	plusw1,btemp+10
 18505  016BEC  0EFD               	movlw	-3
 18506  016BEE  006F FF8C  F03D    	movff	plusw1,btemp+11
 18507  016BF4  0E02               	movlw	2
 18508  016BF6  243C               	addwf	(btemp+10)^0,w,c
 18509  016BF8  6ED9               	movwf	fsr2l,c
 18510  016BFA  0E00               	movlw	0
 18511  016BFC  203D               	addwfc	(btemp+11)^0,w,c
 18512  016BFE  6EDA               	movwf	fsr2h,c
 18513  016C00  006F FF78  F03C    	movff	postinc2,btemp+10
 18514  016C06  006F FF74  F03D    	movff	postdec2,btemp+11
 18515                           
 18516                           ;stkvar	_fp @ sp[(0)+-4]
 18517  016C0C  0EFC               	movlw	-4
 18518  016C0E  006F FF8F FFD9     	movff	plusw1,fsr2l
 18519  016C14  0EFD               	movlw	-3
 18520  016C16  006F FF8F FFDA     	movff	plusw1,fsr2h
 18521  016C1C  006F FF78  F03A    	movff	postinc2,btemp+8
 18522  016C22  006F FF74  F03B    	movff	postdec2,btemp+9
 18523  016C28  503C               	movf	(btemp+10)^0,w,c
 18524  016C2A  243A               	addwf	(btemp+8)^0,w,c
 18525  016C2C  6ED9               	movwf	fsr2l,c
 18526  016C2E  503D               	movf	(btemp+11)^0,w,c
 18527  016C30  203B               	addwfc	(btemp+9)^0,w,c
 18528  016C32  6EDA               	movwf	fsr2h,c
 18529  016C34  0EFE               	movlw	-2
 18530  016C36  006F FF8F FFDF     	movff	plusw1,indf2
 18531                           
 18532                           ;stkvar	_fp @ sp[(0)+-4]
 18533  016C3C  0EFC               	movlw	-4
 18534  016C3E  006F FF8C  F03C    	movff	plusw1,btemp+10
 18535  016C44  0EFD               	movlw	-3
 18536  016C46  006F FF8C  F03D    	movff	plusw1,btemp+11
 18537  016C4C  0E02               	movlw	2
 18538  016C4E  243C               	addwf	(btemp+10)^0,w,c
 18539  016C50  6ED9               	movwf	fsr2l,c
 18540  016C52  0E00               	movlw	0
 18541  016C54  203D               	addwfc	(btemp+11)^0,w,c
 18542  016C56  6EDA               	movwf	fsr2h,c
 18543  016C58  2ADE               	incf	postinc2,f,c
 18544  016C5A  0E00               	movlw	0
 18545  016C5C  22DD               	addwfc	postdec2,f,c
 18546  016C5E                     l2895:
 18547                           
 18548                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 18549  016C5E  52E5               	movf	postdec1,f,c
 18550  016C60  52E5               	movf	postdec1,f,c
 18551  016C62  52E5               	movf	postdec1,f,c
 18552  016C64  52E5               	movf	postdec1,f,c
 18553  016C66  0012               	return		;funcret
 18554  016C68                     __end_of_fputc:
 18555                           	opt callstack 0
 18556                           
 18557 ;; *************** function _putch *****************
 18558 ;; Defined at:
 18559 ;;		line 155 in file "eadog.c"
 18560 ;; Parameters:    Size  Location     Type
 18561 ;;  c               1  [STACK] unsigned char 
 18562 ;; Auto vars:     Size  Location     Type
 18563 ;;		None
 18564 ;; Return value:  Size  Location     Type
 18565 ;;                  1  [STACK] void 
 18566 ;; Registers used:
 18567 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 18568 ;; Tracked objects:
 18569 ;;		On entry : 0/5
 18570 ;;		On exit  : 0/0
 18571 ;;		Unchanged: 0/0
 18572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18577 ;;Total ram usage:        0 bytes
 18578 ;; Hardware stack levels used:    1
 18579 ;; Hardware stack levels required when called:    7
 18580 ;; This function calls:
 18581 ;;		_ringBufS_put_dma
 18582 ;; This function is called by:
 18583 ;;		_fputc
 18584 ;; This function uses a reentrant model
 18585 ;;
 18586                           
 18587                           	psect	text69
 18588  018E1C                     __ptext69:
 18589                           	opt callstack 0
 18590  018E1C                     _putch:
 18591                           	opt callstack 13
 18592                           
 18593                           ;eadog.c: 155: void putch(char c);eadog.c: 156: {;eadog.c: 157:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 18594                           ;stkvar	_c @ sp[(0)+-1]
 18595                           
 18596                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18597                           ;incstack = 0
 18598  018E1C  0EFF               	movlw	-1
 18599  018E1E  50E3               	movf	plusw1,w,c
 18600  018E20  6EE6               	movwf	postinc1,c
 18601  018E22  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
 18602  018E28  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
 18603  018E2E  EC4C  F0BB         	call	_ringBufS_put_dma	;wreg free
 18604                           
 18605                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 18606  018E32  52E5               	movf	postdec1,f,c
 18607  018E34  0012               	return		;funcret
 18608  018E36                     __end_of_putch:
 18609                           	opt callstack 0
 18610                           
 18611 ;; *************** function _ringBufS_put_dma *****************
 18612 ;; Defined at:
 18613 ;;		line 67 in file "ringbufs.c"
 18614 ;; Parameters:    Size  Location     Type
 18615 ;;  _this           2  [STACK] PTR struct ringBufS_t
 18616 ;;		 -> ring_buf1(67), 
 18617 ;;  c               1  [STACK] const unsigned char 
 18618 ;; Auto vars:     Size  Location     Type
 18619 ;;		None
 18620 ;; Return value:  Size  Location     Type
 18621 ;;                  1  [STACK] void 
 18622 ;; Registers used:
 18623 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 18624 ;; Tracked objects:
 18625 ;;		On entry : 0/5
 18626 ;;		On exit  : 0/0
 18627 ;;		Unchanged: 0/0
 18628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18633 ;;Total ram usage:        0 bytes
 18634 ;; Hardware stack levels used:    1
 18635 ;; Hardware stack levels required when called:    6
 18636 ;; This function calls:
 18637 ;;		Nothing
 18638 ;; This function is called by:
 18639 ;;		_putch
 18640 ;; This function uses a reentrant model
 18641 ;;
 18642                           
 18643                           	psect	text70
 18644  017698                     __ptext70:
 18645                           	opt callstack 0
 18646  017698                     _ringBufS_put_dma:
 18647                           	opt callstack 13
 18648                           
 18649                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 18650                           ;stkvar	__this @ sp[(0)+-2]
 18651                           
 18652                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18653                           ;incstack = 0
 18654  017698  0EFE               	movlw	-2
 18655  01769A  006F FF8C  F03C    	movff	plusw1,btemp+10
 18656  0176A0  0EFF               	movlw	-1
 18657  0176A2  006F FF8C  F03D    	movff	plusw1,btemp+11
 18658  0176A8  0E42               	movlw	66
 18659  0176AA  243C               	addwf	(btemp+10)^0,w,c
 18660  0176AC  6ED9               	movwf	fsr2l,c
 18661  0176AE  0E00               	movlw	0
 18662  0176B0  203D               	addwfc	(btemp+11)^0,w,c
 18663  0176B2  6EDA               	movwf	fsr2h,c
 18664  0176B4  0E40               	movlw	64
 18665  0176B6  60DF               	cpfslt	indf2,c
 18666  0176B8  D040               	goto	l1502
 18667                           
 18668                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 18669                           ;stkvar	_c @ sp[(0)+-3]
 18670                           ;stkvar	__this @ sp[(0)+-2]
 18671  0176BA  0EFE               	movlw	-2
 18672  0176BC  006F FF8C  F03C    	movff	plusw1,btemp+10
 18673  0176C2  0EFF               	movlw	-1
 18674  0176C4  006F FF8C  F03D    	movff	plusw1,btemp+11
 18675  0176CA  0E40               	movlw	64
 18676  0176CC  243C               	addwf	(btemp+10)^0,w,c
 18677  0176CE  6ED9               	movwf	fsr2l,c
 18678  0176D0  0E00               	movlw	0
 18679  0176D2  203D               	addwfc	(btemp+11)^0,w,c
 18680  0176D4  6EDA               	movwf	fsr2h,c
 18681  0176D6  50DF               	movf	indf2,w,c
 18682  0176D8  6E3D               	movwf	(btemp+11)^0,c
 18683                           
 18684                           ;stkvar	__this @ sp[(0)+-2]
 18685  0176DA  0EFE               	movlw	-2
 18686  0176DC  006F FF8C  F03A    	movff	plusw1,btemp+8
 18687  0176E2  0EFF               	movlw	-1
 18688  0176E4  006F FF8C  F03B    	movff	plusw1,btemp+9
 18689  0176EA  503D               	movf	(btemp+11)^0,w,c
 18690  0176EC  243A               	addwf	(btemp+8)^0,w,c
 18691  0176EE  6ED9               	movwf	fsr2l,c
 18692  0176F0  0E00               	movlw	0
 18693  0176F2  203B               	addwfc	(btemp+9)^0,w,c
 18694  0176F4  6EDA               	movwf	fsr2h,c
 18695  0176F6  0EFD               	movlw	-3
 18696  0176F8  006F FF8F FFDF     	movff	plusw1,indf2
 18697                           
 18698                           ;ringbufs.c: 71:   ++_this->head;
 18699                           ;stkvar	__this @ sp[(0)+-2]
 18700  0176FE  0EFE               	movlw	-2
 18701  017700  006F FF8C  F03C    	movff	plusw1,btemp+10
 18702  017706  0EFF               	movlw	-1
 18703  017708  006F FF8C  F03D    	movff	plusw1,btemp+11
 18704  01770E  0E40               	movlw	64
 18705  017710  243C               	addwf	(btemp+10)^0,w,c
 18706  017712  6ED9               	movwf	fsr2l,c
 18707  017714  0E00               	movlw	0
 18708  017716  203D               	addwfc	(btemp+11)^0,w,c
 18709  017718  6EDA               	movwf	fsr2h,c
 18710  01771A  2ADF               	incf	indf2,f,c
 18711                           
 18712                           ;ringbufs.c: 72:   ++_this->count;
 18713                           ;stkvar	__this @ sp[(0)+-2]
 18714  01771C  0EFE               	movlw	-2
 18715  01771E  006F FF8C  F03C    	movff	plusw1,btemp+10
 18716  017724  0EFF               	movlw	-1
 18717  017726  006F FF8C  F03D    	movff	plusw1,btemp+11
 18718  01772C  0E42               	movlw	66
 18719  01772E  243C               	addwf	(btemp+10)^0,w,c
 18720  017730  6ED9               	movwf	fsr2l,c
 18721  017732  0E00               	movlw	0
 18722  017734  203D               	addwfc	(btemp+11)^0,w,c
 18723  017736  6EDA               	movwf	fsr2h,c
 18724  017738  2ADF               	incf	indf2,f,c
 18725  01773A                     l1502:
 18726                           
 18727                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 18728  01773A  52E5               	movf	postdec1,f,c
 18729  01773C  52E5               	movf	postdec1,f,c
 18730  01773E  52E5               	movf	postdec1,f,c
 18731  017740  0012               	return		;funcret
 18732  017742                     __end_of_ringBufS_put_dma:
 18733                           	opt callstack 0
 18734                           
 18735 ;; *************** function _atoi *****************
 18736 ;; Defined at:
 18737 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 18738 ;; Parameters:    Size  Location     Type
 18739 ;;  s               2  [STACK] PTR const unsigned char 
 18740 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
 18741 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
 18742 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
 18743 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
 18744 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(17), 
 18745 ;;		 -> STR_22(16), STR_21(16), STR_20(19), STR_19(19), 
 18746 ;;		 -> STR_18(19), STR_17(19), STR_16(19), STR_15(19), 
 18747 ;;		 -> STR_14(19), STR_13(19), STR_12(19), STR_11(17), 
 18748 ;;		 -> STR_10(16), STR_9(16), STR_8(17), STR_6(15), 
 18749 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 18750 ;; Auto vars:     Size  Location     Type
 18751 ;;  n               2  [STACK] int 
 18752 ;;  neg             2  [STACK] int 
 18753 ;; Return value:  Size  Location     Type
 18754 ;;                  2  [STACK] int 
 18755 ;; Registers used:
 18756 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 18757 ;; Tracked objects:
 18758 ;;		On entry : 0/5
 18759 ;;		On exit  : 0/0
 18760 ;;		Unchanged: 0/0
 18761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18766 ;;Total ram usage:        0 bytes
 18767 ;; Hardware stack levels used:    1
 18768 ;; Hardware stack levels required when called:    7
 18769 ;; This function calls:
 18770 ;;		_isdigit
 18771 ;;		_isspace
 18772 ;; This function is called by:
 18773 ;;		_vfpfcnvrt
 18774 ;; This function uses a reentrant model
 18775 ;;
 18776                           
 18777                           	psect	text71
 18778  0156C4                     __ptext71:
 18779                           	opt callstack 0
 18780  0156C4                     _atoi:
 18781                           	opt callstack 0
 18782                           
 18783                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18784  0156C4  0E09               	movlw	9
 18785  0156C6  26E1               	addwf	fsr1l,f,c
 18786  0156C8  0E00               	movlw	0
 18787  0156CA  22E2               	addwfc	fsr1h,f,c
 18788                           
 18789                           ;stkvar	_n @ sp[(-9)+5]
 18790                           
 18791                           ;incstack = 0
 18792  0156CC  0EFC               	movlw	-4
 18793  0156CE  6AE3               	clrf	plusw1,c
 18794  0156D0  0EFD               	movlw	-3
 18795  0156D2  6AE3               	clrf	plusw1,c
 18796                           
 18797                           ;stkvar	_neg @ sp[(-9)+7]
 18798  0156D4  0EFE               	movlw	-2
 18799  0156D6  6AE3               	clrf	plusw1,c
 18800  0156D8  0EFF               	movlw	-1
 18801  0156DA  6AE3               	clrf	plusw1,c
 18802  0156DC  D011               	goto	l7878
 18803  0156DE                     l7876:
 18804                           
 18805                           ;stkvar	_s @ sp[(-9)+-2]
 18806  0156DE  0EF5               	movlw	-11
 18807  0156E0  50E3               	movf	plusw1,w,c
 18808  0156E2  0F01               	addlw	1
 18809  0156E4  6E32               	movwf	btemp^0,c
 18810  0156E6  0EF5               	movlw	-11
 18811  0156E8  0060  F0CB  FFE3   	movff	btemp,plusw1
 18812  0156EE  6A32               	clrf	btemp^0,c
 18813  0156F0  0EF6               	movlw	-10
 18814  0156F2  50E3               	movf	plusw1,w,c
 18815  0156F4  2032               	addwfc	btemp^0,w,c
 18816  0156F6  6E32               	movwf	btemp^0,c
 18817  0156F8  0EF6               	movlw	-10
 18818  0156FA  0060  F0CB  FFE3   	movff	btemp,plusw1
 18819  015700                     l7878:
 18820                           
 18821                           ;stkvar	_atoi$5165 @ sp[(-9)+4]
 18822  015700  0EFB               	movlw	-5
 18823  015702  6AE3               	clrf	plusw1,c
 18824  015704  2AE3               	incf	plusw1,f,c
 18825                           
 18826                           ;stkvar	_s @ sp[(-9)+-2]
 18827  015706  50E1               	movf	fsr1l,w,c
 18828  015708  0FF5               	addlw	-11
 18829  01570A  6ED9               	movwf	fsr2l,c
 18830  01570C  50E2               	movf	fsr1h,w,c
 18831  01570E  6EDA               	movwf	fsr2h,c
 18832  015710  0EFF               	movlw	255
 18833  015712  22DA               	addwfc	fsr2h,f,c
 18834  015714  006F FF7B FFF6     	movff	postinc2,tblptrl
 18835  01571A  006F FF77 FFF7     	movff	postdec2,tblptrh
 18836  015720                     	if	0	;tblptru may be non-zero
 18837  015720                     	endif
 18838  015720                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18839  015720  0E00               	movlw	low (__mediumconst shr (0+16))
 18840  015722  6EF8               	movwf	tblptru,c
 18841  015724                     	endif
 18842  015724  0008               	tblrd		*
 18843  015726  50F5               	movf	tablat,w,c
 18844  015728  0A20               	xorlw	32
 18845  01572A  B4D8               	btfsc	status,2,c
 18846  01572C  D023               	goto	l7886
 18847  01572E  0EF7               	movlw	247
 18848  015730  6E3C               	movwf	(btemp+10)^0,c
 18849  015732  0EFF               	movlw	255
 18850  015734  6E3D               	movwf	(btemp+11)^0,c
 18851                           
 18852                           ;stkvar	_s @ sp[(-9)+-2]
 18853  015736  50E1               	movf	fsr1l,w,c
 18854  015738  0FF5               	addlw	-11
 18855  01573A  6ED9               	movwf	fsr2l,c
 18856  01573C  50E2               	movf	fsr1h,w,c
 18857  01573E  6EDA               	movwf	fsr2h,c
 18858  015740  0EFF               	movlw	255
 18859  015742  22DA               	addwfc	fsr2h,f,c
 18860  015744  006F FF7B FFF6     	movff	postinc2,tblptrl
 18861  01574A  006F FF77 FFF7     	movff	postdec2,tblptrh
 18862  015750                     	if	0	;tblptru may be non-zero
 18863  015750                     	endif
 18864  015750                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18865  015750  0E00               	movlw	low (__mediumconst shr (0+16))
 18866  015752  6EF8               	movwf	tblptru,c
 18867  015754                     	endif
 18868  015754  0008               	tblrd		*
 18869  015756  50F5               	movf	tablat,w,c
 18870  015758  6E3A               	movwf	(btemp+8)^0,c
 18871  01575A  6A3B               	clrf	(btemp+9)^0,c
 18872  01575C  503C               	movf	(btemp+10)^0,w,c
 18873  01575E  263A               	addwf	(btemp+8)^0,f,c
 18874  015760  503D               	movf	(btemp+11)^0,w,c
 18875  015762  223B               	addwfc	(btemp+9)^0,f,c
 18876  015764  503B               	movf	(btemp+9)^0,w,c
 18877  015766  E104               	bnz	u7470
 18878  015768  0E05               	movlw	5
 18879  01576A  5C3A               	subwf	(btemp+8)^0,w,c
 18880  01576C  A0D8               	btfss	status,0,c
 18881  01576E  D002               	goto	l7886
 18882  015770                     u7470:
 18883                           
 18884                           ;stkvar	_atoi$5165 @ sp[(-9)+4]
 18885  015770  0EFB               	movlw	-5
 18886  015772  6AE3               	clrf	plusw1,c
 18887  015774                     l7886:
 18888                           
 18889                           ;stkvar	_atoi$5165 @ sp[(-9)+4]
 18890  015774  0EFB               	movlw	-5
 18891  015776  50E3               	movf	plusw1,w,c
 18892  015778  6E3C               	movwf	(btemp+10)^0,c
 18893  01577A  6A3D               	clrf	(btemp+11)^0,c
 18894                           
 18895                           ;stkvar	_atoi$5164 @ sp[(-9)+2]
 18896  01577C  0EF9               	movlw	-7
 18897  01577E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 18898  015784  0EFA               	movlw	-6
 18899  015786  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 18900                           
 18901                           ;stkvar	_atoi$5164 @ sp[(-9)+2]
 18902  01578C  0EF9               	movlw	-7
 18903  01578E  006F FF8C  F032    	movff	plusw1,btemp
 18904  015794  0EFA               	movlw	-6
 18905  015796  50E3               	movf	plusw1,w,c
 18906  015798  1032               	iorwf	btemp^0,w,c
 18907  01579A  B4D8               	btfsc	status,2,c
 18908  01579C  D01F               	goto	l7896
 18909  01579E  D79F               	goto	l7876
 18910  0157A0                     l7892:
 18911  0157A0  0E01               	movlw	1
 18912  0157A2  6E3C               	movwf	(btemp+10)^0,c
 18913  0157A4  0E00               	movlw	0
 18914  0157A6  6E3D               	movwf	(btemp+11)^0,c
 18915                           
 18916                           ;stkvar	_neg @ sp[(-9)+7]
 18917  0157A8  0EFE               	movlw	-2
 18918  0157AA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 18919  0157B0  0EFF               	movlw	-1
 18920  0157B2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 18921  0157B8                     l7894:
 18922                           
 18923                           ;stkvar	_s @ sp[(-9)+-2]
 18924  0157B8  0EF5               	movlw	-11
 18925  0157BA  50E3               	movf	plusw1,w,c
 18926  0157BC  0F01               	addlw	1
 18927  0157BE  6E32               	movwf	btemp^0,c
 18928  0157C0  0EF5               	movlw	-11
 18929  0157C2  0060  F0CB  FFE3   	movff	btemp,plusw1
 18930  0157C8  6A32               	clrf	btemp^0,c
 18931  0157CA  0EF6               	movlw	-10
 18932  0157CC  50E3               	movf	plusw1,w,c
 18933  0157CE  2032               	addwfc	btemp^0,w,c
 18934  0157D0  6E32               	movwf	btemp^0,c
 18935  0157D2  0EF6               	movlw	-10
 18936  0157D4  0060  F0CB  FFE3   	movff	btemp,plusw1
 18937  0157DA  D053               	goto	l7902
 18938  0157DC                     l7896:
 18939                           
 18940                           ;stkvar	_s @ sp[(-9)+-2]
 18941  0157DC  50E1               	movf	fsr1l,w,c
 18942  0157DE  0FF5               	addlw	-11
 18943  0157E0  6ED9               	movwf	fsr2l,c
 18944  0157E2  50E2               	movf	fsr1h,w,c
 18945  0157E4  6EDA               	movwf	fsr2h,c
 18946  0157E6  0EFF               	movlw	255
 18947  0157E8  22DA               	addwfc	fsr2h,f,c
 18948  0157EA  006F FF7B FFF6     	movff	postinc2,tblptrl
 18949  0157F0  006F FF77 FFF7     	movff	postdec2,tblptrh
 18950  0157F6                     	if	0	;tblptru may be non-zero
 18951  0157F6                     	endif
 18952  0157F6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18953  0157F6  0E00               	movlw	low (__mediumconst shr (0+16))
 18954  0157F8  6EF8               	movwf	tblptru,c
 18955  0157FA                     	endif
 18956  0157FA  0008               	tblrd		*
 18957  0157FC  50F5               	movf	tablat,w,c
 18958  0157FE  6E3C               	movwf	(btemp+10)^0,c
 18959  015800  6A3D               	clrf	(btemp+11)^0,c
 18960                           
 18961                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18962                           ; Switch size 1, requested type "simple"
 18963                           ; Number of cases is 1, Range of values is 0 to 0
 18964                           ; switch strategies available:
 18965                           ; Name         Instructions Cycles
 18966                           ; simple_byte            4     3 (average)
 18967                           ;	Chosen strategy is simple_byte
 18968  015802  503D               	movf	(btemp+11)^0,w,c
 18969  015804  0A00               	xorlw	0	; case 0
 18970  015806  A4D8               	btfss	status,2,c
 18971  015808  D03C               	goto	l7902
 18972                           
 18973                           ; Switch size 1, requested type "simple"
 18974                           ; Number of cases is 2, Range of values is 43 to 45
 18975                           ; switch strategies available:
 18976                           ; Name         Instructions Cycles
 18977                           ; simple_byte            7     4 (average)
 18978                           ;	Chosen strategy is simple_byte
 18979  01580A  503C               	movf	(btemp+10)^0,w,c
 18980  01580C  0A2B               	xorlw	43	; case 43
 18981  01580E  B4D8               	btfsc	status,2,c
 18982  015810  D7D3               	goto	l7894
 18983  015812  0A06               	xorlw	6	; case 45
 18984  015814  B4D8               	btfsc	status,2,c
 18985  015816  D7C4               	goto	l7892
 18986  015818  D034               	goto	l7902
 18987  01581A                     l7898:
 18988                           
 18989                           ;stkvar	_n @ sp[(-9)+5]
 18990  01581A  0EFC               	movlw	-4
 18991  01581C  006F FF8C  F03C    	movff	plusw1,btemp+10
 18992  015822  0EFD               	movlw	-3
 18993  015824  006F FF8C  F03D    	movff	plusw1,btemp+11
 18994  01582A  0E0A               	movlw	10
 18995  01582C  023C               	mulwf	(btemp+10)^0,c
 18996  01582E  006F FFCC  F03A    	movff	prodl,btemp+8
 18997  015834  006F FFD0  F03B    	movff	prodh,btemp+9
 18998  01583A  023D               	mulwf	(btemp+11)^0,c
 18999  01583C  50F3               	movf	prodl,w,c
 19000  01583E  263B               	addwf	(btemp+9)^0,f,c
 19001                           
 19002                           ;stkvar	_s @ sp[(-9)+-2]
 19003  015840  50E1               	movf	fsr1l,w,c
 19004  015842  0FF5               	addlw	-11
 19005  015844  6ED9               	movwf	fsr2l,c
 19006  015846  50E2               	movf	fsr1h,w,c
 19007  015848  6EDA               	movwf	fsr2h,c
 19008  01584A  0EFF               	movlw	255
 19009  01584C  22DA               	addwfc	fsr2h,f,c
 19010  01584E  006F FF7B FFF6     	movff	postinc2,tblptrl
 19011  015854  006F FF77 FFF7     	movff	postdec2,tblptrh
 19012  01585A                     	if	0	;tblptru may be non-zero
 19013  01585A                     	endif
 19014  01585A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19015  01585A  0E00               	movlw	low (__mediumconst shr (0+16))
 19016  01585C  6EF8               	movwf	tblptru,c
 19017  01585E                     	endif
 19018  01585E  0008               	tblrd		*
 19019  015860  50F5               	movf	tablat,w,c
 19020  015862  5E3A               	subwf	(btemp+8)^0,f,c
 19021  015864  0E00               	movlw	0
 19022  015866  5A3B               	subwfb	(btemp+9)^0,f,c
 19023  015868  0E30               	movlw	48
 19024  01586A  263A               	addwf	(btemp+8)^0,f,c
 19025  01586C  0E00               	movlw	0
 19026  01586E  223B               	addwfc	(btemp+9)^0,f,c
 19027                           
 19028                           ;stkvar	_n @ sp[(-9)+5]
 19029  015870  0EFC               	movlw	-4
 19030  015872  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 19031  015878  0EFD               	movlw	-3
 19032  01587A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 19033  015880  D79B               	goto	l7894
 19034  015882                     l7902:
 19035  015882  0ED0               	movlw	208
 19036  015884  6E3C               	movwf	(btemp+10)^0,c
 19037  015886  0EFF               	movlw	255
 19038  015888  6E3D               	movwf	(btemp+11)^0,c
 19039                           
 19040                           ;stkvar	_s @ sp[(-9)+-2]
 19041  01588A  50E1               	movf	fsr1l,w,c
 19042  01588C  0FF5               	addlw	-11
 19043  01588E  6ED9               	movwf	fsr2l,c
 19044  015890  50E2               	movf	fsr1h,w,c
 19045  015892  6EDA               	movwf	fsr2h,c
 19046  015894  0EFF               	movlw	255
 19047  015896  22DA               	addwfc	fsr2h,f,c
 19048  015898  006F FF7B FFF6     	movff	postinc2,tblptrl
 19049  01589E  006F FF77 FFF7     	movff	postdec2,tblptrh
 19050  0158A4                     	if	0	;tblptru may be non-zero
 19051  0158A4                     	endif
 19052  0158A4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19053  0158A4  0E00               	movlw	low (__mediumconst shr (0+16))
 19054  0158A6  6EF8               	movwf	tblptru,c
 19055  0158A8                     	endif
 19056  0158A8  0008               	tblrd		*
 19057  0158AA  50F5               	movf	tablat,w,c
 19058  0158AC  6E3A               	movwf	(btemp+8)^0,c
 19059  0158AE  6A3B               	clrf	(btemp+9)^0,c
 19060  0158B0  503C               	movf	(btemp+10)^0,w,c
 19061  0158B2  263A               	addwf	(btemp+8)^0,f,c
 19062  0158B4  503D               	movf	(btemp+11)^0,w,c
 19063  0158B6  223B               	addwfc	(btemp+9)^0,f,c
 19064  0158B8  503B               	movf	(btemp+9)^0,w,c
 19065  0158BA  E106               	bnz	u7490
 19066  0158BC  0E0A               	movlw	10
 19067  0158BE  5C3A               	subwf	(btemp+8)^0,w,c
 19068  0158C0  B0D8               	btfsc	status,0,c
 19069  0158C2  D002               	goto	u7490
 19070  0158C4  0E01               	movlw	1
 19071  0158C6  D001               	goto	u7500
 19072  0158C8                     u7490:
 19073  0158C8  0E00               	movlw	0
 19074  0158CA                     u7500:
 19075  0158CA  6E3C               	movwf	(btemp+10)^0,c
 19076  0158CC  6A3D               	clrf	(btemp+11)^0,c
 19077                           
 19078                           ;stkvar	_atoi$5166 @ sp[(-9)+0]
 19079  0158CE  0EF7               	movlw	-9
 19080  0158D0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 19081  0158D6  0EF8               	movlw	-8
 19082  0158D8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19083                           
 19084                           ;stkvar	_atoi$5166 @ sp[(-9)+0]
 19085  0158DE  0EF7               	movlw	-9
 19086  0158E0  006F FF8C  F032    	movff	plusw1,btemp
 19087  0158E6  0EF8               	movlw	-8
 19088  0158E8  50E3               	movf	plusw1,w,c
 19089  0158EA  1032               	iorwf	btemp^0,w,c
 19090  0158EC  A4D8               	btfss	status,2,c
 19091  0158EE  D795               	goto	l7898
 19092                           
 19093                           ;stkvar	_neg @ sp[(-9)+7]
 19094  0158F0  0EFE               	movlw	-2
 19095  0158F2  006F FF8C  F032    	movff	plusw1,btemp
 19096  0158F8  0EFF               	movlw	-1
 19097  0158FA  50E3               	movf	plusw1,w,c
 19098  0158FC  1032               	iorwf	btemp^0,w,c
 19099  0158FE  A4D8               	btfss	status,2,c
 19100  015900  D00E               	goto	l7912
 19101                           
 19102                           ;stkvar	_n @ sp[(-9)+5]
 19103  015902  0EFC               	movlw	-4
 19104  015904  006F FF8C  F032    	movff	plusw1,btemp
 19105  01590A  1E32               	comf	btemp^0,f,c
 19106  01590C  0EFD               	movlw	-3
 19107  01590E  006F FF8C  F033    	movff	plusw1,btemp+1
 19108  015914  1E33               	comf	(btemp+1)^0,f,c
 19109  015916  2A32               	incf	btemp^0,f,c
 19110  015918  B4D8               	btfsc	status,2,c
 19111  01591A  2A33               	incf	(btemp+1)^0,f,c
 19112  01591C  D008               	goto	l2831
 19113  01591E                     l7912:
 19114                           
 19115                           ;stkvar	_n @ sp[(-9)+5]
 19116  01591E  0EFC               	movlw	-4
 19117  015920  006F FF8C  F032    	movff	plusw1,btemp
 19118  015926  0EFD               	movlw	-3
 19119  015928  006F FF8C  F033    	movff	plusw1,btemp+1
 19120  01592E                     l2831:
 19121                           
 19122                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 19123  01592E  0EF5               	movlw	245
 19124  015930  26E1               	addwf	fsr1l,f,c
 19125  015932  0EFF               	movlw	255
 19126  015934  22E2               	addwfc	fsr1h,f,c
 19127  015936  0012               	return		;funcret
 19128  015938                     __end_of_atoi:
 19129                           	opt callstack 0
 19130                           
 19131 ;; *************** function _isspace *****************
 19132 ;; Defined at:
 19133 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 19134 ;; Parameters:    Size  Location     Type
 19135 ;;  c               2  [STACK] int 
 19136 ;; Auto vars:     Size  Location     Type
 19137 ;;		None
 19138 ;; Return value:  Size  Location     Type
 19139 ;;                  2  [STACK] int 
 19140 ;; Registers used:
 19141 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 19142 ;; Tracked objects:
 19143 ;;		On entry : 0/0
 19144 ;;		On exit  : 0/0
 19145 ;;		Unchanged: 0/0
 19146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19151 ;;Total ram usage:        0 bytes
 19152 ;; Hardware stack levels used:    1
 19153 ;; Hardware stack levels required when called:    6
 19154 ;; This function calls:
 19155 ;;		Nothing
 19156 ;; This function is called by:
 19157 ;;		_atoi
 19158 ;; This function uses a reentrant model
 19159 ;;
 19160                           
 19161                           	psect	text72
 19162  01831E                     __ptext72:
 19163                           	opt callstack 0
 19164  01831E                     _isspace:
 19165                           	opt callstack 0
 19166                           
 19167                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19168  01831E  52E6               	movf	postinc1,f,c
 19169                           
 19170                           ;stkvar	_isspace$5204 @ sp[(-1)+0]
 19171                           
 19172                           ;incstack = 0
 19173  018320  0EFF               	movlw	-1
 19174  018322  6AE3               	clrf	plusw1,c
 19175  018324  2AE3               	incf	plusw1,f,c
 19176                           
 19177                           ;stkvar	_c @ sp[(-1)+-2]
 19178  018326  0EFD               	movlw	-3
 19179  018328  006F FF8C  F032    	movff	plusw1,btemp
 19180  01832E  0E20               	movlw	32
 19181  018330  1832               	xorwf	btemp^0,w,c
 19182  018332  E104               	bnz	u6460
 19183  018334  0EFE               	movlw	-2
 19184  018336  50E3               	movf	plusw1,w,c
 19185  018338  B4D8               	btfsc	status,2,c
 19186  01833A  D012               	goto	l7362
 19187  01833C                     u6460:
 19188                           
 19189                           ;stkvar	_c @ sp[(-1)+-2]
 19190  01833C  0EFD               	movlw	-3
 19191  01833E  50E3               	movf	plusw1,w,c
 19192  018340  0FF7               	addlw	247
 19193  018342  6E3C               	movwf	(btemp+10)^0,c
 19194  018344  0EFE               	movlw	-2
 19195  018346  006F FF8C  F03D    	movff	plusw1,btemp+11
 19196  01834C  0EFF               	movlw	255
 19197  01834E  223D               	addwfc	(btemp+11)^0,f,c
 19198  018350  503D               	movf	(btemp+11)^0,w,c
 19199  018352  E104               	bnz	u6470
 19200  018354  0E05               	movlw	5
 19201  018356  5C3C               	subwf	(btemp+10)^0,w,c
 19202  018358  A0D8               	btfss	status,0,c
 19203  01835A  D002               	goto	l7362
 19204  01835C                     u6470:
 19205                           
 19206                           ;stkvar	_isspace$5204 @ sp[(-1)+0]
 19207  01835C  0EFF               	movlw	-1
 19208  01835E  6AE3               	clrf	plusw1,c
 19209  018360                     l7362:
 19210                           
 19211                           ;stkvar	_isspace$5204 @ sp[(-1)+0]
 19212  018360  0EFF               	movlw	-1
 19213  018362  50E3               	movf	plusw1,w,c
 19214  018364  6E32               	movwf	btemp^0,c
 19215  018366  6A33               	clrf	(btemp+1)^0,c
 19216                           
 19217                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19218  018368  52E5               	movf	postdec1,f,c
 19219  01836A  52E5               	movf	postdec1,f,c
 19220  01836C  52E5               	movf	postdec1,f,c
 19221  01836E  0012               	return		;funcret
 19222  018370                     __end_of_isspace:
 19223                           	opt callstack 0
 19224                           
 19225 ;; *************** function _isdigit *****************
 19226 ;; Defined at:
 19227 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 19228 ;; Parameters:    Size  Location     Type
 19229 ;;  c               2  [STACK] int 
 19230 ;; Auto vars:     Size  Location     Type
 19231 ;;		None
 19232 ;; Return value:  Size  Location     Type
 19233 ;;                  2  [STACK] int 
 19234 ;; Registers used:
 19235 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 19236 ;; Tracked objects:
 19237 ;;		On entry : 0/0
 19238 ;;		On exit  : 0/0
 19239 ;;		Unchanged: 0/0
 19240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19245 ;;Total ram usage:        0 bytes
 19246 ;; Hardware stack levels used:    1
 19247 ;; Hardware stack levels required when called:    6
 19248 ;; This function calls:
 19249 ;;		Nothing
 19250 ;; This function is called by:
 19251 ;;		_vfpfcnvrt
 19252 ;;		_atoi
 19253 ;; This function uses a reentrant model
 19254 ;;
 19255                           
 19256                           	psect	text73
 19257  018802                     __ptext73:
 19258                           	opt callstack 0
 19259  018802                     _isdigit:
 19260                           	opt callstack 18
 19261                           
 19262                           ;stkvar	_c @ sp[(0)+-2]
 19263                           
 19264                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19265                           ;incstack = 0
 19266  018802  0EFE               	movlw	-2
 19267  018804  50E3               	movf	plusw1,w,c
 19268  018806  0FD0               	addlw	208
 19269  018808  6E3C               	movwf	(btemp+10)^0,c
 19270  01880A  0EFF               	movlw	-1
 19271  01880C  006F FF8C  F03D    	movff	plusw1,btemp+11
 19272  018812  0EFF               	movlw	255
 19273  018814  223D               	addwfc	(btemp+11)^0,f,c
 19274  018816  503D               	movf	(btemp+11)^0,w,c
 19275  018818  E106               	bnz	u5420
 19276  01881A  0E0A               	movlw	10
 19277  01881C  5C3C               	subwf	(btemp+10)^0,w,c
 19278  01881E  B0D8               	btfsc	status,0,c
 19279  018820  D002               	goto	u5420
 19280  018822  0E01               	movlw	1
 19281  018824  D001               	goto	u5430
 19282  018826                     u5420:
 19283  018826  0E00               	movlw	0
 19284  018828                     u5430:
 19285  018828  6E32               	movwf	btemp^0,c
 19286  01882A  6A33               	clrf	(btemp+1)^0,c
 19287                           
 19288                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19289  01882C  52E5               	movf	postdec1,f,c
 19290  01882E  52E5               	movf	postdec1,f,c
 19291  018830  0012               	return		;funcret
 19292  018832                     __end_of_isdigit:
 19293                           	opt callstack 0
 19294                           
 19295 ;; *************** function _set_vterm *****************
 19296 ;; Defined at:
 19297 ;;		line 107 in file "mconfig.c"
 19298 ;; Parameters:    Size  Location     Type
 19299 ;;  vterm           1  [STACK] const unsigned char 
 19300 ;; Auto vars:     Size  Location     Type
 19301 ;;		None
 19302 ;; Return value:  Size  Location     Type
 19303 ;;                  1  [STACK] unsigned char 
 19304 ;; Registers used:
 19305 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+11
 19306 ;; Tracked objects:
 19307 ;;		On entry : 0/1
 19308 ;;		On exit  : 3F/5
 19309 ;;		Unchanged: 0/0
 19310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19315 ;;Total ram usage:        0 bytes
 19316 ;; Hardware stack levels used:    1
 19317 ;; Hardware stack levels required when called:    6
 19318 ;; This function calls:
 19319 ;;		Nothing
 19320 ;; This function is called by:
 19321 ;;		_main
 19322 ;;		_check_help
 19323 ;; This function uses a reentrant model
 19324 ;;
 19325                           
 19326                           	psect	text74
 19327  018E00                     __ptext74:
 19328                           	opt callstack 0
 19329  018E00                     _set_vterm:
 19330                           	opt callstack 24
 19331                           
 19332                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 19333                           ;stkvar	_vterm @ sp[(0)+-1]
 19334                           
 19335                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19336                           ;incstack = 0
 19337  018E00  0EFF               	movlw	-1
 19338  018E02  006F FF8C  F03D    	movff	plusw1,btemp+11
 19339  018E08  0E03               	movlw	3
 19340  018E0A  163D               	andwf	(btemp+11)^0,f,c
 19341  018E0C  0105               	movlb	5	; () banked
 19342  018E0E  51D8               	movf	(_D+216)& (0+255),w,b
 19343  018E10  183D               	xorwf	(btemp+11)^0,w,c
 19344  018E12  0BFE               	andlw	-2
 19345  018E14  183D               	xorwf	(btemp+11)^0,w,c
 19346  018E16  6FD8               	movwf	(_D+216)& (0+255),b
 19347                           
 19348                           ; BSR set to: 5
 19349                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 19350  018E18  52E5               	movf	postdec1,f,c
 19351  018E1A  0012               	return		;funcret
 19352  018E1C                     __end_of_set_vterm:
 19353                           	opt callstack 0
 19354                           
 19355 ;; *************** function _set_temp_display_help *****************
 19356 ;; Defined at:
 19357 ;;		line 211 in file "mconfig.c"
 19358 ;; Parameters:    Size  Location     Type
 19359 ;;  new_response    1  [STACK] const enum E16501
 19360 ;; Auto vars:     Size  Location     Type
 19361 ;;		None
 19362 ;; Return value:  Size  Location     Type
 19363 ;;                  1  [STACK] enum E16501
 19364 ;; Registers used:
 19365 ;;		wreg, fsr1l, fsr1h
 19366 ;; Tracked objects:
 19367 ;;		On entry : 0/5
 19368 ;;		On exit  : 3F/2
 19369 ;;		Unchanged: 0/0
 19370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19375 ;;Total ram usage:        0 bytes
 19376 ;; Hardware stack levels used:    1
 19377 ;; Hardware stack levels required when called:    6
 19378 ;; This function calls:
 19379 ;;		Nothing
 19380 ;; This function is called by:
 19381 ;;		_check_help
 19382 ;; This function uses a reentrant model
 19383 ;;
 19384                           
 19385                           	psect	text75
 19386  018EEA                     __ptext75:
 19387                           	opt callstack 0
 19388  018EEA                     _set_temp_display_help:
 19389                           	opt callstack 23
 19390                           
 19391                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 19392                           
 19393                           ; BSR set to: 5
 19394                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19395                           ;incstack = 0
 19396  018EEA  0102               	movlb	2	; () banked
 19397  018EEC  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 19398                           
 19399                           ; BSR set to: 2
 19400                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 19401                           ;stkvar	_new_response_info @ sp[(0)+-1]
 19402  018EEE  0EFF               	movlw	-1
 19403  018EF0  006F FF8C  F2A4    	movff	plusw1,_V+164	;volatile
 19404                           
 19405                           ; BSR set to: 2
 19406                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 19407  018EF6  52E5               	movf	postdec1,f,c
 19408  018EF8  0012               	return		;funcret
 19409  018EFA                     __end_of_set_temp_display_help:
 19410                           	opt callstack 0
 19411                           
 19412 ;; *************** function _set_display_info *****************
 19413 ;; Defined at:
 19414 ;;		line 200 in file "mconfig.c"
 19415 ;; Parameters:    Size  Location     Type
 19416 ;;  new_response    1  [STACK] const enum E16501
 19417 ;; Auto vars:     Size  Location     Type
 19418 ;;		None
 19419 ;; Return value:  Size  Location     Type
 19420 ;;                  1  [STACK] enum E16986
 19421 ;; Registers used:
 19422 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 19423 ;; Tracked objects:
 19424 ;;		On entry : 0/1
 19425 ;;		On exit  : 0/0
 19426 ;;		Unchanged: 0/0
 19427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19432 ;;Total ram usage:        0 bytes
 19433 ;; Hardware stack levels used:    1
 19434 ;; Hardware stack levels required when called:    7
 19435 ;; This function calls:
 19436 ;;		_TimerDone
 19437 ;; This function is called by:
 19438 ;;		_main
 19439 ;;		_check_help
 19440 ;; This function uses a reentrant model
 19441 ;;
 19442                           
 19443                           	psect	text76
 19444  018D8A                     __ptext76:
 19445                           	opt callstack 0
 19446  018D8A                     _set_display_info:
 19447                           	opt callstack 23
 19448                           
 19449                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 19450                           
 19451                           ; BSR set to: 2
 19452                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19453                           ;incstack = 0
 19454  018D8A  0E07               	movlw	7
 19455  018D8C  6EE6               	movwf	postinc1,c
 19456  018D8E  EC3F  F0C6         	call	_TimerDone	;wreg free
 19457  018D92  5032               	movf	btemp^0,w,c
 19458  018D94  B4D8               	btfsc	status,2,c
 19459  018D96  D006               	goto	l1639
 19460                           
 19461                           ;mconfig.c: 205:   old_info = V.response.info;
 19462  018D98  0102               	movlb	2	; () banked
 19463  018D9A  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 19464                           
 19465                           ; BSR set to: 2
 19466                           ;mconfig.c: 206:   V.response.info = new_response_info;
 19467                           ;stkvar	_new_response_info @ sp[(0)+-1]
 19468  018D9C  0EFF               	movlw	-1
 19469  018D9E  006F FF8C  F2A3    	movff	plusw1,_V+163	;volatile
 19470  018DA4                     l1639:
 19471                           
 19472                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 19473  018DA4  52E5               	movf	postdec1,f,c
 19474  018DA6  0012               	return		;funcret
 19475  018DA8                     __end_of_set_display_info:
 19476                           	opt callstack 0
 19477                           
 19478 ;; *************** function _mode_lamp_dim *****************
 19479 ;; Defined at:
 19480 ;;		line 13 in file "mconfig.c"
 19481 ;; Parameters:    Size  Location     Type
 19482 ;;  level           2  [STACK] const unsigned short 
 19483 ;; Auto vars:     Size  Location     Type
 19484 ;;		None
 19485 ;; Return value:  Size  Location     Type
 19486 ;;                  1  [STACK] void 
 19487 ;; Registers used:
 19488 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 19489 ;; Tracked objects:
 19490 ;;		On entry : 0/2
 19491 ;;		On exit  : 0/0
 19492 ;;		Unchanged: 0/0
 19493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19498 ;;Total ram usage:        0 bytes
 19499 ;; Hardware stack levels used:    1
 19500 ;; Hardware stack levels required when called:    7
 19501 ;; This function calls:
 19502 ;;		_PWM8_LoadDutyValue
 19503 ;; This function is called by:
 19504 ;;		_main
 19505 ;;		_check_help
 19506 ;; This function uses a reentrant model
 19507 ;;
 19508                           
 19509                           	psect	text77
 19510  018E52                     __ptext77:
 19511                           	opt callstack 0
 19512  018E52                     _mode_lamp_dim:
 19513                           	opt callstack 23
 19514                           
 19515                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 19516                           ;stkvar	_level @ sp[(0)+-2]
 19517                           
 19518                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19519                           ;incstack = 0
 19520  018E52  0EFE               	movlw	-2
 19521  018E54  006F FF8F FFE6     	movff	plusw1,postinc1
 19522  018E5A  006F FF8F FFE6     	movff	plusw1,postinc1
 19523  018E60  ECAD  F0C2         	call	_PWM8_LoadDutyValue	;wreg free
 19524                           
 19525                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 19526  018E64  52E5               	movf	postdec1,f,c
 19527  018E66  52E5               	movf	postdec1,f,c
 19528  018E68  0012               	return		;funcret
 19529  018E6A                     __end_of_mode_lamp_dim:
 19530                           	opt callstack 0
 19531                           
 19532 ;; *************** function _mode_lamp_bright *****************
 19533 ;; Defined at:
 19534 ;;		line 18 in file "mconfig.c"
 19535 ;; Parameters:    Size  Location     Type
 19536 ;;		None
 19537 ;; Auto vars:     Size  Location     Type
 19538 ;;		None
 19539 ;; Return value:  Size  Location     Type
 19540 ;;                  1  [STACK] void 
 19541 ;; Registers used:
 19542 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 19543 ;; Tracked objects:
 19544 ;;		On entry : 0/2
 19545 ;;		On exit  : 0/0
 19546 ;;		Unchanged: 0/0
 19547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19552 ;;Total ram usage:        0 bytes
 19553 ;; Hardware stack levels used:    1
 19554 ;; Hardware stack levels required when called:    7
 19555 ;; This function calls:
 19556 ;;		_PWM8_LoadDutyValue
 19557 ;; This function is called by:
 19558 ;;		_check_help
 19559 ;; This function uses a reentrant model
 19560 ;;
 19561                           
 19562                           	psect	text78
 19563  018F08                     __ptext78:
 19564                           	opt callstack 0
 19565  018F08                     _mode_lamp_bright:
 19566                           	opt callstack 22
 19567                           
 19568                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 19569                           
 19570                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19571                           ;incstack = 0
 19572  018F08  0E2C               	movlw	44
 19573  018F0A  6EE6               	movwf	postinc1,c
 19574  018F0C  0E01               	movlw	1
 19575  018F0E  6EE6               	movwf	postinc1,c
 19576  018F10  ECAD  F0C2         	call	_PWM8_LoadDutyValue	;wreg free
 19577                           
 19578                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 19579  018F14  0012               	return		;funcret
 19580  018F16                     __end_of_mode_lamp_bright:
 19581                           	opt callstack 0
 19582                           
 19583 ;; *************** function _PWM8_LoadDutyValue *****************
 19584 ;; Defined at:
 19585 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 19586 ;; Parameters:    Size  Location     Type
 19587 ;;  dutyValue       2  [STACK] unsigned short 
 19588 ;; Auto vars:     Size  Location     Type
 19589 ;;		None
 19590 ;; Return value:  Size  Location     Type
 19591 ;;                  1  [STACK] void 
 19592 ;; Registers used:
 19593 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 19594 ;; Tracked objects:
 19595 ;;		On entry : 0/2
 19596 ;;		On exit  : 0/0
 19597 ;;		Unchanged: 0/0
 19598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19603 ;;Total ram usage:        0 bytes
 19604 ;; Hardware stack levels used:    1
 19605 ;; Hardware stack levels required when called:    6
 19606 ;; This function calls:
 19607 ;;		Nothing
 19608 ;; This function is called by:
 19609 ;;		_mode_lamp_dim
 19610 ;;		_mode_lamp_bright
 19611 ;; This function uses a reentrant model
 19612 ;;
 19613                           
 19614                           	psect	text79
 19615  01855A                     __ptext79:
 19616                           	opt callstack 0
 19617  01855A                     _PWM8_LoadDutyValue:
 19618                           	opt callstack 23
 19619                           
 19620                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 19621                           ;stkvar	_dutyValue @ sp[(0)+-2]
 19622                           
 19623                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19624                           ;incstack = 0
 19625  01855A  0EFE               	movlw	-2
 19626  01855C  006F FF8C  F03C    	movff	plusw1,btemp+10
 19627  018562  0EFF               	movlw	-1
 19628  018564  006F FF8C  F03D    	movff	plusw1,btemp+11
 19629  01856A  90D8               	bcf	status,0,c
 19630  01856C  323D               	rrcf	(btemp+11)^0,f,c
 19631  01856E  323C               	rrcf	(btemp+10)^0,f,c
 19632  018570  90D8               	bcf	status,0,c
 19633  018572  323D               	rrcf	(btemp+11)^0,f,c
 19634  018574  323C               	rrcf	(btemp+10)^0,f,c
 19635  018576  503C               	movf	(btemp+10)^0,w,c
 19636  018578  6E61               	movwf	97,c	;volatile
 19637                           
 19638                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 19639                           ;stkvar	_dutyValue @ sp[(0)+-2]
 19640  01857A  0EFE               	movlw	-2
 19641  01857C  006F FF8C  F03D    	movff	plusw1,btemp+11
 19642  018582  0E03               	movlw	3
 19643  018584  163D               	andwf	(btemp+11)^0,f,c
 19644  018586  0E06               	movlw	6
 19645  018588  6E32               	movwf	btemp^0,c
 19646  01858A                     u7955:
 19647  01858A  90D8               	bcf	status,0,c
 19648  01858C  363D               	rlcf	(btemp+11)^0,f,c
 19649  01858E  2E32               	decfsz	btemp^0,f,c
 19650  018590  D7FC               	goto	u7955
 19651  018592  503D               	movf	(btemp+11)^0,w,c
 19652  018594  6E60               	movwf	96,c	;volatile
 19653                           
 19654                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 19655  018596  52E5               	movf	postdec1,f,c
 19656  018598  52E5               	movf	postdec1,f,c
 19657  01859A  0012               	return		;funcret
 19658  01859C                     __end_of_PWM8_LoadDutyValue:
 19659                           	opt callstack 0
 19660                           
 19661 ;; *************** function _help_button *****************
 19662 ;; Defined at:
 19663 ;;		line 26 in file "mconfig.c"
 19664 ;; Parameters:    Size  Location     Type
 19665 ;;		None
 19666 ;; Auto vars:     Size  Location     Type
 19667 ;;		None
 19668 ;; Return value:  Size  Location     Type
 19669 ;;                  1  [STACK] _Bool 
 19670 ;; Registers used:
 19671 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 19672 ;; Tracked objects:
 19673 ;;		On entry : 0/2
 19674 ;;		On exit  : 0/0
 19675 ;;		Unchanged: 0/0
 19676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19681 ;;Total ram usage:        0 bytes
 19682 ;; Hardware stack levels used:    1
 19683 ;; Hardware stack levels required when called:    7
 19684 ;; This function calls:
 19685 ;;		_StartTimer
 19686 ;;		_TimerDone
 19687 ;; This function is called by:
 19688 ;;		_check_help
 19689 ;; This function uses a reentrant model
 19690 ;;
 19691                           
 19692                           	psect	text80
 19693  018696                     __ptext80:
 19694                           	opt callstack 0
 19695  018696                     _help_button:
 19696                           	opt callstack 22
 19697                           
 19698                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 19699                           
 19700                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19701                           ;incstack = 0
 19702  018696  B0CB               	btfsc	203,0,c	;volatile
 19703  018698  D00C               	goto	l1582
 19704                           
 19705                           ;mconfig.c: 29:   V.help = 1;
 19706  01869A  0102               	movlb	2	; () banked
 19707  01869C  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 19708                           
 19709                           ; BSR set to: 2
 19710                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 19711  01869E  0E08               	movlw	8
 19712  0186A0  6EE6               	movwf	postinc1,c
 19713  0186A2  EC3F  F0C6         	call	_TimerDone	;wreg free
 19714  0186A6  5032               	movf	btemp^0,w,c
 19715  0186A8  B4D8               	btfsc	status,2,c
 19716  0186AA  D003               	goto	l1582
 19717                           
 19718                           ;mconfig.c: 31:    return 1;
 19719  0186AC  0E01               	movlw	1
 19720  0186AE  6E32               	movwf	btemp^0,c
 19721  0186B0  0012               	return	
 19722  0186B2                     l1582:
 19723                           
 19724                           ;mconfig.c: 34:  if (!V.help)
 19725  0186B2  0102               	movlb	2	; () banked
 19726  0186B4  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 19727  0186B6  D008               	goto	l8836
 19728                           
 19729                           ; BSR set to: 2
 19730                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 19731  0186B8  0E2C               	movlw	44
 19732  0186BA  6EE6               	movwf	postinc1,c
 19733  0186BC  0E01               	movlw	1
 19734  0186BE  6EE6               	movwf	postinc1,c
 19735  0186C0  0E08               	movlw	8
 19736  0186C2  6EE6               	movwf	postinc1,c
 19737  0186C4  EC2D  F0C3         	call	_StartTimer	;wreg free
 19738  0186C8                     l8836:
 19739                           
 19740                           ;mconfig.c: 37:  return 0;
 19741  0186C8  0E00               	movlw	0
 19742  0186CA  6E32               	movwf	btemp^0,c
 19743                           
 19744                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 19745  0186CC  0012               	return		;funcret
 19746  0186CE                     __end_of_help_button:
 19747                           	opt callstack 0
 19748                           
 19749 ;; *************** function _TimerDone *****************
 19750 ;; Defined at:
 19751 ;;		line 20 in file "timers.c"
 19752 ;; Parameters:    Size  Location     Type
 19753 ;;  timer           1  [STACK] const unsigned char 
 19754 ;; Auto vars:     Size  Location     Type
 19755 ;;		None
 19756 ;; Return value:  Size  Location     Type
 19757 ;;                  1  [STACK] _Bool 
 19758 ;; Registers used:
 19759 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 19760 ;; Tracked objects:
 19761 ;;		On entry : 0/1
 19762 ;;		On exit  : 0/0
 19763 ;;		Unchanged: 0/0
 19764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19769 ;;Total ram usage:        0 bytes
 19770 ;; Hardware stack levels used:    1
 19771 ;; Hardware stack levels required when called:    6
 19772 ;; This function calls:
 19773 ;;		Nothing
 19774 ;; This function is called by:
 19775 ;;		_main
 19776 ;;		_WaitMs
 19777 ;;		_help_button
 19778 ;;		_check_help
 19779 ;;		_set_display_info
 19780 ;; This function uses a reentrant model
 19781 ;;
 19782                           
 19783                           	psect	text81
 19784  018C7E                     __ptext81:
 19785                           	opt callstack 0
 19786  018C7E                     _TimerDone:
 19787                           	opt callstack 23
 19788                           
 19789                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19790                           ;incstack = 0
 19791  018C7E  0004               	clrwdt		;# 
 19792                           
 19793                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 19794                           ;stkvar	_timer @ sp[(0)+-1]
 19795  018C80  0EFF               	movlw	-1
 19796  018C82  50E3               	movf	plusw1,w,c
 19797  018C84  0D02               	mullw	2
 19798  018C86  50F3               	movf	243,w,c
 19799  018C88  0F89               	addlw	low _tickCount
 19800  018C8A  6ED9               	movwf	fsr2l,c
 19801  018C8C  6ADA               	clrf	fsr2h,c
 19802  018C8E  50DE               	movf	postinc2,w,c
 19803  018C90  10DE               	iorwf	postinc2,w,c
 19804  018C92  A4D8               	btfss	status,2,c
 19805  018C94  D002               	goto	l8198
 19806                           
 19807                           ;timers.c: 24:   return 1;
 19808  018C96  0E01               	movlw	1
 19809  018C98  D001               	goto	L20
 19810  018C9A                     l8198:
 19811                           
 19812                           ;timers.c: 26:  return 0;
 19813  018C9A  0E00               	movlw	0
 19814  018C9C                     L20:
 19815  018C9C  6E32               	movwf	btemp^0,c
 19816                           
 19817                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 19818  018C9E  52E5               	movf	postdec1,f,c
 19819  018CA0  0012               	return		;funcret
 19820  018CA2                     __end_of_TimerDone:
 19821                           	opt callstack 0
 19822                           
 19823 ;; *************** function _StartTimer *****************
 19824 ;; Defined at:
 19825 ;;		line 12 in file "timers.c"
 19826 ;; Parameters:    Size  Location     Type
 19827 ;;  timer           1  [STACK] const unsigned char 
 19828 ;;  count           2  [STACK] const unsigned short 
 19829 ;; Auto vars:     Size  Location     Type
 19830 ;;		None
 19831 ;; Return value:  Size  Location     Type
 19832 ;;                  1  [STACK] void 
 19833 ;; Registers used:
 19834 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 19835 ;; Tracked objects:
 19836 ;;		On entry : 0/5
 19837 ;;		On exit  : 0/0
 19838 ;;		Unchanged: 0/0
 19839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19844 ;;Total ram usage:        0 bytes
 19845 ;; Hardware stack levels used:    1
 19846 ;; Hardware stack levels required when called:    6
 19847 ;; This function calls:
 19848 ;;		Nothing
 19849 ;; This function is called by:
 19850 ;;		_main
 19851 ;;		_WaitMs
 19852 ;;		_help_button
 19853 ;;		_check_help
 19854 ;; This function uses a reentrant model
 19855 ;;
 19856                           
 19857                           	psect	text82
 19858  01865A                     __ptext82:
 19859                           	opt callstack 0
 19860  01865A                     _StartTimer:
 19861                           	opt callstack 21
 19862                           
 19863                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 19864                           ;stkvar	_count @ sp[(0)+-3]
 19865                           
 19866                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19867                           ;incstack = 0
 19868  01865A  0EFD               	movlw	-3
 19869  01865C  006F FF8C  F03C    	movff	plusw1,btemp+10
 19870  018662  0EFE               	movlw	-2
 19871  018664  006F FF8C  F03D    	movff	plusw1,btemp+11
 19872  01866A  90D8               	bcf	status,0,c
 19873  01866C  343C               	rlcf	(btemp+10)^0,w,c
 19874  01866E  6E3A               	movwf	(btemp+8)^0,c
 19875  018670  343D               	rlcf	(btemp+11)^0,w,c
 19876  018672  6E3B               	movwf	(btemp+9)^0,c
 19877                           
 19878                           ;stkvar	_timer @ sp[(0)+-1]
 19879  018674  0EFF               	movlw	-1
 19880  018676  50E3               	movf	plusw1,w,c
 19881  018678  0D02               	mullw	2
 19882  01867A  50F3               	movf	243,w,c
 19883  01867C  0F89               	addlw	low _tickCount
 19884  01867E  6ED9               	movwf	fsr2l,c
 19885  018680  6ADA               	clrf	fsr2h,c
 19886  018682  0060  F0EB  FFDE   	movff	btemp+8,postinc2
 19887  018688  0060  F0EF  FFDD   	movff	btemp+9,postdec2
 19888                           
 19889                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 19890  01868E  52E5               	movf	postdec1,f,c
 19891  018690  52E5               	movf	postdec1,f,c
 19892  018692  52E5               	movf	postdec1,f,c
 19893  018694  0012               	return		;funcret
 19894  018696                     __end_of_StartTimer:
 19895                           	opt callstack 0
 19896                           
 19897 ;; *************** function _display_info *****************
 19898 ;; Defined at:
 19899 ;;		line 190 in file "mconfig.c"
 19900 ;; Parameters:    Size  Location     Type
 19901 ;;		None
 19902 ;; Auto vars:     Size  Location     Type
 19903 ;;		None
 19904 ;; Return value:  Size  Location     Type
 19905 ;;                  1  [STACK] enum E16501
 19906 ;; Registers used:
 19907 ;;		btemp
 19908 ;; Tracked objects:
 19909 ;;		On entry : 0/2
 19910 ;;		On exit  : 0/0
 19911 ;;		Unchanged: 0/0
 19912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19917 ;;Total ram usage:        0 bytes
 19918 ;; Hardware stack levels used:    1
 19919 ;; Hardware stack levels required when called:    6
 19920 ;; This function calls:
 19921 ;;		Nothing
 19922 ;; This function is called by:
 19923 ;;		_check_help
 19924 ;; This function uses a reentrant model
 19925 ;;
 19926                           
 19927                           	psect	text83
 19928  018F6A                     __ptext83:
 19929                           	opt callstack 0
 19930  018F6A                     _display_info:
 19931                           	opt callstack 23
 19932                           
 19933                           ;mconfig.c: 192:  return V.response.info;
 19934                           
 19935                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19936                           ;incstack = 0
 19937  018F6A  0060  FA8C  F032   	movff	_V+163,btemp	;volatile
 19938                           
 19939                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 19940  018F70  0012               	return		;funcret
 19941  018F72                     __end_of_display_info:
 19942                           	opt callstack 0
 19943                           
 19944 ;; *************** function _display_help *****************
 19945 ;; Defined at:
 19946 ;;		line 195 in file "mconfig.c"
 19947 ;; Parameters:    Size  Location     Type
 19948 ;;		None
 19949 ;; Auto vars:     Size  Location     Type
 19950 ;;		None
 19951 ;; Return value:  Size  Location     Type
 19952 ;;                  1  [STACK] enum E16501
 19953 ;; Registers used:
 19954 ;;		btemp
 19955 ;; Tracked objects:
 19956 ;;		On entry : 3F/2
 19957 ;;		On exit  : 0/0
 19958 ;;		Unchanged: 0/0
 19959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19964 ;;Total ram usage:        0 bytes
 19965 ;; Hardware stack levels used:    1
 19966 ;; Hardware stack levels required when called:    6
 19967 ;; This function calls:
 19968 ;;		Nothing
 19969 ;; This function is called by:
 19970 ;;		_check_help
 19971 ;; This function uses a reentrant model
 19972 ;;
 19973                           
 19974                           	psect	text84
 19975  018F72                     __ptext84:
 19976                           	opt callstack 0
 19977  018F72                     _display_help:
 19978                           	opt callstack 23
 19979                           
 19980                           ;mconfig.c: 197:  return V.response.help_temp;
 19981                           
 19982                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19983                           ;incstack = 0
 19984  018F72  0060  FA90  F032   	movff	_V+164,btemp	;volatile
 19985                           
 19986                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 19987  018F78  0012               	return		;funcret
 19988  018F7A                     __end_of_display_help:
 19989                           	opt callstack 0
 19990                           
 19991 ;; *************** function _check_enter_button *****************
 19992 ;; Defined at:
 19993 ;;		line 42 in file "hid.c"
 19994 ;; Parameters:    Size  Location     Type
 19995 ;;  h               1  [STACK] PTR struct H_data
 19996 ;;		 -> H(7), 
 19997 ;; Auto vars:     Size  Location     Type
 19998 ;;		None
 19999 ;; Return value:  Size  Location     Type
 20000 ;;                  1  [STACK] _Bool 
 20001 ;; Registers used:
 20002 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20003 ;; Tracked objects:
 20004 ;;		On entry : 0/1
 20005 ;;		On exit  : 0/0
 20006 ;;		Unchanged: 0/0
 20007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20012 ;;Total ram usage:        0 bytes
 20013 ;; Hardware stack levels used:    1
 20014 ;; Hardware stack levels required when called:    6
 20015 ;; This function calls:
 20016 ;;		Nothing
 20017 ;; This function is called by:
 20018 ;;		_main
 20019 ;; This function uses a reentrant model
 20020 ;;
 20021                           
 20022                           	psect	text85
 20023  01859C                     __ptext85:
 20024                           	opt callstack 0
 20025  01859C                     _check_enter_button:
 20026                           	opt callstack 24
 20027                           
 20028                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 20029                           ;stkvar	_h @ sp[(0)+-1]
 20030                           
 20031                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20032                           ;incstack = 0
 20033  01859C  0EFF               	movlw	-1
 20034  01859E  50E3               	movf	plusw1,w,c
 20035  0185A0  6ED9               	movwf	fsr2l,c
 20036  0185A2  6ADA               	clrf	fsr2h,c
 20037  0185A4  0E04               	movlw	4
 20038  0185A6  26D9               	addwf	fsr2l,f,c
 20039  0185A8  50DF               	movf	indf2,w,c
 20040  0185AA  A4D8               	btfss	status,2,c
 20041  0185AC  D013               	goto	l9320
 20042                           
 20043                           ;stkvar	_h @ sp[(0)+-1]
 20044  0185AE  0EFF               	movlw	-1
 20045  0185B0  50E3               	movf	plusw1,w,c
 20046  0185B2  6ED9               	movwf	fsr2l,c
 20047  0185B4  6ADA               	clrf	fsr2h,c
 20048  0185B6  0E05               	movlw	5
 20049  0185B8  26D9               	addwf	fsr2l,f,c
 20050  0185BA  50DF               	movf	indf2,w,c
 20051  0185BC  A4D8               	btfss	status,2,c
 20052  0185BE  D00A               	goto	l9320
 20053                           
 20054                           ;hid.c: 45:   h->wait_enter = 1;
 20055                           ;stkvar	_h @ sp[(0)+-1]
 20056  0185C0  0EFF               	movlw	-1
 20057  0185C2  50E3               	movf	plusw1,w,c
 20058  0185C4  6ED9               	movwf	fsr2l,c
 20059  0185C6  6ADA               	clrf	fsr2h,c
 20060  0185C8  0E04               	movlw	4
 20061  0185CA  26D9               	addwf	fsr2l,f,c
 20062  0185CC  0E01               	movlw	1
 20063  0185CE  6EDF               	movwf	indf2,c
 20064                           
 20065                           ;hid.c: 46:   return 1;
 20066  0185D0  0E01               	movlw	1
 20067  0185D2  D001               	goto	L21
 20068  0185D4                     l9320:
 20069                           
 20070                           ;hid.c: 48:  return 0;
 20071  0185D4  0E00               	movlw	0
 20072  0185D6                     L21:
 20073  0185D6  6E32               	movwf	btemp^0,c
 20074                           
 20075                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 20076  0185D8  52E5               	movf	postdec1,f,c
 20077  0185DA  0012               	return		;funcret
 20078  0185DC                     __end_of_check_enter_button:
 20079                           	opt callstack 0
 20080                           
 20081 ;; *************** function _check_adc_scan *****************
 20082 ;; Defined at:
 20083 ;;		line 56 in file "daq.c"
 20084 ;; Parameters:    Size  Location     Type
 20085 ;;		None
 20086 ;; Auto vars:     Size  Location     Type
 20087 ;;		None
 20088 ;; Return value:  Size  Location     Type
 20089 ;;                  1  [STACK] _Bool 
 20090 ;; Registers used:
 20091 ;;		btemp
 20092 ;; Tracked objects:
 20093 ;;		On entry : 0/1
 20094 ;;		On exit  : 0/0
 20095 ;;		Unchanged: 0/0
 20096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20101 ;;Total ram usage:        0 bytes
 20102 ;; Hardware stack levels used:    1
 20103 ;; Hardware stack levels required when called:    6
 20104 ;; This function calls:
 20105 ;;		Nothing
 20106 ;; This function is called by:
 20107 ;;		_main
 20108 ;; This function uses a reentrant model
 20109 ;;
 20110                           
 20111                           	psect	text86
 20112  018F7A                     __ptext86:
 20113                           	opt callstack 0
 20114  018F7A                     _check_adc_scan:
 20115                           	opt callstack 24
 20116                           
 20117                           ;daq.c: 58:  return R.done;
 20118                           
 20119                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20120                           ;incstack = 0
 20121  018F7A  0060  F3B8  F032   	movff	_R+39,btemp	;volatile
 20122                           
 20123                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 20124  018F80  0012               	return		;funcret
 20125  018F82                     __end_of_check_adc_scan:
 20126                           	opt callstack 0
 20127                           
 20128 ;; *************** function _calc_model_data *****************
 20129 ;; Defined at:
 20130 ;;		line 55 in file "mbmc.c"
 20131 ;; Parameters:    Size  Location     Type
 20132 ;;		None
 20133 ;; Auto vars:     Size  Location     Type
 20134 ;;		None
 20135 ;; Return value:  Size  Location     Type
 20136 ;;                  1  [STACK] void 
 20137 ;; Registers used:
 20138 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20139 ;; Tracked objects:
 20140 ;;		On entry : 0/1
 20141 ;;		On exit  : 3C/0
 20142 ;;		Unchanged: 0/0
 20143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20148 ;;Total ram usage:        0 bytes
 20149 ;; Hardware stack levels used:    1
 20150 ;; Hardware stack levels required when called:    9
 20151 ;; This function calls:
 20152 ;;		___fladd
 20153 ;;		___flmul
 20154 ;;		___flsub
 20155 ;;		_lp_filter
 20156 ;; This function is called by:
 20157 ;;		_main
 20158 ;; This function uses a reentrant model
 20159 ;;
 20160                           
 20161                           	psect	text87
 20162  014EAA                     __ptext87:
 20163                           	opt callstack 0
 20164  014EAA                     _calc_model_data:
 20165                           	opt callstack 21
 20166                           
 20167                           ;mbmc.c: 57:  if (!V.calib) {
 20168                           
 20169                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20170                           ;incstack = 0
 20171  014EAA  0102               	movlb	2	; () banked
 20172  014EAC  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
 20173  014EAE  A4D8               	btfss	status,2,c
 20174  014EB0  0012               	return	
 20175                           
 20176                           ; BSR set to: 2
 20177                           ;mbmc.c: 58:   C.c_bat = C.calc[C_BATT];
 20178  014EB2  C100  F144         	movff	_C,_C+68
 20179  014EB6  C101  F145         	movff	_C+1,_C+69
 20180  014EBA  C102  F146         	movff	_C+2,_C+70
 20181  014EBE  C103  F147         	movff	_C+3,_C+71
 20182                           
 20183                           ;mbmc.c: 59:   C.c_pv = C.calc[C_PV];
 20184  014EC2  C104  F148         	movff	_C+4,_C+72
 20185  014EC6  C105  F149         	movff	_C+5,_C+73
 20186  014ECA  C106  F14A         	movff	_C+6,_C+74
 20187  014ECE  C107  F14B         	movff	_C+7,_C+75
 20188                           
 20189                           ;mbmc.c: 60:   C.v_bat = C.calc[V_BAT];
 20190  014ED2  C110  F154         	movff	_C+16,_C+84
 20191  014ED6  C111  F155         	movff	_C+17,_C+85
 20192  014EDA  C112  F156         	movff	_C+18,_C+86
 20193  014EDE  C113  F157         	movff	_C+19,_C+87
 20194                           
 20195                           ;mbmc.c: 61:   C.v_pv = C.calc[V_PV];
 20196  014EE2  C114  F150         	movff	_C+20,_C+80
 20197  014EE6  C115  F151         	movff	_C+21,_C+81
 20198  014EEA  C116  F152         	movff	_C+22,_C+82
 20199  014EEE  C117  F153         	movff	_C+23,_C+83
 20200                           
 20201                           ;mbmc.c: 62:   C.v_inverter = C.calc[V_INVERTER];
 20202  014EF2  C130  F164         	movff	_C+48,_C+100
 20203  014EF6  C131  F165         	movff	_C+49,_C+101
 20204  014EFA  C132  F166         	movff	_C+50,_C+102
 20205  014EFE  C133  F167         	movff	_C+51,_C+103
 20206                           
 20207                           ; BSR set to: 2
 20208                           ;mbmc.c: 63:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 20209  014F02  0E01               	movlw	1
 20210  014F04  6EE6               	movwf	postinc1,c
 20211  014F06  0E10               	movlw	16
 20212  014F08  6EE6               	movwf	postinc1,c
 20213  014F0A  0060  F403  FFE6   	movff	_C,postinc1
 20214  014F10  0060  F407  FFE6   	movff	_C+1,postinc1
 20215  014F16  0060  F40B  FFE6   	movff	_C+2,postinc1
 20216  014F1C  0060  F40F  FFE6   	movff	_C+3,postinc1
 20217  014F22  0060  F413  FFE6   	movff	_C+4,postinc1
 20218  014F28  0060  F417  FFE6   	movff	_C+5,postinc1
 20219  014F2E  0060  F41B  FFE6   	movff	_C+6,postinc1
 20220  014F34  0060  F41F  FFE6   	movff	_C+7,postinc1
 20221  014F3A  ECFF  F0C1         	call	___flsub	;wreg free
 20222  014F3E  0060  F0CB  FFE6   	movff	btemp,postinc1
 20223  014F44  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 20224  014F4A  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 20225  014F50  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 20226  014F56  ECAB  F0B0         	call	_lp_filter	;wreg free
 20227  014F5A  0060  F0C8  F140   	movff	btemp,_C+64
 20228  014F60  0060  F0CC  F141   	movff	btemp+1,_C+65
 20229  014F66  0060  F0D0  F142   	movff	btemp+2,_C+66
 20230  014F6C  0060  F0D4  F143   	movff	btemp+3,_C+67
 20231                           
 20232                           ;mbmc.c: 64:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 20233  014F72  0E01               	movlw	1
 20234  014F74  6EE6               	movwf	postinc1,c
 20235  014F76  0E11               	movlw	17
 20236  014F78  6EE6               	movwf	postinc1,c
 20237  014F7A  0060  F553  FFE6   	movff	_C+84,postinc1
 20238  014F80  0060  F557  FFE6   	movff	_C+85,postinc1
 20239  014F86  0060  F55B  FFE6   	movff	_C+86,postinc1
 20240  014F8C  0060  F55F  FFE6   	movff	_C+87,postinc1
 20241  014F92  0060  F503  FFE6   	movff	_C+64,postinc1
 20242  014F98  0060  F507  FFE6   	movff	_C+65,postinc1
 20243  014F9E  0060  F50B  FFE6   	movff	_C+66,postinc1
 20244  014FA4  0060  F50F  FFE6   	movff	_C+67,postinc1
 20245  014FAA  EC06  F093         	call	___flmul	;wreg free
 20246  014FAE  0060  F0CB  FFE6   	movff	btemp,postinc1
 20247  014FB4  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 20248  014FBA  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 20249  014FC0  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 20250  014FC6  ECAB  F0B0         	call	_lp_filter	;wreg free
 20251  014FCA  0060  F0C8  F168   	movff	btemp,_C+104
 20252  014FD0  0060  F0CC  F169   	movff	btemp+1,_C+105
 20253  014FD6  0060  F0D0  F16A   	movff	btemp+2,_C+106
 20254  014FDC  0060  F0D4  F16B   	movff	btemp+3,_C+107
 20255                           
 20256                           ;mbmc.c: 65:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 20257  014FE2  0E01               	movlw	1
 20258  014FE4  6EE6               	movwf	postinc1,c
 20259  014FE6  0E12               	movlw	18
 20260  014FE8  6EE6               	movwf	postinc1,c
 20261  014FEA  0060  F543  FFE6   	movff	_C+80,postinc1
 20262  014FF0  0060  F547  FFE6   	movff	_C+81,postinc1
 20263  014FF6  0060  F54B  FFE6   	movff	_C+82,postinc1
 20264  014FFC  0060  F54F  FFE6   	movff	_C+83,postinc1
 20265  015002  0060  F523  FFE6   	movff	_C+72,postinc1
 20266  015008  0060  F527  FFE6   	movff	_C+73,postinc1
 20267  01500E  0060  F52B  FFE6   	movff	_C+74,postinc1
 20268  015014  0060  F52F  FFE6   	movff	_C+75,postinc1
 20269  01501A  EC06  F093         	call	___flmul	;wreg free
 20270  01501E  0060  F0CB  FFE6   	movff	btemp,postinc1
 20271  015024  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 20272  01502A  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 20273  015030  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 20274  015036  ECAB  F0B0         	call	_lp_filter	;wreg free
 20275  01503A  0060  F0C8  F170   	movff	btemp,_C+112
 20276  015040  0060  F0CC  F171   	movff	btemp+1,_C+113
 20277  015046  0060  F0D0  F172   	movff	btemp+2,_C+114
 20278  01504C  0060  F0D4  F173   	movff	btemp+3,_C+115
 20279                           
 20280                           ;mbmc.c: 66:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 20281  015052  0E01               	movlw	1
 20282  015054  6EE6               	movwf	postinc1,c
 20283  015056  0E13               	movlw	19
 20284  015058  6EE6               	movwf	postinc1,c
 20285  01505A  0E00               	movlw	0
 20286  01505C  6EE6               	movwf	postinc1,c
 20287  01505E  0E00               	movlw	0
 20288  015060  6EE6               	movwf	postinc1,c
 20289  015062  0E60               	movlw	96
 20290  015064  6EE6               	movwf	postinc1,c
 20291  015066  0EC1               	movlw	193
 20292  015068  6EE6               	movwf	postinc1,c
 20293  01506A  0060  F593  FFE6   	movff	_C+100,postinc1
 20294  015070  0060  F597  FFE6   	movff	_C+101,postinc1
 20295  015076  0060  F59B  FFE6   	movff	_C+102,postinc1
 20296  01507C  0060  F59F  FFE6   	movff	_C+103,postinc1
 20297  015082  0060  F503  FFE6   	movff	_C+64,postinc1
 20298  015088  0060  F507  FFE6   	movff	_C+65,postinc1
 20299  01508E  0060  F50B  FFE6   	movff	_C+66,postinc1
 20300  015094  0060  F50F  FFE6   	movff	_C+67,postinc1
 20301  01509A  EC06  F093         	call	___flmul	;wreg free
 20302  01509E  0060  F0CB  FFE6   	movff	btemp,postinc1
 20303  0150A4  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 20304  0150AA  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 20305  0150B0  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 20306  0150B6  EC1B  F097         	call	___fladd	;wreg free
 20307  0150BA  0060  F0CB  FFE6   	movff	btemp,postinc1
 20308  0150C0  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 20309  0150C6  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 20310  0150CC  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 20311  0150D2  ECAB  F0B0         	call	_lp_filter	;wreg free
 20312  0150D6  0060  F0C8  F16C   	movff	btemp,_C+108
 20313  0150DC  0060  F0CC  F16D   	movff	btemp+1,_C+109
 20314  0150E2  0060  F0D0  F16E   	movff	btemp+2,_C+110
 20315  0150E8  0060  F0D4  F16F   	movff	btemp+3,_C+111
 20316                           
 20317                           ;mbmc.c: 67:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 20318  0150EE  0E01               	movlw	1
 20319  0150F0  6EE6               	movwf	postinc1,c
 20320  0150F2  0E14               	movlw	20
 20321  0150F4  6EE6               	movwf	postinc1,c
 20322  0150F6  0060  F553  FFE6   	movff	_C+84,postinc1
 20323  0150FC  0060  F557  FFE6   	movff	_C+85,postinc1
 20324  015102  0060  F55B  FFE6   	movff	_C+86,postinc1
 20325  015108  0060  F55F  FFE6   	movff	_C+87,postinc1
 20326  01510E  0060  F513  FFE6   	movff	_C+68,postinc1
 20327  015114  0060  F517  FFE6   	movff	_C+69,postinc1
 20328  01511A  0060  F51B  FFE6   	movff	_C+70,postinc1
 20329  015120  0060  F51F  FFE6   	movff	_C+71,postinc1
 20330  015126  EC06  F093         	call	___flmul	;wreg free
 20331  01512A  0060  F0CB  FFE6   	movff	btemp,postinc1
 20332  015130  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 20333  015136  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 20334  01513C  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 20335  015142  ECAB  F0B0         	call	_lp_filter	;wreg free
 20336  015146  0060  F0C8  F174   	movff	btemp,_C+116
 20337  01514C  0060  F0CC  F175   	movff	btemp+1,_C+117
 20338  015152  0060  F0D0  F176   	movff	btemp+2,_C+118
 20339  015158  0060  F0D4  F177   	movff	btemp+3,_C+119
 20340                           
 20341                           ;mbmc.c: 71:   if (C.p_inverter < 0.0)
 20342  01515E  0101               	movlb	1	; () banked
 20343  015160  AF6F               	btfss	(_C+111)& (0+255),7,b
 20344  015162  D008               	goto	l9222
 20345                           
 20346                           ; BSR set to: 1
 20347                           ;mbmc.c: 72:    C.p_inverter = 0.0001;
 20348  015164  0E17               	movlw	23
 20349  015166  6F6C               	movwf	(_C+108)& (0+255),b
 20350  015168  0EB7               	movlw	183
 20351  01516A  6F6D               	movwf	(_C+109)& (0+255),b
 20352  01516C  0ED1               	movlw	209
 20353  01516E  6F6E               	movwf	(_C+110)& (0+255),b
 20354  015170  0E38               	movlw	56
 20355  015172  6F6F               	movwf	(_C+111)& (0+255),b
 20356  015174                     l9222:
 20357                           
 20358                           ; BSR set to: 1
 20359                           ;mbmc.c: 76:   C.dynamic_ah = C.static_ah;
 20360  015174  C180  F184         	movff	_C+128,_C+132
 20361  015178  C181  F185         	movff	_C+129,_C+133
 20362  01517C  C182  F186         	movff	_C+130,_C+134
 20363  015180  C183  F187         	movff	_C+131,_C+135
 20364                           
 20365                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 20366  015184  0012               	return		;funcret
 20367  015186                     __end_of_calc_model_data:
 20368                           	opt callstack 0
 20369                           
 20370 ;; *************** function _lp_filter *****************
 20371 ;; Defined at:
 20372 ;;		line 17 in file "mbmc.c"
 20373 ;; Parameters:    Size  Location     Type
 20374 ;;  new             4  [STACK] const float 
 20375 ;;  bn              1  [STACK] const unsigned char 
 20376 ;;  slow            1  [STACK] const char 
 20377 ;; Auto vars:     Size  Location     Type
 20378 ;;  lp_speed        4  [STACK] float 
 20379 ;; Return value:  Size  Location     Type
 20380 ;;                  4  [STACK] float 
 20381 ;; Registers used:
 20382 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20383 ;; Tracked objects:
 20384 ;;		On entry : 0/2
 20385 ;;		On exit  : 0/0
 20386 ;;		Unchanged: 0/0
 20387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20392 ;;Total ram usage:        0 bytes
 20393 ;; Hardware stack levels used:    1
 20394 ;; Hardware stack levels required when called:    8
 20395 ;; This function calls:
 20396 ;;		___fladd
 20397 ;;		___flmul
 20398 ;;		___flsub
 20399 ;; This function is called by:
 20400 ;;		_main
 20401 ;;		_convert_adc_data
 20402 ;;		_calc_model_data
 20403 ;; This function uses a reentrant model
 20404 ;;
 20405                           
 20406                           	psect	text88
 20407  016156                     __ptext88:
 20408                           	opt callstack 0
 20409  016156                     _lp_filter:
 20410                           	opt callstack 0
 20411                           
 20412                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20413  016156  52E6               	movf	postinc1,f,c
 20414  016158  52E6               	movf	postinc1,f,c
 20415  01615A  52E6               	movf	postinc1,f,c
 20416  01615C  52E6               	movf	postinc1,f,c
 20417                           
 20418                           ;mbmc.c: 17: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 18: {;mbmc.c: 19:  static float smooth[16 +5];;mbmc.c: 20:  float lp_speed;;mbmc.c: 2
      +                          2:  if (bn >= 16 +5)
 20419                           ;stkvar	_bn @ sp[(-4)+-5]
 20420                           
 20421                           ;incstack = 0
 20422  01615E  0EF7               	movlw	-9
 20423  016160  006F FF8C  F032    	movff	plusw1,btemp
 20424  016166  0E14               	movlw	20
 20425  016168  6432               	cpfsgt	btemp^0,c
 20426  01616A  D011               	goto	l8790
 20427  01616C                     u8180:
 20428                           
 20429                           ;mbmc.c: 23:   return new;
 20430                           ;stkvar	_new @ sp[(-4)+-4]
 20431  01616C  0EF8               	movlw	-8
 20432  01616E  006F FF8C  F032    	movff	plusw1,btemp
 20433  016174  0EF9               	movlw	-7
 20434  016176  006F FF8C  F033    	movff	plusw1,btemp+1
 20435  01617C  0EFA               	movlw	-6
 20436  01617E  006F FF8C  F034    	movff	plusw1,btemp+2
 20437  016184  0EFB               	movlw	-5
 20438  016186  006F FF8C  F035    	movff	plusw1,btemp+3
 20439  01618C  D0BF               	goto	l1726
 20440  01618E                     l8790:
 20441                           
 20442                           ;mbmc.c: 25:  if (slow == (-1)) {
 20443                           ;stkvar	_slow @ sp[(-4)+-6]
 20444  01618E  0EF6               	movlw	-10
 20445  016190  28E3               	incf	plusw1,w,c
 20446  016192  A4D8               	btfss	status,2,c
 20447  016194  D012               	goto	l8798
 20448                           
 20449                           ;mbmc.c: 26:   smooth[bn] = 0.0;
 20450                           ;stkvar	_bn @ sp[(-4)+-5]
 20451  016196  0EF7               	movlw	-9
 20452  016198  50E3               	movf	plusw1,w,c
 20453  01619A  0D04               	mullw	4
 20454  01619C  0E00               	movlw	low lp_filter@smooth
 20455  01619E  24F3               	addwf	243,w,c
 20456  0161A0  6ED9               	movwf	fsr2l,c
 20457  0161A2  0E03               	movlw	high lp_filter@smooth
 20458  0161A4  20F4               	addwfc	prodh,w,c
 20459  0161A6  6EDA               	movwf	fsr2h,c
 20460  0161A8  0E00               	movlw	0
 20461  0161AA  6EDE               	movwf	postinc2,c
 20462  0161AC  0E00               	movlw	0
 20463  0161AE  6EDE               	movwf	postinc2,c
 20464  0161B0  0E00               	movlw	0
 20465  0161B2  6EDE               	movwf	postinc2,c
 20466  0161B4  0E00               	movlw	0
 20467  0161B6  6EDD               	movwf	postdec2,c
 20468  0161B8  D7D9               	goto	u8180
 20469  0161BA                     l8798:
 20470                           
 20471                           ;mbmc.c: 30:  if (slow) {
 20472                           ;stkvar	_slow @ sp[(-4)+-6]
 20473  0161BA  0EF6               	movlw	-10
 20474  0161BC  50E3               	movf	plusw1,w,c
 20475  0161BE  B4D8               	btfsc	status,2,c
 20476  0161C0  D008               	goto	l8802
 20477                           
 20478                           ;mbmc.c: 31:   lp_speed = 0.033;
 20479  0161C2  0E02               	movlw	2
 20480  0161C4  6E3A               	movwf	(btemp+8)^0,c
 20481  0161C6  0E2B               	movlw	43
 20482  0161C8  6E3B               	movwf	(btemp+9)^0,c
 20483  0161CA  0E07               	movlw	7
 20484  0161CC  6E3C               	movwf	(btemp+10)^0,c
 20485  0161CE  0E3D               	movlw	61
 20486  0161D0  D007               	goto	L22
 20487  0161D2                     l8802:
 20488                           
 20489                           ;mbmc.c: 33:   lp_speed = 0.125;
 20490  0161D2  0E00               	movlw	0
 20491  0161D4  6E3A               	movwf	(btemp+8)^0,c
 20492  0161D6  0E00               	movlw	0
 20493  0161D8  6E3B               	movwf	(btemp+9)^0,c
 20494  0161DA  0E00               	movlw	0
 20495  0161DC  6E3C               	movwf	(btemp+10)^0,c
 20496  0161DE  0E3E               	movlw	62
 20497  0161E0                     L22:
 20498  0161E0  6E3D               	movwf	(btemp+11)^0,c
 20499                           
 20500                           ;stkvar	_lp_speed @ sp[(-4)+0]
 20501  0161E2  0EFC               	movlw	-4
 20502  0161E4  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20503  0161EA  0EFD               	movlw	-3
 20504  0161EC  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20505  0161F2  0EFE               	movlw	-2
 20506  0161F4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20507  0161FA  0EFF               	movlw	-1
 20508  0161FC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20509                           
 20510                           ;mbmc.c: 36:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 20511                           ;stkvar	_bn @ sp[(-4)+-5]
 20512  016202  0EF7               	movlw	-9
 20513  016204  50E3               	movf	plusw1,w,c
 20514  016206  0D04               	mullw	4
 20515  016208  0E00               	movlw	low lp_filter@smooth
 20516  01620A  24F3               	addwf	243,w,c
 20517  01620C  6ED9               	movwf	fsr2l,c
 20518  01620E  0E03               	movlw	high lp_filter@smooth
 20519  016210  20F4               	addwfc	prodh,w,c
 20520  016212  6EDA               	movwf	fsr2h,c
 20521  016214  006F FF7B FFE6     	movff	postinc2,postinc1
 20522  01621A  006F FF7B FFE6     	movff	postinc2,postinc1
 20523  016220  006F FF7B FFE6     	movff	postinc2,postinc1
 20524  016226  006F FF7B FFE6     	movff	postinc2,postinc1
 20525                           
 20526                           ;stkvar	_lp_speed @ sp[(-8)+0]
 20527  01622C  0EF8               	movlw	-8
 20528  01622E  006F FF8F FFE6     	movff	plusw1,postinc1
 20529  016234  006F FF8F FFE6     	movff	plusw1,postinc1
 20530  01623A  006F FF8F FFE6     	movff	plusw1,postinc1
 20531  016240  006F FF8F FFE6     	movff	plusw1,postinc1
 20532                           
 20533                           ;stkvar	_bn @ sp[(-12)+-5]
 20534  016246  0EEF               	movlw	-17
 20535  016248  50E3               	movf	plusw1,w,c
 20536  01624A  0D04               	mullw	4
 20537  01624C  0E00               	movlw	low lp_filter@smooth
 20538  01624E  24F3               	addwf	243,w,c
 20539  016250  6ED9               	movwf	fsr2l,c
 20540  016252  0E03               	movlw	high lp_filter@smooth
 20541  016254  20F4               	addwfc	prodh,w,c
 20542  016256  6EDA               	movwf	fsr2h,c
 20543  016258  006F FF7B FFE6     	movff	postinc2,postinc1
 20544  01625E  006F FF7B FFE6     	movff	postinc2,postinc1
 20545  016264  006F FF7B FFE6     	movff	postinc2,postinc1
 20546  01626A  006F FF7B FFE6     	movff	postinc2,postinc1
 20547                           
 20548                           ;stkvar	_new @ sp[(-16)+-4]
 20549  016270  0EEC               	movlw	-20
 20550  016272  006F FF8F FFE6     	movff	plusw1,postinc1
 20551  016278  006F FF8F FFE6     	movff	plusw1,postinc1
 20552  01627E  006F FF8F FFE6     	movff	plusw1,postinc1
 20553  016284  006F FF8F FFE6     	movff	plusw1,postinc1
 20554  01628A  ECFF  F0C1         	call	___flsub	;wreg free
 20555  01628E  0060  F0CB  FFE6   	movff	btemp,postinc1
 20556  016294  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 20557  01629A  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 20558  0162A0  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 20559  0162A6  EC06  F093         	call	___flmul	;wreg free
 20560  0162AA  0060  F0CB  FFE6   	movff	btemp,postinc1
 20561  0162B0  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 20562  0162B6  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 20563  0162BC  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 20564  0162C2  EC1B  F097         	call	___fladd	;wreg free
 20565                           
 20566                           ;stkvar	_bn @ sp[(-4)+-5]
 20567  0162C6  0EF7               	movlw	-9
 20568  0162C8  50E3               	movf	plusw1,w,c
 20569  0162CA  0D04               	mullw	4
 20570  0162CC  0E00               	movlw	low lp_filter@smooth
 20571  0162CE  24F3               	addwf	243,w,c
 20572  0162D0  6ED9               	movwf	fsr2l,c
 20573  0162D2  0E03               	movlw	high lp_filter@smooth
 20574  0162D4  20F4               	addwfc	prodh,w,c
 20575  0162D6  6EDA               	movwf	fsr2h,c
 20576  0162D8  0060  F0CB  FFDE   	movff	btemp,postinc2
 20577  0162DE  0060  F0CF  FFDE   	movff	btemp+1,postinc2
 20578  0162E4  0060  F0D3  FFDE   	movff	btemp+2,postinc2
 20579  0162EA  0060  F0D7  FFDD   	movff	btemp+3,postdec2
 20580  0162F0  52DD               	movf	postdec2,f,c
 20581  0162F2  52DD               	movf	postdec2,f,c
 20582  0162F4  006F FF78  F032    	movff	postinc2,btemp
 20583  0162FA  006F FF78  F033    	movff	postinc2,btemp+1
 20584  016300  006F FF78  F034    	movff	postinc2,btemp+2
 20585  016306  006F FF78  F035    	movff	postinc2,btemp+3
 20586  01630C                     l1726:
 20587                           
 20588                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 20589  01630C  0EF6               	movlw	246
 20590  01630E  26E1               	addwf	fsr1l,f,c
 20591  016310  0EFF               	movlw	255
 20592  016312  22E2               	addwfc	fsr1h,f,c
 20593  016314  0012               	return		;funcret
 20594  016316                     __end_of_lp_filter:
 20595                           	opt callstack 0
 20596                           
 20597 ;; *************** function ___flsub *****************
 20598 ;; Defined at:
 20599 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 20600 ;; Parameters:    Size  Location     Type
 20601 ;;  b               4  [STACK] float 
 20602 ;;  a               4  [STACK] float 
 20603 ;; Auto vars:     Size  Location     Type
 20604 ;;		None
 20605 ;; Return value:  Size  Location     Type
 20606 ;;                  4  [STACK] float 
 20607 ;; Registers used:
 20608 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 20609 ;; Tracked objects:
 20610 ;;		On entry : 0/2
 20611 ;;		On exit  : 0/0
 20612 ;;		Unchanged: 0/0
 20613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20618 ;;Total ram usage:        0 bytes
 20619 ;; Hardware stack levels used:    1
 20620 ;; Hardware stack levels required when called:    7
 20621 ;; This function calls:
 20622 ;;		___fladd
 20623 ;; This function is called by:
 20624 ;;		_conv_raw_result
 20625 ;;		_lp_filter
 20626 ;;		_calc_model_data
 20627 ;;		_efgtoa
 20628 ;; This function uses a reentrant model
 20629 ;;
 20630                           
 20631                           	psect	text89
 20632  0183FE                     __ptext89:
 20633                           	opt callstack 0
 20634  0183FE                     ___flsub:
 20635                           	opt callstack 16
 20636                           
 20637                           ;stkvar	_a @ sp[(0)+-8]
 20638                           
 20639                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20640                           ;incstack = 0
 20641  0183FE  0EFB               	movlw	-5
 20642  018400  7EE3               	btg	plusw1,7,c
 20643                           
 20644                           ;stkvar	_a @ sp[(0)+-8]
 20645  018402  0EF8               	movlw	-8
 20646  018404  006F FF8F FFE6     	movff	plusw1,postinc1
 20647  01840A  006F FF8F FFE6     	movff	plusw1,postinc1
 20648  018410  006F FF8F FFE6     	movff	plusw1,postinc1
 20649  018416  006F FF8F FFE6     	movff	plusw1,postinc1
 20650                           
 20651                           ;stkvar	_b @ sp[(-4)+-4]
 20652  01841C  0EF8               	movlw	-8
 20653  01841E  006F FF8F FFE6     	movff	plusw1,postinc1
 20654  018424  006F FF8F FFE6     	movff	plusw1,postinc1
 20655  01842A  006F FF8F FFE6     	movff	plusw1,postinc1
 20656  018430  006F FF8F FFE6     	movff	plusw1,postinc1
 20657  018436  EC1B  F097         	call	___fladd	;wreg free
 20658                           
 20659                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 20660  01843A  0EF8               	movlw	248
 20661  01843C  26E1               	addwf	fsr1l,f,c
 20662  01843E  0EFF               	movlw	255
 20663  018440  22E2               	addwfc	fsr1h,f,c
 20664  018442  0012               	return		;funcret
 20665  018444                     __end_of___flsub:
 20666                           	opt callstack 0
 20667                           
 20668 ;; *************** function ___fladd *****************
 20669 ;; Defined at:
 20670 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 20671 ;; Parameters:    Size  Location     Type
 20672 ;;  b               4  [STACK] float 
 20673 ;;  a               4  [STACK] float 
 20674 ;; Auto vars:     Size  Location     Type
 20675 ;;  grs             1  [STACK] unsigned char 
 20676 ;;  bexp            1  [STACK] unsigned char 
 20677 ;;  aexp            1  [STACK] unsigned char 
 20678 ;;  signs           1  [STACK] unsigned char 
 20679 ;; Return value:  Size  Location     Type
 20680 ;;                  4  [STACK] unsigned char 
 20681 ;; Registers used:
 20682 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 20683 ;; Tracked objects:
 20684 ;;		On entry : 0/5
 20685 ;;		On exit  : 0/0
 20686 ;;		Unchanged: 0/0
 20687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20692 ;;Total ram usage:        0 bytes
 20693 ;; Hardware stack levels used:    1
 20694 ;; Hardware stack levels required when called:    6
 20695 ;; This function calls:
 20696 ;;		Nothing
 20697 ;; This function is called by:
 20698 ;;		_lp_filter
 20699 ;;		_calc_model_data
 20700 ;;		_efgtoa
 20701 ;;		___flsub
 20702 ;; This function uses a reentrant model
 20703 ;;
 20704                           
 20705                           	psect	text90
 20706  012E36                     __ptext90:
 20707                           	opt callstack 0
 20708  012E36                     ___fladd:
 20709                           	opt callstack 0
 20710                           
 20711                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20712  012E36  52E6               	movf	postinc1,f,c
 20713  012E38  52E6               	movf	postinc1,f,c
 20714  012E3A  52E6               	movf	postinc1,f,c
 20715  012E3C  52E6               	movf	postinc1,f,c
 20716                           
 20717                           ;stkvar	_b @ sp[(-4)+-4]
 20718                           
 20719                           ;incstack = 0
 20720  012E3E  0EFB               	movlw	251
 20721  012E40  24E1               	addwf	fsr1l,w,c
 20722  012E42  6ED9               	movwf	fsr2l,c
 20723  012E44  0EFF               	movlw	255
 20724  012E46  20E2               	addwfc	fsr1h,w,c
 20725  012E48  6EDA               	movwf	fsr2h,c
 20726  012E4A  50DF               	movf	indf2,w,c
 20727  012E4C  6E3D               	movwf	(btemp+11)^0,c
 20728  012E4E  0E80               	movlw	128
 20729  012E50  163D               	andwf	(btemp+11)^0,f,c
 20730                           
 20731                           ;stkvar	_signs @ sp[(-4)+3]
 20732  012E52  0EFF               	movlw	-1
 20733  012E54  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20734                           
 20735                           ;stkvar	_b @ sp[(-4)+-4]
 20736  012E5A  0EFB               	movlw	251
 20737  012E5C  24E1               	addwf	fsr1l,w,c
 20738  012E5E  6ED9               	movwf	fsr2l,c
 20739  012E60  0EFF               	movlw	255
 20740  012E62  20E2               	addwfc	fsr1h,w,c
 20741  012E64  6EDA               	movwf	fsr2h,c
 20742  012E66  50DF               	movf	indf2,w,c
 20743  012E68  6E3D               	movwf	(btemp+11)^0,c
 20744  012E6A  90D8               	bcf	status,0,c
 20745  012E6C  343D               	rlcf	(btemp+11)^0,w,c
 20746  012E6E  6E3C               	movwf	(btemp+10)^0,c
 20747                           
 20748                           ;stkvar	_bexp @ sp[(-4)+1]
 20749  012E70  0EFD               	movlw	-3
 20750  012E72  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20751                           
 20752                           ;stkvar	_b @ sp[(-4)+-4]
 20753  012E78  0EFA               	movlw	250
 20754  012E7A  24E1               	addwf	fsr1l,w,c
 20755  012E7C  6ED9               	movwf	fsr2l,c
 20756  012E7E  0EFF               	movlw	255
 20757  012E80  20E2               	addwfc	fsr1h,w,c
 20758  012E82  6EDA               	movwf	fsr2h,c
 20759  012E84  AEDF               	btfss	indf2,7,c
 20760  012E86  D002               	goto	l6432
 20761                           
 20762                           ;stkvar	_bexp @ sp[(-4)+1]
 20763  012E88  0EFD               	movlw	-3
 20764  012E8A  80E3               	bsf	plusw1,0,c
 20765  012E8C                     l6432:
 20766                           
 20767                           ;stkvar	_bexp @ sp[(-4)+1]
 20768  012E8C  0EFD               	movlw	-3
 20769  012E8E  50E3               	movf	plusw1,w,c
 20770  012E90  B4D8               	btfsc	status,2,c
 20771  012E92  D027               	goto	l6442
 20772                           
 20773                           ;stkvar	_bexp @ sp[(-4)+1]
 20774  012E94  0EFD               	movlw	-3
 20775  012E96  28E3               	incf	plusw1,w,c
 20776  012E98  A4D8               	btfss	status,2,c
 20777  012E9A  D018               	goto	l6438
 20778  012E9C  0E00               	movlw	0
 20779  012E9E  6E3A               	movwf	(btemp+8)^0,c
 20780  012EA0  0E00               	movlw	0
 20781  012EA2  6E3B               	movwf	(btemp+9)^0,c
 20782  012EA4  0E00               	movlw	0
 20783  012EA6  6E3C               	movwf	(btemp+10)^0,c
 20784  012EA8  0E00               	movlw	0
 20785  012EAA  6E3D               	movwf	(btemp+11)^0,c
 20786                           
 20787                           ;stkvar	_b @ sp[(-4)+-4]
 20788  012EAC  0EF8               	movlw	-8
 20789  012EAE  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20790  012EB4  0EF9               	movlw	-7
 20791  012EB6  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20792  012EBC  0EFA               	movlw	-6
 20793  012EBE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20794  012EC4  0EFB               	movlw	-5
 20795  012EC6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20796  012ECC                     l6438:
 20797                           
 20798                           ;stkvar	_b @ sp[(-4)+-4]
 20799  012ECC  0EFA               	movlw	-6
 20800  012ECE  8EE3               	bsf	plusw1,7,c
 20801                           
 20802                           ;stkvar	_b @ sp[(-4)+-4]
 20803  012ED0  0EFB               	movlw	251
 20804  012ED2  24E1               	addwf	fsr1l,w,c
 20805  012ED4  6ED9               	movwf	fsr2l,c
 20806  012ED6  0EFF               	movlw	255
 20807  012ED8  20E2               	addwfc	fsr1h,w,c
 20808  012EDA  6EDA               	movwf	fsr2h,c
 20809  012EDC  0E00               	movlw	0
 20810  012EDE  6EDF               	movwf	indf2,c
 20811  012EE0  D018               	goto	l6444
 20812  012EE2                     l6442:
 20813  012EE2  0E00               	movlw	0
 20814  012EE4  6E3A               	movwf	(btemp+8)^0,c
 20815  012EE6  0E00               	movlw	0
 20816  012EE8  6E3B               	movwf	(btemp+9)^0,c
 20817  012EEA  0E00               	movlw	0
 20818  012EEC  6E3C               	movwf	(btemp+10)^0,c
 20819  012EEE  0E00               	movlw	0
 20820  012EF0  6E3D               	movwf	(btemp+11)^0,c
 20821                           
 20822                           ;stkvar	_b @ sp[(-4)+-4]
 20823  012EF2  0EF8               	movlw	-8
 20824  012EF4  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20825  012EFA  0EF9               	movlw	-7
 20826  012EFC  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20827  012F02  0EFA               	movlw	-6
 20828  012F04  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20829  012F0A  0EFB               	movlw	-5
 20830  012F0C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20831  012F12                     l6444:
 20832                           
 20833                           ;stkvar	_a @ sp[(-4)+-8]
 20834  012F12  0EF7               	movlw	247
 20835  012F14  24E1               	addwf	fsr1l,w,c
 20836  012F16  6ED9               	movwf	fsr2l,c
 20837  012F18  0EFF               	movlw	255
 20838  012F1A  20E2               	addwfc	fsr1h,w,c
 20839  012F1C  6EDA               	movwf	fsr2h,c
 20840  012F1E  50DF               	movf	indf2,w,c
 20841  012F20  6E3D               	movwf	(btemp+11)^0,c
 20842  012F22  0E80               	movlw	128
 20843  012F24  163D               	andwf	(btemp+11)^0,f,c
 20844                           
 20845                           ;stkvar	_aexp @ sp[(-4)+2]
 20846  012F26  0EFE               	movlw	-2
 20847  012F28  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20848                           
 20849                           ;stkvar	_signs @ sp[(-4)+3]
 20850                           ;stkvar	_aexp @ sp[(-4)+2]
 20851  012F2E  50E1               	movf	fsr1l,w,c
 20852  012F30  0FFE               	addlw	-2
 20853  012F32  6ED9               	movwf	fsr2l,c
 20854  012F34  50E2               	movf	fsr1h,w,c
 20855  012F36  6EDA               	movwf	fsr2h,c
 20856  012F38  0EFF               	movlw	255
 20857  012F3A  22DA               	addwfc	fsr2h,f,c
 20858  012F3C  0EFF               	movlw	-1
 20859  012F3E  50E3               	movf	plusw1,w,c
 20860  012F40  18DE               	xorwf	postinc2,w,c
 20861  012F42  B4D8               	btfsc	status,2,c
 20862  012F44  D002               	goto	l6450
 20863                           
 20864                           ;stkvar	_signs @ sp[(-4)+3]
 20865  012F46  0EFF               	movlw	-1
 20866  012F48  8CE3               	bsf	plusw1,6,c
 20867  012F4A                     l6450:
 20868                           
 20869                           ;stkvar	_a @ sp[(-4)+-8]
 20870  012F4A  0EF7               	movlw	247
 20871  012F4C  24E1               	addwf	fsr1l,w,c
 20872  012F4E  6ED9               	movwf	fsr2l,c
 20873  012F50  0EFF               	movlw	255
 20874  012F52  20E2               	addwfc	fsr1h,w,c
 20875  012F54  6EDA               	movwf	fsr2h,c
 20876  012F56  50DF               	movf	indf2,w,c
 20877  012F58  6E3D               	movwf	(btemp+11)^0,c
 20878  012F5A  90D8               	bcf	status,0,c
 20879  012F5C  343D               	rlcf	(btemp+11)^0,w,c
 20880  012F5E  6E3C               	movwf	(btemp+10)^0,c
 20881                           
 20882                           ;stkvar	_aexp @ sp[(-4)+2]
 20883  012F60  0EFE               	movlw	-2
 20884  012F62  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20885                           
 20886                           ;stkvar	_a @ sp[(-4)+-8]
 20887  012F68  0EF6               	movlw	246
 20888  012F6A  24E1               	addwf	fsr1l,w,c
 20889  012F6C  6ED9               	movwf	fsr2l,c
 20890  012F6E  0EFF               	movlw	255
 20891  012F70  20E2               	addwfc	fsr1h,w,c
 20892  012F72  6EDA               	movwf	fsr2h,c
 20893  012F74  AEDF               	btfss	indf2,7,c
 20894  012F76  D002               	goto	l6456
 20895                           
 20896                           ;stkvar	_aexp @ sp[(-4)+2]
 20897  012F78  0EFE               	movlw	-2
 20898  012F7A  80E3               	bsf	plusw1,0,c
 20899  012F7C                     l6456:
 20900                           
 20901                           ;stkvar	_aexp @ sp[(-4)+2]
 20902  012F7C  0EFE               	movlw	-2
 20903  012F7E  50E3               	movf	plusw1,w,c
 20904  012F80  B4D8               	btfsc	status,2,c
 20905  012F82  D027               	goto	l6466
 20906                           
 20907                           ;stkvar	_aexp @ sp[(-4)+2]
 20908  012F84  0EFE               	movlw	-2
 20909  012F86  28E3               	incf	plusw1,w,c
 20910  012F88  A4D8               	btfss	status,2,c
 20911  012F8A  D018               	goto	l6462
 20912  012F8C  0E00               	movlw	0
 20913  012F8E  6E3A               	movwf	(btemp+8)^0,c
 20914  012F90  0E00               	movlw	0
 20915  012F92  6E3B               	movwf	(btemp+9)^0,c
 20916  012F94  0E00               	movlw	0
 20917  012F96  6E3C               	movwf	(btemp+10)^0,c
 20918  012F98  0E00               	movlw	0
 20919  012F9A  6E3D               	movwf	(btemp+11)^0,c
 20920                           
 20921                           ;stkvar	_a @ sp[(-4)+-8]
 20922  012F9C  0EF4               	movlw	-12
 20923  012F9E  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20924  012FA4  0EF5               	movlw	-11
 20925  012FA6  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20926  012FAC  0EF6               	movlw	-10
 20927  012FAE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20928  012FB4  0EF7               	movlw	-9
 20929  012FB6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20930  012FBC                     l6462:
 20931                           
 20932                           ;stkvar	_a @ sp[(-4)+-8]
 20933  012FBC  0EF6               	movlw	-10
 20934  012FBE  8EE3               	bsf	plusw1,7,c
 20935                           
 20936                           ;stkvar	_a @ sp[(-4)+-8]
 20937  012FC0  0EF7               	movlw	247
 20938  012FC2  24E1               	addwf	fsr1l,w,c
 20939  012FC4  6ED9               	movwf	fsr2l,c
 20940  012FC6  0EFF               	movlw	255
 20941  012FC8  20E2               	addwfc	fsr1h,w,c
 20942  012FCA  6EDA               	movwf	fsr2h,c
 20943  012FCC  0E00               	movlw	0
 20944  012FCE  6EDF               	movwf	indf2,c
 20945  012FD0  D018               	goto	l6468
 20946  012FD2                     l6466:
 20947  012FD2  0E00               	movlw	0
 20948  012FD4  6E3A               	movwf	(btemp+8)^0,c
 20949  012FD6  0E00               	movlw	0
 20950  012FD8  6E3B               	movwf	(btemp+9)^0,c
 20951  012FDA  0E00               	movlw	0
 20952  012FDC  6E3C               	movwf	(btemp+10)^0,c
 20953  012FDE  0E00               	movlw	0
 20954  012FE0  6E3D               	movwf	(btemp+11)^0,c
 20955                           
 20956                           ;stkvar	_a @ sp[(-4)+-8]
 20957  012FE2  0EF4               	movlw	-12
 20958  012FE4  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20959  012FEA  0EF5               	movlw	-11
 20960  012FEC  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20961  012FF2  0EF6               	movlw	-10
 20962  012FF4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20963  012FFA  0EF7               	movlw	-9
 20964  012FFC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20965  013002                     l6468:
 20966                           
 20967                           ;stkvar	_bexp @ sp[(-4)+1]
 20968                           ;stkvar	_aexp @ sp[(-4)+2]
 20969  013002  50E1               	movf	fsr1l,w,c
 20970  013004  0FFE               	addlw	-2
 20971  013006  6ED9               	movwf	fsr2l,c
 20972  013008  50E2               	movf	fsr1h,w,c
 20973  01300A  6EDA               	movwf	fsr2h,c
 20974  01300C  0EFF               	movlw	255
 20975  01300E  22DA               	addwfc	fsr2h,f,c
 20976  013010  0EFD               	movlw	-3
 20977  013012  50E3               	movf	plusw1,w,c
 20978  013014  5CDE               	subwf	postinc2,w,c
 20979  013016  B0D8               	btfsc	status,0,c
 20980  013018  D0A4               	goto	l6504
 20981                           
 20982                           ;stkvar	_signs @ sp[(-4)+3]
 20983  01301A  0EFF               	movlw	-1
 20984  01301C  ACE3               	btfss	plusw1,6,c
 20985  01301E  D002               	goto	l6474
 20986                           
 20987                           ;stkvar	_signs @ sp[(-4)+3]
 20988  013020  0EFF               	movlw	-1
 20989  013022  7EE3               	btg	plusw1,7,c
 20990  013024                     l6474:
 20991                           
 20992                           ;stkvar	_bexp @ sp[(-4)+1]
 20993                           ;stkvar	_grs @ sp[(-4)+0]
 20994  013024  0EFD               	movlw	-3
 20995  013026  006F FF8C  F032    	movff	plusw1,btemp
 20996  01302C  0EFC               	movlw	-4
 20997  01302E  0060  F0CB  FFE3   	movff	btemp,plusw1
 20998                           
 20999                           ;stkvar	_aexp @ sp[(-4)+2]
 21000                           ;stkvar	_bexp @ sp[(-4)+1]
 21001  013034  0EFE               	movlw	-2
 21002  013036  006F FF8C  F032    	movff	plusw1,btemp
 21003  01303C  0EFD               	movlw	-3
 21004  01303E  0060  F0CB  FFE3   	movff	btemp,plusw1
 21005                           
 21006                           ;stkvar	_grs @ sp[(-4)+0]
 21007                           ;stkvar	_aexp @ sp[(-4)+2]
 21008  013044  0EFC               	movlw	-4
 21009  013046  006F FF8C  F032    	movff	plusw1,btemp
 21010  01304C  0EFE               	movlw	-2
 21011  01304E  0060  F0CB  FFE3   	movff	btemp,plusw1
 21012                           
 21013                           ;stkvar	_b @ sp[(-4)+-4]
 21014                           ;stkvar	_grs @ sp[(-4)+0]
 21015  013054  0EF8               	movlw	-8
 21016  013056  006F FF8C  F032    	movff	plusw1,btemp
 21017  01305C  0EFC               	movlw	-4
 21018  01305E  0060  F0CB  FFE3   	movff	btemp,plusw1
 21019                           
 21020                           ;stkvar	_a @ sp[(-4)+-8]
 21021                           ;stkvar	_b @ sp[(-4)+-4]
 21022  013064  0EF4               	movlw	-12
 21023  013066  006F FF8C  F032    	movff	plusw1,btemp
 21024  01306C  0EF8               	movlw	-8
 21025  01306E  0060  F0CB  FFE3   	movff	btemp,plusw1
 21026                           
 21027                           ;stkvar	_grs @ sp[(-4)+0]
 21028                           ;stkvar	_a @ sp[(-4)+-8]
 21029  013074  0EFC               	movlw	-4
 21030  013076  006F FF8C  F032    	movff	plusw1,btemp
 21031  01307C  0EF4               	movlw	-12
 21032  01307E  0060  F0CB  FFE3   	movff	btemp,plusw1
 21033                           
 21034                           ;stkvar	_b @ sp[(-4)+-4]
 21035  013084  0EF9               	movlw	249
 21036  013086  24E1               	addwf	fsr1l,w,c
 21037  013088  6ED9               	movwf	fsr2l,c
 21038  01308A  0EFF               	movlw	255
 21039  01308C  20E2               	addwfc	fsr1h,w,c
 21040  01308E  6EDA               	movwf	fsr2h,c
 21041  013090  50DF               	movf	indf2,w,c
 21042  013092  6E3D               	movwf	(btemp+11)^0,c
 21043                           
 21044                           ;stkvar	_grs @ sp[(-4)+0]
 21045  013094  0EFC               	movlw	-4
 21046  013096  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21047                           
 21048                           ;stkvar	_a @ sp[(-4)+-8]
 21049  01309C  0EF5               	movlw	245
 21050  01309E  24E1               	addwf	fsr1l,w,c
 21051  0130A0  6ED9               	movwf	fsr2l,c
 21052  0130A2  0EFF               	movlw	255
 21053  0130A4  20E2               	addwfc	fsr1h,w,c
 21054  0130A6  6EDA               	movwf	fsr2h,c
 21055                           
 21056                           ;stkvar	_b @ sp[(-4)+-4]
 21057  0130A8  0EF9               	movlw	249
 21058  0130AA  24E1               	addwf	fsr1l,w,c
 21059  0130AC  6EE9               	movwf	fsr0l,c
 21060  0130AE  0EFF               	movlw	255
 21061  0130B0  20E2               	addwfc	fsr1h,w,c
 21062  0130B2  6EEA               	movwf	fsr0h,c
 21063  0130B4  006F FF7F FFEF     	movff	indf2,indf0
 21064                           
 21065                           ;stkvar	_grs @ sp[(-4)+0]
 21066                           ;stkvar	_a @ sp[(-4)+-8]
 21067  0130BA  0EF5               	movlw	245
 21068  0130BC  24E1               	addwf	fsr1l,w,c
 21069  0130BE  6ED9               	movwf	fsr2l,c
 21070  0130C0  0EFF               	movlw	255
 21071  0130C2  20E2               	addwfc	fsr1h,w,c
 21072  0130C4  6EDA               	movwf	fsr2h,c
 21073  0130C6  0EFC               	movlw	-4
 21074  0130C8  006F FF8F FFDF     	movff	plusw1,indf2
 21075                           
 21076                           ;stkvar	_b @ sp[(-4)+-4]
 21077  0130CE  0EFA               	movlw	250
 21078  0130D0  24E1               	addwf	fsr1l,w,c
 21079  0130D2  6ED9               	movwf	fsr2l,c
 21080  0130D4  0EFF               	movlw	255
 21081  0130D6  20E2               	addwfc	fsr1h,w,c
 21082  0130D8  6EDA               	movwf	fsr2h,c
 21083  0130DA  50DF               	movf	indf2,w,c
 21084  0130DC  6E3D               	movwf	(btemp+11)^0,c
 21085                           
 21086                           ;stkvar	_grs @ sp[(-4)+0]
 21087  0130DE  0EFC               	movlw	-4
 21088  0130E0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21089                           
 21090                           ;stkvar	_a @ sp[(-4)+-8]
 21091  0130E6  0EF6               	movlw	246
 21092  0130E8  24E1               	addwf	fsr1l,w,c
 21093  0130EA  6ED9               	movwf	fsr2l,c
 21094  0130EC  0EFF               	movlw	255
 21095  0130EE  20E2               	addwfc	fsr1h,w,c
 21096  0130F0  6EDA               	movwf	fsr2h,c
 21097                           
 21098                           ;stkvar	_b @ sp[(-4)+-4]
 21099  0130F2  0EFA               	movlw	250
 21100  0130F4  24E1               	addwf	fsr1l,w,c
 21101  0130F6  6EE9               	movwf	fsr0l,c
 21102  0130F8  0EFF               	movlw	255
 21103  0130FA  20E2               	addwfc	fsr1h,w,c
 21104  0130FC  6EEA               	movwf	fsr0h,c
 21105  0130FE  006F FF7F FFEF     	movff	indf2,indf0
 21106                           
 21107                           ;stkvar	_grs @ sp[(-4)+0]
 21108                           ;stkvar	_a @ sp[(-4)+-8]
 21109  013104  0EF6               	movlw	246
 21110  013106  24E1               	addwf	fsr1l,w,c
 21111  013108  6ED9               	movwf	fsr2l,c
 21112  01310A  0EFF               	movlw	255
 21113  01310C  20E2               	addwfc	fsr1h,w,c
 21114  01310E  6EDA               	movwf	fsr2h,c
 21115  013110  0EFC               	movlw	-4
 21116  013112  006F FF8F FFDF     	movff	plusw1,indf2
 21117                           
 21118                           ;stkvar	_b @ sp[(-4)+-4]
 21119  013118  0EFB               	movlw	251
 21120  01311A  24E1               	addwf	fsr1l,w,c
 21121  01311C  6ED9               	movwf	fsr2l,c
 21122  01311E  0EFF               	movlw	255
 21123  013120  20E2               	addwfc	fsr1h,w,c
 21124  013122  6EDA               	movwf	fsr2h,c
 21125  013124  50DF               	movf	indf2,w,c
 21126  013126  6E3D               	movwf	(btemp+11)^0,c
 21127                           
 21128                           ;stkvar	_grs @ sp[(-4)+0]
 21129  013128  0EFC               	movlw	-4
 21130  01312A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21131                           
 21132                           ;stkvar	_a @ sp[(-4)+-8]
 21133  013130  0EF7               	movlw	247
 21134  013132  24E1               	addwf	fsr1l,w,c
 21135  013134  6ED9               	movwf	fsr2l,c
 21136  013136  0EFF               	movlw	255
 21137  013138  20E2               	addwfc	fsr1h,w,c
 21138  01313A  6EDA               	movwf	fsr2h,c
 21139                           
 21140                           ;stkvar	_b @ sp[(-4)+-4]
 21141  01313C  0EFB               	movlw	251
 21142  01313E  24E1               	addwf	fsr1l,w,c
 21143  013140  6EE9               	movwf	fsr0l,c
 21144  013142  0EFF               	movlw	255
 21145  013144  20E2               	addwfc	fsr1h,w,c
 21146  013146  6EEA               	movwf	fsr0h,c
 21147  013148  006F FF7F FFEF     	movff	indf2,indf0
 21148                           
 21149                           ;stkvar	_grs @ sp[(-4)+0]
 21150                           ;stkvar	_a @ sp[(-4)+-8]
 21151  01314E  0EF7               	movlw	247
 21152  013150  24E1               	addwf	fsr1l,w,c
 21153  013152  6ED9               	movwf	fsr2l,c
 21154  013154  0EFF               	movlw	255
 21155  013156  20E2               	addwfc	fsr1h,w,c
 21156  013158  6EDA               	movwf	fsr2h,c
 21157  01315A  0EFC               	movlw	-4
 21158  01315C  006F FF8F FFDF     	movff	plusw1,indf2
 21159  013162                     l6504:
 21160                           
 21161                           ;stkvar	_grs @ sp[(-4)+0]
 21162  013162  0EFC               	movlw	-4
 21163  013164  6AE3               	clrf	plusw1,c
 21164                           
 21165                           ;stkvar	_aexp @ sp[(-4)+2]
 21166  013166  0EFE               	movlw	-2
 21167  013168  50E3               	movf	plusw1,w,c
 21168  01316A  6E3C               	movwf	(btemp+10)^0,c
 21169  01316C  6A3D               	clrf	(btemp+11)^0,c
 21170                           
 21171                           ;stkvar	_bexp @ sp[(-4)+1]
 21172  01316E  0EFD               	movlw	-3
 21173  013170  50E3               	movf	plusw1,w,c
 21174  013172  5E3C               	subwf	(btemp+10)^0,f,c
 21175  013174  0E00               	movlw	0
 21176  013176  5A3D               	subwfb	(btemp+11)^0,f,c
 21177  013178  BE3D               	btfsc	(btemp+11)^0,7,c
 21178  01317A  D062               	goto	l6528
 21179  01317C  503D               	movf	(btemp+11)^0,w,c
 21180  01317E  E104               	bnz	u4750
 21181  013180  0E1A               	movlw	26
 21182  013182  5C3C               	subwf	(btemp+10)^0,w,c
 21183  013184  A0D8               	btfss	status,0,c
 21184  013186  D05C               	goto	l6528
 21185  013188                     u4750:
 21186                           
 21187                           ;stkvar	_b @ sp[(-4)+-4]
 21188  013188  0EF8               	movlw	-8
 21189  01318A  50E3               	movf	plusw1,w,c
 21190  01318C  E10A               	bnz	u4761
 21191  01318E  0EF9               	movlw	-7
 21192  013190  50E3               	movf	plusw1,w,c
 21193  013192  E107               	bnz	u4761
 21194  013194  0EFA               	movlw	-6
 21195  013196  50E3               	movf	plusw1,w,c
 21196  013198  E104               	bnz	u4761
 21197  01319A  0EFB               	movlw	-5
 21198  01319C  50E3               	movf	plusw1,w,c
 21199  01319E  B4D8               	btfsc	status,2,c
 21200  0131A0  D003               	goto	u4760
 21201  0131A2                     u4761:
 21202  0131A2  6A3D               	clrf	(btemp+11)^0,c
 21203  0131A4  2A3D               	incf	(btemp+11)^0,f,c
 21204  0131A6  D001               	goto	u4778
 21205  0131A8                     u4760:
 21206  0131A8  6A3D               	clrf	(btemp+11)^0,c
 21207  0131AA                     u4778:
 21208                           
 21209                           ;stkvar	_grs @ sp[(-4)+0]
 21210  0131AA  0EFC               	movlw	-4
 21211  0131AC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21212                           
 21213                           ;stkvar	_b @ sp[(-4)+-4]
 21214  0131B2  0EF8               	movlw	-8
 21215  0131B4  6AE3               	clrf	plusw1,c
 21216  0131B6  0EF9               	movlw	-7
 21217  0131B8  6AE3               	clrf	plusw1,c
 21218  0131BA  0EFA               	movlw	-6
 21219  0131BC  6AE3               	clrf	plusw1,c
 21220  0131BE  0EFB               	movlw	-5
 21221  0131C0  6AE3               	clrf	plusw1,c
 21222                           
 21223                           ;stkvar	_aexp @ sp[(-4)+2]
 21224                           ;stkvar	_bexp @ sp[(-4)+1]
 21225  0131C2  0EFE               	movlw	-2
 21226  0131C4  006F FF8C  F032    	movff	plusw1,btemp
 21227  0131CA  0EFD               	movlw	-3
 21228  0131CC  0060  F0CB  FFE3   	movff	btemp,plusw1
 21229  0131D2  D042               	goto	u4810
 21230  0131D4                     l6514:
 21231                           
 21232                           ;stkvar	_grs @ sp[(-4)+0]
 21233  0131D4  0EFC               	movlw	-4
 21234  0131D6  A0E3               	btfss	plusw1,0,c
 21235  0131D8  D00D               	goto	l6518
 21236                           
 21237                           ;stkvar	_grs @ sp[(-4)+0]
 21238  0131DA  0EFC               	movlw	-4
 21239  0131DC  006F FF8C  F03D    	movff	plusw1,btemp+11
 21240  0131E2  90D8               	bcf	status,0,c
 21241  0131E4  323D               	rrcf	(btemp+11)^0,f,c
 21242  0131E6  0E01               	movlw	1
 21243  0131E8  123D               	iorwf	(btemp+11)^0,f,c
 21244                           
 21245                           ;stkvar	_grs @ sp[(-4)+0]
 21246  0131EA  0EFC               	movlw	-4
 21247  0131EC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21248  0131F2  D009               	goto	l6520
 21249  0131F4                     l6518:
 21250                           
 21251                           ;stkvar	_grs @ sp[(-4)+0]
 21252  0131F4  50E1               	movf	fsr1l,w,c
 21253  0131F6  0FFC               	addlw	-4
 21254  0131F8  6ED9               	movwf	fsr2l,c
 21255  0131FA  50E2               	movf	fsr1h,w,c
 21256  0131FC  6EDA               	movwf	fsr2h,c
 21257  0131FE  0EFF               	movlw	255
 21258  013200  22DA               	addwfc	fsr2h,f,c
 21259  013202  90D8               	bcf	status,0,c
 21260  013204  32DF               	rrcf	indf2,f,c
 21261  013206                     l6520:
 21262                           
 21263                           ;stkvar	_b @ sp[(-4)+-4]
 21264  013206  0EF8               	movlw	-8
 21265  013208  A0E3               	btfss	plusw1,0,c
 21266  01320A  D002               	goto	l6524
 21267                           
 21268                           ;stkvar	_grs @ sp[(-4)+0]
 21269  01320C  0EFC               	movlw	-4
 21270  01320E  8EE3               	bsf	plusw1,7,c
 21271  013210                     l6524:
 21272  013210  0E01               	movlw	1
 21273  013212  6E3D               	movwf	(btemp+11)^0,c
 21274                           
 21275                           ;stkvar	_b @ sp[(-4)+-4]
 21276  013214  50E1               	movf	fsr1l,w,c
 21277  013216  0FF8               	addlw	-8
 21278  013218  6ED9               	movwf	fsr2l,c
 21279  01321A  50E2               	movf	fsr1h,w,c
 21280  01321C  6EDA               	movwf	fsr2h,c
 21281  01321E  0EFF               	movlw	255
 21282  013220  22DA               	addwfc	fsr2h,f,c
 21283  013222  283D               	incf	(btemp+11)^0,w,c
 21284  013224  52DE               	movf	postinc2,f,c
 21285  013226  D008               	goto	u4800
 21286  013228                     u4805:
 21287  013228  52DE               	movf	postinc2,f,c
 21288  01322A  90D8               	bcf	status,0,c
 21289  01322C  BEDC               	btfsc	preinc2,7,c
 21290  01322E  80D8               	bsf	status,0,c
 21291  013230  32DD               	rrcf	postdec2,f,c
 21292  013232  32DD               	rrcf	postdec2,f,c
 21293  013234  32DD               	rrcf	postdec2,f,c
 21294  013236  32DE               	rrcf	postinc2,f,c
 21295  013238                     u4800:
 21296  013238  2EE8               	decfsz	wreg,f,c
 21297  01323A  D7F6               	goto	u4805
 21298                           
 21299                           ;stkvar	_bexp @ sp[(-4)+1]
 21300  01323C  0EFD               	movlw	-3
 21301  01323E  2AE3               	incf	plusw1,f,c
 21302  013240                     l6528:
 21303                           
 21304                           ;stkvar	_aexp @ sp[(-4)+2]
 21305                           ;stkvar	_bexp @ sp[(-4)+1]
 21306  013240  50E1               	movf	fsr1l,w,c
 21307  013242  0FFD               	addlw	-3
 21308  013244  6ED9               	movwf	fsr2l,c
 21309  013246  50E2               	movf	fsr1h,w,c
 21310  013248  6EDA               	movwf	fsr2h,c
 21311  01324A  0EFF               	movlw	255
 21312  01324C  22DA               	addwfc	fsr2h,f,c
 21313  01324E  0EFE               	movlw	-2
 21314  013250  50E3               	movf	plusw1,w,c
 21315  013252  5CDE               	subwf	postinc2,w,c
 21316  013254  A0D8               	btfss	status,0,c
 21317  013256  D7BE               	goto	l6514
 21318  013258                     u4810:
 21319                           
 21320                           ;stkvar	_signs @ sp[(-4)+3]
 21321  013258  0EFF               	movlw	-1
 21322  01325A  BCE3               	btfsc	plusw1,6,c
 21323  01325C  D066               	goto	l6556
 21324                           
 21325                           ;stkvar	_bexp @ sp[(-4)+1]
 21326  01325E  0EFD               	movlw	-3
 21327  013260  50E3               	movf	plusw1,w,c
 21328  013262  B4D8               	btfsc	status,2,c
 21329  013264  D0F2               	goto	u4910
 21330                           
 21331                           ;stkvar	_a @ sp[(-4)+-8]
 21332                           ;stkvar	_b @ sp[(-4)+-4]
 21333  013266  0EF8               	movlw	-8
 21334  013268  50E3               	movf	plusw1,w,c
 21335  01326A  6E32               	movwf	btemp^0,c
 21336  01326C  0EF4               	movlw	-12
 21337  01326E  50E3               	movf	plusw1,w,c
 21338  013270  2632               	addwf	btemp^0,f,c
 21339  013272  0EF8               	movlw	-8
 21340  013274  0060  F0CB  FFE3   	movff	btemp,plusw1
 21341  01327A  0EF9               	movlw	-7
 21342  01327C  50E3               	movf	plusw1,w,c
 21343  01327E  6E32               	movwf	btemp^0,c
 21344  013280  0EF5               	movlw	-11
 21345  013282  50E3               	movf	plusw1,w,c
 21346  013284  2232               	addwfc	btemp^0,f,c
 21347  013286  0EF9               	movlw	-7
 21348  013288  0060  F0CB  FFE3   	movff	btemp,plusw1
 21349  01328E  0EFA               	movlw	-6
 21350  013290  50E3               	movf	plusw1,w,c
 21351  013292  6E32               	movwf	btemp^0,c
 21352  013294  0EF6               	movlw	-10
 21353  013296  50E3               	movf	plusw1,w,c
 21354  013298  2232               	addwfc	btemp^0,f,c
 21355  01329A  0EFA               	movlw	-6
 21356  01329C  0060  F0CB  FFE3   	movff	btemp,plusw1
 21357  0132A2  0EFB               	movlw	-5
 21358  0132A4  50E3               	movf	plusw1,w,c
 21359  0132A6  6E32               	movwf	btemp^0,c
 21360  0132A8  0EF7               	movlw	-9
 21361  0132AA  50E3               	movf	plusw1,w,c
 21362  0132AC  2232               	addwfc	btemp^0,f,c
 21363  0132AE  0EFB               	movlw	-5
 21364  0132B0  0060  F0CB  FFE3   	movff	btemp,plusw1
 21365                           
 21366                           ;stkvar	_b @ sp[(-4)+-4]
 21367  0132B6  0EFB               	movlw	-5
 21368  0132B8  A0E3               	btfss	plusw1,0,c
 21369  0132BA  D101               	goto	u4950
 21370                           
 21371                           ;stkvar	_grs @ sp[(-4)+0]
 21372  0132BC  0EFC               	movlw	-4
 21373  0132BE  A0E3               	btfss	plusw1,0,c
 21374  0132C0  D00D               	goto	l6546
 21375                           
 21376                           ;stkvar	_grs @ sp[(-4)+0]
 21377  0132C2  0EFC               	movlw	-4
 21378  0132C4  006F FF8C  F03D    	movff	plusw1,btemp+11
 21379  0132CA  90D8               	bcf	status,0,c
 21380  0132CC  323D               	rrcf	(btemp+11)^0,f,c
 21381  0132CE  0E01               	movlw	1
 21382  0132D0  123D               	iorwf	(btemp+11)^0,f,c
 21383                           
 21384                           ;stkvar	_grs @ sp[(-4)+0]
 21385  0132D2  0EFC               	movlw	-4
 21386  0132D4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21387  0132DA  D009               	goto	l6548
 21388  0132DC                     l6546:
 21389                           
 21390                           ;stkvar	_grs @ sp[(-4)+0]
 21391  0132DC  50E1               	movf	fsr1l,w,c
 21392  0132DE  0FFC               	addlw	-4
 21393  0132E0  6ED9               	movwf	fsr2l,c
 21394  0132E2  50E2               	movf	fsr1h,w,c
 21395  0132E4  6EDA               	movwf	fsr2h,c
 21396  0132E6  0EFF               	movlw	255
 21397  0132E8  22DA               	addwfc	fsr2h,f,c
 21398  0132EA  90D8               	bcf	status,0,c
 21399  0132EC  32DF               	rrcf	indf2,f,c
 21400  0132EE                     l6548:
 21401                           
 21402                           ;stkvar	_b @ sp[(-4)+-4]
 21403  0132EE  0EF8               	movlw	-8
 21404  0132F0  A0E3               	btfss	plusw1,0,c
 21405  0132F2  D002               	goto	l6552
 21406                           
 21407                           ;stkvar	_grs @ sp[(-4)+0]
 21408  0132F4  0EFC               	movlw	-4
 21409  0132F6  8EE3               	bsf	plusw1,7,c
 21410  0132F8                     l6552:
 21411  0132F8  0E01               	movlw	1
 21412  0132FA  6E3D               	movwf	(btemp+11)^0,c
 21413                           
 21414                           ;stkvar	_b @ sp[(-4)+-4]
 21415  0132FC  50E1               	movf	fsr1l,w,c
 21416  0132FE  0FF8               	addlw	-8
 21417  013300  6ED9               	movwf	fsr2l,c
 21418  013302  50E2               	movf	fsr1h,w,c
 21419  013304  6EDA               	movwf	fsr2h,c
 21420  013306  0EFF               	movlw	255
 21421  013308  22DA               	addwfc	fsr2h,f,c
 21422  01330A  283D               	incf	(btemp+11)^0,w,c
 21423  01330C  52DE               	movf	postinc2,f,c
 21424  01330E  D008               	goto	u4870
 21425  013310                     u4875:
 21426  013310  52DE               	movf	postinc2,f,c
 21427  013312  90D8               	bcf	status,0,c
 21428  013314  BEDC               	btfsc	preinc2,7,c
 21429  013316  80D8               	bsf	status,0,c
 21430  013318  32DD               	rrcf	postdec2,f,c
 21431  01331A  32DD               	rrcf	postdec2,f,c
 21432  01331C  32DD               	rrcf	postdec2,f,c
 21433  01331E  32DE               	rrcf	postinc2,f,c
 21434  013320                     u4870:
 21435  013320  2EE8               	decfsz	wreg,f,c
 21436  013322  D7F6               	goto	u4875
 21437                           
 21438                           ;stkvar	_bexp @ sp[(-4)+1]
 21439  013324  0EFD               	movlw	-3
 21440  013326  2AE3               	incf	plusw1,f,c
 21441  013328  D0CA               	goto	u4950
 21442  01332A                     l6556:
 21443                           
 21444                           ;stkvar	_a @ sp[(-4)+-8]
 21445                           ;stkvar	_b @ sp[(-4)+-4]
 21446  01332A  50E1               	movf	fsr1l,w,c
 21447  01332C  0FF8               	addlw	-8
 21448  01332E  6ED9               	movwf	fsr2l,c
 21449  013330  50E2               	movf	fsr1h,w,c
 21450  013332  6EDA               	movwf	fsr2h,c
 21451  013334  0EFF               	movlw	255
 21452  013336  22DA               	addwfc	fsr2h,f,c
 21453  013338  0EF4               	movlw	-12
 21454  01333A  50E3               	movf	plusw1,w,c
 21455  01333C  5CDE               	subwf	postinc2,w,c
 21456  01333E  0EF5               	movlw	-11
 21457  013340  50E3               	movf	plusw1,w,c
 21458  013342  58DE               	subwfb	postinc2,w,c
 21459  013344  0EF6               	movlw	-10
 21460  013346  50E3               	movf	plusw1,w,c
 21461  013348  58DE               	subwfb	postinc2,w,c
 21462  01334A  50DE               	movf	postinc2,w,c
 21463  01334C  0A80               	xorlw	128
 21464  01334E  6E32               	movwf	btemp^0,c
 21465  013350  0EF7               	movlw	-9
 21466  013352  50E3               	movf	plusw1,w,c
 21467  013354  0A80               	xorlw	128
 21468  013356  5832               	subwfb	btemp^0,w,c
 21469  013358  B0D8               	btfsc	status,0,c
 21470  01335A  D053               	goto	l6568
 21471                           
 21472                           ;stkvar	_b @ sp[(-4)+-4]
 21473                           ;stkvar	_a @ sp[(-4)+-8]
 21474  01335C  0EF4               	movlw	-12
 21475  01335E  006F FF8C  F03A    	movff	plusw1,btemp+8
 21476  013364  0EF5               	movlw	-11
 21477  013366  006F FF8C  F03B    	movff	plusw1,btemp+9
 21478  01336C  0EF6               	movlw	-10
 21479  01336E  006F FF8C  F03C    	movff	plusw1,btemp+10
 21480  013374  0EF7               	movlw	-9
 21481  013376  006F FF8C  F03D    	movff	plusw1,btemp+11
 21482  01337C  0EF8               	movlw	-8
 21483  01337E  50E3               	movf	plusw1,w,c
 21484  013380  5E3A               	subwf	(btemp+8)^0,f,c
 21485  013382  0EF9               	movlw	-7
 21486  013384  50E3               	movf	plusw1,w,c
 21487  013386  5A3B               	subwfb	(btemp+9)^0,f,c
 21488  013388  0EFA               	movlw	-6
 21489  01338A  50E3               	movf	plusw1,w,c
 21490  01338C  5A3C               	subwfb	(btemp+10)^0,f,c
 21491  01338E  0EFB               	movlw	-5
 21492  013390  50E3               	movf	plusw1,w,c
 21493  013392  5A3D               	subwfb	(btemp+11)^0,f,c
 21494  013394  0EFF               	movlw	255
 21495  013396  243A               	addwf	(btemp+8)^0,w,c
 21496  013398  6E36               	movwf	(btemp+4)^0,c
 21497  01339A  0EFF               	movlw	255
 21498  01339C  203B               	addwfc	(btemp+9)^0,w,c
 21499  01339E  6E37               	movwf	(btemp+5)^0,c
 21500  0133A0  0EFF               	movlw	255
 21501  0133A2  203C               	addwfc	(btemp+10)^0,w,c
 21502  0133A4  6E38               	movwf	(btemp+6)^0,c
 21503  0133A6  0EFF               	movlw	255
 21504  0133A8  203D               	addwfc	(btemp+11)^0,w,c
 21505  0133AA  6E39               	movwf	(btemp+7)^0,c
 21506                           
 21507                           ;stkvar	_b @ sp[(-4)+-4]
 21508  0133AC  0EF8               	movlw	-8
 21509  0133AE  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 21510  0133B4  0EF9               	movlw	-7
 21511  0133B6  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 21512  0133BC  0EFA               	movlw	-6
 21513  0133BE  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 21514  0133C4  0EFB               	movlw	-5
 21515  0133C6  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 21516                           
 21517                           ;stkvar	_signs @ sp[(-4)+3]
 21518  0133CC  0EFF               	movlw	-1
 21519  0133CE  7EE3               	btg	plusw1,7,c
 21520                           
 21521                           ;stkvar	_grs @ sp[(-4)+0]
 21522  0133D0  0EFC               	movlw	-4
 21523  0133D2  50E3               	movf	plusw1,w,c
 21524  0133D4  0800               	sublw	0
 21525  0133D6  6E3D               	movwf	(btemp+11)^0,c
 21526                           
 21527                           ;stkvar	_grs @ sp[(-4)+0]
 21528  0133D8  0EFC               	movlw	-4
 21529  0133DA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21530                           
 21531                           ;stkvar	_grs @ sp[(-4)+0]
 21532  0133E0  0EFC               	movlw	-4
 21533  0133E2  50E3               	movf	plusw1,w,c
 21534  0133E4  A4D8               	btfss	status,2,c
 21535  0133E6  D020               	goto	l6570
 21536                           
 21537                           ;stkvar	_b @ sp[(-4)+-4]
 21538  0133E8  50E1               	movf	fsr1l,w,c
 21539  0133EA  0FF8               	addlw	-8
 21540  0133EC  6ED9               	movwf	fsr2l,c
 21541  0133EE  50E2               	movf	fsr1h,w,c
 21542  0133F0  6EDA               	movwf	fsr2h,c
 21543  0133F2  0EFF               	movlw	255
 21544  0133F4  22DA               	addwfc	fsr2h,f,c
 21545  0133F6  2ADE               	incf	postinc2,f,c
 21546  0133F8  0E00               	movlw	0
 21547  0133FA  22DE               	addwfc	postinc2,f,c
 21548  0133FC  22DE               	addwfc	postinc2,f,c
 21549  0133FE  22DE               	addwfc	postinc2,f,c
 21550  013400  D013               	goto	l6570
 21551  013402                     l6568:
 21552                           
 21553                           ;stkvar	_a @ sp[(-4)+-8]
 21554                           ;stkvar	_b @ sp[(-4)+-4]
 21555  013402  50E1               	movf	fsr1l,w,c
 21556  013404  0FF8               	addlw	-8
 21557  013406  6ED9               	movwf	fsr2l,c
 21558  013408  50E2               	movf	fsr1h,w,c
 21559  01340A  6EDA               	movwf	fsr2h,c
 21560  01340C  0EFF               	movlw	255
 21561  01340E  22DA               	addwfc	fsr2h,f,c
 21562  013410  0EF4               	movlw	-12
 21563  013412  50E3               	movf	plusw1,w,c
 21564  013414  5EDE               	subwf	postinc2,f,c
 21565  013416  0EF5               	movlw	-11
 21566  013418  50E3               	movf	plusw1,w,c
 21567  01341A  5ADE               	subwfb	postinc2,f,c
 21568  01341C  0EF6               	movlw	-10
 21569  01341E  50E3               	movf	plusw1,w,c
 21570  013420  5ADE               	subwfb	postinc2,f,c
 21571  013422  0EF7               	movlw	-9
 21572  013424  50E3               	movf	plusw1,w,c
 21573  013426  5ADE               	subwfb	postinc2,f,c
 21574  013428                     l6570:
 21575                           
 21576                           ;stkvar	_b @ sp[(-4)+-4]
 21577  013428  0EF8               	movlw	-8
 21578  01342A  50E3               	movf	plusw1,w,c
 21579  01342C  E145               	bnz	l6592
 21580  01342E  0EF9               	movlw	-7
 21581  013430  50E3               	movf	plusw1,w,c
 21582  013432  E142               	bnz	l6592
 21583  013434  0EFA               	movlw	-6
 21584  013436  50E3               	movf	plusw1,w,c
 21585  013438  E13F               	bnz	l6592
 21586  01343A  0EFB               	movlw	-5
 21587  01343C  50E3               	movf	plusw1,w,c
 21588  01343E  A4D8               	btfss	status,2,c
 21589  013440  D03B               	goto	l6592
 21590                           
 21591                           ;stkvar	_grs @ sp[(-4)+0]
 21592  013442  0EFC               	movlw	-4
 21593  013444  50E3               	movf	plusw1,w,c
 21594  013446  A4D8               	btfss	status,2,c
 21595  013448  D037               	goto	l6592
 21596  01344A                     u4910:
 21597  01344A  0E00               	movlw	0
 21598  01344C  6E32               	movwf	btemp^0,c
 21599  01344E  0E00               	movlw	0
 21600  013450  6E33               	movwf	(btemp+1)^0,c
 21601  013452  0E00               	movlw	0
 21602  013454  6E34               	movwf	(btemp+2)^0,c
 21603  013456  0E00               	movlw	0
 21604  013458  6E35               	movwf	(btemp+3)^0,c
 21605  01345A  D0C6               	goto	l2648
 21606  01345C                     l6578:
 21607                           
 21608                           ;stkvar	_b @ sp[(-4)+-4]
 21609  01345C  90D8               	bcf	status,0,c
 21610  01345E  0EF8               	movlw	-8
 21611  013460  36E3               	rlcf	plusw1,f,c
 21612  013462  0EF9               	movlw	-7
 21613  013464  36E3               	rlcf	plusw1,f,c
 21614  013466  0EFA               	movlw	-6
 21615  013468  36E3               	rlcf	plusw1,f,c
 21616  01346A  0EFB               	movlw	-5
 21617  01346C  36E3               	rlcf	plusw1,f,c
 21618                           
 21619                           ;stkvar	_grs @ sp[(-4)+0]
 21620  01346E  0EFC               	movlw	-4
 21621  013470  AEE3               	btfss	plusw1,7,c
 21622  013472  D002               	goto	l2660
 21623                           
 21624                           ;stkvar	_b @ sp[(-4)+-4]
 21625  013474  0EF8               	movlw	-8
 21626  013476  80E3               	bsf	plusw1,0,c
 21627  013478                     l2660:
 21628                           
 21629                           ;stkvar	_grs @ sp[(-4)+0]
 21630  013478  0EFC               	movlw	-4
 21631  01347A  A0E3               	btfss	plusw1,0,c
 21632  01347C  D00E               	goto	l6586
 21633                           
 21634                           ;stkvar	_grs @ sp[(-4)+0]
 21635  01347E  0EFC               	movlw	-4
 21636  013480  006F FF8C  F03D    	movff	plusw1,btemp+11
 21637  013486  90D8               	bcf	status,0,c
 21638  013488  343D               	rlcf	(btemp+11)^0,w,c
 21639  01348A  6E3C               	movwf	(btemp+10)^0,c
 21640  01348C  0E01               	movlw	1
 21641  01348E  123C               	iorwf	(btemp+10)^0,f,c
 21642                           
 21643                           ;stkvar	_grs @ sp[(-4)+0]
 21644  013490  0EFC               	movlw	-4
 21645  013492  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21646  013498  D009               	goto	l6588
 21647  01349A                     l6586:
 21648                           
 21649                           ;stkvar	_grs @ sp[(-4)+0]
 21650  01349A  50E1               	movf	fsr1l,w,c
 21651  01349C  0FFC               	addlw	-4
 21652  01349E  6ED9               	movwf	fsr2l,c
 21653  0134A0  50E2               	movf	fsr1h,w,c
 21654  0134A2  6EDA               	movwf	fsr2h,c
 21655  0134A4  0EFF               	movlw	255
 21656  0134A6  22DA               	addwfc	fsr2h,f,c
 21657  0134A8  90D8               	bcf	status,0,c
 21658  0134AA  36DF               	rlcf	indf2,f,c
 21659  0134AC                     l6588:
 21660                           
 21661                           ;stkvar	_bexp @ sp[(-4)+1]
 21662  0134AC  0EFD               	movlw	-3
 21663  0134AE  50E3               	movf	plusw1,w,c
 21664  0134B0  B4D8               	btfsc	status,2,c
 21665  0134B2  D002               	goto	l6592
 21666                           
 21667                           ;stkvar	_bexp @ sp[(-4)+1]
 21668  0134B4  0EFD               	movlw	-3
 21669  0134B6  06E3               	decf	plusw1,f,c
 21670  0134B8                     l6592:
 21671                           
 21672                           ;stkvar	_b @ sp[(-4)+-4]
 21673  0134B8  0EFA               	movlw	-6
 21674  0134BA  AEE3               	btfss	plusw1,7,c
 21675  0134BC  D7CF               	goto	l6578
 21676  0134BE                     u4950:
 21677                           
 21678                           ;stkvar	_aexp @ sp[(-4)+2]
 21679  0134BE  0EFE               	movlw	-2
 21680  0134C0  6AE3               	clrf	plusw1,c
 21681                           
 21682                           ;stkvar	_grs @ sp[(-4)+0]
 21683  0134C2  0EFC               	movlw	-4
 21684  0134C4  AEE3               	btfss	plusw1,7,c
 21685  0134C6  D00F               	goto	l6606
 21686                           
 21687                           ;stkvar	_grs @ sp[(-4)+0]
 21688  0134C8  0EFC               	movlw	-4
 21689  0134CA  006F FF8C  F03D    	movff	plusw1,btemp+11
 21690  0134D0  0E7F               	movlw	127
 21691  0134D2  163D               	andwf	(btemp+11)^0,f,c
 21692  0134D4  B4D8               	btfsc	status,2,c
 21693  0134D6  D004               	goto	l6602
 21694  0134D8                     u4970:
 21695                           
 21696                           ;stkvar	_aexp @ sp[(-4)+2]
 21697  0134D8  0EFE               	movlw	-2
 21698  0134DA  6AE3               	clrf	plusw1,c
 21699  0134DC  2AE3               	incf	plusw1,f,c
 21700  0134DE  D003               	goto	l6606
 21701  0134E0                     l6602:
 21702                           
 21703                           ;stkvar	_b @ sp[(-4)+-4]
 21704  0134E0  0EF8               	movlw	-8
 21705  0134E2  B0E3               	btfsc	plusw1,0,c
 21706  0134E4  D7F9               	goto	u4970
 21707  0134E6                     l6606:
 21708                           
 21709                           ;stkvar	_aexp @ sp[(-4)+2]
 21710  0134E6  0EFE               	movlw	-2
 21711  0134E8  50E3               	movf	plusw1,w,c
 21712  0134EA  B4D8               	btfsc	status,2,c
 21713  0134EC  D02B               	goto	l6618
 21714                           
 21715                           ;stkvar	_b @ sp[(-4)+-4]
 21716  0134EE  50E1               	movf	fsr1l,w,c
 21717  0134F0  0FF8               	addlw	-8
 21718  0134F2  6ED9               	movwf	fsr2l,c
 21719  0134F4  50E2               	movf	fsr1h,w,c
 21720  0134F6  6EDA               	movwf	fsr2h,c
 21721  0134F8  0EFF               	movlw	255
 21722  0134FA  22DA               	addwfc	fsr2h,f,c
 21723  0134FC  2ADE               	incf	postinc2,f,c
 21724  0134FE  0E00               	movlw	0
 21725  013500  22DE               	addwfc	postinc2,f,c
 21726  013502  22DE               	addwfc	postinc2,f,c
 21727  013504  22DE               	addwfc	postinc2,f,c
 21728                           
 21729                           ;stkvar	_b @ sp[(-4)+-4]
 21730  013506  0EFB               	movlw	-5
 21731  013508  A0E3               	btfss	plusw1,0,c
 21732  01350A  D01C               	goto	l6618
 21733  01350C  0E01               	movlw	1
 21734  01350E  6E3D               	movwf	(btemp+11)^0,c
 21735                           
 21736                           ;stkvar	_b @ sp[(-4)+-4]
 21737  013510  50E1               	movf	fsr1l,w,c
 21738  013512  0FF8               	addlw	-8
 21739  013514  6ED9               	movwf	fsr2l,c
 21740  013516  50E2               	movf	fsr1h,w,c
 21741  013518  6EDA               	movwf	fsr2h,c
 21742  01351A  0EFF               	movlw	255
 21743  01351C  22DA               	addwfc	fsr2h,f,c
 21744  01351E  283D               	incf	(btemp+11)^0,w,c
 21745  013520  52DE               	movf	postinc2,f,c
 21746  013522  D008               	goto	u5010
 21747  013524                     u5015:
 21748  013524  52DE               	movf	postinc2,f,c
 21749  013526  90D8               	bcf	status,0,c
 21750  013528  BEDC               	btfsc	preinc2,7,c
 21751  01352A  80D8               	bsf	status,0,c
 21752  01352C  32DD               	rrcf	postdec2,f,c
 21753  01352E  32DD               	rrcf	postdec2,f,c
 21754  013530  32DD               	rrcf	postdec2,f,c
 21755  013532  32DE               	rrcf	postinc2,f,c
 21756  013534                     u5010:
 21757  013534  2EE8               	decfsz	wreg,f,c
 21758  013536  D7F6               	goto	u5015
 21759                           
 21760                           ;stkvar	_bexp @ sp[(-4)+1]
 21761  013538  0EFD               	movlw	-3
 21762  01353A  28E3               	incf	plusw1,w,c
 21763  01353C  B4D8               	btfsc	status,2,c
 21764  01353E  D002               	goto	l6618
 21765                           
 21766                           ;stkvar	_bexp @ sp[(-4)+1]
 21767  013540  0EFD               	movlw	-3
 21768  013542  2AE3               	incf	plusw1,f,c
 21769  013544                     l6618:
 21770                           
 21771                           ;stkvar	_bexp @ sp[(-4)+1]
 21772  013544  0EFD               	movlw	-3
 21773  013546  28E3               	incf	plusw1,w,c
 21774  013548  B4D8               	btfsc	status,2,c
 21775  01354A  D004               	goto	u5040
 21776                           
 21777                           ;stkvar	_bexp @ sp[(-4)+1]
 21778  01354C  0EFD               	movlw	-3
 21779  01354E  50E3               	movf	plusw1,w,c
 21780  013550  A4D8               	btfss	status,2,c
 21781  013552  D00E               	goto	l6628
 21782  013554                     u5040:
 21783                           
 21784                           ;stkvar	_b @ sp[(-4)+-4]
 21785  013554  0EF8               	movlw	-8
 21786  013556  6AE3               	clrf	plusw1,c
 21787  013558  0EF9               	movlw	-7
 21788  01355A  6AE3               	clrf	plusw1,c
 21789  01355C  0EFA               	movlw	-6
 21790  01355E  6AE3               	clrf	plusw1,c
 21791  013560  0EFB               	movlw	-5
 21792  013562  6AE3               	clrf	plusw1,c
 21793                           
 21794                           ;stkvar	_bexp @ sp[(-4)+1]
 21795  013564  0EFD               	movlw	-3
 21796  013566  50E3               	movf	plusw1,w,c
 21797  013568  A4D8               	btfss	status,2,c
 21798  01356A  D002               	goto	l6628
 21799                           
 21800                           ;stkvar	_signs @ sp[(-4)+3]
 21801  01356C  0EFF               	movlw	-1
 21802  01356E  6AE3               	clrf	plusw1,c
 21803  013570                     l6628:
 21804                           
 21805                           ;stkvar	_bexp @ sp[(-4)+1]
 21806  013570  0EFD               	movlw	-3
 21807  013572  A0E3               	btfss	plusw1,0,c
 21808  013574  D009               	goto	l6632
 21809                           
 21810                           ;stkvar	_b @ sp[(-4)+-4]
 21811  013576  0EFA               	movlw	250
 21812  013578  24E1               	addwf	fsr1l,w,c
 21813  01357A  6ED9               	movwf	fsr2l,c
 21814  01357C  0EFF               	movlw	255
 21815  01357E  20E2               	addwfc	fsr1h,w,c
 21816  013580  6EDA               	movwf	fsr2h,c
 21817  013582  0E00               	movlw	0
 21818  013584  8EDB               	bsf	plusw2,7,c
 21819  013586  D008               	goto	l6634
 21820  013588                     l6632:
 21821                           
 21822                           ;stkvar	_b @ sp[(-4)+-4]
 21823  013588  0EFA               	movlw	250
 21824  01358A  24E1               	addwf	fsr1l,w,c
 21825  01358C  6ED9               	movwf	fsr2l,c
 21826  01358E  0EFF               	movlw	255
 21827  013590  20E2               	addwfc	fsr1h,w,c
 21828  013592  6EDA               	movwf	fsr2h,c
 21829  013594  0E7F               	movlw	127
 21830  013596  16DF               	andwf	indf2,f,c
 21831  013598                     l6634:
 21832                           
 21833                           ;stkvar	_b @ sp[(-4)+-4]
 21834  013598  0EFB               	movlw	251
 21835  01359A  24E1               	addwf	fsr1l,w,c
 21836  01359C  6ED9               	movwf	fsr2l,c
 21837  01359E  0EFF               	movlw	255
 21838  0135A0  20E2               	addwfc	fsr1h,w,c
 21839  0135A2  6EDA               	movwf	fsr2h,c
 21840                           
 21841                           ;stkvar	_bexp @ sp[(-4)+1]
 21842  0135A4  0EFD               	movlw	-3
 21843  0135A6  006F FF8C  F03D    	movff	plusw1,btemp+11
 21844  0135AC  90D8               	bcf	status,0,c
 21845  0135AE  303D               	rrcf	(btemp+11)^0,w,c
 21846  0135B0  6EDF               	movwf	indf2,c
 21847                           
 21848                           ;stkvar	_signs @ sp[(-4)+3]
 21849  0135B2  0EFF               	movlw	-1
 21850  0135B4  AEE3               	btfss	plusw1,7,c
 21851  0135B6  D008               	goto	l6640
 21852                           
 21853                           ;stkvar	_b @ sp[(-4)+-4]
 21854  0135B8  0EFB               	movlw	251
 21855  0135BA  24E1               	addwf	fsr1l,w,c
 21856  0135BC  6ED9               	movwf	fsr2l,c
 21857  0135BE  0EFF               	movlw	255
 21858  0135C0  20E2               	addwfc	fsr1h,w,c
 21859  0135C2  6EDA               	movwf	fsr2h,c
 21860  0135C4  0E00               	movlw	0
 21861  0135C6  8EDB               	bsf	plusw2,7,c
 21862  0135C8                     l6640:
 21863                           
 21864                           ;stkvar	_b @ sp[(-4)+-4]
 21865  0135C8  0EF8               	movlw	-8
 21866  0135CA  006F FF8C  F032    	movff	plusw1,btemp
 21867  0135D0  0EF9               	movlw	-7
 21868  0135D2  006F FF8C  F033    	movff	plusw1,btemp+1
 21869  0135D8  0EFA               	movlw	-6
 21870  0135DA  006F FF8C  F034    	movff	plusw1,btemp+2
 21871  0135E0  0EFB               	movlw	-5
 21872  0135E2  006F FF8C  F035    	movff	plusw1,btemp+3
 21873  0135E8                     l2648:
 21874                           
 21875                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 21876  0135E8  0EF4               	movlw	244
 21877  0135EA  26E1               	addwf	fsr1l,f,c
 21878  0135EC  0EFF               	movlw	255
 21879  0135EE  22E2               	addwfc	fsr1h,f,c
 21880  0135F0  0012               	return		;funcret
 21881  0135F2                     __end_of___fladd:
 21882                           	opt callstack 0
 21883                           
 21884 ;; *************** function ___flmul *****************
 21885 ;; Defined at:
 21886 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 21887 ;; Parameters:    Size  Location     Type
 21888 ;;  b               4  [STACK] unsigned char 
 21889 ;;  a               4  [STACK] unsigned char 
 21890 ;; Auto vars:     Size  Location     Type
 21891 ;;  prod            4  [STACK] struct .
 21892 ;;  grs             4  [STACK] unsigned long 
 21893 ;;  temp            2  [STACK] struct .
 21894 ;;  bexp            1  [STACK] unsigned char 
 21895 ;;  aexp            1  [STACK] unsigned char 
 21896 ;;  sign            1  [STACK] unsigned char 
 21897 ;; Return value:  Size  Location     Type
 21898 ;;                  4  [STACK] unsigned char 
 21899 ;; Registers used:
 21900 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 21901 ;; Tracked objects:
 21902 ;;		On entry : 0/2
 21903 ;;		On exit  : 0/0
 21904 ;;		Unchanged: 0/0
 21905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21910 ;;Total ram usage:        0 bytes
 21911 ;; Hardware stack levels used:    1
 21912 ;; Hardware stack levels required when called:    6
 21913 ;; This function calls:
 21914 ;;		Nothing
 21915 ;; This function is called by:
 21916 ;;		_conv_raw_result
 21917 ;;		_lp_filter
 21918 ;;		_calc_model_data
 21919 ;;		_efgtoa
 21920 ;; This function uses a reentrant model
 21921 ;;
 21922                           
 21923                           	psect	text91
 21924  01260C                     __ptext91:
 21925                           	opt callstack 0
 21926  01260C                     ___flmul:
 21927                           	opt callstack 0
 21928                           
 21929                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 21930  01260C  0E0D               	movlw	13
 21931  01260E  26E1               	addwf	fsr1l,f,c
 21932  012610  0E00               	movlw	0
 21933  012612  22E2               	addwfc	fsr1h,f,c
 21934                           
 21935                           ;stkvar	_b @ sp[(-13)+-4]
 21936                           
 21937                           ;incstack = 0
 21938  012614  0EF2               	movlw	242
 21939  012616  24E1               	addwf	fsr1l,w,c
 21940  012618  6ED9               	movwf	fsr2l,c
 21941  01261A  0EFF               	movlw	255
 21942  01261C  20E2               	addwfc	fsr1h,w,c
 21943  01261E  6EDA               	movwf	fsr2h,c
 21944  012620  50DF               	movf	indf2,w,c
 21945  012622  6E3D               	movwf	(btemp+11)^0,c
 21946  012624  0E80               	movlw	128
 21947  012626  163D               	andwf	(btemp+11)^0,f,c
 21948                           
 21949                           ;stkvar	_sign @ sp[(-13)+12]
 21950  012628  0EFF               	movlw	-1
 21951  01262A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21952                           
 21953                           ;stkvar	_b @ sp[(-13)+-4]
 21954  012630  0EF2               	movlw	242
 21955  012632  24E1               	addwf	fsr1l,w,c
 21956  012634  6ED9               	movwf	fsr2l,c
 21957  012636  0EFF               	movlw	255
 21958  012638  20E2               	addwfc	fsr1h,w,c
 21959  01263A  6EDA               	movwf	fsr2h,c
 21960  01263C  50DF               	movf	indf2,w,c
 21961  01263E  6E3D               	movwf	(btemp+11)^0,c
 21962  012640  90D8               	bcf	status,0,c
 21963  012642  343D               	rlcf	(btemp+11)^0,w,c
 21964  012644  6E3C               	movwf	(btemp+10)^0,c
 21965                           
 21966                           ;stkvar	_bexp @ sp[(-13)+10]
 21967  012646  0EFD               	movlw	-3
 21968  012648  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21969                           
 21970                           ;stkvar	_b @ sp[(-13)+-4]
 21971  01264E  0EF1               	movlw	241
 21972  012650  24E1               	addwf	fsr1l,w,c
 21973  012652  6ED9               	movwf	fsr2l,c
 21974  012654  0EFF               	movlw	255
 21975  012656  20E2               	addwfc	fsr1h,w,c
 21976  012658  6EDA               	movwf	fsr2h,c
 21977  01265A  AEDF               	btfss	indf2,7,c
 21978  01265C  D002               	goto	l7024
 21979                           
 21980                           ;stkvar	_bexp @ sp[(-13)+10]
 21981  01265E  0EFD               	movlw	-3
 21982  012660  80E3               	bsf	plusw1,0,c
 21983  012662                     l7024:
 21984                           
 21985                           ;stkvar	_bexp @ sp[(-13)+10]
 21986  012662  0EFD               	movlw	-3
 21987  012664  50E3               	movf	plusw1,w,c
 21988  012666  B4D8               	btfsc	status,2,c
 21989  012668  D01F               	goto	l7032
 21990                           
 21991                           ;stkvar	_bexp @ sp[(-13)+10]
 21992  01266A  0EFD               	movlw	-3
 21993  01266C  28E3               	incf	plusw1,w,c
 21994  01266E  A4D8               	btfss	status,2,c
 21995  012670  D018               	goto	l7030
 21996  012672  0E00               	movlw	0
 21997  012674  6E3A               	movwf	(btemp+8)^0,c
 21998  012676  0E00               	movlw	0
 21999  012678  6E3B               	movwf	(btemp+9)^0,c
 22000  01267A  0E00               	movlw	0
 22001  01267C  6E3C               	movwf	(btemp+10)^0,c
 22002  01267E  0E00               	movlw	0
 22003  012680  6E3D               	movwf	(btemp+11)^0,c
 22004                           
 22005                           ;stkvar	_b @ sp[(-13)+-4]
 22006  012682  0EEF               	movlw	-17
 22007  012684  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 22008  01268A  0EF0               	movlw	-16
 22009  01268C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 22010  012692  0EF1               	movlw	-15
 22011  012694  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 22012  01269A  0EF2               	movlw	-14
 22013  01269C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 22014  0126A2                     l7030:
 22015                           
 22016                           ;stkvar	_b @ sp[(-13)+-4]
 22017  0126A2  0EF1               	movlw	-15
 22018  0126A4  8EE3               	bsf	plusw1,7,c
 22019  0126A6  D018               	goto	l7034
 22020  0126A8                     l7032:
 22021  0126A8  0E00               	movlw	0
 22022  0126AA  6E3A               	movwf	(btemp+8)^0,c
 22023  0126AC  0E00               	movlw	0
 22024  0126AE  6E3B               	movwf	(btemp+9)^0,c
 22025  0126B0  0E00               	movlw	0
 22026  0126B2  6E3C               	movwf	(btemp+10)^0,c
 22027  0126B4  0E00               	movlw	0
 22028  0126B6  6E3D               	movwf	(btemp+11)^0,c
 22029                           
 22030                           ;stkvar	_b @ sp[(-13)+-4]
 22031  0126B8  0EEF               	movlw	-17
 22032  0126BA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 22033  0126C0  0EF0               	movlw	-16
 22034  0126C2  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 22035  0126C8  0EF1               	movlw	-15
 22036  0126CA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 22037  0126D0  0EF2               	movlw	-14
 22038  0126D2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 22039  0126D8                     l7034:
 22040                           
 22041                           ;stkvar	_a @ sp[(-13)+-8]
 22042  0126D8  0EEE               	movlw	238
 22043  0126DA  24E1               	addwf	fsr1l,w,c
 22044  0126DC  6ED9               	movwf	fsr2l,c
 22045  0126DE  0EFF               	movlw	255
 22046  0126E0  20E2               	addwfc	fsr1h,w,c
 22047  0126E2  6EDA               	movwf	fsr2h,c
 22048  0126E4  50DF               	movf	indf2,w,c
 22049  0126E6  6E3D               	movwf	(btemp+11)^0,c
 22050  0126E8  0E80               	movlw	128
 22051  0126EA  163D               	andwf	(btemp+11)^0,f,c
 22052                           
 22053                           ;stkvar	_sign @ sp[(-13)+12]
 22054  0126EC  50E1               	movf	fsr1l,w,c
 22055  0126EE  0FFF               	addlw	-1
 22056  0126F0  6ED9               	movwf	fsr2l,c
 22057  0126F2  50E2               	movf	fsr1h,w,c
 22058  0126F4  6EDA               	movwf	fsr2h,c
 22059  0126F6  0EFF               	movlw	255
 22060  0126F8  22DA               	addwfc	fsr2h,f,c
 22061  0126FA  503D               	movf	(btemp+11)^0,w,c
 22062  0126FC  1ADF               	xorwf	indf2,f,c
 22063                           
 22064                           ;stkvar	_a @ sp[(-13)+-8]
 22065  0126FE  0EEE               	movlw	238
 22066  012700  24E1               	addwf	fsr1l,w,c
 22067  012702  6ED9               	movwf	fsr2l,c
 22068  012704  0EFF               	movlw	255
 22069  012706  20E2               	addwfc	fsr1h,w,c
 22070  012708  6EDA               	movwf	fsr2h,c
 22071  01270A  50DF               	movf	indf2,w,c
 22072  01270C  6E3D               	movwf	(btemp+11)^0,c
 22073  01270E  90D8               	bcf	status,0,c
 22074  012710  343D               	rlcf	(btemp+11)^0,w,c
 22075  012712  6E3C               	movwf	(btemp+10)^0,c
 22076                           
 22077                           ;stkvar	_aexp @ sp[(-13)+11]
 22078  012714  0EFE               	movlw	-2
 22079  012716  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 22080                           
 22081                           ;stkvar	_a @ sp[(-13)+-8]
 22082  01271C  0EED               	movlw	237
 22083  01271E  24E1               	addwf	fsr1l,w,c
 22084  012720  6ED9               	movwf	fsr2l,c
 22085  012722  0EFF               	movlw	255
 22086  012724  20E2               	addwfc	fsr1h,w,c
 22087  012726  6EDA               	movwf	fsr2h,c
 22088  012728  AEDF               	btfss	indf2,7,c
 22089  01272A  D002               	goto	l7042
 22090                           
 22091                           ;stkvar	_aexp @ sp[(-13)+11]
 22092  01272C  0EFE               	movlw	-2
 22093  01272E  80E3               	bsf	plusw1,0,c
 22094  012730                     l7042:
 22095                           
 22096                           ;stkvar	_aexp @ sp[(-13)+11]
 22097  012730  0EFE               	movlw	-2
 22098  012732  50E3               	movf	plusw1,w,c
 22099  012734  B4D8               	btfsc	status,2,c
 22100  012736  D01F               	goto	l7050
 22101                           
 22102                           ;stkvar	_aexp @ sp[(-13)+11]
 22103  012738  0EFE               	movlw	-2
 22104  01273A  28E3               	incf	plusw1,w,c
 22105  01273C  A4D8               	btfss	status,2,c
 22106  01273E  D018               	goto	l7048
 22107  012740  0E00               	movlw	0
 22108  012742  6E3A               	movwf	(btemp+8)^0,c
 22109  012744  0E00               	movlw	0
 22110  012746  6E3B               	movwf	(btemp+9)^0,c
 22111  012748  0E00               	movlw	0
 22112  01274A  6E3C               	movwf	(btemp+10)^0,c
 22113  01274C  0E00               	movlw	0
 22114  01274E  6E3D               	movwf	(btemp+11)^0,c
 22115                           
 22116                           ;stkvar	_a @ sp[(-13)+-8]
 22117  012750  0EEB               	movlw	-21
 22118  012752  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 22119  012758  0EEC               	movlw	-20
 22120  01275A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 22121  012760  0EED               	movlw	-19
 22122  012762  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 22123  012768  0EEE               	movlw	-18
 22124  01276A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 22125  012770                     l7048:
 22126                           
 22127                           ;stkvar	_a @ sp[(-13)+-8]
 22128  012770  0EED               	movlw	-19
 22129  012772  8EE3               	bsf	plusw1,7,c
 22130  012774  D018               	goto	l7052
 22131  012776                     l7050:
 22132  012776  0E00               	movlw	0
 22133  012778  6E3A               	movwf	(btemp+8)^0,c
 22134  01277A  0E00               	movlw	0
 22135  01277C  6E3B               	movwf	(btemp+9)^0,c
 22136  01277E  0E00               	movlw	0
 22137  012780  6E3C               	movwf	(btemp+10)^0,c
 22138  012782  0E00               	movlw	0
 22139  012784  6E3D               	movwf	(btemp+11)^0,c
 22140                           
 22141                           ;stkvar	_a @ sp[(-13)+-8]
 22142  012786  0EEB               	movlw	-21
 22143  012788  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 22144  01278E  0EEC               	movlw	-20
 22145  012790  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 22146  012796  0EED               	movlw	-19
 22147  012798  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 22148  01279E  0EEE               	movlw	-18
 22149  0127A0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 22150  0127A6                     l7052:
 22151                           
 22152                           ;stkvar	_aexp @ sp[(-13)+11]
 22153  0127A6  0EFE               	movlw	-2
 22154  0127A8  50E3               	movf	plusw1,w,c
 22155  0127AA  B4D8               	btfsc	status,2,c
 22156  0127AC  D004               	goto	u5980
 22157                           
 22158                           ;stkvar	_bexp @ sp[(-13)+10]
 22159  0127AE  0EFD               	movlw	-3
 22160  0127B0  50E3               	movf	plusw1,w,c
 22161  0127B2  A4D8               	btfss	status,2,c
 22162  0127B4  D009               	goto	l7060
 22163  0127B6                     u5980:
 22164  0127B6  0E00               	movlw	0
 22165  0127B8  6E32               	movwf	btemp^0,c
 22166  0127BA  0E00               	movlw	0
 22167  0127BC  6E33               	movwf	(btemp+1)^0,c
 22168  0127BE  0E00               	movlw	0
 22169  0127C0  6E34               	movwf	(btemp+2)^0,c
 22170  0127C2  0E00               	movlw	0
 22171  0127C4  6E35               	movwf	(btemp+3)^0,c
 22172  0127C6  D332               	goto	l2729
 22173  0127C8                     l7060:
 22174                           
 22175                           ;stkvar	_b @ sp[(-13)+-4]
 22176  0127C8  0EEF               	movlw	-17
 22177  0127CA  006F FF8C  F03D    	movff	plusw1,btemp+11
 22178                           
 22179                           ;stkvar	_a @ sp[(-13)+-8]
 22180  0127D0  0EED               	movlw	237
 22181  0127D2  24E1               	addwf	fsr1l,w,c
 22182  0127D4  6ED9               	movwf	fsr2l,c
 22183  0127D6  0EFF               	movlw	255
 22184  0127D8  20E2               	addwfc	fsr1h,w,c
 22185  0127DA  6EDA               	movwf	fsr2h,c
 22186  0127DC  50DF               	movf	indf2,w,c
 22187  0127DE  023D               	mulwf	(btemp+11)^0,c
 22188                           
 22189                           ;stkvar	_temp @ sp[(-13)+8]
 22190  0127E0  0EFB               	movlw	-5
 22191  0127E2  006F FFCF FFE3     	movff	prodl,plusw1
 22192  0127E8  0EFC               	movlw	-4
 22193  0127EA  006F FFD3 FFE3     	movff	prodh,plusw1
 22194                           
 22195                           ;stkvar	_temp @ sp[(-13)+8]
 22196  0127F0  0EFB               	movlw	-5
 22197  0127F2  006F FF8C  F03D    	movff	plusw1,btemp+11
 22198  0127F8  0060  F0F4  F036   	movff	btemp+11,btemp+4
 22199  0127FE  6A37               	clrf	(btemp+5)^0,c
 22200  012800  6A38               	clrf	(btemp+6)^0,c
 22201  012802  6A39               	clrf	(btemp+7)^0,c
 22202                           
 22203                           ;stkvar	_grs @ sp[(-13)+4]
 22204  012804  0EF7               	movlw	-9
 22205  012806  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 22206  01280C  0EF8               	movlw	-8
 22207  01280E  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 22208  012814  0EF9               	movlw	-7
 22209  012816  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 22210  01281C  0EFA               	movlw	-6
 22211  01281E  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 22212                           
 22213                           ;stkvar	_temp @ sp[(-13)+8]
 22214  012824  0EFC               	movlw	252
 22215  012826  24E1               	addwf	fsr1l,w,c
 22216  012828  6ED9               	movwf	fsr2l,c
 22217  01282A  0EFF               	movlw	255
 22218  01282C  20E2               	addwfc	fsr1h,w,c
 22219  01282E  6EDA               	movwf	fsr2h,c
 22220  012830  50DF               	movf	indf2,w,c
 22221  012832  6E3D               	movwf	(btemp+11)^0,c
 22222  012834  0060  F0F4  F036   	movff	btemp+11,btemp+4
 22223  01283A  6A37               	clrf	(btemp+5)^0,c
 22224  01283C  6A38               	clrf	(btemp+6)^0,c
 22225  01283E  6A39               	clrf	(btemp+7)^0,c
 22226                           
 22227                           ;stkvar	_prod @ sp[(-13)+0]
 22228  012840  0EF3               	movlw	-13
 22229  012842  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 22230  012848  0EF4               	movlw	-12
 22231  01284A  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 22232  012850  0EF5               	movlw	-11
 22233  012852  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 22234  012858  0EF6               	movlw	-10
 22235  01285A  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 22236                           
 22237                           ;stkvar	_b @ sp[(-13)+-4]
 22238  012860  0EF0               	movlw	240
 22239  012862  24E1               	addwf	fsr1l,w,c
 22240  012864  6ED9               	movwf	fsr2l,c
 22241  012866  0EFF               	movlw	255
 22242  012868  20E2               	addwfc	fsr1h,w,c
 22243  01286A  6EDA               	movwf	fsr2h,c
 22244  01286C  50DF               	movf	indf2,w,c
 22245  01286E  6E3D               	movwf	(btemp+11)^0,c
 22246                           
 22247                           ;stkvar	_a @ sp[(-13)+-8]
 22248  012870  0EEC               	movlw	236
 22249  012872  24E1               	addwf	fsr1l,w,c
 22250  012874  6ED9               	movwf	fsr2l,c
 22251  012876  0EFF               	movlw	255
 22252  012878  20E2               	addwfc	fsr1h,w,c
 22253  01287A  6EDA               	movwf	fsr2h,c
 22254  01287C  50DF               	movf	indf2,w,c
 22255  01287E  023D               	mulwf	(btemp+11)^0,c
 22256                           
 22257                           ;stkvar	_temp @ sp[(-13)+8]
 22258  012880  0EFB               	movlw	-5
 22259  012882  006F FFCF FFE3     	movff	prodl,plusw1
 22260  012888  0EFC               	movlw	-4
 22261  01288A  006F FFD3 FFE3     	movff	prodh,plusw1
 22262                           
 22263                           ;stkvar	_grs @ sp[(-13)+4]
 22264  012890  50E1               	movf	fsr1l,w,c
 22265  012892  0FF7               	addlw	-9
 22266  012894  6ED9               	movwf	fsr2l,c
 22267  012896  50E2               	movf	fsr1h,w,c
 22268  012898  6EDA               	movwf	fsr2h,c
 22269  01289A  0EFF               	movlw	255
 22270  01289C  22DA               	addwfc	fsr2h,f,c
 22271                           
 22272                           ;stkvar	_temp @ sp[(-13)+8]
 22273  01289E  0EFB               	movlw	-5
 22274  0128A0  50E3               	movf	plusw1,w,c
 22275  0128A2  26DE               	addwf	postinc2,f,c
 22276  0128A4  0E00               	movlw	0
 22277  0128A6  22DE               	addwfc	postinc2,f,c
 22278  0128A8  22DE               	addwfc	postinc2,f,c
 22279  0128AA  22DE               	addwfc	postinc2,f,c
 22280                           
 22281                           ;stkvar	_prod @ sp[(-13)+0]
 22282  0128AC  50E1               	movf	fsr1l,w,c
 22283  0128AE  0FF3               	addlw	-13
 22284  0128B0  6ED9               	movwf	fsr2l,c
 22285  0128B2  50E2               	movf	fsr1h,w,c
 22286  0128B4  6EDA               	movwf	fsr2h,c
 22287  0128B6  0EFF               	movlw	255
 22288  0128B8  22DA               	addwfc	fsr2h,f,c
 22289                           
 22290                           ;stkvar	_temp @ sp[(-13)+8]
 22291  0128BA  0EFC               	movlw	252
 22292  0128BC  24E1               	addwf	fsr1l,w,c
 22293  0128BE  6EE9               	movwf	fsr0l,c
 22294  0128C0  0EFF               	movlw	255
 22295  0128C2  20E2               	addwfc	fsr1h,w,c
 22296  0128C4  6EEA               	movwf	fsr0h,c
 22297  0128C6  50EF               	movf	indf0,w,c
 22298  0128C8  26DE               	addwf	postinc2,f,c
 22299  0128CA  0E00               	movlw	0
 22300  0128CC  22DE               	addwfc	postinc2,f,c
 22301  0128CE  22DE               	addwfc	postinc2,f,c
 22302  0128D0  22DE               	addwfc	postinc2,f,c
 22303                           
 22304                           ;stkvar	_b @ sp[(-13)+-4]
 22305  0128D2  0EF1               	movlw	241
 22306  0128D4  24E1               	addwf	fsr1l,w,c
 22307  0128D6  6ED9               	movwf	fsr2l,c
 22308  0128D8  0EFF               	movlw	255
 22309  0128DA  20E2               	addwfc	fsr1h,w,c
 22310  0128DC  6EDA               	movwf	fsr2h,c
 22311  0128DE  50DF               	movf	indf2,w,c
 22312  0128E0  6E3D               	movwf	(btemp+11)^0,c
 22313                           
 22314                           ;stkvar	_a @ sp[(-13)+-8]
 22315  0128E2  0EEB               	movlw	-21
 22316  0128E4  50E3               	movf	plusw1,w,c
 22317  0128E6  023D               	mulwf	(btemp+11)^0,c
 22318                           
 22319                           ;stkvar	_temp @ sp[(-13)+8]
 22320  0128E8  0EFB               	movlw	-5
 22321  0128EA  006F FFCF FFE3     	movff	prodl,plusw1
 22322  0128F0  0EFC               	movlw	-4
 22323  0128F2  006F FFD3 FFE3     	movff	prodh,plusw1
 22324                           
 22325                           ;stkvar	_grs @ sp[(-13)+4]
 22326  0128F8  50E1               	movf	fsr1l,w,c
 22327  0128FA  0FF7               	addlw	-9
 22328  0128FC  6ED9               	movwf	fsr2l,c
 22329  0128FE  50E2               	movf	fsr1h,w,c
 22330  012900  6EDA               	movwf	fsr2h,c
 22331  012902  0EFF               	movlw	255
 22332  012904  22DA               	addwfc	fsr2h,f,c
 22333                           
 22334                           ;stkvar	_temp @ sp[(-13)+8]
 22335  012906  0EFB               	movlw	-5
 22336  012908  50E3               	movf	plusw1,w,c
 22337  01290A  26DE               	addwf	postinc2,f,c
 22338  01290C  0E00               	movlw	0
 22339  01290E  22DE               	addwfc	postinc2,f,c
 22340  012910  22DE               	addwfc	postinc2,f,c
 22341  012912  22DE               	addwfc	postinc2,f,c
 22342                           
 22343                           ;stkvar	_prod @ sp[(-13)+0]
 22344  012914  50E1               	movf	fsr1l,w,c
 22345  012916  0FF3               	addlw	-13
 22346  012918  6ED9               	movwf	fsr2l,c
 22347  01291A  50E2               	movf	fsr1h,w,c
 22348  01291C  6EDA               	movwf	fsr2h,c
 22349  01291E  0EFF               	movlw	255
 22350  012920  22DA               	addwfc	fsr2h,f,c
 22351                           
 22352                           ;stkvar	_temp @ sp[(-13)+8]
 22353  012922  0EFC               	movlw	252
 22354  012924  24E1               	addwf	fsr1l,w,c
 22355  012926  6EE9               	movwf	fsr0l,c
 22356  012928  0EFF               	movlw	255
 22357  01292A  20E2               	addwfc	fsr1h,w,c
 22358  01292C  6EEA               	movwf	fsr0h,c
 22359  01292E  50EF               	movf	indf0,w,c
 22360  012930  26DE               	addwf	postinc2,f,c
 22361  012932  0E00               	movlw	0
 22362  012934  22DE               	addwfc	postinc2,f,c
 22363  012936  22DE               	addwfc	postinc2,f,c
 22364  012938  22DE               	addwfc	postinc2,f,c
 22365                           
 22366                           ;stkvar	_grs @ sp[(-13)+4]
 22367  01293A  50E1               	movf	fsr1l,w,c
 22368  01293C  0FF7               	addlw	-9
 22369  01293E  6ED9               	movwf	fsr2l,c
 22370  012940  50E2               	movf	fsr1h,w,c
 22371  012942  6EDA               	movwf	fsr2h,c
 22372  012944  0EFF               	movlw	255
 22373  012946  22DA               	addwfc	fsr2h,f,c
 22374  012948  0E08               	movlw	8
 22375  01294A                     u5995:
 22376  01294A  90D8               	bcf	status,0,c
 22377  01294C  36DE               	rlcf	postinc2,f,c
 22378  01294E  36DE               	rlcf	postinc2,f,c
 22379  012950  36DE               	rlcf	postinc2,f,c
 22380  012952  36DD               	rlcf	postdec2,f,c
 22381  012954  52DD               	movf	postdec2,f,c
 22382  012956  52DD               	movf	postdec2,f,c
 22383  012958  2EE8               	decfsz	wreg,f,c
 22384  01295A  D7F7               	goto	u5995
 22385                           
 22386                           ;stkvar	_b @ sp[(-13)+-4]
 22387  01295C  0EF0               	movlw	240
 22388  01295E  24E1               	addwf	fsr1l,w,c
 22389  012960  6ED9               	movwf	fsr2l,c
 22390  012962  0EFF               	movlw	255
 22391  012964  20E2               	addwfc	fsr1h,w,c
 22392  012966  6EDA               	movwf	fsr2h,c
 22393  012968  50DF               	movf	indf2,w,c
 22394  01296A  6E3D               	movwf	(btemp+11)^0,c
 22395                           
 22396                           ;stkvar	_a @ sp[(-13)+-8]
 22397  01296C  0EEB               	movlw	-21
 22398  01296E  50E3               	movf	plusw1,w,c
 22399  012970  023D               	mulwf	(btemp+11)^0,c
 22400                           
 22401                           ;stkvar	_temp @ sp[(-13)+8]
 22402  012972  0EFB               	movlw	-5
 22403  012974  006F FFCF FFE3     	movff	prodl,plusw1
 22404  01297A  0EFC               	movlw	-4
 22405  01297C  006F FFD3 FFE3     	movff	prodh,plusw1
 22406                           
 22407                           ;stkvar	_temp @ sp[(-13)+8]
 22408  012982  0EFB               	movlw	-5
 22409  012984  006F FF8C  F03C    	movff	plusw1,btemp+10
 22410  01298A  0EFC               	movlw	-4
 22411  01298C  006F FF8C  F03D    	movff	plusw1,btemp+11
 22412                           
 22413                           ;stkvar	_grs @ sp[(-13)+4]
 22414  012992  50E1               	movf	fsr1l,w,c
 22415  012994  0FF7               	addlw	-9
 22416  012996  6ED9               	movwf	fsr2l,c
 22417  012998  50E2               	movf	fsr1h,w,c
 22418  01299A  6EDA               	movwf	fsr2h,c
 22419  01299C  0EFF               	movlw	255
 22420  01299E  22DA               	addwfc	fsr2h,f,c
 22421  0129A0  503C               	movf	(btemp+10)^0,w,c
 22422  0129A2  26DE               	addwf	postinc2,f,c
 22423  0129A4  503D               	movf	(btemp+11)^0,w,c
 22424  0129A6  22DE               	addwfc	postinc2,f,c
 22425  0129A8  0E00               	movlw	0
 22426  0129AA  22DE               	addwfc	postinc2,f,c
 22427  0129AC  22DE               	addwfc	postinc2,f,c
 22428                           
 22429                           ;stkvar	_b @ sp[(-13)+-4]
 22430  0129AE  0EEF               	movlw	-17
 22431  0129B0  006F FF8C  F03D    	movff	plusw1,btemp+11
 22432                           
 22433                           ;stkvar	_a @ sp[(-13)+-8]
 22434  0129B6  0EEC               	movlw	236
 22435  0129B8  24E1               	addwf	fsr1l,w,c
 22436  0129BA  6ED9               	movwf	fsr2l,c
 22437  0129BC  0EFF               	movlw	255
 22438  0129BE  20E2               	addwfc	fsr1h,w,c
 22439  0129C0  6EDA               	movwf	fsr2h,c
 22440  0129C2  50DF               	movf	indf2,w,c
 22441  0129C4  023D               	mulwf	(btemp+11)^0,c
 22442                           
 22443                           ;stkvar	_temp @ sp[(-13)+8]
 22444  0129C6  0EFB               	movlw	-5
 22445  0129C8  006F FFCF FFE3     	movff	prodl,plusw1
 22446  0129CE  0EFC               	movlw	-4
 22447  0129D0  006F FFD3 FFE3     	movff	prodh,plusw1
 22448                           
 22449                           ;stkvar	_temp @ sp[(-13)+8]
 22450  0129D6  0EFB               	movlw	-5
 22451  0129D8  006F FF8C  F03C    	movff	plusw1,btemp+10
 22452  0129DE  0EFC               	movlw	-4
 22453  0129E0  006F FF8C  F03D    	movff	plusw1,btemp+11
 22454                           
 22455                           ;stkvar	_grs @ sp[(-13)+4]
 22456  0129E6  50E1               	movf	fsr1l,w,c
 22457  0129E8  0FF7               	addlw	-9
 22458  0129EA  6ED9               	movwf	fsr2l,c
 22459  0129EC  50E2               	movf	fsr1h,w,c
 22460  0129EE  6EDA               	movwf	fsr2h,c
 22461  0129F0  0EFF               	movlw	255
 22462  0129F2  22DA               	addwfc	fsr2h,f,c
 22463  0129F4  503C               	movf	(btemp+10)^0,w,c
 22464  0129F6  26DE               	addwf	postinc2,f,c
 22465  0129F8  503D               	movf	(btemp+11)^0,w,c
 22466  0129FA  22DE               	addwfc	postinc2,f,c
 22467  0129FC  0E00               	movlw	0
 22468  0129FE  22DE               	addwfc	postinc2,f,c
 22469  012A00  22DE               	addwfc	postinc2,f,c
 22470                           
 22471                           ;stkvar	_grs @ sp[(-13)+4]
 22472  012A02  50E1               	movf	fsr1l,w,c
 22473  012A04  0FF7               	addlw	-9
 22474  012A06  6ED9               	movwf	fsr2l,c
 22475  012A08  50E2               	movf	fsr1h,w,c
 22476  012A0A  6EDA               	movwf	fsr2h,c
 22477  012A0C  0EFF               	movlw	255
 22478  012A0E  22DA               	addwfc	fsr2h,f,c
 22479  012A10  0E08               	movlw	8
 22480  012A12                     u6005:
 22481  012A12  90D8               	bcf	status,0,c
 22482  012A14  36DE               	rlcf	postinc2,f,c
 22483  012A16  36DE               	rlcf	postinc2,f,c
 22484  012A18  36DE               	rlcf	postinc2,f,c
 22485  012A1A  36DD               	rlcf	postdec2,f,c
 22486  012A1C  52DD               	movf	postdec2,f,c
 22487  012A1E  52DD               	movf	postdec2,f,c
 22488  012A20  2EE8               	decfsz	wreg,f,c
 22489  012A22  D7F7               	goto	u6005
 22490                           
 22491                           ;stkvar	_b @ sp[(-13)+-4]
 22492  012A24  0EEF               	movlw	-17
 22493  012A26  006F FF8C  F03D    	movff	plusw1,btemp+11
 22494                           
 22495                           ;stkvar	_a @ sp[(-13)+-8]
 22496  012A2C  0EEB               	movlw	-21
 22497  012A2E  50E3               	movf	plusw1,w,c
 22498  012A30  023D               	mulwf	(btemp+11)^0,c
 22499                           
 22500                           ;stkvar	_temp @ sp[(-13)+8]
 22501  012A32  0EFB               	movlw	-5
 22502  012A34  006F FFCF FFE3     	movff	prodl,plusw1
 22503  012A3A  0EFC               	movlw	-4
 22504  012A3C  006F FFD3 FFE3     	movff	prodh,plusw1
 22505                           
 22506                           ;stkvar	_temp @ sp[(-13)+8]
 22507  012A42  0EFB               	movlw	-5
 22508  012A44  006F FF8C  F03C    	movff	plusw1,btemp+10
 22509  012A4A  0EFC               	movlw	-4
 22510  012A4C  006F FF8C  F03D    	movff	plusw1,btemp+11
 22511                           
 22512                           ;stkvar	_grs @ sp[(-13)+4]
 22513  012A52  50E1               	movf	fsr1l,w,c
 22514  012A54  0FF7               	addlw	-9
 22515  012A56  6ED9               	movwf	fsr2l,c
 22516  012A58  50E2               	movf	fsr1h,w,c
 22517  012A5A  6EDA               	movwf	fsr2h,c
 22518  012A5C  0EFF               	movlw	255
 22519  012A5E  22DA               	addwfc	fsr2h,f,c
 22520  012A60  503C               	movf	(btemp+10)^0,w,c
 22521  012A62  26DE               	addwf	postinc2,f,c
 22522  012A64  503D               	movf	(btemp+11)^0,w,c
 22523  012A66  22DE               	addwfc	postinc2,f,c
 22524  012A68  0E00               	movlw	0
 22525  012A6A  22DE               	addwfc	postinc2,f,c
 22526  012A6C  22DE               	addwfc	postinc2,f,c
 22527                           
 22528                           ;stkvar	_b @ sp[(-13)+-4]
 22529  012A6E  0EF0               	movlw	240
 22530  012A70  24E1               	addwf	fsr1l,w,c
 22531  012A72  6ED9               	movwf	fsr2l,c
 22532  012A74  0EFF               	movlw	255
 22533  012A76  20E2               	addwfc	fsr1h,w,c
 22534  012A78  6EDA               	movwf	fsr2h,c
 22535  012A7A  50DF               	movf	indf2,w,c
 22536  012A7C  6E3D               	movwf	(btemp+11)^0,c
 22537                           
 22538                           ;stkvar	_a @ sp[(-13)+-8]
 22539  012A7E  0EED               	movlw	237
 22540  012A80  24E1               	addwf	fsr1l,w,c
 22541  012A82  6ED9               	movwf	fsr2l,c
 22542  012A84  0EFF               	movlw	255
 22543  012A86  20E2               	addwfc	fsr1h,w,c
 22544  012A88  6EDA               	movwf	fsr2h,c
 22545  012A8A  50DF               	movf	indf2,w,c
 22546  012A8C  023D               	mulwf	(btemp+11)^0,c
 22547                           
 22548                           ;stkvar	_temp @ sp[(-13)+8]
 22549  012A8E  0EFB               	movlw	-5
 22550  012A90  006F FFCF FFE3     	movff	prodl,plusw1
 22551  012A96  0EFC               	movlw	-4
 22552  012A98  006F FFD3 FFE3     	movff	prodh,plusw1
 22553                           
 22554                           ;stkvar	_temp @ sp[(-13)+8]
 22555  012A9E  0EFB               	movlw	-5
 22556  012AA0  006F FF8C  F03C    	movff	plusw1,btemp+10
 22557  012AA6  0EFC               	movlw	-4
 22558  012AA8  006F FF8C  F03D    	movff	plusw1,btemp+11
 22559                           
 22560                           ;stkvar	_prod @ sp[(-13)+0]
 22561  012AAE  50E1               	movf	fsr1l,w,c
 22562  012AB0  0FF3               	addlw	-13
 22563  012AB2  6ED9               	movwf	fsr2l,c
 22564  012AB4  50E2               	movf	fsr1h,w,c
 22565  012AB6  6EDA               	movwf	fsr2h,c
 22566  012AB8  0EFF               	movlw	255
 22567  012ABA  22DA               	addwfc	fsr2h,f,c
 22568  012ABC  503C               	movf	(btemp+10)^0,w,c
 22569  012ABE  26DE               	addwf	postinc2,f,c
 22570  012AC0  503D               	movf	(btemp+11)^0,w,c
 22571  012AC2  22DE               	addwfc	postinc2,f,c
 22572  012AC4  0E00               	movlw	0
 22573  012AC6  22DE               	addwfc	postinc2,f,c
 22574  012AC8  22DE               	addwfc	postinc2,f,c
 22575                           
 22576                           ;stkvar	_b @ sp[(-13)+-4]
 22577  012ACA  0EF1               	movlw	241
 22578  012ACC  24E1               	addwf	fsr1l,w,c
 22579  012ACE  6ED9               	movwf	fsr2l,c
 22580  012AD0  0EFF               	movlw	255
 22581  012AD2  20E2               	addwfc	fsr1h,w,c
 22582  012AD4  6EDA               	movwf	fsr2h,c
 22583  012AD6  50DF               	movf	indf2,w,c
 22584  012AD8  6E3D               	movwf	(btemp+11)^0,c
 22585                           
 22586                           ;stkvar	_a @ sp[(-13)+-8]
 22587  012ADA  0EEC               	movlw	236
 22588  012ADC  24E1               	addwf	fsr1l,w,c
 22589  012ADE  6ED9               	movwf	fsr2l,c
 22590  012AE0  0EFF               	movlw	255
 22591  012AE2  20E2               	addwfc	fsr1h,w,c
 22592  012AE4  6EDA               	movwf	fsr2h,c
 22593  012AE6  50DF               	movf	indf2,w,c
 22594  012AE8  023D               	mulwf	(btemp+11)^0,c
 22595                           
 22596                           ;stkvar	_temp @ sp[(-13)+8]
 22597  012AEA  0EFB               	movlw	-5
 22598  012AEC  006F FFCF FFE3     	movff	prodl,plusw1
 22599  012AF2  0EFC               	movlw	-4
 22600  012AF4  006F FFD3 FFE3     	movff	prodh,plusw1
 22601                           
 22602                           ;stkvar	_temp @ sp[(-13)+8]
 22603  012AFA  0EFB               	movlw	-5
 22604  012AFC  006F FF8C  F03C    	movff	plusw1,btemp+10
 22605  012B02  0EFC               	movlw	-4
 22606  012B04  006F FF8C  F03D    	movff	plusw1,btemp+11
 22607                           
 22608                           ;stkvar	_prod @ sp[(-13)+0]
 22609  012B0A  50E1               	movf	fsr1l,w,c
 22610  012B0C  0FF3               	addlw	-13
 22611  012B0E  6ED9               	movwf	fsr2l,c
 22612  012B10  50E2               	movf	fsr1h,w,c
 22613  012B12  6EDA               	movwf	fsr2h,c
 22614  012B14  0EFF               	movlw	255
 22615  012B16  22DA               	addwfc	fsr2h,f,c
 22616  012B18  503C               	movf	(btemp+10)^0,w,c
 22617  012B1A  26DE               	addwf	postinc2,f,c
 22618  012B1C  503D               	movf	(btemp+11)^0,w,c
 22619  012B1E  22DE               	addwfc	postinc2,f,c
 22620  012B20  0E00               	movlw	0
 22621  012B22  22DE               	addwfc	postinc2,f,c
 22622  012B24  22DE               	addwfc	postinc2,f,c
 22623                           
 22624                           ;stkvar	_b @ sp[(-13)+-4]
 22625  012B26  0EF1               	movlw	241
 22626  012B28  24E1               	addwf	fsr1l,w,c
 22627  012B2A  6ED9               	movwf	fsr2l,c
 22628  012B2C  0EFF               	movlw	255
 22629  012B2E  20E2               	addwfc	fsr1h,w,c
 22630  012B30  6EDA               	movwf	fsr2h,c
 22631  012B32  50DF               	movf	indf2,w,c
 22632  012B34  6E3D               	movwf	(btemp+11)^0,c
 22633                           
 22634                           ;stkvar	_a @ sp[(-13)+-8]
 22635  012B36  0EED               	movlw	237
 22636  012B38  24E1               	addwf	fsr1l,w,c
 22637  012B3A  6ED9               	movwf	fsr2l,c
 22638  012B3C  0EFF               	movlw	255
 22639  012B3E  20E2               	addwfc	fsr1h,w,c
 22640  012B40  6EDA               	movwf	fsr2h,c
 22641  012B42  50DF               	movf	indf2,w,c
 22642  012B44  023D               	mulwf	(btemp+11)^0,c
 22643                           
 22644                           ;stkvar	_temp @ sp[(-13)+8]
 22645  012B46  0EFB               	movlw	-5
 22646  012B48  006F FFCF FFE3     	movff	prodl,plusw1
 22647  012B4E  0EFC               	movlw	-4
 22648  012B50  006F FFD3 FFE3     	movff	prodh,plusw1
 22649                           
 22650                           ;stkvar	_temp @ sp[(-13)+8]
 22651  012B56  0EFB               	movlw	-5
 22652  012B58  006F FF8C  F03C    	movff	plusw1,btemp+10
 22653  012B5E  0EFC               	movlw	-4
 22654  012B60  006F FF8C  F03D    	movff	plusw1,btemp+11
 22655  012B66  503C               	movf	(btemp+10)^0,w,c
 22656  012B68  6E36               	movwf	(btemp+4)^0,c
 22657  012B6A  503D               	movf	(btemp+11)^0,w,c
 22658  012B6C  6E37               	movwf	(btemp+5)^0,c
 22659  012B6E  6A38               	clrf	(btemp+6)^0,c
 22660  012B70  6A39               	clrf	(btemp+7)^0,c
 22661  012B72  0060  F0E0  F039   	movff	btemp+6,btemp+7
 22662  012B78  0060  F0DC  F038   	movff	btemp+5,btemp+6
 22663  012B7E  0060  F0D8  F037   	movff	btemp+4,btemp+5
 22664  012B84  6A36               	clrf	(btemp+4)^0,c
 22665                           
 22666                           ;stkvar	_prod @ sp[(-13)+0]
 22667  012B86  50E1               	movf	fsr1l,w,c
 22668  012B88  0FF3               	addlw	-13
 22669  012B8A  6ED9               	movwf	fsr2l,c
 22670  012B8C  50E2               	movf	fsr1h,w,c
 22671  012B8E  6EDA               	movwf	fsr2h,c
 22672  012B90  0EFF               	movlw	255
 22673  012B92  22DA               	addwfc	fsr2h,f,c
 22674  012B94  5036               	movf	(btemp+4)^0,w,c
 22675  012B96  26DE               	addwf	postinc2,f,c
 22676  012B98  5037               	movf	(btemp+5)^0,w,c
 22677  012B9A  22DE               	addwfc	postinc2,f,c
 22678  012B9C  5038               	movf	(btemp+6)^0,w,c
 22679  012B9E  22DE               	addwfc	postinc2,f,c
 22680  012BA0  5039               	movf	(btemp+7)^0,w,c
 22681  012BA2  22DE               	addwfc	postinc2,f,c
 22682                           
 22683                           ;stkvar	_prod @ sp[(-13)+0]
 22684  012BA4  50E1               	movf	fsr1l,w,c
 22685  012BA6  0FF3               	addlw	-13
 22686  012BA8  6ED9               	movwf	fsr2l,c
 22687  012BAA  50E2               	movf	fsr1h,w,c
 22688  012BAC  6EDA               	movwf	fsr2h,c
 22689  012BAE  0EFF               	movlw	255
 22690  012BB0  22DA               	addwfc	fsr2h,f,c
 22691                           
 22692                           ;stkvar	_grs @ sp[(-13)+4]
 22693  012BB2  0EFA               	movlw	250
 22694  012BB4  24E1               	addwf	fsr1l,w,c
 22695  012BB6  6EE9               	movwf	fsr0l,c
 22696  012BB8  0EFF               	movlw	255
 22697  012BBA  20E2               	addwfc	fsr1h,w,c
 22698  012BBC  6EEA               	movwf	fsr0h,c
 22699  012BBE  50EF               	movf	indf0,w,c
 22700  012BC0  26DE               	addwf	postinc2,f,c
 22701  012BC2  0E00               	movlw	0
 22702  012BC4  22DE               	addwfc	postinc2,f,c
 22703  012BC6  22DE               	addwfc	postinc2,f,c
 22704  012BC8  22DE               	addwfc	postinc2,f,c
 22705                           
 22706                           ;stkvar	_grs @ sp[(-13)+4]
 22707  012BCA  50E1               	movf	fsr1l,w,c
 22708  012BCC  0FF7               	addlw	-9
 22709  012BCE  6ED9               	movwf	fsr2l,c
 22710  012BD0  50E2               	movf	fsr1h,w,c
 22711  012BD2  6EDA               	movwf	fsr2h,c
 22712  012BD4  0EFF               	movlw	255
 22713  012BD6  22DA               	addwfc	fsr2h,f,c
 22714  012BD8  0E08               	movlw	8
 22715  012BDA                     u6015:
 22716  012BDA  90D8               	bcf	status,0,c
 22717  012BDC  36DE               	rlcf	postinc2,f,c
 22718  012BDE  36DE               	rlcf	postinc2,f,c
 22719  012BE0  36DE               	rlcf	postinc2,f,c
 22720  012BE2  36DD               	rlcf	postdec2,f,c
 22721  012BE4  52DD               	movf	postdec2,f,c
 22722  012BE6  52DD               	movf	postdec2,f,c
 22723  012BE8  2EE8               	decfsz	wreg,f,c
 22724  012BEA  D7F7               	goto	u6015
 22725  012BEC  0E82               	movlw	130
 22726  012BEE  6E3C               	movwf	(btemp+10)^0,c
 22727  012BF0  0EFF               	movlw	255
 22728  012BF2  6E3D               	movwf	(btemp+11)^0,c
 22729                           
 22730                           ;stkvar	_bexp @ sp[(-13)+10]
 22731  012BF4  0EFD               	movlw	-3
 22732  012BF6  50E3               	movf	plusw1,w,c
 22733  012BF8  6E3A               	movwf	(btemp+8)^0,c
 22734  012BFA  6A3B               	clrf	(btemp+9)^0,c
 22735                           
 22736                           ;stkvar	_aexp @ sp[(-13)+11]
 22737  012BFC  0EFE               	movlw	-2
 22738  012BFE  50E3               	movf	plusw1,w,c
 22739  012C00  263A               	addwf	(btemp+8)^0,f,c
 22740  012C02  0E00               	movlw	0
 22741  012C04  223B               	addwfc	(btemp+9)^0,f,c
 22742  012C06  503C               	movf	(btemp+10)^0,w,c
 22743  012C08  263A               	addwf	(btemp+8)^0,f,c
 22744  012C0A  503D               	movf	(btemp+11)^0,w,c
 22745  012C0C  223B               	addwfc	(btemp+9)^0,f,c
 22746                           
 22747                           ;stkvar	_temp @ sp[(-13)+8]
 22748  012C0E  0EFB               	movlw	-5
 22749  012C10  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 22750  012C16  0EFC               	movlw	-4
 22751  012C18  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 22752  012C1E  D021               	goto	l7122
 22753  012C20                     l7112:
 22754                           
 22755                           ;stkvar	_prod @ sp[(-13)+0]
 22756  012C20  90D8               	bcf	status,0,c
 22757  012C22  0EF3               	movlw	-13
 22758  012C24  36E3               	rlcf	plusw1,f,c
 22759  012C26  0EF4               	movlw	-12
 22760  012C28  36E3               	rlcf	plusw1,f,c
 22761  012C2A  0EF5               	movlw	-11
 22762  012C2C  36E3               	rlcf	plusw1,f,c
 22763  012C2E  0EF6               	movlw	-10
 22764  012C30  36E3               	rlcf	plusw1,f,c
 22765                           
 22766                           ;stkvar	_grs @ sp[(-13)+4]
 22767  012C32  0EFA               	movlw	-6
 22768  012C34  AEE3               	btfss	plusw1,7,c
 22769  012C36  D002               	goto	l7118
 22770                           
 22771                           ;stkvar	_prod @ sp[(-13)+0]
 22772  012C38  0EF3               	movlw	-13
 22773  012C3A  80E3               	bsf	plusw1,0,c
 22774  012C3C                     l7118:
 22775                           
 22776                           ;stkvar	_grs @ sp[(-13)+4]
 22777  012C3C  90D8               	bcf	status,0,c
 22778  012C3E  0EF7               	movlw	-9
 22779  012C40  36E3               	rlcf	plusw1,f,c
 22780  012C42  0EF8               	movlw	-8
 22781  012C44  36E3               	rlcf	plusw1,f,c
 22782  012C46  0EF9               	movlw	-7
 22783  012C48  36E3               	rlcf	plusw1,f,c
 22784  012C4A  0EFA               	movlw	-6
 22785  012C4C  36E3               	rlcf	plusw1,f,c
 22786                           
 22787                           ;stkvar	_temp @ sp[(-13)+8]
 22788  012C4E  50E1               	movf	fsr1l,w,c
 22789  012C50  0FFB               	addlw	-5
 22790  012C52  6ED9               	movwf	fsr2l,c
 22791  012C54  50E2               	movf	fsr1h,w,c
 22792  012C56  6EDA               	movwf	fsr2h,c
 22793  012C58  0EFF               	movlw	255
 22794  012C5A  22DA               	addwfc	fsr2h,f,c
 22795  012C5C  06DE               	decf	postinc2,f,c
 22796  012C5E  0E00               	movlw	0
 22797  012C60  5ADD               	subwfb	postdec2,f,c
 22798  012C62                     l7122:
 22799                           
 22800                           ;stkvar	_prod @ sp[(-13)+0]
 22801  012C62  0EF5               	movlw	-11
 22802  012C64  AEE3               	btfss	plusw1,7,c
 22803  012C66  D7DC               	goto	l7112
 22804                           
 22805                           ;stkvar	_aexp @ sp[(-13)+11]
 22806  012C68  0EFE               	movlw	-2
 22807  012C6A  6AE3               	clrf	plusw1,c
 22808                           
 22809                           ;stkvar	_grs @ sp[(-13)+4]
 22810  012C6C  0EFA               	movlw	-6
 22811  012C6E  AEE3               	btfss	plusw1,7,c
 22812  012C70  D020               	goto	l7136
 22813                           
 22814                           ;stkvar	_grs @ sp[(-13)+4]
 22815  012C72  50E1               	movf	fsr1l,w,c
 22816  012C74  0FF7               	addlw	-9
 22817  012C76  6ED9               	movwf	fsr2l,c
 22818  012C78  50E2               	movf	fsr1h,w,c
 22819  012C7A  6EDA               	movwf	fsr2h,c
 22820  012C7C  0EFF               	movlw	255
 22821  012C7E  22DA               	addwfc	fsr2h,f,c
 22822  012C80  0EFF               	movlw	255
 22823  012C82  14DE               	andwf	postinc2,w,c
 22824  012C84  6E3A               	movwf	(btemp+8)^0,c
 22825  012C86  0EFF               	movlw	255
 22826  012C88  14DE               	andwf	postinc2,w,c
 22827  012C8A  6E3B               	movwf	(btemp+9)^0,c
 22828  012C8C  0EFF               	movlw	255
 22829  012C8E  14DE               	andwf	postinc2,w,c
 22830  012C90  6E3C               	movwf	(btemp+10)^0,c
 22831  012C92  0E7F               	movlw	127
 22832  012C94  14DE               	andwf	postinc2,w,c
 22833  012C96  6E3D               	movwf	(btemp+11)^0,c
 22834  012C98  503A               	movf	(btemp+8)^0,w,c
 22835  012C9A  103B               	iorwf	(btemp+9)^0,w,c
 22836  012C9C  103C               	iorwf	(btemp+10)^0,w,c
 22837  012C9E  103D               	iorwf	(btemp+11)^0,w,c
 22838  012CA0  B4D8               	btfsc	status,2,c
 22839  012CA2  D004               	goto	l7132
 22840  012CA4                     u6050:
 22841                           
 22842                           ;stkvar	_aexp @ sp[(-13)+11]
 22843  012CA4  0EFE               	movlw	-2
 22844  012CA6  6AE3               	clrf	plusw1,c
 22845  012CA8  2AE3               	incf	plusw1,f,c
 22846  012CAA  D003               	goto	l7136
 22847  012CAC                     l7132:
 22848                           
 22849                           ;stkvar	_prod @ sp[(-13)+0]
 22850  012CAC  0EF3               	movlw	-13
 22851  012CAE  B0E3               	btfsc	plusw1,0,c
 22852  012CB0  D7F9               	goto	u6050
 22853  012CB2                     l7136:
 22854                           
 22855                           ;stkvar	_aexp @ sp[(-13)+11]
 22856  012CB2  0EFE               	movlw	-2
 22857  012CB4  50E3               	movf	plusw1,w,c
 22858  012CB6  B4D8               	btfsc	status,2,c
 22859  012CB8  D036               	goto	l7146
 22860                           
 22861                           ;stkvar	_prod @ sp[(-13)+0]
 22862  012CBA  50E1               	movf	fsr1l,w,c
 22863  012CBC  0FF3               	addlw	-13
 22864  012CBE  6ED9               	movwf	fsr2l,c
 22865  012CC0  50E2               	movf	fsr1h,w,c
 22866  012CC2  6EDA               	movwf	fsr2h,c
 22867  012CC4  0EFF               	movlw	255
 22868  012CC6  22DA               	addwfc	fsr2h,f,c
 22869  012CC8  2ADE               	incf	postinc2,f,c
 22870  012CCA  0E00               	movlw	0
 22871  012CCC  22DE               	addwfc	postinc2,f,c
 22872  012CCE  22DE               	addwfc	postinc2,f,c
 22873  012CD0  22DE               	addwfc	postinc2,f,c
 22874                           
 22875                           ;stkvar	_prod @ sp[(-13)+0]
 22876  012CD2  0EF6               	movlw	-10
 22877  012CD4  A0E3               	btfss	plusw1,0,c
 22878  012CD6  D027               	goto	l7146
 22879  012CD8  0E01               	movlw	1
 22880  012CDA  6E3D               	movwf	(btemp+11)^0,c
 22881                           
 22882                           ;stkvar	_prod @ sp[(-13)+0]
 22883  012CDC  50E1               	movf	fsr1l,w,c
 22884  012CDE  0FF3               	addlw	-13
 22885  012CE0  6ED9               	movwf	fsr2l,c
 22886  012CE2  50E2               	movf	fsr1h,w,c
 22887  012CE4  6EDA               	movwf	fsr2h,c
 22888  012CE6  0EFF               	movlw	255
 22889  012CE8  22DA               	addwfc	fsr2h,f,c
 22890  012CEA  283D               	incf	(btemp+11)^0,w,c
 22891  012CEC  52DE               	movf	postinc2,f,c
 22892  012CEE  D008               	goto	u6090
 22893  012CF0                     u6095:
 22894  012CF0  52DE               	movf	postinc2,f,c
 22895  012CF2  90D8               	bcf	status,0,c
 22896  012CF4  BEDC               	btfsc	preinc2,7,c
 22897  012CF6  80D8               	bsf	status,0,c
 22898  012CF8  32DD               	rrcf	postdec2,f,c
 22899  012CFA  32DD               	rrcf	postdec2,f,c
 22900  012CFC  32DD               	rrcf	postdec2,f,c
 22901  012CFE  32DE               	rrcf	postinc2,f,c
 22902  012D00                     u6090:
 22903  012D00  2EE8               	decfsz	wreg,f,c
 22904  012D02  D7F6               	goto	u6095
 22905                           
 22906                           ;stkvar	_temp @ sp[(-13)+8]
 22907  012D04  0EFB               	movlw	-5
 22908  012D06  50E3               	movf	plusw1,w,c
 22909  012D08  0F01               	addlw	1
 22910  012D0A  6E32               	movwf	btemp^0,c
 22911  012D0C  0EFB               	movlw	-5
 22912  012D0E  0060  F0CB  FFE3   	movff	btemp,plusw1
 22913  012D14  6A32               	clrf	btemp^0,c
 22914  012D16  0EFC               	movlw	-4
 22915  012D18  50E3               	movf	plusw1,w,c
 22916  012D1A  2032               	addwfc	btemp^0,w,c
 22917  012D1C  6E32               	movwf	btemp^0,c
 22918  012D1E  0EFC               	movlw	-4
 22919  012D20  0060  F0CB  FFE3   	movff	btemp,plusw1
 22920  012D26                     l7146:
 22921                           
 22922                           ;stkvar	_temp @ sp[(-13)+8]
 22923  012D26  0EFC               	movlw	-4
 22924  012D28  BEE3               	btfsc	plusw1,7,c
 22925  012D2A  D020               	goto	l7150
 22926  012D2C  0EFC               	movlw	-4
 22927  012D2E  50E3               	movf	plusw1,w,c
 22928  012D30  E104               	bnz	u6100
 22929  012D32  0EFB               	movlw	-5
 22930  012D34  28E3               	incf	plusw1,w,c
 22931  012D36  A0D8               	btfss	status,0,c
 22932  012D38  D019               	goto	l7150
 22933  012D3A                     u6100:
 22934  012D3A  0E00               	movlw	0
 22935  012D3C  6E3A               	movwf	(btemp+8)^0,c
 22936  012D3E  0E00               	movlw	0
 22937  012D40  6E3B               	movwf	(btemp+9)^0,c
 22938  012D42  0E80               	movlw	128
 22939  012D44  6E3C               	movwf	(btemp+10)^0,c
 22940  012D46  0E7F               	movlw	127
 22941  012D48  6E3D               	movwf	(btemp+11)^0,c
 22942                           
 22943                           ;stkvar	_prod @ sp[(-13)+0]
 22944  012D4A  0EF3               	movlw	-13
 22945  012D4C  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 22946  012D52  0EF4               	movlw	-12
 22947  012D54  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 22948  012D5A  0EF5               	movlw	-11
 22949  012D5C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 22950  012D62  0EF6               	movlw	-10
 22951  012D64  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 22952  012D6A  D044               	goto	l7166
 22953  012D6C                     l7150:
 22954                           
 22955                           ;stkvar	_temp @ sp[(-13)+8]
 22956  012D6C  0EFC               	movlw	-4
 22957  012D6E  BEE3               	btfsc	plusw1,7,c
 22958  012D70  D007               	goto	u6110
 22959  012D72  0EFC               	movlw	-4
 22960  012D74  50E3               	movf	plusw1,w,c
 22961  012D76  E10F               	bnz	l7156
 22962  012D78  0EFB               	movlw	-5
 22963  012D7A  04E3               	decf	plusw1,w,c
 22964  012D7C  B0D8               	btfsc	status,0,c
 22965  012D7E  D00B               	goto	l7156
 22966  012D80                     u6110:
 22967                           
 22968                           ;stkvar	_prod @ sp[(-13)+0]
 22969  012D80  0EF3               	movlw	-13
 22970  012D82  6AE3               	clrf	plusw1,c
 22971  012D84  0EF4               	movlw	-12
 22972  012D86  6AE3               	clrf	plusw1,c
 22973  012D88  0EF5               	movlw	-11
 22974  012D8A  6AE3               	clrf	plusw1,c
 22975  012D8C  0EF6               	movlw	-10
 22976  012D8E  6AE3               	clrf	plusw1,c
 22977                           
 22978                           ;stkvar	_sign @ sp[(-13)+12]
 22979  012D90  0EFF               	movlw	-1
 22980  012D92  6AE3               	clrf	plusw1,c
 22981  012D94  D02F               	goto	l7166
 22982  012D96                     l7156:
 22983                           
 22984                           ;stkvar	_temp @ sp[(-13)+8]
 22985                           ;stkvar	_bexp @ sp[(-13)+10]
 22986  012D96  0EFB               	movlw	-5
 22987  012D98  006F FF8C  F032    	movff	plusw1,btemp
 22988  012D9E  0EFD               	movlw	-3
 22989  012DA0  0060  F0CB  FFE3   	movff	btemp,plusw1
 22990                           
 22991                           ;stkvar	_prod @ sp[(-13)+0]
 22992  012DA6  50E1               	movf	fsr1l,w,c
 22993  012DA8  0FF3               	addlw	-13
 22994  012DAA  6ED9               	movwf	fsr2l,c
 22995  012DAC  50E2               	movf	fsr1h,w,c
 22996  012DAE  6EDA               	movwf	fsr2h,c
 22997  012DB0  0EFF               	movlw	255
 22998  012DB2  22DA               	addwfc	fsr2h,f,c
 22999  012DB4  0EFF               	movlw	255
 23000  012DB6  16DE               	andwf	postinc2,f,c
 23001  012DB8  0EFF               	movlw	255
 23002  012DBA  16DE               	andwf	postinc2,f,c
 23003  012DBC  0E7F               	movlw	127
 23004  012DBE  16DE               	andwf	postinc2,f,c
 23005  012DC0  0E00               	movlw	0
 23006  012DC2  16DE               	andwf	postinc2,f,c
 23007                           
 23008                           ;stkvar	_bexp @ sp[(-13)+10]
 23009  012DC4  0EFD               	movlw	-3
 23010  012DC6  A0E3               	btfss	plusw1,0,c
 23011  012DC8  D008               	goto	l7164
 23012                           
 23013                           ;stkvar	_prod @ sp[(-13)+0]
 23014  012DCA  0EF5               	movlw	245
 23015  012DCC  24E1               	addwf	fsr1l,w,c
 23016  012DCE  6ED9               	movwf	fsr2l,c
 23017  012DD0  0EFF               	movlw	255
 23018  012DD2  20E2               	addwfc	fsr1h,w,c
 23019  012DD4  6EDA               	movwf	fsr2h,c
 23020  012DD6  0E00               	movlw	0
 23021  012DD8  8EDB               	bsf	plusw2,7,c
 23022  012DDA                     l7164:
 23023                           
 23024                           ;stkvar	_prod @ sp[(-13)+0]
 23025  012DDA  0EF6               	movlw	246
 23026  012DDC  24E1               	addwf	fsr1l,w,c
 23027  012DDE  6ED9               	movwf	fsr2l,c
 23028  012DE0  0EFF               	movlw	255
 23029  012DE2  20E2               	addwfc	fsr1h,w,c
 23030  012DE4  6EDA               	movwf	fsr2h,c
 23031                           
 23032                           ;stkvar	_bexp @ sp[(-13)+10]
 23033  012DE6  0EFD               	movlw	-3
 23034  012DE8  006F FF8C  F03D    	movff	plusw1,btemp+11
 23035  012DEE  90D8               	bcf	status,0,c
 23036  012DF0  303D               	rrcf	(btemp+11)^0,w,c
 23037  012DF2  6EDF               	movwf	indf2,c
 23038  012DF4                     l7166:
 23039                           
 23040                           ;stkvar	_sign @ sp[(-13)+12]
 23041  012DF4  0EFF               	movlw	-1
 23042  012DF6  006F FF8C  F03D    	movff	plusw1,btemp+11
 23043                           
 23044                           ;stkvar	_prod @ sp[(-13)+0]
 23045  012DFC  0EF6               	movlw	246
 23046  012DFE  24E1               	addwf	fsr1l,w,c
 23047  012E00  6ED9               	movwf	fsr2l,c
 23048  012E02  0EFF               	movlw	255
 23049  012E04  20E2               	addwfc	fsr1h,w,c
 23050  012E06  6EDA               	movwf	fsr2h,c
 23051  012E08  503D               	movf	(btemp+11)^0,w,c
 23052  012E0A  12DF               	iorwf	indf2,f,c
 23053                           
 23054                           ;stkvar	_prod @ sp[(-13)+0]
 23055  012E0C  0EF3               	movlw	-13
 23056  012E0E  006F FF8C  F032    	movff	plusw1,btemp
 23057  012E14  0EF4               	movlw	-12
 23058  012E16  006F FF8C  F033    	movff	plusw1,btemp+1
 23059  012E1C  0EF5               	movlw	-11
 23060  012E1E  006F FF8C  F034    	movff	plusw1,btemp+2
 23061  012E24  0EF6               	movlw	-10
 23062  012E26  006F FF8C  F035    	movff	plusw1,btemp+3
 23063  012E2C                     l2729:
 23064                           
 23065                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 23066  012E2C  0EEB               	movlw	235
 23067  012E2E  26E1               	addwf	fsr1l,f,c
 23068  012E30  0EFF               	movlw	255
 23069  012E32  22E2               	addwfc	fsr1h,f,c
 23070  012E34  0012               	return		;funcret
 23071  012E36                     __end_of___flmul:
 23072                           	opt callstack 0
 23073                           
 23074 ;; *************** function _SYSTEM_Initialize *****************
 23075 ;; Defined at:
 23076 ;;		line 50 in file "mcc_generated_files/mcc.c"
 23077 ;; Parameters:    Size  Location     Type
 23078 ;;		None
 23079 ;; Auto vars:     Size  Location     Type
 23080 ;;		None
 23081 ;; Return value:  Size  Location     Type
 23082 ;;                  1  [STACK] void 
 23083 ;; Registers used:
 23084 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 23085 ;; Tracked objects:
 23086 ;;		On entry : 0/0
 23087 ;;		On exit  : 3F/3C
 23088 ;;		Unchanged: 0/0
 23089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23094 ;;Total ram usage:        0 bytes
 23095 ;; Hardware stack levels used:    1
 23096 ;; Hardware stack levels required when called:    8
 23097 ;; This function calls:
 23098 ;;		_ADCC_Initialize
 23099 ;;		_CLKREF_Initialize
 23100 ;;		_DMA1_Initialize
 23101 ;;		_DMA2_Initialize
 23102 ;;		_EXT_INT_Initialize
 23103 ;;		_FVR_Initialize
 23104 ;;		_INTERRUPT_Initialize
 23105 ;;		_OSCILLATOR_Initialize
 23106 ;;		_PIN_MANAGER_Initialize
 23107 ;;		_PMD_Initialize
 23108 ;;		_PWM8_Initialize
 23109 ;;		_SPI1_Initialize
 23110 ;;		_TMR2_Initialize
 23111 ;;		_TMR5_Initialize
 23112 ;;		_TMR6_Initialize
 23113 ;;		_UART1_Initialize
 23114 ;;		_UART2_Initialize
 23115 ;; This function is called by:
 23116 ;;		_main
 23117 ;; This function uses a reentrant model
 23118 ;;
 23119                           
 23120                           	psect	text92
 23121  018444                     __ptext92:
 23122                           	opt callstack 0
 23123  018444                     _SYSTEM_Initialize:
 23124                           	opt callstack 22
 23125                           
 23126                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 23127                           
 23128                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23129                           ;incstack = 0
 23130  018444  ECB6  F0BF         	call	_INTERRUPT_Initialize	;wreg free
 23131                           
 23132                           ; BSR set to: 57
 23133                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 23134  018448  EC62  F0C7         	call	_PMD_Initialize	;wreg free
 23135                           
 23136                           ; BSR set to: 57
 23137                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 23138  01844C  EC80  F0BD         	call	_PIN_MANAGER_Initialize	;wreg free
 23139                           
 23140                           ; BSR set to: 58
 23141                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 23142  018450  EC57  F0C7         	call	_OSCILLATOR_Initialize	;wreg free
 23143                           
 23144                           ; BSR set to: 57
 23145                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 23146  018454  ECC1  F0C7         	call	_FVR_Initialize	;wreg free
 23147                           
 23148                           ; BSR set to: 62
 23149                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 23150  018458  EC4D  F0BF         	call	_ADCC_Initialize	;wreg free
 23151                           
 23152                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 23153  01845C  EC35  F0C7         	call	_TMR2_Initialize	;wreg free
 23154                           
 23155                           ; BSR set to: 57
 23156                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 23157  018460  EC4C  F0C7         	call	_PWM8_Initialize	;wreg free
 23158                           
 23159                           ; BSR set to: 63
 23160                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 23161  018464  ECB7  F0C3         	call	_EXT_INT_Initialize	;wreg free
 23162                           
 23163                           ; BSR set to: 57
 23164                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 23165  018468  EC74  F0C4         	call	_TMR6_Initialize	;wreg free
 23166                           
 23167                           ;mcc_generated_files/mcc.c: 62:     TMR5_Initialize();
 23168  01846C  EC45  F0C2         	call	_TMR5_Initialize	;wreg free
 23169                           
 23170                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 23171  018470  EC1B  F0C0         	call	_UART1_Initialize	;wreg free
 23172                           
 23173                           ; BSR set to: 57
 23174                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 23175  018474  ECAF  F0C0         	call	_UART2_Initialize	;wreg free
 23176                           
 23177                           ; BSR set to: 57
 23178                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 23179  018478  EC41  F0C7         	call	_SPI1_Initialize	;wreg free
 23180                           
 23181                           ; BSR set to: 61
 23182                           ;mcc_generated_files/mcc.c: 66:     DMA2_Initialize();
 23183  01847C  EC39  F0C1         	call	_DMA2_Initialize	;wreg free
 23184                           
 23185                           ; BSR set to: 59
 23186                           ;mcc_generated_files/mcc.c: 67:     DMA1_Initialize();
 23187  018480  EC18  F0BF         	call	_DMA1_Initialize	;wreg free
 23188                           
 23189                           ; BSR set to: 59
 23190                           ;mcc_generated_files/mcc.c: 68:     CLKREF_Initialize();
 23191  018484  EC9B  F0C7         	call	_CLKREF_Initialize	;wreg free
 23192                           
 23193                           ; BSR set to: 60
 23194                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 23195  018488  0012               	return		;funcret
 23196  01848A                     __end_of_SYSTEM_Initialize:
 23197                           	opt callstack 0
 23198                           
 23199 ;; *************** function _UART2_Initialize *****************
 23200 ;; Defined at:
 23201 ;;		line 78 in file "mcc_generated_files/uart2.c"
 23202 ;; Parameters:    Size  Location     Type
 23203 ;;		None
 23204 ;; Auto vars:     Size  Location     Type
 23205 ;;		None
 23206 ;; Return value:  Size  Location     Type
 23207 ;;                  1  [STACK] void 
 23208 ;; Registers used:
 23209 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23210 ;; Tracked objects:
 23211 ;;		On entry : 3F/39
 23212 ;;		On exit  : 3F/39
 23213 ;;		Unchanged: 0/0
 23214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23219 ;;Total ram usage:        0 bytes
 23220 ;; Hardware stack levels used:    1
 23221 ;; Hardware stack levels required when called:    7
 23222 ;; This function calls:
 23223 ;;		_UART2_SetRxInterruptHandler
 23224 ;;		_UART2_SetTxInterruptHandler
 23225 ;; This function is called by:
 23226 ;;		_SYSTEM_Initialize
 23227 ;; This function uses a reentrant model
 23228 ;;
 23229                           
 23230                           	psect	text93
 23231  01815E                     __ptext93:
 23232                           	opt callstack 0
 23233  01815E                     _UART2_Initialize:
 23234                           	opt callstack 22
 23235                           
 23236                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 23237                           
 23238                           ; BSR set to: 60
 23239                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23240                           ;incstack = 0
 23241  01815E  0139               	movlb	57	; () banked
 23242  018160  9596               	bcf	150,2,b	;volatile
 23243                           
 23244                           ; BSR set to: 57
 23245                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 23246  018162  0EC6               	movlw	low _UART2_Receive_ISR
 23247  018164  6EE6               	movwf	postinc1,c
 23248  018166  0E8D               	movlw	high _UART2_Receive_ISR
 23249  018168  6EE6               	movwf	postinc1,c
 23250  01816A  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 23251  01816C  6EE6               	movwf	postinc1,c
 23252  01816E  EC03  F0C5         	call	_UART2_SetRxInterruptHandler	;wreg free
 23253                           
 23254                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 23255  018172  0139               	movlb	57	; () banked
 23256  018174  9796               	bcf	150,3,b	;volatile
 23257                           
 23258                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 23259  018176  0EBC               	movlw	low _UART2_Transmit_ISR
 23260  018178  6EE6               	movwf	postinc1,c
 23261  01817A  0E88               	movlw	high _UART2_Transmit_ISR
 23262  01817C  6EE6               	movwf	postinc1,c
 23263  01817E  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 23264  018180  6EE6               	movwf	postinc1,c
 23265  018182  ECEF  F0C4         	call	_UART2_SetTxInterruptHandler	;wreg free
 23266                           
 23267                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 23268  018186  013D               	movlb	61	; () banked
 23269  018188  6BD4               	clrf	212,b	;volatile
 23270                           
 23271                           ; BSR set to: 61
 23272                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 23273  01818A  6BD6               	clrf	214,b	;volatile
 23274                           
 23275                           ; BSR set to: 61
 23276                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 23277  01818C  6BD8               	clrf	216,b	;volatile
 23278                           
 23279                           ; BSR set to: 61
 23280                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 23281  01818E  0EB0               	movlw	176
 23282  018190  6FDA               	movwf	218,b	;volatile
 23283                           
 23284                           ; BSR set to: 61
 23285                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 23286  018192  0E80               	movlw	128
 23287  018194  6FDB               	movwf	219,b	;volatile
 23288                           
 23289                           ; BSR set to: 61
 23290                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 23291  018196  6BDC               	clrf	220,b	;volatile
 23292                           
 23293                           ; BSR set to: 61
 23294                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 23295  018198  0E82               	movlw	130
 23296  01819A  6FDD               	movwf	221,b	;volatile
 23297                           
 23298                           ; BSR set to: 61
 23299                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 23300  01819C  0E06               	movlw	6
 23301  01819E  6FDE               	movwf	222,b	;volatile
 23302                           
 23303                           ; BSR set to: 61
 23304                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 23305  0181A0  6BDF               	clrf	223,b	;volatile
 23306                           
 23307                           ; BSR set to: 61
 23308                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 23309  0181A2  6BE0               	clrf	224,b	;volatile
 23310                           
 23311                           ; BSR set to: 61
 23312                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 23313  0181A4  6BE1               	clrf	225,b	;volatile
 23314                           
 23315                           ; BSR set to: 61
 23316                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 23317  0181A6  6BE2               	clrf	226,b	;volatile
 23318                           
 23319                           ; BSR set to: 61
 23320                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 23321  0181A8  6A2B               	clrf	_uart2TxHead^0,c	;volatile
 23322                           
 23323                           ; BSR set to: 61
 23324                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 23325  0181AA  6A2A               	clrf	_uart2TxTail^0,c	;volatile
 23326                           
 23327                           ; BSR set to: 61
 23328                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 23329  0181AC  0E40               	movlw	64
 23330  0181AE  6E29               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 23331                           
 23332                           ; BSR set to: 61
 23333                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 23334  0181B0  6A28               	clrf	_uart2RxHead^0,c	;volatile
 23335                           
 23336                           ; BSR set to: 61
 23337                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 23338  0181B2  6A27               	clrf	_uart2RxTail^0,c	;volatile
 23339                           
 23340                           ; BSR set to: 61
 23341                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 23342  0181B4  6A26               	clrf	_uart2RxCount^0,c	;volatile
 23343                           
 23344                           ; BSR set to: 61
 23345                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 23346  0181B6  0139               	movlb	57	; () banked
 23347  0181B8  8596               	bsf	150,2,b	;volatile
 23348                           
 23349                           ; BSR set to: 57
 23350                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23351  0181BA  0012               	return		;funcret
 23352  0181BC                     __end_of_UART2_Initialize:
 23353                           	opt callstack 0
 23354                           
 23355 ;; *************** function _UART2_SetTxInterruptHandler *****************
 23356 ;; Defined at:
 23357 ;;		line 252 in file "mcc_generated_files/uart2.c"
 23358 ;; Parameters:    Size  Location     Type
 23359 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23360 ;;		 -> UART2_Transmit_ISR(1), 
 23361 ;; Auto vars:     Size  Location     Type
 23362 ;;		None
 23363 ;; Return value:  Size  Location     Type
 23364 ;;                  1  [STACK] void 
 23365 ;; Registers used:
 23366 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23367 ;; Tracked objects:
 23368 ;;		On entry : 3F/39
 23369 ;;		On exit  : 0/0
 23370 ;;		Unchanged: 0/0
 23371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23376 ;;Total ram usage:        0 bytes
 23377 ;; Hardware stack levels used:    1
 23378 ;; Hardware stack levels required when called:    6
 23379 ;; This function calls:
 23380 ;;		Nothing
 23381 ;; This function is called by:
 23382 ;;		_UART2_Initialize
 23383 ;; This function uses a reentrant model
 23384 ;;
 23385                           
 23386                           	psect	text94
 23387  0189DE                     __ptext94:
 23388                           	opt callstack 0
 23389  0189DE                     _UART2_SetTxInterruptHandler:
 23390                           	opt callstack 22
 23391                           
 23392                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 23393                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23394                           
 23395                           ; BSR set to: 57
 23396                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23397                           ;incstack = 0
 23398  0189DE  50E1               	movf	fsr1l,w,c
 23399  0189E0  0FFD               	addlw	-3
 23400  0189E2  6ED9               	movwf	fsr2l,c
 23401  0189E4  50E2               	movf	fsr1h,w,c
 23402  0189E6  6EDA               	movwf	fsr2h,c
 23403  0189E8  0EFF               	movlw	255
 23404  0189EA  22DA               	addwfc	fsr2h,f,c
 23405  0189EC  006F FF78  F00D    	movff	postinc2,_UART2_TxInterruptHandler
 23406  0189F2  006F FF78  F00E    	movff	postinc2,_UART2_TxInterruptHandler+1
 23407  0189F8  006F FF74  F00F    	movff	postdec2,_UART2_TxInterruptHandler+2
 23408                           
 23409                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23410  0189FE  52E5               	movf	postdec1,f,c
 23411  018A00  52E5               	movf	postdec1,f,c
 23412  018A02  52E5               	movf	postdec1,f,c
 23413  018A04  0012               	return		;funcret
 23414  018A06                     __end_of_UART2_SetTxInterruptHandler:
 23415                           	opt callstack 0
 23416                           
 23417 ;; *************** function _UART2_SetRxInterruptHandler *****************
 23418 ;; Defined at:
 23419 ;;		line 248 in file "mcc_generated_files/uart2.c"
 23420 ;; Parameters:    Size  Location     Type
 23421 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23422 ;;		 -> UART2_Receive_ISR(1), 
 23423 ;; Auto vars:     Size  Location     Type
 23424 ;;		None
 23425 ;; Return value:  Size  Location     Type
 23426 ;;                  1  [STACK] void 
 23427 ;; Registers used:
 23428 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23429 ;; Tracked objects:
 23430 ;;		On entry : 3F/39
 23431 ;;		On exit  : 0/0
 23432 ;;		Unchanged: 0/0
 23433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23438 ;;Total ram usage:        0 bytes
 23439 ;; Hardware stack levels used:    1
 23440 ;; Hardware stack levels required when called:    6
 23441 ;; This function calls:
 23442 ;;		Nothing
 23443 ;; This function is called by:
 23444 ;;		_UART2_Initialize
 23445 ;; This function uses a reentrant model
 23446 ;;
 23447                           
 23448                           	psect	text95
 23449  018A06                     __ptext95:
 23450                           	opt callstack 0
 23451  018A06                     _UART2_SetRxInterruptHandler:
 23452                           	opt callstack 22
 23453                           
 23454                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 23455                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23456                           
 23457                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23458                           ;incstack = 0
 23459  018A06  50E1               	movf	fsr1l,w,c
 23460  018A08  0FFD               	addlw	-3
 23461  018A0A  6ED9               	movwf	fsr2l,c
 23462  018A0C  50E2               	movf	fsr1h,w,c
 23463  018A0E  6EDA               	movwf	fsr2h,c
 23464  018A10  0EFF               	movlw	255
 23465  018A12  22DA               	addwfc	fsr2h,f,c
 23466  018A14  006F FF78  F010    	movff	postinc2,_UART2_RxInterruptHandler
 23467  018A1A  006F FF78  F011    	movff	postinc2,_UART2_RxInterruptHandler+1
 23468  018A20  006F FF74  F012    	movff	postdec2,_UART2_RxInterruptHandler+2
 23469                           
 23470                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23471  018A26  52E5               	movf	postdec1,f,c
 23472  018A28  52E5               	movf	postdec1,f,c
 23473  018A2A  52E5               	movf	postdec1,f,c
 23474  018A2C  0012               	return		;funcret
 23475  018A2E                     __end_of_UART2_SetRxInterruptHandler:
 23476                           	opt callstack 0
 23477                           
 23478 ;; *************** function _UART1_Initialize *****************
 23479 ;; Defined at:
 23480 ;;		line 79 in file "mcc_generated_files/uart1.c"
 23481 ;; Parameters:    Size  Location     Type
 23482 ;;		None
 23483 ;; Auto vars:     Size  Location     Type
 23484 ;;		None
 23485 ;; Return value:  Size  Location     Type
 23486 ;;                  1  [STACK] void 
 23487 ;; Registers used:
 23488 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23489 ;; Tracked objects:
 23490 ;;		On entry : 0/39
 23491 ;;		On exit  : 3F/39
 23492 ;;		Unchanged: 0/0
 23493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23498 ;;Total ram usage:        0 bytes
 23499 ;; Hardware stack levels used:    1
 23500 ;; Hardware stack levels required when called:    7
 23501 ;; This function calls:
 23502 ;;		_UART1_SetRxInterruptHandler
 23503 ;;		_UART1_SetTxInterruptHandler
 23504 ;; This function is called by:
 23505 ;;		_SYSTEM_Initialize
 23506 ;; This function uses a reentrant model
 23507 ;;
 23508                           
 23509                           	psect	text96
 23510  018036                     __ptext96:
 23511                           	opt callstack 0
 23512  018036                     _UART1_Initialize:
 23513                           	opt callstack 22
 23514                           
 23515                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 23516                           
 23517                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23518                           ;incstack = 0
 23519  018036  0139               	movlb	57	; () banked
 23520  018038  9793               	bcf	147,3,b	;volatile
 23521                           
 23522                           ; BSR set to: 57
 23523                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 23524  01803A  0EA8               	movlw	low _UART1_Receive_ISR
 23525  01803C  6EE6               	movwf	postinc1,c
 23526  01803E  0E8D               	movlw	high _UART1_Receive_ISR
 23527  018040  6EE6               	movwf	postinc1,c
 23528  018042  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 23529  018044  6EE6               	movwf	postinc1,c
 23530  018046  EC2B  F0C5         	call	_UART1_SetRxInterruptHandler	;wreg free
 23531                           
 23532                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 23533  01804A  0139               	movlb	57	; () banked
 23534  01804C  9993               	bcf	147,4,b	;volatile
 23535                           
 23536                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 23537  01804E  0E90               	movlw	low _UART1_Transmit_ISR
 23538  018050  6EE6               	movwf	postinc1,c
 23539  018052  0E88               	movlw	high _UART1_Transmit_ISR
 23540  018054  6EE6               	movwf	postinc1,c
 23541  018056  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 23542  018058  6EE6               	movwf	postinc1,c
 23543  01805A  EC17  F0C5         	call	_UART1_SetTxInterruptHandler	;wreg free
 23544                           
 23545                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 23546  01805E  013D               	movlb	61	; () banked
 23547  018060  6BEC               	clrf	236,b	;volatile
 23548                           
 23549                           ; BSR set to: 61
 23550                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 23551  018062  6BED               	clrf	237,b	;volatile
 23552                           
 23553                           ; BSR set to: 61
 23554                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 23555  018064  6BEE               	clrf	238,b	;volatile
 23556                           
 23557                           ; BSR set to: 61
 23558                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 23559  018066  6BEF               	clrf	239,b	;volatile
 23560                           
 23561                           ; BSR set to: 61
 23562                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 23563  018068  6BF0               	clrf	240,b	;volatile
 23564                           
 23565                           ; BSR set to: 61
 23566                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 23567  01806A  6BF1               	clrf	241,b	;volatile
 23568                           
 23569                           ; BSR set to: 61
 23570                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 23571  01806C  0EB0               	movlw	176
 23572  01806E  6FF2               	movwf	242,b	;volatile
 23573                           
 23574                           ; BSR set to: 61
 23575                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 23576  018070  0E80               	movlw	128
 23577  018072  6FF3               	movwf	243,b	;volatile
 23578                           
 23579                           ; BSR set to: 61
 23580                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 23581  018074  6BF4               	clrf	244,b	;volatile
 23582                           
 23583                           ; BSR set to: 61
 23584                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 23585  018076  0E82               	movlw	130
 23586  018078  6FF5               	movwf	245,b	;volatile
 23587                           
 23588                           ; BSR set to: 61
 23589                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 23590  01807A  0E06               	movlw	6
 23591  01807C  6FF6               	movwf	246,b	;volatile
 23592                           
 23593                           ; BSR set to: 61
 23594                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 23595  01807E  6BF7               	clrf	247,b	;volatile
 23596                           
 23597                           ; BSR set to: 61
 23598                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 23599  018080  6BF8               	clrf	248,b	;volatile
 23600                           
 23601                           ; BSR set to: 61
 23602                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 23603  018082  6BF9               	clrf	249,b	;volatile
 23604                           
 23605                           ; BSR set to: 61
 23606                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 23607  018084  6BFA               	clrf	250,b	;volatile
 23608                           
 23609                           ; BSR set to: 61
 23610                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 23611  018086  6A31               	clrf	_uart1TxHead^0,c	;volatile
 23612                           
 23613                           ; BSR set to: 61
 23614                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 23615  018088  6A30               	clrf	_uart1TxTail^0,c	;volatile
 23616                           
 23617                           ; BSR set to: 61
 23618                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 23619  01808A  0E40               	movlw	64
 23620  01808C  6E2F               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 23621                           
 23622                           ; BSR set to: 61
 23623                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 23624  01808E  6A2E               	clrf	_uart1RxHead^0,c	;volatile
 23625                           
 23626                           ; BSR set to: 61
 23627                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 23628  018090  6A2D               	clrf	_uart1RxTail^0,c	;volatile
 23629                           
 23630                           ; BSR set to: 61
 23631                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 23632  018092  6A2C               	clrf	_uart1RxCount^0,c	;volatile
 23633                           
 23634                           ; BSR set to: 61
 23635                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 23636  018094  0139               	movlb	57	; () banked
 23637  018096  8793               	bsf	147,3,b	;volatile
 23638                           
 23639                           ; BSR set to: 57
 23640                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23641  018098  0012               	return		;funcret
 23642  01809A                     __end_of_UART1_Initialize:
 23643                           	opt callstack 0
 23644                           
 23645 ;; *************** function _UART1_SetTxInterruptHandler *****************
 23646 ;; Defined at:
 23647 ;;		line 246 in file "mcc_generated_files/uart1.c"
 23648 ;; Parameters:    Size  Location     Type
 23649 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23650 ;;		 -> UART1_Transmit_ISR(1), 
 23651 ;; Auto vars:     Size  Location     Type
 23652 ;;		None
 23653 ;; Return value:  Size  Location     Type
 23654 ;;                  1  [STACK] void 
 23655 ;; Registers used:
 23656 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23657 ;; Tracked objects:
 23658 ;;		On entry : 3F/39
 23659 ;;		On exit  : 0/0
 23660 ;;		Unchanged: 0/0
 23661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23666 ;;Total ram usage:        0 bytes
 23667 ;; Hardware stack levels used:    1
 23668 ;; Hardware stack levels required when called:    6
 23669 ;; This function calls:
 23670 ;;		Nothing
 23671 ;; This function is called by:
 23672 ;;		_UART1_Initialize
 23673 ;; This function uses a reentrant model
 23674 ;;
 23675                           
 23676                           	psect	text97
 23677  018A2E                     __ptext97:
 23678                           	opt callstack 0
 23679  018A2E                     _UART1_SetTxInterruptHandler:
 23680                           	opt callstack 22
 23681                           
 23682                           ;mcc_generated_files/uart1.c: 246: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 247: {;mcc_generated_files/uart1.c: 248:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 23683                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23684                           
 23685                           ; BSR set to: 57
 23686                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23687                           ;incstack = 0
 23688  018A2E  50E1               	movf	fsr1l,w,c
 23689  018A30  0FFD               	addlw	-3
 23690  018A32  6ED9               	movwf	fsr2l,c
 23691  018A34  50E2               	movf	fsr1h,w,c
 23692  018A36  6EDA               	movwf	fsr2h,c
 23693  018A38  0EFF               	movlw	255
 23694  018A3A  22DA               	addwfc	fsr2h,f,c
 23695  018A3C  006F FF78  F007    	movff	postinc2,_UART1_TxInterruptHandler
 23696  018A42  006F FF78  F008    	movff	postinc2,_UART1_TxInterruptHandler+1
 23697  018A48  006F FF74  F009    	movff	postdec2,_UART1_TxInterruptHandler+2
 23698                           
 23699                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23700  018A4E  52E5               	movf	postdec1,f,c
 23701  018A50  52E5               	movf	postdec1,f,c
 23702  018A52  52E5               	movf	postdec1,f,c
 23703  018A54  0012               	return		;funcret
 23704  018A56                     __end_of_UART1_SetTxInterruptHandler:
 23705                           	opt callstack 0
 23706                           
 23707 ;; *************** function _UART1_SetRxInterruptHandler *****************
 23708 ;; Defined at:
 23709 ;;		line 241 in file "mcc_generated_files/uart1.c"
 23710 ;; Parameters:    Size  Location     Type
 23711 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23712 ;;		 -> UART1_Receive_ISR(1), 
 23713 ;; Auto vars:     Size  Location     Type
 23714 ;;		None
 23715 ;; Return value:  Size  Location     Type
 23716 ;;                  1  [STACK] void 
 23717 ;; Registers used:
 23718 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23719 ;; Tracked objects:
 23720 ;;		On entry : 3F/39
 23721 ;;		On exit  : 0/0
 23722 ;;		Unchanged: 0/0
 23723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23728 ;;Total ram usage:        0 bytes
 23729 ;; Hardware stack levels used:    1
 23730 ;; Hardware stack levels required when called:    6
 23731 ;; This function calls:
 23732 ;;		Nothing
 23733 ;; This function is called by:
 23734 ;;		_UART1_Initialize
 23735 ;; This function uses a reentrant model
 23736 ;;
 23737                           
 23738                           	psect	text98
 23739  018A56                     __ptext98:
 23740                           	opt callstack 0
 23741  018A56                     _UART1_SetRxInterruptHandler:
 23742                           	opt callstack 22
 23743                           
 23744                           ;mcc_generated_files/uart1.c: 241: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 242: {;mcc_generated_files/uart1.c: 243:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 23745                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23746                           
 23747                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23748                           ;incstack = 0
 23749  018A56  50E1               	movf	fsr1l,w,c
 23750  018A58  0FFD               	addlw	-3
 23751  018A5A  6ED9               	movwf	fsr2l,c
 23752  018A5C  50E2               	movf	fsr1h,w,c
 23753  018A5E  6EDA               	movwf	fsr2h,c
 23754  018A60  0EFF               	movlw	255
 23755  018A62  22DA               	addwfc	fsr2h,f,c
 23756  018A64  006F FF78  F00A    	movff	postinc2,_UART1_RxInterruptHandler
 23757  018A6A  006F FF78  F00B    	movff	postinc2,_UART1_RxInterruptHandler+1
 23758  018A70  006F FF74  F00C    	movff	postdec2,_UART1_RxInterruptHandler+2
 23759                           
 23760                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23761  018A76  52E5               	movf	postdec1,f,c
 23762  018A78  52E5               	movf	postdec1,f,c
 23763  018A7A  52E5               	movf	postdec1,f,c
 23764  018A7C  0012               	return		;funcret
 23765  018A7E                     __end_of_UART1_SetRxInterruptHandler:
 23766                           	opt callstack 0
 23767                           
 23768 ;; *************** function _TMR6_Initialize *****************
 23769 ;; Defined at:
 23770 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 23771 ;; Parameters:    Size  Location     Type
 23772 ;;		None
 23773 ;; Auto vars:     Size  Location     Type
 23774 ;;		None
 23775 ;; Return value:  Size  Location     Type
 23776 ;;                  1  [STACK] void 
 23777 ;; Registers used:
 23778 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23779 ;; Tracked objects:
 23780 ;;		On entry : 3F/39
 23781 ;;		On exit  : 0/0
 23782 ;;		Unchanged: 0/0
 23783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23788 ;;Total ram usage:        0 bytes
 23789 ;; Hardware stack levels used:    1
 23790 ;; Hardware stack levels required when called:    7
 23791 ;; This function calls:
 23792 ;;		_TMR6_SetInterruptHandler
 23793 ;; This function is called by:
 23794 ;;		_SYSTEM_Initialize
 23795 ;; This function uses a reentrant model
 23796 ;;
 23797                           
 23798                           	psect	text99
 23799  0188E8                     __ptext99:
 23800                           	opt callstack 0
 23801  0188E8                     _TMR6_Initialize:
 23802                           	opt callstack 22
 23803                           
 23804                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 23805                           
 23806                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23807                           ;incstack = 0
 23808  0188E8  0E01               	movlw	1
 23809  0188EA  6E96               	movwf	150,c	;volatile
 23810                           
 23811                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 23812  0188EC  6A95               	clrf	149,c	;volatile
 23813                           
 23814                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 23815  0188EE  6A97               	clrf	151,c	;volatile
 23816                           
 23817                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 23818  0188F0  0E7C               	movlw	124
 23819  0188F2  6E93               	movwf	147,c	;volatile
 23820                           
 23821                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 23822  0188F4  6A92               	clrf	146,c	;volatile
 23823                           
 23824                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 23825  0188F6  0139               	movlb	57	; () banked
 23826  0188F8  91A9               	bcf	169,0,b	;volatile
 23827                           
 23828                           ; BSR set to: 57
 23829                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 23830  0188FA  8199               	bsf	153,0,b	;volatile
 23831                           
 23832                           ; BSR set to: 57
 23833                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 23834  0188FC  0ED0               	movlw	low _TMR6_DefaultInterruptHandler
 23835  0188FE  6EE6               	movwf	postinc1,c
 23836  018900  0E84               	movlw	high _TMR6_DefaultInterruptHandler
 23837  018902  6EE6               	movwf	postinc1,c
 23838  018904  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 23839  018906  6EE6               	movwf	postinc1,c
 23840  018908  EC3F  F0C5         	call	_TMR6_SetInterruptHandler	;wreg free
 23841                           
 23842                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 23843  01890C  0EE0               	movlw	224
 23844  01890E  6E94               	movwf	148,c	;volatile
 23845                           
 23846                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23847  018910  0012               	return		;funcret
 23848  018912                     __end_of_TMR6_Initialize:
 23849                           	opt callstack 0
 23850                           
 23851 ;; *************** function _TMR6_SetInterruptHandler *****************
 23852 ;; Defined at:
 23853 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 23854 ;; Parameters:    Size  Location     Type
 23855 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23856 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 23857 ;; Auto vars:     Size  Location     Type
 23858 ;;		None
 23859 ;; Return value:  Size  Location     Type
 23860 ;;                  1  [STACK] void 
 23861 ;; Registers used:
 23862 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23863 ;; Tracked objects:
 23864 ;;		On entry : 3F/39
 23865 ;;		On exit  : 0/0
 23866 ;;		Unchanged: 0/0
 23867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23872 ;;Total ram usage:        0 bytes
 23873 ;; Hardware stack levels used:    1
 23874 ;; Hardware stack levels required when called:    6
 23875 ;; This function calls:
 23876 ;;		Nothing
 23877 ;; This function is called by:
 23878 ;;		_TMR6_Initialize
 23879 ;; This function uses a reentrant model
 23880 ;;
 23881                           
 23882                           	psect	text100
 23883  018A7E                     __ptext100:
 23884                           	opt callstack 0
 23885  018A7E                     _TMR6_SetInterruptHandler:
 23886                           	opt callstack 22
 23887                           
 23888                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 23889                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23890                           
 23891                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23892                           ;incstack = 0
 23893  018A7E  50E1               	movf	fsr1l,w,c
 23894  018A80  0FFD               	addlw	-3
 23895  018A82  6ED9               	movwf	fsr2l,c
 23896  018A84  50E2               	movf	fsr1h,w,c
 23897  018A86  6EDA               	movwf	fsr2h,c
 23898  018A88  0EFF               	movlw	255
 23899  018A8A  22DA               	addwfc	fsr2h,f,c
 23900  018A8C  006F FF78  F0C4    	movff	postinc2,_TMR6_InterruptHandler
 23901  018A92  006F FF78  F0C5    	movff	postinc2,_TMR6_InterruptHandler+1
 23902  018A98  006F FF74  F0C6    	movff	postdec2,_TMR6_InterruptHandler+2
 23903                           
 23904                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 23905  018A9E  52E5               	movf	postdec1,f,c
 23906  018AA0  52E5               	movf	postdec1,f,c
 23907  018AA2  52E5               	movf	postdec1,f,c
 23908  018AA4  0012               	return		;funcret
 23909  018AA6                     __end_of_TMR6_SetInterruptHandler:
 23910                           	opt callstack 0
 23911                           
 23912 ;; *************** function _TMR5_Initialize *****************
 23913 ;; Defined at:
 23914 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 23915 ;; Parameters:    Size  Location     Type
 23916 ;;		None
 23917 ;; Auto vars:     Size  Location     Type
 23918 ;;		None
 23919 ;; Return value:  Size  Location     Type
 23920 ;;                  1  [STACK] void 
 23921 ;; Registers used:
 23922 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 23923 ;; Tracked objects:
 23924 ;;		On entry : 0/39
 23925 ;;		On exit  : 0/0
 23926 ;;		Unchanged: 0/0
 23927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23932 ;;Total ram usage:        0 bytes
 23933 ;; Hardware stack levels used:    1
 23934 ;; Hardware stack levels required when called:    7
 23935 ;; This function calls:
 23936 ;;		_TMR5_SetInterruptHandler
 23937 ;; This function is called by:
 23938 ;;		_SYSTEM_Initialize
 23939 ;; This function uses a reentrant model
 23940 ;;
 23941                           
 23942                           	psect	text101
 23943  01848A                     __ptext101:
 23944                           	opt callstack 0
 23945  01848A                     _TMR5_Initialize:
 23946                           	opt callstack 22
 23947                           
 23948                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 23949                           
 23950                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23951                           ;incstack = 0
 23952  01848A  6A9B               	clrf	155,c	;volatile
 23953                           
 23954                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 23955  01848C  6A9C               	clrf	156,c	;volatile
 23956                           
 23957                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 23958  01848E  0E01               	movlw	1
 23959  018490  6E9D               	movwf	157,c	;volatile
 23960                           
 23961                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 23962  018492  0E63               	movlw	99
 23963  018494  6E99               	movwf	153,c	;volatile
 23964                           
 23965                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 23966  018496  0EC0               	movlw	192
 23967  018498  6E98               	movwf	152,c	;volatile
 23968                           
 23969                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 23970  01849A  5098               	movf	152,w,c	;volatile
 23971  01849C  006F FE64  F032    	movff	16281,btemp	;volatile
 23972  0184A2  6A33               	clrf	(btemp+1)^0,c
 23973  0184A4  0060  F0C8  F033   	movff	btemp,btemp+1
 23974  0184AA  6A32               	clrf	btemp^0,c
 23975  0184AC  1032               	iorwf	btemp^0,w,c
 23976  0184AE  6E23               	movwf	_timer5ReloadVal^0,c	;volatile
 23977  0184B0  5033               	movf	(btemp+1)^0,w,c
 23978  0184B2  6E24               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 23979                           
 23980                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 23981  0184B4  0139               	movlb	57	; () banked
 23982  0184B6  9DA8               	bcf	168,6,b	;volatile
 23983                           
 23984                           ; BSR set to: 57
 23985                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 23986  0184B8  8D98               	bsf	152,6,b	;volatile
 23987                           
 23988                           ; BSR set to: 57
 23989                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 23990  0184BA  0E6E               	movlw	low _TMR5_DefaultInterruptHandler
 23991  0184BC  6EE6               	movwf	postinc1,c
 23992  0184BE  0E8B               	movlw	high _TMR5_DefaultInterruptHandler
 23993  0184C0  6EE6               	movwf	postinc1,c
 23994  0184C2  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 23995  0184C4  6EE6               	movwf	postinc1,c
 23996  0184C6  EC53  F0C5         	call	_TMR5_SetInterruptHandler	;wreg free
 23997                           
 23998                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 23999  0184CA  0E31               	movlw	49
 24000  0184CC  6E9A               	movwf	154,c	;volatile
 24001                           
 24002                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24003  0184CE  0012               	return		;funcret
 24004  0184D0                     __end_of_TMR5_Initialize:
 24005                           	opt callstack 0
 24006                           
 24007 ;; *************** function _TMR5_SetInterruptHandler *****************
 24008 ;; Defined at:
 24009 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 24010 ;; Parameters:    Size  Location     Type
 24011 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24012 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 24013 ;; Auto vars:     Size  Location     Type
 24014 ;;		None
 24015 ;; Return value:  Size  Location     Type
 24016 ;;                  1  [STACK] void 
 24017 ;; Registers used:
 24018 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24019 ;; Tracked objects:
 24020 ;;		On entry : 3F/39
 24021 ;;		On exit  : 0/0
 24022 ;;		Unchanged: 0/0
 24023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24028 ;;Total ram usage:        0 bytes
 24029 ;; Hardware stack levels used:    1
 24030 ;; Hardware stack levels required when called:    6
 24031 ;; This function calls:
 24032 ;;		Nothing
 24033 ;; This function is called by:
 24034 ;;		_TMR5_Initialize
 24035 ;; This function uses a reentrant model
 24036 ;;
 24037                           
 24038                           	psect	text102
 24039  018AA6                     __ptext102:
 24040                           	opt callstack 0
 24041  018AA6                     _TMR5_SetInterruptHandler:
 24042                           	opt callstack 22
 24043                           
 24044                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 24045                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24046                           
 24047                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24048                           ;incstack = 0
 24049  018AA6  50E1               	movf	fsr1l,w,c
 24050  018AA8  0FFD               	addlw	-3
 24051  018AAA  6ED9               	movwf	fsr2l,c
 24052  018AAC  50E2               	movf	fsr1h,w,c
 24053  018AAE  6EDA               	movwf	fsr2h,c
 24054  018AB0  0EFF               	movlw	255
 24055  018AB2  22DA               	addwfc	fsr2h,f,c
 24056  018AB4  006F FF78  F0C1    	movff	postinc2,_TMR5_InterruptHandler
 24057  018ABA  006F FF78  F0C2    	movff	postinc2,_TMR5_InterruptHandler+1
 24058  018AC0  006F FF74  F0C3    	movff	postdec2,_TMR5_InterruptHandler+2
 24059                           
 24060                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24061  018AC6  52E5               	movf	postdec1,f,c
 24062  018AC8  52E5               	movf	postdec1,f,c
 24063  018ACA  52E5               	movf	postdec1,f,c
 24064  018ACC  0012               	return		;funcret
 24065  018ACE                     __end_of_TMR5_SetInterruptHandler:
 24066                           	opt callstack 0
 24067                           
 24068 ;; *************** function _TMR2_Initialize *****************
 24069 ;; Defined at:
 24070 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 24071 ;; Parameters:    Size  Location     Type
 24072 ;;		None
 24073 ;; Auto vars:     Size  Location     Type
 24074 ;;		None
 24075 ;; Return value:  Size  Location     Type
 24076 ;;                  1  [STACK] void 
 24077 ;; Registers used:
 24078 ;;		wreg, status,2
 24079 ;; Tracked objects:
 24080 ;;		On entry : 0/3E
 24081 ;;		On exit  : 3F/39
 24082 ;;		Unchanged: 0/0
 24083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24088 ;;Total ram usage:        0 bytes
 24089 ;; Hardware stack levels used:    1
 24090 ;; Hardware stack levels required when called:    6
 24091 ;; This function calls:
 24092 ;;		Nothing
 24093 ;; This function is called by:
 24094 ;;		_SYSTEM_Initialize
 24095 ;; This function uses a reentrant model
 24096 ;;
 24097                           
 24098                           	psect	text103
 24099  018E6A                     __ptext103:
 24100                           	opt callstack 0
 24101  018E6A                     _TMR2_Initialize:
 24102                           	opt callstack 23
 24103                           
 24104                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 24105                           
 24106                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24107                           ;incstack = 0
 24108  018E6A  0E01               	movlw	1
 24109  018E6C  6EAE               	movwf	174,c	;volatile
 24110                           
 24111                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 24112  018E6E  6AAD               	clrf	173,c	;volatile
 24113                           
 24114                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 24115  018E70  6AAF               	clrf	175,c	;volatile
 24116                           
 24117                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 24118  018E72  0E63               	movlw	99
 24119  018E74  6EAB               	movwf	171,c	;volatile
 24120                           
 24121                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 24122  018E76  6AAA               	clrf	170,c	;volatile
 24123                           
 24124                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 24125  018E78  0139               	movlb	57	; () banked
 24126  018E7A  95A4               	bcf	164,2,b	;volatile
 24127                           
 24128                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 24129  018E7C  0EC0               	movlw	192
 24130  018E7E  6EAC               	movwf	172,c	;volatile
 24131                           
 24132                           ; BSR set to: 57
 24133                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24134  018E80  0012               	return		;funcret
 24135  018E82                     __end_of_TMR2_Initialize:
 24136                           	opt callstack 0
 24137                           
 24138 ;; *************** function _SPI1_Initialize *****************
 24139 ;; Defined at:
 24140 ;;		line 64 in file "mcc_generated_files/spi1.c"
 24141 ;; Parameters:    Size  Location     Type
 24142 ;;		None
 24143 ;; Auto vars:     Size  Location     Type
 24144 ;;		None
 24145 ;; Return value:  Size  Location     Type
 24146 ;;                  1  [STACK] void 
 24147 ;; Registers used:
 24148 ;;		wreg, status,2
 24149 ;; Tracked objects:
 24150 ;;		On entry : 3F/39
 24151 ;;		On exit  : 3F/3D
 24152 ;;		Unchanged: 0/0
 24153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24158 ;;Total ram usage:        0 bytes
 24159 ;; Hardware stack levels used:    1
 24160 ;; Hardware stack levels required when called:    6
 24161 ;; This function calls:
 24162 ;;		Nothing
 24163 ;; This function is called by:
 24164 ;;		_SYSTEM_Initialize
 24165 ;; This function uses a reentrant model
 24166 ;;
 24167                           
 24168                           	psect	text104
 24169  018E82                     __ptext104:
 24170                           	opt callstack 0
 24171  018E82                     _SPI1_Initialize:
 24172                           	opt callstack 23
 24173                           
 24174                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 24175                           
 24176                           ; BSR set to: 57
 24177                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24178                           ;incstack = 0
 24179  018E82  0E40               	movlw	64
 24180  018E84  013D               	movlb	61	; () banked
 24181  018E86  6F15               	movwf	21,b	;volatile
 24182                           
 24183                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 24184  018E88  0E03               	movlw	3
 24185  018E8A  6F16               	movwf	22,b	;volatile
 24186                           
 24187                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 24188  018E8C  0E4F               	movlw	79
 24189  018E8E  6F19               	movwf	25,b	;volatile
 24190                           
 24191                           ; BSR set to: 61
 24192                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 24193  018E90  6B1C               	clrf	28,b	;volatile
 24194                           
 24195                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 24196  018E92  0E83               	movlw	131
 24197  018E94  6F14               	movwf	20,b	;volatile
 24198                           
 24199                           ; BSR set to: 61
 24200                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24201  018E96  0012               	return		;funcret
 24202  018E98                     __end_of_SPI1_Initialize:
 24203                           	opt callstack 0
 24204                           
 24205 ;; *************** function _PWM8_Initialize *****************
 24206 ;; Defined at:
 24207 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 24208 ;; Parameters:    Size  Location     Type
 24209 ;;		None
 24210 ;; Auto vars:     Size  Location     Type
 24211 ;;		None
 24212 ;; Return value:  Size  Location     Type
 24213 ;;                  1  [STACK] void 
 24214 ;; Registers used:
 24215 ;;		wreg, status,2
 24216 ;; Tracked objects:
 24217 ;;		On entry : 3F/39
 24218 ;;		On exit  : 3F/3F
 24219 ;;		Unchanged: 0/0
 24220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24225 ;;Total ram usage:        0 bytes
 24226 ;; Hardware stack levels used:    1
 24227 ;; Hardware stack levels required when called:    6
 24228 ;; This function calls:
 24229 ;;		Nothing
 24230 ;; This function is called by:
 24231 ;;		_SYSTEM_Initialize
 24232 ;; This function uses a reentrant model
 24233 ;;
 24234                           
 24235                           	psect	text105
 24236  018E98                     __ptext105:
 24237                           	opt callstack 0
 24238  018E98                     _PWM8_Initialize:
 24239                           	opt callstack 23
 24240                           
 24241                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 24242                           
 24243                           ; BSR set to: 61
 24244                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24245                           ;incstack = 0
 24246  018E98  0E80               	movlw	128
 24247  018E9A  6E62               	movwf	98,c	;volatile
 24248                           
 24249                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 24250  018E9C  6A61               	clrf	97,c	;volatile
 24251                           
 24252                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 24253  018E9E  0E40               	movlw	64
 24254  018EA0  6E60               	movwf	96,c	;volatile
 24255                           
 24256                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 24257  018EA2  013F               	movlb	63	; () banked
 24258  018EA4  515F               	movf	95,w,b	;volatile
 24259  018EA6  0B3F               	andlw	-193
 24260  018EA8  0940               	iorlw	64
 24261  018EAA  6F5F               	movwf	95,b	;volatile
 24262                           
 24263                           ; BSR set to: 63
 24264                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24265  018EAC  0012               	return		;funcret
 24266  018EAE                     __end_of_PWM8_Initialize:
 24267                           	opt callstack 0
 24268                           
 24269 ;; *************** function _PMD_Initialize *****************
 24270 ;; Defined at:
 24271 ;;		line 89 in file "mcc_generated_files/mcc.c"
 24272 ;; Parameters:    Size  Location     Type
 24273 ;;		None
 24274 ;; Auto vars:     Size  Location     Type
 24275 ;;		None
 24276 ;; Return value:  Size  Location     Type
 24277 ;;                  1  [STACK] void 
 24278 ;; Registers used:
 24279 ;;		None
 24280 ;; Tracked objects:
 24281 ;;		On entry : 3F/39
 24282 ;;		On exit  : 3F/39
 24283 ;;		Unchanged: 0/0
 24284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24289 ;;Total ram usage:        0 bytes
 24290 ;; Hardware stack levels used:    1
 24291 ;; Hardware stack levels required when called:    6
 24292 ;; This function calls:
 24293 ;;		Nothing
 24294 ;; This function is called by:
 24295 ;;		_SYSTEM_Initialize
 24296 ;; This function uses a reentrant model
 24297 ;;
 24298                           
 24299                           	psect	text106
 24300  018EC4                     __ptext106:
 24301                           	opt callstack 0
 24302  018EC4                     _PMD_Initialize:
 24303                           	opt callstack 23
 24304                           
 24305                           ;mcc_generated_files/mcc.c: 92:     PMD0 = 0x00;
 24306                           
 24307                           ; BSR set to: 63
 24308                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24309                           ;incstack = 0
 24310  018EC4  0139               	movlb	57	; () banked
 24311  018EC6  6BC0               	clrf	192,b	;volatile
 24312                           
 24313                           ;mcc_generated_files/mcc.c: 94:     PMD1 = 0x00;
 24314  018EC8  6BC1               	clrf	193,b	;volatile
 24315                           
 24316                           ;mcc_generated_files/mcc.c: 96:     PMD2 = 0x00;
 24317  018ECA  6BC2               	clrf	194,b	;volatile
 24318                           
 24319                           ;mcc_generated_files/mcc.c: 98:     PMD3 = 0x00;
 24320  018ECC  6BC3               	clrf	195,b	;volatile
 24321                           
 24322                           ;mcc_generated_files/mcc.c: 100:     PMD4 = 0x00;
 24323  018ECE  6BC4               	clrf	196,b	;volatile
 24324                           
 24325                           ;mcc_generated_files/mcc.c: 102:     PMD5 = 0x00;
 24326  018ED0  6BC5               	clrf	197,b	;volatile
 24327                           
 24328                           ;mcc_generated_files/mcc.c: 104:     PMD6 = 0x00;
 24329  018ED2  6BC6               	clrf	198,b	;volatile
 24330                           
 24331                           ;mcc_generated_files/mcc.c: 106:     PMD7 = 0x00;
 24332  018ED4  6BC7               	clrf	199,b	;volatile
 24333                           
 24334                           ; BSR set to: 57
 24335                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 24336  018ED6  0012               	return		;funcret
 24337  018ED8                     __end_of_PMD_Initialize:
 24338                           	opt callstack 0
 24339                           
 24340 ;; *************** function _PIN_MANAGER_Initialize *****************
 24341 ;; Defined at:
 24342 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 24343 ;; Parameters:    Size  Location     Type
 24344 ;;		None
 24345 ;; Auto vars:     Size  Location     Type
 24346 ;;		None
 24347 ;; Return value:  Size  Location     Type
 24348 ;;                  1  [STACK] void 
 24349 ;; Registers used:
 24350 ;;		wreg, status,2
 24351 ;; Tracked objects:
 24352 ;;		On entry : 3F/39
 24353 ;;		On exit  : 3F/3A
 24354 ;;		Unchanged: 0/0
 24355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24360 ;;Total ram usage:        0 bytes
 24361 ;; Hardware stack levels used:    1
 24362 ;; Hardware stack levels required when called:    6
 24363 ;; This function calls:
 24364 ;;		Nothing
 24365 ;; This function is called by:
 24366 ;;		_SYSTEM_Initialize
 24367 ;; This function uses a reentrant model
 24368 ;;
 24369                           
 24370                           	psect	text107
 24371  017B00                     __ptext107:
 24372                           	opt callstack 0
 24373  017B00                     _PIN_MANAGER_Initialize:
 24374                           	opt callstack 23
 24375                           
 24376                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 24377                           
 24378                           ; BSR set to: 57
 24379                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24380                           ;incstack = 0
 24381  017B00  0E07               	movlw	7
 24382  017B02  6EBE               	movwf	190,c	;volatile
 24383                           
 24384                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 24385  017B04  0E80               	movlw	128
 24386  017B06  6EBD               	movwf	189,c	;volatile
 24387                           
 24388                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 24389  017B08  6ABA               	clrf	186,c	;volatile
 24390                           
 24391                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 24392  017B0A  6ABF               	clrf	191,c	;volatile
 24393                           
 24394                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 24395  017B0C  6ABB               	clrf	187,c	;volatile
 24396                           
 24397                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 24398  017B0E  0E07               	movlw	7
 24399  017B10  6EBC               	movwf	188,c	;volatile
 24400                           
 24401                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 24402  017B12  6AC6               	clrf	198,c	;volatile
 24403                           
 24404                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 24405  017B14  0E0F               	movlw	15
 24406  017B16  6EC7               	movwf	199,c	;volatile
 24407                           
 24408                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 24409  017B18  68C2               	setf	194,c	;volatile
 24410                           
 24411                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 24412  017B1A  0EBF               	movlw	191
 24413  017B1C  6EC3               	movwf	195,c	;volatile
 24414                           
 24415                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 24416  017B1E  0E90               	movlw	144
 24417  017B20  6EC4               	movwf	196,c	;volatile
 24418                           
 24419                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 24420  017B22  0E0C               	movlw	12
 24421  017B24  6EC5               	movwf	197,c	;volatile
 24422                           
 24423                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 24424  017B26  013A               	movlb	58	; () banked
 24425  017B28  6B70               	clrf	112,b	;volatile
 24426                           
 24427                           ; BSR set to: 58
 24428                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 24429  017B2A  6B60               	clrf	96,b	;volatile
 24430                           
 24431                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 24432  017B2C  0E3C               	movlw	60
 24433  017B2E  6F50               	movwf	80,b	;volatile
 24434                           
 24435                           ; BSR set to: 58
 24436                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 24437  017B30  6B80               	clrf	128,b	;volatile
 24438                           
 24439                           ; BSR set to: 58
 24440                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 24441  017B32  6B90               	clrf	144,b	;volatile
 24442                           
 24443                           ; BSR set to: 58
 24444                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 24445  017B34  6940               	setf	64,b	;volatile
 24446                           
 24447                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 24448  017B36  0E0C               	movlw	12
 24449  017B38  6F71               	movwf	113,b	;volatile
 24450                           
 24451                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 24452  017B3A  0E0F               	movlw	15
 24453  017B3C  6F91               	movwf	145,b	;volatile
 24454                           
 24455                           ; BSR set to: 58
 24456                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 24457  017B3E  6B81               	clrf	129,b	;volatile
 24458                           
 24459                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 24460  017B40  0E83               	movlw	131
 24461  017B42  6F51               	movwf	81,b	;volatile
 24462                           
 24463                           ; BSR set to: 58
 24464                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 24465  017B44  6B41               	clrf	65,b	;volatile
 24466                           
 24467                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 24468  017B46  0E97               	movlw	151
 24469  017B48  6F61               	movwf	97,b	;volatile
 24470                           
 24471                           ; BSR set to: 58
 24472                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 24473  017B4A  6B82               	clrf	130,b	;volatile
 24474                           
 24475                           ; BSR set to: 58
 24476                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 24477  017B4C  6B92               	clrf	146,b	;volatile
 24478                           
 24479                           ; BSR set to: 58
 24480                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 24481  017B4E  6B42               	clrf	66,b	;volatile
 24482                           
 24483                           ; BSR set to: 58
 24484                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 24485  017B50  6B52               	clrf	82,b	;volatile
 24486                           
 24487                           ; BSR set to: 58
 24488                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 24489  017B52  6B62               	clrf	98,b	;volatile
 24490                           
 24491                           ; BSR set to: 58
 24492                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 24493  017B54  6B72               	clrf	114,b	;volatile
 24494                           
 24495                           ; BSR set to: 58
 24496                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 24497  017B56  6943               	setf	67,b	;volatile
 24498                           
 24499                           ; BSR set to: 58
 24500                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 24501  017B58  6953               	setf	83,b	;volatile
 24502                           
 24503                           ; BSR set to: 58
 24504                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 24505  017B5A  6963               	setf	99,b	;volatile
 24506                           
 24507                           ; BSR set to: 58
 24508                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 24509  017B5C  6973               	setf	115,b	;volatile
 24510                           
 24511                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 24512  017B5E  0E07               	movlw	7
 24513  017B60  6F83               	movwf	131,b	;volatile
 24514                           
 24515                           ; BSR set to: 58
 24516                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 24517  017B62  6993               	setf	147,b	;volatile
 24518                           
 24519                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 24520  017B64  0E0F               	movlw	15
 24521  017B66  6FE8               	movwf	232,b	;volatile
 24522                           
 24523                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 24524  017B68  0E13               	movlw	19
 24525  017B6A  6FDE               	movwf	222,b	;volatile
 24526                           
 24527                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 24528  017B6C  0E16               	movlw	22
 24529  017B6E  6F0E               	movwf	14,b	;volatile
 24530                           
 24531                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 24532  017B70  0E1E               	movlw	30
 24533  017B72  6F13               	movwf	19,b	;volatile
 24534                           
 24535                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 24536  017B74  0E08               	movlw	8
 24537  017B76  6FC0               	movwf	192,b	;volatile
 24538                           
 24539                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 24540  017B78  0E10               	movlw	16
 24541  017B7A  6F19               	movwf	25,b	;volatile
 24542                           
 24543                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 24544  017B7C  0E09               	movlw	9
 24545  017B7E  6FC1               	movwf	193,b	;volatile
 24546                           
 24547                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 24548  017B80  0E1F               	movlw	31
 24549  017B82  6F15               	movwf	21,b	;volatile
 24550                           
 24551                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 24552  017B84  0E13               	movlw	19
 24553  017B86  6F16               	movwf	22,b	;volatile
 24554                           
 24555                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 24556  017B88  0E17               	movlw	23
 24557  017B8A  6FE5               	movwf	229,b	;volatile
 24558                           
 24559                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 24560  017B8C  0E14               	movlw	20
 24561  017B8E  6FDF               	movwf	223,b	;volatile
 24562                           
 24563                           ; BSR set to: 58
 24564                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 24565  017B90  0012               	return		;funcret
 24566  017B92                     __end_of_PIN_MANAGER_Initialize:
 24567                           	opt callstack 0
 24568                           
 24569 ;; *************** function _OSCILLATOR_Initialize *****************
 24570 ;; Defined at:
 24571 ;;		line 71 in file "mcc_generated_files/mcc.c"
 24572 ;; Parameters:    Size  Location     Type
 24573 ;;		None
 24574 ;; Auto vars:     Size  Location     Type
 24575 ;;		None
 24576 ;; Return value:  Size  Location     Type
 24577 ;;                  1  [STACK] void 
 24578 ;; Registers used:
 24579 ;;		wreg, status,2
 24580 ;; Tracked objects:
 24581 ;;		On entry : 3F/3A
 24582 ;;		On exit  : 3F/39
 24583 ;;		Unchanged: 0/0
 24584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24589 ;;Total ram usage:        0 bytes
 24590 ;; Hardware stack levels used:    1
 24591 ;; Hardware stack levels required when called:    6
 24592 ;; This function calls:
 24593 ;;		Nothing
 24594 ;; This function is called by:
 24595 ;;		_SYSTEM_Initialize
 24596 ;; This function uses a reentrant model
 24597 ;;
 24598                           
 24599                           	psect	text108
 24600  018EAE                     __ptext108:
 24601                           	opt callstack 0
 24602  018EAE                     _OSCILLATOR_Initialize:
 24603                           	opt callstack 23
 24604                           
 24605                           ;mcc_generated_files/mcc.c: 74:     OSCCON1 = 0x20;
 24606                           
 24607                           ; BSR set to: 58
 24608                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24609                           ;incstack = 0
 24610  018EAE  0E20               	movlw	32
 24611  018EB0  0139               	movlb	57	; () banked
 24612  018EB2  6FD9               	movwf	217,b	;volatile
 24613                           
 24614                           ; BSR set to: 57
 24615                           ;mcc_generated_files/mcc.c: 76:     OSCCON3 = 0x00;
 24616  018EB4  6BDB               	clrf	219,b	;volatile
 24617                           
 24618                           ; BSR set to: 57
 24619                           ;mcc_generated_files/mcc.c: 78:     OSCEN = 0x00;
 24620  018EB6  6BDD               	clrf	221,b	;volatile
 24621                           
 24622                           ;mcc_generated_files/mcc.c: 80:     OSCFRQ = 0x02;
 24623  018EB8  0E02               	movlw	2
 24624  018EBA  6FDF               	movwf	223,b	;volatile
 24625                           
 24626                           ; BSR set to: 57
 24627                           ;mcc_generated_files/mcc.c: 82:     OSCTUNE = 0x00;
 24628  018EBC  6BDE               	clrf	222,b	;volatile
 24629  018EBE                     l171:
 24630                           
 24631                           ; BSR set to: 57
 24632                           ;mcc_generated_files/mcc.c: 84:     while(PLLR == 0)
 24633  018EBE  B1DC               	btfsc	220,0,b	;volatile
 24634  018EC0  0012               	return	
 24635  018EC2  D7FD               	goto	l171
 24636  018EC4                     __end_of_OSCILLATOR_Initialize:
 24637                           	opt callstack 0
 24638                           
 24639 ;; *************** function _INTERRUPT_Initialize *****************
 24640 ;; Defined at:
 24641 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 24642 ;; Parameters:    Size  Location     Type
 24643 ;;		None
 24644 ;; Auto vars:     Size  Location     Type
 24645 ;;  state           1  [STACK] _Bool 
 24646 ;; Return value:  Size  Location     Type
 24647 ;;                  1  [STACK] void 
 24648 ;; Registers used:
 24649 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 24650 ;; Tracked objects:
 24651 ;;		On entry : 0/0
 24652 ;;		On exit  : 3F/39
 24653 ;;		Unchanged: 0/0
 24654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24659 ;;Total ram usage:        0 bytes
 24660 ;; Hardware stack levels used:    1
 24661 ;; Hardware stack levels required when called:    6
 24662 ;; This function calls:
 24663 ;;		Nothing
 24664 ;; This function is called by:
 24665 ;;		_SYSTEM_Initialize
 24666 ;; This function uses a reentrant model
 24667 ;;
 24668                           
 24669                           	psect	text109
 24670  017F6C                     __ptext109:
 24671                           	opt callstack 0
 24672  017F6C                     _INTERRUPT_Initialize:
 24673                           	opt callstack 0
 24674                           
 24675                           ; BSR set to: 57
 24676                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24677  017F6C  52E6               	movf	postinc1,f,c
 24678                           
 24679                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 24680                           
 24681                           ;incstack = 0
 24682  017F6E  8AD2               	bsf	210,5,c	;volatile
 24683                           
 24684                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 24685  017F70  AED2               	btfss	16338,7,c	;volatile
 24686  017F72  D003               	goto	u8080
 24687  017F74  6A3D               	clrf	(btemp+11)^0,c
 24688  017F76  2A3D               	incf	(btemp+11)^0,f,c
 24689  017F78  D001               	goto	u8098
 24690  017F7A                     u8080:
 24691  017F7A  6A3D               	clrf	(btemp+11)^0,c
 24692  017F7C                     u8098:
 24693                           
 24694                           ;stkvar	_state @ sp[(-1)+0]
 24695  017F7C  0EFF               	movlw	-1
 24696  017F7E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 24697                           
 24698                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 24699  017F84  9ED2               	bcf	16338,7,c	;volatile
 24700                           
 24701                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 24702  017F86  0E55               	movlw	85
 24703  017F88  6ED4               	movwf	212,c	;volatile
 24704                           
 24705                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 24706  017F8A  0EAA               	movlw	170
 24707  017F8C  6ED4               	movwf	212,c	;volatile
 24708                           
 24709                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 24710  017F8E  90D4               	bcf	212,0,c	;volatile
 24711                           
 24712                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 24713  017F90  0138               	movlb	56	; () banked
 24714  017F92  6B9F               	clrf	159,b	;volatile
 24715                           
 24716                           ; BSR set to: 56
 24717                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 24718  017F94  6B9E               	clrf	158,b	;volatile
 24719                           
 24720                           ; BSR set to: 56
 24721                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 24722  017F96  0E08               	movlw	8
 24723  017F98  6F9D               	movwf	157,b	;volatile
 24724                           
 24725                           ; BSR set to: 56
 24726                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 24727  017F9A  0E55               	movlw	85
 24728  017F9C  6ED4               	movwf	212,c	;volatile
 24729                           
 24730                           ; BSR set to: 56
 24731                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 24732  017F9E  0EAA               	movlw	170
 24733  017FA0  6ED4               	movwf	212,c	;volatile
 24734                           
 24735                           ; BSR set to: 56
 24736                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 24737  017FA2  80D4               	bsf	212,0,c	;volatile
 24738                           
 24739                           ; BSR set to: 56
 24740                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 24741                           ;stkvar	_state @ sp[(-1)+0]
 24742  017FA4  0EFF               	movlw	-1
 24743  017FA6  B0E3               	btfsc	plusw1,0,c
 24744  017FA8  D002               	bra	u8105
 24745  017FAA  9ED2               	bcf	16338,7,c	;volatile
 24746  017FAC  D001               	bra	u8106
 24747  017FAE                     u8105:
 24748  017FAE  8ED2               	bsf	16338,7,c	;volatile
 24749  017FB0                     u8106:
 24750                           
 24751                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 24752  017FB0  0139               	movlb	57	; () banked
 24753  017FB2  8782               	bsf	130,3,b	;volatile
 24754                           
 24755                           ; BSR set to: 57
 24756                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 24757  017FB4  8382               	bsf	130,1,b	;volatile
 24758                           
 24759                           ; BSR set to: 57
 24760                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 24761  017FB6  8182               	bsf	130,0,b	;volatile
 24762                           
 24763                           ; BSR set to: 57
 24764                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 24765  017FB8  8582               	bsf	130,2,b	;volatile
 24766                           
 24767                           ; BSR set to: 57
 24768                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 24769  017FBA  8786               	bsf	134,3,b	;volatile
 24770                           
 24771                           ; BSR set to: 57
 24772                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 24773  017FBC  8586               	bsf	134,2,b	;volatile
 24774                           
 24775                           ; BSR set to: 57
 24776                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 24777  017FBE  8983               	bsf	131,4,b	;volatile
 24778                           
 24779                           ; BSR set to: 57
 24780                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 24781  017FC0  8783               	bsf	131,3,b	;volatile
 24782                           
 24783                           ; BSR set to: 57
 24784                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 24785  017FC2  8181               	bsf	129,0,b	;volatile
 24786                           
 24787                           ; BSR set to: 57
 24788                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 0;
 24789  017FC4  9185               	bcf	133,0,b	;volatile
 24790                           
 24791                           ; BSR set to: 57
 24792                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR9bits.TMR6IP = 1;
 24793  017FC6  8189               	bsf	137,0,b	;volatile
 24794                           
 24795                           ; BSR set to: 57
 24796                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR8bits.TMR5IP = 0;
 24797  017FC8  9D88               	bcf	136,6,b	;volatile
 24798                           
 24799                           ; BSR set to: 57
 24800                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 24801  017FCA  8581               	bsf	129,2,b	;volatile
 24802                           
 24803                           ; BSR set to: 57
 24804                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 24805  017FCC  8781               	bsf	129,3,b	;volatile
 24806                           
 24807                           ; BSR set to: 57
 24808                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 24809  017FCE  52E5               	movf	postdec1,f,c
 24810  017FD0  0012               	return		;funcret
 24811  017FD2                     __end_of_INTERRUPT_Initialize:
 24812                           	opt callstack 0
 24813                           
 24814 ;; *************** function _FVR_Initialize *****************
 24815 ;; Defined at:
 24816 ;;		line 58 in file "mcc_generated_files/fvr.c"
 24817 ;; Parameters:    Size  Location     Type
 24818 ;;		None
 24819 ;; Auto vars:     Size  Location     Type
 24820 ;;		None
 24821 ;; Return value:  Size  Location     Type
 24822 ;;                  1  [STACK] void 
 24823 ;; Registers used:
 24824 ;;		wreg, status,2
 24825 ;; Tracked objects:
 24826 ;;		On entry : 3F/39
 24827 ;;		On exit  : 3F/3E
 24828 ;;		Unchanged: 0/0
 24829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24834 ;;Total ram usage:        0 bytes
 24835 ;; Hardware stack levels used:    1
 24836 ;; Hardware stack levels required when called:    6
 24837 ;; This function calls:
 24838 ;;		Nothing
 24839 ;; This function is called by:
 24840 ;;		_SYSTEM_Initialize
 24841 ;; This function uses a reentrant model
 24842 ;;
 24843                           
 24844                           	psect	text110
 24845  018F82                     __ptext110:
 24846                           	opt callstack 0
 24847  018F82                     _FVR_Initialize:
 24848                           	opt callstack 23
 24849                           
 24850                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 24851                           
 24852                           ; BSR set to: 57
 24853                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24854                           ;incstack = 0
 24855  018F82  0EAF               	movlw	175
 24856  018F84  013E               	movlb	62	; () banked
 24857  018F86  6FC1               	movwf	193,b	;volatile
 24858                           
 24859                           ; BSR set to: 62
 24860                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 24861  018F88  0012               	return		;funcret
 24862  018F8A                     __end_of_FVR_Initialize:
 24863                           	opt callstack 0
 24864                           
 24865 ;; *************** function _EXT_INT_Initialize *****************
 24866 ;; Defined at:
 24867 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 24868 ;; Parameters:    Size  Location     Type
 24869 ;;		None
 24870 ;; Auto vars:     Size  Location     Type
 24871 ;;		None
 24872 ;; Return value:  Size  Location     Type
 24873 ;;                  1  [STACK] void 
 24874 ;; Registers used:
 24875 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24876 ;; Tracked objects:
 24877 ;;		On entry : 3F/3F
 24878 ;;		On exit  : 3F/39
 24879 ;;		Unchanged: 0/0
 24880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24885 ;;Total ram usage:        0 bytes
 24886 ;; Hardware stack levels used:    1
 24887 ;; Hardware stack levels required when called:    7
 24888 ;; This function calls:
 24889 ;;		_INT0_SetInterruptHandler
 24890 ;;		_INT1_SetInterruptHandler
 24891 ;; This function is called by:
 24892 ;;		_SYSTEM_Initialize
 24893 ;; This function uses a reentrant model
 24894 ;;
 24895                           
 24896                           	psect	text111
 24897  01876E                     __ptext111:
 24898                           	opt callstack 0
 24899  01876E                     _EXT_INT_Initialize:
 24900                           	opt callstack 22
 24901                           
 24902                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 24903                           
 24904                           ; BSR set to: 62
 24905                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24906                           ;incstack = 0
 24907  01876E  0139               	movlb	57	; () banked
 24908  018770  91A1               	bcf	161,0,b	;volatile
 24909                           
 24910                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 24911  018772  90D2               	bcf	210,0,c	;volatile
 24912                           
 24913                           ; BSR set to: 57
 24914                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 24915  018774  0EA4               	movlw	low _INT0_DefaultInterruptHandler
 24916  018776  6EE6               	movwf	postinc1,c
 24917  018778  0E8F               	movlw	high _INT0_DefaultInterruptHandler
 24918  01877A  6EE6               	movwf	postinc1,c
 24919  01877C  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 24920  01877E  6EE6               	movwf	postinc1,c
 24921  018780  EC7B  F0C5         	call	_INT0_SetInterruptHandler	;wreg free
 24922                           
 24923                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 24924  018784  0139               	movlb	57	; () banked
 24925  018786  8191               	bsf	145,0,b	;volatile
 24926                           
 24927                           ; BSR set to: 57
 24928                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 24929  018788  91A5               	bcf	165,0,b	;volatile
 24930                           
 24931                           ; BSR set to: 57
 24932                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 24933  01878A  92D2               	bcf	210,1,c	;volatile
 24934                           
 24935                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 24936  01878C  0EA2               	movlw	low _INT1_DefaultInterruptHandler
 24937  01878E  6EE6               	movwf	postinc1,c
 24938  018790  0E8F               	movlw	high _INT1_DefaultInterruptHandler
 24939  018792  6EE6               	movwf	postinc1,c
 24940  018794  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 24941  018796  6EE6               	movwf	postinc1,c
 24942  018798  EC67  F0C5         	call	_INT1_SetInterruptHandler	;wreg free
 24943                           
 24944                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 24945  01879C  0139               	movlb	57	; () banked
 24946  01879E  8195               	bsf	149,0,b	;volatile
 24947                           
 24948                           ; BSR set to: 57
 24949                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 24950  0187A0  0012               	return		;funcret
 24951  0187A2                     __end_of_EXT_INT_Initialize:
 24952                           	opt callstack 0
 24953                           
 24954 ;; *************** function _INT1_SetInterruptHandler *****************
 24955 ;; Defined at:
 24956 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 24957 ;; Parameters:    Size  Location     Type
 24958 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24959 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 24960 ;; Auto vars:     Size  Location     Type
 24961 ;;		None
 24962 ;; Return value:  Size  Location     Type
 24963 ;;                  1  [STACK] void 
 24964 ;; Registers used:
 24965 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24966 ;; Tracked objects:
 24967 ;;		On entry : 3F/39
 24968 ;;		On exit  : 0/0
 24969 ;;		Unchanged: 0/0
 24970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24975 ;;Total ram usage:        0 bytes
 24976 ;; Hardware stack levels used:    1
 24977 ;; Hardware stack levels required when called:    6
 24978 ;; This function calls:
 24979 ;;		Nothing
 24980 ;; This function is called by:
 24981 ;;		_EXT_INT_Initialize
 24982 ;;		_start_switch_handler
 24983 ;; This function uses a reentrant model
 24984 ;;
 24985                           
 24986                           	psect	text112
 24987  018ACE                     __ptext112:
 24988                           	opt callstack 0
 24989  018ACE                     _INT1_SetInterruptHandler:
 24990                           	opt callstack 23
 24991                           
 24992                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 24993                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24994                           
 24995                           ; BSR set to: 57
 24996                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24997                           ;incstack = 0
 24998  018ACE  50E1               	movf	fsr1l,w,c
 24999  018AD0  0FFD               	addlw	-3
 25000  018AD2  6ED9               	movwf	fsr2l,c
 25001  018AD4  50E2               	movf	fsr1h,w,c
 25002  018AD6  6EDA               	movwf	fsr2h,c
 25003  018AD8  0EFF               	movlw	255
 25004  018ADA  22DA               	addwfc	fsr2h,f,c
 25005  018ADC  006F FF78  F013    	movff	postinc2,_INT1_InterruptHandler
 25006  018AE2  006F FF78  F014    	movff	postinc2,_INT1_InterruptHandler+1
 25007  018AE8  006F FF74  F015    	movff	postdec2,_INT1_InterruptHandler+2
 25008                           
 25009                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 25010  018AEE  52E5               	movf	postdec1,f,c
 25011  018AF0  52E5               	movf	postdec1,f,c
 25012  018AF2  52E5               	movf	postdec1,f,c
 25013  018AF4  0012               	return		;funcret
 25014  018AF6                     __end_of_INT1_SetInterruptHandler:
 25015                           	opt callstack 0
 25016                           
 25017 ;; *************** function _INT0_SetInterruptHandler *****************
 25018 ;; Defined at:
 25019 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 25020 ;; Parameters:    Size  Location     Type
 25021 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25022 ;;		 -> INT0_DefaultInterruptHandler(1), 
 25023 ;; Auto vars:     Size  Location     Type
 25024 ;;		None
 25025 ;; Return value:  Size  Location     Type
 25026 ;;                  1  [STACK] void 
 25027 ;; Registers used:
 25028 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25029 ;; Tracked objects:
 25030 ;;		On entry : 3F/39
 25031 ;;		On exit  : 0/0
 25032 ;;		Unchanged: 0/0
 25033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25038 ;;Total ram usage:        0 bytes
 25039 ;; Hardware stack levels used:    1
 25040 ;; Hardware stack levels required when called:    6
 25041 ;; This function calls:
 25042 ;;		Nothing
 25043 ;; This function is called by:
 25044 ;;		_EXT_INT_Initialize
 25045 ;; This function uses a reentrant model
 25046 ;;
 25047                           
 25048                           	psect	text113
 25049  018AF6                     __ptext113:
 25050                           	opt callstack 0
 25051  018AF6                     _INT0_SetInterruptHandler:
 25052                           	opt callstack 22
 25053                           
 25054                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 25055                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25056                           
 25057                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25058                           ;incstack = 0
 25059  018AF6  50E1               	movf	fsr1l,w,c
 25060  018AF8  0FFD               	addlw	-3
 25061  018AFA  6ED9               	movwf	fsr2l,c
 25062  018AFC  50E2               	movf	fsr1h,w,c
 25063  018AFE  6EDA               	movwf	fsr2h,c
 25064  018B00  0EFF               	movlw	255
 25065  018B02  22DA               	addwfc	fsr2h,f,c
 25066  018B04  006F FF78  F016    	movff	postinc2,_INT0_InterruptHandler
 25067  018B0A  006F FF78  F017    	movff	postinc2,_INT0_InterruptHandler+1
 25068  018B10  006F FF74  F018    	movff	postdec2,_INT0_InterruptHandler+2
 25069                           
 25070                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 25071  018B16  52E5               	movf	postdec1,f,c
 25072  018B18  52E5               	movf	postdec1,f,c
 25073  018B1A  52E5               	movf	postdec1,f,c
 25074  018B1C  0012               	return		;funcret
 25075  018B1E                     __end_of_INT0_SetInterruptHandler:
 25076                           	opt callstack 0
 25077                           
 25078 ;; *************** function _DMA2_Initialize *****************
 25079 ;; Defined at:
 25080 ;;		line 61 in file "mcc_generated_files/dma2.c"
 25081 ;; Parameters:    Size  Location     Type
 25082 ;;		None
 25083 ;; Auto vars:     Size  Location     Type
 25084 ;;		None
 25085 ;; Return value:  Size  Location     Type
 25086 ;;                  1  [STACK] void 
 25087 ;; Registers used:
 25088 ;;		wreg, status,2
 25089 ;; Tracked objects:
 25090 ;;		On entry : 3F/3D
 25091 ;;		On exit  : 3F/3B
 25092 ;;		Unchanged: 0/0
 25093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25098 ;;Total ram usage:        0 bytes
 25099 ;; Hardware stack levels used:    1
 25100 ;; Hardware stack levels required when called:    6
 25101 ;; This function calls:
 25102 ;;		Nothing
 25103 ;; This function is called by:
 25104 ;;		_SYSTEM_Initialize
 25105 ;; This function uses a reentrant model
 25106 ;;
 25107                           
 25108                           	psect	text114
 25109  018272                     __ptext114:
 25110                           	opt callstack 0
 25111  018272                     _DMA2_Initialize:
 25112                           	opt callstack 23
 25113                           
 25114                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 25115                           
 25116                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25117                           ;incstack = 0
 25118  018272  0E00               	movlw	0
 25119  018274  013B               	movlb	59	; () banked
 25120  018276  6FD9               	movwf	217,b	;volatile
 25121  018278  0E10               	movlw	16
 25122  01827A  6FDA               	movwf	218,b	;volatile
 25123  01827C  0E00               	movlw	0
 25124  01827E  6FDB               	movwf	219,b	;volatile
 25125                           
 25126                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 25127  018280  0E3F               	movlw	63
 25128  018282  6FD1               	movwf	209,b	;volatile
 25129  018284  0EBB               	movlw	187
 25130  018286  6FD0               	movwf	208,b	;volatile
 25131                           
 25132                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 25133  018288  0E03               	movlw	3
 25134  01828A  6FDD               	movwf	221,b	;volatile
 25135                           
 25136                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 25137  01828C  0E00               	movlw	0
 25138  01828E  6FD8               	movwf	216,b	;volatile
 25139  018290  0E01               	movlw	1
 25140  018292  6FD7               	movwf	215,b	;volatile
 25141                           
 25142                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 25143  018294  0E00               	movlw	0
 25144  018296  6FCF               	movwf	207,b	;volatile
 25145  018298  0E01               	movlw	1
 25146  01829A  6FCE               	movwf	206,b	;volatile
 25147                           
 25148                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 25149  01829C  0E46               	movlw	70
 25150  01829E  6FDF               	movwf	223,b	;volatile
 25151                           
 25152                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 25153  0182A0  0E3D               	movlw	61
 25154  0182A2  6FDE               	movwf	222,b	;volatile
 25155                           
 25156                           ; BSR set to: 59
 25157                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 25158  0182A4  0139               	movlb	57	; () banked
 25159  0182A6  97A5               	bcf	165,3,b	;volatile
 25160                           
 25161                           ; BSR set to: 57
 25162                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 25163  0182A8  95A5               	bcf	165,2,b	;volatile
 25164                           
 25165                           ; BSR set to: 57
 25166                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 25167  0182AA  9BA5               	bcf	165,5,b	;volatile
 25168                           
 25169                           ; BSR set to: 57
 25170                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 25171  0182AC  99A5               	bcf	165,4,b	;volatile
 25172                           
 25173                           ; BSR set to: 57
 25174                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 25175  0182AE  9795               	bcf	149,3,b	;volatile
 25176                           
 25177                           ; BSR set to: 57
 25178                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 25179  0182B0  9595               	bcf	149,2,b	;volatile
 25180                           
 25181                           ; BSR set to: 57
 25182                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 25183  0182B2  9B95               	bcf	149,5,b	;volatile
 25184                           
 25185                           ; BSR set to: 57
 25186                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 25187  0182B4  9995               	bcf	149,4,b	;volatile
 25188  0182B6  9ED2               	bcf	16338,7,c	;# 
 25189  0182B8  0139               	banksel	14831	;# 
 25190  0182BA  0E55               	movlw	85	;# 
 25191  0182BC  6FEF               	movwf	14831,b	;# 
 25192  0182BE  0EAA               	movlw	170	;# 
 25193  0182C0  6FEF               	movwf	14831,b	;# 
 25194  0182C2  81EF               	bsf	14831,0,b	;# 
 25195  0182C4  8ED2               	bsf	16338,7,c	;# 
 25196                           
 25197                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 25198  0182C6  013B               	movlb	59	; () banked
 25199  0182C8  6BDC               	clrf	220,b	;volatile
 25200                           
 25201                           ; BSR set to: 59
 25202                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25203  0182CA  0012               	return		;funcret
 25204  0182CC                     __end_of_DMA2_Initialize:
 25205                           	opt callstack 0
 25206                           
 25207 ;; *************** function _DMA1_Initialize *****************
 25208 ;; Defined at:
 25209 ;;		line 86 in file "mcc_generated_files/dma1.c"
 25210 ;; Parameters:    Size  Location     Type
 25211 ;;		None
 25212 ;; Auto vars:     Size  Location     Type
 25213 ;;		None
 25214 ;; Return value:  Size  Location     Type
 25215 ;;                  1  [STACK] void 
 25216 ;; Registers used:
 25217 ;;		wreg, status,2
 25218 ;; Tracked objects:
 25219 ;;		On entry : 3F/3B
 25220 ;;		On exit  : 3F/3B
 25221 ;;		Unchanged: 0/0
 25222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25227 ;;Total ram usage:        0 bytes
 25228 ;; Hardware stack levels used:    1
 25229 ;; Hardware stack levels required when called:    6
 25230 ;; This function calls:
 25231 ;;		Nothing
 25232 ;; This function is called by:
 25233 ;;		_SYSTEM_Initialize
 25234 ;; This function uses a reentrant model
 25235 ;;
 25236                           
 25237                           	psect	text115
 25238  017E30                     __ptext115:
 25239                           	opt callstack 0
 25240  017E30                     _DMA1_Initialize:
 25241                           	opt callstack 23
 25242                           
 25243                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 25244                           
 25245                           ; BSR set to: 59
 25246                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25247                           ;incstack = 0
 25248  017E30  0E00               	movlw	0
 25249  017E32  013B               	movlb	59	; () banked
 25250  017E34  6FF9               	movwf	249,b	;volatile
 25251  017E36  0E10               	movlw	16
 25252  017E38  6FFA               	movwf	250,b	;volatile
 25253  017E3A  0E00               	movlw	0
 25254  017E3C  6FFB               	movwf	251,b	;volatile
 25255                           
 25256                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 25257  017E3E  0E3D               	movlw	61
 25258  017E40  6FF1               	movwf	241,b	;volatile
 25259  017E42  0E11               	movlw	17
 25260  017E44  6FF0               	movwf	240,b	;volatile
 25261                           
 25262                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 25263  017E46  0E03               	movlw	3
 25264  017E48  6FFD               	movwf	253,b	;volatile
 25265                           
 25266                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 25267  017E4A  0E00               	movlw	0
 25268  017E4C  6FF8               	movwf	248,b	;volatile
 25269  017E4E  0E01               	movlw	1
 25270  017E50  6FF7               	movwf	247,b	;volatile
 25271                           
 25272                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 25273  017E52  0E00               	movlw	0
 25274  017E54  6FEF               	movwf	239,b	;volatile
 25275  017E56  0E01               	movlw	1
 25276  017E58  6FEE               	movwf	238,b	;volatile
 25277                           
 25278                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 25279  017E5A  0E15               	movlw	21
 25280  017E5C  6FFF               	movwf	255,b	;volatile
 25281                           
 25282                           ; BSR set to: 59
 25283                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 25284  017E5E  6BFE               	clrf	254,b	;volatile
 25285                           
 25286                           ; BSR set to: 59
 25287                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 25288  017E60  0139               	movlb	57	; () banked
 25289  017E62  93A2               	bcf	162,1,b	;volatile
 25290                           
 25291                           ; BSR set to: 57
 25292                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 25293  017E64  91A2               	bcf	162,0,b	;volatile
 25294                           
 25295                           ; BSR set to: 57
 25296                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 25297  017E66  97A2               	bcf	162,3,b	;volatile
 25298                           
 25299                           ; BSR set to: 57
 25300                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 25301  017E68  95A2               	bcf	162,2,b	;volatile
 25302                           
 25303                           ; BSR set to: 57
 25304                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 25305  017E6A  8392               	bsf	146,1,b	;volatile
 25306                           
 25307                           ; BSR set to: 57
 25308                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 25309  017E6C  8192               	bsf	146,0,b	;volatile
 25310                           
 25311                           ; BSR set to: 57
 25312                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 25313  017E6E  8792               	bsf	146,3,b	;volatile
 25314                           
 25315                           ; BSR set to: 57
 25316                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 25317  017E70  8592               	bsf	146,2,b	;volatile
 25318                           
 25319                           ; BSR set to: 57
 25320                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 25321  017E72  6BF1               	clrf	241,b	;volatile
 25322                           
 25323                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 25324  017E74  0E01               	movlw	1
 25325  017E76  6FF2               	movwf	242,b	;volatile
 25326                           
 25327                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 25328  017E78  0E04               	movlw	4
 25329  017E7A  6FF3               	movwf	243,b	;volatile
 25330                           
 25331                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 25332  017E7C  0E02               	movlw	2
 25333  017E7E  6FF4               	movwf	244,b	;volatile
 25334                           
 25335                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 25336  017E80  0E03               	movlw	3
 25337  017E82  6FF7               	movwf	247,b	;volatile
 25338  017E84  9ED2               	bcf	16338,7,c	;# 
 25339  017E86  0139               	banksel	14831	;# 
 25340  017E88  0E55               	movlw	85	;# 
 25341  017E8A  6FEF               	movwf	14831,b	;# 
 25342  017E8C  0EAA               	movlw	170	;# 
 25343  017E8E  6FEF               	movwf	14831,b	;# 
 25344  017E90  81EF               	bsf	14831,0,b	;# 
 25345  017E92  8ED2               	bsf	16338,7,c	;# 
 25346                           
 25347                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 25348  017E94  013B               	movlb	59	; () banked
 25349  017E96  6BFC               	clrf	252,b	;volatile
 25350                           
 25351                           ; BSR set to: 59
 25352                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25353  017E98  0012               	return		;funcret
 25354  017E9A                     __end_of_DMA1_Initialize:
 25355                           	opt callstack 0
 25356                           
 25357 ;; *************** function _CLKREF_Initialize *****************
 25358 ;; Defined at:
 25359 ;;		line 58 in file "mcc_generated_files/clkref.c"
 25360 ;; Parameters:    Size  Location     Type
 25361 ;;		None
 25362 ;; Auto vars:     Size  Location     Type
 25363 ;;		None
 25364 ;; Return value:  Size  Location     Type
 25365 ;;                  1  [STACK] void 
 25366 ;; Registers used:
 25367 ;;		wreg, status,2
 25368 ;; Tracked objects:
 25369 ;;		On entry : 3F/3B
 25370 ;;		On exit  : 3F/3C
 25371 ;;		Unchanged: 0/0
 25372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25377 ;;Total ram usage:        0 bytes
 25378 ;; Hardware stack levels used:    1
 25379 ;; Hardware stack levels required when called:    6
 25380 ;; This function calls:
 25381 ;;		Nothing
 25382 ;; This function is called by:
 25383 ;;		_SYSTEM_Initialize
 25384 ;; This function uses a reentrant model
 25385 ;;
 25386                           
 25387                           	psect	text116
 25388  018F36                     __ptext116:
 25389                           	opt callstack 0
 25390  018F36                     _CLKREF_Initialize:
 25391                           	opt callstack 23
 25392                           
 25393                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 25394                           
 25395                           ; BSR set to: 59
 25396                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25397                           ;incstack = 0
 25398  018F36  013C               	movlb	60	; () banked
 25399  018F38  6BE6               	clrf	230,b	;volatile
 25400                           
 25401                           ; BSR set to: 60
 25402                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 25403  018F3A  0E94               	movlw	148
 25404  018F3C  6FE5               	movwf	229,b	;volatile
 25405                           
 25406                           ; BSR set to: 60
 25407                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 25408  018F3E  0012               	return		;funcret
 25409  018F40                     __end_of_CLKREF_Initialize:
 25410                           	opt callstack 0
 25411                           
 25412 ;; *************** function _ADCC_Initialize *****************
 25413 ;; Defined at:
 25414 ;;		line 65 in file "mcc_generated_files/adcc.c"
 25415 ;; Parameters:    Size  Location     Type
 25416 ;;		None
 25417 ;; Auto vars:     Size  Location     Type
 25418 ;;		None
 25419 ;; Return value:  Size  Location     Type
 25420 ;;                  1  [STACK] void 
 25421 ;; Registers used:
 25422 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 25423 ;; Tracked objects:
 25424 ;;		On entry : 3F/3E
 25425 ;;		On exit  : 0/0
 25426 ;;		Unchanged: 0/0
 25427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25432 ;;Total ram usage:        0 bytes
 25433 ;; Hardware stack levels used:    1
 25434 ;; Hardware stack levels required when called:    7
 25435 ;; This function calls:
 25436 ;;		_ADCC_SetADIInterruptHandler
 25437 ;;		_ADCC_SetADTIInterruptHandler
 25438 ;; This function is called by:
 25439 ;;		_SYSTEM_Initialize
 25440 ;; This function uses a reentrant model
 25441 ;;
 25442                           
 25443                           	psect	text117
 25444  017E9A                     __ptext117:
 25445                           	opt callstack 0
 25446  017E9A                     _ADCC_Initialize:
 25447                           	opt callstack 22
 25448                           
 25449                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 25450                           
 25451                           ; BSR set to: 60
 25452                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25453                           ;incstack = 0
 25454  017E9A  013E               	movlb	62	; () banked
 25455  017E9C  6BDE               	clrf	222,b	;volatile
 25456                           
 25457                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 25458  017E9E  6BDF               	clrf	223,b	;volatile
 25459                           
 25460                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 25461  017EA0  6BE0               	clrf	224,b	;volatile
 25462                           
 25463                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 25464  017EA2  6BE1               	clrf	225,b	;volatile
 25465                           
 25466                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 25467  017EA4  6BE4               	clrf	228,b	;volatile
 25468                           
 25469                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 25470  017EA6  6BE5               	clrf	229,b	;volatile
 25471                           
 25472                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 25473  017EA8  6BEA               	clrf	234,b	;volatile
 25474                           
 25475                           ; BSR set to: 62
 25476                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 25477  017EAA  0E40               	movlw	64
 25478  017EAC  6FEC               	movwf	236,b	;volatile
 25479                           
 25480                           ; BSR set to: 62
 25481                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 25482  017EAE  6BF1               	clrf	241,b	;volatile
 25483                           
 25484                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 25485  017EB0  0E20               	movlw	32
 25486  017EB2  6FF3               	movwf	243,b	;volatile
 25487                           
 25488                           ; BSR set to: 62
 25489                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 25490  017EB4  6BF4               	clrf	244,b	;volatile
 25491                           
 25492                           ; BSR set to: 62
 25493                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 25494  017EB6  6BF5               	clrf	245,b	;volatile
 25495                           
 25496                           ; BSR set to: 62
 25497                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 25498  017EB8  6BF6               	clrf	246,b	;volatile
 25499                           
 25500                           ; BSR set to: 62
 25501                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 25502  017EBA  6BF7               	clrf	247,b	;volatile
 25503                           
 25504                           ; BSR set to: 62
 25505                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 25506  017EBC  6BF9               	clrf	249,b	;volatile
 25507                           
 25508                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 25509  017EBE  0E5B               	movlw	91
 25510  017EC0  6FFA               	movwf	250,b	;volatile
 25511                           
 25512                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 25513  017EC2  0E27               	movlw	39
 25514  017EC4  6FFB               	movwf	251,b	;volatile
 25515                           
 25516                           ; BSR set to: 62
 25517                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 25518  017EC6  6BFC               	clrf	252,b	;volatile
 25519                           
 25520                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 25521  017EC8  0E02               	movlw	2
 25522  017ECA  6FFD               	movwf	253,b	;volatile
 25523                           
 25524                           ; BSR set to: 62
 25525                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 25526  017ECC  6BFE               	clrf	254,b	;volatile
 25527                           
 25528                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 25529  017ECE  0E07               	movlw	7
 25530  017ED0  6FFF               	movwf	255,b	;volatile
 25531                           
 25532                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 25533  017ED2  0E84               	movlw	132
 25534  017ED4  6FF8               	movwf	248,b	;volatile
 25535                           
 25536                           ; BSR set to: 62
 25537                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 25538  017ED6  0139               	movlb	57	; () banked
 25539  017ED8  95A1               	bcf	161,2,b	;volatile
 25540                           
 25541                           ; BSR set to: 57
 25542                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 25543  017EDA  8591               	bsf	145,2,b	;volatile
 25544                           
 25545                           ; BSR set to: 57
 25546                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 25547  017EDC  0EA6               	movlw	low _ADCC_DefaultInterruptHandler
 25548  017EDE  6EE6               	movwf	postinc1,c
 25549  017EE0  0E8F               	movlw	high _ADCC_DefaultInterruptHandler
 25550  017EE2  6EE6               	movwf	postinc1,c
 25551  017EE4  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 25552  017EE6  6EE6               	movwf	postinc1,c
 25553  017EE8  ECA3  F0C5         	call	_ADCC_SetADIInterruptHandler	;wreg free
 25554                           
 25555                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 25556  017EEC  0139               	movlb	57	; () banked
 25557  017EEE  97A1               	bcf	161,3,b	;volatile
 25558                           
 25559                           ; BSR set to: 57
 25560                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 25561  017EF0  8791               	bsf	145,3,b	;volatile
 25562                           
 25563                           ; BSR set to: 57
 25564                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 25565  017EF2  0EA6               	movlw	low _ADCC_DefaultInterruptHandler
 25566  017EF4  6EE6               	movwf	postinc1,c
 25567  017EF6  0E8F               	movlw	high _ADCC_DefaultInterruptHandler
 25568  017EF8  6EE6               	movwf	postinc1,c
 25569  017EFA  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 25570  017EFC  6EE6               	movwf	postinc1,c
 25571  017EFE  EC8F  F0C5         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 25572                           
 25573                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25574  017F02  0012               	return		;funcret
 25575  017F04                     __end_of_ADCC_Initialize:
 25576                           	opt callstack 0
 25577                           
 25578 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 25579 ;; Defined at:
 25580 ;;		line 336 in file "mcc_generated_files/adcc.c"
 25581 ;; Parameters:    Size  Location     Type
 25582 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25583 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 25584 ;; Auto vars:     Size  Location     Type
 25585 ;;		None
 25586 ;; Return value:  Size  Location     Type
 25587 ;;                  1  [STACK] void 
 25588 ;; Registers used:
 25589 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25590 ;; Tracked objects:
 25591 ;;		On entry : 0/0
 25592 ;;		On exit  : 0/0
 25593 ;;		Unchanged: 0/0
 25594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25599 ;;Total ram usage:        0 bytes
 25600 ;; Hardware stack levels used:    1
 25601 ;; Hardware stack levels required when called:    6
 25602 ;; This function calls:
 25603 ;;		Nothing
 25604 ;; This function is called by:
 25605 ;;		_ADCC_Initialize
 25606 ;;		_start_adc_scan
 25607 ;; This function uses a reentrant model
 25608 ;;
 25609                           
 25610                           	psect	text118
 25611  018B1E                     __ptext118:
 25612                           	opt callstack 0
 25613  018B1E                     _ADCC_SetADTIInterruptHandler:
 25614                           	opt callstack 23
 25615                           
 25616                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 25617                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25618                           
 25619                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25620                           ;incstack = 0
 25621  018B1E  50E1               	movf	fsr1l,w,c
 25622  018B20  0FFD               	addlw	-3
 25623  018B22  6ED9               	movwf	fsr2l,c
 25624  018B24  50E2               	movf	fsr1h,w,c
 25625  018B26  6EDA               	movwf	fsr2h,c
 25626  018B28  0EFF               	movlw	255
 25627  018B2A  22DA               	addwfc	fsr2h,f,c
 25628  018B2C  006F FF78  F001    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 25629  018B32  006F FF78  F002    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 25630  018B38  006F FF74  F003    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 25631                           
 25632                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 25633  018B3E  52E5               	movf	postdec1,f,c
 25634  018B40  52E5               	movf	postdec1,f,c
 25635  018B42  52E5               	movf	postdec1,f,c
 25636  018B44  0012               	return		;funcret
 25637  018B46                     __end_of_ADCC_SetADTIInterruptHandler:
 25638                           	opt callstack 0
 25639                           
 25640 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 25641 ;; Defined at:
 25642 ;;		line 323 in file "mcc_generated_files/adcc.c"
 25643 ;; Parameters:    Size  Location     Type
 25644 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25645 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 25646 ;; Auto vars:     Size  Location     Type
 25647 ;;		None
 25648 ;; Return value:  Size  Location     Type
 25649 ;;                  1  [STACK] void 
 25650 ;; Registers used:
 25651 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25652 ;; Tracked objects:
 25653 ;;		On entry : 6/0
 25654 ;;		On exit  : 0/0
 25655 ;;		Unchanged: 0/0
 25656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25661 ;;Total ram usage:        0 bytes
 25662 ;; Hardware stack levels used:    1
 25663 ;; Hardware stack levels required when called:    6
 25664 ;; This function calls:
 25665 ;;		Nothing
 25666 ;; This function is called by:
 25667 ;;		_ADCC_Initialize
 25668 ;;		_start_adc_scan
 25669 ;; This function uses a reentrant model
 25670 ;;
 25671                           
 25672                           	psect	text119
 25673  018B46                     __ptext119:
 25674                           	opt callstack 0
 25675  018B46                     _ADCC_SetADIInterruptHandler:
 25676                           	opt callstack 23
 25677                           
 25678                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 25679                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25680                           
 25681                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25682                           ;incstack = 0
 25683  018B46  50E1               	movf	fsr1l,w,c
 25684  018B48  0FFD               	addlw	-3
 25685  018B4A  6ED9               	movwf	fsr2l,c
 25686  018B4C  50E2               	movf	fsr1h,w,c
 25687  018B4E  6EDA               	movwf	fsr2h,c
 25688  018B50  0EFF               	movlw	255
 25689  018B52  22DA               	addwfc	fsr2h,f,c
 25690  018B54  006F FF78  F004    	movff	postinc2,_ADCC_ADI_InterruptHandler
 25691  018B5A  006F FF78  F005    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 25692  018B60  006F FF74  F006    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 25693                           
 25694                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 25695  018B66  52E5               	movf	postdec1,f,c
 25696  018B68  52E5               	movf	postdec1,f,c
 25697  018B6A  52E5               	movf	postdec1,f,c
 25698  018B6C  0012               	return		;funcret
 25699  018B6E                     __end_of_ADCC_SetADIInterruptHandler:
 25700                           	opt callstack 0
 25701                           
 25702 ;; *************** function _INT1_ISR *****************
 25703 ;; Defined at:
 25704 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 25705 ;; Parameters:    Size  Location     Type
 25706 ;;		None
 25707 ;; Auto vars:     Size  Location     Type
 25708 ;;		None
 25709 ;; Return value:  Size  Location     Type
 25710 ;;                  1    wreg      void 
 25711 ;; Registers used:
 25712 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 25713 ;; Tracked objects:
 25714 ;;		On entry : 0/0
 25715 ;;		On exit  : 0/0
 25716 ;;		Unchanged: 0/0
 25717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25720 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25721 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25722 ;;Total ram usage:        4 bytes
 25723 ;; Hardware stack levels used:    1
 25724 ;; Hardware stack levels required when called:    5
 25725 ;; This function calls:
 25726 ;;		_INT1_CallBack
 25727 ;; This function is called by:
 25728 ;;		Interrupt level 1
 25729 ;; This function uses a non-reentrant model
 25730 ;;
 25731                           
 25732                           	psect	text120
 25733  01861C                     __ptext120:
 25734                           	opt callstack 0
 25735  01861C                     _INT1_ISR:
 25736                           	opt callstack 12
 25737                           
 25738                           ;incstack = 0
 25739  01861C  006F FF60  F0F6    	movff	status,??_INT1_ISR
 25740  018622  0060  F0C8  F0F7   	movff	btemp,??_INT1_ISR+1
 25741  018628  0060  F0F0  F0F8   	movff	btemp+10,??_INT1_ISR+2
 25742  01862E  0060  F0F4  F0F9   	movff	btemp+11,??_INT1_ISR+3
 25743  018634  EE16  F000         	lfsr	1,___intlo_sp
 25744                           
 25745                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 25746  018638  0139               	movlb	57	; () banked
 25747  01863A  91A5               	bcf	165,0,b	;volatile
 25748                           
 25749                           ; BSR set to: 57
 25750                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 25751  01863C  EC75  F0C6         	call	_INT1_CallBack	;wreg free
 25752  018640  0060  F3E4  F03D   	movff	??_INT1_ISR+3,btemp+11
 25753  018646  0060  F3E0  F03C   	movff	??_INT1_ISR+2,btemp+10
 25754  01864C  0060  F3DC  F032   	movff	??_INT1_ISR+1,btemp
 25755  018652  0060  F3DB  FFD8   	movff	??_INT1_ISR,status
 25756  018658  0011               	retfie		f
 25757  01865A                     __end_of_INT1_ISR:
 25758                           	opt callstack 0
 25759                           
 25760 ;; *************** function _INT1_CallBack *****************
 25761 ;; Defined at:
 25762 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 25763 ;; Parameters:    Size  Location     Type
 25764 ;;		None
 25765 ;; Auto vars:     Size  Location     Type
 25766 ;;		None
 25767 ;; Return value:  Size  Location     Type
 25768 ;;                  1  [STACK] void 
 25769 ;; Registers used:
 25770 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 25771 ;; Tracked objects:
 25772 ;;		On entry : 3F/39
 25773 ;;		On exit  : 0/0
 25774 ;;		Unchanged: 0/0
 25775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25780 ;;Total ram usage:        0 bytes
 25781 ;; Hardware stack levels used:    1
 25782 ;; Hardware stack levels required when called:    4
 25783 ;; This function calls:
 25784 ;;		Absolute function
 25785 ;;		_INT1_DefaultInterruptHandler
 25786 ;;		_switch_handler
 25787 ;; This function is called by:
 25788 ;;		_INT1_ISR
 25789 ;; This function uses a reentrant model
 25790 ;;
 25791                           
 25792                           	psect	text121
 25793  018CEA                     __ptext121:
 25794                           	opt callstack 0
 25795  018CEA                     _INT1_CallBack:
 25796                           	opt callstack 12
 25797                           
 25798                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 25799                           
 25800                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25801                           ;incstack = 0
 25802  018CEA  5013               	movf	_INT1_InterruptHandler^0,w,c
 25803  018CEC  1014               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 25804  018CEE  1015               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
 25805  018CF0  B4D8               	btfsc	status,2,c
 25806  018CF2  0012               	return	
 25807                           
 25808                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 25809  018CF4  D801               	call	u853_28
 25810  018CF6  0012               	return	
 25811  018CF8                     u853_28:
 25812  018CF8  0005               	push	
 25813  018CFA  6EFA               	movwf	pclath,c
 25814  018CFC  5013               	movf	_INT1_InterruptHandler^0,w,c
 25815  018CFE  6EFD               	movwf	tosl,c
 25816  018D00  5014               	movf	(_INT1_InterruptHandler+1)^0,w,c
 25817  018D02  6EFE               	movwf	tosh,c
 25818  018D04  5015               	movf	(_INT1_InterruptHandler+2)^0,w,c
 25819  018D06  6EFF               	movwf	tosu,c
 25820  018D08  50FA               	movf	pclath,w,c
 25821  018D0A  0012               	return		;indir
 25822  018D0C                     __end_of_INT1_CallBack:
 25823                           	opt callstack 0
 25824                           
 25825 ;; *************** function _INT1_DefaultInterruptHandler *****************
 25826 ;; Defined at:
 25827 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 25828 ;; Parameters:    Size  Location     Type
 25829 ;;		None
 25830 ;; Auto vars:     Size  Location     Type
 25831 ;;		None
 25832 ;; Return value:  Size  Location     Type
 25833 ;;                  1  [STACK] void 
 25834 ;; Registers used:
 25835 ;;		None
 25836 ;; Tracked objects:
 25837 ;;		On entry : 0/39
 25838 ;;		On exit  : 0/0
 25839 ;;		Unchanged: 0/0
 25840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25845 ;;Total ram usage:        0 bytes
 25846 ;; Hardware stack levels used:    1
 25847 ;; Hardware stack levels required when called:    3
 25848 ;; This function calls:
 25849 ;;		Nothing
 25850 ;; This function is called by:
 25851 ;;		_EXT_INT_Initialize
 25852 ;;		_INT1_CallBack
 25853 ;; This function uses a reentrant model
 25854 ;;
 25855                           
 25856                           	psect	text122
 25857  018FA2                     __ptext122:
 25858                           	opt callstack 0
 25859  018FA2                     _INT1_DefaultInterruptHandler:
 25860                           	opt callstack 12
 25861                           
 25862                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25863                           
 25864                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25865                           ;incstack = 0
 25866  018FA2  0012               	return		;funcret
 25867  018FA4                     __end_of_INT1_DefaultInterruptHandler:
 25868                           	opt callstack 0
 25869                           
 25870 ;; *************** function _switch_handler *****************
 25871 ;; Defined at:
 25872 ;;		line 58 in file "dio.c"
 25873 ;; Parameters:    Size  Location     Type
 25874 ;;		None
 25875 ;; Auto vars:     Size  Location     Type
 25876 ;;  i               1  [STACK] unsigned char 
 25877 ;;  sw_value        1  [STACK] unsigned char 
 25878 ;; Return value:  Size  Location     Type
 25879 ;;                  1  [STACK] void 
 25880 ;; Registers used:
 25881 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 25882 ;; Tracked objects:
 25883 ;;		On entry : 0/39
 25884 ;;		On exit  : 0/0
 25885 ;;		Unchanged: 0/0
 25886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25891 ;;Total ram usage:        0 bytes
 25892 ;; Hardware stack levels used:    1
 25893 ;; Hardware stack levels required when called:    3
 25894 ;; This function calls:
 25895 ;;		Nothing
 25896 ;; This function is called by:
 25897 ;;		_start_switch_handler
 25898 ;;		_INT1_CallBack
 25899 ;; This function uses a reentrant model
 25900 ;;
 25901                           
 25902                           	psect	text123
 25903  0168CE                     __ptext123:
 25904                           	opt callstack 0
 25905  0168CE                     _switch_handler:
 25906                           	opt callstack 0
 25907                           
 25908                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25909  0168CE  52E6               	movf	postinc1,f,c
 25910  0168D0  52E6               	movf	postinc1,f,c
 25911                           
 25912                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 25913                           ;stkvar	_i @ sp[(-2)+0]
 25914                           
 25915                           ;incstack = 0
 25916  0168D2  0EFE               	movlw	-2
 25917  0168D4  6AE3               	clrf	plusw1,c
 25918  0168D6  9EBD               	bcf	189,7,c	;volatile
 25919  0168D8  82BE               	bsf	190,1,c	;volatile
 25920                           
 25921                           ;dio.c: 72:  __nop();
 25922  0168DA  F000               	nop	
 25923                           
 25924                           ;dio.c: 73:  __nop();
 25925  0168DC  F000               	nop	
 25926                           
 25927                           ;dio.c: 74:  __nop();
 25928  0168DE  F000               	nop	
 25929  0168E0  D019               	goto	l8960
 25930  0168E2                     l8948:
 25931                           
 25932                           ;dio.c: 79:    sw_value = PORTFbits.RF3;
 25933  0168E2  A6CF               	btfss	207,3,c	;volatile
 25934  0168E4  D011               	goto	u839_20
 25935  0168E6  D00D               	goto	u839_21
 25936  0168E8                     u836_28:
 25937                           
 25938                           ;stkvar	_sw_value @ sp[(-2)+1]
 25939  0168E8  0EFF               	movlw	-1
 25940  0168EA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 25941                           
 25942                           ;dio.c: 80:    break;
 25943  0168F0  D027               	goto	l8962
 25944  0168F2                     l8950:
 25945                           
 25946                           ;dio.c: 82:    sw_value = PORTFbits.RF2;
 25947  0168F2  A4CF               	btfss	207,2,c	;volatile
 25948  0168F4  D009               	goto	u839_20
 25949  0168F6  D005               	goto	u839_21
 25950  0168F8                     l8952:
 25951                           
 25952                           ;dio.c: 85:    sw_value = PORTFbits.RF1;
 25953  0168F8  A2CF               	btfss	207,1,c	;volatile
 25954  0168FA  D006               	goto	u839_20
 25955  0168FC  D002               	goto	u839_21
 25956  0168FE                     l8954:
 25957                           
 25958                           ;dio.c: 88:    sw_value = PORTFbits.RF0;
 25959  0168FE  A0CF               	btfss	207,0,c	;volatile
 25960  016900  D003               	goto	u839_20
 25961  016902                     u839_21:
 25962  016902  6A3D               	clrf	(btemp+11)^0,c
 25963  016904  2A3D               	incf	(btemp+11)^0,f,c
 25964  016906  D7F0               	goto	u836_28
 25965  016908                     u839_20:
 25966  016908  6A3D               	clrf	(btemp+11)^0,c
 25967  01690A  D7EE               	goto	u836_28
 25968  01690C                     l8956:
 25969                           
 25970                           ;dio.c: 91:    sw_value = 1;
 25971                           ;stkvar	_sw_value @ sp[(-2)+1]
 25972  01690C  0EFF               	movlw	-1
 25973  01690E  6AE3               	clrf	plusw1,c
 25974  016910  2AE3               	incf	plusw1,f,c
 25975                           
 25976                           ;dio.c: 92:    break;
 25977  016912  D016               	goto	l8962
 25978  016914                     l8960:
 25979                           
 25980                           ;stkvar	_i @ sp[(-2)+0]
 25981  016914  0EFE               	movlw	-2
 25982  016916  50E3               	movf	plusw1,w,c
 25983  016918  6E3C               	movwf	(btemp+10)^0,c
 25984  01691A  6A3D               	clrf	(btemp+11)^0,c
 25985                           
 25986                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25987                           ; Switch size 1, requested type "simple"
 25988                           ; Number of cases is 1, Range of values is 0 to 0
 25989                           ; switch strategies available:
 25990                           ; Name         Instructions Cycles
 25991                           ; simple_byte            4     3 (average)
 25992                           ;	Chosen strategy is simple_byte
 25993  01691C  503D               	movf	(btemp+11)^0,w,c
 25994  01691E  0A00               	xorlw	0	; case 0
 25995  016920  A4D8               	btfss	status,2,c
 25996  016922  D7F4               	goto	l8956
 25997                           
 25998                           ; Switch size 1, requested type "simple"
 25999                           ; Number of cases is 4, Range of values is 0 to 3
 26000                           ; switch strategies available:
 26001                           ; Name         Instructions Cycles
 26002                           ; simple_byte           13     7 (average)
 26003                           ;	Chosen strategy is simple_byte
 26004  016924  503C               	movf	(btemp+10)^0,w,c
 26005  016926  0A00               	xorlw	0	; case 0
 26006  016928  B4D8               	btfsc	status,2,c
 26007  01692A  D7E9               	goto	l8954
 26008  01692C  0A01               	xorlw	1	; case 1
 26009  01692E  B4D8               	btfsc	status,2,c
 26010  016930  D7E3               	goto	l8952
 26011  016932  0A03               	xorlw	3	; case 2
 26012  016934  B4D8               	btfsc	status,2,c
 26013  016936  D7DD               	goto	l8950
 26014  016938  0A01               	xorlw	1	; case 3
 26015  01693A  B4D8               	btfsc	status,2,c
 26016  01693C  D7D2               	goto	l8948
 26017  01693E  D7E6               	goto	l8956
 26018  016940                     l8962:
 26019                           
 26020                           ;dio.c: 96:   if (sw_value) {
 26021                           ;stkvar	_sw_value @ sp[(-2)+1]
 26022  016940  0EFF               	movlw	-1
 26023  016942  50E3               	movf	plusw1,w,c
 26024  016944  B4D8               	btfsc	status,2,c
 26025  016946  D014               	goto	l8968
 26026                           
 26027                           ;dio.c: 97:    if (S.button[i].sw == SW_ON) {
 26028                           ;stkvar	_i @ sp[(-2)+0]
 26029  016948  0EFE               	movlw	-2
 26030  01694A  50E3               	movf	plusw1,w,c
 26031  01694C  0D05               	mullw	5
 26032  01694E  50F3               	movf	243,w,c
 26033  016950  0F60               	addlw	low _S
 26034  016952  6ED9               	movwf	fsr2l,c
 26035  016954  6ADA               	clrf	fsr2h,c
 26036  016956  04DE               	decf	postinc2,w,c
 26037  016958  A4D8               	btfss	status,2,c
 26038  01695A  D041               	goto	l8976
 26039                           
 26040                           ;dio.c: 98:     S.button[i].sw = SW_OFF;
 26041                           ;stkvar	_i @ sp[(-2)+0]
 26042  01695C  0EFE               	movlw	-2
 26043  01695E  50E3               	movf	plusw1,w,c
 26044  016960  0D05               	mullw	5
 26045  016962  50F3               	movf	243,w,c
 26046  016964  0F60               	addlw	low _S
 26047  016966  6ED9               	movwf	fsr2l,c
 26048  016968  6ADA               	clrf	fsr2h,c
 26049  01696A  0E00               	movlw	0
 26050  01696C  6EDF               	movwf	indf2,c
 26051  01696E  D037               	goto	l8976
 26052  016970                     l8968:
 26053                           
 26054                           ;dio.c: 101:    if (S.button[i].sw == SW_OFF) {
 26055                           ;stkvar	_i @ sp[(-2)+0]
 26056  016970  0EFE               	movlw	-2
 26057  016972  50E3               	movf	plusw1,w,c
 26058  016974  0D05               	mullw	5
 26059  016976  50F3               	movf	243,w,c
 26060  016978  0F60               	addlw	low _S
 26061  01697A  6ED9               	movwf	fsr2l,c
 26062  01697C  6ADA               	clrf	fsr2h,c
 26063  01697E  50DF               	movf	indf2,w,c
 26064  016980  A4D8               	btfss	status,2,c
 26065  016982  D02D               	goto	l8976
 26066                           
 26067                           ;dio.c: 102:     S.button[i].sw = SW_ON;
 26068                           ;stkvar	_i @ sp[(-2)+0]
 26069  016984  0EFE               	movlw	-2
 26070  016986  50E3               	movf	plusw1,w,c
 26071  016988  0D05               	mullw	5
 26072  01698A  50F3               	movf	243,w,c
 26073  01698C  0F60               	addlw	low _S
 26074  01698E  6ED9               	movwf	fsr2l,c
 26075  016990  6ADA               	clrf	fsr2h,c
 26076  016992  0E01               	movlw	1
 26077  016994  6EDF               	movwf	indf2,c
 26078                           
 26079                           ;dio.c: 103:     S.button[i].count = V.timerint_count;
 26080  016996  EE20  F2B8         	lfsr	2,_V+184	;volatile
 26081                           
 26082                           ;stkvar	_i @ sp[(-2)+0]
 26083  01699A  0EFE               	movlw	-2
 26084  01699C  50E3               	movf	plusw1,w,c
 26085  01699E  0D05               	mullw	5
 26086  0169A0  50F3               	movf	243,w,c
 26087  0169A2  0F61               	addlw	low (_S+1)
 26088  0169A4  6EE9               	movwf	fsr0l,c
 26089  0169A6  6AEA               	clrf	fsr0h,c
 26090  0169A8  006F FF7B FFEE     	movff	postinc2,postinc0
 26091  0169AE  006F FF7B FFEE     	movff	postinc2,postinc0
 26092  0169B4  006F FF7B FFEE     	movff	postinc2,postinc0
 26093  0169BA  006F FF7B FFEE     	movff	postinc2,postinc0
 26094                           
 26095                           ;dio.c: 104:     S.sw_bitmap |= 1 << i;
 26096                           ;stkvar	_i @ sp[(-2)+0]
 26097  0169C0  0EFE               	movlw	-2
 26098  0169C2  006F FF8C  F03D    	movff	plusw1,btemp+11
 26099  0169C8  0E01               	movlw	1
 26100  0169CA  6E3C               	movwf	(btemp+10)^0,c
 26101  0169CC  2A3D               	incf	(btemp+11)^0,f,c
 26102  0169CE  D002               	goto	u843_24
 26103  0169D0                     u843_25:
 26104  0169D0  90D8               	bcf	status,0,c
 26105  0169D2  363C               	rlcf	(btemp+10)^0,f,c
 26106  0169D4                     u843_24:
 26107  0169D4  2E3D               	decfsz	(btemp+11)^0,f,c
 26108  0169D6  D7FC               	goto	u843_25
 26109  0169D8  503C               	movf	(btemp+10)^0,w,c
 26110  0169DA  0100               	movlb	0	; () banked
 26111  0169DC  1388               	iorwf	(_S+40)& (0+255),f,b	;volatile
 26112  0169DE                     l8976:
 26113                           
 26114                           ;dio.c: 107:  } while (++i < 4);
 26115                           ;stkvar	_i @ sp[(-2)+0]
 26116  0169DE  0EFE               	movlw	-2
 26117  0169E0  2AE3               	incf	plusw1,f,c
 26118  0169E2  0EFE               	movlw	-2
 26119  0169E4  006F FF8C  F032    	movff	plusw1,btemp
 26120  0169EA  0E03               	movlw	3
 26121  0169EC  6432               	cpfsgt	btemp^0,c
 26122  0169EE  D792               	goto	l8960
 26123                           
 26124                           ;dio.c: 110:  do { LATEbits.LATE1 = 0; } while(0);
 26125  0169F0  92BE               	bcf	190,1,c	;volatile
 26126  0169F2  A4BE               	btfss	190,2,c	;volatile
 26127  0169F4  D002               	goto	u845_20
 26128  0169F6  0E01               	movlw	1
 26129  0169F8  D001               	goto	u845_26
 26130  0169FA                     u845_20:
 26131  0169FA  0E00               	movlw	0
 26132  0169FC                     u845_26:
 26133  0169FC  0AFF               	xorlw	255
 26134  0169FE  6E3D               	movwf	(btemp+11)^0,c
 26135  016A00  463D               	rlncf	(btemp+11)^0,f,c
 26136  016A02  463D               	rlncf	(btemp+11)^0,f,c
 26137  016A04  50BE               	movf	190,w,c	;volatile
 26138  016A06  183D               	xorwf	(btemp+11)^0,w,c
 26139  016A08  0BFB               	andlw	-5
 26140  016A0A  183D               	xorwf	(btemp+11)^0,w,c
 26141  016A0C  6EBE               	movwf	190,c	;volatile
 26142  016A0E  8EBD               	bsf	189,7,c	;volatile
 26143                           
 26144                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 26145  016A10  52E5               	movf	postdec1,f,c
 26146  016A12  52E5               	movf	postdec1,f,c
 26147  016A14  0012               	return		;funcret
 26148  016A16                     __end_of_switch_handler:
 26149                           	opt callstack 0
 26150                           
 26151 ;; *************** function _TMR5_ISR *****************
 26152 ;; Defined at:
 26153 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 26154 ;; Parameters:    Size  Location     Type
 26155 ;;		None
 26156 ;; Auto vars:     Size  Location     Type
 26157 ;;		None
 26158 ;; Return value:  Size  Location     Type
 26159 ;;                  1    wreg      void 
 26160 ;; Registers used:
 26161 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 26162 ;; Tracked objects:
 26163 ;;		On entry : 0/0
 26164 ;;		On exit  : 0/0
 26165 ;;		Unchanged: 0/0
 26166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26169 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26170 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26171 ;;Total ram usage:        4 bytes
 26172 ;; Hardware stack levels used:    1
 26173 ;; Hardware stack levels required when called:    5
 26174 ;; This function calls:
 26175 ;;		_TMR5_CallBack
 26176 ;;		_TMR5_WriteTimer
 26177 ;; This function is called by:
 26178 ;;		Interrupt level 1
 26179 ;; This function uses a non-reentrant model
 26180 ;;
 26181                           
 26182                           	psect	text124
 26183  0181BC                     __ptext124:
 26184                           	opt callstack 0
 26185  0181BC                     _TMR5_ISR:
 26186                           	opt callstack 12
 26187                           
 26188                           ;incstack = 0
 26189  0181BC  006F FF60  F1FD    	movff	status,??_TMR5_ISR+2
 26190  0181C2  0060  F0F4  F1FE   	movff	btemp+11,??_TMR5_ISR+3
 26191  0181C8  EE16  F000         	lfsr	1,___intlo_sp
 26192                           
 26193                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 26194  0181CC  0139               	movlb	57	; () banked
 26195  0181CE  9DA8               	bcf	168,6,b	;volatile
 26196                           
 26197                           ; BSR set to: 57
 26198                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 26199  0181D0  0060  F08F  FFE6   	movff	_timer5ReloadVal,postinc1
 26200  0181D6  0060  F093  FFE6   	movff	_timer5ReloadVal+1,postinc1
 26201  0181DC  ECEE  F0C2         	call	_TMR5_WriteTimer	;wreg free
 26202                           
 26203                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 26204  0181E0  0102               	movlb	2	; () banked
 26205  0181E2  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 26206  0181E4  0101               	movlb	1	; () banked
 26207  0181E6  6FFB               	movwf	??_TMR5_ISR& (0+255),b
 26208  0181E8  6BFC               	clrf	(??_TMR5_ISR+1)& (0+255),b
 26209  0181EA  0E05               	movlw	5
 26210  0181EC  27FB               	addwf	??_TMR5_ISR& (0+255),f,b
 26211  0181EE  0E00               	movlw	0
 26212  0181F0  23FC               	addwfc	(??_TMR5_ISR+1)& (0+255),f,b
 26213  0181F2  4A21               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 26214  0181F4  2A22               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 26215  0181F6  51FB               	movf	??_TMR5_ISR& (0+255),w,b
 26216  0181F8  5C21               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 26217  0181FA  51FC               	movf	(??_TMR5_ISR+1)& (0+255),w,b
 26218  0181FC  5822               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 26219  0181FE  A0D8               	btfss	status,0,c
 26220  018200  D004               	goto	i1l1045
 26221                           
 26222                           ; BSR set to: 1
 26223                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 26224  018202  EC51  F0C6         	call	_TMR5_CallBack	;wreg free
 26225                           
 26226                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 26227  018206  6A21               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 26228  018208  6A22               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 26229  01820A                     i1l1045:
 26230  01820A  0060  F7F8  F03D   	movff	??_TMR5_ISR+3,btemp+11
 26231  018210  0060  F7F7  FFD8   	movff	??_TMR5_ISR+2,status
 26232  018216  0011               	retfie		f
 26233  018218                     __end_of_TMR5_ISR:
 26234                           	opt callstack 0
 26235                           
 26236 ;; *************** function _TMR5_WriteTimer *****************
 26237 ;; Defined at:
 26238 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 26239 ;; Parameters:    Size  Location     Type
 26240 ;;  timerVal        2  [STACK] unsigned short 
 26241 ;; Auto vars:     Size  Location     Type
 26242 ;;		None
 26243 ;; Return value:  Size  Location     Type
 26244 ;;                  1  [STACK] void 
 26245 ;; Registers used:
 26246 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 26247 ;; Tracked objects:
 26248 ;;		On entry : 3F/39
 26249 ;;		On exit  : 0/0
 26250 ;;		Unchanged: 0/0
 26251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26256 ;;Total ram usage:        0 bytes
 26257 ;; Hardware stack levels used:    1
 26258 ;; Hardware stack levels required when called:    3
 26259 ;; This function calls:
 26260 ;;		Nothing
 26261 ;; This function is called by:
 26262 ;;		_TMR5_ISR
 26263 ;; This function uses a reentrant model
 26264 ;;
 26265                           
 26266                           	psect	text125
 26267  0185DC                     __ptext125:
 26268                           	opt callstack 0
 26269  0185DC                     _TMR5_WriteTimer:
 26270                           	opt callstack 13
 26271                           
 26272                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 26273                           
 26274                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26275                           ;incstack = 0
 26276  0185DC  A49A               	btfss	154,2,c	;volatile
 26277  0185DE  D00F               	goto	l9096
 26278                           
 26279                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 26280  0185E0  909A               	bcf	154,0,c	;volatile
 26281                           
 26282                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 26283                           ;stkvar	_timerVal @ sp[(0)+-2]
 26284  0185E2  0EFF               	movlw	255
 26285  0185E4  24E1               	addwf	fsr1l,w,c
 26286  0185E6  6ED9               	movwf	fsr2l,c
 26287  0185E8  0EFF               	movlw	255
 26288  0185EA  20E2               	addwfc	fsr1h,w,c
 26289  0185EC  6EDA               	movwf	fsr2h,c
 26290  0185EE  50DF               	movf	indf2,w,c
 26291  0185F0  6E99               	movwf	153,c	;volatile
 26292                           
 26293                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 26294                           ;stkvar	_timerVal @ sp[(0)+-2]
 26295  0185F2  0EFE               	movlw	-2
 26296  0185F4  006F FF8F FF98     	movff	plusw1,16280	;volatile
 26297                           
 26298                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 26299  0185FA  809A               	bsf	154,0,c	;volatile
 26300                           
 26301                           ;mcc_generated_files/tmr5.c: 142:  } else {
 26302  0185FC  D00C               	goto	l1028
 26303  0185FE                     l9096:
 26304                           
 26305                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 26306                           ;stkvar	_timerVal @ sp[(0)+-2]
 26307  0185FE  0EFF               	movlw	255
 26308  018600  24E1               	addwf	fsr1l,w,c
 26309  018602  6ED9               	movwf	fsr2l,c
 26310  018604  0EFF               	movlw	255
 26311  018606  20E2               	addwfc	fsr1h,w,c
 26312  018608  6EDA               	movwf	fsr2h,c
 26313  01860A  50DF               	movf	indf2,w,c
 26314  01860C  6E99               	movwf	153,c	;volatile
 26315                           
 26316                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 26317                           ;stkvar	_timerVal @ sp[(0)+-2]
 26318  01860E  0EFE               	movlw	-2
 26319  018610  006F FF8F FF98     	movff	plusw1,16280	;volatile
 26320  018616                     l1028:
 26321                           
 26322                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 26323  018616  52E5               	movf	postdec1,f,c
 26324  018618  52E5               	movf	postdec1,f,c
 26325  01861A  0012               	return		;funcret
 26326  01861C                     __end_of_TMR5_WriteTimer:
 26327                           	opt callstack 0
 26328                           
 26329 ;; *************** function _TMR5_CallBack *****************
 26330 ;; Defined at:
 26331 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 26332 ;; Parameters:    Size  Location     Type
 26333 ;;		None
 26334 ;; Auto vars:     Size  Location     Type
 26335 ;;		None
 26336 ;; Return value:  Size  Location     Type
 26337 ;;                  1  [STACK] void 
 26338 ;; Registers used:
 26339 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 26340 ;; Tracked objects:
 26341 ;;		On entry : 3F/1
 26342 ;;		On exit  : 0/0
 26343 ;;		Unchanged: 0/0
 26344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26349 ;;Total ram usage:        0 bytes
 26350 ;; Hardware stack levels used:    1
 26351 ;; Hardware stack levels required when called:    4
 26352 ;; This function calls:
 26353 ;;		Absolute function
 26354 ;;		_TMR5_DefaultInterruptHandler
 26355 ;; This function is called by:
 26356 ;;		_TMR5_ISR
 26357 ;; This function uses a reentrant model
 26358 ;;
 26359                           
 26360                           	psect	text126
 26361  018CA2                     __ptext126:
 26362                           	opt callstack 0
 26363  018CA2                     _TMR5_CallBack:
 26364                           	opt callstack 12
 26365                           
 26366                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 26367                           
 26368                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26369                           ;incstack = 0
 26370  018CA2  0100               	movlb	0	; () banked
 26371  018CA4  51C1               	movf	_TMR5_InterruptHandler& (0+255),w,b
 26372  018CA6  11C2               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 26373  018CA8  11C3               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 26374  018CAA  B4D8               	btfsc	status,2,c
 26375  018CAC  0012               	return	
 26376                           
 26377                           ; BSR set to: 0
 26378                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 26379  018CAE  D801               	call	u864_28
 26380  018CB0  0012               	return	
 26381  018CB2                     u864_28:
 26382  018CB2  0005               	push	
 26383  018CB4  6EFA               	movwf	pclath,c
 26384  018CB6  51C1               	movf	_TMR5_InterruptHandler& (0+255),w,b
 26385  018CB8  6EFD               	movwf	tosl,c
 26386  018CBA  51C2               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 26387  018CBC  6EFE               	movwf	tosh,c
 26388  018CBE  51C3               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 26389  018CC0  6EFF               	movwf	tosu,c
 26390  018CC2  50FA               	movf	pclath,w,c
 26391  018CC4  0012               	return		;indir
 26392  018CC6                     __end_of_TMR5_CallBack:
 26393                           	opt callstack 0
 26394                           
 26395 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 26396 ;; Defined at:
 26397 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 26398 ;; Parameters:    Size  Location     Type
 26399 ;;		None
 26400 ;; Auto vars:     Size  Location     Type
 26401 ;;		None
 26402 ;; Return value:  Size  Location     Type
 26403 ;;                  1  [STACK] void 
 26404 ;; Registers used:
 26405 ;;		wreg, status,2, status,0, btemp+11
 26406 ;; Tracked objects:
 26407 ;;		On entry : 3F/0
 26408 ;;		On exit  : 3F/2
 26409 ;;		Unchanged: 0/0
 26410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26415 ;;Total ram usage:        0 bytes
 26416 ;; Hardware stack levels used:    1
 26417 ;; Hardware stack levels required when called:    3
 26418 ;; This function calls:
 26419 ;;		Nothing
 26420 ;; This function is called by:
 26421 ;;		_TMR5_Initialize
 26422 ;;		_TMR5_CallBack
 26423 ;; This function uses a reentrant model
 26424 ;;
 26425                           
 26426                           	psect	text127
 26427  018B6E                     __ptext127:
 26428                           	opt callstack 0
 26429  018B6E                     _TMR5_DefaultInterruptHandler:
 26430                           	opt callstack 12
 26431                           
 26432                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 26433                           
 26434                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26435                           ;incstack = 0
 26436  018B6E  A0BE               	btfss	190,0,c	;volatile
 26437  018B70  D002               	goto	u814_20
 26438  018B72  0E01               	movlw	1
 26439  018B74  D001               	goto	u814_26
 26440  018B76                     u814_20:
 26441  018B76  0E00               	movlw	0
 26442  018B78                     u814_26:
 26443  018B78  0AFF               	xorlw	255
 26444  018B7A  6E3D               	movwf	(btemp+11)^0,c
 26445  018B7C  50BE               	movf	190,w,c	;volatile
 26446  018B7E  183D               	xorwf	(btemp+11)^0,w,c
 26447  018B80  0BFE               	andlw	-2
 26448  018B82  183D               	xorwf	(btemp+11)^0,w,c
 26449  018B84  6EBE               	movwf	190,c	;volatile
 26450                           
 26451                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 26452  018B86  0E01               	movlw	1
 26453  018B88  0102               	movlb	2	; () banked
 26454  018B8A  27B8               	addwf	(_V+184)& (0+255),f,b	;volatile
 26455  018B8C  0E00               	movlw	0
 26456  018B8E  23B9               	addwfc	(_V+185)& (0+255),f,b	;volatile
 26457  018B90  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 26458  018B92  23BB               	addwfc	(_V+187)& (0+255),f,b	;volatile
 26459                           
 26460                           ; BSR set to: 2
 26461                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26462  018B94  0012               	return		;funcret
 26463  018B96                     __end_of_TMR5_DefaultInterruptHandler:
 26464                           	opt callstack 0
 26465                           
 26466 ;; *************** function _INT0_ISR *****************
 26467 ;; Defined at:
 26468 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 26469 ;; Parameters:    Size  Location     Type
 26470 ;;		None
 26471 ;; Auto vars:     Size  Location     Type
 26472 ;;		None
 26473 ;; Return value:  Size  Location     Type
 26474 ;;                  1    wreg      void 
 26475 ;; Registers used:
 26476 ;;		wreg, status,2, status,0, pclath, tosl
 26477 ;; Tracked objects:
 26478 ;;		On entry : 0/0
 26479 ;;		On exit  : 0/0
 26480 ;;		Unchanged: 0/0
 26481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26486 ;;Total ram usage:        0 bytes
 26487 ;; Hardware stack levels used:    1
 26488 ;; Hardware stack levels required when called:    2
 26489 ;; This function calls:
 26490 ;;		_INT0_CallBack
 26491 ;; This function is called by:
 26492 ;;		Interrupt level 2
 26493 ;; This function uses a non-reentrant model
 26494 ;;
 26495                           
 26496                           	psect	text128
 26497  018F18                     __ptext128:
 26498                           	opt callstack 0
 26499  018F18                     _INT0_ISR:
 26500                           	opt callstack 12
 26501                           
 26502                           ; BSR set to: 2
 26503                           ;incstack = 0
 26504  018F18  EE14  F000         	lfsr	1,___inthi_sp
 26505                           
 26506                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 26507  018F1C  0139               	movlb	57	; () banked
 26508  018F1E  91A1               	bcf	161,0,b	;volatile
 26509                           
 26510                           ; BSR set to: 57
 26511                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 26512  018F20  EC86  F0C6         	call	_INT0_CallBack	;wreg free
 26513  018F24  0011               	retfie		f
 26514  018F26                     __end_of_INT0_ISR:
 26515                           	opt callstack 0
 26516                           
 26517 ;; *************** function _INT0_CallBack *****************
 26518 ;; Defined at:
 26519 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 26520 ;; Parameters:    Size  Location     Type
 26521 ;;		None
 26522 ;; Auto vars:     Size  Location     Type
 26523 ;;		None
 26524 ;; Return value:  Size  Location     Type
 26525 ;;                  1  [STACK] void 
 26526 ;; Registers used:
 26527 ;;		wreg, status,2, status,0, pclath, tosl
 26528 ;; Tracked objects:
 26529 ;;		On entry : 3F/39
 26530 ;;		On exit  : 0/0
 26531 ;;		Unchanged: 0/0
 26532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26537 ;;Total ram usage:        0 bytes
 26538 ;; Hardware stack levels used:    1
 26539 ;; Hardware stack levels required when called:    1
 26540 ;; This function calls:
 26541 ;;		Absolute function
 26542 ;;		_INT0_DefaultInterruptHandler
 26543 ;; This function is called by:
 26544 ;;		_INT0_ISR
 26545 ;; This function uses a reentrant model
 26546 ;;
 26547                           
 26548                           	psect	text129
 26549  018D0C                     __ptext129:
 26550                           	opt callstack 0
 26551  018D0C                     _INT0_CallBack:
 26552                           	opt callstack 12
 26553                           
 26554                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 26555                           
 26556                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26557                           ;incstack = 0
 26558  018D0C  5016               	movf	_INT0_InterruptHandler^0,w,c
 26559  018D0E  1017               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 26560  018D10  1018               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 26561  018D12  B4D8               	btfsc	status,2,c
 26562  018D14  0012               	return	
 26563                           
 26564                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 26565  018D16  D801               	call	u398_48
 26566  018D18  0012               	return	
 26567  018D1A                     u398_48:
 26568  018D1A  0005               	push	
 26569  018D1C  6EFA               	movwf	pclath,c
 26570  018D1E  5016               	movf	_INT0_InterruptHandler^0,w,c
 26571  018D20  6EFD               	movwf	tosl,c
 26572  018D22  5017               	movf	(_INT0_InterruptHandler+1)^0,w,c
 26573  018D24  6EFE               	movwf	tosh,c
 26574  018D26  5018               	movf	(_INT0_InterruptHandler+2)^0,w,c
 26575  018D28  6EFF               	movwf	tosu,c
 26576  018D2A  50FA               	movf	pclath,w,c
 26577  018D2C  0012               	return		;indir
 26578  018D2E                     __end_of_INT0_CallBack:
 26579                           	opt callstack 0
 26580                           
 26581 ;; *************** function _INT0_DefaultInterruptHandler *****************
 26582 ;; Defined at:
 26583 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 26584 ;; Parameters:    Size  Location     Type
 26585 ;;		None
 26586 ;; Auto vars:     Size  Location     Type
 26587 ;;		None
 26588 ;; Return value:  Size  Location     Type
 26589 ;;                  1  [STACK] void 
 26590 ;; Registers used:
 26591 ;;		None
 26592 ;; Tracked objects:
 26593 ;;		On entry : 0/39
 26594 ;;		On exit  : 0/0
 26595 ;;		Unchanged: 0/0
 26596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26601 ;;Total ram usage:        0 bytes
 26602 ;; Hardware stack levels used:    1
 26603 ;; This function calls:
 26604 ;;		Nothing
 26605 ;; This function is called by:
 26606 ;;		_EXT_INT_Initialize
 26607 ;;		_INT0_CallBack
 26608 ;; This function uses a reentrant model
 26609 ;;
 26610                           
 26611                           	psect	text130
 26612  018FA4                     __ptext130:
 26613                           	opt callstack 0
 26614  018FA4                     _INT0_DefaultInterruptHandler:
 26615                           	opt callstack 12
 26616                           
 26617                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26618                           
 26619                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26620                           ;incstack = 0
 26621  018FA4  0012               	return		;funcret
 26622  018FA6                     __end_of_INT0_DefaultInterruptHandler:
 26623                           	opt callstack 0
 26624                           
 26625 ;; *************** function _Default_ISR *****************
 26626 ;; Defined at:
 26627 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 26628 ;; Parameters:    Size  Location     Type
 26629 ;;		None
 26630 ;; Auto vars:     Size  Location     Type
 26631 ;;		None
 26632 ;; Return value:  Size  Location     Type
 26633 ;;                  1    wreg      void 
 26634 ;; Registers used:
 26635 ;;		None
 26636 ;; Tracked objects:
 26637 ;;		On entry : 0/0
 26638 ;;		On exit  : 0/0
 26639 ;;		Unchanged: 0/0
 26640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26645 ;;Total ram usage:        0 bytes
 26646 ;; Hardware stack levels used:    1
 26647 ;; This function calls:
 26648 ;;		Nothing
 26649 ;; This function is called by:
 26650 ;;		Interrupt level 2
 26651 ;; This function uses a non-reentrant model
 26652 ;;
 26653                           
 26654                           	psect	text131
 26655  018F9C                     __ptext131:
 26656                           	opt callstack 0
 26657  018F9C                     _Default_ISR:
 26658                           	opt callstack 14
 26659                           
 26660                           ;incstack = 0
 26661  018F9C  EE14  F000         	lfsr	1,___inthi_sp
 26662  018FA0  0011               	retfie		f
 26663  018FA2                     __end_of_Default_ISR:
 26664                           	opt callstack 0
 26665                           
 26666 ;; *************** function _ADCC_ISR *****************
 26667 ;; Defined at:
 26668 ;;		line 314 in file "mcc_generated_files/adcc.c"
 26669 ;; Parameters:    Size  Location     Type
 26670 ;;		None
 26671 ;; Auto vars:     Size  Location     Type
 26672 ;;		None
 26673 ;; Return value:  Size  Location     Type
 26674 ;;                  1    wreg      void 
 26675 ;; Registers used:
 26676 ;;		wreg, status,2, status,0, pclath, tosl
 26677 ;; Tracked objects:
 26678 ;;		On entry : 0/0
 26679 ;;		On exit  : 0/0
 26680 ;;		Unchanged: 0/0
 26681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26686 ;;Total ram usage:        0 bytes
 26687 ;; Hardware stack levels used:    1
 26688 ;; Hardware stack levels required when called:    1
 26689 ;; This function calls:
 26690 ;;		Absolute function
 26691 ;;		_ADCC_DefaultInterruptHandler
 26692 ;;		_adc_int_handler
 26693 ;; This function is called by:
 26694 ;;		Interrupt level 2
 26695 ;; This function uses a non-reentrant model
 26696 ;;
 26697                           
 26698                           	psect	text132
 26699  018914                     __ptext132:
 26700                           	opt callstack 0
 26701  018914                     _ADCC_ISR:
 26702                           	opt callstack 13
 26703                           
 26704                           ;incstack = 0
 26705  018914  EE14  F000         	lfsr	1,___inthi_sp
 26706                           
 26707                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 26708  018918  0139               	movlb	57	; () banked
 26709  01891A  95A1               	bcf	161,2,b	;volatile
 26710                           
 26711                           ; BSR set to: 57
 26712                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 26713  01891C  5004               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 26714  01891E  1005               	iorwf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 26715  018920  1006               	iorwf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 26716  018922  B4D8               	btfsc	status,2,c
 26717  018924  0011               	retfie		f
 26718                           
 26719                           ; BSR set to: 57
 26720                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 26721  018926  D801               	call	i2u433_48
 26722  018928  0011               	retfie		f
 26723  01892A                     i2u433_48:
 26724  01892A  0005               	push	
 26725  01892C  6EFA               	movwf	pclath,c
 26726  01892E  5004               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 26727  018930  6EFD               	movwf	tosl,c
 26728  018932  5005               	movf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 26729  018934  6EFE               	movwf	tosh,c
 26730  018936  5006               	movf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 26731  018938  6EFF               	movwf	tosu,c
 26732  01893A  50FA               	movf	pclath,w,c
 26733  01893C  0012               	return		;indir
 26734  01893E                     __end_of_ADCC_ISR:
 26735                           	opt callstack 0
 26736                           
 26737 ;; *************** function _adc_int_t_handler *****************
 26738 ;; Defined at:
 26739 ;;		line 128 in file "daq.c"
 26740 ;; Parameters:    Size  Location     Type
 26741 ;;		None
 26742 ;; Auto vars:     Size  Location     Type
 26743 ;;		None
 26744 ;; Return value:  Size  Location     Type
 26745 ;;                  1  [STACK] void 
 26746 ;; Registers used:
 26747 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 26748 ;; Tracked objects:
 26749 ;;		On entry : 3F/39
 26750 ;;		On exit  : 1/0
 26751 ;;		Unchanged: 0/0
 26752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26757 ;;Total ram usage:        0 bytes
 26758 ;; Hardware stack levels used:    1
 26759 ;; Hardware stack levels required when called:    1
 26760 ;; This function calls:
 26761 ;;		_ADCC_DischargeSampleCapacitor
 26762 ;;		_ADCC_StartConversion
 26763 ;; This function is called by:
 26764 ;;		_start_adc_scan
 26765 ;;		_ADCC_ThresholdISR
 26766 ;; This function uses a reentrant model
 26767 ;;
 26768                           
 26769                           	psect	text133
 26770  017DB2                     __ptext133:
 26771                           	opt callstack 0
 26772  017DB2                     _adc_int_t_handler:
 26773                           	opt callstack 12
 26774                           
 26775                           ;daq.c: 133:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 26776                           
 26777                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26778                           ;incstack = 0
 26779  017DB2  013E               	movlb	62	; () banked
 26780  017DB4  51E6               	movf	230,w,b	;volatile
 26781  017DB6  006F FB9C  F032    	movff	16103,btemp	;volatile
 26782  017DBC  6A33               	clrf	(btemp+1)^0,c
 26783  017DBE  0060  F0C8  F033   	movff	btemp,btemp+1
 26784  017DC4  6A32               	clrf	btemp^0,c
 26785  017DC6  2632               	addwf	btemp^0,f,c
 26786  017DC8  0E00               	movlw	0
 26787  017DCA  2233               	addwfc	(btemp+1)^0,f,c
 26788  017DCC  0100               	movlb	0	; () banked
 26789  017DCE  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
 26790  017DD0  0D02               	mullw	2
 26791  017DD2  50F3               	movf	243,w,c
 26792  017DD4  0FC7               	addlw	low _R
 26793  017DD6  6ED9               	movwf	fsr2l,c
 26794  017DD8  6ADA               	clrf	fsr2h,c
 26795  017DDA  0060  F0CB  FFDE   	movff	btemp,postinc2
 26796  017DE0  0060  F0CF  FFDD   	movff	btemp+1,postdec2
 26797  017DE6                     l9326:
 26798                           
 26799                           ;daq.c: 135:   if (++R.scan_index > 0XD) {
 26800  017DE6  0100               	movlb	0	; () banked
 26801  017DE8  2BEB               	incf	(_R+36)& (0+255),f,b	;volatile
 26802  017DEA  0E0D               	movlw	13
 26803  017DEC  65EB               	cpfsgt	(_R+36)& (0+255),b	;volatile
 26804  017DEE  D003               	goto	l9332
 26805                           
 26806                           ; BSR set to: 0
 26807                           ;daq.c: 136:    R.done = 1;
 26808  017DF0  0E01               	movlw	1
 26809  017DF2  6FEE               	movwf	(_R+39)& (0+255),b	;volatile
 26810  017DF4  0012               	return	
 26811  017DF6                     l9332:
 26812                           
 26813                           ; BSR set to: 0
 26814                           ;daq.c: 142:  } while (!((R.scan_select >> R.scan_index) &0x1));
 26815  017DF6  0060  F3AC  F03D   	movff	_R+36,btemp+11	;volatile
 26816  017DFC  EE20  F0EC         	lfsr	2,_R+37	;volatile
 26817  017E00  006F FF78  F03A    	movff	postinc2,btemp+8
 26818  017E06  006F FF74  F03B    	movff	postdec2,btemp+9
 26819  017E0C  2A3D               	incf	(btemp+11)^0,f,c
 26820  017E0E  D003               	goto	u883_44
 26821  017E10                     u883_45:
 26822  017E10  90D8               	bcf	status,0,c
 26823  017E12  323B               	rrcf	(btemp+9)^0,f,c
 26824  017E14  323A               	rrcf	(btemp+8)^0,f,c
 26825  017E16                     u883_44:
 26826  017E16  2E3D               	decfsz	(btemp+11)^0,f,c
 26827  017E18  D7FB               	goto	u883_45
 26828  017E1A  A03A               	btfss	(btemp+8)^0,0,c
 26829  017E1C  D7E4               	goto	l9326
 26830                           
 26831                           ;daq.c: 143:  ADCC_DischargeSampleCapacitor();
 26832  017E1E  ECB1  F0C7         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 26833                           
 26834                           ; BSR set to: 62
 26835                           ;daq.c: 144:  ADCC_StartConversion(R.scan_index & 0xf);
 26836  017E22  0100               	movlb	0	; () banked
 26837  017E24  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
 26838  017E26  0B0F               	andlw	15
 26839  017E28  6EE6               	movwf	postinc1,c
 26840  017E2A  EC6C  F0C7         	call	_ADCC_StartConversion	;wreg free
 26841                           
 26842                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 26843  017E2E  0012               	return		;funcret
 26844  017E30                     __end_of_adc_int_t_handler:
 26845                           	opt callstack 0
 26846                           
 26847 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 26848 ;; Defined at:
 26849 ;;		line 339 in file "mcc_generated_files/adcc.c"
 26850 ;; Parameters:    Size  Location     Type
 26851 ;;		None
 26852 ;; Auto vars:     Size  Location     Type
 26853 ;;		None
 26854 ;; Return value:  Size  Location     Type
 26855 ;;                  1  [STACK] void 
 26856 ;; Registers used:
 26857 ;;		None
 26858 ;; Tracked objects:
 26859 ;;		On entry : 3F/39
 26860 ;;		On exit  : 0/0
 26861 ;;		Unchanged: 0/0
 26862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26867 ;;Total ram usage:        0 bytes
 26868 ;; Hardware stack levels used:    1
 26869 ;; This function calls:
 26870 ;;		Nothing
 26871 ;; This function is called by:
 26872 ;;		_ADCC_Initialize
 26873 ;;		_ADCC_ISR
 26874 ;;		_ADCC_ThresholdISR
 26875 ;; This function uses a reentrant model
 26876 ;;
 26877                           
 26878                           	psect	text134
 26879  018FA6                     __ptext134:
 26880                           	opt callstack 0
 26881  018FA6                     _ADCC_DefaultInterruptHandler:
 26882                           	opt callstack 13
 26883                           
 26884                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26885                           
 26886                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26887                           ;incstack = 0
 26888  018FA6  0012               	return		;funcret
 26889  018FA8                     __end_of_ADCC_DefaultInterruptHandler:
 26890                           	opt callstack 0
 26891                           
 26892 ;; *************** function _adc_int_handler *****************
 26893 ;; Defined at:
 26894 ;;		line 118 in file "daq.c"
 26895 ;; Parameters:    Size  Location     Type
 26896 ;;		None
 26897 ;; Auto vars:     Size  Location     Type
 26898 ;;		None
 26899 ;; Return value:  Size  Location     Type
 26900 ;;                  1  [STACK] void 
 26901 ;; Registers used:
 26902 ;;		None
 26903 ;; Tracked objects:
 26904 ;;		On entry : 3F/39
 26905 ;;		On exit  : 0/0
 26906 ;;		Unchanged: 0/0
 26907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26912 ;;Total ram usage:        0 bytes
 26913 ;; Hardware stack levels used:    1
 26914 ;; This function calls:
 26915 ;;		Nothing
 26916 ;; This function is called by:
 26917 ;;		_start_adc_scan
 26918 ;;		_ADCC_ISR
 26919 ;; This function uses a reentrant model
 26920 ;;
 26921                           
 26922                           	psect	text135
 26923  018FA8                     __ptext135:
 26924                           	opt callstack 0
 26925  018FA8                     _adc_int_handler:
 26926                           	opt callstack 13
 26927                           
 26928                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 26929                           
 26930                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26931                           ;incstack = 0
 26932  018FA8  0012               	return		;funcret
 26933  018FAA                     __end_of_adc_int_handler:
 26934                           	opt callstack 0
 26935                           
 26936 ;; *************** function _ADCC_ThresholdISR *****************
 26937 ;; Defined at:
 26938 ;;		line 327 in file "mcc_generated_files/adcc.c"
 26939 ;; Parameters:    Size  Location     Type
 26940 ;;		None
 26941 ;; Auto vars:     Size  Location     Type
 26942 ;;		None
 26943 ;; Return value:  Size  Location     Type
 26944 ;;                  1    wreg      void 
 26945 ;; Registers used:
 26946 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 26947 ;; Tracked objects:
 26948 ;;		On entry : 0/0
 26949 ;;		On exit  : 0/0
 26950 ;;		Unchanged: 0/0
 26951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26954 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26955 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26956 ;;Total ram usage:        5 bytes
 26957 ;; Hardware stack levels used:    1
 26958 ;; Hardware stack levels required when called:    2
 26959 ;; This function calls:
 26960 ;;		Absolute function
 26961 ;;		_ADCC_DefaultInterruptHandler
 26962 ;;		_adc_int_t_handler
 26963 ;; This function is called by:
 26964 ;;		Interrupt level 2
 26965 ;; This function uses a non-reentrant model
 26966 ;;
 26967                           
 26968                           	psect	text136
 26969  017F04                     __ptext136:
 26970                           	opt callstack 0
 26971  017F04                     _ADCC_ThresholdISR:
 26972                           	opt callstack 12
 26973                           
 26974                           ;incstack = 0
 26975  017F04  0060  F0C8  F052   	movff	btemp,??_ADCC_ThresholdISR
 26976  017F0A  0060  F0CC  F053   	movff	btemp+1,??_ADCC_ThresholdISR+1
 26977  017F10  0060  F0E8  F054   	movff	btemp+8,??_ADCC_ThresholdISR+2
 26978  017F16  0060  F0EC  F055   	movff	btemp+9,??_ADCC_ThresholdISR+3
 26979  017F1C  0060  F0F4  F056   	movff	btemp+11,??_ADCC_ThresholdISR+4
 26980  017F22  EE14  F000         	lfsr	1,___inthi_sp
 26981                           
 26982                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 26983  017F26  0139               	movlb	57	; () banked
 26984  017F28  97A1               	bcf	161,3,b	;volatile
 26985                           
 26986                           ; BSR set to: 57
 26987                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 26988  017F2A  5001               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 26989  017F2C  1002               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 26990  017F2E  1003               	iorwf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 26991  017F30  B4D8               	btfsc	status,2,c
 26992  017F32  D00C               	goto	i2u886_49
 26993                           
 26994                           ; BSR set to: 57
 26995                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 26996  017F34  D801               	call	i2u886_48
 26997  017F36  D00A               	goto	i2u886_49
 26998  017F38                     i2u886_48:
 26999  017F38  0005               	push	
 27000  017F3A  6EFA               	movwf	pclath,c
 27001  017F3C  5001               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 27002  017F3E  6EFD               	movwf	tosl,c
 27003  017F40  5002               	movf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 27004  017F42  6EFE               	movwf	tosh,c
 27005  017F44  5003               	movf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 27006  017F46  6EFF               	movwf	tosu,c
 27007  017F48  50FA               	movf	pclath,w,c
 27008  017F4A  0012               	return		;indir
 27009  017F4C                     i2u886_49:
 27010  017F4C  0060  F158  F03D   	movff	??_ADCC_ThresholdISR+4,btemp+11
 27011  017F52  0060  F154  F03B   	movff	??_ADCC_ThresholdISR+3,btemp+9
 27012  017F58  0060  F150  F03A   	movff	??_ADCC_ThresholdISR+2,btemp+8
 27013  017F5E  0060  F14C  F033   	movff	??_ADCC_ThresholdISR+1,btemp+1
 27014  017F64  0060  F148  F032   	movff	??_ADCC_ThresholdISR,btemp
 27015  017F6A  0011               	retfie		f
 27016  017F6C                     __end_of_ADCC_ThresholdISR:
 27017                           	opt callstack 0
 27018                           
 27019 ;; *************** function _UART1_tx_vect_isr *****************
 27020 ;; Defined at:
 27021 ;;		line 199 in file "mcc_generated_files/uart1.c"
 27022 ;; Parameters:    Size  Location     Type
 27023 ;;		None
 27024 ;; Auto vars:     Size  Location     Type
 27025 ;;		None
 27026 ;; Return value:  Size  Location     Type
 27027 ;;                  1    wreg      void 
 27028 ;; Registers used:
 27029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 27030 ;; Tracked objects:
 27031 ;;		On entry : 0/0
 27032 ;;		On exit  : 0/0
 27033 ;;		Unchanged: 0/0
 27034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27039 ;;Total ram usage:        0 bytes
 27040 ;; Hardware stack levels used:    1
 27041 ;; Hardware stack levels required when called:    1
 27042 ;; This function calls:
 27043 ;;		Absolute function
 27044 ;;		_UART1_Transmit_ISR
 27045 ;; This function is called by:
 27046 ;;		Interrupt level 2
 27047 ;; This function uses a non-reentrant model
 27048 ;;
 27049                           
 27050                           	psect	text137
 27051  018B98                     __ptext137:
 27052                           	opt callstack 0
 27053  018B98                     _UART1_tx_vect_isr:
 27054                           	opt callstack 13
 27055                           
 27056                           ;incstack = 0
 27057  018B98  EE14  F000         	lfsr	1,___inthi_sp
 27058                           
 27059                           ;mcc_generated_files/uart1.c: 201:  if (UART1_TxInterruptHandler) {
 27060  018B9C  5007               	movf	_UART1_TxInterruptHandler^0,w,c
 27061  018B9E  1008               	iorwf	(_UART1_TxInterruptHandler+1)^0,w,c
 27062  018BA0  1009               	iorwf	(_UART1_TxInterruptHandler+2)^0,w,c
 27063  018BA2  B4D8               	btfsc	status,2,c
 27064  018BA4  0011               	retfie		f
 27065                           
 27066                           ;mcc_generated_files/uart1.c: 202:   UART1_TxInterruptHandler();
 27067  018BA6  D801               	call	i2u888_48
 27068  018BA8  0011               	retfie		f
 27069  018BAA                     i2u888_48:
 27070  018BAA  0005               	push	
 27071  018BAC  6EFA               	movwf	pclath,c
 27072  018BAE  5007               	movf	_UART1_TxInterruptHandler^0,w,c
 27073  018BB0  6EFD               	movwf	tosl,c
 27074  018BB2  5008               	movf	(_UART1_TxInterruptHandler+1)^0,w,c
 27075  018BB4  6EFE               	movwf	tosh,c
 27076  018BB6  5009               	movf	(_UART1_TxInterruptHandler+2)^0,w,c
 27077  018BB8  6EFF               	movwf	tosu,c
 27078  018BBA  50FA               	movf	pclath,w,c
 27079  018BBC  0012               	return		;indir
 27080  018BBE                     __end_of_UART1_tx_vect_isr:
 27081                           	opt callstack 0
 27082                           
 27083 ;; *************** function _UART1_Transmit_ISR *****************
 27084 ;; Defined at:
 27085 ;;		line 213 in file "mcc_generated_files/uart1.c"
 27086 ;; Parameters:    Size  Location     Type
 27087 ;;		None
 27088 ;; Auto vars:     Size  Location     Type
 27089 ;;		None
 27090 ;; Return value:  Size  Location     Type
 27091 ;;                  1  [STACK] void 
 27092 ;; Registers used:
 27093 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27094 ;; Tracked objects:
 27095 ;;		On entry : 0/0
 27096 ;;		On exit  : 3B/39
 27097 ;;		Unchanged: 0/0
 27098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27103 ;;Total ram usage:        0 bytes
 27104 ;; Hardware stack levels used:    1
 27105 ;; This function calls:
 27106 ;;		Nothing
 27107 ;; This function is called by:
 27108 ;;		_UART1_Initialize
 27109 ;;		_UART1_tx_vect_isr
 27110 ;; This function uses a reentrant model
 27111 ;;
 27112                           
 27113                           	psect	text138
 27114  018890                     __ptext138:
 27115                           	opt callstack 0
 27116  018890                     _UART1_Transmit_ISR:
 27117                           	opt callstack 13
 27118                           
 27119                           ;mcc_generated_files/uart1.c: 216:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 27120                           
 27121                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27122                           ;incstack = 0
 27123  018890  0E40               	movlw	64
 27124  018892  602F               	cpfslt	_uart1TxBufferRemaining^0,c
 27125  018894  D010               	goto	l581
 27126                           
 27127                           ;mcc_generated_files/uart1.c: 217:   U1TXB = uart1TxBuffer[uart1TxTail++];
 27128  018896  0EBC               	movlw	low _uart1TxBuffer
 27129  018898  2430               	addwf	_uart1TxTail^0,w,c	;volatile
 27130  01889A  6ED9               	movwf	fsr2l,c
 27131  01889C  6ADA               	clrf	fsr2h,c
 27132  01889E  0E02               	movlw	high _uart1TxBuffer
 27133  0188A0  22DA               	addwfc	fsr2h,f,c
 27134  0188A2  50DF               	movf	indf2,w,c
 27135  0188A4  013D               	movlb	61	; () banked
 27136  0188A6  6FEA               	movwf	234,b	;volatile
 27137                           
 27138                           ; BSR set to: 61
 27139  0188A8  2A30               	incf	_uart1TxTail^0,f,c	;volatile
 27140                           
 27141                           ; BSR set to: 61
 27142                           ;mcc_generated_files/uart1.c: 218:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 27143  0188AA  0E3F               	movlw	63
 27144  0188AC  6430               	cpfsgt	_uart1TxTail^0,c
 27145  0188AE  D001               	goto	l9048
 27146                           
 27147                           ; BSR set to: 61
 27148                           ;mcc_generated_files/uart1.c: 219:    uart1TxTail = 0;
 27149  0188B0  6A30               	clrf	_uart1TxTail^0,c	;volatile
 27150  0188B2                     l9048:
 27151                           
 27152                           ; BSR set to: 61
 27153                           ;mcc_generated_files/uart1.c: 221:   uart1TxBufferRemaining++;
 27154  0188B2  2A2F               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 27155                           
 27156                           ;mcc_generated_files/uart1.c: 222:  } else {
 27157  0188B4  0012               	return	
 27158  0188B6                     l581:
 27159                           
 27160                           ;mcc_generated_files/uart1.c: 223:   PIE3bits.U1TXIE = 0;
 27161  0188B6  0139               	movlb	57	; () banked
 27162  0188B8  9993               	bcf	147,4,b	;volatile
 27163                           
 27164                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 27165  0188BA  0012               	return		;funcret
 27166  0188BC                     __end_of_UART1_Transmit_ISR:
 27167                           	opt callstack 0
 27168                           
 27169 ;; *************** function _UART1_rx_vect_isr *****************
 27170 ;; Defined at:
 27171 ;;		line 206 in file "mcc_generated_files/uart1.c"
 27172 ;; Parameters:    Size  Location     Type
 27173 ;;		None
 27174 ;; Auto vars:     Size  Location     Type
 27175 ;;		None
 27176 ;; Return value:  Size  Location     Type
 27177 ;;                  1    wreg      void 
 27178 ;; Registers used:
 27179 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 27180 ;; Tracked objects:
 27181 ;;		On entry : 0/0
 27182 ;;		On exit  : 0/0
 27183 ;;		Unchanged: 0/0
 27184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27189 ;;Total ram usage:        0 bytes
 27190 ;; Hardware stack levels used:    1
 27191 ;; Hardware stack levels required when called:    1
 27192 ;; This function calls:
 27193 ;;		Absolute function
 27194 ;;		_UART1_Receive_ISR
 27195 ;; This function is called by:
 27196 ;;		Interrupt level 2
 27197 ;; This function uses a non-reentrant model
 27198 ;;
 27199                           
 27200                           	psect	text139
 27201  018BC0                     __ptext139:
 27202                           	opt callstack 0
 27203  018BC0                     _UART1_rx_vect_isr:
 27204                           	opt callstack 13
 27205                           
 27206                           ;incstack = 0
 27207  018BC0  EE14  F000         	lfsr	1,___inthi_sp
 27208                           
 27209                           ;mcc_generated_files/uart1.c: 208:  if (UART1_RxInterruptHandler) {
 27210  018BC4  500A               	movf	_UART1_RxInterruptHandler^0,w,c
 27211  018BC6  100B               	iorwf	(_UART1_RxInterruptHandler+1)^0,w,c
 27212  018BC8  100C               	iorwf	(_UART1_RxInterruptHandler+2)^0,w,c
 27213  018BCA  B4D8               	btfsc	status,2,c
 27214  018BCC  0011               	retfie		f
 27215                           
 27216                           ;mcc_generated_files/uart1.c: 209:   UART1_RxInterruptHandler();
 27217  018BCE  D801               	call	i2u890_48
 27218  018BD0  0011               	retfie		f
 27219  018BD2                     i2u890_48:
 27220  018BD2  0005               	push	
 27221  018BD4  6EFA               	movwf	pclath,c
 27222  018BD6  500A               	movf	_UART1_RxInterruptHandler^0,w,c
 27223  018BD8  6EFD               	movwf	tosl,c
 27224  018BDA  500B               	movf	(_UART1_RxInterruptHandler+1)^0,w,c
 27225  018BDC  6EFE               	movwf	tosh,c
 27226  018BDE  500C               	movf	(_UART1_RxInterruptHandler+2)^0,w,c
 27227  018BE0  6EFF               	movwf	tosu,c
 27228  018BE2  50FA               	movf	pclath,w,c
 27229  018BE4  0012               	return		;indir
 27230  018BE6                     __end_of_UART1_rx_vect_isr:
 27231                           	opt callstack 0
 27232                           
 27233 ;; *************** function _UART1_Receive_ISR *****************
 27234 ;; Defined at:
 27235 ;;		line 229 in file "mcc_generated_files/uart1.c"
 27236 ;; Parameters:    Size  Location     Type
 27237 ;;		None
 27238 ;; Auto vars:     Size  Location     Type
 27239 ;;		None
 27240 ;; Return value:  Size  Location     Type
 27241 ;;                  1  [STACK] void 
 27242 ;; Registers used:
 27243 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27244 ;; Tracked objects:
 27245 ;;		On entry : 0/0
 27246 ;;		On exit  : 0/0
 27247 ;;		Unchanged: 0/0
 27248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27253 ;;Total ram usage:        0 bytes
 27254 ;; Hardware stack levels used:    1
 27255 ;; This function calls:
 27256 ;;		Nothing
 27257 ;; This function is called by:
 27258 ;;		_UART1_Initialize
 27259 ;;		_UART1_rx_vect_isr
 27260 ;; This function uses a reentrant model
 27261 ;;
 27262                           
 27263                           	psect	text140
 27264  018DA8                     __ptext140:
 27265                           	opt callstack 0
 27266  018DA8                     _UART1_Receive_ISR:
 27267                           	opt callstack 13
 27268                           
 27269                           ;mcc_generated_files/uart1.c: 232:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 27270                           
 27271                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27272                           ;incstack = 0
 27273  018DA8  0E00               	movlw	low _uart1RxBuffer
 27274  018DAA  242E               	addwf	_uart1RxHead^0,w,c	;volatile
 27275  018DAC  6ED9               	movwf	fsr2l,c
 27276  018DAE  6ADA               	clrf	fsr2h,c
 27277  018DB0  0E06               	movlw	high _uart1RxBuffer
 27278  018DB2  22DA               	addwfc	fsr2h,f,c
 27279  018DB4  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 27280  018DBA  2A2E               	incf	_uart1RxHead^0,f,c	;volatile
 27281                           
 27282                           ;mcc_generated_files/uart1.c: 233:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 27283  018DBC  282E               	incf	_uart1RxHead^0,w,c
 27284  018DBE  B4D8               	btfsc	status,2,c
 27285                           
 27286                           ;mcc_generated_files/uart1.c: 234:   uart1RxHead = 0;
 27287  018DC0  6A2E               	clrf	_uart1RxHead^0,c	;volatile
 27288                           
 27289                           ;mcc_generated_files/uart1.c: 236:  uart1RxCount++;
 27290  018DC2  2A2C               	incf	_uart1RxCount^0,f,c	;volatile
 27291                           
 27292                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 27293  018DC4  0012               	return		;funcret
 27294  018DC6                     __end_of_UART1_Receive_ISR:
 27295                           	opt callstack 0
 27296                           
 27297 ;; *************** function _UART2_tx_vect_isr *****************
 27298 ;; Defined at:
 27299 ;;		line 195 in file "mcc_generated_files/uart2.c"
 27300 ;; Parameters:    Size  Location     Type
 27301 ;;		None
 27302 ;; Auto vars:     Size  Location     Type
 27303 ;;		None
 27304 ;; Return value:  Size  Location     Type
 27305 ;;                  1    wreg      void 
 27306 ;; Registers used:
 27307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 27308 ;; Tracked objects:
 27309 ;;		On entry : 0/0
 27310 ;;		On exit  : 0/0
 27311 ;;		Unchanged: 0/0
 27312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27317 ;;Total ram usage:        0 bytes
 27318 ;; Hardware stack levels used:    1
 27319 ;; Hardware stack levels required when called:    1
 27320 ;; This function calls:
 27321 ;;		Absolute function
 27322 ;;		_UART2_Transmit_ISR
 27323 ;; This function is called by:
 27324 ;;		Interrupt level 2
 27325 ;; This function uses a non-reentrant model
 27326 ;;
 27327                           
 27328                           	psect	text141
 27329  018BE8                     __ptext141:
 27330                           	opt callstack 0
 27331  018BE8                     _UART2_tx_vect_isr:
 27332                           	opt callstack 13
 27333                           
 27334                           ;incstack = 0
 27335  018BE8  EE14  F000         	lfsr	1,___inthi_sp
 27336                           
 27337                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 27338  018BEC  500D               	movf	_UART2_TxInterruptHandler^0,w,c
 27339  018BEE  100E               	iorwf	(_UART2_TxInterruptHandler+1)^0,w,c
 27340  018BF0  100F               	iorwf	(_UART2_TxInterruptHandler+2)^0,w,c
 27341  018BF2  B4D8               	btfsc	status,2,c
 27342  018BF4  0011               	retfie		f
 27343                           
 27344                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 27345  018BF6  D801               	call	i2u892_48
 27346  018BF8  0011               	retfie		f
 27347  018BFA                     i2u892_48:
 27348  018BFA  0005               	push	
 27349  018BFC  6EFA               	movwf	pclath,c
 27350  018BFE  500D               	movf	_UART2_TxInterruptHandler^0,w,c
 27351  018C00  6EFD               	movwf	tosl,c
 27352  018C02  500E               	movf	(_UART2_TxInterruptHandler+1)^0,w,c
 27353  018C04  6EFE               	movwf	tosh,c
 27354  018C06  500F               	movf	(_UART2_TxInterruptHandler+2)^0,w,c
 27355  018C08  6EFF               	movwf	tosu,c
 27356  018C0A  50FA               	movf	pclath,w,c
 27357  018C0C  0012               	return		;indir
 27358  018C0E                     __end_of_UART2_tx_vect_isr:
 27359                           	opt callstack 0
 27360                           
 27361 ;; *************** function _UART2_Transmit_ISR *****************
 27362 ;; Defined at:
 27363 ;;		line 213 in file "mcc_generated_files/uart2.c"
 27364 ;; Parameters:    Size  Location     Type
 27365 ;;		None
 27366 ;; Auto vars:     Size  Location     Type
 27367 ;;		None
 27368 ;; Return value:  Size  Location     Type
 27369 ;;                  1  [STACK] void 
 27370 ;; Registers used:
 27371 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27372 ;; Tracked objects:
 27373 ;;		On entry : 0/0
 27374 ;;		On exit  : 3B/39
 27375 ;;		Unchanged: 0/0
 27376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27381 ;;Total ram usage:        0 bytes
 27382 ;; Hardware stack levels used:    1
 27383 ;; This function calls:
 27384 ;;		Nothing
 27385 ;; This function is called by:
 27386 ;;		_UART2_Initialize
 27387 ;;		_UART2_tx_vect_isr
 27388 ;; This function uses a reentrant model
 27389 ;;
 27390                           
 27391                           	psect	text142
 27392  0188BC                     __ptext142:
 27393                           	opt callstack 0
 27394  0188BC                     _UART2_Transmit_ISR:
 27395                           	opt callstack 13
 27396                           
 27397                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 27398                           
 27399                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27400                           ;incstack = 0
 27401  0188BC  0E40               	movlw	64
 27402  0188BE  6029               	cpfslt	_uart2TxBufferRemaining^0,c
 27403  0188C0  D010               	goto	l701
 27404                           
 27405                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 27406  0188C2  0E54               	movlw	low _uart2TxBuffer
 27407  0188C4  242A               	addwf	_uart2TxTail^0,w,c	;volatile
 27408  0188C6  6ED9               	movwf	fsr2l,c
 27409  0188C8  6ADA               	clrf	fsr2h,c
 27410  0188CA  0E03               	movlw	high _uart2TxBuffer
 27411  0188CC  22DA               	addwfc	fsr2h,f,c
 27412  0188CE  50DF               	movf	indf2,w,c
 27413  0188D0  013D               	movlb	61	; () banked
 27414  0188D2  6FD2               	movwf	210,b	;volatile
 27415                           
 27416                           ; BSR set to: 61
 27417  0188D4  2A2A               	incf	_uart2TxTail^0,f,c	;volatile
 27418                           
 27419                           ; BSR set to: 61
 27420                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 27421  0188D6  0E3F               	movlw	63
 27422  0188D8  642A               	cpfsgt	_uart2TxTail^0,c
 27423  0188DA  D001               	goto	l9070
 27424                           
 27425                           ; BSR set to: 61
 27426                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 27427  0188DC  6A2A               	clrf	_uart2TxTail^0,c	;volatile
 27428  0188DE                     l9070:
 27429                           
 27430                           ; BSR set to: 61
 27431                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 27432  0188DE  2A29               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 27433                           
 27434                           ;mcc_generated_files/uart2.c: 224:     }
 27435  0188E0  0012               	return	
 27436  0188E2                     l701:
 27437                           
 27438                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 27439  0188E2  0139               	movlb	57	; () banked
 27440  0188E4  9796               	bcf	150,3,b	;volatile
 27441                           
 27442                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 27443  0188E6  0012               	return		;funcret
 27444  0188E8                     __end_of_UART2_Transmit_ISR:
 27445                           	opt callstack 0
 27446                           
 27447 ;; *************** function _UART2_rx_vect_isr *****************
 27448 ;; Defined at:
 27449 ;;		line 203 in file "mcc_generated_files/uart2.c"
 27450 ;; Parameters:    Size  Location     Type
 27451 ;;		None
 27452 ;; Auto vars:     Size  Location     Type
 27453 ;;		None
 27454 ;; Return value:  Size  Location     Type
 27455 ;;                  1    wreg      void 
 27456 ;; Registers used:
 27457 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 27458 ;; Tracked objects:
 27459 ;;		On entry : 0/0
 27460 ;;		On exit  : 0/0
 27461 ;;		Unchanged: 0/0
 27462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27467 ;;Total ram usage:        0 bytes
 27468 ;; Hardware stack levels used:    1
 27469 ;; Hardware stack levels required when called:    1
 27470 ;; This function calls:
 27471 ;;		Absolute function
 27472 ;;		_UART2_Receive_ISR
 27473 ;; This function is called by:
 27474 ;;		Interrupt level 2
 27475 ;; This function uses a non-reentrant model
 27476 ;;
 27477                           
 27478                           	psect	text143
 27479  018C10                     __ptext143:
 27480                           	opt callstack 0
 27481  018C10                     _UART2_rx_vect_isr:
 27482                           	opt callstack 13
 27483                           
 27484                           ;incstack = 0
 27485  018C10  EE14  F000         	lfsr	1,___inthi_sp
 27486                           
 27487                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 27488  018C14  5010               	movf	_UART2_RxInterruptHandler^0,w,c
 27489  018C16  1011               	iorwf	(_UART2_RxInterruptHandler+1)^0,w,c
 27490  018C18  1012               	iorwf	(_UART2_RxInterruptHandler+2)^0,w,c
 27491  018C1A  B4D8               	btfsc	status,2,c
 27492  018C1C  0011               	retfie		f
 27493                           
 27494                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 27495  018C1E  D801               	call	i2u894_48
 27496  018C20  0011               	retfie		f
 27497  018C22                     i2u894_48:
 27498  018C22  0005               	push	
 27499  018C24  6EFA               	movwf	pclath,c
 27500  018C26  5010               	movf	_UART2_RxInterruptHandler^0,w,c
 27501  018C28  6EFD               	movwf	tosl,c
 27502  018C2A  5011               	movf	(_UART2_RxInterruptHandler+1)^0,w,c
 27503  018C2C  6EFE               	movwf	tosh,c
 27504  018C2E  5012               	movf	(_UART2_RxInterruptHandler+2)^0,w,c
 27505  018C30  6EFF               	movwf	tosu,c
 27506  018C32  50FA               	movf	pclath,w,c
 27507  018C34  0012               	return		;indir
 27508  018C36                     __end_of_UART2_rx_vect_isr:
 27509                           	opt callstack 0
 27510                           
 27511 ;; *************** function _UART2_Receive_ISR *****************
 27512 ;; Defined at:
 27513 ;;		line 233 in file "mcc_generated_files/uart2.c"
 27514 ;; Parameters:    Size  Location     Type
 27515 ;;		None
 27516 ;; Auto vars:     Size  Location     Type
 27517 ;;		None
 27518 ;; Return value:  Size  Location     Type
 27519 ;;                  1  [STACK] void 
 27520 ;; Registers used:
 27521 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27522 ;; Tracked objects:
 27523 ;;		On entry : 0/0
 27524 ;;		On exit  : 0/0
 27525 ;;		Unchanged: 0/0
 27526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27531 ;;Total ram usage:        0 bytes
 27532 ;; Hardware stack levels used:    1
 27533 ;; This function calls:
 27534 ;;		Nothing
 27535 ;; This function is called by:
 27536 ;;		_UART2_Initialize
 27537 ;;		_UART2_rx_vect_isr
 27538 ;; This function uses a reentrant model
 27539 ;;
 27540                           
 27541                           	psect	text144
 27542  018DC6                     __ptext144:
 27543                           	opt callstack 0
 27544  018DC6                     _UART2_Receive_ISR:
 27545                           	opt callstack 13
 27546                           
 27547                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 27548                           
 27549                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27550                           ;incstack = 0
 27551  018DC6  0E00               	movlw	low _uart2RxBuffer
 27552  018DC8  2428               	addwf	_uart2RxHead^0,w,c	;volatile
 27553  018DCA  6ED9               	movwf	fsr2l,c
 27554  018DCC  6ADA               	clrf	fsr2h,c
 27555  018DCE  0E07               	movlw	high _uart2RxBuffer
 27556  018DD0  22DA               	addwfc	fsr2h,f,c
 27557  018DD2  006F F743 FFDF     	movff	15824,indf2	;volatile
 27558  018DD8  2A28               	incf	_uart2RxHead^0,f,c	;volatile
 27559                           
 27560                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 27561  018DDA  2828               	incf	_uart2RxHead^0,w,c
 27562  018DDC  B4D8               	btfsc	status,2,c
 27563                           
 27564                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 27565  018DDE  6A28               	clrf	_uart2RxHead^0,c	;volatile
 27566                           
 27567                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 27568  018DE0  2A26               	incf	_uart2RxCount^0,f,c	;volatile
 27569                           
 27570                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 27571  018DE2  0012               	return		;funcret
 27572  018DE4                     __end_of_UART2_Receive_ISR:
 27573                           	opt callstack 0
 27574                           
 27575 ;; *************** function _TMR6_ISR *****************
 27576 ;; Defined at:
 27577 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 27578 ;; Parameters:    Size  Location     Type
 27579 ;;		None
 27580 ;; Auto vars:     Size  Location     Type
 27581 ;;		None
 27582 ;; Return value:  Size  Location     Type
 27583 ;;                  1    wreg      void 
 27584 ;; Registers used:
 27585 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 27586 ;; Tracked objects:
 27587 ;;		On entry : 0/0
 27588 ;;		On exit  : 0/0
 27589 ;;		Unchanged: 0/0
 27590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27593 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27594 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27595 ;;Total ram usage:        1 bytes
 27596 ;; Hardware stack levels used:    1
 27597 ;; Hardware stack levels required when called:    2
 27598 ;; This function calls:
 27599 ;;		_TMR6_CallBack
 27600 ;; This function is called by:
 27601 ;;		Interrupt level 2
 27602 ;; This function uses a non-reentrant model
 27603 ;;
 27604                           
 27605                           	psect	text145
 27606  018E38                     __ptext145:
 27607                           	opt callstack 0
 27608  018E38                     _TMR6_ISR:
 27609                           	opt callstack 12
 27610                           
 27611                           ;incstack = 0
 27612  018E38  0060  F0C8  F057   	movff	btemp,??_TMR6_ISR
 27613  018E3E  EE14  F000         	lfsr	1,___inthi_sp
 27614                           
 27615                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 27616  018E42  0139               	movlb	57	; () banked
 27617  018E44  91A9               	bcf	169,0,b	;volatile
 27618                           
 27619                           ; BSR set to: 57
 27620                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 27621  018E46  EC63  F0C6         	call	_TMR6_CallBack	;wreg free
 27622  018E4A  0060  F15C  F032   	movff	??_TMR6_ISR,btemp
 27623  018E50  0011               	retfie		f
 27624  018E52                     __end_of_TMR6_ISR:
 27625                           	opt callstack 0
 27626                           
 27627 ;; *************** function _TMR6_CallBack *****************
 27628 ;; Defined at:
 27629 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 27630 ;; Parameters:    Size  Location     Type
 27631 ;;		None
 27632 ;; Auto vars:     Size  Location     Type
 27633 ;;		None
 27634 ;; Return value:  Size  Location     Type
 27635 ;;                  1  [STACK] void 
 27636 ;; Registers used:
 27637 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 27638 ;; Tracked objects:
 27639 ;;		On entry : 3F/39
 27640 ;;		On exit  : 0/0
 27641 ;;		Unchanged: 0/0
 27642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27647 ;;Total ram usage:        0 bytes
 27648 ;; Hardware stack levels used:    1
 27649 ;; Hardware stack levels required when called:    1
 27650 ;; This function calls:
 27651 ;;		Absolute function
 27652 ;;		_TMR6_DefaultInterruptHandler
 27653 ;; This function is called by:
 27654 ;;		_TMR6_ISR
 27655 ;; This function uses a reentrant model
 27656 ;;
 27657                           
 27658                           	psect	text146
 27659  018CC6                     __ptext146:
 27660                           	opt callstack 0
 27661  018CC6                     _TMR6_CallBack:
 27662                           	opt callstack 12
 27663                           
 27664                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 27665                           
 27666                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27667                           ;incstack = 0
 27668  018CC6  0100               	movlb	0	; () banked
 27669  018CC8  51C4               	movf	_TMR6_InterruptHandler& (0+255),w,b
 27670  018CCA  11C5               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 27671  018CCC  11C6               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 27672  018CCE  B4D8               	btfsc	status,2,c
 27673  018CD0  0012               	return	
 27674                           
 27675                           ; BSR set to: 0
 27676                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 27677  018CD2  D801               	call	u861_48
 27678  018CD4  0012               	return	
 27679  018CD6                     u861_48:
 27680  018CD6  0005               	push	
 27681  018CD8  6EFA               	movwf	pclath,c
 27682  018CDA  51C4               	movf	_TMR6_InterruptHandler& (0+255),w,b
 27683  018CDC  6EFD               	movwf	tosl,c
 27684  018CDE  51C5               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 27685  018CE0  6EFE               	movwf	tosh,c
 27686  018CE2  51C6               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 27687  018CE4  6EFF               	movwf	tosu,c
 27688  018CE6  50FA               	movf	pclath,w,c
 27689  018CE8  0012               	return		;indir
 27690  018CEA                     __end_of_TMR6_CallBack:
 27691                           	opt callstack 0
 27692                           
 27693 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 27694 ;; Defined at:
 27695 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 27696 ;; Parameters:    Size  Location     Type
 27697 ;;		None
 27698 ;; Auto vars:     Size  Location     Type
 27699 ;;  i               1  [STACK] unsigned char 
 27700 ;; Return value:  Size  Location     Type
 27701 ;;                  1  [STACK] void 
 27702 ;; Registers used:
 27703 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 27704 ;; Tracked objects:
 27705 ;;		On entry : 3F/0
 27706 ;;		On exit  : 0/0
 27707 ;;		Unchanged: 0/0
 27708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27713 ;;Total ram usage:        0 bytes
 27714 ;; Hardware stack levels used:    1
 27715 ;; This function calls:
 27716 ;;		Nothing
 27717 ;; This function is called by:
 27718 ;;		_TMR6_Initialize
 27719 ;;		_TMR6_CallBack
 27720 ;; This function uses a reentrant model
 27721 ;;
 27722                           
 27723                           	psect	text147
 27724  0184D0                     __ptext147:
 27725                           	opt callstack 0
 27726  0184D0                     _TMR6_DefaultInterruptHandler:
 27727                           	opt callstack 0
 27728                           
 27729                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27730  0184D0  52E6               	movf	postinc1,f,c
 27731                           
 27732                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 27733                           ;stkvar	_i @ sp[(-1)+0]
 27734                           
 27735                           ;incstack = 0
 27736  0184D2  0EFF               	movlw	-1
 27737  0184D4  6AE3               	clrf	plusw1,c
 27738  0184D6                     l8734:
 27739                           
 27740                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 27741                           ;stkvar	_i @ sp[(-1)+0]
 27742  0184D6  0EFF               	movlw	-1
 27743  0184D8  50E3               	movf	plusw1,w,c
 27744  0184DA  0D02               	mullw	2
 27745  0184DC  50F3               	movf	243,w,c
 27746  0184DE  0F89               	addlw	low _tickCount
 27747  0184E0  6ED9               	movwf	fsr2l,c
 27748  0184E2  6ADA               	clrf	fsr2h,c
 27749  0184E4  50DE               	movf	postinc2,w,c
 27750  0184E6  10DE               	iorwf	postinc2,w,c
 27751  0184E8  B4D8               	btfsc	status,2,c
 27752  0184EA  D00A               	goto	l8738
 27753                           
 27754                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 27755                           ;stkvar	_i @ sp[(-1)+0]
 27756  0184EC  0EFF               	movlw	-1
 27757  0184EE  50E3               	movf	plusw1,w,c
 27758  0184F0  0D02               	mullw	2
 27759  0184F2  50F3               	movf	243,w,c
 27760  0184F4  0F89               	addlw	low _tickCount
 27761  0184F6  6ED9               	movwf	fsr2l,c
 27762  0184F8  6ADA               	clrf	fsr2h,c
 27763  0184FA  06DE               	decf	postinc2,f,c
 27764  0184FC  0E00               	movlw	0
 27765  0184FE  5ADD               	subwfb	postdec2,f,c
 27766  018500                     l8738:
 27767                           
 27768                           ;mcc_generated_files/tmr6.c: 207:  }
 27769                           ;stkvar	_i @ sp[(-1)+0]
 27770  018500  0EFF               	movlw	-1
 27771  018502  2AE3               	incf	plusw1,f,c
 27772                           
 27773                           ;stkvar	_i @ sp[(-1)+0]
 27774  018504  0EFF               	movlw	-1
 27775  018506  006F FF8C  F032    	movff	plusw1,btemp
 27776  01850C  0E0B               	movlw	11
 27777  01850E  6432               	cpfsgt	btemp^0,c
 27778  018510  D7E2               	goto	l8734
 27779                           
 27780                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 27781  018512  52E5               	movf	postdec1,f,c
 27782  018514  0012               	return		;funcret
 27783  018516                     __end_of_TMR6_DefaultInterruptHandler:
 27784                           	opt callstack 0
 27785                           
 27786 ;; *************** function _DMA1_DMASCNT_ISR *****************
 27787 ;; Defined at:
 27788 ;;		line 126 in file "mcc_generated_files/dma1.c"
 27789 ;; Parameters:    Size  Location     Type
 27790 ;;		None
 27791 ;; Auto vars:     Size  Location     Type
 27792 ;;		None
 27793 ;; Return value:  Size  Location     Type
 27794 ;;                  1    wreg      void 
 27795 ;; Registers used:
 27796 ;;		None
 27797 ;; Tracked objects:
 27798 ;;		On entry : 0/0
 27799 ;;		On exit  : 3F/0
 27800 ;;		Unchanged: 0/0
 27801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27806 ;;Total ram usage:        0 bytes
 27807 ;; Hardware stack levels used:    1
 27808 ;; This function calls:
 27809 ;;		Nothing
 27810 ;; This function is called by:
 27811 ;;		Interrupt level 2
 27812 ;; This function uses a non-reentrant model
 27813 ;;
 27814                           
 27815                           	psect	text148
 27816  018F28                     __ptext148:
 27817                           	opt callstack 0
 27818  018F28                     _DMA1_DMASCNT_ISR:
 27819                           	opt callstack 14
 27820                           
 27821                           ;incstack = 0
 27822  018F28  EE14  F000         	lfsr	1,___inthi_sp
 27823                           
 27824                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 27825  018F2C  0139               	movlb	57	; () banked
 27826  018F2E  91A2               	bcf	162,0,b	;volatile
 27827                           
 27828                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 27829  018F30  0100               	movlb	0	; () banked
 27830  018F32  97A1               	bcf	_spi_link& (0+255),3,b	;volatile
 27831                           
 27832                           ; BSR set to: 0
 27833  018F34  0011               	retfie		f
 27834  018F36                     __end_of_DMA1_DMASCNT_ISR:
 27835                           	opt callstack 0
 27836                           
 27837 ;; *************** function _DMA1_DMADCNT_ISR *****************
 27838 ;; Defined at:
 27839 ;;		line 134 in file "mcc_generated_files/dma1.c"
 27840 ;; Parameters:    Size  Location     Type
 27841 ;;		None
 27842 ;; Auto vars:     Size  Location     Type
 27843 ;;		None
 27844 ;; Return value:  Size  Location     Type
 27845 ;;                  1    wreg      void 
 27846 ;; Registers used:
 27847 ;;		None
 27848 ;; Tracked objects:
 27849 ;;		On entry : 0/0
 27850 ;;		On exit  : 3F/39
 27851 ;;		Unchanged: 0/0
 27852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27857 ;;Total ram usage:        0 bytes
 27858 ;; Hardware stack levels used:    1
 27859 ;; This function calls:
 27860 ;;		Nothing
 27861 ;; This function is called by:
 27862 ;;		Interrupt level 2
 27863 ;; This function uses a non-reentrant model
 27864 ;;
 27865                           
 27866                           	psect	text149
 27867  018F40                     __ptext149:
 27868                           	opt callstack 0
 27869  018F40                     _DMA1_DMADCNT_ISR:
 27870                           	opt callstack 14
 27871                           
 27872                           ; BSR set to: 0
 27873                           ;incstack = 0
 27874  018F40  EE14  F000         	lfsr	1,___inthi_sp
 27875                           
 27876                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 27877  018F44  0139               	movlb	57	; () banked
 27878  018F46  93A2               	bcf	162,1,b	;volatile
 27879                           
 27880                           ; BSR set to: 57
 27881  018F48  0011               	retfie		f
 27882  018F4A                     __end_of_DMA1_DMADCNT_ISR:
 27883                           	opt callstack 0
 27884                           
 27885 ;; *************** function _DMA1_DMAA_ISR *****************
 27886 ;; Defined at:
 27887 ;;		line 144 in file "mcc_generated_files/dma1.c"
 27888 ;; Parameters:    Size  Location     Type
 27889 ;;		None
 27890 ;; Auto vars:     Size  Location     Type
 27891 ;;		None
 27892 ;; Return value:  Size  Location     Type
 27893 ;;                  1    wreg      void 
 27894 ;; Registers used:
 27895 ;;		None
 27896 ;; Tracked objects:
 27897 ;;		On entry : 0/0
 27898 ;;		On exit  : 3F/39
 27899 ;;		Unchanged: 0/0
 27900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27905 ;;Total ram usage:        0 bytes
 27906 ;; Hardware stack levels used:    1
 27907 ;; This function calls:
 27908 ;;		Nothing
 27909 ;; This function is called by:
 27910 ;;		Interrupt level 2
 27911 ;; This function uses a non-reentrant model
 27912 ;;
 27913                           
 27914                           	psect	text150
 27915  018F4C                     __ptext150:
 27916                           	opt callstack 0
 27917  018F4C                     _DMA1_DMAA_ISR:
 27918                           	opt callstack 14
 27919                           
 27920                           ; BSR set to: 57
 27921                           ;incstack = 0
 27922  018F4C  EE14  F000         	lfsr	1,___inthi_sp
 27923                           
 27924                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 27925  018F50  0139               	movlb	57	; () banked
 27926  018F52  97A2               	bcf	162,3,b	;volatile
 27927                           
 27928                           ; BSR set to: 57
 27929  018F54  0011               	retfie		f
 27930  018F56                     __end_of_DMA1_DMAA_ISR:
 27931                           	opt callstack 0
 27932                           
 27933 ;; *************** function _DMA1_DMAOR_ISR *****************
 27934 ;; Defined at:
 27935 ;;		line 155 in file "mcc_generated_files/dma1.c"
 27936 ;; Parameters:    Size  Location     Type
 27937 ;;		None
 27938 ;; Auto vars:     Size  Location     Type
 27939 ;;		None
 27940 ;; Return value:  Size  Location     Type
 27941 ;;                  1    wreg      void 
 27942 ;; Registers used:
 27943 ;;		None
 27944 ;; Tracked objects:
 27945 ;;		On entry : 0/0
 27946 ;;		On exit  : 3F/39
 27947 ;;		Unchanged: 0/0
 27948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27953 ;;Total ram usage:        0 bytes
 27954 ;; Hardware stack levels used:    1
 27955 ;; This function calls:
 27956 ;;		Nothing
 27957 ;; This function is called by:
 27958 ;;		Interrupt level 2
 27959 ;; This function uses a non-reentrant model
 27960 ;;
 27961                           
 27962                           	psect	text151
 27963  018F58                     __ptext151:
 27964                           	opt callstack 0
 27965  018F58                     _DMA1_DMAOR_ISR:
 27966                           	opt callstack 14
 27967                           
 27968                           ; BSR set to: 57
 27969                           ;incstack = 0
 27970  018F58  EE14  F000         	lfsr	1,___inthi_sp
 27971                           
 27972                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 27973  018F5C  0139               	movlb	57	; () banked
 27974  018F5E  95A2               	bcf	162,2,b	;volatile
 27975                           
 27976                           ; BSR set to: 57
 27977  018F60  0011               	retfie		f
 27978  018F62                     __end_of_DMA1_DMAOR_ISR:
 27979                           	opt callstack 0
 27980                           
 27981                           ;
 27982                           ; Interrupt Vector Table @ 0x8
 27983                           ;
 27984                           
 27985                           	psect	ivt0x8
 27986  000008                     __pivt0x8:
 27987                           	opt callstack 0
 27988  000008                     ivt0x8_base:
 27989                           	opt callstack 0
 27990                           
 27991                           ; Vector 0 : SWINT
 27992  000008  63E7               	dw	_Default_ISR shr (0+2)
 27993                           
 27994                           ; Vector 1 : HLVD
 27995  00000A  63E7               	dw	_Default_ISR shr (0+2)
 27996                           
 27997                           ; Vector 2 : OSF
 27998  00000C  63E7               	dw	_Default_ISR shr (0+2)
 27999                           
 28000                           ; Vector 3 : CSW
 28001  00000E  63E7               	dw	_Default_ISR shr (0+2)
 28002                           
 28003                           ; Vector 4 : NVM
 28004  000010  63E7               	dw	_Default_ISR shr (0+2)
 28005                           
 28006                           ; Vector 5 : SCAN
 28007  000012  63E7               	dw	_Default_ISR shr (0+2)
 28008                           
 28009                           ; Vector 6 : CRC
 28010  000014  63E7               	dw	_Default_ISR shr (0+2)
 28011                           
 28012                           ; Vector 7 : IOC
 28013  000016  63E7               	dw	_Default_ISR shr (0+2)
 28014                           
 28015                           ; Vector 8 : INT0
 28016  000018  63C6               	dw	_INT0_ISR shr (0+2)
 28017                           
 28018                           ; Vector 9 : ZCD
 28019  00001A  63E7               	dw	_Default_ISR shr (0+2)
 28020                           
 28021                           ; Vector 10 : AD
 28022  00001C  6245               	dw	_ADCC_ISR shr (0+2)
 28023                           
 28024                           ; Vector 11 : ADT
 28025  00001E  5FC1               	dw	_ADCC_ThresholdISR shr (0+2)
 28026                           
 28027                           ; Vector 12 : CMP1
 28028  000020  63E7               	dw	_Default_ISR shr (0+2)
 28029                           
 28030                           ; Vector 13 : SMT1
 28031  000022  63E7               	dw	_Default_ISR shr (0+2)
 28032                           
 28033                           ; Vector 14 : SMT1PRA
 28034  000024  63E7               	dw	_Default_ISR shr (0+2)
 28035                           
 28036                           ; Vector 15 : SMT1PRW
 28037  000026  63E7               	dw	_Default_ISR shr (0+2)
 28038                           
 28039                           ; Vector 16 : DMA1SCNT
 28040  000028  63CA               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 28041                           
 28042                           ; Vector 17 : DMA1DCNT
 28043  00002A  63D0               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 28044                           
 28045                           ; Vector 18 : DMA1OR
 28046  00002C  63D6               	dw	_DMA1_DMAOR_ISR shr (0+2)
 28047                           
 28048                           ; Vector 19 : DMA1A
 28049  00002E  63D3               	dw	_DMA1_DMAA_ISR shr (0+2)
 28050                           
 28051                           ; Vector 20 : SPI1RX
 28052  000030  63E7               	dw	_Default_ISR shr (0+2)
 28053                           
 28054                           ; Vector 21 : SPI1TX
 28055  000032  63E7               	dw	_Default_ISR shr (0+2)
 28056                           
 28057                           ; Vector 22 : SPI1
 28058  000034  63E7               	dw	_Default_ISR shr (0+2)
 28059                           
 28060                           ; Vector 23 : I2C1RX
 28061  000036  63E7               	dw	_Default_ISR shr (0+2)
 28062                           
 28063                           ; Vector 24 : I2C1TX
 28064  000038  63E7               	dw	_Default_ISR shr (0+2)
 28065                           
 28066                           ; Vector 25 : I2C1
 28067  00003A  63E7               	dw	_Default_ISR shr (0+2)
 28068                           
 28069                           ; Vector 26 : I2C1E
 28070  00003C  63E7               	dw	_Default_ISR shr (0+2)
 28071                           
 28072                           ; Vector 27 : U1RX
 28073  00003E  62F0               	dw	_UART1_rx_vect_isr shr (0+2)
 28074                           
 28075                           ; Vector 28 : U1TX
 28076  000040  62E6               	dw	_UART1_tx_vect_isr shr (0+2)
 28077                           
 28078                           ; Vector 29 : U1E
 28079  000042  63E7               	dw	_Default_ISR shr (0+2)
 28080                           
 28081                           ; Vector 30 : U1
 28082  000044  63E7               	dw	_Default_ISR shr (0+2)
 28083                           
 28084                           ; Vector 31 : TMR0
 28085  000046  63E7               	dw	_Default_ISR shr (0+2)
 28086                           
 28087                           ; Vector 32 : TMR1
 28088  000048  63E7               	dw	_Default_ISR shr (0+2)
 28089                           
 28090                           ; Vector 33 : TMR1G
 28091  00004A  63E7               	dw	_Default_ISR shr (0+2)
 28092                           
 28093                           ; Vector 34 : TMR2
 28094  00004C  63E7               	dw	_Default_ISR shr (0+2)
 28095                           
 28096                           ; Vector 35 : CCP1
 28097  00004E  63E7               	dw	_Default_ISR shr (0+2)
 28098                           
 28099                           ; Vector 36 : Undefined
 28100  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 28101                           
 28102                           ; Vector 37 : NCO1
 28103  000052  63E7               	dw	_Default_ISR shr (0+2)
 28104                           
 28105                           ; Vector 38 : CWG1
 28106  000054  63E7               	dw	_Default_ISR shr (0+2)
 28107                           
 28108                           ; Vector 39 : CLC1
 28109  000056  63E7               	dw	_Default_ISR shr (0+2)
 28110                           
 28111                           ; Vector 40 : INT1
 28112  000058  6187               	dw	_INT1_ISR shr (0+2)
 28113                           
 28114                           ; Vector 41 : CMP2
 28115  00005A  63E7               	dw	_Default_ISR shr (0+2)
 28116                           
 28117                           ; Vector 42 : DMA2SCNT
 28118  00005C  63E7               	dw	_Default_ISR shr (0+2)
 28119                           
 28120                           ; Vector 43 : DMA2DCNT
 28121  00005E  63E7               	dw	_Default_ISR shr (0+2)
 28122                           
 28123                           ; Vector 44 : DMA2OR
 28124  000060  63E7               	dw	_Default_ISR shr (0+2)
 28125                           
 28126                           ; Vector 45 : DMA2A
 28127  000062  63E7               	dw	_Default_ISR shr (0+2)
 28128                           
 28129                           ; Vector 46 : I2C2RX
 28130  000064  63E7               	dw	_Default_ISR shr (0+2)
 28131                           
 28132                           ; Vector 47 : I2C2TX
 28133  000066  63E7               	dw	_Default_ISR shr (0+2)
 28134                           
 28135                           ; Vector 48 : I2C2
 28136  000068  63E7               	dw	_Default_ISR shr (0+2)
 28137                           
 28138                           ; Vector 49 : I2C2E
 28139  00006A  63E7               	dw	_Default_ISR shr (0+2)
 28140                           
 28141                           ; Vector 50 : U2RX
 28142  00006C  6304               	dw	_UART2_rx_vect_isr shr (0+2)
 28143                           
 28144                           ; Vector 51 : U2TX
 28145  00006E  62FA               	dw	_UART2_tx_vect_isr shr (0+2)
 28146                           
 28147                           ; Vector 52 : U2E
 28148  000070  63E7               	dw	_Default_ISR shr (0+2)
 28149                           
 28150                           ; Vector 53 : U2
 28151  000072  63E7               	dw	_Default_ISR shr (0+2)
 28152                           
 28153                           ; Vector 54 : TMR3
 28154  000074  63E7               	dw	_Default_ISR shr (0+2)
 28155                           
 28156                           ; Vector 55 : TMR3G
 28157  000076  63E7               	dw	_Default_ISR shr (0+2)
 28158                           
 28159                           ; Vector 56 : TMR4
 28160  000078  63E7               	dw	_Default_ISR shr (0+2)
 28161                           
 28162                           ; Vector 57 : CCP2
 28163  00007A  63E7               	dw	_Default_ISR shr (0+2)
 28164                           
 28165                           ; Vector 58 : Undefined
 28166  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 28167                           
 28168                           ; Vector 59 : CWG2
 28169  00007E  63E7               	dw	_Default_ISR shr (0+2)
 28170                           
 28171                           ; Vector 60 : CLC2
 28172  000080  63E7               	dw	_Default_ISR shr (0+2)
 28173                           
 28174                           ; Vector 61 : INT2
 28175  000082  63E7               	dw	_Default_ISR shr (0+2)
 28176                           
 28177                           ; Vector 62 : Undefined
 28178  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 28179                           
 28180                           ; Vector 63 : Undefined
 28181  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 28182                           
 28183                           ; Vector 64 : Undefined
 28184  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 28185                           
 28186                           ; Vector 65 : Undefined
 28187  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 28188                           
 28189                           ; Vector 66 : Undefined
 28190  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 28191                           
 28192                           ; Vector 67 : Undefined
 28193  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 28194                           
 28195                           ; Vector 68 : Undefined
 28196  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 28197                           
 28198                           ; Vector 69 : Undefined
 28199  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 28200                           
 28201                           ; Vector 70 : TMR5
 28202  000094  606F               	dw	_TMR5_ISR shr (0+2)
 28203                           
 28204                           ; Vector 71 : TMR5G
 28205  000096  63E7               	dw	_Default_ISR shr (0+2)
 28206                           
 28207                           ; Vector 72 : TMR6
 28208  000098  638E               	dw	_TMR6_ISR shr (0+2)
 28209                           
 28210                           ; Vector 73 : CCP3
 28211  00009A  63E7               	dw	_Default_ISR shr (0+2)
 28212                           
 28213                           ; Vector 74 : CWG3
 28214  00009C  63E7               	dw	_Default_ISR shr (0+2)
 28215                           
 28216                           ; Vector 75 : CLC3
 28217  00009E  63E7               	dw	_Default_ISR shr (0+2)
 28218                           
 28219                           ; Vector 76 : Undefined
 28220  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 28221                           
 28222                           ; Vector 77 : Undefined
 28223  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 28224                           
 28225                           ; Vector 78 : Undefined
 28226  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 28227                           
 28228                           ; Vector 79 : Undefined
 28229  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 28230                           
 28231                           ; Vector 80 : CCP4
 28232  0000A8  63E7               	dw	_Default_ISR shr (0+2)
 28233                           
 28234                           ; Vector 81 : CLC4
 28235  0000AA  63E7               	dw	_Default_ISR shr (0+2)
 28236  0000AC                     ivt0x8_undefint:
 28237                           	opt callstack 0
 28238  0000AC  00FF               	reset	
 28239                           
 28240                           	psect	text152
 28241  000000                     __ptext152:
 28242                           	opt callstack 0
 28243                           
 28244                           	psect	rparam
 28245  0000                     
 28246                           	psect	temp
 28247  000032                     btemp:
 28248                           	opt callstack 0
 28249  000032                     	ds	32
 28250  0000                     wtemp0	set	btemp
 28251  0000                     wtemp1	set	btemp+2
 28252  0000                     wtemp2	set	btemp+4
 28253  0000                     wtemp3	set	btemp+6
 28254  0000                     wtemp4	set	btemp+8
 28255  0000                     wtemp5	set	btemp+10
 28256  0000                     wtemp8	set	btemp+1
 28257  0000                     ttemp0	set	btemp
 28258  0000                     ttemp1	set	btemp+3
 28259  0000                     ttemp2	set	btemp+6
 28260  0000                     ttemp3	set	btemp+9
 28261  0000                     ttemp5	set	btemp+1
 28262  0000                     ttemp6	set	btemp+4
 28263  0000                     ttemp7	set	btemp+8
 28264  0000                     ltemp0	set	btemp
 28265  0000                     ltemp1	set	btemp+4
 28266  0000                     ltemp2	set	btemp+8
 28267  0000                     lltemp0	set	btemp
 28268  0000                     lltemp1	set	btemp+8
 28269  0000                     lltemp2	set	btemp+16
 28270  0000                     lltemp3	set	btemp+24
 28271                           tosu	equ	0x3FFF
 28272                           tosh	equ	0x3FFE
 28273                           tosl	equ	0x3FFD
 28274                           stkptr	equ	0x3FFC
 28275                           pclatu	equ	0x3FFB
 28276                           pclath	equ	0x3FFA
 28277                           pcl	equ	0x3FF9
 28278                           tblptru	equ	0x3FF8
 28279                           tblptrh	equ	0x3FF7
 28280                           tblptrl	equ	0x3FF6
 28281                           tablat	equ	0x3FF5
 28282                           prodh	equ	0x3FF4
 28283                           prodl	equ	0x3FF3
 28284                           indf0	equ	0x3FEF
 28285                           postinc0	equ	0x3FEE
 28286                           postdec0	equ	0x3FED
 28287                           preinc0	equ	0x3FEC
 28288                           plusw0	equ	0x3FEB
 28289                           fsr0h	equ	0x3FEA
 28290                           fsr0l	equ	0x3FE9
 28291                           wreg	equ	0x3FE8
 28292                           indf1	equ	0x3FE7
 28293                           postinc1	equ	0x3FE6
 28294                           postdec1	equ	0x3FE5
 28295                           preinc1	equ	0x3FE4
 28296                           plusw1	equ	0x3FE3
 28297                           fsr1h	equ	0x3FE2
 28298                           fsr1l	equ	0x3FE1
 28299                           bsr	equ	0x3FE0
 28300                           indf2	equ	0x3FDF
 28301                           postinc2	equ	0x3FDE
 28302                           postdec2	equ	0x3FDD
 28303                           preinc2	equ	0x3FDC
 28304                           plusw2	equ	0x3FDB
 28305                           fsr2h	equ	0x3FDA
 28306                           fsr2l	equ	0x3FD9
 28307                           status	equ	0x3FD8


Data Sizes:
    Strings     445
    Constant    144
    Data        398
    BSS         1314
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      6      55
    BANK0           160      4     154
    BANK1           256      4     255
    BANK2           256      0     252
    BANK3           256      0     215
    BANK4           256      0      67
    BANK5           256      0     218
    BANK6           256      0     255
    BANK7           256      0     255
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_45(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_56(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_56(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    s	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[80]), 
		 -> STR_28(CODE[9]), STR_27(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), 
		 -> T(CODE[144]), STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[188]), 

    a	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[80]), 
		 -> STR_28(CODE[9]), STR_27(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), 
		 -> T(CODE[144]), STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[188]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_51(CODE[4]), STR_50(CODE[4]), STR_47(CODE[4]), STR_46(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_51(CODE[4]), STR_50(CODE[4]), STR_47(CODE[4]), STR_46(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_23(CODE[17]), STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), 
		 -> STR_19(CODE[19]), STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), 
		 -> STR_11(CODE[17]), STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK2[188]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK2[188]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S5232_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK5[218]), V(BANK2[188]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK5[218]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[17]), 
		 -> STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), STR_19(CODE[19]), 
		 -> STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[17]), 
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[17]), 
		 -> STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), STR_19(CODE[19]), 
		 -> STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[17]), 
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[17]), 
		 -> STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), STR_19(CODE[19]), 
		 -> STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[17]), 
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_28(CODE[9]), STR_27(CODE[12]), 
		 -> D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), STR_7(CODE[6]), 
		 -> STR_3(CODE[6]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_28(CODE[9]), STR_27(CODE[12]), 
		 -> D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), STR_7(CODE[6]), 
		 -> STR_3(CODE[6]), V(BANK2[188]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_28(CODE[9]), 
		 -> STR_27(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), 
		 -> STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    S4081tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_28(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_27(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK2[188]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK2[188]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1930spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1930spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  311390
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                    _calc_model_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                   _convert_adc_data
                _eaDogM_WriteCommand
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                       _init_display
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     474
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   28176
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (1) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  168228
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   83861
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    10     12   27123
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   56826
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   56562
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   28145
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   28324
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   26898
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   26769
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           45    39      6   26437
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                31    20     11    2704
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             10     4      6     225
 ---------------------------------------------------------------------------------
 (7) _stoa                                                21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              63    56      7   13817
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               8     4      4     137
 ---------------------------------------------------------------------------------
 (8) _floorf                                              14    10      4     338
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       10     6      4     135
 ---------------------------------------------------------------------------------
 (8) ___fltol                                              6     2      4     229
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4      45
 ---------------------------------------------------------------------------------
 (8) ___flge                                               8     0      8     182
 ---------------------------------------------------------------------------------
 (8) ___fleq                                               8     0      8      90
 ---------------------------------------------------------------------------------
 (8) ___fldiv                                             21    13      8    1099
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     296
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     300
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                28    18     10    3018
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2     130
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (7) _atoi                                                11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              3     1      2      68
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             12     4      8    1962
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              0 BANK0      4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                              0 BANK1      4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (18) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0      FF      19       99.6%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      DA      15       85.2%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      43      13       26.2%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      D7      11       84.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FC       9       98.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      4      FF       7       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      4      9A       5       96.2%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      6      37       1       87.3%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     6BE      58        0.0%
DATA                 0      0     6BE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Dec  3 05:14:11 2019

                     _SPI1_Exchange8bit 8D4E                __end_of_set_display_info 8DA8  
                                     _C 0100                                       _D 0500  
                                     _H 00EF                                       _P 00BD  
                                     _R 00C7                                       _S 0060  
                                     _T FDB1                                       _V 0200  
      __end_of_TMR5_SetInterruptHandler 8ACE            __end_of_start_switch_handler 8D4E  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                __end_of_FVR_Initialize 8F8A                             __CFG_LVP$ON 000000  
                                   l171 8EBE                                     l701 88E2  
                                   l581 88B6                                     l835 8D5C  
                                   _GIE 01FE97                                     _abs 83B8  
                                   _pad 6D80                 __size_of_PMD_Initialize 0014  
                       _TMR2_Initialize 8E6A                                     prod 003FF3  
                                   tosl 003FFD                                     wreg 003FE8  
                         _INT0_CallBack 8D0C                      _UART1_Transmit_ISR 8890  
                         __CFG_BBEN$OFF 000000                           _INT1_CallBack 8CEA  
                          __CFG_ZCD$OFF 000000                                    l1028 8616  
                                  l2015 5270                                    l2036 44DC  
                                  l1260 1DE0                                    l1502 773A  
                                  l1270 1F9A                                    l1280 20F8  
                                  l1521 86E6                                    l1281 2206  
                                  l1506 7AF8                                    l1268 1F94  
                                  l1285 25D0                                    l2086 1D78  
                                  l1366 8222                                    l1278 2032  
                                  l2408 6614                                    l2370 751A  
                                  l1811 7C1E                                    l1820 71AA  
                                  l2381 6776                                    l1726 630C  
                                  l1582 86B2                                    l2374 66A2  
                                  l1639 8DA4                                    l1591 5C2A  
                                  l2800 83F8                                    l1592 5D86  
                                  l2660 3478                                    l1933 123A  
                  _ADCC_StartConversion 8ED8                                    l2831 592E  
                                  l1599 6F9E                                    l1687 4012  
                                  l2648 35E8                                    l7000 3B0E  
                                  l2729 2E2C                                    l1962 066A  
                                  l1877 6DDC                                    l2693 3B62  
                                  l2941 614C                                    l7030 26A2  
                                  l7006 3B36                                    l7112 2C20  
                                  l7032 26A8                                    l7024 2662  
                                  l7008 3B46                                    l2792 64A2  
                                  l1897 40F6                                    l1977 0B1A  
                                  l2769 5F84                                    l7122 2C62  
                                  l7050 2776                                    l7042 2730  
                                  l7034 26D8                                    l7132 2CAC  
                                  l7060 27C8                                    l7052 27A6  
                                  l7220 68B4                                    l7212 6880  
                                  l7300 6774                                    l2956 7DA8  
                                  l7150 2D6C                                    l7118 2C3C  
                                  l2895 6C5E                                    l7136 2CB2  
                                  l7048 2770                                    l6520 3206  
                                  l6504 3162                                    l6432 2E8C  
                                  l7240 6CB2                                    l7232 6C88  
                                  l2969 7D24                                    l7146 2D26  
                                  l6602 34E0                                    l6514 31D4  
                                  l6450 2F4A                                    l6442 2EE2  
                                  l7250 6D32                                    l7164 2DDA  
                                  l7156 2D96                                    l6524 3210  
                                  l6444 2F12                                    l7236 6C9A  
                                  l7308 838E                                    l7166 2DF4  
                                  l6606 34E6                                    l6518 31F4  
                                  l6462 2FBC                                    l6438 2ECC  
                                  l7270 74E4                                    l7342 65AC  
                                  l7334 6580                                    l7318 64FE  
                                  l6640 35C8                                    l6632 3588  
                                  l6552 32F8                                    l6528 3240  
                                  l6456 2F7C                                    l6800 5540  
                                  l7192 67BA                                    l7344 65C2  
                                  l7336 659C                                    l6634 3598  
                                  l6618 3544                                    l6570 3428  
                                  l6546 32DC                                    l6474 3024  
                                  l6466 2FD2                                    l7362 8360  
                                  l7186 67A4                                    l7258 6D66  
                                  l7274 7518                                    l7266 74A2  
                                  l7282 6660                                    l6730 4970  
                                  l9202 75E6                                    l6628 3570  
                                  l6548 32EE                                    l6556 332A  
                                  l6468 3002                                    l6812 5612  
                                  l6900 37AC                                    l7292 673E  
                                  l6716 7D98                                    l8340 5E82  
                                  l8308 89C8                                    l9070 88DE  
                                  l9222 5174                                    l7198 67DA  
                                  l6750 4B26                                    l8350 5EE4  
                                  l8334 5E40                                    l8326 5DD4  
                                  l9206 7624                                    l9048 88B2  
                                  l6592 34B8                                    l6568 3402  
                                  l9320 85D4                                    l6840 5A1E  
                                  l6832 5996                                    l6920 383E  
                                  l6912 3824                                    l7288 66F0  
                                  l6744 4A8E                                    l8336 5E4E  
                                  l6586 349A                                    l6578 345C  
                                  l6674 83E8                                    l6930 38CE  
                                  l6906 37EA                                    l6754 4B94  
                                  l6746 4ADE                                    l8346 5EB0  
                                  l8338 5E64                                    l9226 70B8  
                                  l9332 7DF6                                    l6588 34AC  
                                  l6940 3916                                    l6692 6444  
                                  l6772 7D14                                    l8348 5ECE  
                                  l9326 7DE6                                    l8198 8C9A  
                                  l7902 5882                                    l8278 86F0  
                                  l8358 5F02                                    l9238 7114  
                                  l9096 85FE                                    l7912 591E  
                                  l6848 5ACA                                    l6960 39B8  
                                  l6880 36CE                                    l6688 6440  
                                  l8368 5F64                                    l9248 7184  
                                  l8802 61D2                                    l6794 54FA  
                                  l6954 399C                                    l6946 396A  
                                  l6938 3904                                    l6874 3688  
                                  l6698 649A                                    l7930 6082  
                                  l6788 54A6                                    l6964 39DE  
                                  l6948 396E                                    l6868 3648  
                                  l8900 3DC8                                    l8734 84D6  
                                  l6974 3A28                                    l6894 3766  
                                  l6878 369E                                    l9800 7A24  
                                  l6888 3726                                    l7928 6016  
                                  l8912 3F44                                    l8904 3E64  
                                  l8738 8500                                    l9810 6DD4  
                                  l6994 3ADE                                    l6978 3A2E  
                                  l6898 377C                                    l8836 86C8  
                                  l7892 57A0                                    l7876 56DE  
                                  l9820 6E6C                                    l9812 6DE6  
                                  l9900 4412                                    l6988 3AA2  
                                  l8950 68F2                                    l8790 618E  
                                  l7894 57B8                                    l7886 5774  
                                  l7878 5700                                    l9806 6DAC  
                                  l8918 3FE0                                    l8926 3FF2  
                                  l8952 68F8                                    l8960 6914  
                                  l7896 57DC                                    l9816 6E22  
                                  l9832 7C40                                    l9904 444E  
                                  l8872 3B6E                                    l8954 68FE  
                                  l8962 6940                                    l7898 581A  
                                  l9834 7C6C                                    l9826 73D4  
                                  l9930 00F0                                    l8956 690C  
                                  l8948 68E2                                    l8892 3D96  
                                  l8798 61BA                                    l9774 6B74  
                                  l9870 414E                                    l9950 0216  
                                  l9918 00AC                                    l8878 3B9E  
                                  STR_1 FF5F                                    l8976 69DE  
                                  l8968 6970                                    l9880 4360  
                                  l9952 022C                                    l8888 3CBC  
                                  l8992 7BD8                                    STR_2 FFB1  
                                  STR_3 FFDF                                    l9786 795A  
                                  l9866 4130                                    l9858 40E6  
                                  l9938 0146                                    STR_4 FF4E  
                                  STR_5 FF70                                    l9796 79E6  
                                  l9788 797C                                    l9948 01EA  
                                  l9956 0258                                    STR_6 FFB1  
                                  STR_7 FFDF                                    l9982 0396  
                                  l9966 02FC                                    l9974 032A  
                                  STR_8 FF3D                                    STR_9 FF92  
                                  l9992 04D2                                    l9986 0406  
                                  l9988 0470                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    u5010 3534  
                                  _T2PR 003FAB                                    u5015 3524  
                                  u5040 3554                                    u5200 6492  
                                  u5210 6494                                    u6100 2D3A  
                                  u5140 83CC                                    u6005 2A12  
                                  u6110 2D80                                    u5150 63C4  
                                  u6015 2BDA                                    u5320 4A34  
                                  u5240 7D56                                    u5080 87C6  
                                  u5400 7CD4                                    u5305 498E  
                                  u6050 2CA4                                    u5306 4994  
                                  u5250 7D58                                    u5090 87C8  
                                  _T6PR 003F93                                    u5155 63BA  
                                  u5307 49A2                                    u5420 8826  
                                  u5500 556C                                    u5340 4B0C  
                                  _PMD0 0039C0                                    u5325 4A2A  
                                  _PMD1 0039C1                                    u5430 8828  
                                  u6230 6CDE                                    u5270 4908  
                                  _PMD2 0039C2                                    _PMD3 0039C3  
                                  u4800 3238                                    u5520 564A  
                                  u5600 5A18                                    u6160 6806  
                                  u5280 4954                                    u4640 87F6  
                                  _PMD4 0039C4                                    u5345 4B02  
                                  _PMD5 0039C5                                    u6090 2D00  
                                  u4810 3258                                    u5450 54A0  
                                  u5610 5A4A                                    u6250 6D52  
                                  u4650 87F8                                    u5370 854E  
                                  _PMD6 0039C6                                    u5195 6474  
                                  u5275 48FE                                    _PMD7 0039C7  
                                  u5540 569C                                    u6180 68A0  
                                  u5380 8550                                    u4805 3228  
                                  u4910 344A                                    u4750 3188  
                                  u5470 54F6                                    u5630 5B02  
                                  u6350 838A                                    u6430 65CA  
                                  u5390 7CD2                                    u6095 2CF0  
                                  u4760 31A8                                    u6360 64DE  
                                  u8040 5EF8                                    u8105 7FAE  
                                  u4761 31A2                                    u5481 5500  
                                  u8106 7FB0                                    u5490 553A  
                                  u5650 5B54                                    u5570 5990  
                                  u6290 7514                                    u6450 65F4  
                                  u6370 64F2                                    u6460 833C  
                                  u7500 58CA                                    u6380 652C  
                                  u6365 64D4                                    u4950 34BE  
                                  u4870 3320                                    u6470 835C  
                                  u9110 6BE4                                    u5590 59E6  
                                  u5830 3A20                                    u8080 7F7A  
                                  u9120 79AA                                    u8304 3DB0  
                                  u6385 6522                                    u8305 3DAA  
                                  u4970 34D8                                    u4778 31AA  
                                  u4875 3310                                    u8180 616C  
                                  u9300 411C                                    u8324 3E7E  
                                  u8244 3B88                                    u8500 7C0A  
                                  u8325 3E78                                    u8245 3B82  
                                  u7470 5770                                    u9310 4374  
                                  u9230 4048                                    u5870 3A7C  
                                  u5790 3996                                    u8350 3EA8  
                                  u9127 799C                                    u9240 404A  
                                  u5880 3AB6                                    u8344 3EA0  
                                  u8264 3BB8                                    u9321 43A4  
                                  u8345 3E9A                                    u8265 3BB2  
                                  u8098 7F7C                                    u7490 58C8  
                                  u9090 6B68                                    u9330 43BA  
                                  u5890 3AF2                                    u9410 00DA  
                                  u7570 610E                                    u9331 43B8  
                                  u5875 3A6C                                    u5980 27B6  
                                  u9340 43CE                                    u9260 40BA  
                                  u8284 3BDA                                    u8285 3BD4  
                                  u9350 43D2                                    u9190 744E  
                                  u8518 7C0C                                    u8470 7BC4  
                                  u9280 40CC                                    u9440 0194  
                                  u9370 43E8                                    u9530 050E  
                                  u9450 0196                                    u5995 294A  
                                  u9700 0A18                                    u9197 7440  
                                  u9630 0648                                    u9800 0EE4  
                                  u9560 0562                                    u9480 02A6  
                                  u8488 7BC6                                    u9490 02A8  
                                  _PLLR 01CEE0                                    u7955 858A  
                                  u9590 05C6                                    u9860 10B8  
                                  u9880 116E                                    u9960 5308  
                                  u9890 1170                                    u9970 534E  
                                  u9977 5340                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR 893E  
                         __CFG_FCMEN$ON 000000                                    _dbuf 01A3  
                                  _atoi 56C4                                    _ctoa 7C22  
                                  _main 1D82                                    _dtoa 4018  
                                  _nanf 809A                                    _seed 01F3  
                                  _prec 001D                                    _nout 0019  
                                  fsr0h 003FEA                                    fsr1h 003FE2  
                                  indf0 003FEF                                    fsr2h 003FDA  
                                  fsr0l 003FE9                                    indf1 003FE7  
                                  indf2 003FDF                                    fsr1l 003FE1  
                                  fsr2l 003FD9                                    _stoa 5186  
                                  btemp 0032                                    _xtoa 4498  
                __end_of_check_adc_scan 8F82                           ___fpclassifyf 6316  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 0023  
             __end_of_SPI1_Exchange8bit 8D6C               __size_of_clear_hid_pflags 0024  
                         __CFG_CSWEN$ON 000000                       _UART1_rx_vect_isr 8BC0  
                          ___param_bank 000000                      ?_UART1_rx_vect_isr 0052  
                      __end_of_INT0_ISR 8F26                        __end_of_INT1_ISR 865A  
        __size_of_OSCILLATOR_Initialize 0016                __end_of_ringBufS_put_dma 7742  
         __end_of_OSCILLATOR_Initialize 8EC4                                   l10010 058E  
                                 l10100 0C32                                   l10004 0554  
                                 l10200 119A                                   l10112 0CBA  
                                 l10120 0D24                                   l10024 05F6  
                                 l10016 0594                                   l10008 057C  
                                 l10042 06B8                                   l10026 0602  
                                 l10052 077A                                   l10220 51F2  
                                 l10062 0926                                   l10046 06F0  
                                 l10128 0D90                                   l10136 0EA2  
                                 l10240 52E2                                   l10162 0FD6  
                                 l10250 539C                                   l10164 0FF0  
                                 l10148 0F3A                                   l10084 0B12  
                                 l10076 0A48                                   l10244 5312  
                                 l10236 52A6                                   l10332 4808  
                                 l10308 4698                                   l10316 471E  
                                 l10174 1092                                   l10086 0B34  
                                 l10254 53C8                                   l10430 191C  
                                 l10406 16F2                                   l10184 10E2  
                                 l10272 44CC                                   l10512 4C56  
                                 l10258 5404                                   l10450 1A7C  
                                 l10426 18E8                                   l10418 1830  
                                 l10354 1326                                   l10292 45A2  
                                 l10284 4542                                   l10460 1B2A  
                                 l10380 14F8                                   l10356 1360  
                                 l10532 4E2C                                   l10524 4D7E  
                                 l10278 4506                                   l10358 1376  
                                 l10518 4D14                                   l10630 6EB6  
                                 l10480 1D00                                   l10376 14A8  
                                 l10544 776C                                   l10474 1CA6  
                                 l10378 14E2                                   l10490 1D24  
                                 l10546 77AC                                   l10484 1D04  
                                 l10396 165C                                   l10900 22CC  
                                 l10820 1DE8                                   l10822 1DFA  
                                 l10814 1DC2                                   l10904 232E  
                                 l10816 1DCA                                   l10762 5D22  
                                 l10914 24AA                                   l10922 24F4  
                                 l10596 7842                                   l10748 5BFA  
                                 l10940 2562                                   l10932 2538  
                                 l10916 24D4                                   PRLOCK 0039EF  
                                 l10950 25A6                                   l10960 25FA  
                                 l10880 2000                                   l10946 2580  
                                 l10938 254A                                   l10866 1F9E  
                                 l10868 1FCC                                   l10888 2024  
                       __end_of___aodiv 56C4                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 35F2  
                                 _ADCLK 003EFF                         __end_of___aomod 5B78  
                                 _ADPCH 003EF1                         __end_of___fldiv 3B6C  
                                 _ADREF 003EFD                         __end_of___awdiv 68CE  
                       __end_of___flneg 83B8                                   STR_11 FF81  
                                 STR_12 FEB8                                   STR_20 FE92  
                                 STR_21 FF92                                   STR_13 FEF1  
                                 STR_30 FE6C                                   STR_22 FF92  
                                 STR_14 FEDE                                   STR_23 FF81  
                                 STR_31 FFCC                                   STR_15 FF2A  
                                 STR_32 FFCC                                   STR_24 FFFB  
                                 STR_16 FF04                                   STR_25 FFF8  
                                 STR_33 FFA2                                   STR_17 FF17  
                         __CFG_WDTE$OFF 000000                                   STR_34 FFA2  
                                 STR_50 FFE9                                   STR_18 FECB  
                                 STR_35 FFA2                                   STR_51 FFF1  
                                 STR_27 FFC0                                   STR_19 FEA5  
                                 STR_28 FFD6                                   STR_36 FE41  
                       __end_of___awmod 6D80                                   STR_45 FE6B  
                                 STR_29 FE6C                                   STR_54 FFF5  
                                 STR_46 FFE5                                   STR_38 FE7F  
                                 STR_47 FFED                                   STR_39 FE59  
                                 STR_56 FFF5                                   _ADRPT 003EEC  
                       __end_of___flmul 2E36                         __end_of___flsub 8444  
                       __end_of___fltol 661E                                   u10000 542A  
                                 u10100 4650                                   u10020 44B2  
                                 u10120 471A                                   u10130 473A  
                                 u10050 459A                                   u10060 45EE  
                                 u10220 13BE                                   u10141 476A  
                                 u10125 46FC                                   u10150 4780  
                                 u10070 45F0                                   u10230 13C0  
                                 u10151 477E                                   u10160 4794  
                                 u10240 13E6                                   u10170 4798  
                                 u10090 464E                                   u10420 1B7E  
                                 u10340 1746                                   u10270 1540  
                                 u10510 7822                                   u10280 1542  
                                 u10600 5D72                                   u10370 19D6  
                                 u10290 1568                                   u10610 5D74  
                                 u10380 19D8                                   u10480 4EA0  
                                 _U1P1H 003DED                                   _U1P2H 003DEF  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 _U1P3L 003DF0                                   _U2P1L 003DD4  
                                 _U2P2L 003DD6                                   _U2P3L 003DD8  
                                 _T5CLK 003F9D                                   _T2HLT 003FAD  
                                 _T5CON 003F9A                                   _T6CON 003F94  
                        __CFG_DEBUG$OFF 000000                                   _T6HLT 003F95  
            _ADCC_ADTI_InterruptHandler 0001                                   _T2TMR 003FAA  
                                 _U1UIR 003DF8                                   _T2RST 003FAF  
                                 _U1RXB 003DE8                                   _U2UIR 003DE0  
                                 _U1TXB 003DEA                                   _U2RXB 003DD0  
                                 _U2TXB 003DD2                                   _T6TMR 003F92  
                                 _T6RST 003F97                     ??_UART1_rx_vect_isr 0057  
                                 _ISRPR 0039F1                                   _OSCEN 0039DD  
                                 _TMR5H 003F99                                   _TMR5L 003F98  
                                 _TRISA 003FC2                                   _TRISB 003FC3  
                                 _TRISC 003FC4                                   _TRISD 003FC5  
                                 _TRISE 003FC6                                   _TRISF 003FC7  
                           _Default_ISR 8F9C                 __size_of_clear_adc_scan 0006  
     __size_of_TMR6_SetInterruptHandler 0028                       _UART1_tx_vect_isr 8B98  
                         __CFG_WRTB$OFF 000000                           __CFG_WRTC$OFF 000000  
                         __CFG_WRTD$OFF 000000                        __end_of_TMR5_ISR 8218  
                          _DMA1CON0bits 003BFC                        __end_of_TMR6_ISR 8E52  
                          _DMA1CON1bits 003BFD                                   _flags 001F  
              __size_of_calc_model_data 02DC                                   _fputc 6B44  
            __size_of_send_lcd_cmd_long 0028                         __end_of_isalpha 855A  
                                 _fputs 79D6                         __end_of_isdigit 8832  
                    __CFG_MCLRE$EXTMCLR 000000                      ?_UART1_tx_vect_isr 0052  
                                 _srand 873A                                   _width 001B  
                                 _putch 8E1C                         __end_of_islower 87D2  
                       __end_of_isspace 8370                _INT1_SetInterruptHandler 8ACE  
                       __end_of_isupper 8802                                   pclath 003FFA  
                                 tablat 003FF5                                   ltemp0 0032  
                                 ltemp1 0036                                   ltemp2 003A  
              __size_of_DMA1_Initialize 006A                                   plusw1 003FE3  
                                 plusw2 003FDB                                   ttemp0 0032  
                                 ttemp1 0035                                   ttemp2 0038  
                                 ttemp3 003B                                   ttemp5 0033  
                                 ttemp6 0036                                   ttemp7 003A  
                                 status 003FD8     __end_of_UART1_SetRxInterruptHandler 8A7E  
           _UART1_SetRxInterruptHandler 8A56                                   wtemp0 0032  
                                 wtemp1 0034                                   wtemp2 0036  
                                 wtemp3 0038                                   wtemp4 003A  
                                 wtemp5 003C                                   wtemp8 0033  
                       __end_of_sprintf 70AC                         __end_of_tolower 7DB2  
                       __end_of_strncmp 6156                         __end_of_toupper 7D2E  
                   ??_UART1_tx_vect_isr 0057               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr 8BE6                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize 848A                   __end_of_ringBufS_init 89B6  
                       __initialization 71AE                       _UART2_rx_vect_isr 8C10  
                          __end_of_atoi 5938                            __end_of_ctoa 7CAA  
                          __end_of_main 260C                            __end_of_dtoa 4498  
                          __end_of_nanf 80FC                            __end_of_stoa 5444  
                          __end_of_xtoa 4852                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0052                 __end_of_TMR2_Initialize 8E82  
              __size_of_DMA2_Initialize 005A              __end_of_check_enter_button 85DC  
              _TMR5_SetInterruptHandler 8AA6                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E    __size_of_UART1_SetTxInterruptHandler 0028  
                   ??_UART2_rx_vect_isr 0057               __end_of_UART1_tx_vect_isr 8BBE  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize 88E8  
                       _PWM8_Initialize 8E98                        _UART1_Initialize 8036  
                     _UART2_tx_vect_isr 8BE8                      _UART2_Transmit_ISR 88BC  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan 7FD2  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue 855A  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0052                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _U1BRGH 003DF6                                  _U1FIFO 003DF7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                _RB6PPS 003A0E                                  i1l1045 820A  
                  _start_switch_handler 8D2E                                  _RC5PPS 003A15  
                                _ODCONA 003A42                                  _ODCONB 003A52  
                                _ODCONC 003A62                                  _RC6PPS 003A16  
                                _ODCOND 003A72                                  _ODCONE 003A82  
                                _ODCONF 003A92                          __CFG_WDTCCS$SC 000000  
                                _FVRCON 003EC1                        _mode_lamp_bright 8F08  
                                _SCANPR 0039F7                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  _IVTADU 00389F  
          __size_of_eaDogM_WriteCommand 000E                                  _OSCFRQ 0039DF  
                                u814_20 8B76                                  u814_26 8B78  
                                u398_48 8D1A                                  u843_24 69D4  
                                u843_25 69D0                                  u845_20 69FA  
                                u836_28 68E8                                  u845_26 69FC  
                                u853_28 8CF8                                  u861_48 8CD6  
                                u839_20 6908                                  u839_21 6902  
                                u864_28 8CB2                                  u883_44 7E16  
                                u883_45 7E10                    __size_of_hid_display 0102  
                      __end_of___xxtofl 5F8E   __end_of_ADCC_DischargeSampleCapacitor 8F6A  
__size_of_ADCC_DischargeSampleCapacitor 0008           _ADCC_DischargeSampleCapacitor 8F62  
              __end_of_send_lcd_cmd_dma 831E                     ??_UART2_tx_vect_isr 0057  
             __end_of_UART2_rx_vect_isr 8C36              __size_of_SPI1_Exchange8bit 001E  
                __size_of_DMA1_DMAA_ISR 000A                          __CFG_XINST$OFF 000000  
                     _CLKREF_Initialize 8F36                        _UART2_Initialize 815E  
                                _WaitMs 86CE                         _conv_raw_result 3B6C  
                          _CCPTMRS1bits 003F5F    __size_of_ADCC_SetADIInterruptHandler 0028  
                                ___flge 661E                                  ___fleq 7460  
                     _ADCC_ThresholdISR 7F04                          __CFG_STVREN$ON 000000  
                        _ringBufS_flush 7A6E                                  _efgtoa 0000  
                                _floorf 4852                      ?_ADCC_ThresholdISR 0052  
                                _memset 4BBE                    __size_of_help_button 0038  
                                clear_0 721C                                  clear_1 7230  
                                clear_2 7242                                  clear_3 724E  
                                clear_4 725A                                  clear_5 7266  
                                clear_6 7272                                  clear_7 727E  
                                clear_8 728A                                  _printf 80FC  
                    _eaDogM_WriteString 77EA                                  _strcpy 738C  
                             ?_ADCC_ISR 0052                                  _strlen 7934  
                    __size_of_TimerDone 0024                         _ADCC_Initialize 7E9A  
                        _PMD_Initialize 8EC4               __end_of_UART2_tx_vect_isr 8C0E  
                                lltemp0 0032                                  lltemp1 003A  
                                lltemp2 0042                                  lltemp3 004A  
                   ??_ADCC_ThresholdISR 0052                  __end_of_start_adc_scan 8036  
                          __mediumconst FDB0                                  preinc2 003FDC  
                                tblptrh 003FF7                                  tblptrl 003FF6  
                                tblptru 003FF8                        __end_of_wdtdelay 8272  
                      __end_of_vfprintf 77EA                              _StartTimer 865A  
         __size_of_INTERRUPT_Initialize 0066                 __end_of_TMR5_Initialize 84D0  
                     _SYSTEM_Initialize 8444                              __accesstop 0060  
               __end_of__initialization 729C                               ?_INT0_ISR 0052  
                             ?_INT1_ISR 0052                    __end_of_display_help 8F7A  
                  __end_of_display_info 8F72               __end_of_CLKREF_Initialize 8F40  
                         ___rparam_used 000001              __size_of_UART1_rx_vect_isr 0026  
                       _TMR5_WriteTimer 85DC                   _set_temp_display_help 8EEA  
                      _clear_hid_pflags 8C5A               __end_of_ADCC_ThresholdISR 7F6C  
                __end_of_ringBufS_flush 7B00                          __pcstackCOMRAM 0052  
                            ___inthi_sp 1000                              ___intlo_sp 1800  
                          __pidataBANK0 8832                            __pidataBANK1 7890  
                          __pidataBANK2 7524                               ?_TMR5_ISR 0052  
                             ?_TMR6_ISR 0052                          ivt0x8_undefint 00AC  
                         __end_of_fputc 6C68                           __end_of_fputs 7A6E  
                         __end_of_srand 876E                   __end_of_TMR5_CallBack 8CC6  
                         __end_of_putch 8E36                 __end_of_PWM8_Initialize 8EAE  
               __end_of_TMR6_Initialize 8912                       _adc_int_t_handler 7DB2  
                __end_of_PMD_Initialize 8ED8                              ??_ADCC_ISR 0052  
                 __end_of_TMR6_CallBack 8CEA             __size_of_EXT_INT_Initialize 0034  
            __size_of_UART1_tx_vect_isr 0026                           _DMA1_DMAA_ISR 8F4C  
                        _clear_adc_scan 8F8A                      __size_of_hid_input 0090  
                __size_of_mode_lamp_dim 0018                _UART2_RxInterruptHandler 0010  
             __end_of_SYSTEM_Initialize 848A                         __CFG_PR1WAY$OFF 000000  
                       __CFG_IVT1WAY$ON 000000                              __pbssBANK0 0060  
                            __pbssBANK1 01A3                              __pbssBANK2 02BC  
                            __pbssBANK3 0300                              __pbssBANK4 0400  
                            __pbssBANK5 0500                              __pbssBANK6 0600  
                            __pbssBANK7 0700                              _check_help 5B78  
               __end_of_conv_raw_result 4018                   _INT0_InterruptHandler 0016  
                            ??_INT0_ISR 0052                              ??_INT1_ISR 00F6  
                     __end_of_TimerDone 8CA2                        _DMA1_DMADCNT_ISR 8F40  
            __size_of_UART2_rx_vect_isr 0026                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01C0                   __end_of_wait_lcd_done 8E00  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler 8AA6  
               __end_of_ADCC_Initialize 7F04                              ??_TMR5_ISR 01FB  
             __end_of_adc_int_t_handler 7E30                              ??_TMR6_ISR 0057  
                               _ADFLTRH 003EE7                                 _ADFLTRL 003EE6  
                               _DMA1DSA 003BF0                                 _DMA2DSA 003BD0  
                               _DMA1DSZ 003BEE                                 _DMA2DSZ 003BCE  
                               _DMA1SSA 003BF9                                 _DMA2SSA 003BD9  
  __end_of_ADCC_SetADTIInterruptHandler 8B46   __size_of_ADCC_SetADTIInterruptHandler 0028  
          _ADCC_SetADTIInterruptHandler 8B1E                                 _DMA1SSZ 003BF7  
                               _DMA2SSZ 003BD7                                 _ADSTPTH 003EE5  
                               _ADSTPTL 003EE4                       _UART1_Receive_ISR 8DA8  
                               _CLKRCLK 003CE6                                 _CLKRCON 003CE5  
                __end_of_clear_adc_scan 8F90                          ?_DMA1_DMAA_ISR 0052  
                      _DMA1_DMASCNT_ISR 8F28                                 _U1ERRIE 003DFA  
                    __size_of_set_vterm 001C                                 _U1ERRIR 003DF9  
                               _U2ERRIE 003DE2                                 _U2ERRIR 003DE1  
                               _INT0PPS 003AC0                     __CFG_PWRTS$PWRT_OFF 000000  
                               _INT1PPS 003AC1                            ?_Default_ISR 0052  
            __size_of_UART2_tx_vect_isr 0026                                 _U1RXPPS 003AE5  
                               _U2RXPPS 003AE8                                 _OSCCON1 0039D9  
                               _OSCCON3 0039DB                                 _IVTLOCK 003FD4  
                    __size_of_vfpfcnvrt 0B3E                                 _SPI1CLK 003D1C  
                               _SPI1RXB 003D10                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _PWM8DCH 003F61  
                               _PWM8DCL 003F60                                 _PWM8CON 003F62  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _SLRCOND 003A73  
                               _SLRCONE 003A83                                 _SLRCONF 003A93  
                            _get_switch 89B6                      __size_of_start_lcd 0006  
               __end_of_TMR5_WriteTimer 861C                 __size_of_switch_handler 0148  
     __size_of_INT0_SetInterruptHandler 0028              __size_of_CLKREF_Initialize 000A  
               __size_of_DMA1_DMAOR_ISR 000A                                 __Hparam 0000  
            __size_of_ADCC_ThresholdISR 0068                           _mode_lamp_dim 8E52  
                               __Lparam 0000                __end_of_UART1_Initialize 809A  
                     __end_of_hid_input 7C22                         __size_of_WaitMs 0036  
                       __size_of___flge 0162                         __size_of___fleq 00C4  
                               ___aodiv 5444                                 ___fladd 2E36  
                               ___aomod 5938                                 ___fldiv 35F2  
                               ___awdiv 6780                                 ___flneg 8370  
                               ___awmod 6C68                                 ___flmul 260C  
                               ___flsub 83FE                                 ___fltol 64AC  
             __end_of_UART1_Receive_ISR 8DC6                         __size_of_efgtoa 1244  
                       __size_of_floorf 036C                    __end_of_init_display 738C  
                               __pcinit 71AE                __end_of_mode_lamp_bright 8F16  
                       __size_of_memset 02EC                __size_of_adc_int_handler 0002  
                   _eaDogM_WriteCommand 8EFA                                 __ramtop 2000  
           __size_of_UART1_Transmit_ISR 002C                                 __ptext0 1D82  
                               __ptext1 8C36                                 __ptext2 8D2E  
                               __ptext3 7FD2                                 __ptext4 8ED8  
                               __ptext5 8F62                                 __ptext6 873A  
                               __ptext7 72A2                                 __ptext8 893E  
                               __ptext9 8966                       _UART2_Receive_ISR 8DC6  
                       __size_of_printf 0062                         __CFG_WRTAPP$OFF 000000  
                       __size_of_strcpy 00D4                         __size_of_strlen 00A2  
                 _OSCILLATOR_Initialize 8EAE                            __size_of_abs 0046  
                               us555999 56AE                            __size_of_pad 0114  
                               us566999 5B66                                 _isalpha 8516  
                               _isdigit 8802                                 us922999 4032  
                               _mode_sw 0025                                 us991999 5198  
                     __end_of_lp_filter 6316                                 _islower 87A2  
                               _isspace 831E                         __CFG_WRTSAF$OFF 000000  
                             _T5CONbits 003F9A                __end_of_UART2_Initialize 81BC  
                               _isupper 87D2              __size_of_SYSTEM_Initialize 0046  
                               _sprintf 6FA2                                 _tolower 7D2E  
                 __size_of_display_help 0008                                 _utctime 00B5  
                 __size_of_display_info 0008                                 _strncmp 5F8E  
                               _toupper 7CAA                    end_of_initialization 729C  
             __size_of_convert_adc_data 00B8                      _check_enter_button 859C  
   __end_of_UART1_SetTxInterruptHandler 8A56             _UART1_SetTxInterruptHandler 8A2E  
   __end_of_UART2_SetRxInterruptHandler 8A2E             _UART2_SetRxInterruptHandler 8A06  
                     __end_of_set_vterm 8E1C                       __end_of_vfpfcnvrt 1D82  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 007E  
                   __size_of_StartTimer 003C                       __end_of_start_lcd 8F9C  
             __end_of_UART2_Receive_ISR 8DE4                          wdtdelay@dcount 00B9  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 0058  
                 _INT1_InterruptHandler 0013                               _PORTBbits 003FCB  
                             _PORTFbits 003FCF                _TMR6_SetInterruptHandler 8A7E  
                          _display_help 8F72                   _TMR5_InterruptHandler 00C1  
                          _display_info 8F6A    __size_of_UART2_SetTxInterruptHandler 0028  
              __end_of_clear_hid_pflags 8C7E                       __size_of_ADCC_ISR 002A  
   __end_of_ADCC_SetADIInterruptHandler 8B6E             _ADCC_SetADIInterruptHandler 8B46  
                            _update_lcd 6E94                         _calc_model_data 4EAA  
                __size_of_ringBufS_init 0028                        __CFG_FEXTOSC$ECH 000000  
                            _static_soc 8C36                         _DMA1_Initialize 7E30  
                       _SPI1_Initialize 8E82                   __end_of_get_vterm_ptr 8890  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 003E  
                        __end_of_WaitMs 8704            __end_of_INTERRUPT_Initialize 7FD2  
                            _vterm_dump 6A16                          __end_of___flge 6780  
                        __end_of___fleq 7524    __end_of_INT0_DefaultInterruptHandler 8FA6  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler 8FA4  
            __size_of_UART1_Receive_ISR 001E                         _DMA2_Initialize 8272  
                        __end_of_efgtoa 1244                       __size_of_TMR5_ISR 005C  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 4BBE             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 00AD                          __end_of_memset 4EAA  
                        __end_of_printf 815E                __end_of_DMA1_DMADCNT_ISR 8F4A  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack 8D2E  
                        __end_of_strcpy 7460                          __end_of_strlen 79D6  
                   start_initialization 71AE    __end_of_TMR5_DefaultInterruptHandler 8B96  
 __size_of_TMR5_DefaultInterruptHandler 0028            _TMR5_DefaultInterruptHandler 8B6E  
       __size_of_PIN_MANAGER_Initialize 0092                             __end_of_abs 83FE  
                 __end_of_INT1_CallBack 8D0C               __size_of_set_display_info 001E  
                           __end_of_pad 6E94                    __size_of_Default_ISR 0006  
                  __end_of_send_lcd_cmd 898E                          _switch_handler 68CE  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 0600                   __end_of___fpclassifyf 64AC  
                         _uart2RxBuffer 0700                           _uart1TxBuffer 02BC  
              __end_of_DMA1_DMASCNT_ISR 8F36                           _uart2TxBuffer 0354  
                        _DMA1_DMAOR_ISR 8F58                     __end_of_hid_display 71AE  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone 8C7E  
                         _ringBufS_init 898E                             __pdataBANK0 00C7  
                           __pdataBANK1 0100                             __pdataBANK2 0200  
            __size_of_UART2_Receive_ISR 001E                     __size_of_get_switch 0028  
            __end_of_EXT_INT_Initialize 87A2                 __end_of_calc_model_data 5186  
                   __end_of_help_button 86CE         __end_of_eaDogM_WriteStringAtPos 873A  
               __end_of_DMA1_Initialize 7E9A                             __pbssCOMRAM 0001  
      __end_of_INT0_SetInterruptHandler 8B1E                           __pcstackBANK0 00F6  
                         __pcstackBANK1 01FB                __size_of_TMR2_Initialize 0018  
                __end_of_switch_handler 6A16                       __size_of___xxtofl 0204  
               __end_of_SPI1_Initialize 8E98                _UART1_RxInterruptHandler 000A  
              _UART2_TxInterruptHandler 000D                               __end_of_T FE41  
                      _convert_adc_data 75E0               __size_of_ringBufS_put_dma 00AA  
                          _init_display 72A2                  __end_of_DMA1_DMAOR_ISR 8F62  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 00C4  
                __size_of_TMR6_CallBack 0024                 __end_of_DMA2_Initialize 82CC  
                _PIN_MANAGER_Initialize 7B00                    __end_of_wait_lcd_set 8F96  
                         __pmediumconst FDB0                               __ptext100 8A7E  
                             __ptext101 848A                               __ptext110 8F82  
                             __ptext102 8AA6                               __ptext111 876E  
                             __ptext103 8E6A                               __ptext120 861C  
                             __ptext112 8ACE                               __ptext104 8E82  
                             __ptext121 8CEA                               __ptext113 8AF6  
                             __ptext105 8E98                               __ptext130 8FA4  
                             __ptext122 8FA2                               __ptext114 8272  
                             __ptext106 8EC4                               __ptext131 8F9C  
                             __ptext123 68CE                               __ptext115 7E30  
                             __ptext107 7B00                               __ptext140 8DA8  
                             __ptext132 8914                               __ptext124 81BC  
                             __ptext116 8F36                               __ptext108 8EAE  
                             __ptext141 8BE8                               __ptext133 7DB2  
                             __ptext125 85DC                               __ptext117 7E9A  
                             __ptext109 7F6C                               __ptext150 8F4C  
                             __ptext142 88BC                               __ptext134 8FA6  
                             __ptext126 8CA2                               __ptext118 8B1E  
                             __ptext151 8F58                               __ptext143 8C10  
                             __ptext135 8FA8                               __ptext127 8B6E  
                             __ptext119 8B46                               __ptext152 0000  
                             __ptext144 8DC6                               __ptext136 7F04  
                             __ptext128 8F18                               __ptext145 8E38  
                             __ptext137 8B98                               __ptext129 8D0C  
                             __ptext146 8CC6                               __ptext138 8890  
                             __ptext147 84D0                               __ptext139 8BC0  
                             __ptext148 8F28                               __ptext149 8F40  
                             _hid_input 7B92                      __end_of_StartTimer 8696  
                     __size_of_wdtdelay 005A                       __size_of_vfprintf 00A8  
                              _ADCC_ISR 8914                  __CFG_BBSIZE$BBSIZE_512 000000  
                              _DMA1CON0 003BFC                                _DMA1CON1 003BFD  
                              _DMA1AIRQ 003BFE                                _DMA2CON0 003BDC  
                              _DMA2CON1 003BDD                                _DMA2AIRQ 003BDE  
                              _DMA1SIRQ 003BFF                                _DMA2SIRQ 003BDF  
               __size_of_get_raw_result 001E                  __size_of_wait_lcd_done 001C  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                               _lp_filter 6156  
                           _hid_display 70AC                          __size_of_srand 0034  
                        __size_of_putch 001A                    _INTERRUPT_Initialize 7F6C  
                              _T6CLKCON 003F96           __size_of_start_switch_handler 0020  
                       ?_DMA1_DMAOR_ISR 0052                                _INT0_ISR 8F18  
                              _INT1_ISR 861C                                _LATCbits 003FBC  
                              _LATDbits 003FBD                                _LATEbits 003FBE  
     __size_of_INT1_SetInterruptHandler 0028                                _IPR1bits 003981  
                              _IPR2bits 003982                                _PIE1bits 003991  
                              _IPR3bits 003983                                _PIE2bits 003992  
                              _IPR5bits 003985                                _PIE3bits 003993  
                             _tickCount 0089                                _IPR6bits 003986  
                              _PIE5bits 003995                                _IPR8bits 003988  
                              _PIE6bits 003996                                _IPR9bits 003989  
                              _PIE8bits 003998                     __CFG_BORV$VBOR_2P45 000000  
                              _PIE9bits 003999                               _ring_buf1 0394  
                             _ring_buf2 0400                                _PIR1bits 0039A1  
                              i2u433_48 892A                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                                _PIR5bits 0039A5  
                              _PIR8bits 0039A8                                _PIR9bits 0039A9  
                              i2u890_48 8BD2                                i2u892_48 8BFA  
              __size_of_TMR5_Initialize 0046                                i2u894_48 8C22  
                              i2u886_48 7F38                                i2u886_49 7F4C  
                              i2u888_48 8BAA                               _set_vterm 8E00  
                   __size_of_update_lcd 010E                             _help_button 8696  
            __end_of_UART1_Transmit_ISR 88BC                                _TMR5_ISR 81BC  
                              _TMR6_ISR 8E38                               _port_data 0193  
                   __size_of_static_soc 0024                               _vfpfcnvrt 1244  
                          _SPI1INTFbits 003D1A                           _TMR5_CallBack 8CA2  
                            _ADCON0bits 003EF8                      __end_of_check_help 5D8A  
                             _start_lcd 8F96                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 0052                           _TMR6_CallBack 8CC6  
                 __size_of_send_lcd_cmd 0028       __size_of_TMR5_SetInterruptHandler 0028  
                      _set_display_info 8D8A                __size_of_PWM8_Initialize 0016  
              __size_of_TMR6_Initialize 002A                             _INTCON0bits 003FD2  
                             copy_data0 71C2                               copy_data1 71E4  
                             copy_data2 7206                _INT0_SetInterruptHandler 8AF6  
                   __size_of_vterm_dump 012E                  _uart1TxBufferRemaining 002F  
   __end_of_UART2_SetTxInterruptHandler 8A06             _UART2_SetTxInterruptHandler 89DE  
                          _uart1RxCount 002C                            _uart2RxCount 0026  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 0036  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                                __Lrparam 0000  
               __size_of_check_adc_scan 0008                      __CFG_BOREN$SBORDIS 000000  
              __size_of_conv_raw_result 04AC                           _wait_lcd_done 8DE4  
                          _send_lcd_cmd 8966                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC                        __size_of___aomod 0240  
                       _adc_int_handler 8FA8                        __size_of___fldiv 057A  
                      __size_of___awdiv 014E                        __size_of___flneg 0048  
                      __size_of___awmod 0118                        __size_of___flmul 082A  
                      __size_of___flsub 0046                        __size_of___fltol 0172  
                    __end_of_get_switch 89DE                   __end_of_DMA1_DMAA_ISR 8F56  
                    ___fpclassifyf@F463 00B1    __size_of_UART1_SetRxInterruptHandler 0028  
                       lp_filter@smooth 0300                                ___xxtofl 5D8A  
                     ?_DMA1_DMADCNT_ISR 0052             __size_of_check_enter_button 0040  
              __size_of_ADCC_Initialize 006A             __end_of_eaDogM_WriteCommand 8F08  
                      __size_of_isalpha 0044                        __size_of_isdigit 0030  
                              __pivt0x8 0008                        __size_of_islower 0030  
                      __size_of_isspace 0052                      ??_DMA1_DMADCNT_ISR 0058  
                              __ptext10 8D4E                                __ptext11 898E  
                              __ptext20 5D8A                                __ptext12 70AC  
                              __ptext21 8C5A                                __ptext13 7B92  
                              __ptext30 82CC                                __ptext22 8F8A  
                              __ptext14 89B6                                __ptext31 8DE4  
                              __ptext23 5B78                                __ptext15 8EFA  
                              __ptext40 1244                                __ptext32 8218  
                              __ptext24 6A16                                __ptext16 75E0  
                              __ptext41 4498                                __ptext33 77EA  
                              __ptext25 6FA2                                __ptext17 3B6C  
                              __ptext50 738C                                __ptext42 7CAA  
                              __ptext34 8F90                                __ptext26 8862  
                              __ptext18 809A                                __ptext51 4852  
                              __ptext43 87A2                                __ptext35 8F96  
                              __ptext27 86CE                                __ptext19 8D6C  
                              __ptext60 4018                                __ptext52 6316  
                              __ptext44 8516                                __ptext36 7A6E  
                              __ptext28 6E94                                __ptext61 83B8  
                              __ptext53 64AC                                __ptext45 5F8E  
                              __ptext37 4BBE                                __ptext29 8704  
                              __ptext70 7698                                __ptext62 5938  
                              __ptext54 8370                                __ptext46 5186  
                              __ptext38 80FC                                __ptext71 56C4  
                              __ptext63 5444                                __ptext55 661E  
                              __ptext47 0000                                __ptext39 7742  
                              __ptext80 8696                                __ptext72 831E  
                              __ptext64 7C22                                __ptext56 7460  
                              __ptext48 7D2E                                __ptext81 8C7E  
                              __ptext73 8802                                __ptext65 6D80  
                              __ptext57 35F2                                __ptext49 87D2  
                              __ptext90 2E36                                __ptext82 865A  
                              __ptext74 8E00                                __ptext66 7934  
                              __ptext58 6C68                                __ptext91 260C  
                              __ptext83 8F6A                                __ptext75 8EEA  
                              __ptext67 79D6                                __ptext59 6780  
                              __ptext92 8444                                __ptext84 8F72  
                              __ptext76 8D8A                                __ptext68 6B44  
                              __ptext93 815E                                __ptext85 859C  
                              __ptext77 8E52                                __ptext69 8E1C  
                              __ptext94 89DE                                __ptext86 8F7A  
                              __ptext78 8F08                                __ptext95 8A06  
                              __ptext87 4EAA                                __ptext79 855A  
                              __ptext96 8036                                __ptext88 6156  
                              __ptext97 8A2E                                __ptext89 83FE  
                              __ptext98 8A56                                __ptext99 88E8  
                      __size_of_isupper 0030                                us1004999 4518  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                      __size_of_strncmp 01C8                        __size_of_toupper 0084  
                      _ringBufS_put_dma 7698                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 088A  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_xtoa 03BA                    __CFG_WDTCWS$WDTCWS_7 000000  
                     ?_DMA1_DMASCNT_ISR 0052                             _IVTLOCKbits 003FD4  
              __size_of_TMR5_WriteTimer 0040               _ADCC_ADI_InterruptHandler 0004  
                             stoa@F1166 018C                      ??_DMA1_DMASCNT_ISR 0058  
          __end_of_ADCC_StartConversion 8EEA                                _spi_link 00A1  
                              _wdtdelay 8218              __end_of_UART2_Transmit_ISR 88E8  
                              _vfprintf 7742                __end_of_convert_adc_data 7698  
            __end_of_PWM8_LoadDutyValue 859C    __end_of_INT1_DefaultInterruptHandler 8FA4  
 __size_of_INT1_DefaultInterruptHandler 0002            _INT1_DefaultInterruptHandler 8FA2  
                         ??_Default_ISR 0052                             _uart1RxHead 002E  
                __size_of_get_vterm_ptr 002E                             _uart1TxHead 0031  
                           _uart2RxHead 0028                             _uart1RxTail 002D  
                        _get_raw_result 8D6C                             _uart2TxHead 002B  
                           _uart1TxTail 0030                             _uart2RxTail 0027  
                           _uart2TxTail 002A                            _wait_lcd_set 8F90  
                    _EXT_INT_Initialize 876E    __end_of_TMR6_DefaultInterruptHandler 8516  
 __size_of_TMR6_DefaultInterruptHandler 0046            _TMR6_DefaultInterruptHandler 84D0  
  __end_of_ADCC_DefaultInterruptHandler 8FA8   __size_of_ADCC_DefaultInterruptHandler 0002  
          _ADCC_DefaultInterruptHandler 8FA6                                intlevel1 0000  
                              intlevel2 0000                       _send_lcd_cmd_long 893E  
        __size_of_set_temp_display_help 0010           __end_of_set_temp_display_help 8EFA  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString 7890  
                 __end_of_mode_lamp_dim 8E6A                 __end_of_adc_int_handler 8FAA  
                __size_of_INT0_CallBack 0022                              _SPI1SCKPPS 003ADE  
                            _SPI1SDIPPS 003ADF                  __size_of_INT1_CallBack 0022  
                    __end_of_update_lcd 6FA2                  _uart2TxBufferRemaining 0029  
                    __end_of_static_soc 8C5A                          _FVR_Initialize 8F82  
                __end_of_get_raw_result 8D8A                        _send_lcd_cmd_dma 82CC  
                __size_of___fpclassifyf 0196                   TMR5_ISR@CountCallBack 0021  
      __end_of_INT1_SetInterruptHandler 8AF6               __size_of_UART1_Initialize 0064  
                      ??_DMA1_DMAOR_ISR 0058                _UART1_TxInterruptHandler 0007  
             __end_of_send_lcd_cmd_long 8966                 __size_of_start_adc_scan 0064  
                   __end_of_Default_ISR 8FA2          __end_of_PIN_MANAGER_Initialize 7B92  
             __size_of_mode_lamp_bright 000E                      __end_of_vterm_dump 6B44  
               _eaDogM_WriteStringAtPos 8704                           _get_vterm_ptr 8862  
                        _check_adc_scan 8F7A               __size_of_UART2_Initialize 005E  
