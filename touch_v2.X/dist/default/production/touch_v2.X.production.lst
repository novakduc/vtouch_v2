

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Mar 13 23:44:11 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1,inline
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1,inline
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=4,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=4,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=4,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=4,class=CODE,delta=1
   108                           	psect	text87,global,reloc=4,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=4,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=4,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=4,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=4,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=4,class=CODE,delta=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=4,class=CODE,delta=1
   122                           	psect	text101,global,reloc=4,class=CODE,delta=1
   123                           	psect	text102,global,reloc=4,class=CODE,delta=1
   124                           	psect	text103,global,reloc=4,class=CODE,delta=1
   125                           	psect	text104,global,reloc=4,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1
   127                           	psect	text106,global,reloc=2,class=CODE,delta=1
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1
   129                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   130                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   131                           	psect	text108,global,reloc=2,class=CODE,delta=1
   132                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   133                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   134  0000                     
   135                           ; Version 2.05
   136                           ; Generated 20/12/2018 GMT
   137                           ; 
   138                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   139                           ; All rights reserved.
   140                           ; 
   141                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   142                           ; 
   143                           ; Redistribution and use in source and binary forms, with or without modification, are
   144                           ; permitted provided that the following conditions are met:
   145                           ; 
   146                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   147                           ;        conditions and the following disclaimer.
   148                           ; 
   149                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   150                           ;        of conditions and the following disclaimer in the documentation and/or other
   151                           ;        materials provided with the distribution.
   152                           ; 
   153                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   154                           ;        software without specific prior written permission.
   155                           ; 
   156                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   157                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   158                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   159                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   160                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   161                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   162                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   163                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   164                           ; 
   165                           ; 
   166                           ; Code-generator required, PIC18F57K42 Definitions
   167                           ; 
   168                           ; SFR Addresses
   169  0000                     
   170 ;;_mode	offset	0
   171 ;;_rxData	offset	0
   172 ;;_t_link	offset=-1 (param)
   173 ;;_k	offset	0
   174 ;;_checksum	offset	2
   175 ;;_i	offset	4
   176 ;;_byte_block	offset=-2 (param)
   177 ;;_length	offset=-3 (param)
   178 ;;_fake	offset=-4 (param)
   179 ;;_i	offset	0
   180 ;;_sum	offset	2
   181 ;;_byte_block	offset=-2 (param)
   182 ;;_byte_count	offset=-4 (param)
   183 ;;_bufData	offset=-1 (param)
   184 ;;_stream	offset=-6 (param)
   185 ;;_function	offset=-7 (param)
   186 ;;_f	offset	0
   187 ;;_ap	offset	5
   188 ;;_s	offset=-2 (param)
   189 ;;_fmt	offset=-3 (param)
   190 ;;_rxData	offset	0
   191 ;;_r_link	offset=-1 (param)
   192 ;;_txData	offset=-1 (param)
   193 ;;_rxData	offset	0
   194 ;;_m_link	offset=-1 (param)
   195 ;;_byte_block	offset=-1 (param)
   196 ;;_clear	offset=-2 (param)
   197 ;;_numMilliseconds	offset=-2 (param)
   198 ;;_timer	offset=-1 (param)
   199 ;;_timer	offset=-1 (param)
   200 ;;_count	offset=-3 (param)
   201 ;;_readValue	offset	0
   202 ;;_readValue	offset	0
   203 ;;_cmd	offset=-1 (param)
   204 ;;_cmd	offset=-1 (param)
   205 ;;_data	offset=-1 (param)
   206 ;;__this	offset=-2 (param)
   207 ;;_r	offset=-1 (param)
   208 ;;_c	offset=-2 (param)
   209 ;;_strPtr	offset=-3 (param)
   210 ;;_strPtr	offset=-1 (param)
   211 ;;_cmd	offset=-1 (param)
   212 ;;_strPtr	offset=-1 (param)
   213 ;;_delay	offset=-4 (param)
   214 ;;__this	offset=-2 (param)
   215 ;;_clearBuffer	offset=-3 (param)
   216 ;;_s	offset	0
   217 ;;_k	offset	2
   218 ;;_dest	offset=-2 (param)
   219 ;;_c	offset=-4 (param)
   220 ;;_n	offset=-6 (param)
   221 ;;_ap	offset	0
   222 ;;_fmt	offset=-2 (param)
   223 ;;_cfmt	offset	0
   224 ;;_fp	offset=-2 (param)
   225 ;;_fmt	offset=-3 (param)
   226 ;;_ap	offset=-5 (param)
   227 ;;_ll	offset	0
   228 ;;_cp	offset	8
   229 ;;_c	offset	10
   230 ;;_fp	offset=-2 (param)
   231 ;;_fmt	offset=-4 (param)
   232 ;;_ap	offset=-6 (param)
   233 ;;_r	offset	0
   234 ;;_l	offset	1
   235 ;;__l	offset=-1 (param)
   236 ;;__r	offset=-2 (param)
   237 ;;_n	offset=-4 (param)
   238 ;;_nuls	offset	0
   239 ;;_l	offset	7
   240 ;;_p	offset	9
   241 ;;_cp	offset	11
   242 ;;_w	offset	13
   243 ;;_i	offset	15
   244 ;;_fp	offset=-2 (param)
   245 ;;_s	offset=-4 (param)
   246 ;;_dtoa$3796	offset	0
   247 ;;_n	offset	2
   248 ;;_i	offset	10
   249 ;;_s	offset	12
   250 ;;_w	offset	14
   251 ;;_p	offset	16
   252 ;;_fp	offset=-2 (param)
   253 ;;_d	offset=-10 (param)
   254 ;;_a	offset=-2 (param)
   255 ;;_sign	offset	0
   256 ;;_counter	offset	1
   257 ;;_dividend	offset=-8 (param)
   258 ;;_divisor	offset=-16 (param)
   259 ;;_quotient	offset	0
   260 ;;_sign	offset	8
   261 ;;_counter	offset	9
   262 ;;_dividend	offset=-8 (param)
   263 ;;_divisor	offset=-16 (param)
   264 ;;_w	offset	0
   265 ;;_fp	offset=-2 (param)
   266 ;;_c	offset=-3 (param)
   267 ;;_w	offset	0
   268 ;;_i	offset	2
   269 ;;_fp	offset=-2 (param)
   270 ;;_buf	offset=-4 (param)
   271 ;;_p	offset=-6 (param)
   272 ;;_a	offset	0
   273 ;;_s	offset=-2 (param)
   274 ;;_i	offset	0
   275 ;;_c	offset	2
   276 ;;_s	offset=-2 (param)
   277 ;;_fp	offset=-4 (param)
   278 ;;_c	offset=-2 (param)
   279 ;;_fp	offset=-4 (param)
   280 ;;_c	offset=-1 (param)
   281 ;;__this	offset=-2 (param)
   282 ;;_c	offset=-3 (param)
   283 ;;_InterruptHandler	offset=-3 (param)
   284 ;;_InterruptHandler	offset=-3 (param)
   285 ;;_InterruptHandler	offset=-3 (param)
   286 ;;_InterruptHandler	offset=-3 (param)
   287 ;;_InterruptHandler	offset=-3 (param)
   288 ;;_InterruptHandler	offset=-3 (param)
   289 ;;_state	offset	0
   290 ;;_InterruptHandler	offset=-3 (param)
   291 ;;_InterruptHandler	offset=-3 (param)
   292 ;;_InterruptHandler	offset=-3 (param)
   293 ;;_InterruptHandler	offset=-3 (param)
   294 ;;_i	offset	0
   295 ;;_timerVal	offset=-2 (param)
   296                           
   297                           	psect	idataCOMRAM
   298  0060CA                     __pidataCOMRAM:
   299                           	opt callstack 0
   300                           
   301                           ;initializer for r_protocol@retry
   302  0060CA  03                 	db	3
   303                           
   304                           	psect	idataBANK0
   305  0060A6                     __pidataBANK0:
   306                           	opt callstack 0
   307                           
   308                           ;initializer for stoa@F1142
   309  0060A6  28                 	db	40
   310  0060A7  6E                 	db	110
   311  0060A8  75                 	db	117
   312  0060A9  6C                 	db	108
   313  0060AA  6C                 	db	108
   314  0060AB  29                 	db	41
   315  0060AC  00                 	db	0
   316                           
   317                           	psect	idataBANK1
   318  004E6C                     __pidataBANK1:
   319                           	opt callstack 0
   320                           
   321                           ;initializer for _H10
   322  004E6C  0000               	dw	0
   323  004E6E  0001               	dw	1
   324  004E70  0000               	dw	0
   325  004E72  01                 	db	1
   326  004E73  80                 	db	128
   327  004E74  01                 	db	1
   328  004E75  81                 	db	129
   329  004E76  00                 	db	0
   330  004E77  00                 	db	0
   331  004E78  0A                 	db	10
   332  004E79  0000               	dw	0
   333  004E7B  00                 	db	0
   334  004E7C  00                 	db	0
   335  004E7D  00                 	db	0
   336  004E7E  00                 	db	0
   337  004E7F  00                 	db	0
   338  004E80  00                 	db	0
   339  004E81  00                 	db	0
   340  004E82  00                 	db	0
   341  004E83  00                 	db	0
   342  004E84  00                 	db	0
   343  004E85  0A                 	db	10
   344  004E86  0000               	dw	0
   345  004E88  0001               	dw	1
   346  004E8A  0000               	dw	0
   347  004E8C  01                 	db	1
   348  004E8D  80                 	db	128
   349  004E8E  00                 	db	0
   350  004E8F  01                 	db	1
   351  004E90  00                 	db	0
   352  004E91  00                 	db	0
   353  004E92  0A                 	db	10
   354  004E93  0000               	dw	0
   355  004E95  0001               	dw	1
   356  004E97  0000               	dw	0
   357  004E99  01                 	db	1
   358  004E9A  80                 	db	128
   359  004E9B  01                 	db	1
   360  004E9C  81                 	db	129
   361  004E9D  00                 	db	0
   362  004E9E  80                 	db	128
   363  004E9F  0A                 	db	10
   364  004EA0  0000               	dw	0
   365  004EA2  0001               	dw	1
   366  004EA4  0000               	dw	0
   367  004EA6  01                 	db	1
   368  004EA7  80                 	db	128
   369  004EA8  11                 	db	17
   370  004EA9  82                 	db	130
   371  004EAA  00                 	db	0
   372  004EAB  00                 	db	0
   373  004EAC  0A                 	db	10
   374                           
   375                           ;initializer for _H12
   376  004EAD  0000               	dw	0
   377  004EAF  00                 	db	0
   378  004EB0  01                 	db	1
   379  004EB1  0001               	dw	1
   380  004EB3  0000               	dw	0
   381  004EB5  01                 	db	1
   382  004EB6  80                 	db	128
   383  004EB7  02                 	db	2
   384  004EB8  01                 	db	1
   385  004EB9  00                 	db	0
   386  004EBA  00                 	db	0
   387  004EBB  0C                 	db	12
   388  004EBC  0000               	dw	0
   389  004EBE  00                 	db	0
   390  004EBF  01                 	db	1
   391  004EC0  0001               	dw	1
   392  004EC2  0000               	dw	0
   393  004EC4  01                 	db	1
   394  004EC5  80                 	db	128
   395  004EC6  0D                 	db	13
   396  004EC7  81                 	db	129
   397  004EC8  00                 	db	0
   398  004EC9  00                 	db	0
   399  004ECA  0C                 	db	12
   400                           
   401                           ;initializer for _H24
   402  004ECB  0000               	dw	0
   403  004ECD  41                 	db	65
   404  004ECE  20                 	db	32
   405  004ECF  30                 	db	48
   406  004ED0  31                 	db	49
   407  004ED1  30                 	db	48
   408  004ED2  39                 	db	57
   409  004ED3  31                 	db	49
   410  004ED4  31                 	db	49
   411  004ED5  30                 	db	48
   412  004ED6  38                 	db	56
   413  004ED7  34                 	db	52
   414  004ED8  36                 	db	54
   415  004ED9  30                 	db	48
   416  004EDA  30                 	db	48
   417  004EDB  0001               	dw	1
   418  004EDD  0000               	dw	0
   419  004EDF  01                 	db	1
   420  004EE0  80                 	db	128
   421  004EE1  12                 	db	18
   422  004EE2  02                 	db	2
   423  004EE3  00                 	db	0
   424  004EE4  00                 	db	0
   425  004EE5  18                 	db	24
   426                           
   427                           ;initializer for _H17
   428  004EE6  0000               	dw	0
   429  004EE8  00                 	db	0
   430  004EE9  01                 	db	1
   431  004EEA  00                 	db	0
   432  004EEB  01                 	db	1
   433  004EEC  21                 	db	33
   434  004EED  02                 	db	2
   435  004EEE  01                 	db	1
   436  004EEF  0001               	dw	1
   437  004EF1  0000               	dw	0
   438  004EF3  01                 	db	1
   439  004EF4  80                 	db	128
   440  004EF5  0E                 	db	14
   441  004EF6  01                 	db	1
   442  004EF7  00                 	db	0
   443  004EF8  00                 	db	0
   444  004EF9  11                 	db	17
   445                           
   446                           ;initializer for _H14
   447  004EFA  0000               	dw	0
   448  004EFC  00                 	db	0
   449  004EFD  41                 	db	65
   450  004EFE  11                 	db	17
   451  004EFF  01                 	db	1
   452  004F00  0001               	dw	1
   453  004F02  0000               	dw	0
   454  004F04  01                 	db	1
   455  004F05  80                 	db	128
   456  004F06  04                 	db	4
   457  004F07  01                 	db	1
   458  004F08  00                 	db	0
   459  004F09  00                 	db	0
   460  004F0A  0E                 	db	14
   461                           
   462                           ;initializer for _H13
   463  004F0B  0000               	dw	0
   464  004F0D  00                 	db	0
   465  004F0E  01                 	db	1
   466  004F0F  21                 	db	33
   467  004F10  0001               	dw	1
   468  004F12  0000               	dw	0
   469  004F14  01                 	db	1
   470  004F15  80                 	db	128
   471  004F16  0C                 	db	12
   472  004F17  06                 	db	6
   473  004F18  00                 	db	0
   474  004F19  00                 	db	0
   475  004F1A  0D                 	db	13
   476                           
   477                           	psect	idataBANK2
   478  0059AA                     __pidataBANK2:
   479                           	opt callstack 0
   480                           
   481                           ;initializer for _H53
   482  0059AA  0000               	dw	0
   483  0059AC  00                 	db	0
   484  0059AD  00                 	db	0
   485  0059AE  00                 	db	0
   486  0059AF  00                 	db	0
   487  0059B0  00                 	db	0
   488  0059B1  00                 	db	0
   489  0059B2  00                 	db	0
   490  0059B3  00                 	db	0
   491  0059B4  00                 	db	0
   492  0059B5  00                 	db	0
   493  0059B6  00                 	db	0
   494  0059B7  00                 	db	0
   495  0059B8  00                 	db	0
   496  0059B9  00                 	db	0
   497  0059BA  00                 	db	0
   498  0059BB  00                 	db	0
   499  0059BC  00                 	db	0
   500  0059BD  00                 	db	0
   501  0059BE  00                 	db	0
   502  0059BF  00                 	db	0
   503  0059C0  00                 	db	0
   504  0059C1  00                 	db	0
   505  0059C2  00                 	db	0
   506  0059C3  00                 	db	0
   507  0059C4  00                 	db	0
   508  0059C5  00                 	db	0
   509  0059C6  00                 	db	0
   510  0059C7  00                 	db	0
   511  0059C8  00                 	db	0
   512  0059C9  00                 	db	0
   513  0059CA  00                 	db	0
   514  0059CB  00                 	db	0
   515  0059CC  00                 	db	0
   516  0059CD  00                 	db	0
   517  0059CE  00                 	db	0
   518  0059CF  00                 	db	0
   519  0059D0  00                 	db	0
   520  0059D1  00                 	db	0
   521  0059D2  00                 	db	0
   522  0059D3  46                 	db	70
   523  0059D4  01                 	db	1
   524  0059D5  41                 	db	65
   525  0059D6  00                 	db	0
   526  0059D7  0001               	dw	1
   527  0059D9  0000               	dw	0
   528  0059DB  01                 	db	1
   529  0059DC  80                 	db	128
   530  0059DD  03                 	db	3
   531  0059DE  8A                 	db	138
   532  0059DF  00                 	db	0
   533  0059E0  00                 	db	0
   534  0059E1  35                 	db	53
   535  0000                     _IVTADL	set	14493
   536  0000                     _IVTADH	set	14494
   537  0000                     _IVTADU	set	14495
   538  0000                     _PIE8bits	set	14744
   539  0000                     _PIR8bits	set	14760
   540  0000                     _SCANPR	set	14839
   541  0000                     _DMA2PR	set	14836
   542  0000                     _DMA1PR	set	14835
   543  0000                     _MAINPR	set	14834
   544  0000                     _ISRPR	set	14833
   545  0000                     _PIE2bits	set	14738
   546  0000                     _PIR2bits	set	14754
   547  0000                     _PIE9bits	set	14745
   548  0000                     _PIR9bits	set	14761
   549  0000                     _PIE6bits	set	14742
   550  0000                     _PIE3bits	set	14739
   551  0000                     _PMD7	set	14791
   552  0000                     _PMD6	set	14790
   553  0000                     _PMD5	set	14789
   554  0000                     _PMD4	set	14788
   555  0000                     _PMD3	set	14787
   556  0000                     _PMD2	set	14786
   557  0000                     _PMD1	set	14785
   558  0000                     _PMD0	set	14784
   559  0000                     _OSCTUNE	set	14814
   560  0000                     _OSCFRQ	set	14815
   561  0000                     _OSCEN	set	14813
   562  0000                     _OSCCON3	set	14811
   563  0000                     _OSCCON1	set	14809
   564  0000                     _IPR8bits	set	14728
   565  0000                     _IPR9bits	set	14729
   566  0000                     _IPR7bits	set	14727
   567  0000                     _IPR5bits	set	14725
   568  0000                     _IPR1bits	set	14721
   569  0000                     _IPR3bits	set	14723
   570  0000                     _IPR6bits	set	14726
   571  0000                     _IPR2bits	set	14722
   572  0000                     _PIE7bits	set	14743
   573  0000                     _PIE5bits	set	14741
   574  0000                     _PIE1bits	set	14737
   575  0000                     _PIR7bits	set	14759
   576  0000                     _PIR5bits	set	14757
   577  0000                     _PIR1bits	set	14753
   578  0000                     _PLLR	set	118496
   579  0000                     _SPI1SDIPPS	set	15071
   580  0000                     _RC6PPS	set	14870
   581  0000                     _RC5PPS	set	14869
   582  0000                     _RA6PPS	set	14854
   583  0000                     _RA5PPS	set	14853
   584  0000                     _RA4PPS	set	14852
   585  0000                     _SPI1SCKPPS	set	15070
   586  0000                     _U1RXPPS	set	15077
   587  0000                     _INT1PPS	set	15041
   588  0000                     _INT2PPS	set	15042
   589  0000                     _INT0PPS	set	15040
   590  0000                     _RC3PPS	set	14867
   591  0000                     _RB6PPS	set	14862
   592  0000                     _U2RXPPS	set	15080
   593  0000                     _SLRCONF	set	14995
   594  0000                     _SLRCONE	set	14979
   595  0000                     _SLRCOND	set	14963
   596  0000                     _SLRCONC	set	14947
   597  0000                     _SLRCONB	set	14931
   598  0000                     _SLRCONA	set	14915
   599  0000                     _ODCOND	set	14962
   600  0000                     _ODCONC	set	14946
   601  0000                     _ODCONB	set	14930
   602  0000                     _ODCONA	set	14914
   603  0000                     _ODCONF	set	14994
   604  0000                     _ODCONE	set	14978
   605  0000                     _WPUC	set	14945
   606  0000                     _WPUA	set	14913
   607  0000                     _WPUB	set	14929
   608  0000                     _WPUE	set	14977
   609  0000                     _WPUF	set	14993
   610  0000                     _WPUD	set	14961
   611  0000                     _ANSELA	set	14912
   612  0000                     _ANSELF	set	14992
   613  0000                     _ANSELE	set	14976
   614  0000                     _ANSELB	set	14928
   615  0000                     _ANSELC	set	14944
   616  0000                     _ANSELD	set	14960
   617  0000                     _DMA1SSA	set	15353
   618  0000                     _DMA1DSZ	set	15342
   619  0000                     _DMA1SSZ	set	15351
   620  0000                     _DMA1DSA	set	15344
   621  0000                     _DMA1CON0bits	set	15356
   622  0000                     _DMA1CON1bits	set	15357
   623  0000                     _DMA1CON0	set	15356
   624  0000                     _DMA1AIRQ	set	15358
   625  0000                     _DMA1SIRQ	set	15359
   626  0000                     _DMA1CON1	set	15357
   627  0000                     _CLC1CON	set	15476
   628  0000                     _CLC1GLS3	set	15485
   629  0000                     _CLC1GLS2	set	15484
   630  0000                     _CLC1GLS1	set	15483
   631  0000                     _CLC1GLS0	set	15482
   632  0000                     _CLC1SEL3	set	15481
   633  0000                     _CLC1SEL2	set	15480
   634  0000                     _CLC1SEL1	set	15479
   635  0000                     _CLC1SEL0	set	15478
   636  0000                     _CLC1POL	set	15477
   637  0000                     _CLKRCON	set	15589
   638  0000                     _CLKRCLK	set	15590
   639  0000                     _MD1CARL	set	15613
   640  0000                     _MD1CARH	set	15614
   641  0000                     _MD1SRC	set	15612
   642  0000                     _MD1CON1bits	set	15611
   643  0000                     _MD1CON0bits	set	15610
   644  0000                     _SPI1INTFbits	set	15642
   645  0000                     _SPI1RXB	set	15632
   646  0000                     _SPI1TXB	set	15633
   647  0000                     _SPI1TCNTL	set	15634
   648  0000                     _SPI1CON0	set	15636
   649  0000                     _SPI1CLK	set	15644
   650  0000                     _SPI1BAUD	set	15641
   651  0000                     _SPI1CON2	set	15638
   652  0000                     _SPI1CON1	set	15637
   653  0000                     _U2RXB	set	15824
   654  0000                     _U2TXB	set	15826
   655  0000                     _U2ERRIE	set	15842
   656  0000                     _U2ERRIR	set	15841
   657  0000                     _U2UIR	set	15840
   658  0000                     _U2FIFO	set	15839
   659  0000                     _U2BRGH	set	15838
   660  0000                     _U2BRGL	set	15837
   661  0000                     _U2CON2	set	15836
   662  0000                     _U2CON1	set	15835
   663  0000                     _U2CON0	set	15834
   664  0000                     _U2P3L	set	15832
   665  0000                     _U2P2L	set	15830
   666  0000                     _U2P1L	set	15828
   667  0000                     _U1RXB	set	15848
   668  0000                     _U1TXB	set	15850
   669  0000                     _U1ERRIE	set	15866
   670  0000                     _U1ERRIR	set	15865
   671  0000                     _U1UIR	set	15864
   672  0000                     _U1FIFO	set	15863
   673  0000                     _U1BRGH	set	15862
   674  0000                     _U1BRGL	set	15861
   675  0000                     _U1CON2	set	15860
   676  0000                     _U1CON1	set	15859
   677  0000                     _U1CON0	set	15858
   678  0000                     _U1P3H	set	15857
   679  0000                     _U1P3L	set	15856
   680  0000                     _U1P2H	set	15855
   681  0000                     _U1P2L	set	15854
   682  0000                     _U1P1H	set	15853
   683  0000                     _U1P1L	set	15852
   684  0000                     _ADCON0	set	16120
   685  0000                     _ADCLK	set	16127
   686  0000                     _ADACT	set	16126
   687  0000                     _ADREF	set	16125
   688  0000                     _ADSTAT	set	16124
   689  0000                     _ADCON3	set	16123
   690  0000                     _ADCON2	set	16122
   691  0000                     _ADCON1	set	16121
   692  0000                     _ADPREH	set	16119
   693  0000                     _ADPREL	set	16118
   694  0000                     _ADCAP	set	16117
   695  0000                     _ADACQH	set	16116
   696  0000                     _ADACQL	set	16115
   697  0000                     _ADPCH	set	16113
   698  0000                     _ADRPT	set	16108
   699  0000                     _ADACCU	set	16106
   700  0000                     _ADSTPTH	set	16101
   701  0000                     _ADSTPTL	set	16100
   702  0000                     _ADUTHH	set	16097
   703  0000                     _ADUTHL	set	16096
   704  0000                     _ADLTHH	set	16095
   705  0000                     _ADLTHL	set	16094
   706  0000                     _NCO1CONbits	set	16190
   707  0000                     _NCO1INCL	set	16187
   708  0000                     _NCO1INCH	set	16188
   709  0000                     _NCO1INCU	set	16189
   710  0000                     _NCO1ACCL	set	16184
   711  0000                     _NCO1ACCH	set	16185
   712  0000                     _NCO1ACCU	set	16186
   713  0000                     _NCO1CLK	set	16191
   714  0000                     _NCO1CON	set	16190
   715  0000                     _LATCbits	set	16316
   716  0000                     _LATDbits	set	16317
   717  0000                     _PORTBbits	set	16331
   718  0000                     _LATEbits	set	16318
   719  0000                     _T5CONbits	set	16282
   720  0000                     _T5CON	set	16282
   721  0000                     _TMR5L	set	16280
   722  0000                     _TMR5H	set	16281
   723  0000                     _T5CLK	set	16285
   724  0000                     _T5GATE	set	16284
   725  0000                     _T5GCON	set	16283
   726  0000                     _T6CON	set	16276
   727  0000                     _T6TMR	set	16274
   728  0000                     _T6PR	set	16275
   729  0000                     _T6RST	set	16279
   730  0000                     _T6HLT	set	16277
   731  0000                     _T6CLKCON	set	16278
   732  0000                     _TRISD	set	16325
   733  0000                     _TRISC	set	16324
   734  0000                     _TRISB	set	16323
   735  0000                     _TRISA	set	16322
   736  0000                     _TRISF	set	16327
   737  0000                     _TRISE	set	16326
   738  0000                     _LATC	set	16316
   739  0000                     _LATB	set	16315
   740  0000                     _LATF	set	16319
   741  0000                     _LATA	set	16314
   742  0000                     _LATD	set	16317
   743  0000                     _LATE	set	16318
   744  0000                     _IVTLOCKbits	set	16340
   745  0000                     _IVTLOCK	set	16340
   746  0000                     _INTCON0bits	set	16338
   747  0000                     _GIE	set	130711
   748                           
   749                           	psect	smallconst
   750  002000                     __psmallconst:
   751                           	opt callstack 0
   752  002000  00                 	db	0
   753  002001                     STR_15:
   754  002001  20                 	db	32
   755  002002  52                 	db	82	;'R'
   756  002003  25                 	db	37
   757  002004  64                 	db	100	;'d'
   758  002005  20                 	db	32
   759  002006  54                 	db	84	;'T'
   760  002007  25                 	db	37
   761  002008  64                 	db	100	;'d'
   762  002009  20                 	db	32
   763  00200A  46                 	db	70	;'F'
   764  00200B  52                 	db	82	;'R'
   765  00200C  25                 	db	37
   766  00200D  64                 	db	100	;'d'
   767  00200E  20                 	db	32
   768  00200F  46                 	db	70	;'F'
   769  002010  53                 	db	83	;'S'
   770  002011  25                 	db	37
   771  002012  64                 	db	100	;'d'
   772  002013  20                 	db	32
   773  002014  23                 	db	35
   774  002015  00                 	db	0
   775  002016                     STR_11:
   776  002016  20                 	db	32
   777  002017  4C                 	db	76	;'L'
   778  002018  4F                 	db	79	;'O'
   779  002019  47                 	db	71	;'G'
   780  00201A  20                 	db	32
   781  00201B  4D                 	db	77	;'M'
   782  00201C  4F                 	db	79	;'O'
   783  00201D  44                 	db	68	;'D'
   784  00201E  45                 	db	69	;'E'
   785  00201F  20                 	db	32
   786  002020  25                 	db	37
   787  002021  6C                 	db	108	;'l'
   788  002022  64                 	db	100	;'d'
   789  002023  20                 	db	32
   790  002024  20                 	db	32
   791  002025  20                 	db	32
   792  002026  20                 	db	32
   793  002027  20                 	db	32
   794  002028  23                 	db	35
   795  002029  00                 	db	0
   796  00202A                     STR_9:
   797  00202A  45                 	db	69	;'E'
   798  00202B  20                 	db	32
   799  00202C  52                 	db	82	;'R'
   800  00202D  25                 	db	37
   801  00202E  64                 	db	100	;'d'
   802  00202F  20                 	db	32
   803  002030  54                 	db	84	;'T'
   804  002031  25                 	db	37
   805  002032  64                 	db	100	;'d'
   806  002033  20                 	db	32
   807  002034  45                 	db	69	;'E'
   808  002035  25                 	db	37
   809  002036  64                 	db	100	;'d'
   810  002037  20                 	db	32
   811  002038  41                 	db	65	;'A'
   812  002039  25                 	db	37
   813  00203A  64                 	db	100	;'d'
   814  00203B  20                 	db	32
   815  00203C  23                 	db	35
   816  00203D  00                 	db	0
   817  00203E                     STR_5:
   818  00203E  20                 	db	32
   819  00203F  48                 	db	72	;'H'
   820  002040  4F                 	db	79	;'O'
   821  002041  53                 	db	83	;'S'
   822  002042  54                 	db	84	;'T'
   823  002043  20                 	db	32
   824  002044  4D                 	db	77	;'M'
   825  002045  4F                 	db	79	;'O'
   826  002046  44                 	db	68	;'D'
   827  002047  45                 	db	69	;'E'
   828  002048  20                 	db	32
   829  002049  25                 	db	37
   830  00204A  6C                 	db	108	;'l'
   831  00204B  64                 	db	100	;'d'
   832  00204C  20                 	db	32
   833  00204D  20                 	db	32
   834  00204E  20                 	db	32
   835  00204F  23                 	db	35
   836  002050  00                 	db	0
   837  002051                     STR_1:
   838  002051  20                 	db	32
   839  002052  52                 	db	82	;'R'
   840  002053  56                 	db	86	;'V'
   841  002054  49                 	db	73	;'I'
   842  002055  20                 	db	32
   843  002056  48                 	db	72	;'H'
   844  002057  4F                 	db	79	;'O'
   845  002058  53                 	db	83	;'S'
   846  002059  54                 	db	84	;'T'
   847  00205A  20                 	db	32
   848  00205B  54                 	db	84	;'T'
   849  00205C  45                 	db	69	;'E'
   850  00205D  53                 	db	83	;'S'
   851  00205E  54                 	db	84	;'T'
   852  00205F  45                 	db	69	;'E'
   853  002060  52                 	db	82	;'R'
   854  002061  00                 	db	0
   855  002062                     STR_4:
   856  002062  20                 	db	32
   857  002063  46                 	db	70	;'F'
   858  002064  47                 	db	71	;'G'
   859  002065  42                 	db	66	;'B'
   860  002066  40                 	db	64	;'@'
   861  002067  4D                 	db	77	;'M'
   862  002068  43                 	db	67	;'C'
   863  002069  48                 	db	72	;'H'
   864  00206A  50                 	db	80	;'P'
   865  00206B  20                 	db	32
   866  00206C  46                 	db	70	;'F'
   867  00206D  41                 	db	65	;'A'
   868  00206E  42                 	db	66	;'B'
   869  00206F  34                 	db	52	;'4'
   870  002070  00                 	db	0
   871  002071                     STR_6:
   872  002071  20                 	db	32
   873  002072  53                 	db	83	;'S'
   874  002073  25                 	db	37
   875  002074  64                 	db	100	;'d'
   876  002075  46                 	db	70	;'F'
   877  002076  25                 	db	37
   878  002077  64                 	db	100	;'d'
   879  002078  20                 	db	32
   880  002079  23                 	db	35
   881  00207A  20                 	db	32
   882  00207B  20                 	db	32
   883  00207C  20                 	db	32
   884  00207D  20                 	db	32
   885  00207E  00                 	db	0
   886  00207F                     STR_2:
   887  00207F  20                 	db	32
   888  002080  56                 	db	86	;'V'
   889  002081  65                 	db	101	;'e'
   890  002082  72                 	db	114	;'r'
   891  002083  73                 	db	115	;'s'
   892  002084  69                 	db	105	;'i'
   893  002085  6F                 	db	111	;'o'
   894  002086  6E                 	db	110	;'n'
   895  002087  20                 	db	32
   896  002088  25                 	db	37
   897  002089  73                 	db	115	;'s'
   898  00208A  00                 	db	0
   899  00208B                     STR_8:
   900  00208B  20                 	db	32
   901  00208C  4F                 	db	79	;'O'
   902  00208D  4B                 	db	75	;'K'
   903  00208E  20                 	db	32
   904  00208F  23                 	db	35
   905  002090  00                 	db	0
   906  002091                     STR_7:
   907  002091  20                 	db	32
   908  002092  4F                 	db	79	;'O'
   909  002093  4B                 	db	75	;'K'
   910  002094  51                 	db	81	;'Q'
   911  002095  23                 	db	35
   912  002096  00                 	db	0
   913  002097                     STR_3:
   914  002097  30                 	db	48	;'0'
   915  002098  2E                 	db	46
   916  002099  37                 	db	55	;'7'
   917  00209A  32                 	db	50	;'2'
   918  00209B  41                 	db	65	;'A'
   919  00209C  00                 	db	0
   920  00209D                     STR_19:
   921  00209D  6C                 	db	108	;'l'
   922  00209E  64                 	db	100	;'d'
   923  00209F  00                 	db	0
   924  0020A0                     STR_23:
   925  0020A0  6C                 	db	108	;'l'
   926  0020A1  69                 	db	105	;'i'
   927  0020A2  00                 	db	0
   928  0020A3                     STR_17:
   929  0020A3  25                 	db	37
   930  0020A4  63                 	db	99	;'c'
   931  0020A5  00                 	db	0
   932  0000                     
   933                           ; #config settings
   934  0020A6  00                 	db	0	; dummy byte at the end
   935  0000                     
   936                           	psect	cinit
   937  004CDC                     __pcinit:
   938                           	opt callstack 0
   939  004CDC                     start_initialization:
   940                           	opt callstack 0
   941  004CDC                     __initialization:
   942                           	opt callstack 0
   943                           
   944                           ; Initialize objects allocated to BANK2 (56 bytes)
   945                           ; load TBLPTR registers with __pidataBANK2
   946  004CDC  0EAA               	movlw	low __pidataBANK2
   947  004CDE  6EF6               	movwf	tblptrl,c
   948  004CE0  0E59               	movlw	high __pidataBANK2
   949  004CE2  6EF7               	movwf	tblptrh,c
   950  004CE4  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   951  004CE6  6EF8               	movwf	tblptru,c
   952  004CE8  EE00  F2C0         	lfsr	0,__pdataBANK2
   953  004CEC  EE20 F038          	lfsr	2,56
   954  004CF0                     copy_data0:
   955  004CF0  0009               	tblrd		*+
   956  004CF2  006F FFD7 FFEE     	movff	tablat,postinc0
   957  004CF8  50DD               	movf	postdec2,w,c
   958  004CFA  50D9               	movf	fsr2l,w,c
   959  004CFC  E1F9               	bnz	copy_data0
   960                           
   961                           ; Initialize objects allocated to BANK1 (175 bytes)
   962                           ; load TBLPTR registers with __pidataBANK1
   963  004CFE  0E6C               	movlw	low __pidataBANK1
   964  004D00  6EF6               	movwf	tblptrl,c
   965  004D02  0E4E               	movlw	high __pidataBANK1
   966  004D04  6EF7               	movwf	tblptrh,c
   967  004D06  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   968  004D08  6EF8               	movwf	tblptru,c
   969  004D0A  EE00  F100         	lfsr	0,__pdataBANK1
   970  004D0E  EE20 F0AF          	lfsr	2,175
   971  004D12                     copy_data1:
   972  004D12  0009               	tblrd		*+
   973  004D14  006F FFD7 FFEE     	movff	tablat,postinc0
   974  004D1A  50DD               	movf	postdec2,w,c
   975  004D1C  50D9               	movf	fsr2l,w,c
   976  004D1E  E1F9               	bnz	copy_data1
   977                           
   978                           ; Initialize objects allocated to BANK0 (7 bytes)
   979                           ; load TBLPTR registers with __pidataBANK0
   980  004D20  0EA6               	movlw	low __pidataBANK0
   981  004D22  6EF6               	movwf	tblptrl,c
   982  004D24  0E60               	movlw	high __pidataBANK0
   983  004D26  6EF7               	movwf	tblptrh,c
   984  004D28  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   985  004D2A  6EF8               	movwf	tblptru,c
   986  004D2C  EE00  F0F2         	lfsr	0,__pdataBANK0
   987  004D30  EE20 F007          	lfsr	2,7
   988  004D34                     copy_data2:
   989  004D34  0009               	tblrd		*+
   990  004D36  006F FFD7 FFEE     	movff	tablat,postinc0
   991  004D3C  50DD               	movf	postdec2,w,c
   992  004D3E  50D9               	movf	fsr2l,w,c
   993  004D40  E1F9               	bnz	copy_data2
   994                           
   995                           ; Initialize objects allocated to COMRAM (1 bytes)
   996                           ; load TBLPTR registers with __pidataCOMRAM
   997  004D42  0ECA               	movlw	low __pidataCOMRAM
   998  004D44  6EF6               	movwf	tblptrl,c
   999  004D46  0E60               	movlw	high __pidataCOMRAM
  1000  004D48  6EF7               	movwf	tblptrh,c
  1001  004D4A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1002  004D4C  6EF8               	movwf	tblptru,c
  1003  004D4E  0009               	tblrd		*+	;fetch initializer
  1004  004D50  006F FFD4  F05D    	movff	tablat,__pdataCOMRAM
  1005                           
  1006                           ; Clear objects allocated to BANK3 (198 bytes)
  1007  004D56  EE00  F300         	lfsr	0,__pbssBANK3
  1008  004D5A  0EC6               	movlw	198
  1009  004D5C                     clear_0:
  1010  004D5C  6AEE               	clrf	postinc0,c
  1011  004D5E  06E8               	decf	wreg,f,c
  1012  004D60  E1FD               	bnz	clear_0
  1013                           
  1014                           ; Clear objects allocated to BANK2 (192 bytes)
  1015  004D62  EE00  F200         	lfsr	0,__pbssBANK2
  1016  004D66  0EC0               	movlw	192
  1017  004D68                     clear_1:
  1018  004D68  6AEE               	clrf	postinc0,c
  1019  004D6A  06E8               	decf	wreg,f,c
  1020  004D6C  E1FD               	bnz	clear_1
  1021                           
  1022                           ; Clear objects allocated to BANK1 (32 bytes)
  1023  004D6E  EE00  F1AF         	lfsr	0,__pbssBANK1
  1024  004D72  0E20               	movlw	32
  1025  004D74                     clear_2:
  1026  004D74  6AEE               	clrf	postinc0,c
  1027  004D76  06E8               	decf	wreg,f,c
  1028  004D78  E1FD               	bnz	clear_2
  1029                           
  1030                           ; Clear objects allocated to BANK0 (146 bytes)
  1031  004D7A  EE00  F060         	lfsr	0,__pbssBANK0
  1032  004D7E  0E92               	movlw	146
  1033  004D80                     clear_3:
  1034  004D80  6AEE               	clrf	postinc0,c
  1035  004D82  06E8               	decf	wreg,f,c
  1036  004D84  E1FD               	bnz	clear_3
  1037                           
  1038                           ; Clear objects allocated to COMRAM (58 bytes)
  1039  004D86  EE00  F001         	lfsr	0,__pbssCOMRAM
  1040  004D8A  0E3A               	movlw	58
  1041  004D8C                     clear_4:
  1042  004D8C  6AEE               	clrf	postinc0,c
  1043  004D8E  06E8               	decf	wreg,f,c
  1044  004D90  E1FD               	bnz	clear_4
  1045                           
  1046                           ;
  1047                           ; Setup IVTBASE
  1048                           ;
  1049  004D92  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1050  004D94  6ED5               	movwf	213,c
  1051  004D96  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1052  004D98  6ED6               	movwf	214,c
  1053  004D9A  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1054  004D9C  6ED7               	movwf	215,c
  1055  004D9E                     end_of_initialization:
  1056                           	opt callstack 0
  1057  004D9E                     __end_of__initialization:
  1058                           	opt callstack 0
  1059  004D9E  0100               	movlb	0
  1060  004DA0  EFD8  F012         	goto	_main	;jump to C main() function
  1061                           
  1062                           	psect	bssCOMRAM
  1063  000001                     __pbssCOMRAM:
  1064                           	opt callstack 0
  1065  000001                     secs_II_message@block:
  1066                           	opt callstack 0
  1067  000001                     	ds	7
  1068  000008                     _ADCC_ADI_InterruptHandler:
  1069                           	opt callstack 0
  1070  000008                     	ds	3
  1071  00000B                     _UART1_TxInterruptHandler:
  1072                           	opt callstack 0
  1073  00000B                     	ds	3
  1074  00000E                     _UART1_RxInterruptHandler:
  1075                           	opt callstack 0
  1076  00000E                     	ds	3
  1077  000011                     _UART2_TxInterruptHandler:
  1078                           	opt callstack 0
  1079  000011                     	ds	3
  1080  000014                     _UART2_RxInterruptHandler:
  1081                           	opt callstack 0
  1082  000014                     	ds	3
  1083  000017                     _INT2_InterruptHandler:
  1084                           	opt callstack 0
  1085  000017                     	ds	3
  1086  00001A                     _INT1_InterruptHandler:
  1087                           	opt callstack 0
  1088  00001A                     	ds	3
  1089  00001D                     _INT0_InterruptHandler:
  1090                           	opt callstack 0
  1091  00001D                     	ds	3
  1092  000020                     _width:
  1093                           	opt callstack 0
  1094  000020                     	ds	2
  1095  000022                     _prec:
  1096                           	opt callstack 0
  1097  000022                     	ds	2
  1098  000024                     _flags:
  1099                           	opt callstack 0
  1100  000024                     	ds	2
  1101  000026                     TMR5_ISR@CountCallBack:
  1102                           	opt callstack 0
  1103  000026                     	ds	2
  1104  000028                     _timer5ReloadVal:
  1105                           	opt callstack 0
  1106  000028                     	ds	2
  1107  00002A                     t_protocol@requeue:
  1108                           	opt callstack 0
  1109  00002A                     	ds	1
  1110  00002B                     t_protocol@retry:
  1111                           	opt callstack 0
  1112  00002B                     	ds	1
  1113  00002C                     r_protocol@rxData_l:
  1114                           	opt callstack 0
  1115  00002C                     	ds	1
  1116  00002D                     m_protocol@rxData_l:
  1117                           	opt callstack 0
  1118  00002D                     	ds	1
  1119  00002E                     _mode_sw:
  1120                           	opt callstack 0
  1121  00002E                     	ds	1
  1122  00002F                     _uart2RxCount:
  1123                           	opt callstack 0
  1124  00002F                     	ds	1
  1125  000030                     _uart2RxTail:
  1126                           	opt callstack 0
  1127  000030                     	ds	1
  1128  000031                     _uart2RxHead:
  1129                           	opt callstack 0
  1130  000031                     	ds	1
  1131  000032                     _uart2TxBufferRemaining:
  1132                           	opt callstack 0
  1133  000032                     	ds	1
  1134  000033                     _uart2TxTail:
  1135                           	opt callstack 0
  1136  000033                     	ds	1
  1137  000034                     _uart2TxHead:
  1138                           	opt callstack 0
  1139  000034                     	ds	1
  1140  000035                     _uart1RxCount:
  1141                           	opt callstack 0
  1142  000035                     	ds	1
  1143  000036                     _uart1RxTail:
  1144                           	opt callstack 0
  1145  000036                     	ds	1
  1146  000037                     _uart1RxHead:
  1147                           	opt callstack 0
  1148  000037                     	ds	1
  1149  000038                     _uart1TxBufferRemaining:
  1150                           	opt callstack 0
  1151  000038                     	ds	1
  1152  000039                     _uart1TxTail:
  1153                           	opt callstack 0
  1154  000039                     	ds	1
  1155  00003A                     _uart1TxHead:
  1156                           	opt callstack 0
  1157  00003A                     	ds	1
  1158                           
  1159                           	psect	dataCOMRAM
  1160  00005D                     __pdataCOMRAM:
  1161                           	opt callstack 0
  1162  00005D                     r_protocol@retry:
  1163                           	opt callstack 0
  1164  00005D                     	ds	1
  1165                           
  1166                           	psect	bssBANK0
  1167  000060                     __pbssBANK0:
  1168                           	opt callstack 0
  1169  000060                     _r_block:
  1170                           	opt callstack 0
  1171  000060                     	ds	13
  1172  00006D                     _spi_link:
  1173                           	opt callstack 0
  1174  00006D                     	ds	12
  1175  000079                     _tickCount:
  1176                           	opt callstack 0
  1177  000079                     	ds	12
  1178  000085                     t_protocol@block:
  1179                           	opt callstack 0
  1180  000085                     	ds	7
  1181  00008C                     wdtdelay@dcount:
  1182                           	opt callstack 0
  1183  00008C                     	ds	4
  1184  000090                     _TMR5_InterruptHandler:
  1185                           	opt callstack 0
  1186  000090                     	ds	3
  1187  000093                     _TMR6_InterruptHandler:
  1188                           	opt callstack 0
  1189  000093                     	ds	3
  1190  000096                     _nout:
  1191                           	opt callstack 0
  1192  000096                     	ds	2
  1193  000098                     run_checksum@sum:
  1194                           	opt callstack 0
  1195  000098                     	ds	2
  1196  00009A                     _V:
  1197                           	opt callstack 0
  1198  00009A                     	ds	88
  1199                           
  1200                           	psect	dataBANK0
  1201  0000F2                     __pdataBANK0:
  1202                           	opt callstack 0
  1203  0000F2                     stoa@F1142:
  1204                           	opt callstack 0
  1205  0000F2                     	ds	7
  1206                           
  1207                           	psect	bssBANK1
  1208  0001AF                     __pbssBANK1:
  1209                           	opt callstack 0
  1210  0001AF                     _dbuf:
  1211                           	opt callstack 0
  1212  0001AF                     	ds	32
  1213                           
  1214                           	psect	dataBANK1
  1215  000100                     __pdataBANK1:
  1216                           	opt callstack 0
  1217  000100                     _H10:
  1218                           	opt callstack 0
  1219  000100                     	ds	65
  1220  000141                     _H12:
  1221                           	opt callstack 0
  1222  000141                     	ds	30
  1223  00015F                     _H24:
  1224                           	opt callstack 0
  1225  00015F                     	ds	27
  1226  00017A                     _H17:
  1227                           	opt callstack 0
  1228  00017A                     	ds	20
  1229  00018E                     _H14:
  1230                           	opt callstack 0
  1231  00018E                     	ds	17
  1232  00019F                     _H13:
  1233                           	opt callstack 0
  1234  00019F                     	ds	16
  1235                           
  1236                           	psect	bssBANK2
  1237  000200                     __pbssBANK2:
  1238                           	opt callstack 0
  1239  000200                     _uart2RxBuffer:
  1240                           	opt callstack 0
  1241  000200                     	ds	64
  1242  000240                     _uart1RxBuffer:
  1243                           	opt callstack 0
  1244  000240                     	ds	64
  1245  000280                     _uart1TxBuffer:
  1246                           	opt callstack 0
  1247  000280                     	ds	64
  1248                           
  1249                           	psect	dataBANK2
  1250  0002C0                     __pdataBANK2:
  1251                           	opt callstack 0
  1252  0002C0                     _H53:
  1253                           	opt callstack 0
  1254  0002C0                     	ds	56
  1255                           
  1256                           	psect	bssBANK3
  1257  000300                     __pbssBANK3:
  1258                           	opt callstack 0
  1259  000300                     _uart2TxBuffer:
  1260                           	opt callstack 0
  1261  000300                     	ds	64
  1262  000340                     _ring_buf2:
  1263                           	opt callstack 0
  1264  000340                     	ds	67
  1265  000383                     _ring_buf1:
  1266                           	opt callstack 0
  1267  000383                     	ds	67
  1268                           
  1269                           	psect	cstackCOMRAM
  1270  00005B                     __pcstackCOMRAM:
  1271                           	opt callstack 0
  1272  00005B                     ??_TMR6_ISR:
  1273  00005B                     
  1274                           ; 1 bytes @ 0x0
  1275  00005B                     	ds	1
  1276  00005C                     ??_TMR5_ISR:
  1277                           
  1278                           ; 1 bytes @ 0x1
  1279  00005C                     	ds	1
  1280                           
  1281 ;;
  1282 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1283 ;;
  1284 ;; *************** function _main *****************
  1285 ;; Defined at:
  1286 ;;		line 298 in file "main.c"
  1287 ;; Parameters:    Size  Location     Type
  1288 ;;		None
  1289 ;; Auto vars:     Size  Location     Type
  1290 ;;  mode            1  [STACK] enum E16894
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  1  [STACK] void 
  1293 ;; Registers used:
  1294 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh
      +, tblptru, prodl, prodh
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 4/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1304 ;;Total ram usage:        0 bytes
  1305 ;; Hardware stack levels required when called:   14
  1306 ;; This function calls:
  1307 ;;		_SYSTEM_Initialize
  1308 ;;		_WaitMs
  1309 ;;		_eaDogM_WriteCommand
  1310 ;;		_eaDogM_WriteStringAtPos
  1311 ;;		_init_display
  1312 ;;		_m_protocol
  1313 ;;		_r_protocol
  1314 ;;		_sprintf
  1315 ;;		_t_protocol
  1316 ;;		_wait_lcd_done
  1317 ;; This function is called by:
  1318 ;;		Startup code after reset
  1319 ;; This function uses a reentrant model
  1320 ;;
  1321                           
  1322                           	psect	text0
  1323  0025B0                     __ptext0:
  1324                           	opt callstack 0
  1325  0025B0                     _main:
  1326                           	opt callstack 0
  1327                           
  1328                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1329  0025B0  52E6               	movf	postinc1,f,c
  1330                           
  1331                           ;main.c: 300:  UI_STATES mode;;main.c: 303:  SYSTEM_Initialize();
  1332                           
  1333                           ;incstack = 0
  1334  0025B2  ECFA  F02B         	call	_SYSTEM_Initialize	;wreg free
  1335                           
  1336                           ; BSR set to: 60
  1337                           ;main.c: 306:  (INTCON0bits.GIEH = 1);
  1338  0025B6  8ED2               	bsf	16338,7,c	;volatile
  1339                           
  1340                           ; BSR set to: 60
  1341                           ;main.c: 309:  (INTCON0bits.GIEL = 1);
  1342  0025B8  8CD2               	bsf	16338,6,c	;volatile
  1343                           
  1344                           ; BSR set to: 60
  1345                           ;main.c: 311:  V.ui_state = UI_STATE_INIT;
  1346  0025BA  0100               	movlb	0	; () banked
  1347  0025BC  6B9B               	clrf	(_V+1)& (0+255),b
  1348                           
  1349                           ; BSR set to: 0
  1350                           ;main.c: 312:  if (PORTBbits.RB0) {
  1351  0025BE  A0CB               	btfss	16331,0,c	;volatile
  1352  0025C0  D004               	goto	l8117
  1353                           
  1354                           ; BSR set to: 0
  1355                           ;main.c: 313:   mode = UI_STATE_HOST;
  1356                           ;stkvar	_mode @ sp[(-1)+0]
  1357  0025C2  0EFF               	movlw	-1
  1358  0025C4  6AE3               	clrf	plusw1,c
  1359  0025C6  2AE3               	incf	plusw1,f,c
  1360                           
  1361                           ;main.c: 314:  } else {
  1362  0025C8  D004               	goto	l8119
  1363  0025CA                     l8117:
  1364                           
  1365                           ; BSR set to: 0
  1366                           ;main.c: 315:   mode = UI_STATE_LOG;
  1367                           ;stkvar	_mode @ sp[(-1)+0]
  1368  0025CA  0EFF               	movlw	-1
  1369  0025CC  6AE3               	clrf	plusw1,c
  1370  0025CE  80E3               	bsf	plusw1,0,c
  1371  0025D0  82E3               	bsf	plusw1,1,c	;indir
  1372  0025D2                     l8119:
  1373                           
  1374                           ; BSR set to: 0
  1375                           ;main.c: 318:  if (mode == UI_STATE_LOG) {
  1376                           ;stkvar	_mode @ sp[(-1)+0]
  1377  0025D2  0EFF               	movlw	-1
  1378  0025D4  006F FF8C  F03B    	movff	plusw1,btemp
  1379  0025DA  0E03               	movlw	3
  1380  0025DC  183B               	xorwf	btemp,w,c
  1381  0025DE  A4D8               	btfss	status,2,c
  1382  0025E0  D003               	goto	l1216
  1383                           
  1384                           ; BSR set to: 0
  1385                           
  1386                           ;main.c: 319:   do { LATDbits.LATD0 = 1; } while(0);
  1387  0025E2  80BD               	bsf	16317,0,c	;volatile
  1388                           
  1389                           ; BSR set to: 0
  1390                           
  1391                           ;main.c: 320:   do { LATDbits.LATD1 = 1; } while(0);
  1392  0025E4  82BD               	bsf	16317,1,c	;volatile
  1393  0025E6  D211               	goto	l8285
  1394  0025E8                     l1216:
  1395                           
  1396                           ; BSR set to: 0
  1397  0025E8  90BD               	bcf	16317,0,c	;volatile
  1398                           
  1399                           ; BSR set to: 0
  1400                           
  1401                           ;main.c: 323:   do { LATDbits.LATD1 = 0; } while(0);
  1402  0025EA  92BD               	bcf	16317,1,c	;volatile
  1403  0025EC  D20E               	goto	l8285
  1404  0025EE                     l8121:
  1405                           
  1406                           ; BSR set to: 0
  1407                           ;main.c: 329:    init_display();
  1408  0025EE  EC90  F025         	call	_init_display	;wreg free
  1409                           
  1410                           ; BSR set to: 61
  1411                           ;main.c: 330:    eaDogM_WriteCommand(0b00001100);
  1412  0025F2  0E0C               	movlw	12
  1413  0025F4  6EE6               	movwf	postinc1,c
  1414  0025F6  EC0A  F030         	call	_eaDogM_WriteCommand	;wreg free
  1415                           
  1416                           ; BSR set to: 0
  1417                           ;main.c: 332:    V.ui_state = mode;
  1418                           ;stkvar	_mode @ sp[(-1)+0]
  1419  0025FA  0EFF               	movlw	-1
  1420  0025FC  006F FF8C  F09B    	movff	plusw1,_V+1
  1421                           
  1422                           ; BSR set to: 0
  1423                           ;main.c: 333:    V.s_state = SEQ_STATE_INIT;
  1424  002602  6B9A               	clrf	_V& (0+255),b
  1425                           
  1426                           ; BSR set to: 0
  1427                           ;main.c: 362:    sprintf(V.buf, " RVI HOST TESTER");
  1428  002604  0E51               	movlw	STR_1& (0+255)
  1429  002606  6EE6               	movwf	postinc1,c
  1430  002608  0E9A               	movlw	_V& (0+255)
  1431  00260A  0F05               	addlw	5
  1432  00260C  6EE6               	movwf	postinc1,c
  1433  00260E  0E02               	movlw	2
  1434  002610  6EE6               	movwf	postinc1,c
  1435  002612  ECD2  F026         	call	_sprintf	;wreg free
  1436                           
  1437                           ; BSR set to: 0
  1438                           ;main.c: 363:    wait_lcd_done();
  1439  002616  EC99  F02F         	call	_wait_lcd_done	;wreg free
  1440                           
  1441                           ; BSR set to: 0
  1442                           ;main.c: 364:    eaDogM_WriteStringAtPos(0, 0, V.buf);
  1443  00261A  0E9A               	movlw	_V& (0+255)
  1444  00261C  0F05               	addlw	5
  1445  00261E  6EE6               	movwf	postinc1,c
  1446  002620  0E00               	movlw	0
  1447  002622  6EE6               	movwf	postinc1,c
  1448  002624  0E00               	movlw	0
  1449  002626  6EE6               	movwf	postinc1,c
  1450  002628  EC07  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  1451                           
  1452                           ; BSR set to: 59
  1453                           ;main.c: 365:    sprintf(V.buf, " Version %s", "0.72A");
  1454  00262C  0E97               	movlw	STR_3& (0+255)
  1455  00262E  6E46               	movwf	btemp+11,c
  1456  002630  0060  F11B  FFE6   	movff	btemp+11,postinc1
  1457  002636  0E20               	movlw	high __smallconst
  1458  002638  6EE6               	movwf	postinc1,c
  1459  00263A  0E7F               	movlw	STR_2& (0+255)
  1460  00263C  6EE6               	movwf	postinc1,c
  1461  00263E  0E9A               	movlw	_V& (0+255)
  1462  002640  0F05               	addlw	5
  1463  002642  6EE6               	movwf	postinc1,c
  1464  002644  0E04               	movlw	4
  1465  002646  6EE6               	movwf	postinc1,c
  1466  002648  ECD2  F026         	call	_sprintf	;wreg free
  1467                           
  1468                           ; BSR set to: 0
  1469                           ;main.c: 366:    wait_lcd_done();
  1470  00264C  EC99  F02F         	call	_wait_lcd_done	;wreg free
  1471                           
  1472                           ; BSR set to: 0
  1473                           ;main.c: 367:    eaDogM_WriteStringAtPos(1, 0, V.buf);
  1474  002650  0E9A               	movlw	_V& (0+255)
  1475  002652  0F05               	addlw	5
  1476  002654  6EE6               	movwf	postinc1,c
  1477  002656  0E00               	movlw	0
  1478  002658  6EE6               	movwf	postinc1,c
  1479  00265A  0E01               	movlw	1
  1480  00265C  6EE6               	movwf	postinc1,c
  1481  00265E  EC07  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  1482                           
  1483                           ; BSR set to: 59
  1484                           ;main.c: 368:    sprintf(V.buf, " FGB@MCHP FAB4");
  1485  002662  0E62               	movlw	STR_4& (0+255)
  1486  002664  6EE6               	movwf	postinc1,c
  1487  002666  0E9A               	movlw	_V& (0+255)
  1488  002668  0F05               	addlw	5
  1489  00266A  6EE6               	movwf	postinc1,c
  1490  00266C  0E02               	movlw	2
  1491  00266E  6EE6               	movwf	postinc1,c
  1492  002670  ECD2  F026         	call	_sprintf	;wreg free
  1493                           
  1494                           ; BSR set to: 0
  1495                           ;main.c: 369:    wait_lcd_done();
  1496  002674  EC99  F02F         	call	_wait_lcd_done	;wreg free
  1497                           
  1498                           ; BSR set to: 0
  1499                           ;main.c: 370:    eaDogM_WriteStringAtPos(2, 0, V.buf);
  1500  002678  0E9A               	movlw	_V& (0+255)
  1501  00267A  0F05               	addlw	5
  1502  00267C  6EE6               	movwf	postinc1,c
  1503  00267E  0E00               	movlw	0
  1504  002680  6EE6               	movwf	postinc1,c
  1505  002682  0E02               	movlw	2
  1506  002684  6EE6               	movwf	postinc1,c
  1507  002686  EC07  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  1508                           
  1509                           ; BSR set to: 59
  1510                           ;main.c: 372:    WaitMs(3000);
  1511  00268A  0EB8               	movlw	184
  1512  00268C  6EE6               	movwf	postinc1,c
  1513  00268E  0E0B               	movlw	11
  1514  002690  6EE6               	movwf	postinc1,c
  1515  002692  EC5E  F02D         	call	_WaitMs	;wreg free
  1516                           
  1517                           ;main.c: 373:    break;
  1518  002696  D1CD               	goto	l1259
  1519  002698                     l1226:
  1520                           
  1521                           ; BSR set to: 0
  1522                           ;main.c: 377:     V.r_l_state = LINK_STATE_IDLE;
  1523  002698  6B9D               	clrf	(_V+3)& (0+255),b
  1524                           
  1525                           ;main.c: 378:     V.t_l_state = LINK_STATE_IDLE;
  1526  00269A  6B9E               	clrf	(_V+4)& (0+255),b
  1527                           
  1528                           ; BSR set to: 0
  1529                           ;main.c: 379:     V.s_state = SEQ_STATE_RX;
  1530  00269C  0E01               	movlw	1
  1531  00269E  6F9A               	movwf	_V& (0+255),b
  1532                           
  1533                           ;main.c: 380:     if (!V.error && !V.abort) {
  1534  0026A0  51E9               	movf	(_V+79)& (0+255),w,b
  1535  0026A2  A4D8               	btfss	status,2,c
  1536  0026A4  D0DC               	goto	l8221
  1537                           
  1538                           ; BSR set to: 0
  1539  0026A6  51EA               	movf	(_V+80)& (0+255),w,b
  1540  0026A8  A4D8               	btfss	status,2,c
  1541  0026AA  D0D9               	goto	l8221
  1542                           
  1543                           ; BSR set to: 0
  1544                           ;main.c: 381:      sprintf(V.buf, " HOST MODE %ld   #", V.ticks);
  1545  0026AC  0060  F37F  FFE6   	movff	_V+69,postinc1
  1546  0026B2  0060  F383  FFE6   	movff	_V+70,postinc1
  1547  0026B8  0060  F387  FFE6   	movff	_V+71,postinc1
  1548  0026BE  0060  F38B  FFE6   	movff	_V+72,postinc1
  1549  0026C4  0E3E               	movlw	STR_5& (0+255)
  1550  0026C6  6EE6               	movwf	postinc1,c
  1551  0026C8  0E9A               	movlw	_V& (0+255)
  1552  0026CA  0F05               	addlw	5
  1553  0026CC  6EE6               	movwf	postinc1,c
  1554  0026CE  0E06               	movlw	6
  1555  0026D0  6EE6               	movwf	postinc1,c
  1556  0026D2  ECD2  F026         	call	_sprintf	;wreg free
  1557  0026D6                     l8155:
  1558                           
  1559                           ; BSR set to: 0
  1560                           ;main.c: 382:      V.buf[16] = 0;
  1561  0026D6  6BAF               	clrf	(_V+21)& (0+255),b
  1562                           
  1563                           ; BSR set to: 0
  1564                           ;main.c: 383:      wait_lcd_done();
  1565  0026D8  EC99  F02F         	call	_wait_lcd_done	;wreg free
  1566                           
  1567                           ; BSR set to: 0
  1568                           ;main.c: 384:      eaDogM_WriteStringAtPos(2, 0, V.buf);
  1569  0026DC  0E9A               	movlw	_V& (0+255)
  1570  0026DE  0F05               	addlw	5
  1571  0026E0  6EE6               	movwf	postinc1,c
  1572  0026E2  0E00               	movlw	0
  1573  0026E4  6EE6               	movwf	postinc1,c
  1574  0026E6  0E02               	movlw	2
  1575  0026E8  6EE6               	movwf	postinc1,c
  1576  0026EA  EC07  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  1577  0026EE  D0B7               	goto	l8221
  1578  0026F0                     l8161:
  1579                           
  1580                           ; BSR set to: 0
  1581                           ;main.c: 395:     if (r_protocol(&V.r_l_state) == LINK_STATE_DONE) {
  1582  0026F0  0E9A               	movlw	_V& (0+255)
  1583  0026F2  0F03               	addlw	3
  1584  0026F4  6EE6               	movwf	postinc1,c
  1585  0026F6  EC5B  F01B         	call	_r_protocol	;wreg free
  1586  0026FA  0E04               	movlw	4
  1587  0026FC  183B               	xorwf	btemp,w,c
  1588  0026FE  A4D8               	btfss	status,2,c
  1589  002700  D029               	goto	l8179
  1590                           
  1591                           ;main.c: 396:      sprintf(V.buf, " S%dF%d #    ", V.stream, V.function);
  1592  002702  0100               	movlb	0	; () banked
  1593  002704  51E8               	movf	(_V+78)& (0+255),w,b
  1594  002706  6EE6               	movwf	postinc1,c
  1595  002708  0E00               	movlw	0
  1596  00270A  6EE6               	movwf	postinc1,c
  1597  00270C  51E7               	movf	(_V+77)& (0+255),w,b
  1598  00270E  6EE6               	movwf	postinc1,c
  1599  002710  0E00               	movlw	0
  1600  002712  6EE6               	movwf	postinc1,c
  1601  002714  0E71               	movlw	STR_6& (0+255)
  1602  002716  6EE6               	movwf	postinc1,c
  1603  002718  0E9A               	movlw	_V& (0+255)
  1604  00271A  0F05               	addlw	5
  1605  00271C  6EE6               	movwf	postinc1,c
  1606  00271E  0E06               	movlw	6
  1607  002720  6EE6               	movwf	postinc1,c
  1608  002722  ECD2  F026         	call	_sprintf	;wreg free
  1609                           
  1610                           ; BSR set to: 0
  1611                           ;main.c: 397:      V.buf[11] = 0;
  1612  002726  6BAA               	clrf	(_V+16)& (0+255),b
  1613                           
  1614                           ; BSR set to: 0
  1615                           ;main.c: 398:      wait_lcd_done();
  1616  002728  EC99  F02F         	call	_wait_lcd_done	;wreg free
  1617                           
  1618                           ; BSR set to: 0
  1619                           ;main.c: 399:      eaDogM_WriteStringAtPos(0, 0, V.buf);
  1620  00272C  0E9A               	movlw	_V& (0+255)
  1621  00272E  0F05               	addlw	5
  1622  002730  6EE6               	movwf	postinc1,c
  1623  002732  0E00               	movlw	0
  1624  002734  6EE6               	movwf	postinc1,c
  1625  002736  0E00               	movlw	0
  1626  002738  6EE6               	movwf	postinc1,c
  1627  00273A  EC07  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  1628                           
  1629                           ; BSR set to: 59
  1630                           ;main.c: 403:      if (V.wbit) {
  1631  00273E  0100               	movlb	0	; () banked
  1632  002740  A3F0               	btfss	(_V+86)& (0+255),1,b
  1633  002742  D006               	goto	l8177
  1634                           
  1635                           ; BSR set to: 0
  1636                           ;main.c: 404:       V.s_state = SEQ_STATE_TX;
  1637  002744  0E02               	movlw	2
  1638  002746  6F9A               	movwf	_V& (0+255),b
  1639                           
  1640                           ;main.c: 405:       V.failed_send = 0;
  1641  002748  0E87               	movlw	-121
  1642  00274A  17F0               	andwf	(_V+86)& (0+255),f,b
  1643                           
  1644                           ; BSR set to: 0
  1645                           ;main.c: 406:       V.t_l_state = LINK_STATE_IDLE;
  1646  00274C  6B9E               	clrf	(_V+4)& (0+255),b
  1647                           
  1648                           ;main.c: 407:      } else {
  1649  00274E  D002               	goto	l8179
  1650  002750                     l8177:
  1651                           
  1652                           ; BSR set to: 0
  1653                           ;main.c: 408:       V.s_state = SEQ_STATE_TRIGGER;
  1654  002750  0E03               	movlw	3
  1655  002752  6F9A               	movwf	_V& (0+255),b
  1656  002754                     l8179:
  1657                           
  1658                           ;main.c: 411:     if (V.r_l_state == LINK_STATE_ERROR)
  1659  002754  0E06               	movlw	6
  1660  002756  0100               	movlb	0	; () banked
  1661  002758  199D               	xorwf	(_V+3)& (0+255),w,b
  1662  00275A  A4D8               	btfss	status,2,c
  1663  00275C  D080               	goto	l8221
  1664  00275E                     u5220:
  1665                           
  1666                           ; BSR set to: 0
  1667                           ;main.c: 412:      V.s_state = SEQ_STATE_ERROR;
  1668  00275E  0E06               	movlw	6
  1669  002760  6F9A               	movwf	_V& (0+255),b
  1670  002762  D07D               	goto	l8221
  1671  002764                     l8183:
  1672                           
  1673                           ; BSR set to: 0
  1674                           ;main.c: 418:     if (t_protocol(&V.t_l_state) == LINK_STATE_DONE) {
  1675  002764  0E9A               	movlw	_V& (0+255)
  1676  002766  0F04               	addlw	4
  1677  002768  6EE6               	movwf	postinc1,c
  1678  00276A  EC62  F01F         	call	_t_protocol	;wreg free
  1679  00276E  0E04               	movlw	4
  1680  002770  183B               	xorwf	btemp,w,c
  1681  002772  A4D8               	btfss	status,2,c
  1682  002774  D003               	goto	l8187
  1683                           
  1684                           ;main.c: 419:      V.s_state = SEQ_STATE_TRIGGER;
  1685  002776  0E03               	movlw	3
  1686  002778  0100               	movlb	0	; () banked
  1687  00277A  6F9A               	movwf	_V& (0+255),b
  1688  00277C                     l8187:
  1689                           
  1690                           ;main.c: 421:     if (V.t_l_state == LINK_STATE_ERROR)
  1691  00277C  0E06               	movlw	6
  1692  00277E  0100               	movlb	0	; () banked
  1693  002780  199E               	xorwf	(_V+4)& (0+255),w,b
  1694  002782  B4D8               	btfsc	status,2,c
  1695  002784  D7EC               	goto	u5220
  1696  002786  D06B               	goto	l8221
  1697  002788                     l1237:
  1698                           
  1699                           ; BSR set to: 0
  1700                           ;main.c: 425:     if (V.queue) {
  1701  002788  A9F1               	btfss	(_V+87)& (0+255),4,b
  1702  00278A  D01C               	goto	l8201
  1703                           
  1704                           ; BSR set to: 0
  1705  00278C  A4BE               	btfss	16318,2,c	;volatile
  1706  00278E  D002               	goto	u5260
  1707  002790  0E01               	movlw	1
  1708  002792  D001               	goto	u5266
  1709  002794                     u5260:
  1710  002794  0E00               	movlw	0
  1711  002796                     u5266:
  1712  002796  0AFF               	xorlw	255
  1713  002798  6E46               	movwf	btemp+11,c
  1714  00279A  4646               	rlncf	btemp+11,f,c
  1715  00279C  4646               	rlncf	btemp+11,f,c
  1716  00279E  50BE               	movf	16318,w,c	;volatile
  1717  0027A0  1846               	xorwf	btemp+11,w,c
  1718  0027A2  0BFB               	andlw	-5
  1719  0027A4  1846               	xorwf	btemp+11,w,c
  1720  0027A6  6EBE               	movwf	16318,c	;volatile
  1721                           
  1722                           ; BSR set to: 0
  1723                           ;main.c: 427:      V.r_l_state = LINK_STATE_IDLE;
  1724  0027A8  6B9D               	clrf	(_V+3)& (0+255),b
  1725                           
  1726                           ; BSR set to: 0
  1727                           ;main.c: 428:      V.t_l_state = LINK_STATE_IDLE;
  1728  0027AA  6B9E               	clrf	(_V+4)& (0+255),b
  1729                           
  1730                           ; BSR set to: 0
  1731                           ;main.c: 429:      V.s_state = SEQ_STATE_TX;
  1732  0027AC  0E02               	movlw	2
  1733  0027AE  6F9A               	movwf	_V& (0+255),b
  1734                           
  1735                           ; BSR set to: 0
  1736                           ;main.c: 430:      sprintf(V.buf, " OKQ#");
  1737  0027B0  0E91               	movlw	STR_7& (0+255)
  1738  0027B2  6EE6               	movwf	postinc1,c
  1739  0027B4  0E9A               	movlw	_V& (0+255)
  1740  0027B6  0F05               	addlw	5
  1741  0027B8  6EE6               	movwf	postinc1,c
  1742  0027BA  0E02               	movlw	2
  1743  0027BC  6EE6               	movwf	postinc1,c
  1744  0027BE  ECD2  F026         	call	_sprintf	;wreg free
  1745                           
  1746                           ;main.c: 431:     } else {
  1747  0027C2  D00B               	goto	l8205
  1748  0027C4                     l8201:
  1749                           
  1750                           ; BSR set to: 0
  1751                           ;main.c: 432:      V.s_state = SEQ_STATE_DONE;
  1752  0027C4  0E05               	movlw	5
  1753  0027C6  6F9A               	movwf	_V& (0+255),b
  1754                           
  1755                           ; BSR set to: 0
  1756                           ;main.c: 433:      sprintf(V.buf, " OK #");
  1757  0027C8  0E8B               	movlw	STR_8& (0+255)
  1758  0027CA  6EE6               	movwf	postinc1,c
  1759  0027CC  0E9A               	movlw	_V& (0+255)
  1760  0027CE  0F05               	addlw	5
  1761  0027D0  6EE6               	movwf	postinc1,c
  1762  0027D2  0E02               	movlw	2
  1763  0027D4  6EE6               	movwf	postinc1,c
  1764  0027D6  ECD2  F026         	call	_sprintf	;wreg free
  1765  0027DA                     l8205:
  1766                           
  1767                           ; BSR set to: 0
  1768                           ;main.c: 435:     wait_lcd_done();
  1769  0027DA  EC99  F02F         	call	_wait_lcd_done	;wreg free
  1770                           
  1771                           ; BSR set to: 0
  1772                           ;main.c: 436:     eaDogM_WriteStringAtPos(0, 11, V.buf);
  1773  0027DE  0E9A               	movlw	_V& (0+255)
  1774  0027E0  0F05               	addlw	5
  1775  0027E2  6EE6               	movwf	postinc1,c
  1776  0027E4  0E0B               	movlw	11
  1777  0027E6  6EE6               	movwf	postinc1,c
  1778  0027E8  0E00               	movlw	0
  1779  0027EA  6EE6               	movwf	postinc1,c
  1780  0027EC  EC07  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  1781                           
  1782                           ;main.c: 437:     break;
  1783  0027F0  D036               	goto	l8221
  1784  0027F2                     l1242:
  1785                           
  1786                           ; BSR set to: 0
  1787                           ;main.c: 439:     V.s_state = SEQ_STATE_INIT;
  1788  0027F2  6B9A               	clrf	_V& (0+255),b
  1789                           
  1790                           ;main.c: 440:     break;
  1791  0027F4  D034               	goto	l8221
  1792  0027F6                     l1244:
  1793                           
  1794                           ; BSR set to: 0
  1795                           ;main.c: 443:     V.s_state = SEQ_STATE_INIT;
  1796  0027F6  6B9A               	clrf	_V& (0+255),b
  1797                           
  1798                           ; BSR set to: 0
  1799                           ;main.c: 444:     sprintf(V.buf, "E R%d T%d E%d A%d #", V.r_l_state, V.t_l_state, V.erro
      +                          r, V.abort);
  1800  0027F8  51EA               	movf	(_V+80)& (0+255),w,b
  1801  0027FA  6EE6               	movwf	postinc1,c
  1802  0027FC  0E00               	movlw	0
  1803  0027FE  6EE6               	movwf	postinc1,c
  1804  002800  51E9               	movf	(_V+79)& (0+255),w,b
  1805  002802  6EE6               	movwf	postinc1,c
  1806  002804  0E00               	movlw	0
  1807  002806  6EE6               	movwf	postinc1,c
  1808  002808  519E               	movf	(_V+4)& (0+255),w,b
  1809  00280A  6EE6               	movwf	postinc1,c
  1810  00280C  0E00               	movlw	0
  1811  00280E  6EE6               	movwf	postinc1,c
  1812  002810  519D               	movf	(_V+3)& (0+255),w,b
  1813  002812  6EE6               	movwf	postinc1,c
  1814  002814  0E00               	movlw	0
  1815  002816  6EE6               	movwf	postinc1,c
  1816  002818  0E2A               	movlw	STR_9& (0+255)
  1817  00281A  6EE6               	movwf	postinc1,c
  1818  00281C  0E9A               	movlw	_V& (0+255)
  1819  00281E  0F05               	addlw	5
  1820  002820  6EE6               	movwf	postinc1,c
  1821  002822  0E0A               	movlw	10
  1822  002824  6EE6               	movwf	postinc1,c
  1823  002826  ECD2  F026         	call	_sprintf	;wreg free
  1824  00282A  D755               	goto	l8155
  1825  00282C                     l8219:
  1826                           
  1827                           ; BSR set to: 0
  1828  00282C  519A               	movf	_V& (0+255),w,b
  1829  00282E  6E45               	movwf	btemp+10,c
  1830  002830  6A46               	clrf	btemp+11,c
  1831                           
  1832                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1833                           ; Switch size 1, requested type "simple"
  1834                           ; Number of cases is 1, Range of values is 0 to 0
  1835                           ; switch strategies available:
  1836                           ; Name         Instructions Cycles
  1837                           ; simple_byte            4     3 (average)
  1838                           ;	Chosen strategy is simple_byte
  1839  002832  5046               	movf	btemp+11,w,c
  1840  002834  0A00               	xorlw	0	; case 0
  1841  002836  A4D8               	btfss	status,2,c
  1842  002838  D7DE               	goto	l1244
  1843                           
  1844                           ; BSR set to: 0
  1845                           ; Switch size 1, requested type "simple"
  1846                           ; Number of cases is 6, Range of values is 0 to 6
  1847                           ; switch strategies available:
  1848                           ; Name         Instructions Cycles
  1849                           ; simple_byte           19    10 (average)
  1850                           ;	Chosen strategy is simple_byte
  1851  00283A  5045               	movf	btemp+10,w,c
  1852  00283C  0A00               	xorlw	0	; case 0
  1853  00283E  B4D8               	btfsc	status,2,c
  1854  002840  D72B               	goto	l1226
  1855  002842  0A01               	xorlw	1	; case 1
  1856  002844  B4D8               	btfsc	status,2,c
  1857  002846  D754               	goto	l8161
  1858  002848  0A03               	xorlw	3	; case 2
  1859  00284A  B4D8               	btfsc	status,2,c
  1860  00284C  D78B               	goto	l8183
  1861  00284E  0A01               	xorlw	1	; case 3
  1862  002850  B4D8               	btfsc	status,2,c
  1863  002852  D79A               	goto	l1237
  1864  002854  0A06               	xorlw	6	; case 5
  1865  002856  B4D8               	btfsc	status,2,c
  1866  002858  D7CC               	goto	l1242
  1867  00285A  0A03               	xorlw	3	; case 6
  1868  00285C  D7CC               	goto	l1244
  1869  00285E                     l8221:
  1870                           
  1871                           ;main.c: 450:    if (!V.error && !V.abort) {
  1872  00285E  0100               	movlb	0	; () banked
  1873  002860  51E9               	movf	(_V+79)& (0+255),w,b
  1874  002862  A4D8               	btfss	status,2,c
  1875  002864  D0E6               	goto	l1259
  1876                           
  1877                           ; BSR set to: 0
  1878  002866  51EA               	movf	(_V+80)& (0+255),w,b
  1879  002868  A4D8               	btfss	status,2,c
  1880  00286A  D0E3               	goto	l1259
  1881                           
  1882                           ; BSR set to: 0
  1883                           ;main.c: 451:     sprintf(V.buf, " HOST MODE %ld   #", V.ticks);
  1884  00286C  0060  F37F  FFE6   	movff	_V+69,postinc1
  1885  002872  0060  F383  FFE6   	movff	_V+70,postinc1
  1886  002878  0060  F387  FFE6   	movff	_V+71,postinc1
  1887  00287E  0060  F38B  FFE6   	movff	_V+72,postinc1
  1888  002884  0E3E               	movlw	STR_5& (0+255)
  1889  002886  6EE6               	movwf	postinc1,c
  1890  002888  0E9A               	movlw	_V& (0+255)
  1891  00288A  0F05               	addlw	5
  1892  00288C  6EE6               	movwf	postinc1,c
  1893  00288E  0E06               	movlw	6
  1894  002890  6EE6               	movwf	postinc1,c
  1895  002892  ECD2  F026         	call	_sprintf	;wreg free
  1896  002896                     l8227:
  1897                           
  1898                           ; BSR set to: 0
  1899                           ;main.c: 452:     V.buf[16] = 0;
  1900  002896  6BAF               	clrf	(_V+21)& (0+255),b
  1901                           
  1902                           ; BSR set to: 0
  1903                           ;main.c: 453:     wait_lcd_done();
  1904  002898  EC99  F02F         	call	_wait_lcd_done	;wreg free
  1905                           
  1906                           ; BSR set to: 0
  1907                           ;main.c: 454:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  1908  00289C  0E9A               	movlw	_V& (0+255)
  1909  00289E  0F05               	addlw	5
  1910  0028A0  6EE6               	movwf	postinc1,c
  1911  0028A2  0E00               	movlw	0
  1912  0028A4  6EE6               	movwf	postinc1,c
  1913  0028A6  0E02               	movlw	2
  1914  0028A8  6EE6               	movwf	postinc1,c
  1915  0028AA  EC07  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  1916  0028AE  D0C1               	goto	l1259
  1917  0028B0                     l1248:
  1918                           
  1919                           ; BSR set to: 0
  1920                           ;main.c: 460:     V.m_l_state = LINK_STATE_IDLE;
  1921  0028B0  6B9C               	clrf	(_V+2)& (0+255),b
  1922                           
  1923                           ; BSR set to: 0
  1924                           ;main.c: 461:     V.s_state = SEQ_STATE_RX;
  1925  0028B2  0E01               	movlw	1
  1926  0028B4  6F9A               	movwf	_V& (0+255),b
  1927                           
  1928                           ; BSR set to: 0
  1929                           ;main.c: 462:     V.uart = 0;
  1930  0028B6  9FF1               	bcf	(_V+87)& (0+255),7,b
  1931                           
  1932                           ; BSR set to: 0
  1933                           ;main.c: 463:     sprintf(V.buf, " LOG MODE %ld     #",V.ticks);
  1934  0028B8  0060  F37F  FFE6   	movff	_V+69,postinc1
  1935  0028BE  0060  F383  FFE6   	movff	_V+70,postinc1
  1936  0028C4  0060  F387  FFE6   	movff	_V+71,postinc1
  1937  0028CA  0060  F38B  FFE6   	movff	_V+72,postinc1
  1938  0028D0  0E16               	movlw	STR_11& (0+255)
  1939  0028D2  6EE6               	movwf	postinc1,c
  1940  0028D4  0E9A               	movlw	_V& (0+255)
  1941  0028D6  0F05               	addlw	5
  1942  0028D8  6EE6               	movwf	postinc1,c
  1943  0028DA  0E06               	movlw	6
  1944  0028DC  6EE6               	movwf	postinc1,c
  1945  0028DE  ECD2  F026         	call	_sprintf	;wreg free
  1946                           
  1947                           ; BSR set to: 0
  1948                           ;main.c: 464:     V.buf[16] = 0;
  1949  0028E2  6BAF               	clrf	(_V+21)& (0+255),b
  1950                           
  1951                           ; BSR set to: 0
  1952                           ;main.c: 465:     wait_lcd_done();
  1953  0028E4  EC99  F02F         	call	_wait_lcd_done	;wreg free
  1954                           
  1955                           ; BSR set to: 0
  1956                           ;main.c: 466:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  1957  0028E8  0E9A               	movlw	_V& (0+255)
  1958  0028EA  0F05               	addlw	5
  1959  0028EC  6EE6               	movwf	postinc1,c
  1960  0028EE  0E00               	movlw	0
  1961  0028F0  6EE6               	movwf	postinc1,c
  1962  0028F2  0E02               	movlw	2
  1963  0028F4  6EE6               	movwf	postinc1,c
  1964  0028F6  EC07  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  1965                           
  1966                           ;main.c: 467:     break;
  1967  0028FA  D06F               	goto	l8275
  1968  0028FC                     l8245:
  1969                           
  1970                           ; BSR set to: 0
  1971                           ;main.c: 472:     if (m_protocol(&V.m_l_state) == LINK_STATE_DONE) {
  1972  0028FC  0E9A               	movlw	_V& (0+255)
  1973  0028FE  0F02               	addlw	2
  1974  002900  6EE6               	movwf	postinc1,c
  1975  002902  EC54  F010         	call	_m_protocol	;wreg free
  1976  002906  0E04               	movlw	4
  1977  002908  183B               	xorwf	btemp,w,c
  1978  00290A  A4D8               	btfss	status,2,c
  1979  00290C  D02B               	goto	l8259
  1980                           
  1981                           ;main.c: 473:      V.ticks++;
  1982  00290E  0E01               	movlw	1
  1983  002910  0100               	movlb	0	; () banked
  1984  002912  27DF               	addwf	(_V+69)& (0+255),f,b
  1985  002914  0E00               	movlw	0
  1986  002916  23E0               	addwfc	(_V+70)& (0+255),f,b
  1987  002918  23E1               	addwfc	(_V+71)& (0+255),f,b
  1988  00291A  23E2               	addwfc	(_V+72)& (0+255),f,b
  1989                           
  1990                           ; BSR set to: 0
  1991                           ;main.c: 474:      sprintf(V.buf, " S%dF%d #    ", V.stream, V.function);
  1992  00291C  51E8               	movf	(_V+78)& (0+255),w,b
  1993  00291E  6EE6               	movwf	postinc1,c
  1994  002920  0E00               	movlw	0
  1995  002922  6EE6               	movwf	postinc1,c
  1996  002924  51E7               	movf	(_V+77)& (0+255),w,b
  1997  002926  6EE6               	movwf	postinc1,c
  1998  002928  0E00               	movlw	0
  1999  00292A  6EE6               	movwf	postinc1,c
  2000  00292C  0E71               	movlw	STR_6& (0+255)
  2001  00292E  6EE6               	movwf	postinc1,c
  2002  002930  0E9A               	movlw	_V& (0+255)
  2003  002932  0F05               	addlw	5
  2004  002934  6EE6               	movwf	postinc1,c
  2005  002936  0E06               	movlw	6
  2006  002938  6EE6               	movwf	postinc1,c
  2007  00293A  ECD2  F026         	call	_sprintf	;wreg free
  2008                           
  2009                           ; BSR set to: 0
  2010                           ;main.c: 475:      V.buf[11] = 0;
  2011  00293E  6BAA               	clrf	(_V+16)& (0+255),b
  2012                           
  2013                           ; BSR set to: 0
  2014                           ;main.c: 476:      wait_lcd_done();
  2015  002940  EC99  F02F         	call	_wait_lcd_done	;wreg free
  2016                           
  2017                           ; BSR set to: 0
  2018                           ;main.c: 477:      eaDogM_WriteStringAtPos(V.uart, 0, V.buf);
  2019  002944  0E9A               	movlw	_V& (0+255)
  2020  002946  0F05               	addlw	5
  2021  002948  6EE6               	movwf	postinc1,c
  2022  00294A  0E00               	movlw	0
  2023  00294C  6EE6               	movwf	postinc1,c
  2024  00294E  AFF1               	btfss	(_V+87)& (0+255),7,b
  2025  002950  D002               	goto	u5300
  2026  002952  0E01               	movlw	1
  2027  002954  D001               	goto	u5306
  2028  002956                     u5300:
  2029  002956  0E00               	movlw	0
  2030  002958                     u5306:
  2031  002958  6EE6               	movwf	postinc1,c
  2032  00295A  EC07  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  2033                           
  2034                           ; BSR set to: 59
  2035                           ;main.c: 478:      V.s_state = SEQ_STATE_TRIGGER;
  2036  00295E  0E03               	movlw	3
  2037  002960  0100               	movlb	0	; () banked
  2038  002962  6F9A               	movwf	_V& (0+255),b
  2039  002964                     l8259:
  2040                           
  2041                           ;main.c: 480:     if (V.m_l_state == LINK_STATE_ERROR)
  2042  002964  0E06               	movlw	6
  2043  002966  0100               	movlb	0	; () banked
  2044  002968  199C               	xorwf	(_V+2)& (0+255),w,b
  2045  00296A  A4D8               	btfss	status,2,c
  2046  00296C  D036               	goto	l8275
  2047                           
  2048                           ; BSR set to: 0
  2049                           ;main.c: 481:      V.s_state = SEQ_STATE_ERROR;
  2050  00296E  0E06               	movlw	6
  2051  002970  6F9A               	movwf	_V& (0+255),b
  2052  002972  D033               	goto	l8275
  2053  002974                     l8263:
  2054                           
  2055                           ; BSR set to: 0
  2056                           ;main.c: 484:     V.s_state = SEQ_STATE_DONE;
  2057  002974  0E05               	movlw	5
  2058  002976  6F9A               	movwf	_V& (0+255),b
  2059                           
  2060                           ; BSR set to: 0
  2061                           ;main.c: 485:     sprintf(V.buf, " OK #");
  2062  002978  0E8B               	movlw	STR_8& (0+255)
  2063  00297A  6EE6               	movwf	postinc1,c
  2064  00297C  0E9A               	movlw	_V& (0+255)
  2065  00297E  0F05               	addlw	5
  2066  002980  6EE6               	movwf	postinc1,c
  2067  002982  0E02               	movlw	2
  2068  002984  6EE6               	movwf	postinc1,c
  2069  002986  ECD2  F026         	call	_sprintf	;wreg free
  2070                           
  2071                           ; BSR set to: 0
  2072                           ;main.c: 486:     wait_lcd_done();
  2073  00298A  EC99  F02F         	call	_wait_lcd_done	;wreg free
  2074                           
  2075                           ; BSR set to: 0
  2076                           ;main.c: 487:     eaDogM_WriteStringAtPos(V.uart, 11, V.buf);
  2077  00298E  0E9A               	movlw	_V& (0+255)
  2078  002990  0F05               	addlw	5
  2079  002992  6EE6               	movwf	postinc1,c
  2080  002994  0E0B               	movlw	11
  2081  002996  6EE6               	movwf	postinc1,c
  2082  002998  AFF1               	btfss	(_V+87)& (0+255),7,b
  2083  00299A  D002               	goto	u5320
  2084  00299C  0E01               	movlw	1
  2085  00299E  D001               	goto	u5326
  2086  0029A0                     u5320:
  2087  0029A0  0E00               	movlw	0
  2088  0029A2                     u5326:
  2089  0029A2  6EE6               	movwf	postinc1,c
  2090  0029A4  EC07  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  2091                           
  2092                           ;main.c: 488:     break;
  2093  0029A8  D018               	goto	l8275
  2094  0029AA                     l1254:
  2095                           
  2096                           ; BSR set to: 0
  2097                           ;main.c: 490:     V.s_state = SEQ_STATE_INIT;
  2098  0029AA  6B9A               	clrf	_V& (0+255),b
  2099                           
  2100                           ;main.c: 491:     break;
  2101  0029AC  D016               	goto	l8275
  2102  0029AE                     l8273:
  2103                           
  2104                           ; BSR set to: 0
  2105  0029AE  519A               	movf	_V& (0+255),w,b
  2106  0029B0  6E45               	movwf	btemp+10,c
  2107  0029B2  6A46               	clrf	btemp+11,c
  2108                           
  2109                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2110                           ; Switch size 1, requested type "simple"
  2111                           ; Number of cases is 1, Range of values is 0 to 0
  2112                           ; switch strategies available:
  2113                           ; Name         Instructions Cycles
  2114                           ; simple_byte            4     3 (average)
  2115                           ;	Chosen strategy is simple_byte
  2116  0029B4  5046               	movf	btemp+11,w,c
  2117  0029B6  0A00               	xorlw	0	; case 0
  2118  0029B8  A4D8               	btfss	status,2,c
  2119  0029BA  D7F7               	goto	l1254
  2120                           
  2121                           ; BSR set to: 0
  2122                           ; Switch size 1, requested type "simple"
  2123                           ; Number of cases is 5, Range of values is 0 to 6
  2124                           ; switch strategies available:
  2125                           ; Name         Instructions Cycles
  2126                           ; simple_byte           16     9 (average)
  2127                           ;	Chosen strategy is simple_byte
  2128  0029BC  5045               	movf	btemp+10,w,c
  2129  0029BE  0A00               	xorlw	0	; case 0
  2130  0029C0  B4D8               	btfsc	status,2,c
  2131  0029C2  D776               	goto	l1248
  2132  0029C4  0A01               	xorlw	1	; case 1
  2133  0029C6  B4D8               	btfsc	status,2,c
  2134  0029C8  D799               	goto	l8245
  2135  0029CA  0A02               	xorlw	2	; case 3
  2136  0029CC  B4D8               	btfsc	status,2,c
  2137  0029CE  D7D2               	goto	l8263
  2138  0029D0  0A06               	xorlw	6	; case 5
  2139  0029D2  B4D8               	btfsc	status,2,c
  2140  0029D4  D7EA               	goto	l1254
  2141  0029D6  0A03               	xorlw	3	; case 6
  2142  0029D8  D7E8               	goto	l1254
  2143  0029DA                     l8275:
  2144                           
  2145                           ;main.c: 497:    sprintf(V.buf, " LOG MODE %ld     #",V.ticks);
  2146  0029DA  0060  F37F  FFE6   	movff	_V+69,postinc1
  2147  0029E0  0060  F383  FFE6   	movff	_V+70,postinc1
  2148  0029E6  0060  F387  FFE6   	movff	_V+71,postinc1
  2149  0029EC  0060  F38B  FFE6   	movff	_V+72,postinc1
  2150  0029F2  0E16               	movlw	STR_11& (0+255)
  2151  0029F4  6EE6               	movwf	postinc1,c
  2152  0029F6  0E9A               	movlw	_V& (0+255)
  2153  0029F8  0F05               	addlw	5
  2154  0029FA  6EE6               	movwf	postinc1,c
  2155  0029FC  0E06               	movlw	6
  2156  0029FE  6EE6               	movwf	postinc1,c
  2157  002A00  ECD2  F026         	call	_sprintf	;wreg free
  2158  002A04  D748               	goto	l8227
  2159  002A06                     l1258:
  2160                           
  2161                           ; BSR set to: 0
  2162                           ;main.c: 504:    V.ui_state = UI_STATE_INIT;
  2163  002A06  6B9B               	clrf	(_V+1)& (0+255),b
  2164                           
  2165                           ;main.c: 505:    break;
  2166  002A08  D014               	goto	l1259
  2167  002A0A                     l8285:
  2168  002A0A  0100               	movlb	0	; () banked
  2169  002A0C  519B               	movf	(_V+1)& (0+255),w,b
  2170  002A0E  6E45               	movwf	btemp+10,c
  2171  002A10  6A46               	clrf	btemp+11,c
  2172                           
  2173                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2174                           ; Switch size 1, requested type "simple"
  2175                           ; Number of cases is 1, Range of values is 0 to 0
  2176                           ; switch strategies available:
  2177                           ; Name         Instructions Cycles
  2178                           ; simple_byte            4     3 (average)
  2179                           ;	Chosen strategy is simple_byte
  2180  002A12  5046               	movf	btemp+11,w,c
  2181  002A14  0A00               	xorlw	0	; case 0
  2182  002A16  A4D8               	btfss	status,2,c
  2183  002A18  D7F6               	goto	l1258
  2184                           
  2185                           ; BSR set to: 0
  2186                           ; Switch size 1, requested type "simple"
  2187                           ; Number of cases is 4, Range of values is 0 to 4
  2188                           ; switch strategies available:
  2189                           ; Name         Instructions Cycles
  2190                           ; simple_byte           13     7 (average)
  2191                           ;	Chosen strategy is simple_byte
  2192  002A1A  5045               	movf	btemp+10,w,c
  2193  002A1C  0A00               	xorlw	0	; case 0
  2194  002A1E  B4D8               	btfsc	status,2,c
  2195  002A20  D5E6               	goto	l8121
  2196  002A22  0A01               	xorlw	1	; case 1
  2197  002A24  B4D8               	btfsc	status,2,c
  2198  002A26  D702               	goto	l8219
  2199  002A28  0A02               	xorlw	2	; case 3
  2200  002A2A  B4D8               	btfsc	status,2,c
  2201  002A2C  D7C0               	goto	l8273
  2202  002A2E  0A07               	xorlw	7	; case 4
  2203  002A30  D7EA               	goto	l1258
  2204  002A32                     l1259:
  2205  002A32  82BE               	bsf	16318,1,c	;volatile
  2206                           
  2207                           ;main.c: 508:   sprintf(V.buf, " R%d T%d FR%d FS%d #", V.r_l_state, V.t_l_state, V.faile
      +                          d_receive, V.failed_send);
  2208  002A34  0100               	movlb	0	; () banked
  2209  002A36  31F0               	rrcf	(_V+86)& (0+255),w,b
  2210  002A38  32E8               	rrcf	wreg,f,c
  2211  002A3A  32E8               	rrcf	wreg,f,c
  2212  002A3C  0B0F               	andlw	15
  2213  002A3E  6EE6               	movwf	postinc1,c
  2214  002A40  0E00               	movlw	0
  2215  002A42  6EE6               	movwf	postinc1,c
  2216  002A44  51F1               	movf	(_V+87)& (0+255),w,b
  2217  002A46  0B0F               	andlw	15
  2218  002A48  6EE6               	movwf	postinc1,c
  2219  002A4A  0E00               	movlw	0
  2220  002A4C  6EE6               	movwf	postinc1,c
  2221  002A4E  519E               	movf	(_V+4)& (0+255),w,b
  2222  002A50  6EE6               	movwf	postinc1,c
  2223  002A52  0E00               	movlw	0
  2224  002A54  6EE6               	movwf	postinc1,c
  2225  002A56  519D               	movf	(_V+3)& (0+255),w,b
  2226  002A58  6EE6               	movwf	postinc1,c
  2227  002A5A  0E00               	movlw	0
  2228  002A5C  6EE6               	movwf	postinc1,c
  2229  002A5E  0E01               	movlw	STR_15& (0+255)
  2230  002A60  6EE6               	movwf	postinc1,c
  2231  002A62  0E9A               	movlw	_V& (0+255)
  2232  002A64  0F05               	addlw	5
  2233  002A66  6EE6               	movwf	postinc1,c
  2234  002A68  0E0A               	movlw	10
  2235  002A6A  6EE6               	movwf	postinc1,c
  2236  002A6C  ECD2  F026         	call	_sprintf	;wreg free
  2237                           
  2238                           ; BSR set to: 0
  2239                           ;main.c: 509:   V.buf[16] = 0;
  2240  002A70  6BAF               	clrf	(_V+21)& (0+255),b
  2241                           
  2242                           ; BSR set to: 0
  2243                           ;main.c: 510:   wait_lcd_done();
  2244  002A72  EC99  F02F         	call	_wait_lcd_done	;wreg free
  2245                           
  2246                           ; BSR set to: 0
  2247                           ;main.c: 511:   if (mode != UI_STATE_LOG)
  2248                           ;stkvar	_mode @ sp[(-1)+0]
  2249  002A76  0EFF               	movlw	-1
  2250  002A78  006F FF8C  F03B    	movff	plusw1,btemp
  2251  002A7E  0E03               	movlw	3
  2252  002A80  183B               	xorwf	btemp,w,c
  2253  002A82  B4D8               	btfsc	status,2,c
  2254  002A84  D009               	goto	l8297
  2255                           
  2256                           ; BSR set to: 0
  2257                           ;main.c: 512:    eaDogM_WriteStringAtPos(1, 0, V.buf);
  2258  002A86  0E9A               	movlw	_V& (0+255)
  2259  002A88  0F05               	addlw	5
  2260  002A8A  6EE6               	movwf	postinc1,c
  2261  002A8C  0E00               	movlw	0
  2262  002A8E  6EE6               	movwf	postinc1,c
  2263  002A90  0E01               	movlw	1
  2264  002A92  6EE6               	movwf	postinc1,c
  2265  002A94  EC07  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  2266  002A98                     l8297:
  2267  002A98  92BE               	bcf	16318,1,c	;volatile
  2268  002A9A  D7B7               	goto	l8285
  2269  002A9C                     __end_of_main:
  2270                           	opt callstack 0
  2271                           
  2272 ;; *************** function _t_protocol *****************
  2273 ;; Defined at:
  2274 ;;		line 312 in file "gemsecs.c"
  2275 ;; Parameters:    Size  Location     Type
  2276 ;;  t_link          1  [STACK] PTR enum E16163
  2277 ;;		 -> V(88), 
  2278 ;; Auto vars:     Size  Location     Type
  2279 ;;  rxData          1  [STACK] unsigned char 
  2280 ;; Return value:  Size  Location     Type
  2281 ;;                  1  [STACK] enum E16901
  2282 ;; Registers used:
  2283 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2284 ;; Tracked objects:
  2285 ;;		On entry : 0/0
  2286 ;;		On exit  : 0/0
  2287 ;;		Unchanged: 0/0
  2288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2293 ;;Total ram usage:        0 bytes
  2294 ;; Hardware stack levels used:    1
  2295 ;; Hardware stack levels required when called:    5
  2296 ;; This function calls:
  2297 ;;		_StartTimer
  2298 ;;		_TimerDone
  2299 ;;		_UART1_Read
  2300 ;;		_UART1_Write
  2301 ;;		_UART1_is_rx_ready
  2302 ;;		_UART1_put_buffer
  2303 ;;		_secs_II_message
  2304 ;;		_secs_send
  2305 ;; This function is called by:
  2306 ;;		_main
  2307 ;; This function uses a reentrant model
  2308 ;;
  2309                           
  2310                           	psect	text1
  2311  003EC4                     __ptext1:
  2312                           	opt callstack 0
  2313  003EC4                     _t_protocol:
  2314                           	opt callstack 0
  2315                           
  2316                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2317  003EC4  52E6               	movf	postinc1,f,c
  2318                           
  2319                           ;gemsecs.c: 312: LINK_STATES t_protocol(LINK_STATES * t_link);gemsecs.c: 313: {;gemsecs.
      +                          c: 314:  uint8_t rxData;;gemsecs.c: 315:  static uint8_t retry, requeue = 0;;gemsecs.c: 
      +                          316:  static response_type block;;gemsecs.c: 318:  switch (*t_link) {
  2320                           
  2321                           ;incstack = 0
  2322  003EC6  D107               	goto	l8089
  2323  003EC8                     l1630:
  2324                           
  2325                           ;gemsecs.c: 320:   V.error = LINK_ERROR_NONE;
  2326  003EC8  0100               	movlb	0	; () banked
  2327  003ECA  6BE9               	clrf	(_V+79)& (0+255),b
  2328                           
  2329                           ; BSR set to: 0
  2330                           ;gemsecs.c: 321:   retry = 3;
  2331  003ECC  0E03               	movlw	3
  2332  003ECE  6E2B               	movwf	t_protocol@retry,c
  2333                           
  2334                           ; BSR set to: 0
  2335                           ;gemsecs.c: 322:   UART1_Write(0x05);
  2336  003ED0  0E05               	movlw	5
  2337  003ED2  6EE6               	movwf	postinc1,c
  2338  003ED4  EC3B  F02C         	call	_UART1_Write	;wreg free
  2339                           
  2340                           ; BSR set to: 57
  2341                           ;gemsecs.c: 323:   StartTimer(TMR_T2, 2000);
  2342  003ED8  0ED0               	movlw	208
  2343  003EDA  6EE6               	movwf	postinc1,c
  2344  003EDC  0E07               	movlw	7
  2345  003EDE  6EE6               	movwf	postinc1,c
  2346  003EE0  0E02               	movlw	2
  2347  003EE2  6EE6               	movwf	postinc1,c
  2348  003EE4  ECB7  F02C         	call	_StartTimer	;wreg free
  2349                           
  2350                           ;gemsecs.c: 324:   *t_link = LINK_STATE_ENQ;
  2351                           ;stkvar	_t_link @ sp[(-1)+-1]
  2352  003EE8  0EFE               	movlw	-2
  2353  003EEA  50E3               	movf	plusw1,w,c
  2354  003EEC  6ED9               	movwf	fsr2l,c
  2355  003EEE  6ADA               	clrf	fsr2h,c
  2356  003EF0  0E01               	movlw	1
  2357  003EF2  D0EF               	goto	L5
  2358  003EF4                     l8005:
  2359                           
  2360                           ;gemsecs.c: 331:   if (TimerDone(TMR_T2)) {
  2361  003EF4  0E02               	movlw	2
  2362  003EF6  6EE6               	movwf	postinc1,c
  2363  003EF8  EC15  F02F         	call	_TimerDone	;wreg free
  2364  003EFC  503B               	movf	btemp,w,c
  2365  003EFE  B4D8               	btfsc	status,2,c
  2366  003F00  D01A               	goto	l8015
  2367                           
  2368                           ;gemsecs.c: 332:    if (!retry--) {
  2369  003F02  062B               	decf	t_protocol@retry,f,c
  2370  003F04  282B               	incf	t_protocol@retry,w,c
  2371  003F06  A4D8               	btfss	status,2,c
  2372  003F08  D00D               	goto	l8013
  2373                           
  2374                           ;gemsecs.c: 333:     V.error = LINK_ERROR_T2;
  2375  003F0A  0E02               	movlw	2
  2376  003F0C  0100               	movlb	0	; () banked
  2377  003F0E  6FE9               	movwf	(_V+79)& (0+255),b
  2378                           
  2379                           ;gemsecs.c: 334:     V.failed_send = 1;
  2380  003F10  51F0               	movf	(_V+86)& (0+255),w,b
  2381  003F12  0B87               	andlw	-121
  2382  003F14  0908               	iorlw	8
  2383  003F16  6FF0               	movwf	(_V+86)& (0+255),b
  2384                           
  2385                           ; BSR set to: 0
  2386                           ;gemsecs.c: 335:     *t_link = LINK_STATE_NAK;
  2387                           ;stkvar	_t_link @ sp[(-1)+-1]
  2388  003F18  0EFE               	movlw	-2
  2389  003F1A  50E3               	movf	plusw1,w,c
  2390  003F1C  6ED9               	movwf	fsr2l,c
  2391  003F1E  6ADA               	clrf	fsr2h,c
  2392  003F20  0E05               	movlw	5
  2393  003F22  D0D7               	goto	L5
  2394  003F24                     l8013:
  2395                           
  2396                           ;gemsecs.c: 337:     StartTimer(TMR_T2, 2000);
  2397  003F24  0ED0               	movlw	208
  2398  003F26  6EE6               	movwf	postinc1,c
  2399  003F28  0E07               	movlw	7
  2400  003F2A  6EE6               	movwf	postinc1,c
  2401  003F2C  0E02               	movlw	2
  2402  003F2E  6EE6               	movwf	postinc1,c
  2403  003F30  ECB7  F02C         	call	_StartTimer	;wreg free
  2404  003F34  D0F1               	goto	l8091
  2405  003F36                     l8015:
  2406                           
  2407                           ;gemsecs.c: 340:    if (UART1_is_rx_ready()) {
  2408  003F36  EC4F  F030         	call	_UART1_is_rx_ready	;wreg free
  2409  003F3A  503B               	movf	btemp,w,c
  2410  003F3C  B4D8               	btfsc	status,2,c
  2411  003F3E  D0EC               	goto	l8091
  2412                           
  2413                           ;gemsecs.c: 341:     rxData = UART1_Read();
  2414  003F40  EC79  F02C         	call	_UART1_Read	;wreg free
  2415                           
  2416                           ;stkvar	_rxData @ sp[(-1)+0]
  2417  003F44  0EFF               	movlw	-1
  2418  003F46  0060  F0EF  FFE3   	movff	btemp,plusw1
  2419                           
  2420                           ; BSR set to: 57
  2421                           ;gemsecs.c: 342:     if (rxData == 0x04) {
  2422                           ;stkvar	_rxData @ sp[(-1)+0]
  2423  003F4C  0EFF               	movlw	-1
  2424  003F4E  006F FF8C  F03B    	movff	plusw1,btemp
  2425  003F54  0E04               	movlw	4
  2426  003F56  183B               	xorwf	btemp,w,c
  2427  003F58  A4D8               	btfss	status,2,c
  2428  003F5A  D00E               	goto	l8025
  2429                           
  2430                           ; BSR set to: 57
  2431                           ;gemsecs.c: 343:      StartTimer(TMR_T3, 5000);
  2432  003F5C  0E88               	movlw	136
  2433  003F5E  6EE6               	movwf	postinc1,c
  2434  003F60  0E13               	movlw	19
  2435  003F62  6EE6               	movwf	postinc1,c
  2436  003F64  0E03               	movlw	3
  2437  003F66  6EE6               	movwf	postinc1,c
  2438  003F68  ECB7  F02C         	call	_StartTimer	;wreg free
  2439                           
  2440                           ;gemsecs.c: 344:      *t_link = LINK_STATE_EOT;
  2441                           ;stkvar	_t_link @ sp[(-1)+-1]
  2442  003F6C  0EFE               	movlw	-2
  2443  003F6E  50E3               	movf	plusw1,w,c
  2444  003F70  6ED9               	movwf	fsr2l,c
  2445  003F72  6ADA               	clrf	fsr2h,c
  2446  003F74  0E02               	movlw	2
  2447  003F76  6EDF               	movwf	indf2,c
  2448  003F78                     l8025:
  2449                           
  2450                           ;gemsecs.c: 346:     if (rxData == 0x05) {
  2451                           ;stkvar	_rxData @ sp[(-1)+0]
  2452  003F78  0EFF               	movlw	-1
  2453  003F7A  006F FF8C  F03B    	movff	plusw1,btemp
  2454  003F80  0E05               	movlw	5
  2455  003F82  183B               	xorwf	btemp,w,c
  2456  003F84  A4D8               	btfss	status,2,c
  2457  003F86  D0C8               	goto	l8091
  2458                           
  2459                           ;gemsecs.c: 347:      UART1_put_buffer(0x04);
  2460  003F88  0E04               	movlw	4
  2461  003F8A  6EE6               	movwf	postinc1,c
  2462  003F8C  EC49  F02D         	call	_UART1_put_buffer	;wreg free
  2463  003F90                     l8029:
  2464                           
  2465                           ;gemsecs.c: 348:      *t_link = LINK_STATE_DONE;
  2466                           ;stkvar	_t_link @ sp[(-1)+-1]
  2467  003F90  0EFE               	movlw	-2
  2468  003F92  50E3               	movf	plusw1,w,c
  2469  003F94  6ED9               	movwf	fsr2l,c
  2470  003F96  6ADA               	clrf	fsr2h,c
  2471  003F98  0E04               	movlw	4
  2472  003F9A  D09B               	goto	L5
  2473  003F9C                     l8031:
  2474                           
  2475                           ;gemsecs.c: 354:   if (!requeue)
  2476  003F9C  502A               	movf	t_protocol@requeue,w,c
  2477  003F9E  A4D8               	btfss	status,2,c
  2478  003FA0  D010               	goto	l8035
  2479                           
  2480                           ;gemsecs.c: 355:    block = secs_II_message(V.stream, V.function);
  2481  003FA2  0100               	movlb	0	; () banked
  2482  003FA4  51E8               	movf	(_V+78)& (0+255),w,b
  2483  003FA6  6EE6               	movwf	postinc1,c
  2484  003FA8  51E7               	movf	(_V+77)& (0+255),w,b
  2485  003FAA  6EE6               	movwf	postinc1,c
  2486  003FAC  EC95  F020         	call	_secs_II_message	;wreg free
  2487  003FB0  EE20  F085         	lfsr	2,t_protocol@block
  2488  003FB4  0E06               	movlw	6
  2489  003FB6                     u5071:
  2490  003FB6  52E5               	movf	postdec1,f,c
  2491  003FB8  006F FF9F FFDB     	movff	indf1,plusw2
  2492  003FBE  06E8               	decf	wreg,f,c
  2493  003FC0  E2FA               	bc	u5071
  2494  003FC2                     l8035:
  2495                           
  2496                           ;gemsecs.c: 357:   if (V.abort == LINK_ERROR_ABORT) {
  2497  003FC2  0E07               	movlw	7
  2498  003FC4  0100               	movlb	0	; () banked
  2499  003FC6  19EA               	xorwf	(_V+80)& (0+255),w,b
  2500  003FC8  A4D8               	btfss	status,2,c
  2501  003FCA  D017               	goto	l8043
  2502                           
  2503                           ; BSR set to: 0
  2504                           ;gemsecs.c: 358:    secs_send((uint8_t*) block.header, block.length, 0);
  2505  003FCC  0E00               	movlw	0
  2506  003FCE  6EE6               	movwf	postinc1,c
  2507  003FD0  5187               	movf	(t_protocol@block+2)& (0+255),w,b
  2508  003FD2  6EE6               	movwf	postinc1,c
  2509  003FD4  0060  F217  FFE6   	movff	t_protocol@block,postinc1
  2510  003FDA  0060  F21B  FFE6   	movff	t_protocol@block+1,postinc1
  2511  003FE0  ECD6  F022         	call	_secs_send	;wreg free
  2512                           
  2513                           ;gemsecs.c: 359:    V.failed_send = 2;
  2514  003FE4  0100               	movlb	0	; () banked
  2515  003FE6  51F0               	movf	(_V+86)& (0+255),w,b
  2516  003FE8  0B87               	andlw	-121
  2517  003FEA  0910               	iorlw	16
  2518  003FEC  6FF0               	movwf	(_V+86)& (0+255),b
  2519                           
  2520                           ; BSR set to: 0
  2521                           ;gemsecs.c: 360:    *t_link = LINK_STATE_ERROR;
  2522                           ;stkvar	_t_link @ sp[(-1)+-1]
  2523  003FEE  0EFE               	movlw	-2
  2524  003FF0  50E3               	movf	plusw1,w,c
  2525  003FF2  6ED9               	movwf	fsr2l,c
  2526  003FF4  6ADA               	clrf	fsr2h,c
  2527  003FF6  0E06               	movlw	6
  2528  003FF8  D06C               	goto	L5
  2529  003FFA                     l8043:
  2530                           
  2531                           ; BSR set to: 0
  2532                           ;gemsecs.c: 362:    if (!requeue) {
  2533  003FFA  502A               	movf	t_protocol@requeue,w,c
  2534  003FFC  A4D8               	btfss	status,2,c
  2535  003FFE  D012               	goto	l1644
  2536                           
  2537                           ; BSR set to: 0
  2538                           ;gemsecs.c: 363:     secs_send((uint8_t*) block.header, block.length, 0);
  2539  004000  0E00               	movlw	0
  2540  004002  6EE6               	movwf	postinc1,c
  2541  004004  5187               	movf	(t_protocol@block+2)& (0+255),w,b
  2542  004006  6EE6               	movwf	postinc1,c
  2543  004008  0060  F217  FFE6   	movff	t_protocol@block,postinc1
  2544  00400E  0060  F21B  FFE6   	movff	t_protocol@block+1,postinc1
  2545  004014  ECD6  F022         	call	_secs_send	;wreg free
  2546                           
  2547                           ;gemsecs.c: 364:     if (V.queue)
  2548  004018  0100               	movlb	0	; () banked
  2549  00401A  A9F1               	btfss	(_V+87)& (0+255),4,b
  2550  00401C  D011               	goto	l8053
  2551                           
  2552                           ; BSR set to: 0
  2553                           ;gemsecs.c: 365:      requeue = 1;
  2554  00401E  0E01               	movlw	1
  2555  004020  6E2A               	movwf	t_protocol@requeue,c
  2556  004022  D00E               	goto	l8053
  2557  004024                     l1644:
  2558                           
  2559                           ; BSR set to: 0
  2560                           ;gemsecs.c: 367:     requeue = 0;
  2561  004024  6A2A               	clrf	t_protocol@requeue,c
  2562                           
  2563                           ;gemsecs.c: 368:     V.queue = 0;
  2564  004026  99F1               	bcf	(_V+87)& (0+255),4,b
  2565                           
  2566                           ; BSR set to: 0
  2567                           ;gemsecs.c: 369:     secs_send((uint8_t*) block.reply, block.reply_length, 0);
  2568  004028  0E00               	movlw	0
  2569  00402A  6EE6               	movwf	postinc1,c
  2570  00402C  518A               	movf	(t_protocol@block+5)& (0+255),w,b
  2571  00402E  6EE6               	movwf	postinc1,c
  2572  004030  0060  F223  FFE6   	movff	t_protocol@block+3,postinc1
  2573  004036  0060  F227  FFE6   	movff	t_protocol@block+4,postinc1
  2574  00403C  ECD6  F022         	call	_secs_send	;wreg free
  2575  004040                     l8053:
  2576                           
  2577                           ;gemsecs.c: 371:    if (V.error == LINK_ERROR_NONE) {
  2578  004040  0100               	movlb	0	; () banked
  2579  004042  51E9               	movf	(_V+79)& (0+255),w,b
  2580  004044  A4D8               	btfss	status,2,c
  2581  004046  D006               	goto	l8057
  2582                           
  2583                           ; BSR set to: 0
  2584                           ;gemsecs.c: 372:     *t_link = LINK_STATE_ACK;
  2585                           ;stkvar	_t_link @ sp[(-1)+-1]
  2586  004048  0EFE               	movlw	-2
  2587  00404A  50E3               	movf	plusw1,w,c
  2588  00404C  6ED9               	movwf	fsr2l,c
  2589  00404E  6ADA               	clrf	fsr2h,c
  2590  004050  0E03               	movlw	3
  2591  004052  D03F               	goto	L5
  2592  004054                     l8057:
  2593                           
  2594                           ; BSR set to: 0
  2595                           ;gemsecs.c: 374:     V.failed_send = 3;
  2596  004054  51F0               	movf	(_V+86)& (0+255),w,b
  2597  004056  0B87               	andlw	-121
  2598  004058  0918               	iorlw	24
  2599  00405A  D7C8               	goto	L6
  2600  00405C                     l8061:
  2601                           
  2602                           ;gemsecs.c: 384:   if (TimerDone(TMR_T3)) {
  2603  00405C  0E03               	movlw	3
  2604  00405E  6EE6               	movwf	postinc1,c
  2605  004060  EC15  F02F         	call	_TimerDone	;wreg free
  2606  004064  503B               	movf	btemp,w,c
  2607  004066  B4D8               	btfsc	status,2,c
  2608  004068  D007               	goto	l8067
  2609                           
  2610                           ;gemsecs.c: 385:    V.error = LINK_ERROR_T3;
  2611  00406A  0E03               	movlw	3
  2612  00406C  0100               	movlb	0	; () banked
  2613  00406E  6FE9               	movwf	(_V+79)& (0+255),b
  2614                           
  2615                           ;gemsecs.c: 386:    V.failed_send = 4;
  2616  004070  51F0               	movf	(_V+86)& (0+255),w,b
  2617  004072  0B87               	andlw	-121
  2618  004074  0920               	iorlw	32
  2619  004076  D74F               	goto	L7
  2620  004078                     l8067:
  2621                           
  2622                           ;gemsecs.c: 389:    if (UART1_is_rx_ready()) {
  2623  004078  EC4F  F030         	call	_UART1_is_rx_ready	;wreg free
  2624  00407C  503B               	movf	btemp,w,c
  2625  00407E  B4D8               	btfsc	status,2,c
  2626  004080  D04B               	goto	l8091
  2627                           
  2628                           ;gemsecs.c: 390:     rxData = UART1_Read();
  2629  004082  EC79  F02C         	call	_UART1_Read	;wreg free
  2630                           
  2631                           ;stkvar	_rxData @ sp[(-1)+0]
  2632  004086  0EFF               	movlw	-1
  2633  004088  0060  F0EF  FFE3   	movff	btemp,plusw1
  2634                           
  2635                           ; BSR set to: 57
  2636                           ;gemsecs.c: 391:     if (rxData == 0x06) {
  2637                           ;stkvar	_rxData @ sp[(-1)+0]
  2638  00408E  0EFF               	movlw	-1
  2639  004090  006F FF8C  F03B    	movff	plusw1,btemp
  2640  004096  0E06               	movlw	6
  2641  004098  183B               	xorwf	btemp,w,c
  2642  00409A  A4D8               	btfss	status,2,c
  2643  00409C  D03D               	goto	l8091
  2644                           
  2645                           ; BSR set to: 57
  2646                           ;gemsecs.c: 392:      V.failed_send = 0;
  2647  00409E  0E87               	movlw	-121
  2648  0040A0  0100               	movlb	0	; () banked
  2649  0040A2  17F0               	andwf	(_V+86)& (0+255),f,b
  2650  0040A4  D775               	goto	l8029
  2651  0040A6                     l8077:
  2652                           
  2653                           ;gemsecs.c: 399:   *t_link = LINK_STATE_ERROR;
  2654                           ;stkvar	_t_link @ sp[(-1)+-1]
  2655  0040A6  0EFE               	movlw	-2
  2656  0040A8  50E3               	movf	plusw1,w,c
  2657  0040AA  6ED9               	movwf	fsr2l,c
  2658  0040AC  6ADA               	clrf	fsr2h,c
  2659  0040AE  0E06               	movlw	6
  2660  0040B0  6EDF               	movwf	indf2,c
  2661                           
  2662                           ;gemsecs.c: 400:   while ((uart1RxCount)) {
  2663  0040B2  D002               	goto	l8081
  2664  0040B4                     l8079:
  2665                           
  2666                           ;gemsecs.c: 401:    UART1_Read();
  2667  0040B4  EC79  F02C         	call	_UART1_Read	;wreg free
  2668  0040B8                     l8081:
  2669                           
  2670                           ;gemsecs.c: 400:   while ((uart1RxCount)) {
  2671  0040B8  5035               	movf	_uart1RxCount,w,c	;volatile
  2672  0040BA  B4D8               	btfsc	status,2,c
  2673  0040BC  D02D               	goto	l8091
  2674  0040BE  D7FA               	goto	l8079
  2675  0040C0                     l8083:
  2676                           
  2677                           ;gemsecs.c: 407:   V.failed_send = 0;
  2678  0040C0  0E87               	movlw	-121
  2679  0040C2  0100               	movlb	0	; () banked
  2680  0040C4  17F0               	andwf	(_V+86)& (0+255),f,b
  2681                           
  2682                           ;gemsecs.c: 408:   break;
  2683  0040C6  D028               	goto	l8091
  2684  0040C8                     l8085:
  2685                           
  2686                           ;gemsecs.c: 410:   *t_link = LINK_STATE_IDLE;
  2687                           ;stkvar	_t_link @ sp[(-1)+-1]
  2688  0040C8  0EFE               	movlw	-2
  2689  0040CA  50E3               	movf	plusw1,w,c
  2690  0040CC  6ED9               	movwf	fsr2l,c
  2691  0040CE  6ADA               	clrf	fsr2h,c
  2692  0040D0  0E00               	movlw	0
  2693  0040D2                     L5:
  2694  0040D2  6EDF               	movwf	indf2,c
  2695                           
  2696                           ;gemsecs.c: 412:   break;
  2697  0040D4  D021               	goto	l8091
  2698  0040D6                     l8089:
  2699                           
  2700                           ;stkvar	_t_link @ sp[(-1)+-1]
  2701  0040D6  0EFE               	movlw	-2
  2702  0040D8  50E3               	movf	plusw1,w,c
  2703  0040DA  6ED9               	movwf	fsr2l,c
  2704  0040DC  6ADA               	clrf	fsr2h,c
  2705  0040DE  50DF               	movf	indf2,w,c
  2706  0040E0  6E45               	movwf	btemp+10,c
  2707  0040E2  6A46               	clrf	btemp+11,c
  2708                           
  2709                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2710                           ; Switch size 1, requested type "simple"
  2711                           ; Number of cases is 1, Range of values is 0 to 0
  2712                           ; switch strategies available:
  2713                           ; Name         Instructions Cycles
  2714                           ; simple_byte            4     3 (average)
  2715                           ;	Chosen strategy is simple_byte
  2716  0040E4  5046               	movf	btemp+11,w,c
  2717  0040E6  0A00               	xorlw	0	; case 0
  2718  0040E8  A4D8               	btfss	status,2,c
  2719  0040EA  D7EE               	goto	l8085
  2720                           
  2721                           ; Switch size 1, requested type "simple"
  2722                           ; Number of cases is 7, Range of values is 0 to 6
  2723                           ; switch strategies available:
  2724                           ; Name         Instructions Cycles
  2725                           ; simple_byte           22    12 (average)
  2726                           ;	Chosen strategy is simple_byte
  2727  0040EC  5045               	movf	btemp+10,w,c
  2728  0040EE  0A00               	xorlw	0	; case 0
  2729  0040F0  B4D8               	btfsc	status,2,c
  2730  0040F2  D6EA               	goto	l1630
  2731  0040F4  0A01               	xorlw	1	; case 1
  2732  0040F6  B4D8               	btfsc	status,2,c
  2733  0040F8  D6FD               	goto	l8005
  2734  0040FA  0A03               	xorlw	3	; case 2
  2735  0040FC  B4D8               	btfsc	status,2,c
  2736  0040FE  D74E               	goto	l8031
  2737  004100  0A01               	xorlw	1	; case 3
  2738  004102  B4D8               	btfsc	status,2,c
  2739  004104  D7AB               	goto	l8061
  2740  004106  0A07               	xorlw	7	; case 4
  2741  004108  B4D8               	btfsc	status,2,c
  2742  00410A  D7DA               	goto	l8083
  2743  00410C  0A01               	xorlw	1	; case 5
  2744  00410E  B4D8               	btfsc	status,2,c
  2745  004110  D7CA               	goto	l8077
  2746  004112  0A03               	xorlw	3	; case 6
  2747  004114  A4D8               	btfss	status,2,c
  2748  004116  D7D8               	goto	l8085
  2749  004118                     l8091:
  2750                           
  2751                           ;gemsecs.c: 415:  return *t_link;
  2752                           ;stkvar	_t_link @ sp[(-1)+-1]
  2753  004118  0EFE               	movlw	-2
  2754  00411A  50E3               	movf	plusw1,w,c
  2755  00411C  6ED9               	movwf	fsr2l,c
  2756  00411E  6ADA               	clrf	fsr2h,c
  2757  004120  50DF               	movf	indf2,w,c
  2758  004122  6E3B               	movwf	btemp,c
  2759                           
  2760                           ; _t_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  2761  004124  52E5               	movf	postdec1,f,c
  2762  004126  52E5               	movf	postdec1,f,c
  2763  004128  0012               	return		;funcret
  2764  00412A                     __end_of_t_protocol:
  2765                           	opt callstack 0
  2766                           
  2767 ;; *************** function _secs_send *****************
  2768 ;; Defined at:
  2769 ;;		line 419 in file "gemsecs.c"
  2770 ;; Parameters:    Size  Location     Type
  2771 ;;  byte_block      2  [STACK] PTR unsigned char 
  2772 ;;		 -> H53(56), H24(27), H17(20), H14(17), 
  2773 ;;		 -> H13(16), H12(30), H10(65), 
  2774 ;;  length          1  [STACK] unsigned char 
  2775 ;;  fake            1  [STACK] _Bool 
  2776 ;; Auto vars:     Size  Location     Type
  2777 ;;  k               2  [STACK] PTR unsigned char 
  2778 ;;		 -> H53(56), H24(27), H17(20), H14(17), 
  2779 ;;		 -> H13(16), H12(30), H10(65), 
  2780 ;;  checksum        2  [STACK] unsigned short 
  2781 ;;  i               1  [STACK] unsigned char 
  2782 ;; Return value:  Size  Location     Type
  2783 ;;                  1  [STACK] _Bool 
  2784 ;; Registers used:
  2785 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11
  2786 ;; Tracked objects:
  2787 ;;		On entry : 3F/0
  2788 ;;		On exit  : 0/0
  2789 ;;		Unchanged: 0/0
  2790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2795 ;;Total ram usage:        0 bytes
  2796 ;; Hardware stack levels used:    1
  2797 ;; Hardware stack levels required when called:    4
  2798 ;; This function calls:
  2799 ;;		_UART1_Write
  2800 ;;		_UART1_is_tx_ready
  2801 ;;		_UART1_put_buffer
  2802 ;;		_block_checksum
  2803 ;; This function is called by:
  2804 ;;		_t_protocol
  2805 ;; This function uses a reentrant model
  2806 ;;
  2807                           
  2808                           	psect	text2
  2809  0045AC                     __ptext2:
  2810                           	opt callstack 0
  2811  0045AC                     _secs_send:
  2812                           	opt callstack 0
  2813                           
  2814                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2815  0045AC  0E05               	movlw	5
  2816  0045AE  26E1               	addwf	fsr1l,f,c
  2817  0045B0  0E00               	movlw	0
  2818  0045B2  22E2               	addwfc	fsr1h,f,c
  2819                           
  2820                           ;gemsecs.c: 419: _Bool secs_send(uint8_t *byte_block, uint8_t length, _Bool fake);gemsec
      +                          s.c: 420: {;gemsecs.c: 421:  uint8_t i, *k;;gemsecs.c: 422:  uint16_t checksum;;gemsecs.
      +                          c: 424:  k = (uint8_t *) byte_block;
  2821                           ;stkvar	_byte_block @ sp[(-5)+-2]
  2822                           
  2823                           ;incstack = 0
  2824  0045B4  0EF9               	movlw	-7
  2825  0045B6  006F FF8C  F045    	movff	plusw1,btemp+10
  2826  0045BC  0EFA               	movlw	-6
  2827  0045BE  006F FF8C  F046    	movff	plusw1,btemp+11
  2828                           
  2829                           ;stkvar	_k @ sp[(-5)+0]
  2830  0045C4  0EFC               	movlw	-4
  2831  0045C6  0060  F11B  FFE3   	movff	btemp+11,plusw1
  2832  0045CC  0EFB               	movlw	-5
  2833  0045CE  0060  F117  FFE3   	movff	btemp+10,plusw1
  2834                           
  2835                           ;gemsecs.c: 426:  ++V.ticks;
  2836  0045D4  0E01               	movlw	1
  2837  0045D6  0100               	movlb	0	; () banked
  2838  0045D8  27DF               	addwf	(_V+69)& (0+255),f,b
  2839  0045DA  0E00               	movlw	0
  2840  0045DC  23E0               	addwfc	(_V+70)& (0+255),f,b
  2841  0045DE  23E1               	addwfc	(_V+71)& (0+255),f,b
  2842  0045E0  23E2               	addwfc	(_V+72)& (0+255),f,b
  2843                           
  2844                           ; BSR set to: 0
  2845                           ;gemsecs.c: 427:  V.error = LINK_ERROR_NONE;
  2846  0045E2  6BE9               	clrf	(_V+79)& (0+255),b
  2847                           
  2848                           ; BSR set to: 0
  2849                           ;gemsecs.c: 428:  if ((length - 3) != k[length - 1]) {
  2850                           ;stkvar	_length @ sp[(-5)+-3]
  2851  0045E4  0EF8               	movlw	-8
  2852  0045E6  50E3               	movf	plusw1,w,c
  2853  0045E8  6E45               	movwf	btemp+10,c
  2854  0045EA  6A46               	clrf	btemp+11,c
  2855                           
  2856                           ;stkvar	_k @ sp[(-5)+0]
  2857  0045EC  0EFB               	movlw	-5
  2858  0045EE  50E3               	movf	plusw1,w,c
  2859  0045F0  2645               	addwf	btemp+10,f,c
  2860  0045F2  0EFC               	movlw	-4
  2861  0045F4  50E3               	movf	plusw1,w,c
  2862  0045F6  2246               	addwfc	btemp+11,f,c
  2863  0045F8  0EFF               	movlw	255
  2864  0045FA  2445               	addwf	btemp+10,w,c
  2865  0045FC  6ED9               	movwf	fsr2l,c
  2866  0045FE  0EFF               	movlw	255
  2867  004600  2046               	addwfc	btemp+11,w,c
  2868  004602  6EDA               	movwf	fsr2h,c
  2869  004604  50DF               	movf	indf2,w,c
  2870  004606  6E45               	movwf	btemp+10,c
  2871  004608  6A46               	clrf	btemp+11,c
  2872  00460A  0EFD               	movlw	253
  2873  00460C  6E43               	movwf	btemp+8,c
  2874  00460E  0EFF               	movlw	255
  2875  004610  6E44               	movwf	btemp+9,c
  2876                           
  2877                           ;stkvar	_length @ sp[(-5)+-3]
  2878  004612  0EF8               	movlw	-8
  2879  004614  50E3               	movf	plusw1,w,c
  2880  004616  6E41               	movwf	btemp+6,c
  2881  004618  6A42               	clrf	btemp+7,c
  2882  00461A  5043               	movf	btemp+8,w,c
  2883  00461C  2641               	addwf	btemp+6,f,c
  2884  00461E  5044               	movf	btemp+9,w,c
  2885  004620  2242               	addwfc	btemp+7,f,c
  2886  004622  5045               	movf	btemp+10,w,c
  2887  004624  1841               	xorwf	btemp+6,w,c
  2888  004626  E104               	bnz	u4950
  2889  004628  5046               	movf	btemp+11,w,c
  2890  00462A  1842               	xorwf	btemp+7,w,c
  2891  00462C  B4D8               	btfsc	status,2,c
  2892  00462E  D003               	goto	l7853
  2893  004630                     u4950:
  2894                           
  2895                           ; BSR set to: 0
  2896                           ;gemsecs.c: 429:   V.error = LINK_ERROR_SEND;
  2897  004630  0E08               	movlw	8
  2898  004632  6FE9               	movwf	(_V+79)& (0+255),b
  2899  004634  D098               	goto	l1665
  2900  004636                     l7853:
  2901                           
  2902                           ; BSR set to: 0
  2903                           ;gemsecs.c: 438:  checksum = block_checksum(&k[2], length - 3);
  2904  004636  0EFD               	movlw	253
  2905  004638  6E45               	movwf	btemp+10,c
  2906  00463A  0EFF               	movlw	255
  2907  00463C  6E46               	movwf	btemp+11,c
  2908                           
  2909                           ;stkvar	_length @ sp[(-5)+-3]
  2910  00463E  0EF8               	movlw	-8
  2911  004640  50E3               	movf	plusw1,w,c
  2912  004642  6E43               	movwf	btemp+8,c
  2913  004644  6A44               	clrf	btemp+9,c
  2914  004646  5045               	movf	btemp+10,w,c
  2915  004648  2643               	addwf	btemp+8,f,c
  2916  00464A  5046               	movf	btemp+11,w,c
  2917  00464C  2244               	addwfc	btemp+9,f,c
  2918  00464E  0060  F10F  FFE6   	movff	btemp+8,postinc1
  2919  004654  0060  F113  FFE6   	movff	btemp+9,postinc1
  2920                           
  2921                           ;stkvar	_k @ sp[(-7)+0]
  2922  00465A  0EF9               	movlw	-7
  2923  00465C  50E3               	movf	plusw1,w,c
  2924  00465E  0F02               	addlw	2
  2925  004660  6E45               	movwf	btemp+10,c
  2926  004662  0EFA               	movlw	-6
  2927  004664  006F FF8C  F046    	movff	plusw1,btemp+11
  2928  00466A  0E00               	movlw	0
  2929  00466C  2246               	addwfc	btemp+11,f,c
  2930  00466E  0060  F117  FFE6   	movff	btemp+10,postinc1
  2931  004674  0060  F11B  FFE6   	movff	btemp+11,postinc1
  2932  00467A  EC05  F026         	call	_block_checksum	;wreg free
  2933                           
  2934                           ;stkvar	_checksum @ sp[(-5)+2]
  2935  00467E  0EFD               	movlw	-3
  2936  004680  0060  F0EF  FFE3   	movff	btemp,plusw1
  2937  004686  0EFE               	movlw	-2
  2938  004688  0060  F0F3  FFE3   	movff	btemp+1,plusw1
  2939                           
  2940                           ;gemsecs.c: 439:  k[0] = checksum & 0xff;
  2941                           ;stkvar	_checksum @ sp[(-5)+2]
  2942                           ;stkvar	_k @ sp[(-5)+0]
  2943  00468E  0EFB               	movlw	-5
  2944  004690  006F FF8F FFD9     	movff	plusw1,fsr2l
  2945  004696  0EFC               	movlw	-4
  2946  004698  006F FF8F FFDA     	movff	plusw1,fsr2h
  2947  00469E  0EFD               	movlw	-3
  2948  0046A0  006F FF8F FFDF     	movff	plusw1,indf2
  2949                           
  2950                           ;gemsecs.c: 440:  k[1] = (checksum >> 8)&0xff;
  2951                           ;stkvar	_checksum @ sp[(-5)+2]
  2952  0046A6  0EFE               	movlw	254
  2953  0046A8  24E1               	addwf	fsr1l,w,c
  2954  0046AA  6ED9               	movwf	fsr2l,c
  2955  0046AC  0EFF               	movlw	255
  2956  0046AE  20E2               	addwfc	fsr1h,w,c
  2957  0046B0  6EDA               	movwf	fsr2h,c
  2958                           
  2959                           ;stkvar	_k @ sp[(-5)+0]
  2960  0046B2  0EFB               	movlw	-5
  2961  0046B4  006F FF8C  F045    	movff	plusw1,btemp+10
  2962  0046BA  0EFC               	movlw	-4
  2963  0046BC  006F FF8C  F046    	movff	plusw1,btemp+11
  2964  0046C2  0E01               	movlw	1
  2965  0046C4  2445               	addwf	btemp+10,w,c
  2966  0046C6  6EE9               	movwf	fsr0l,c
  2967  0046C8  0E00               	movlw	0
  2968  0046CA  2046               	addwfc	btemp+11,w,c
  2969  0046CC  6EEA               	movwf	fsr0h,c
  2970  0046CE  006F FF7F FFEF     	movff	indf2,indf0
  2971                           
  2972                           ;gemsecs.c: 441:  V.t_checksum = checksum;
  2973                           ;stkvar	_checksum @ sp[(-5)+2]
  2974  0046D4  0EFD               	movlw	-3
  2975  0046D6  006F FF8C  F0EE    	movff	plusw1,_V+84
  2976  0046DC  0EFE               	movlw	-2
  2977  0046DE  006F FF8C  F0EF    	movff	plusw1,_V+85
  2978  0046E4                     l7861:
  2979  0046E4  EC47  F030         	call	_UART1_is_tx_ready	;wreg free
  2980  0046E8  0E3F               	movlw	63
  2981  0046EA  643B               	cpfsgt	btemp,c
  2982  0046EC  D7FB               	goto	l7861
  2983                           
  2984                           ;gemsecs.c: 444:  for (i = length; i > 0; i--) {
  2985                           ;stkvar	_length @ sp[(-5)+-3]
  2986                           ;stkvar	_i @ sp[(-5)+4]
  2987  0046EE  0EF8               	movlw	-8
  2988  0046F0  006F FF8C  F03B    	movff	plusw1,btemp
  2989  0046F6  0EFF               	movlw	-1
  2990  0046F8  0060  F0EF  FFE3   	movff	btemp,plusw1
  2991  0046FE                     l7865:
  2992                           
  2993                           ;stkvar	_i @ sp[(-5)+4]
  2994  0046FE  0EFF               	movlw	-1
  2995  004700  50E3               	movf	plusw1,w,c
  2996  004702  B4D8               	btfsc	status,2,c
  2997  004704  D030               	goto	l1665
  2998                           
  2999                           ;gemsecs.c: 445:   if (fake) {
  3000                           ;stkvar	_fake @ sp[(-5)+-4]
  3001  004706  0EF7               	movlw	-9
  3002  004708  50E3               	movf	plusw1,w,c
  3003  00470A  B4D8               	btfsc	status,2,c
  3004  00470C  D015               	goto	l7873
  3005                           
  3006                           ;gemsecs.c: 446:    UART1_put_buffer(k[i - 1]);
  3007                           ;stkvar	_i @ sp[(-5)+4]
  3008  00470E  0EFF               	movlw	-1
  3009  004710  50E3               	movf	plusw1,w,c
  3010  004712  6E45               	movwf	btemp+10,c
  3011  004714  6A46               	clrf	btemp+11,c
  3012                           
  3013                           ;stkvar	_k @ sp[(-5)+0]
  3014  004716  0EFB               	movlw	-5
  3015  004718  50E3               	movf	plusw1,w,c
  3016  00471A  2645               	addwf	btemp+10,f,c
  3017  00471C  0EFC               	movlw	-4
  3018  00471E  50E3               	movf	plusw1,w,c
  3019  004720  2246               	addwfc	btemp+11,f,c
  3020  004722  0EFF               	movlw	255
  3021  004724  2445               	addwf	btemp+10,w,c
  3022  004726  6ED9               	movwf	fsr2l,c
  3023  004728  0EFF               	movlw	255
  3024  00472A  2046               	addwfc	btemp+11,w,c
  3025  00472C  6EDA               	movwf	fsr2h,c
  3026  00472E  50DF               	movf	indf2,w,c
  3027  004730  6EE6               	movwf	postinc1,c
  3028  004732  EC49  F02D         	call	_UART1_put_buffer	;wreg free
  3029                           
  3030                           ;gemsecs.c: 447:   } else {
  3031  004736  D014               	goto	l7875
  3032  004738                     l7873:
  3033                           
  3034                           ;gemsecs.c: 449:    UART1_Write(k[i - 1]);
  3035                           ;stkvar	_i @ sp[(-5)+4]
  3036  004738  0EFF               	movlw	-1
  3037  00473A  50E3               	movf	plusw1,w,c
  3038  00473C  6E45               	movwf	btemp+10,c
  3039  00473E  6A46               	clrf	btemp+11,c
  3040                           
  3041                           ;stkvar	_k @ sp[(-5)+0]
  3042  004740  0EFB               	movlw	-5
  3043  004742  50E3               	movf	plusw1,w,c
  3044  004744  2645               	addwf	btemp+10,f,c
  3045  004746  0EFC               	movlw	-4
  3046  004748  50E3               	movf	plusw1,w,c
  3047  00474A  2246               	addwfc	btemp+11,f,c
  3048  00474C  0EFF               	movlw	255
  3049  00474E  2445               	addwf	btemp+10,w,c
  3050  004750  6ED9               	movwf	fsr2l,c
  3051  004752  0EFF               	movlw	255
  3052  004754  2046               	addwfc	btemp+11,w,c
  3053  004756  6EDA               	movwf	fsr2h,c
  3054  004758  50DF               	movf	indf2,w,c
  3055  00475A  6EE6               	movwf	postinc1,c
  3056  00475C  EC3B  F02C         	call	_UART1_Write	;wreg free
  3057  004760                     l7875:
  3058                           
  3059                           ; BSR set to: 57
  3060                           ;gemsecs.c: 451:  }
  3061                           ;stkvar	_i @ sp[(-5)+4]
  3062  004760  0EFF               	movlw	-1
  3063  004762  06E3               	decf	plusw1,f,c
  3064  004764  D7CC               	goto	l7865
  3065  004766                     l1665:
  3066                           
  3067                           ; _secs_send: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  3068  004766  0EF7               	movlw	247
  3069  004768  26E1               	addwf	fsr1l,f,c
  3070  00476A  0EFF               	movlw	255
  3071  00476C  22E2               	addwfc	fsr1h,f,c
  3072  00476E  0012               	return		;funcret
  3073  004770                     __end_of_secs_send:
  3074                           	opt callstack 0
  3075                           
  3076 ;; *************** function _block_checksum *****************
  3077 ;; Defined at:
  3078 ;;		line 18 in file "gemsecs.c"
  3079 ;; Parameters:    Size  Location     Type
  3080 ;;  byte_block      2  [STACK] PTR unsigned char 
  3081 ;;		 -> H53(56), H24(27), H17(20), H14(17), 
  3082 ;;		 -> H13(16), H12(30), H10(65), 
  3083 ;;  byte_count      2  [STACK] unsigned short 
  3084 ;; Auto vars:     Size  Location     Type
  3085 ;;  i               2  [STACK] unsigned short 
  3086 ;;  sum             2  [STACK] unsigned short 
  3087 ;; Return value:  Size  Location     Type
  3088 ;;                  2  [STACK] unsigned short 
  3089 ;; Registers used:
  3090 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  3091 ;; Tracked objects:
  3092 ;;		On entry : 3F/0
  3093 ;;		On exit  : 0/0
  3094 ;;		Unchanged: 0/0
  3095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3100 ;;Total ram usage:        0 bytes
  3101 ;; Hardware stack levels used:    1
  3102 ;; Hardware stack levels required when called:    3
  3103 ;; This function calls:
  3104 ;;		Nothing
  3105 ;; This function is called by:
  3106 ;;		_secs_send
  3107 ;; This function uses a reentrant model
  3108 ;;
  3109                           
  3110                           	psect	text3
  3111  004C0A                     __ptext3:
  3112                           	opt callstack 0
  3113  004C0A                     _block_checksum:
  3114                           	opt callstack 0
  3115                           
  3116                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3117  004C0A  52E6               	movf	postinc1,f,c
  3118  004C0C  52E6               	movf	postinc1,f,c
  3119  004C0E  52E6               	movf	postinc1,f,c
  3120  004C10  52E6               	movf	postinc1,f,c
  3121                           
  3122                           ;gemsecs.c: 18: uint16_t block_checksum(uint8_t *byte_block, uint16_t byte_count);gemsec
      +                          s.c: 19: {;gemsecs.c: 20:  uint16_t sum = 0, i;
  3123                           ;stkvar	_sum @ sp[(-4)+2]
  3124                           
  3125                           ;incstack = 0
  3126  004C12  0EFE               	movlw	-2
  3127  004C14  6AE3               	clrf	plusw1,c
  3128  004C16  0EFF               	movlw	-1
  3129  004C18  6AE3               	clrf	plusw1,c
  3130                           
  3131                           ;gemsecs.c: 22:  for (i = 0; i < byte_count; i++) {
  3132                           ;stkvar	_i @ sp[(-4)+0]
  3133  004C1A  0EFC               	movlw	-4
  3134  004C1C  6AE3               	clrf	plusw1,c
  3135  004C1E  0EFD               	movlw	-3
  3136  004C20  6AE3               	clrf	plusw1,c
  3137  004C22  D039               	goto	l7761
  3138  004C24                     l7757:
  3139                           
  3140                           ;gemsecs.c: 23:   sum += byte_block[i];
  3141                           ;stkvar	_i @ sp[(-4)+0]
  3142  004C24  0EFC               	movlw	-4
  3143  004C26  006F FF8C  F045    	movff	plusw1,btemp+10
  3144  004C2C  0EFD               	movlw	-3
  3145  004C2E  006F FF8C  F046    	movff	plusw1,btemp+11
  3146                           
  3147                           ;stkvar	_byte_block @ sp[(-4)+-2]
  3148  004C34  0EFA               	movlw	-6
  3149  004C36  006F FF8C  F043    	movff	plusw1,btemp+8
  3150  004C3C  0EFB               	movlw	-5
  3151  004C3E  006F FF8C  F044    	movff	plusw1,btemp+9
  3152  004C44  5045               	movf	btemp+10,w,c
  3153  004C46  2443               	addwf	btemp+8,w,c
  3154  004C48  6ED9               	movwf	fsr2l,c
  3155  004C4A  5046               	movf	btemp+11,w,c
  3156  004C4C  2044               	addwfc	btemp+9,w,c
  3157  004C4E  6EDA               	movwf	fsr2h,c
  3158  004C50  50DF               	movf	indf2,w,c
  3159  004C52  6E46               	movwf	btemp+11,c
  3160                           
  3161                           ;stkvar	_sum @ sp[(-4)+2]
  3162  004C54  0EFE               	movlw	-2
  3163  004C56  50E3               	movf	plusw1,w,c
  3164  004C58  2446               	addwf	btemp+11,w,c
  3165  004C5A  6E3B               	movwf	btemp,c
  3166  004C5C  0EFE               	movlw	-2
  3167  004C5E  0060  F0EF  FFE3   	movff	btemp,plusw1
  3168  004C64  6A3B               	clrf	btemp,c
  3169  004C66  0EFF               	movlw	-1
  3170  004C68  50E3               	movf	plusw1,w,c
  3171  004C6A  223B               	addwfc	btemp,f,c
  3172  004C6C  0EFF               	movlw	-1
  3173  004C6E  0060  F0EF  FFE3   	movff	btemp,plusw1
  3174                           
  3175                           ;gemsecs.c: 24:  }
  3176                           ;stkvar	_i @ sp[(-4)+0]
  3177  004C74  0EFC               	movlw	-4
  3178  004C76  50E3               	movf	plusw1,w,c
  3179  004C78  0F01               	addlw	1
  3180  004C7A  6E3B               	movwf	btemp,c
  3181  004C7C  0EFC               	movlw	-4
  3182  004C7E  0060  F0EF  FFE3   	movff	btemp,plusw1
  3183  004C84  6A3B               	clrf	btemp,c
  3184  004C86  0EFD               	movlw	-3
  3185  004C88  50E3               	movf	plusw1,w,c
  3186  004C8A  203B               	addwfc	btemp,w,c
  3187  004C8C  6E3B               	movwf	btemp,c
  3188  004C8E  0EFD               	movlw	-3
  3189  004C90  0060  F0EF  FFE3   	movff	btemp,plusw1
  3190  004C96                     l7761:
  3191                           
  3192                           ;stkvar	_byte_count @ sp[(-4)+-4]
  3193  004C96  0EF8               	movlw	-8
  3194  004C98  006F FF8C  F045    	movff	plusw1,btemp+10
  3195  004C9E  0EF9               	movlw	-7
  3196  004CA0  006F FF8C  F046    	movff	plusw1,btemp+11
  3197                           
  3198                           ;stkvar	_i @ sp[(-4)+0]
  3199  004CA6  0EFC               	movlw	-4
  3200  004CA8  006F FF8C  F043    	movff	plusw1,btemp+8
  3201  004CAE  0EFD               	movlw	-3
  3202  004CB0  006F FF8C  F044    	movff	plusw1,btemp+9
  3203  004CB6  5045               	movf	btemp+10,w,c
  3204  004CB8  5C43               	subwf	btemp+8,w,c
  3205  004CBA  5046               	movf	btemp+11,w,c
  3206  004CBC  5844               	subwfb	btemp+9,w,c
  3207  004CBE  A0D8               	btfss	status,0,c
  3208  004CC0  D7B1               	goto	l7757
  3209                           
  3210                           ;gemsecs.c: 25:  return sum;
  3211                           ;stkvar	_sum @ sp[(-4)+2]
  3212  004CC2  0EFE               	movlw	-2
  3213  004CC4  006F FF8C  F03B    	movff	plusw1,btemp
  3214  004CCA  0EFF               	movlw	-1
  3215  004CCC  006F FF8C  F03C    	movff	plusw1,btemp+1
  3216                           
  3217                           ; _block_checksum: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4
      +                          , argsize = 4, vargsize = 0
  3218  004CD2  0EF8               	movlw	248
  3219  004CD4  26E1               	addwf	fsr1l,f,c
  3220  004CD6  0EFF               	movlw	255
  3221  004CD8  22E2               	addwfc	fsr1h,f,c
  3222  004CDA  0012               	return		;funcret
  3223  004CDC                     __end_of_block_checksum:
  3224                           	opt callstack 0
  3225                           
  3226 ;; *************** function _UART1_put_buffer *****************
  3227 ;; Defined at:
  3228 ;;		line 250 in file "mcc_generated_files/uart1.c"
  3229 ;; Parameters:    Size  Location     Type
  3230 ;;  bufData         1  [STACK] unsigned char 
  3231 ;; Auto vars:     Size  Location     Type
  3232 ;;		None
  3233 ;; Return value:  Size  Location     Type
  3234 ;;                  1  [STACK] void 
  3235 ;; Registers used:
  3236 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3237 ;; Tracked objects:
  3238 ;;		On entry : 0/39
  3239 ;;		On exit  : 3F/39
  3240 ;;		Unchanged: 0/0
  3241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3246 ;;Total ram usage:        0 bytes
  3247 ;; Hardware stack levels used:    1
  3248 ;; Hardware stack levels required when called:    3
  3249 ;; This function calls:
  3250 ;;		Nothing
  3251 ;; This function is called by:
  3252 ;;		_t_protocol
  3253 ;;		_secs_send
  3254 ;; This function uses a reentrant model
  3255 ;;
  3256                           
  3257                           	psect	text4
  3258  005A92                     __ptext4:
  3259                           	opt callstack 0
  3260  005A92                     _UART1_put_buffer:
  3261                           	opt callstack 25
  3262                           
  3263                           ;mcc_generated_files/uart1.c: 250: void UART1_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart1.c: 251: {;mcc_generated_files/uart1.c: 252:  PIE3bits.U1RXIE = 0;
  3264                           
  3265                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3266                           ;incstack = 0
  3267  005A92  0139               	movlb	57	; () banked
  3268  005A94  9793               	bcf	147,3,b	;volatile
  3269                           
  3270                           ; BSR set to: 57
  3271                           ;mcc_generated_files/uart1.c: 253:  uart1RxBuffer[uart1RxHead++] = bufData;
  3272                           ;stkvar	_bufData @ sp[(0)+-1]
  3273  005A96  0E40               	movlw	low _uart1RxBuffer
  3274  005A98  2437               	addwf	_uart1RxHead,w,c	;volatile
  3275  005A9A  6ED9               	movwf	fsr2l,c
  3276  005A9C  6ADA               	clrf	fsr2h,c
  3277  005A9E  0E02               	movlw	high _uart1RxBuffer
  3278  005AA0  22DA               	addwfc	fsr2h,f,c
  3279  005AA2  0EFF               	movlw	-1
  3280  005AA4  006F FF8F FFDF     	movff	plusw1,indf2
  3281                           
  3282                           ; BSR set to: 57
  3283  005AAA  2A37               	incf	_uart1RxHead,f,c	;volatile
  3284                           
  3285                           ; BSR set to: 57
  3286                           ;mcc_generated_files/uart1.c: 254:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
  3287  005AAC  0E3F               	movlw	63
  3288  005AAE  6437               	cpfsgt	_uart1RxHead,c
  3289  005AB0  D001               	goto	l5651
  3290                           
  3291                           ; BSR set to: 57
  3292                           ;mcc_generated_files/uart1.c: 255:   uart1RxHead = 0;
  3293  005AB2  6A37               	clrf	_uart1RxHead,c	;volatile
  3294  005AB4                     l5651:
  3295                           
  3296                           ; BSR set to: 57
  3297                           ;mcc_generated_files/uart1.c: 258:  uart1RxCount++;
  3298  005AB4  2A35               	incf	_uart1RxCount,f,c	;volatile
  3299                           
  3300                           ; BSR set to: 57
  3301                           ;mcc_generated_files/uart1.c: 259:  PIE3bits.U1RXIE = 1;
  3302  005AB6  8793               	bsf	147,3,b	;volatile
  3303                           
  3304                           ; BSR set to: 57
  3305                           ; _UART1_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  3306  005AB8  52E5               	movf	postdec1,f,c
  3307  005ABA  0012               	return		;funcret
  3308  005ABC                     __end_of_UART1_put_buffer:
  3309                           	opt callstack 0
  3310                           
  3311 ;; *************** function _UART1_is_tx_ready *****************
  3312 ;; Defined at:
  3313 ;;		line 151 in file "mcc_generated_files/uart1.c"
  3314 ;; Parameters:    Size  Location     Type
  3315 ;;		None
  3316 ;; Auto vars:     Size  Location     Type
  3317 ;;		None
  3318 ;; Return value:  Size  Location     Type
  3319 ;;                  1  [STACK] unsigned char 
  3320 ;; Registers used:
  3321 ;;		btemp
  3322 ;; Tracked objects:
  3323 ;;		On entry : 0/0
  3324 ;;		On exit  : 0/0
  3325 ;;		Unchanged: 0/0
  3326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3331 ;;Total ram usage:        0 bytes
  3332 ;; Hardware stack levels used:    1
  3333 ;; Hardware stack levels required when called:    3
  3334 ;; This function calls:
  3335 ;;		Nothing
  3336 ;; This function is called by:
  3337 ;;		_secs_send
  3338 ;; This function uses a reentrant model
  3339 ;;
  3340                           
  3341                           	psect	text5
  3342  00608E                     __ptext5:
  3343                           	opt callstack 0
  3344  00608E                     _UART1_is_tx_ready:
  3345                           	opt callstack 25
  3346                           
  3347                           ;mcc_generated_files/uart1.c: 153:  return uart1TxBufferRemaining;
  3348                           
  3349                           ; BSR set to: 57
  3350                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3351                           ;incstack = 0
  3352  00608E  0060  F0E0  F03B   	movff	_uart1TxBufferRemaining,btemp	;volatile
  3353                           
  3354                           ; _UART1_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  3355  006094  0012               	return		;funcret
  3356  006096                     __end_of_UART1_is_tx_ready:
  3357                           	opt callstack 0
  3358                           
  3359 ;; *************** function _secs_II_message *****************
  3360 ;; Defined at:
  3361 ;;		line 459 in file "gemsecs.c"
  3362 ;; Parameters:    Size  Location     Type
  3363 ;;  stream          1  [STACK] unsigned char 
  3364 ;;  function        1  [STACK] unsigned char 
  3365 ;; Auto vars:     Size  Location     Type
  3366 ;;		None
  3367 ;; Return value:  Size  Location     Type
  3368 ;;                  7  [STACK] struct response_type
  3369 ;; Registers used:
  3370 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  3371 ;; Tracked objects:
  3372 ;;		On entry : 3F/0
  3373 ;;		On exit  : 3E/0
  3374 ;;		Unchanged: 0/0
  3375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3380 ;;Total ram usage:        0 bytes
  3381 ;; Hardware stack levels used:    1
  3382 ;; Hardware stack levels required when called:    3
  3383 ;; This function calls:
  3384 ;;		Nothing
  3385 ;; This function is called by:
  3386 ;;		_t_protocol
  3387 ;; This function uses a reentrant model
  3388 ;;
  3389                           
  3390                           	psect	text6
  3391  00412A                     __ptext6:
  3392                           	opt callstack 0
  3393  00412A                     _secs_II_message:
  3394                           	opt callstack 0
  3395                           
  3396                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 var
      +                          gsize = 0, retsize = 7 argfudge = 5
  3397  00412A  0E05               	movlw	5
  3398  00412C  26E1               	addwf	fsr1l,f,c
  3399  00412E  0E00               	movlw	0
  3400  004130  22E2               	addwfc	fsr1h,f,c
  3401                           
  3402                           ;gemsecs.c: 459: response_type secs_II_message(uint8_t stream, uint8_t function);gemsecs
      +                          .c: 460: {;gemsecs.c: 461:  static response_type block;;gemsecs.c: 463:  V.abort = LINK_
      +                          ERROR_NONE;
  3403                           
  3404                           ;incstack = 0
  3405  004132  0100               	movlb	0	; () banked
  3406  004134  6BEA               	clrf	(_V+80)& (0+255),b
  3407                           
  3408                           ;gemsecs.c: 464:  V.queue = 0;
  3409  004136  99F1               	bcf	(_V+87)& (0+255),4,b
  3410                           
  3411                           ;gemsecs.c: 465:  block.respond = 0;
  3412  004138  9007               	bcf	secs_II_message@block+6,0,c
  3413                           
  3414                           ;gemsecs.c: 467:  switch (stream) {
  3415  00413A  D0F3               	goto	l6101
  3416  00413C                     l5969:
  3417                           
  3418                           ; BSR set to: 0
  3419                           ;gemsecs.c: 471:    block.header = (uint8_t*) & H12[0];
  3420  00413C  0E41               	movlw	low _H12
  3421  00413E  6E01               	movwf	secs_II_message@block,c
  3422  004140  0E01               	movlw	high _H12
  3423  004142  6E02               	movwf	secs_II_message@block+1,c
  3424                           
  3425                           ; BSR set to: 0
  3426                           ;gemsecs.c: 472:    block.length = sizeof(header12);
  3427  004144  0E0F               	movlw	15
  3428  004146  6E03               	movwf	secs_II_message@block+2,c
  3429                           
  3430                           ; BSR set to: 0
  3431                           ;gemsecs.c: 473:    H12[0].block.block.systemb = V.systemb;
  3432  004148  C0E3  F145         	movff	_V+73,_H12+4
  3433  00414C  C0E4  F146         	movff	_V+74,_H12+5
  3434  004150  C0E5  F147         	movff	_V+75,_H12+6
  3435  004154  C0E6  F148         	movff	_V+76,_H12+7
  3436                           
  3437                           ; BSR set to: 0
  3438                           ;gemsecs.c: 474:    H10[0].block.block.systemb = V.systemb;
  3439  004158  C0E3  F102         	movff	_V+73,_H10+2
  3440  00415C  C0E4  F103         	movff	_V+74,_H10+3
  3441  004160  C0E5  F104         	movff	_V+75,_H10+4
  3442  004164  C0E6  F105         	movff	_V+76,_H10+5
  3443                           
  3444                           ; BSR set to: 0
  3445                           ;gemsecs.c: 475:    block.respond = 1;
  3446  004168  8007               	bsf	secs_II_message@block+6,0,c
  3447                           
  3448                           ; BSR set to: 0
  3449                           ;gemsecs.c: 476:    block.reply = (uint8_t*) & H10[0];
  3450  00416A  0E00               	movlw	low _H10
  3451  00416C  6E04               	movwf	secs_II_message@block+3,c
  3452  00416E  0E01               	movlw	high _H10
  3453  004170  6E05               	movwf	secs_II_message@block+4,c
  3454                           
  3455                           ;gemsecs.c: 477:    block.reply_length = sizeof(header10);
  3456  004172  0E0D               	movlw	13
  3457  004174                     L8:
  3458  004174  6E06               	movwf	secs_II_message@block+5,c
  3459                           
  3460                           ; BSR set to: 0
  3461                           ;gemsecs.c: 478:    V.queue = 1;
  3462  004176  89F1               	bsf	(_V+87)& (0+255),4,b
  3463                           
  3464                           ;gemsecs.c: 479:    break;
  3465  004178  D0ED               	goto	l6103
  3466  00417A                     l5983:
  3467                           
  3468                           ; BSR set to: 0
  3469                           ;gemsecs.c: 481:    block.header = (uint8_t*) & H14[0];
  3470  00417A  0E8E               	movlw	low _H14
  3471  00417C  6E01               	movwf	secs_II_message@block,c
  3472  00417E  0E01               	movlw	high _H14
  3473  004180  6E02               	movwf	secs_II_message@block+1,c
  3474                           
  3475                           ; BSR set to: 0
  3476                           ;gemsecs.c: 482:    block.length = sizeof(header14);
  3477  004182  0E11               	movlw	17
  3478  004184  6E03               	movwf	secs_II_message@block+2,c
  3479                           
  3480                           ; BSR set to: 0
  3481                           ;gemsecs.c: 483:    H14[0].block.block.systemb = V.systemb;
  3482  004186  C0E3  F194         	movff	_V+73,_H14+6
  3483  00418A  C0E4  F195         	movff	_V+74,_H14+7
  3484  00418E  C0E5  F196         	movff	_V+75,_H14+8
  3485  004192  C0E6  F197         	movff	_V+76,_H14+9
  3486                           
  3487                           ;gemsecs.c: 484:    break;
  3488  004196  D0DE               	goto	l6103
  3489  004198                     l5989:
  3490                           
  3491                           ; BSR set to: 0
  3492                           ;gemsecs.c: 486:    block.header = (uint8_t*) & H17[0];
  3493  004198  0E7A               	movlw	low _H17
  3494  00419A  6E01               	movwf	secs_II_message@block,c
  3495  00419C  0E01               	movlw	high _H17
  3496  00419E  6E02               	movwf	secs_II_message@block+1,c
  3497                           
  3498                           ; BSR set to: 0
  3499                           ;gemsecs.c: 487:    block.length = sizeof(header17);
  3500  0041A0  0E14               	movlw	20
  3501  0041A2  6E03               	movwf	secs_II_message@block+2,c
  3502                           
  3503                           ; BSR set to: 0
  3504                           ;gemsecs.c: 488:    H17[0].block.block.systemb = V.systemb;
  3505  0041A4  C0E3  F183         	movff	_V+73,_H17+9
  3506  0041A8  C0E4  F184         	movff	_V+74,_H17+10
  3507  0041AC  C0E5  F185         	movff	_V+75,_H17+11
  3508  0041B0  C0E6  F186         	movff	_V+76,_H17+12
  3509                           
  3510                           ; BSR set to: 0
  3511                           ;gemsecs.c: 489:    H12[1].block.block.systemb = V.systemb;
  3512  0041B4  C0E3  F154         	movff	_V+73,_H12+19
  3513  0041B8  C0E4  F155         	movff	_V+74,_H12+20
  3514  0041BC  C0E5  F156         	movff	_V+75,_H12+21
  3515  0041C0  C0E6  F157         	movff	_V+76,_H12+22
  3516                           
  3517                           ; BSR set to: 0
  3518                           ;gemsecs.c: 490:    block.respond = 1;
  3519  0041C4  8007               	bsf	secs_II_message@block+6,0,c
  3520                           
  3521                           ; BSR set to: 0
  3522                           ;gemsecs.c: 491:    block.reply = (uint8_t*) & H12[1];
  3523  0041C6  0E50               	movlw	low (_H12+15)
  3524  0041C8  6E04               	movwf	secs_II_message@block+3,c
  3525  0041CA  0E01               	movlw	high (_H12+15)
  3526  0041CC  6E05               	movwf	secs_II_message@block+4,c
  3527                           
  3528                           ;gemsecs.c: 492:    block.reply_length = sizeof(header12);
  3529  0041CE  0E0F               	movlw	15
  3530  0041D0  D7D1               	goto	L8
  3531  0041D2                     l6003:
  3532                           
  3533                           ; BSR set to: 0
  3534                           ;gemsecs.c: 496:    block.header = (uint8_t*) & H10[2];
  3535  0041D2  0E1A               	movlw	low (_H10+26)
  3536  0041D4  6E01               	movwf	secs_II_message@block,c
  3537  0041D6  0E01               	movlw	high (_H10+26)
  3538  0041D8  6E02               	movwf	secs_II_message@block+1,c
  3539                           
  3540                           ; BSR set to: 0
  3541                           ;gemsecs.c: 497:    block.length = sizeof(header10);
  3542  0041DA  0E0D               	movlw	13
  3543  0041DC  6E03               	movwf	secs_II_message@block+2,c
  3544                           
  3545                           ; BSR set to: 0
  3546                           ;gemsecs.c: 498:    H10[2].block.block.systemb = V.systemb;
  3547  0041DE  C0E3  F11C         	movff	_V+73,_H10+28
  3548  0041E2  C0E4  F11D         	movff	_V+74,_H10+29
  3549  0041E6  C0E5  F11E         	movff	_V+75,_H10+30
  3550  0041EA  C0E6  F11F         	movff	_V+76,_H10+31
  3551                           
  3552                           ; BSR set to: 0
  3553                           ;gemsecs.c: 499:    V.abort = LINK_ERROR_ABORT;
  3554  0041EE  0E07               	movlw	7
  3555  0041F0  6FEA               	movwf	(_V+80)& (0+255),b
  3556                           
  3557                           ;gemsecs.c: 500:    break;
  3558  0041F2  D0B0               	goto	l6103
  3559  0041F4                     l6013:
  3560                           
  3561                           ; BSR set to: 0
  3562                           ;stkvar	_function @ sp[(0)+-7]
  3563  0041F4  0EF9               	movlw	-7
  3564  0041F6  50E3               	movf	plusw1,w,c
  3565  0041F8  6E45               	movwf	btemp+10,c
  3566  0041FA  6A46               	clrf	btemp+11,c
  3567                           
  3568                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3569                           ; Switch size 1, requested type "simple"
  3570                           ; Number of cases is 1, Range of values is 0 to 0
  3571                           ; switch strategies available:
  3572                           ; Name         Instructions Cycles
  3573                           ; simple_byte            4     3 (average)
  3574                           ;	Chosen strategy is simple_byte
  3575  0041FC  5046               	movf	btemp+11,w,c
  3576  0041FE  0A00               	xorlw	0	; case 0
  3577  004200  A4D8               	btfss	status,2,c
  3578  004202  D7E7               	goto	l6003
  3579                           
  3580                           ; BSR set to: 0
  3581                           ; Switch size 1, requested type "simple"
  3582                           ; Number of cases is 3, Range of values is 1 to 13
  3583                           ; switch strategies available:
  3584                           ; Name         Instructions Cycles
  3585                           ; simple_byte           10     6 (average)
  3586                           ;	Chosen strategy is simple_byte
  3587  004204  5045               	movf	btemp+10,w,c
  3588  004206  0A01               	xorlw	1	; case 1
  3589  004208  B4D8               	btfsc	status,2,c
  3590  00420A  D798               	goto	l5969
  3591  00420C  0A02               	xorlw	2	; case 3
  3592  00420E  B4D8               	btfsc	status,2,c
  3593  004210  D7B4               	goto	l5983
  3594  004212  0A0E               	xorlw	14	; case 13
  3595  004214  B4D8               	btfsc	status,2,c
  3596  004216  D7C0               	goto	l5989
  3597  004218  D7DC               	goto	l6003
  3598  00421A                     l6015:
  3599                           
  3600                           ; BSR set to: 0
  3601                           ;gemsecs.c: 506:    block.header = (uint8_t*) & H24[0];
  3602  00421A  0E5F               	movlw	low _H24
  3603  00421C  6E01               	movwf	secs_II_message@block,c
  3604  00421E  0E01               	movlw	high _H24
  3605  004220  6E02               	movwf	secs_II_message@block+1,c
  3606                           
  3607                           ; BSR set to: 0
  3608                           ;gemsecs.c: 507:    block.length = sizeof(header24);
  3609  004222  0E1B               	movlw	27
  3610  004224  6E03               	movwf	secs_II_message@block+2,c
  3611                           
  3612                           ; BSR set to: 0
  3613                           ;gemsecs.c: 508:    H24[0].block.block.systemb = V.systemb;
  3614  004226  C0E3  F16F         	movff	_V+73,_H24+16
  3615  00422A  C0E4  F170         	movff	_V+74,_H24+17
  3616  00422E  C0E5  F171         	movff	_V+75,_H24+18
  3617  004232  C0E6  F172         	movff	_V+76,_H24+19
  3618                           
  3619                           ; BSR set to: 0
  3620                           ;gemsecs.c: 509:    H24[0].data[12] = 12;
  3621  004236  0E0C               	movlw	12
  3622  004238  0101               	movlb	1	; () banked
  3623  00423A  6F6D               	movwf	(_H24+14)& (0+255),b
  3624                           
  3625                           ;gemsecs.c: 510:    break;
  3626  00423C  D08B               	goto	l6103
  3627  00423E                     l6033:
  3628                           
  3629                           ; BSR set to: 0
  3630                           ;stkvar	_function @ sp[(0)+-7]
  3631  00423E  0EF9               	movlw	-7
  3632  004240  50E3               	movf	plusw1,w,c
  3633  004242  6E45               	movwf	btemp+10,c
  3634  004244  6A46               	clrf	btemp+11,c
  3635                           
  3636                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3637                           ; Switch size 1, requested type "simple"
  3638                           ; Number of cases is 1, Range of values is 0 to 0
  3639                           ; switch strategies available:
  3640                           ; Name         Instructions Cycles
  3641                           ; simple_byte            4     3 (average)
  3642                           ;	Chosen strategy is simple_byte
  3643  004246  5046               	movf	btemp+11,w,c
  3644  004248  0A00               	xorlw	0	; case 0
  3645  00424A  A4D8               	btfss	status,2,c
  3646  00424C  D7C2               	goto	l6003
  3647                           
  3648                           ; BSR set to: 0
  3649                           ; Switch size 1, requested type "simple"
  3650                           ; Number of cases is 1, Range of values is 17 to 17
  3651                           ; switch strategies available:
  3652                           ; Name         Instructions Cycles
  3653                           ; simple_byte            4     3 (average)
  3654                           ;	Chosen strategy is simple_byte
  3655  00424E  5045               	movf	btemp+10,w,c
  3656  004250  0A11               	xorlw	17	; case 17
  3657  004252  B4D8               	btfsc	status,2,c
  3658  004254  D7E2               	goto	l6015
  3659  004256  D7BD               	goto	l6003
  3660  004258                     l6035:
  3661                           
  3662                           ; BSR set to: 0
  3663                           ;gemsecs.c: 522:    block.header = (uint8_t*) & H13[0];
  3664  004258  0E9F               	movlw	low _H13
  3665  00425A  6E01               	movwf	secs_II_message@block,c
  3666  00425C  0E01               	movlw	high _H13
  3667  00425E  6E02               	movwf	secs_II_message@block+1,c
  3668                           
  3669                           ; BSR set to: 0
  3670                           ;gemsecs.c: 523:    block.length = sizeof(header13);
  3671  004260  0E10               	movlw	16
  3672  004262  6E03               	movwf	secs_II_message@block+2,c
  3673                           
  3674                           ; BSR set to: 0
  3675                           ;gemsecs.c: 524:    H13[0].block.block.systemb = V.systemb;
  3676  004264  C0E3  F1A4         	movff	_V+73,_H13+5
  3677  004268  C0E4  F1A5         	movff	_V+74,_H13+6
  3678  00426C  C0E5  F1A6         	movff	_V+75,_H13+7
  3679  004270  C0E6  F1A7         	movff	_V+76,_H13+8
  3680                           
  3681                           ;gemsecs.c: 525:    break;
  3682  004274  D06F               	goto	l6103
  3683  004276                     l6051:
  3684                           
  3685                           ; BSR set to: 0
  3686                           ;stkvar	_function @ sp[(0)+-7]
  3687  004276  0EF9               	movlw	-7
  3688  004278  50E3               	movf	plusw1,w,c
  3689  00427A  6E45               	movwf	btemp+10,c
  3690  00427C  6A46               	clrf	btemp+11,c
  3691                           
  3692                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3693                           ; Switch size 1, requested type "simple"
  3694                           ; Number of cases is 1, Range of values is 0 to 0
  3695                           ; switch strategies available:
  3696                           ; Name         Instructions Cycles
  3697                           ; simple_byte            4     3 (average)
  3698                           ;	Chosen strategy is simple_byte
  3699  00427E  5046               	movf	btemp+11,w,c
  3700  004280  0A00               	xorlw	0	; case 0
  3701  004282  A4D8               	btfss	status,2,c
  3702  004284  D7A6               	goto	l6003
  3703                           
  3704                           ; BSR set to: 0
  3705                           ; Switch size 1, requested type "simple"
  3706                           ; Number of cases is 1, Range of values is 11 to 11
  3707                           ; switch strategies available:
  3708                           ; Name         Instructions Cycles
  3709                           ; simple_byte            4     3 (average)
  3710                           ;	Chosen strategy is simple_byte
  3711  004286  5045               	movf	btemp+10,w,c
  3712  004288  0A0B               	xorlw	11	; case 11
  3713  00428A  B4D8               	btfsc	status,2,c
  3714  00428C  D7E5               	goto	l6035
  3715  00428E  D7A1               	goto	l6003
  3716  004290                     l6063:
  3717                           
  3718                           ; BSR set to: 0
  3719                           ;stkvar	_function @ sp[(0)+-7]
  3720  004290  0EF9               	movlw	-7
  3721  004292  50E3               	movf	plusw1,w,c
  3722  004294  6E45               	movwf	btemp+10,c
  3723  004296  6A46               	clrf	btemp+11,c
  3724                           
  3725                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3726                           ; Switch size 1, requested type "simple"
  3727                           ; Number of cases is 1, Range of values is 0 to 0
  3728                           ; switch strategies available:
  3729                           ; Name         Instructions Cycles
  3730                           ; simple_byte            4     3 (average)
  3731                           ;	Chosen strategy is simple_byte
  3732  004298  5046               	movf	btemp+11,w,c
  3733  00429A  0A00               	xorlw	0	; case 0
  3734  00429C  A4D8               	btfss	status,2,c
  3735  00429E  D799               	goto	l6003
  3736                           
  3737                           ; BSR set to: 0
  3738                           ; Switch size 1, requested type "simple"
  3739                           ; Number of cases is 7, Range of values is 1 to 13
  3740                           ; switch strategies available:
  3741                           ; Name         Instructions Cycles
  3742                           ; simple_byte           22    12 (average)
  3743                           ;	Chosen strategy is simple_byte
  3744  0042A0  5045               	movf	btemp+10,w,c
  3745  0042A2  0A01               	xorlw	1	; case 1
  3746  0042A4  B4D8               	btfsc	status,2,c
  3747  0042A6  D056               	goto	l6103
  3748  0042A8  0A02               	xorlw	2	; case 3
  3749  0042AA  B4D8               	btfsc	status,2,c
  3750  0042AC  D053               	goto	l6103
  3751  0042AE  0A06               	xorlw	6	; case 5
  3752  0042B0  B4D8               	btfsc	status,2,c
  3753  0042B2  D050               	goto	l6103
  3754  0042B4  0A02               	xorlw	2	; case 7
  3755  0042B6  B4D8               	btfsc	status,2,c
  3756  0042B8  D04D               	goto	l6103
  3757  0042BA  0A0E               	xorlw	14	; case 9
  3758  0042BC  B4D8               	btfsc	status,2,c
  3759  0042BE  D04A               	goto	l6103
  3760  0042C0  0A02               	xorlw	2	; case 11
  3761  0042C2  B4D8               	btfsc	status,2,c
  3762  0042C4  D047               	goto	l6103
  3763  0042C6  0A06               	xorlw	6	; case 13
  3764  0042C8  B4D8               	btfsc	status,2,c
  3765  0042CA  D044               	goto	l6103
  3766  0042CC  D782               	goto	l6003
  3767  0042CE                     l6065:
  3768                           
  3769                           ; BSR set to: 0
  3770                           ;gemsecs.c: 561:    block.header = (uint8_t*) & H12[0];
  3771  0042CE  0E41               	movlw	low _H12
  3772  0042D0  6E01               	movwf	secs_II_message@block,c
  3773  0042D2  0E01               	movlw	high _H12
  3774  0042D4  6E02               	movwf	secs_II_message@block+1,c
  3775                           
  3776                           ; BSR set to: 0
  3777                           ;gemsecs.c: 562:    block.length = sizeof(header12);
  3778  0042D6  0E0F               	movlw	15
  3779  0042D8  6E03               	movwf	secs_II_message@block+2,c
  3780                           
  3781                           ; BSR set to: 0
  3782                           ;gemsecs.c: 563:    H12[0].block.block.systemb = V.systemb;
  3783  0042DA  C0E3  F145         	movff	_V+73,_H12+4
  3784  0042DE  C0E4  F146         	movff	_V+74,_H12+5
  3785  0042E2  C0E5  F147         	movff	_V+75,_H12+6
  3786  0042E6  C0E6  F148         	movff	_V+76,_H12+7
  3787                           
  3788                           ; BSR set to: 0
  3789                           ;gemsecs.c: 564:    H53[0].block.block.systemb = V.systemb;
  3790  0042EA  C0E3  F2ED         	movff	_V+73,_H53+45
  3791  0042EE  C0E4  F2EE         	movff	_V+74,_H53+46
  3792  0042F2  C0E5  F2EF         	movff	_V+75,_H53+47
  3793  0042F6  C0E6  F2F0         	movff	_V+76,_H53+48
  3794                           
  3795                           ; BSR set to: 0
  3796                           ;gemsecs.c: 565:    block.respond = 1;
  3797  0042FA  8007               	bsf	secs_II_message@block+6,0,c
  3798                           
  3799                           ; BSR set to: 0
  3800                           ;gemsecs.c: 566:    block.reply = (uint8_t*) & H53[0];
  3801  0042FC  0EC0               	movlw	low _H53
  3802  0042FE  6E04               	movwf	secs_II_message@block+3,c
  3803  004300  0E02               	movlw	high _H53
  3804  004302  6E05               	movwf	secs_II_message@block+4,c
  3805                           
  3806                           ;gemsecs.c: 567:    block.reply_length = sizeof(header53);
  3807  004304  0E38               	movlw	56
  3808  004306  D736               	goto	L8
  3809  004308                     l6089:
  3810                           
  3811                           ; BSR set to: 0
  3812                           ;stkvar	_function @ sp[(0)+-7]
  3813  004308  0EF9               	movlw	-7
  3814  00430A  50E3               	movf	plusw1,w,c
  3815  00430C  6E45               	movwf	btemp+10,c
  3816  00430E  6A46               	clrf	btemp+11,c
  3817                           
  3818                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3819                           ; Switch size 1, requested type "simple"
  3820                           ; Number of cases is 1, Range of values is 0 to 0
  3821                           ; switch strategies available:
  3822                           ; Name         Instructions Cycles
  3823                           ; simple_byte            4     3 (average)
  3824                           ;	Chosen strategy is simple_byte
  3825  004310  5046               	movf	btemp+11,w,c
  3826  004312  0A00               	xorlw	0	; case 0
  3827  004314  A4D8               	btfss	status,2,c
  3828  004316  D75D               	goto	l6003
  3829                           
  3830                           ; BSR set to: 0
  3831                           ; Switch size 1, requested type "simple"
  3832                           ; Number of cases is 1, Range of values is 1 to 1
  3833                           ; switch strategies available:
  3834                           ; Name         Instructions Cycles
  3835                           ; simple_byte            4     3 (average)
  3836                           ;	Chosen strategy is simple_byte
  3837  004318  5045               	movf	btemp+10,w,c
  3838  00431A  0A01               	xorlw	1	; case 1
  3839  00431C  B4D8               	btfsc	status,2,c
  3840  00431E  D7D7               	goto	l6065
  3841  004320  D758               	goto	l6003
  3842  004322                     l6101:
  3843                           
  3844                           ; BSR set to: 0
  3845                           ;stkvar	_stream @ sp[(0)+-6]
  3846  004322  0EFA               	movlw	-6
  3847  004324  50E3               	movf	plusw1,w,c
  3848  004326  6E45               	movwf	btemp+10,c
  3849  004328  6A46               	clrf	btemp+11,c
  3850                           
  3851                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3852                           ; Switch size 1, requested type "simple"
  3853                           ; Number of cases is 1, Range of values is 0 to 0
  3854                           ; switch strategies available:
  3855                           ; Name         Instructions Cycles
  3856                           ; simple_byte            4     3 (average)
  3857                           ;	Chosen strategy is simple_byte
  3858  00432A  5046               	movf	btemp+11,w,c
  3859  00432C  0A00               	xorlw	0	; case 0
  3860  00432E  A4D8               	btfss	status,2,c
  3861  004330  D750               	goto	l6003
  3862                           
  3863                           ; BSR set to: 0
  3864                           ; Switch size 1, requested type "simple"
  3865                           ; Number of cases is 5, Range of values is 1 to 10
  3866                           ; switch strategies available:
  3867                           ; Name         Instructions Cycles
  3868                           ; simple_byte           16     9 (average)
  3869                           ;	Chosen strategy is simple_byte
  3870  004332  5045               	movf	btemp+10,w,c
  3871  004334  0A01               	xorlw	1	; case 1
  3872  004336  B4D8               	btfsc	status,2,c
  3873  004338  D75D               	goto	l6013
  3874  00433A  0A03               	xorlw	3	; case 2
  3875  00433C  B4D8               	btfsc	status,2,c
  3876  00433E  D77F               	goto	l6033
  3877  004340  0A04               	xorlw	4	; case 6
  3878  004342  B4D8               	btfsc	status,2,c
  3879  004344  D798               	goto	l6051
  3880  004346  0A0F               	xorlw	15	; case 9
  3881  004348  B4D8               	btfsc	status,2,c
  3882  00434A  D7A2               	goto	l6063
  3883  00434C  0A03               	xorlw	3	; case 10
  3884  00434E  B4D8               	btfsc	status,2,c
  3885  004350  D7DB               	goto	l6089
  3886  004352  D73F               	goto	l6003
  3887  004354                     l6103:
  3888                           
  3889                           ;gemsecs.c: 586:  return(block);
  3890  004354  EE20  F001         	lfsr	2,secs_II_message@block
  3891                           
  3892                           ;stkvar	?_secs_II_message @ sp[(0)+-7]
  3893  004358  0E07               	movlw	7
  3894  00435A  6E3B               	movwf	btemp,c
  3895  00435C  0EF9               	movlw	-7
  3896  00435E                     us329999:
  3897  00435E  006F FF7B FFE3     	movff	postinc2,plusw1
  3898  004364  28E8               	incf	wreg,w,c
  3899  004366  2E3B               	decfsz	btemp,f,c
  3900  004368  D7FA               	bra	us329999
  3901                           
  3902                           ; _secs_II_message: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          7, argsize = 7, vargsize = 0
  3903  00436A  0012               	return		;funcret
  3904  00436C                     __end_of_secs_II_message:
  3905                           	opt callstack 0
  3906                           
  3907 ;; *************** function _sprintf *****************
  3908 ;; Defined at:
  3909 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;  s               1  [STACK] PTR unsigned char 
  3912 ;;		 -> V(88), 
  3913 ;;  fmt             1  [STACK] PTR const unsigned char 
  3914 ;;		 -> STR_15(21), STR_14(20), STR_13(6), STR_12(14), 
  3915 ;;		 -> STR_11(20), STR_10(19), STR_9(20), STR_8(6), 
  3916 ;;		 -> STR_7(6), STR_6(14), STR_5(19), STR_4(15), 
  3917 ;;		 -> STR_2(12), STR_1(17), 
  3918 ;; Auto vars:     Size  Location     Type
  3919 ;;  f               5  [STACK] struct _IO_FILE
  3920 ;;  ap              2  [STACK] PTR void [1]
  3921 ;;		 -> ?_printf(2), ?_sprintf(2), 
  3922 ;;  ret             2    0        int 
  3923 ;; Return value:  Size  Location     Type
  3924 ;;                  2  [STACK] int 
  3925 ;; Registers used:
  3926 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  3927 ;; Tracked objects:
  3928 ;;		On entry : 4/0
  3929 ;;		On exit  : 3F/0
  3930 ;;		Unchanged: 0/0
  3931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3936 ;;Total ram usage:        0 bytes
  3937 ;; Hardware stack levels used:    1
  3938 ;; Hardware stack levels required when called:   11
  3939 ;; This function calls:
  3940 ;;		_vfprintf
  3941 ;; This function is called by:
  3942 ;;		_main
  3943 ;; This function uses a reentrant model
  3944 ;;
  3945                           
  3946                           	psect	text7
  3947  004DA4                     __ptext7:
  3948                           	opt callstack 0
  3949  004DA4                     _sprintf:
  3950                           	opt callstack 0
  3951                           
  3952                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 2 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  3953  004DA4  0E07               	movlw	7
  3954  004DA6  26E1               	addwf	fsr1l,f,c
  3955  004DA8  0E00               	movlw	0
  3956  004DAA  22E2               	addwfc	fsr1h,f,c
  3957                           
  3958                           ;stkvar	?_sprintf @ sp[(-7)+-3]
  3959                           
  3960                           ;incstack = 0
  3961  004DAC  0EF6               	movlw	246
  3962  004DAE  24E1               	addwf	fsr1l,w,c
  3963  004DB0  6E45               	movwf	btemp+10,c
  3964  004DB2  0EFF               	movlw	255
  3965  004DB4  20E2               	addwfc	fsr1h,w,c
  3966  004DB6  6E46               	movwf	btemp+11,c
  3967                           
  3968                           ;stkvar	_ap @ sp[(-7)+5]
  3969  004DB8  0EFF               	movlw	-1
  3970  004DBA  0060  F11B  FFE3   	movff	btemp+11,plusw1
  3971  004DC0  0EFE               	movlw	-2
  3972  004DC2  0060  F117  FFE3   	movff	btemp+10,plusw1
  3973                           
  3974                           ;stkvar	_s @ sp[(-7)+-2]
  3975  004DC8  0EF7               	movlw	-9
  3976  004DCA  006F FF8C  F046    	movff	plusw1,btemp+11
  3977                           
  3978                           ;stkvar	_f @ sp[(-7)+0]
  3979  004DD0  0EF9               	movlw	-7
  3980  004DD2  0060  F11B  FFE3   	movff	btemp+11,plusw1
  3981                           
  3982                           ;stkvar	_f @ sp[(-7)+0]
  3983  004DD8  0EFA               	movlw	250
  3984  004DDA  24E1               	addwf	fsr1l,w,c
  3985  004DDC  6ED9               	movwf	fsr2l,c
  3986  004DDE  0EFF               	movlw	255
  3987  004DE0  20E2               	addwfc	fsr1h,w,c
  3988  004DE2  6EDA               	movwf	fsr2h,c
  3989  004DE4  0E00               	movlw	0
  3990  004DE6  6EDE               	movwf	postinc2,c
  3991  004DE8  0E00               	movlw	0
  3992  004DEA  6EDD               	movwf	postdec2,c
  3993                           
  3994                           ;stkvar	_f @ sp[(-7)+0]
  3995  004DEC  0EFC               	movlw	252
  3996  004DEE  24E1               	addwf	fsr1l,w,c
  3997  004DF0  6ED9               	movwf	fsr2l,c
  3998  004DF2  0EFF               	movlw	255
  3999  004DF4  20E2               	addwfc	fsr1h,w,c
  4000  004DF6  6EDA               	movwf	fsr2h,c
  4001  004DF8  0E00               	movlw	0
  4002  004DFA  6EDE               	movwf	postinc2,c
  4003  004DFC  0E00               	movlw	0
  4004  004DFE  6EDD               	movwf	postdec2,c
  4005                           
  4006                           ;stkvar	_ap @ sp[(-7)+5]
  4007  004E00  0EFE               	movlw	254
  4008  004E02  24E1               	addwf	fsr1l,w,c
  4009  004E04  6E3B               	movwf	btemp,c
  4010  004E06  0EFF               	movlw	255
  4011  004E08  20E2               	addwfc	fsr1h,w,c
  4012  004E0A  6E3C               	movwf	btemp+1,c
  4013  004E0C  0060  F0EF  FFE6   	movff	btemp,postinc1
  4014  004E12  0060  F0F3  FFE6   	movff	btemp+1,postinc1
  4015                           
  4016                           ;stkvar	_fmt @ sp[(-9)+-3]
  4017  004E18  0EF4               	movlw	-12
  4018  004E1A  50E3               	movf	plusw1,w,c
  4019  004E1C  6EE6               	movwf	postinc1,c
  4020                           
  4021                           ;stkvar	_f @ sp[(-10)+0]
  4022  004E1E  0EF6               	movlw	246
  4023  004E20  24E1               	addwf	fsr1l,w,c
  4024  004E22  6E3B               	movwf	btemp,c
  4025  004E24  0EFF               	movlw	255
  4026  004E26  20E2               	addwfc	fsr1h,w,c
  4027  004E28  6E3C               	movwf	btemp+1,c
  4028  004E2A  0060  F0EF  FFE6   	movff	btemp,postinc1
  4029  004E30  0060  F0F3  FFE6   	movff	btemp+1,postinc1
  4030  004E36  ECD2  F028         	call	_vfprintf	;wreg free
  4031                           
  4032                           ; BSR set to: 0
  4033                           ;stkvar	_f @ sp[(-7)+0]
  4034  004E3A  0EFA               	movlw	250
  4035  004E3C  24E1               	addwf	fsr1l,w,c
  4036  004E3E  6ED9               	movwf	fsr2l,c
  4037  004E40  0EFF               	movlw	255
  4038  004E42  20E2               	addwfc	fsr1h,w,c
  4039  004E44  6EDA               	movwf	fsr2h,c
  4040  004E46  50DF               	movf	indf2,w,c
  4041  004E48  6E46               	movwf	btemp+11,c
  4042                           
  4043                           ;stkvar	_s @ sp[(-7)+-2]
  4044  004E4A  0EF7               	movlw	-9
  4045  004E4C  50E3               	movf	plusw1,w,c
  4046  004E4E  2446               	addwf	btemp+11,w,c
  4047  004E50  6ED9               	movwf	fsr2l,c
  4048  004E52  6ADA               	clrf	fsr2h,c
  4049  004E54  0E00               	movlw	0
  4050  004E56  6EDF               	movwf	indf2,c
  4051                           
  4052                           ; BSR set to: 0
  4053                           ; _sprintf: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, args
      +                          ize = 2, vargsize = 0
  4054  004E58  0EF9               	movlw	249
  4055  004E5A  26E1               	addwf	fsr1l,f,c
  4056  004E5C  0EFF               	movlw	255
  4057  004E5E  22E2               	addwfc	fsr1h,f,c
  4058  004E60  52E5               	movf	postdec1,f,c
  4059  004E62  50E7               	movf	indf1,w,c
  4060  004E64  5EE1               	subwf	fsr1l,f,c
  4061  004E66  0E00               	movlw	0
  4062  004E68  5AE2               	subwfb	fsr1h,f,c
  4063  004E6A  0012               	return		;funcret
  4064  004E6C                     __end_of_sprintf:
  4065                           	opt callstack 0
  4066                           
  4067 ;; *************** function _r_protocol *****************
  4068 ;; Defined at:
  4069 ;;		line 207 in file "gemsecs.c"
  4070 ;; Parameters:    Size  Location     Type
  4071 ;;  r_link          1  [STACK] PTR enum E16163
  4072 ;;		 -> V(88), 
  4073 ;; Auto vars:     Size  Location     Type
  4074 ;;  rxData          1  [STACK] unsigned char 
  4075 ;; Return value:  Size  Location     Type
  4076 ;;                  1  [STACK] enum E16901
  4077 ;; Registers used:
  4078 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  4079 ;; Tracked objects:
  4080 ;;		On entry : 0/0
  4081 ;;		On exit  : 0/0
  4082 ;;		Unchanged: 0/0
  4083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4088 ;;Total ram usage:        0 bytes
  4089 ;; Hardware stack levels used:    1
  4090 ;; Hardware stack levels required when called:    5
  4091 ;; This function calls:
  4092 ;;		_StartTimer
  4093 ;;		_TimerDone
  4094 ;;		_UART1_Read
  4095 ;;		_UART1_Write
  4096 ;;		_UART1_is_rx_ready
  4097 ;;		_WaitMs
  4098 ;;		_run_checksum
  4099 ;; This function is called by:
  4100 ;;		_main
  4101 ;; This function uses a reentrant model
  4102 ;;
  4103                           
  4104                           	psect	text8
  4105  0036B6                     __ptext8:
  4106                           	opt callstack 0
  4107  0036B6                     _r_protocol:
  4108                           	opt callstack 0
  4109                           
  4110                           ; BSR set to: 0
  4111                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4112  0036B6  52E6               	movf	postinc1,f,c
  4113                           
  4114                           ;gemsecs.c: 207: LINK_STATES r_protocol(LINK_STATES *r_link);gemsecs.c: 208: {;gemsecs.c
      +                          : 209:  uint8_t rxData;;gemsecs.c: 210:  static uint8_t rxData_l = 0, retry = 3;;gemsecs
      +                          .c: 212:  switch (*r_link) {
  4115                           
  4116                           ;incstack = 0
  4117  0036B8  D13C               	goto	l6465
  4118  0036BA                     l6359:
  4119                           
  4120                           ;gemsecs.c: 214:   if (UART1_is_rx_ready()) {
  4121  0036BA  EC4F  F030         	call	_UART1_is_rx_ready	;wreg free
  4122  0036BE  503B               	movf	btemp,w,c
  4123  0036C0  B4D8               	btfsc	status,2,c
  4124  0036C2  D158               	goto	l6467
  4125                           
  4126                           ;gemsecs.c: 215:    rxData = UART1_Read();
  4127  0036C4  EC79  F02C         	call	_UART1_Read	;wreg free
  4128                           
  4129                           ;stkvar	_rxData @ sp[(-1)+0]
  4130  0036C8  0EFF               	movlw	-1
  4131  0036CA  0060  F0EF  FFE3   	movff	btemp,plusw1
  4132                           
  4133                           ; BSR set to: 57
  4134                           ;gemsecs.c: 216:    if (rxData == 0x05) {
  4135                           ;stkvar	_rxData @ sp[(-1)+0]
  4136  0036D0  0EFF               	movlw	-1
  4137  0036D2  006F FF8C  F03B    	movff	plusw1,btemp
  4138  0036D8  0E05               	movlw	5
  4139  0036DA  183B               	xorwf	btemp,w,c
  4140  0036DC  A4D8               	btfss	status,2,c
  4141  0036DE  D14A               	goto	l6467
  4142                           
  4143                           ; BSR set to: 57
  4144                           ;gemsecs.c: 217:     V.error = LINK_ERROR_NONE;
  4145  0036E0  0100               	movlb	0	; () banked
  4146  0036E2  6BE9               	clrf	(_V+79)& (0+255),b
  4147                           
  4148                           ; BSR set to: 0
  4149                           ;gemsecs.c: 218:     *r_link = LINK_STATE_ENQ;
  4150                           ;stkvar	_r_link @ sp[(-1)+-1]
  4151  0036E4  0EFE               	movlw	-2
  4152  0036E6  50E3               	movf	plusw1,w,c
  4153  0036E8  6ED9               	movwf	fsr2l,c
  4154  0036EA  6ADA               	clrf	fsr2h,c
  4155  0036EC  0E01               	movlw	1
  4156  0036EE  D108               	goto	L13
  4157  0036F0                     l1593:
  4158                           
  4159                           ;gemsecs.c: 223:   rxData_l = 0;
  4160  0036F0  6A2C               	clrf	r_protocol@rxData_l,c
  4161                           
  4162                           ;gemsecs.c: 224:   UART1_Write(0x04);
  4163  0036F2  0E04               	movlw	4
  4164  0036F4  6EE6               	movwf	postinc1,c
  4165  0036F6  EC3B  F02C         	call	_UART1_Write	;wreg free
  4166                           
  4167                           ; BSR set to: 57
  4168                           ;gemsecs.c: 225:   StartTimer(TMR_T2, 2000);
  4169  0036FA  0ED0               	movlw	208
  4170  0036FC  6EE6               	movwf	postinc1,c
  4171  0036FE  0E07               	movlw	7
  4172  003700  6EE6               	movwf	postinc1,c
  4173  003702  0E02               	movlw	2
  4174  003704  6EE6               	movwf	postinc1,c
  4175  003706  ECB7  F02C         	call	_StartTimer	;wreg free
  4176                           
  4177                           ;gemsecs.c: 226:   *r_link = LINK_STATE_EOT;
  4178                           ;stkvar	_r_link @ sp[(-1)+-1]
  4179  00370A  0EFE               	movlw	-2
  4180  00370C  50E3               	movf	plusw1,w,c
  4181  00370E  6ED9               	movwf	fsr2l,c
  4182  003710  6ADA               	clrf	fsr2h,c
  4183  003712  0E02               	movlw	2
  4184  003714  D0F5               	goto	L13
  4185  003716                     l6375:
  4186                           
  4187                           ;gemsecs.c: 234:   if (TimerDone(TMR_T2)) {
  4188  003716  0E02               	movlw	2
  4189  003718  6EE6               	movwf	postinc1,c
  4190  00371A  EC15  F02F         	call	_TimerDone	;wreg free
  4191  00371E  503B               	movf	btemp,w,c
  4192  003720  B4D8               	btfsc	status,2,c
  4193  003722  D017               	goto	l6385
  4194                           
  4195                           ;gemsecs.c: 235:    if (!retry--) {
  4196  003724  065D               	decf	r_protocol@retry,f,c
  4197  003726  285D               	incf	r_protocol@retry,w,c
  4198  003728  A4D8               	btfss	status,2,c
  4199  00372A  D00D               	goto	l6383
  4200                           
  4201                           ;gemsecs.c: 236:     V.error = LINK_ERROR_T2;
  4202  00372C  0E02               	movlw	2
  4203  00372E  0100               	movlb	0	; () banked
  4204  003730  6FE9               	movwf	(_V+79)& (0+255),b
  4205                           
  4206                           ;gemsecs.c: 237:     V.failed_receive = 1;
  4207  003732  51F1               	movf	(_V+87)& (0+255),w,b
  4208  003734  0BF0               	andlw	-16
  4209  003736  0901               	iorlw	1
  4210  003738  6FF1               	movwf	(_V+87)& (0+255),b
  4211                           
  4212                           ; BSR set to: 0
  4213                           ;gemsecs.c: 238:     *r_link = LINK_STATE_NAK;
  4214                           ;stkvar	_r_link @ sp[(-1)+-1]
  4215  00373A  0EFE               	movlw	-2
  4216  00373C  50E3               	movf	plusw1,w,c
  4217  00373E  6ED9               	movwf	fsr2l,c
  4218  003740  6ADA               	clrf	fsr2h,c
  4219  003742  0E05               	movlw	5
  4220  003744  D0DD               	goto	L13
  4221  003746                     l6383:
  4222                           
  4223                           ;gemsecs.c: 240:     *r_link = LINK_STATE_IDLE;
  4224                           ;stkvar	_r_link @ sp[(-1)+-1]
  4225  003746  0EFE               	movlw	-2
  4226  003748  50E3               	movf	plusw1,w,c
  4227  00374A  6ED9               	movwf	fsr2l,c
  4228  00374C  6ADA               	clrf	fsr2h,c
  4229  00374E  0E00               	movlw	0
  4230  003750  D0D7               	goto	L13
  4231  003752                     l6385:
  4232                           
  4233                           ;gemsecs.c: 243:    if (UART1_is_rx_ready()) {
  4234  003752  EC4F  F030         	call	_UART1_is_rx_ready	;wreg free
  4235  003756  503B               	movf	btemp,w,c
  4236  003758  B4D8               	btfsc	status,2,c
  4237  00375A  D10C               	goto	l6467
  4238                           
  4239                           ;gemsecs.c: 244:     rxData = UART1_Read();
  4240  00375C  EC79  F02C         	call	_UART1_Read	;wreg free
  4241                           
  4242                           ;stkvar	_rxData @ sp[(-1)+0]
  4243  003760  0EFF               	movlw	-1
  4244  003762  0060  F0EF  FFE3   	movff	btemp,plusw1
  4245                           
  4246                           ; BSR set to: 57
  4247                           ;gemsecs.c: 245:     if (rxData_l == 0) {
  4248  003768  502C               	movf	r_protocol@rxData_l,w,c
  4249  00376A  A4D8               	btfss	status,2,c
  4250  00376C  D00C               	goto	l6397
  4251                           
  4252                           ; BSR set to: 57
  4253                           ;gemsecs.c: 246:      r_block.length = rxData;
  4254                           ;stkvar	_rxData @ sp[(-1)+0]
  4255  00376E  0EFF               	movlw	-1
  4256  003770  006F FF8C  F06C    	movff	plusw1,_r_block+12
  4257                           
  4258                           ; BSR set to: 57
  4259                           ;gemsecs.c: 247:      run_checksum(0, 1);
  4260  003776  0E01               	movlw	1
  4261  003778  6EE6               	movwf	postinc1,c
  4262  00377A  0E00               	movlw	0
  4263  00377C  6EE6               	movwf	postinc1,c
  4264  00377E  ECF1  F02C         	call	_run_checksum	;wreg free
  4265                           
  4266                           ; BSR set to: 0
  4267                           ;gemsecs.c: 248:      rxData_l++;
  4268  003782  2A2C               	incf	r_protocol@rxData_l,f,c
  4269                           
  4270                           ;gemsecs.c: 249:     } else {
  4271  003784  D0F7               	goto	l6467
  4272  003786                     l6397:
  4273                           
  4274                           ; BSR set to: 57
  4275                           ;gemsecs.c: 253:      if (rxData_l <= sizeof(block10))
  4276  003786  0E0B               	movlw	11
  4277  003788  602C               	cpfslt	r_protocol@rxData_l,c
  4278  00378A  D00C               	goto	l6401
  4279                           
  4280                           ; BSR set to: 57
  4281                           ;gemsecs.c: 254:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  4282                           ;stkvar	_rxData @ sp[(-1)+0]
  4283  00378C  502C               	movf	r_protocol@rxData_l,w,c
  4284  00378E  0819               	sublw	low (_H10+25)
  4285  003790  6ED9               	movwf	fsr2l,c
  4286  003792  0E00               	movlw	0
  4287  003794  A0D8               	btfss	status,0,c
  4288  003796  2AE8               	incf	wreg,f,c
  4289  003798  0801               	sublw	high (_H10+25)
  4290  00379A  6EDA               	movwf	fsr2h,c
  4291  00379C  0EFF               	movlw	-1
  4292  00379E  006F FF8F FFDF     	movff	plusw1,indf2
  4293  0037A4                     l6401:
  4294                           
  4295                           ; BSR set to: 57
  4296                           ;gemsecs.c: 255:      if (rxData_l <= r_block.length)
  4297  0037A4  502C               	movf	r_protocol@rxData_l,w,c
  4298  0037A6  0100               	movlb	0	; () banked
  4299  0037A8  5D6C               	subwf	(_r_block+12)& (0+255),w,b
  4300  0037AA  A0D8               	btfss	status,0,c
  4301  0037AC  D00D               	goto	l6405
  4302                           
  4303                           ; BSR set to: 0
  4304                           ;gemsecs.c: 256:       V.r_checksum = run_checksum(rxData, 0);
  4305  0037AE  0E00               	movlw	0
  4306  0037B0  6EE6               	movwf	postinc1,c
  4307                           
  4308                           ;stkvar	_rxData @ sp[(-2)+0]
  4309  0037B2  0EFE               	movlw	-2
  4310  0037B4  50E3               	movf	plusw1,w,c
  4311  0037B6  6EE6               	movwf	postinc1,c
  4312  0037B8  ECF1  F02C         	call	_run_checksum	;wreg free
  4313  0037BC  0060  F0EC  F0EC   	movff	btemp,_V+82
  4314  0037C2  0060  F0F0  F0ED   	movff	btemp+1,_V+83
  4315  0037C8                     l6405:
  4316                           
  4317                           ; BSR set to: 0
  4318                           ;gemsecs.c: 258:      if (rxData_l == r_block.length + 1)
  4319  0037C8  502C               	movf	r_protocol@rxData_l,w,c
  4320  0037CA  6E45               	movwf	btemp+10,c
  4321  0037CC  6A46               	clrf	btemp+11,c
  4322  0037CE  516C               	movf	(_r_block+12)& (0+255),w,b
  4323  0037D0  6E43               	movwf	btemp+8,c
  4324  0037D2  6A44               	clrf	btemp+9,c
  4325  0037D4  0E01               	movlw	1
  4326  0037D6  2643               	addwf	btemp+8,f,c
  4327  0037D8  0E00               	movlw	0
  4328  0037DA  2244               	addwfc	btemp+9,f,c
  4329  0037DC  5045               	movf	btemp+10,w,c
  4330  0037DE  1843               	xorwf	btemp+8,w,c
  4331  0037E0  E109               	bnz	l6409
  4332  0037E2  5046               	movf	btemp+11,w,c
  4333  0037E4  1844               	xorwf	btemp+9,w,c
  4334  0037E6  A4D8               	btfss	status,2,c
  4335  0037E8  D005               	goto	l6409
  4336                           
  4337                           ; BSR set to: 0
  4338                           ;gemsecs.c: 259:       H10[1].checksum = (uint16_t) rxData << 8;
  4339                           ;stkvar	_rxData @ sp[(-1)+0]
  4340  0037EA  0EFF               	movlw	-1
  4341  0037EC  50E3               	movf	plusw1,w,c
  4342  0037EE  0101               	movlb	1	; () banked
  4343  0037F0  6F0E               	movwf	(_H10+14)& (0+255),b
  4344  0037F2  6B0D               	clrf	(_H10+13)& (0+255),b
  4345  0037F4                     l6409:
  4346                           
  4347                           ;gemsecs.c: 260:      if (rxData_l == r_block.length + 2)
  4348  0037F4  502C               	movf	r_protocol@rxData_l,w,c
  4349  0037F6  6E45               	movwf	btemp+10,c
  4350  0037F8  6A46               	clrf	btemp+11,c
  4351  0037FA  0100               	movlb	0	; () banked
  4352  0037FC  516C               	movf	(_r_block+12)& (0+255),w,b
  4353  0037FE  6E43               	movwf	btemp+8,c
  4354  003800  6A44               	clrf	btemp+9,c
  4355  003802  0E02               	movlw	2
  4356  003804  2643               	addwf	btemp+8,f,c
  4357  003806  0E00               	movlw	0
  4358  003808  2244               	addwfc	btemp+9,f,c
  4359  00380A  5045               	movf	btemp+10,w,c
  4360  00380C  1843               	xorwf	btemp+8,w,c
  4361  00380E  E10A               	bnz	l6413
  4362  003810  5046               	movf	btemp+11,w,c
  4363  003812  1844               	xorwf	btemp+9,w,c
  4364  003814  A4D8               	btfss	status,2,c
  4365  003816  D006               	goto	l6413
  4366                           
  4367                           ; BSR set to: 0
  4368                           ;gemsecs.c: 261:       H10[1].checksum += rxData;
  4369                           ;stkvar	_rxData @ sp[(-1)+0]
  4370  003818  0EFF               	movlw	-1
  4371  00381A  50E3               	movf	plusw1,w,c
  4372  00381C  0101               	movlb	1	; () banked
  4373  00381E  270D               	addwf	(_H10+13)& (0+255),f,b
  4374  003820  0E00               	movlw	0
  4375  003822  230E               	addwfc	(_H10+14)& (0+255),f,b
  4376  003824                     l6413:
  4377                           
  4378                           ;gemsecs.c: 263:      rxData_l++;
  4379  003824  2A2C               	incf	r_protocol@rxData_l,f,c
  4380                           
  4381                           ;gemsecs.c: 264:      if (rxData_l > (r_block.length + 2)) {
  4382  003826  502C               	movf	r_protocol@rxData_l,w,c
  4383  003828  6E45               	movwf	btemp+10,c
  4384  00382A  6A46               	clrf	btemp+11,c
  4385  00382C  0100               	movlb	0	; () banked
  4386  00382E  516C               	movf	(_r_block+12)& (0+255),w,b
  4387  003830  6E43               	movwf	btemp+8,c
  4388  003832  6A44               	clrf	btemp+9,c
  4389  003834  0E02               	movlw	2
  4390  003836  2643               	addwf	btemp+8,f,c
  4391  003838  0E00               	movlw	0
  4392  00383A  2244               	addwfc	btemp+9,f,c
  4393  00383C  5045               	movf	btemp+10,w,c
  4394  00383E  5C43               	subwf	btemp+8,w,c
  4395  003840  5044               	movf	btemp+9,w,c
  4396  003842  0A80               	xorlw	128
  4397  003844  6E3B               	movwf	btemp,c
  4398  003846  5046               	movf	btemp+11,w,c
  4399  003848  0A80               	xorlw	128
  4400  00384A  583B               	subwfb	btemp,w,c
  4401  00384C  B0D8               	btfsc	status,0,c
  4402  00384E  D092               	goto	l6467
  4403                           
  4404                           ; BSR set to: 0
  4405                           ;gemsecs.c: 265:       if (V.r_checksum == H10[1].checksum) {
  4406  003850  0101               	movlb	1	; () banked
  4407  003852  510D               	movf	(_H10+13)& (0+255),w,b
  4408  003854  0100               	movlb	0	; () banked
  4409  003856  19EC               	xorwf	(_V+82)& (0+255),w,b
  4410  003858  E10E               	bnz	l6423
  4411  00385A  0101               	movlb	1	; () banked
  4412  00385C  510E               	movf	(_H10+14)& (0+255),w,b
  4413  00385E  0100               	movlb	0	; () banked
  4414  003860  19ED               	xorwf	(_V+83)& (0+255),w,b
  4415  003862  A4D8               	btfss	status,2,c
  4416  003864  D008               	goto	l6423
  4417                           
  4418                           ; BSR set to: 0
  4419                           ;gemsecs.c: 266:        *r_link = LINK_STATE_ACK;
  4420                           ;stkvar	_r_link @ sp[(-1)+-1]
  4421  003866  0EFE               	movlw	-2
  4422  003868  50E3               	movf	plusw1,w,c
  4423  00386A  6ED9               	movwf	fsr2l,c
  4424  00386C  6ADA               	clrf	fsr2h,c
  4425  00386E  0E03               	movlw	3
  4426  003870  D047               	goto	L13
  4427  003872                     l6421:
  4428  003872  EC79  F02C         	call	_UART1_Read	;wreg free
  4429  003876                     l6423:
  4430                           
  4431                           ;gemsecs.c: 268:        while (UART1_is_rx_ready())
  4432  003876  EC4F  F030         	call	_UART1_is_rx_ready	;wreg free
  4433  00387A  503B               	movf	btemp,w,c
  4434  00387C  A4D8               	btfss	status,2,c
  4435  00387E  D7F9               	goto	l6421
  4436                           
  4437                           ;gemsecs.c: 270:        WaitMs(500);
  4438  003880  0EF4               	movlw	244
  4439  003882  6EE6               	movwf	postinc1,c
  4440  003884  0E01               	movlw	1
  4441  003886  6EE6               	movwf	postinc1,c
  4442  003888  EC5E  F02D         	call	_WaitMs	;wreg free
  4443                           
  4444                           ;gemsecs.c: 271:        V.error = LINK_ERROR_CHECKSUM;
  4445  00388C  0E05               	movlw	5
  4446  00388E  0100               	movlb	0	; () banked
  4447  003890  6FE9               	movwf	(_V+79)& (0+255),b
  4448                           
  4449                           ; BSR set to: 0
  4450                           ;gemsecs.c: 272:        V.failed_receive = 2;
  4451  003892  51F1               	movf	(_V+87)& (0+255),w,b
  4452  003894  0BF0               	andlw	-16
  4453  003896  0902               	iorlw	2
  4454  003898  D74F               	goto	L14
  4455  00389A                     l6433:
  4456                           
  4457                           ;gemsecs.c: 281:   V.stream = H10[1].block.block.stream;
  4458  00389A  0101               	movlb	1	; () banked
  4459  00389C  5116               	movf	(_H10+22)& (0+255),w,b
  4460  00389E  0B7F               	andlw	127
  4461  0038A0  0100               	movlb	0	; () banked
  4462  0038A2  6FE7               	movwf	(_V+77)& (0+255),b
  4463                           
  4464                           ; BSR set to: 0
  4465                           ;gemsecs.c: 282:   V.function = H10[1].block.block.function;
  4466  0038A4  C115  F0E8         	movff	_H10+21,_V+78
  4467                           
  4468                           ; BSR set to: 0
  4469                           ;gemsecs.c: 283:   V.systemb = H10[1].block.block.systemb;
  4470  0038A8  C10F  F0E3         	movff	_H10+15,_V+73
  4471  0038AC  C110  F0E4         	movff	_H10+16,_V+74
  4472  0038B0  C111  F0E5         	movff	_H10+17,_V+75
  4473  0038B4  C112  F0E6         	movff	_H10+18,_V+76
  4474                           
  4475                           ; BSR set to: 0
  4476                           ;gemsecs.c: 284:   V.rbit = H10[1].block.block.rbit;
  4477  0038B8  0101               	movlb	1	; () banked
  4478  0038BA  AF18               	btfss	(_H10+24)& (0+255),7,b
  4479  0038BC  D003               	bra	u3575
  4480  0038BE  0100               	movlb	0	; () banked
  4481  0038C0  81F0               	bsf	(_V+86)& (0+255),0,b
  4482  0038C2  D002               	bra	u3577
  4483  0038C4                     u3575:
  4484  0038C4  0100               	movlb	0	; () banked
  4485  0038C6  91F0               	bcf	(_V+86)& (0+255),0,b
  4486  0038C8                     u3577:
  4487                           
  4488                           ; BSR set to: 0
  4489                           ;gemsecs.c: 285:   V.wbit = H10[1].block.block.wbit;
  4490  0038C8  0101               	movlb	1	; () banked
  4491  0038CA  AF16               	btfss	(_H10+22)& (0+255),7,b
  4492  0038CC  D003               	bra	u3585
  4493  0038CE  0100               	movlb	0	; () banked
  4494  0038D0  83F0               	bsf	(_V+86)& (0+255),1,b
  4495  0038D2  D002               	bra	u3587
  4496  0038D4                     u3585:
  4497  0038D4  0100               	movlb	0	; () banked
  4498  0038D6  93F0               	bcf	(_V+86)& (0+255),1,b
  4499  0038D8                     u3587:
  4500                           
  4501                           ; BSR set to: 0
  4502                           ;gemsecs.c: 286:   V.ebit = H10[1].block.block.ebit;
  4503  0038D8  0101               	movlb	1	; () banked
  4504  0038DA  AF14               	btfss	(_H10+20)& (0+255),7,b
  4505  0038DC  D003               	bra	u3595
  4506  0038DE  0100               	movlb	0	; () banked
  4507  0038E0  85F0               	bsf	(_V+86)& (0+255),2,b
  4508  0038E2  D002               	bra	u3597
  4509  0038E4                     u3595:
  4510  0038E4  0100               	movlb	0	; () banked
  4511  0038E6  95F0               	bcf	(_V+86)& (0+255),2,b
  4512  0038E8                     u3597:
  4513                           
  4514                           ; BSR set to: 0
  4515                           ;gemsecs.c: 287:   UART1_Write(0x06);
  4516  0038E8  0E06               	movlw	6
  4517  0038EA  6EE6               	movwf	postinc1,c
  4518  0038EC  EC3B  F02C         	call	_UART1_Write	;wreg free
  4519                           
  4520                           ; BSR set to: 57
  4521                           ;gemsecs.c: 288:   V.failed_receive = 0;
  4522  0038F0  0EF0               	movlw	-16
  4523  0038F2  0100               	movlb	0	; () banked
  4524  0038F4  17F1               	andwf	(_V+87)& (0+255),f,b
  4525                           
  4526                           ;gemsecs.c: 289:   *r_link = LINK_STATE_DONE;
  4527                           ;stkvar	_r_link @ sp[(-1)+-1]
  4528  0038F6  0EFE               	movlw	-2
  4529  0038F8  50E3               	movf	plusw1,w,c
  4530  0038FA  6ED9               	movwf	fsr2l,c
  4531  0038FC  6ADA               	clrf	fsr2h,c
  4532  0038FE  0E04               	movlw	4
  4533  003900                     L13:
  4534  003900  6EDF               	movwf	indf2,c
  4535                           
  4536                           ;gemsecs.c: 290:   break;
  4537  003902  D038               	goto	l6467
  4538  003904                     l6449:
  4539                           
  4540                           ;gemsecs.c: 292:   UART1_Write(0x15);
  4541  003904  0E15               	movlw	21
  4542  003906  6EE6               	movwf	postinc1,c
  4543  003908  EC3B  F02C         	call	_UART1_Write	;wreg free
  4544                           
  4545                           ; BSR set to: 57
  4546                           ;gemsecs.c: 293:   *r_link = LINK_STATE_ERROR;
  4547                           ;stkvar	_r_link @ sp[(-1)+-1]
  4548  00390C  0EFE               	movlw	-2
  4549  00390E  50E3               	movf	plusw1,w,c
  4550  003910  6ED9               	movwf	fsr2l,c
  4551  003912  6ADA               	clrf	fsr2h,c
  4552  003914  0E06               	movlw	6
  4553  003916  6EDF               	movwf	indf2,c
  4554                           
  4555                           ;gemsecs.c: 294:   while ((uart1RxCount)) {
  4556  003918  D002               	goto	l6455
  4557  00391A                     l6453:
  4558                           
  4559                           ; BSR set to: 57
  4560                           ;gemsecs.c: 295:    UART1_Read();
  4561  00391A  EC79  F02C         	call	_UART1_Read	;wreg free
  4562  00391E                     l6455:
  4563                           
  4564                           ; BSR set to: 57
  4565                           ;gemsecs.c: 294:   while ((uart1RxCount)) {
  4566  00391E  5035               	movf	_uart1RxCount,w,c	;volatile
  4567  003920  A4D8               	btfss	status,2,c
  4568  003922  D7FB               	goto	l6453
  4569                           
  4570                           ; BSR set to: 57
  4571                           ;gemsecs.c: 297:   retry = 3;
  4572  003924  0E03               	movlw	3
  4573  003926  6E5D               	movwf	r_protocol@retry,c
  4574                           
  4575                           ;gemsecs.c: 298:   break;
  4576  003928  D025               	goto	l6467
  4577  00392A                     l6459:
  4578                           
  4579                           ;gemsecs.c: 302:   V.failed_receive = 0;
  4580  00392A  0EF0               	movlw	-16
  4581  00392C  0100               	movlb	0	; () banked
  4582  00392E  17F1               	andwf	(_V+87)& (0+255),f,b
  4583  003930  D70A               	goto	l6383
  4584  003932                     l6465:
  4585                           
  4586                           ;stkvar	_r_link @ sp[(-1)+-1]
  4587  003932  0EFE               	movlw	-2
  4588  003934  50E3               	movf	plusw1,w,c
  4589  003936  6ED9               	movwf	fsr2l,c
  4590  003938  6ADA               	clrf	fsr2h,c
  4591  00393A  50DF               	movf	indf2,w,c
  4592  00393C  6E45               	movwf	btemp+10,c
  4593  00393E  6A46               	clrf	btemp+11,c
  4594                           
  4595                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4596                           ; Switch size 1, requested type "simple"
  4597                           ; Number of cases is 1, Range of values is 0 to 0
  4598                           ; switch strategies available:
  4599                           ; Name         Instructions Cycles
  4600                           ; simple_byte            4     3 (average)
  4601                           ;	Chosen strategy is simple_byte
  4602  003940  5046               	movf	btemp+11,w,c
  4603  003942  0A00               	xorlw	0	; case 0
  4604  003944  A4D8               	btfss	status,2,c
  4605  003946  D6FF               	goto	l6383
  4606                           
  4607                           ; Switch size 1, requested type "simple"
  4608                           ; Number of cases is 7, Range of values is 0 to 6
  4609                           ; switch strategies available:
  4610                           ; Name         Instructions Cycles
  4611                           ; simple_byte           22    12 (average)
  4612                           ;	Chosen strategy is simple_byte
  4613  003948  5045               	movf	btemp+10,w,c
  4614  00394A  0A00               	xorlw	0	; case 0
  4615  00394C  B4D8               	btfsc	status,2,c
  4616  00394E  D6B5               	goto	l6359
  4617  003950  0A01               	xorlw	1	; case 1
  4618  003952  B4D8               	btfsc	status,2,c
  4619  003954  D6CD               	goto	l1593
  4620  003956  0A03               	xorlw	3	; case 2
  4621  003958  B4D8               	btfsc	status,2,c
  4622  00395A  D6DD               	goto	l6375
  4623  00395C  0A01               	xorlw	1	; case 3
  4624  00395E  B4D8               	btfsc	status,2,c
  4625  003960  D79C               	goto	l6433
  4626  003962  0A07               	xorlw	7	; case 4
  4627  003964  B4D8               	btfsc	status,2,c
  4628  003966  D7E1               	goto	l6459
  4629  003968  0A01               	xorlw	1	; case 5
  4630  00396A  B4D8               	btfsc	status,2,c
  4631  00396C  D7CB               	goto	l6449
  4632  00396E  0A03               	xorlw	3	; case 6
  4633  003970  A4D8               	btfss	status,2,c
  4634  003972  D6E9               	goto	l6383
  4635  003974                     l6467:
  4636                           
  4637                           ;gemsecs.c: 309:  return *r_link;
  4638                           ;stkvar	_r_link @ sp[(-1)+-1]
  4639  003974  0EFE               	movlw	-2
  4640  003976  50E3               	movf	plusw1,w,c
  4641  003978  6ED9               	movwf	fsr2l,c
  4642  00397A  6ADA               	clrf	fsr2h,c
  4643  00397C  50DF               	movf	indf2,w,c
  4644  00397E  6E3B               	movwf	btemp,c
  4645                           
  4646                           ; _r_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  4647  003980  52E5               	movf	postdec1,f,c
  4648  003982  52E5               	movf	postdec1,f,c
  4649  003984  0012               	return		;funcret
  4650  003986                     __end_of_r_protocol:
  4651                           	opt callstack 0
  4652                           
  4653 ;; *************** function _UART1_Write *****************
  4654 ;; Defined at:
  4655 ;;		line 179 in file "mcc_generated_files/uart1.c"
  4656 ;; Parameters:    Size  Location     Type
  4657 ;;  txData          1  [STACK] unsigned char 
  4658 ;; Auto vars:     Size  Location     Type
  4659 ;;		None
  4660 ;; Return value:  Size  Location     Type
  4661 ;;                  1  [STACK] void 
  4662 ;; Registers used:
  4663 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4664 ;; Tracked objects:
  4665 ;;		On entry : 0/0
  4666 ;;		On exit  : 3F/39
  4667 ;;		Unchanged: 0/0
  4668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4673 ;;Total ram usage:        0 bytes
  4674 ;; Hardware stack levels used:    1
  4675 ;; Hardware stack levels required when called:    3
  4676 ;; This function calls:
  4677 ;;		Nothing
  4678 ;; This function is called by:
  4679 ;;		_r_protocol
  4680 ;;		_t_protocol
  4681 ;;		_secs_send
  4682 ;; This function uses a reentrant model
  4683 ;;
  4684                           
  4685                           	psect	text9
  4686  005876                     __ptext9:
  4687                           	opt callstack 0
  4688  005876                     _UART1_Write:
  4689                           	opt callstack 25
  4690                           
  4691                           ;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  4692                           
  4693                           ;mcc_generated_files/uart1.c: 179: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 180: {;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  4694                           
  4695                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4696                           ;incstack = 0
  4697  005876  5038               	movf	_uart1TxBufferRemaining,w,c	;volatile
  4698  005878  B4D8               	btfsc	status,2,c
  4699  00587A  D7FD               	goto	_UART1_Write
  4700                           
  4701                           ;mcc_generated_files/uart1.c: 184:  if (0 == PIE3bits.U1TXIE) {
  4702  00587C  0139               	movlb	57	; () banked
  4703  00587E  B993               	btfsc	147,4,b	;volatile
  4704  005880  D005               	goto	l579
  4705                           
  4706                           ; BSR set to: 57
  4707                           ;mcc_generated_files/uart1.c: 185:   U1TXB = txData;
  4708                           ;stkvar	_txData @ sp[(0)+-1]
  4709  005882  0EFF               	movlw	-1
  4710  005884  006F FF8F FDEA     	movff	plusw1,15850	;volatile
  4711                           
  4712                           ;mcc_generated_files/uart1.c: 186:  } else {
  4713  00588A  D011               	goto	l5639
  4714  00588C                     l579:
  4715                           
  4716                           ; BSR set to: 57
  4717                           ;mcc_generated_files/uart1.c: 187:   PIE3bits.U1TXIE = 0;
  4718  00588C  9993               	bcf	147,4,b	;volatile
  4719                           
  4720                           ; BSR set to: 57
  4721                           ;mcc_generated_files/uart1.c: 188:   uart1TxBuffer[uart1TxHead++] = txData;
  4722                           ;stkvar	_txData @ sp[(0)+-1]
  4723  00588E  0E80               	movlw	low _uart1TxBuffer
  4724  005890  243A               	addwf	_uart1TxHead,w,c	;volatile
  4725  005892  6ED9               	movwf	fsr2l,c
  4726  005894  6ADA               	clrf	fsr2h,c
  4727  005896  0E02               	movlw	high _uart1TxBuffer
  4728  005898  22DA               	addwfc	fsr2h,f,c
  4729  00589A  0EFF               	movlw	-1
  4730  00589C  006F FF8F FFDF     	movff	plusw1,indf2
  4731                           
  4732                           ; BSR set to: 57
  4733  0058A2  2A3A               	incf	_uart1TxHead,f,c	;volatile
  4734                           
  4735                           ; BSR set to: 57
  4736                           ;mcc_generated_files/uart1.c: 189:   if (sizeof(uart1TxBuffer) <= uart1TxHead) {
  4737  0058A4  0E3F               	movlw	63
  4738  0058A6  643A               	cpfsgt	_uart1TxHead,c
  4739  0058A8  D001               	goto	l5637
  4740                           
  4741                           ; BSR set to: 57
  4742                           ;mcc_generated_files/uart1.c: 190:    uart1TxHead = 0;
  4743  0058AA  6A3A               	clrf	_uart1TxHead,c	;volatile
  4744  0058AC                     l5637:
  4745                           
  4746                           ; BSR set to: 57
  4747                           ;mcc_generated_files/uart1.c: 192:   uart1TxBufferRemaining--;
  4748  0058AC  0638               	decf	_uart1TxBufferRemaining,f,c	;volatile
  4749  0058AE                     l5639:
  4750                           
  4751                           ; BSR set to: 57
  4752                           ;mcc_generated_files/uart1.c: 194:  PIE3bits.U1TXIE = 1;
  4753  0058AE  8993               	bsf	147,4,b	;volatile
  4754                           
  4755                           ; BSR set to: 57
  4756                           ; _UART1_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  4757  0058B0  52E5               	movf	postdec1,f,c
  4758  0058B2  0012               	return		;funcret
  4759  0058B4                     __end_of_UART1_Write:
  4760                           	opt callstack 0
  4761                           
  4762 ;; *************** function _m_protocol *****************
  4763 ;; Defined at:
  4764 ;;		line 42 in file "gemsecs.c"
  4765 ;; Parameters:    Size  Location     Type
  4766 ;;  m_link          1  [STACK] PTR enum E16163
  4767 ;;		 -> V(88), 
  4768 ;; Auto vars:     Size  Location     Type
  4769 ;;  rxData          1  [STACK] unsigned char 
  4770 ;; Return value:  Size  Location     Type
  4771 ;;                  1  [STACK] enum E16901
  4772 ;; Registers used:
  4773 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  4774 ;; Tracked objects:
  4775 ;;		On entry : 0/0
  4776 ;;		On exit  : 0/0
  4777 ;;		Unchanged: 0/0
  4778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4783 ;;Total ram usage:        0 bytes
  4784 ;; Hardware stack levels used:    1
  4785 ;; Hardware stack levels required when called:    5
  4786 ;; This function calls:
  4787 ;;		_StartTimer
  4788 ;;		_TimerDone
  4789 ;;		_UART1_Read
  4790 ;;		_UART1_is_rx_ready
  4791 ;;		_UART2_Read
  4792 ;;		_UART2_is_rx_ready
  4793 ;;		_WaitMs
  4794 ;;		_run_checksum
  4795 ;; This function is called by:
  4796 ;;		_main
  4797 ;; This function uses a reentrant model
  4798 ;;
  4799                           
  4800                           	psect	text10
  4801  0020A8                     __ptext10:
  4802                           	opt callstack 0
  4803  0020A8                     _m_protocol:
  4804                           	opt callstack 0
  4805                           
  4806                           ; BSR set to: 57
  4807                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4808  0020A8  52E6               	movf	postinc1,f,c
  4809                           
  4810                           ;gemsecs.c: 42: LINK_STATES m_protocol(LINK_STATES *m_link);gemsecs.c: 43: {;gemsecs.c: 
      +                          44:  uint8_t rxData;;gemsecs.c: 45:  static uint8_t rxData_l = 0;;gemsecs.c: 47:  switch
      +                           (*m_link) {
  4811                           
  4812                           ;incstack = 0
  4813  0020AA  D258               	goto	l6785
  4814  0020AC                     l6585:
  4815                           
  4816                           ;gemsecs.c: 49:   if (UART1_is_rx_ready()) {
  4817  0020AC  EC4F  F030         	call	_UART1_is_rx_ready	;wreg free
  4818  0020B0  503B               	movf	btemp,w,c
  4819  0020B2  B4D8               	btfsc	status,2,c
  4820  0020B4  D020               	goto	l6599
  4821                           
  4822                           ;gemsecs.c: 50:    rxData = UART1_Read();
  4823  0020B6  EC79  F02C         	call	_UART1_Read	;wreg free
  4824                           
  4825                           ;stkvar	_rxData @ sp[(-1)+0]
  4826  0020BA  0EFF               	movlw	-1
  4827  0020BC  0060  F0EF  FFE3   	movff	btemp,plusw1
  4828                           
  4829                           ; BSR set to: 57
  4830                           ;gemsecs.c: 51:    if (rxData == 0x05) {
  4831                           ;stkvar	_rxData @ sp[(-1)+0]
  4832  0020C2  0EFF               	movlw	-1
  4833  0020C4  006F FF8C  F03B    	movff	plusw1,btemp
  4834  0020CA  0E05               	movlw	5
  4835  0020CC  183B               	xorwf	btemp,w,c
  4836  0020CE  A4D8               	btfss	status,2,c
  4837  0020D0  D012               	goto	l6599
  4838                           
  4839                           ; BSR set to: 57
  4840                           ;gemsecs.c: 52:     V.uart = 0;
  4841  0020D2  0100               	movlb	0	; () banked
  4842  0020D4  9FF1               	bcf	(_V+87)& (0+255),7,b
  4843                           
  4844                           ; BSR set to: 0
  4845                           ;gemsecs.c: 53:     StartTimer(TMR_T2, 2000);
  4846  0020D6  0ED0               	movlw	208
  4847  0020D8  6EE6               	movwf	postinc1,c
  4848  0020DA  0E07               	movlw	7
  4849  0020DC  6EE6               	movwf	postinc1,c
  4850  0020DE  0E02               	movlw	2
  4851  0020E0  6EE6               	movwf	postinc1,c
  4852  0020E2  ECB7  F02C         	call	_StartTimer	;wreg free
  4853                           
  4854                           ;gemsecs.c: 54:     V.error = LINK_ERROR_NONE;
  4855  0020E6  0100               	movlb	0	; () banked
  4856  0020E8  6BE9               	clrf	(_V+79)& (0+255),b
  4857                           
  4858                           ; BSR set to: 0
  4859                           ;gemsecs.c: 55:     *m_link = LINK_STATE_ENQ;
  4860                           ;stkvar	_m_link @ sp[(-1)+-1]
  4861  0020EA  0EFE               	movlw	-2
  4862  0020EC  50E3               	movf	plusw1,w,c
  4863  0020EE  6ED9               	movwf	fsr2l,c
  4864  0020F0  6ADA               	clrf	fsr2h,c
  4865  0020F2  0E01               	movlw	1
  4866  0020F4  6EDF               	movwf	indf2,c
  4867  0020F6                     l6599:
  4868                           
  4869                           ;gemsecs.c: 58:   if (UART2_is_rx_ready()) {
  4870  0020F6  EC4B  F030         	call	_UART2_is_rx_ready	;wreg free
  4871  0020FA  503B               	movf	btemp,w,c
  4872  0020FC  B4D8               	btfsc	status,2,c
  4873  0020FE  D24F               	goto	l6787
  4874                           
  4875                           ;gemsecs.c: 59:    rxData = UART2_Read();
  4876  002100  EC5A  F02C         	call	_UART2_Read	;wreg free
  4877                           
  4878                           ;stkvar	_rxData @ sp[(-1)+0]
  4879  002104  0EFF               	movlw	-1
  4880  002106  0060  F0EF  FFE3   	movff	btemp,plusw1
  4881                           
  4882                           ; BSR set to: 57
  4883                           ;gemsecs.c: 60:    if (rxData == 0x05) {
  4884                           ;stkvar	_rxData @ sp[(-1)+0]
  4885  00210C  0EFF               	movlw	-1
  4886  00210E  006F FF8C  F03B    	movff	plusw1,btemp
  4887  002114  0E05               	movlw	5
  4888  002116  183B               	xorwf	btemp,w,c
  4889  002118  A4D8               	btfss	status,2,c
  4890  00211A  D241               	goto	l6787
  4891                           
  4892                           ; BSR set to: 57
  4893                           ;gemsecs.c: 61:     V.uart = 1;
  4894  00211C  0100               	movlb	0	; () banked
  4895  00211E  8FF1               	bsf	(_V+87)& (0+255),7,b
  4896                           
  4897                           ; BSR set to: 0
  4898                           ;gemsecs.c: 62:     StartTimer(TMR_T2, 2000);
  4899  002120  0ED0               	movlw	208
  4900  002122  6EE6               	movwf	postinc1,c
  4901  002124  0E07               	movlw	7
  4902  002126  6EE6               	movwf	postinc1,c
  4903  002128  0E02               	movlw	2
  4904  00212A  6EE6               	movwf	postinc1,c
  4905  00212C  ECB7  F02C         	call	_StartTimer	;wreg free
  4906                           
  4907                           ;gemsecs.c: 63:     V.error = LINK_ERROR_NONE;
  4908  002130  0100               	movlb	0	; () banked
  4909  002132  6BE9               	clrf	(_V+79)& (0+255),b
  4910                           
  4911                           ; BSR set to: 0
  4912                           ;gemsecs.c: 64:     *m_link = LINK_STATE_ENQ;
  4913                           ;stkvar	_m_link @ sp[(-1)+-1]
  4914  002134  0EFE               	movlw	-2
  4915  002136  50E3               	movf	plusw1,w,c
  4916  002138  6ED9               	movwf	fsr2l,c
  4917  00213A  6ADA               	clrf	fsr2h,c
  4918  00213C  0E01               	movlw	1
  4919  00213E  D20C               	goto	L21
  4920  002140                     l6613:
  4921                           
  4922                           ;gemsecs.c: 69:   if (TimerDone(TMR_T2)) {
  4923  002140  0E02               	movlw	2
  4924  002142  6EE6               	movwf	postinc1,c
  4925  002144  EC15  F02F         	call	_TimerDone	;wreg free
  4926  002148  503B               	movf	btemp,w,c
  4927  00214A  B4D8               	btfsc	status,2,c
  4928  00214C  D00D               	goto	l6619
  4929                           
  4930                           ;gemsecs.c: 70:    V.error = LINK_ERROR_T2;
  4931  00214E  0E02               	movlw	2
  4932  002150  0100               	movlb	0	; () banked
  4933  002152  6FE9               	movwf	(_V+79)& (0+255),b
  4934                           
  4935                           ;gemsecs.c: 71:    V.failed_receive = 1;
  4936  002154  51F1               	movf	(_V+87)& (0+255),w,b
  4937  002156  0BF0               	andlw	-16
  4938  002158  0901               	iorlw	1
  4939  00215A                     L18:
  4940  00215A  6FF1               	movwf	(_V+87)& (0+255),b
  4941                           
  4942                           ; BSR set to: 0
  4943                           ;gemsecs.c: 72:    *m_link = LINK_STATE_NAK;
  4944                           ;stkvar	_m_link @ sp[(-1)+-1]
  4945  00215C  0EFE               	movlw	-2
  4946  00215E  50E3               	movf	plusw1,w,c
  4947  002160  6ED9               	movwf	fsr2l,c
  4948  002162  6ADA               	clrf	fsr2h,c
  4949  002164  0E05               	movlw	5
  4950  002166  D1F8               	goto	L21
  4951  002168                     l6619:
  4952                           
  4953                           ;gemsecs.c: 74:    if (UART1_is_rx_ready()) {
  4954  002168  EC4F  F030         	call	_UART1_is_rx_ready	;wreg free
  4955  00216C  503B               	movf	btemp,w,c
  4956  00216E  B4D8               	btfsc	status,2,c
  4957  002170  D021               	goto	l6633
  4958                           
  4959                           ;gemsecs.c: 75:     rxData = UART1_Read();
  4960  002172  EC79  F02C         	call	_UART1_Read	;wreg free
  4961                           
  4962                           ;stkvar	_rxData @ sp[(-1)+0]
  4963  002176  0EFF               	movlw	-1
  4964  002178  0060  F0EF  FFE3   	movff	btemp,plusw1
  4965                           
  4966                           ; BSR set to: 57
  4967                           ;gemsecs.c: 76:     if (rxData == 0x04) {
  4968                           ;stkvar	_rxData @ sp[(-1)+0]
  4969  00217E  0EFF               	movlw	-1
  4970  002180  006F FF8C  F03B    	movff	plusw1,btemp
  4971  002186  0E04               	movlw	4
  4972  002188  183B               	xorwf	btemp,w,c
  4973  00218A  A4D8               	btfss	status,2,c
  4974  00218C  D013               	goto	l6633
  4975                           
  4976                           ; BSR set to: 57
  4977                           ;gemsecs.c: 77:      V.uart = 1;
  4978  00218E  0100               	movlb	0	; () banked
  4979  002190  8FF1               	bsf	(_V+87)& (0+255),7,b
  4980                           
  4981                           ;gemsecs.c: 78:      rxData_l = 0;
  4982  002192  6A2D               	clrf	m_protocol@rxData_l,c
  4983                           
  4984                           ; BSR set to: 0
  4985                           ;gemsecs.c: 79:      StartTimer(TMR_T2, 2000);
  4986  002194  0ED0               	movlw	208
  4987  002196  6EE6               	movwf	postinc1,c
  4988  002198  0E07               	movlw	7
  4989  00219A  6EE6               	movwf	postinc1,c
  4990  00219C  0E02               	movlw	2
  4991  00219E  6EE6               	movwf	postinc1,c
  4992  0021A0  ECB7  F02C         	call	_StartTimer	;wreg free
  4993                           
  4994                           ;gemsecs.c: 80:      V.error = LINK_ERROR_NONE;
  4995  0021A4  0100               	movlb	0	; () banked
  4996  0021A6  6BE9               	clrf	(_V+79)& (0+255),b
  4997                           
  4998                           ; BSR set to: 0
  4999                           ;gemsecs.c: 81:      *m_link = LINK_STATE_EOT;
  5000                           ;stkvar	_m_link @ sp[(-1)+-1]
  5001  0021A8  0EFE               	movlw	-2
  5002  0021AA  50E3               	movf	plusw1,w,c
  5003  0021AC  6ED9               	movwf	fsr2l,c
  5004  0021AE  6ADA               	clrf	fsr2h,c
  5005  0021B0  0E02               	movlw	2
  5006  0021B2  6EDF               	movwf	indf2,c
  5007  0021B4                     l6633:
  5008                           
  5009                           ;gemsecs.c: 84:    if (UART2_is_rx_ready()) {
  5010  0021B4  EC4B  F030         	call	_UART2_is_rx_ready	;wreg free
  5011  0021B8  503B               	movf	btemp,w,c
  5012  0021BA  B4D8               	btfsc	status,2,c
  5013  0021BC  D1F0               	goto	l6787
  5014                           
  5015                           ;gemsecs.c: 85:     rxData = UART2_Read();
  5016  0021BE  EC5A  F02C         	call	_UART2_Read	;wreg free
  5017                           
  5018                           ;stkvar	_rxData @ sp[(-1)+0]
  5019  0021C2  0EFF               	movlw	-1
  5020  0021C4  0060  F0EF  FFE3   	movff	btemp,plusw1
  5021                           
  5022                           ; BSR set to: 57
  5023                           ;gemsecs.c: 86:     if (rxData == 0x04) {
  5024                           ;stkvar	_rxData @ sp[(-1)+0]
  5025  0021CA  0EFF               	movlw	-1
  5026  0021CC  006F FF8C  F03B    	movff	plusw1,btemp
  5027  0021D2  0E04               	movlw	4
  5028  0021D4  183B               	xorwf	btemp,w,c
  5029  0021D6  A4D8               	btfss	status,2,c
  5030  0021D8  D1E2               	goto	l6787
  5031                           
  5032                           ; BSR set to: 57
  5033                           ;gemsecs.c: 87:      V.uart = 0;
  5034  0021DA  0100               	movlb	0	; () banked
  5035  0021DC  9FF1               	bcf	(_V+87)& (0+255),7,b
  5036                           
  5037                           ;gemsecs.c: 88:      rxData_l = 0;
  5038  0021DE  6A2D               	clrf	m_protocol@rxData_l,c
  5039                           
  5040                           ; BSR set to: 0
  5041                           ;gemsecs.c: 89:      StartTimer(TMR_T2, 2000);
  5042  0021E0  0ED0               	movlw	208
  5043  0021E2  6EE6               	movwf	postinc1,c
  5044  0021E4  0E07               	movlw	7
  5045  0021E6  6EE6               	movwf	postinc1,c
  5046  0021E8  0E02               	movlw	2
  5047  0021EA  6EE6               	movwf	postinc1,c
  5048  0021EC  ECB7  F02C         	call	_StartTimer	;wreg free
  5049                           
  5050                           ;gemsecs.c: 90:      V.error = LINK_ERROR_NONE;
  5051  0021F0  0100               	movlb	0	; () banked
  5052  0021F2  6BE9               	clrf	(_V+79)& (0+255),b
  5053                           
  5054                           ; BSR set to: 0
  5055                           ;gemsecs.c: 91:      *m_link = LINK_STATE_EOT;
  5056                           ;stkvar	_m_link @ sp[(-1)+-1]
  5057  0021F4  0EFE               	movlw	-2
  5058  0021F6  50E3               	movf	plusw1,w,c
  5059  0021F8  6ED9               	movwf	fsr2l,c
  5060  0021FA  6ADA               	clrf	fsr2h,c
  5061  0021FC  0E02               	movlw	2
  5062  0021FE  D1AC               	goto	L21
  5063  002200                     l6647:
  5064                           
  5065                           ;gemsecs.c: 97:   if (TimerDone(TMR_T2)) {
  5066  002200  0E02               	movlw	2
  5067  002202  6EE6               	movwf	postinc1,c
  5068  002204  EC15  F02F         	call	_TimerDone	;wreg free
  5069  002208  503B               	movf	btemp,w,c
  5070  00220A  B4D8               	btfsc	status,2,c
  5071  00220C  D007               	goto	l6653
  5072                           
  5073                           ;gemsecs.c: 98:    V.error = LINK_ERROR_T2;
  5074  00220E  0E02               	movlw	2
  5075  002210  0100               	movlb	0	; () banked
  5076  002212  6FE9               	movwf	(_V+79)& (0+255),b
  5077                           
  5078                           ;gemsecs.c: 99:    V.failed_receive = 2;
  5079  002214  51F1               	movf	(_V+87)& (0+255),w,b
  5080  002216  0BF0               	andlw	-16
  5081  002218  0902               	iorlw	2
  5082  00221A  D79F               	goto	L18
  5083  00221C                     l6653:
  5084                           
  5085                           ;gemsecs.c: 102:    if (UART1_is_rx_ready() && (V.uart == 0)) {
  5086  00221C  EC4F  F030         	call	_UART1_is_rx_ready	;wreg free
  5087  002220  503B               	movf	btemp,w,c
  5088  002222  B4D8               	btfsc	status,2,c
  5089  002224  D0A8               	goto	l6703
  5090  002226  0100               	movlb	0	; () banked
  5091  002228  BFF1               	btfsc	(_V+87)& (0+255),7,b
  5092  00222A  D0A5               	goto	l6703
  5093                           
  5094                           ; BSR set to: 0
  5095                           ;gemsecs.c: 103:     rxData = UART1_Read();
  5096  00222C  EC79  F02C         	call	_UART1_Read	;wreg free
  5097                           
  5098                           ;stkvar	_rxData @ sp[(-1)+0]
  5099  002230  0EFF               	movlw	-1
  5100  002232  0060  F0EF  FFE3   	movff	btemp,plusw1
  5101                           
  5102                           ; BSR set to: 57
  5103                           ;gemsecs.c: 104:     if (rxData_l == 0) {
  5104  002238  502D               	movf	m_protocol@rxData_l,w,c
  5105  00223A  A4D8               	btfss	status,2,c
  5106  00223C  D00C               	goto	l6667
  5107                           
  5108                           ; BSR set to: 57
  5109                           ;gemsecs.c: 105:      r_block.length = rxData;
  5110                           ;stkvar	_rxData @ sp[(-1)+0]
  5111  00223E  0EFF               	movlw	-1
  5112  002240  006F FF8C  F06C    	movff	plusw1,_r_block+12
  5113                           
  5114                           ; BSR set to: 57
  5115                           ;gemsecs.c: 106:      run_checksum(0, 1);
  5116  002246  0E01               	movlw	1
  5117  002248  6EE6               	movwf	postinc1,c
  5118  00224A  0E00               	movlw	0
  5119  00224C  6EE6               	movwf	postinc1,c
  5120  00224E  ECF1  F02C         	call	_run_checksum	;wreg free
  5121                           
  5122                           ; BSR set to: 0
  5123                           ;gemsecs.c: 107:      rxData_l++;
  5124  002252  2A2D               	incf	m_protocol@rxData_l,f,c
  5125                           
  5126                           ;gemsecs.c: 108:     } else {
  5127  002254  D090               	goto	l6703
  5128  002256                     l6667:
  5129                           
  5130                           ; BSR set to: 57
  5131                           ;gemsecs.c: 112:      if (rxData_l <= sizeof(block10))
  5132  002256  0E0B               	movlw	11
  5133  002258  602D               	cpfslt	m_protocol@rxData_l,c
  5134  00225A  D00C               	goto	l6671
  5135                           
  5136                           ; BSR set to: 57
  5137                           ;gemsecs.c: 113:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  5138                           ;stkvar	_rxData @ sp[(-1)+0]
  5139  00225C  502D               	movf	m_protocol@rxData_l,w,c
  5140  00225E  0819               	sublw	low (_H10+25)
  5141  002260  6ED9               	movwf	fsr2l,c
  5142  002262  0E00               	movlw	0
  5143  002264  A0D8               	btfss	status,0,c
  5144  002266  2AE8               	incf	wreg,f,c
  5145  002268  0801               	sublw	high (_H10+25)
  5146  00226A  6EDA               	movwf	fsr2h,c
  5147  00226C  0EFF               	movlw	-1
  5148  00226E  006F FF8F FFDF     	movff	plusw1,indf2
  5149  002274                     l6671:
  5150                           
  5151                           ; BSR set to: 57
  5152                           ;gemsecs.c: 114:      if (rxData_l <= r_block.length)
  5153  002274  502D               	movf	m_protocol@rxData_l,w,c
  5154  002276  0100               	movlb	0	; () banked
  5155  002278  5D6C               	subwf	(_r_block+12)& (0+255),w,b
  5156  00227A  A0D8               	btfss	status,0,c
  5157  00227C  D00D               	goto	l6675
  5158                           
  5159                           ; BSR set to: 0
  5160                           ;gemsecs.c: 115:       V.r_checksum = run_checksum(rxData, 0);
  5161  00227E  0E00               	movlw	0
  5162  002280  6EE6               	movwf	postinc1,c
  5163                           
  5164                           ;stkvar	_rxData @ sp[(-2)+0]
  5165  002282  0EFE               	movlw	-2
  5166  002284  50E3               	movf	plusw1,w,c
  5167  002286  6EE6               	movwf	postinc1,c
  5168  002288  ECF1  F02C         	call	_run_checksum	;wreg free
  5169  00228C  0060  F0EC  F0EC   	movff	btemp,_V+82
  5170  002292  0060  F0F0  F0ED   	movff	btemp+1,_V+83
  5171  002298                     l6675:
  5172                           
  5173                           ; BSR set to: 0
  5174                           ;gemsecs.c: 117:      if (rxData_l == r_block.length + 1)
  5175  002298  502D               	movf	m_protocol@rxData_l,w,c
  5176  00229A  6E45               	movwf	btemp+10,c
  5177  00229C  6A46               	clrf	btemp+11,c
  5178  00229E  516C               	movf	(_r_block+12)& (0+255),w,b
  5179  0022A0  6E43               	movwf	btemp+8,c
  5180  0022A2  6A44               	clrf	btemp+9,c
  5181  0022A4  0E01               	movlw	1
  5182  0022A6  2643               	addwf	btemp+8,f,c
  5183  0022A8  0E00               	movlw	0
  5184  0022AA  2244               	addwfc	btemp+9,f,c
  5185  0022AC  5045               	movf	btemp+10,w,c
  5186  0022AE  1843               	xorwf	btemp+8,w,c
  5187  0022B0  E109               	bnz	l6679
  5188  0022B2  5046               	movf	btemp+11,w,c
  5189  0022B4  1844               	xorwf	btemp+9,w,c
  5190  0022B6  A4D8               	btfss	status,2,c
  5191  0022B8  D005               	goto	l6679
  5192                           
  5193                           ; BSR set to: 0
  5194                           ;gemsecs.c: 118:       H10[1].checksum = (uint16_t) rxData << 8;
  5195                           ;stkvar	_rxData @ sp[(-1)+0]
  5196  0022BA  0EFF               	movlw	-1
  5197  0022BC  50E3               	movf	plusw1,w,c
  5198  0022BE  0101               	movlb	1	; () banked
  5199  0022C0  6F0E               	movwf	(_H10+14)& (0+255),b
  5200  0022C2  6B0D               	clrf	(_H10+13)& (0+255),b
  5201  0022C4                     l6679:
  5202                           
  5203                           ;gemsecs.c: 119:      if (rxData_l == r_block.length + 2)
  5204  0022C4  502D               	movf	m_protocol@rxData_l,w,c
  5205  0022C6  6E45               	movwf	btemp+10,c
  5206  0022C8  6A46               	clrf	btemp+11,c
  5207  0022CA  0100               	movlb	0	; () banked
  5208  0022CC  516C               	movf	(_r_block+12)& (0+255),w,b
  5209  0022CE  6E43               	movwf	btemp+8,c
  5210  0022D0  6A44               	clrf	btemp+9,c
  5211  0022D2  0E02               	movlw	2
  5212  0022D4  2643               	addwf	btemp+8,f,c
  5213  0022D6  0E00               	movlw	0
  5214  0022D8  2244               	addwfc	btemp+9,f,c
  5215  0022DA  5045               	movf	btemp+10,w,c
  5216  0022DC  1843               	xorwf	btemp+8,w,c
  5217  0022DE  E10A               	bnz	l6683
  5218  0022E0  5046               	movf	btemp+11,w,c
  5219  0022E2  1844               	xorwf	btemp+9,w,c
  5220  0022E4  A4D8               	btfss	status,2,c
  5221  0022E6  D006               	goto	l6683
  5222                           
  5223                           ; BSR set to: 0
  5224                           ;gemsecs.c: 120:       H10[1].checksum += rxData;
  5225                           ;stkvar	_rxData @ sp[(-1)+0]
  5226  0022E8  0EFF               	movlw	-1
  5227  0022EA  50E3               	movf	plusw1,w,c
  5228  0022EC  0101               	movlb	1	; () banked
  5229  0022EE  270D               	addwf	(_H10+13)& (0+255),f,b
  5230  0022F0  0E00               	movlw	0
  5231  0022F2  230E               	addwfc	(_H10+14)& (0+255),f,b
  5232  0022F4                     l6683:
  5233                           
  5234                           ;gemsecs.c: 122:      rxData_l++;
  5235  0022F4  2A2D               	incf	m_protocol@rxData_l,f,c
  5236                           
  5237                           ;gemsecs.c: 123:      if (rxData_l > (r_block.length + 2)) {
  5238  0022F6  502D               	movf	m_protocol@rxData_l,w,c
  5239  0022F8  6E45               	movwf	btemp+10,c
  5240  0022FA  6A46               	clrf	btemp+11,c
  5241  0022FC  0100               	movlb	0	; () banked
  5242  0022FE  516C               	movf	(_r_block+12)& (0+255),w,b
  5243  002300  6E43               	movwf	btemp+8,c
  5244  002302  6A44               	clrf	btemp+9,c
  5245  002304  0E02               	movlw	2
  5246  002306  2643               	addwf	btemp+8,f,c
  5247  002308  0E00               	movlw	0
  5248  00230A  2244               	addwfc	btemp+9,f,c
  5249  00230C  5045               	movf	btemp+10,w,c
  5250  00230E  5C43               	subwf	btemp+8,w,c
  5251  002310  5044               	movf	btemp+9,w,c
  5252  002312  0A80               	xorlw	128
  5253  002314  6E3B               	movwf	btemp,c
  5254  002316  5046               	movf	btemp+11,w,c
  5255  002318  0A80               	xorlw	128
  5256  00231A  583B               	subwfb	btemp,w,c
  5257  00231C  B0D8               	btfsc	status,0,c
  5258  00231E  D02B               	goto	l6703
  5259                           
  5260                           ; BSR set to: 0
  5261                           ;gemsecs.c: 124:       if (V.r_checksum == H10[1].checksum) {
  5262  002320  0101               	movlb	1	; () banked
  5263  002322  510D               	movf	(_H10+13)& (0+255),w,b
  5264  002324  0100               	movlb	0	; () banked
  5265  002326  19EC               	xorwf	(_V+82)& (0+255),w,b
  5266  002328  E10E               	bnz	l6693
  5267  00232A  0101               	movlb	1	; () banked
  5268  00232C  510E               	movf	(_H10+14)& (0+255),w,b
  5269  00232E  0100               	movlb	0	; () banked
  5270  002330  19ED               	xorwf	(_V+83)& (0+255),w,b
  5271  002332  A4D8               	btfss	status,2,c
  5272  002334  D008               	goto	l6693
  5273                           
  5274                           ; BSR set to: 0
  5275                           ;gemsecs.c: 125:        *m_link = LINK_STATE_ACK;
  5276                           ;stkvar	_m_link @ sp[(-1)+-1]
  5277  002336  0EFE               	movlw	-2
  5278  002338  50E3               	movf	plusw1,w,c
  5279  00233A  6ED9               	movwf	fsr2l,c
  5280  00233C  6ADA               	clrf	fsr2h,c
  5281  00233E  0E03               	movlw	3
  5282  002340  D019               	goto	L19
  5283  002342                     l6691:
  5284  002342  EC79  F02C         	call	_UART1_Read	;wreg free
  5285  002346                     l6693:
  5286                           
  5287                           ;gemsecs.c: 127:        while (UART1_is_rx_ready())
  5288  002346  EC4F  F030         	call	_UART1_is_rx_ready	;wreg free
  5289  00234A  503B               	movf	btemp,w,c
  5290  00234C  A4D8               	btfss	status,2,c
  5291  00234E  D7F9               	goto	l6691
  5292                           
  5293                           ;gemsecs.c: 129:        WaitMs(500);
  5294  002350  0EF4               	movlw	244
  5295  002352  6EE6               	movwf	postinc1,c
  5296  002354  0E01               	movlw	1
  5297  002356  6EE6               	movwf	postinc1,c
  5298  002358  EC5E  F02D         	call	_WaitMs	;wreg free
  5299                           
  5300                           ;gemsecs.c: 130:        V.error = LINK_ERROR_CHECKSUM;
  5301  00235C  0E05               	movlw	5
  5302  00235E  0100               	movlb	0	; () banked
  5303  002360  6FE9               	movwf	(_V+79)& (0+255),b
  5304                           
  5305                           ; BSR set to: 0
  5306                           ;gemsecs.c: 131:        V.failed_receive = 3;
  5307  002362  51F1               	movf	(_V+87)& (0+255),w,b
  5308  002364  0BF0               	andlw	-16
  5309  002366  0903               	iorlw	3
  5310  002368  6FF1               	movwf	(_V+87)& (0+255),b
  5311                           
  5312                           ; BSR set to: 0
  5313                           ;gemsecs.c: 132:        *m_link = LINK_STATE_NAK;
  5314                           ;stkvar	_m_link @ sp[(-1)+-1]
  5315  00236A  0EFE               	movlw	-2
  5316  00236C  50E3               	movf	plusw1,w,c
  5317  00236E  6ED9               	movwf	fsr2l,c
  5318  002370  6ADA               	clrf	fsr2h,c
  5319  002372  0E05               	movlw	5
  5320  002374                     L19:
  5321  002374  6EDF               	movwf	indf2,c
  5322  002376                     l6703:
  5323                           
  5324                           ;gemsecs.c: 138:    if (UART2_is_rx_ready() && (V.uart == 1)) {
  5325  002376  EC4B  F030         	call	_UART2_is_rx_ready	;wreg free
  5326  00237A  503B               	movf	btemp,w,c
  5327  00237C  B4D8               	btfsc	status,2,c
  5328  00237E  D10F               	goto	l6787
  5329  002380  0100               	movlb	0	; () banked
  5330  002382  AFF1               	btfss	(_V+87)& (0+255),7,b
  5331  002384  D10C               	goto	l6787
  5332                           
  5333                           ; BSR set to: 0
  5334                           ;gemsecs.c: 139:     rxData = UART2_Read();
  5335  002386  EC5A  F02C         	call	_UART2_Read	;wreg free
  5336                           
  5337                           ;stkvar	_rxData @ sp[(-1)+0]
  5338  00238A  0EFF               	movlw	-1
  5339  00238C  0060  F0EF  FFE3   	movff	btemp,plusw1
  5340                           
  5341                           ; BSR set to: 57
  5342                           ;gemsecs.c: 140:     if (rxData_l == 0) {
  5343  002392  502D               	movf	m_protocol@rxData_l,w,c
  5344  002394  A4D8               	btfss	status,2,c
  5345  002396  D00C               	goto	l6717
  5346                           
  5347                           ; BSR set to: 57
  5348                           ;gemsecs.c: 141:      r_block.length = rxData;
  5349                           ;stkvar	_rxData @ sp[(-1)+0]
  5350  002398  0EFF               	movlw	-1
  5351  00239A  006F FF8C  F06C    	movff	plusw1,_r_block+12
  5352                           
  5353                           ; BSR set to: 57
  5354                           ;gemsecs.c: 142:      run_checksum(0, 1);
  5355  0023A0  0E01               	movlw	1
  5356  0023A2  6EE6               	movwf	postinc1,c
  5357  0023A4  0E00               	movlw	0
  5358  0023A6  6EE6               	movwf	postinc1,c
  5359  0023A8  ECF1  F02C         	call	_run_checksum	;wreg free
  5360                           
  5361                           ; BSR set to: 0
  5362                           ;gemsecs.c: 143:      rxData_l++;
  5363  0023AC  2A2D               	incf	m_protocol@rxData_l,f,c
  5364                           
  5365                           ;gemsecs.c: 144:     } else {
  5366  0023AE  D0F7               	goto	l6787
  5367  0023B0                     l6717:
  5368                           
  5369                           ; BSR set to: 57
  5370                           ;gemsecs.c: 148:      if (rxData_l <= sizeof(block10))
  5371  0023B0  0E0B               	movlw	11
  5372  0023B2  602D               	cpfslt	m_protocol@rxData_l,c
  5373  0023B4  D00C               	goto	l6721
  5374                           
  5375                           ; BSR set to: 57
  5376                           ;gemsecs.c: 149:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  5377                           ;stkvar	_rxData @ sp[(-1)+0]
  5378  0023B6  502D               	movf	m_protocol@rxData_l,w,c
  5379  0023B8  0819               	sublw	low (_H10+25)
  5380  0023BA  6ED9               	movwf	fsr2l,c
  5381  0023BC  0E00               	movlw	0
  5382  0023BE  A0D8               	btfss	status,0,c
  5383  0023C0  2AE8               	incf	wreg,f,c
  5384  0023C2  0801               	sublw	high (_H10+25)
  5385  0023C4  6EDA               	movwf	fsr2h,c
  5386  0023C6  0EFF               	movlw	-1
  5387  0023C8  006F FF8F FFDF     	movff	plusw1,indf2
  5388  0023CE                     l6721:
  5389                           
  5390                           ; BSR set to: 57
  5391                           ;gemsecs.c: 150:      if (rxData_l <= r_block.length)
  5392  0023CE  502D               	movf	m_protocol@rxData_l,w,c
  5393  0023D0  0100               	movlb	0	; () banked
  5394  0023D2  5D6C               	subwf	(_r_block+12)& (0+255),w,b
  5395  0023D4  A0D8               	btfss	status,0,c
  5396  0023D6  D00D               	goto	l6725
  5397                           
  5398                           ; BSR set to: 0
  5399                           ;gemsecs.c: 151:       V.r_checksum = run_checksum(rxData, 0);
  5400  0023D8  0E00               	movlw	0
  5401  0023DA  6EE6               	movwf	postinc1,c
  5402                           
  5403                           ;stkvar	_rxData @ sp[(-2)+0]
  5404  0023DC  0EFE               	movlw	-2
  5405  0023DE  50E3               	movf	plusw1,w,c
  5406  0023E0  6EE6               	movwf	postinc1,c
  5407  0023E2  ECF1  F02C         	call	_run_checksum	;wreg free
  5408  0023E6  0060  F0EC  F0EC   	movff	btemp,_V+82
  5409  0023EC  0060  F0F0  F0ED   	movff	btemp+1,_V+83
  5410  0023F2                     l6725:
  5411                           
  5412                           ; BSR set to: 0
  5413                           ;gemsecs.c: 153:      if (rxData_l == r_block.length + 1)
  5414  0023F2  502D               	movf	m_protocol@rxData_l,w,c
  5415  0023F4  6E45               	movwf	btemp+10,c
  5416  0023F6  6A46               	clrf	btemp+11,c
  5417  0023F8  516C               	movf	(_r_block+12)& (0+255),w,b
  5418  0023FA  6E43               	movwf	btemp+8,c
  5419  0023FC  6A44               	clrf	btemp+9,c
  5420  0023FE  0E01               	movlw	1
  5421  002400  2643               	addwf	btemp+8,f,c
  5422  002402  0E00               	movlw	0
  5423  002404  2244               	addwfc	btemp+9,f,c
  5424  002406  5045               	movf	btemp+10,w,c
  5425  002408  1843               	xorwf	btemp+8,w,c
  5426  00240A  E109               	bnz	l6729
  5427  00240C  5046               	movf	btemp+11,w,c
  5428  00240E  1844               	xorwf	btemp+9,w,c
  5429  002410  A4D8               	btfss	status,2,c
  5430  002412  D005               	goto	l6729
  5431                           
  5432                           ; BSR set to: 0
  5433                           ;gemsecs.c: 154:       H10[1].checksum = (uint16_t) rxData << 8;
  5434                           ;stkvar	_rxData @ sp[(-1)+0]
  5435  002414  0EFF               	movlw	-1
  5436  002416  50E3               	movf	plusw1,w,c
  5437  002418  0101               	movlb	1	; () banked
  5438  00241A  6F0E               	movwf	(_H10+14)& (0+255),b
  5439  00241C  6B0D               	clrf	(_H10+13)& (0+255),b
  5440  00241E                     l6729:
  5441                           
  5442                           ;gemsecs.c: 155:      if (rxData_l == r_block.length + 2)
  5443  00241E  502D               	movf	m_protocol@rxData_l,w,c
  5444  002420  6E45               	movwf	btemp+10,c
  5445  002422  6A46               	clrf	btemp+11,c
  5446  002424  0100               	movlb	0	; () banked
  5447  002426  516C               	movf	(_r_block+12)& (0+255),w,b
  5448  002428  6E43               	movwf	btemp+8,c
  5449  00242A  6A44               	clrf	btemp+9,c
  5450  00242C  0E02               	movlw	2
  5451  00242E  2643               	addwf	btemp+8,f,c
  5452  002430  0E00               	movlw	0
  5453  002432  2244               	addwfc	btemp+9,f,c
  5454  002434  5045               	movf	btemp+10,w,c
  5455  002436  1843               	xorwf	btemp+8,w,c
  5456  002438  E10A               	bnz	l6733
  5457  00243A  5046               	movf	btemp+11,w,c
  5458  00243C  1844               	xorwf	btemp+9,w,c
  5459  00243E  A4D8               	btfss	status,2,c
  5460  002440  D006               	goto	l6733
  5461                           
  5462                           ; BSR set to: 0
  5463                           ;gemsecs.c: 156:       H10[1].checksum += rxData;
  5464                           ;stkvar	_rxData @ sp[(-1)+0]
  5465  002442  0EFF               	movlw	-1
  5466  002444  50E3               	movf	plusw1,w,c
  5467  002446  0101               	movlb	1	; () banked
  5468  002448  270D               	addwf	(_H10+13)& (0+255),f,b
  5469  00244A  0E00               	movlw	0
  5470  00244C  230E               	addwfc	(_H10+14)& (0+255),f,b
  5471  00244E                     l6733:
  5472                           
  5473                           ;gemsecs.c: 158:      rxData_l++;
  5474  00244E  2A2D               	incf	m_protocol@rxData_l,f,c
  5475                           
  5476                           ;gemsecs.c: 159:      if (rxData_l > (r_block.length + 2)) {
  5477  002450  502D               	movf	m_protocol@rxData_l,w,c
  5478  002452  6E45               	movwf	btemp+10,c
  5479  002454  6A46               	clrf	btemp+11,c
  5480  002456  0100               	movlb	0	; () banked
  5481  002458  516C               	movf	(_r_block+12)& (0+255),w,b
  5482  00245A  6E43               	movwf	btemp+8,c
  5483  00245C  6A44               	clrf	btemp+9,c
  5484  00245E  0E02               	movlw	2
  5485  002460  2643               	addwf	btemp+8,f,c
  5486  002462  0E00               	movlw	0
  5487  002464  2244               	addwfc	btemp+9,f,c
  5488  002466  5045               	movf	btemp+10,w,c
  5489  002468  5C43               	subwf	btemp+8,w,c
  5490  00246A  5044               	movf	btemp+9,w,c
  5491  00246C  0A80               	xorlw	128
  5492  00246E  6E3B               	movwf	btemp,c
  5493  002470  5046               	movf	btemp+11,w,c
  5494  002472  0A80               	xorlw	128
  5495  002474  583B               	subwfb	btemp,w,c
  5496  002476  B0D8               	btfsc	status,0,c
  5497  002478  D092               	goto	l6787
  5498                           
  5499                           ; BSR set to: 0
  5500                           ;gemsecs.c: 160:       if (V.r_checksum == H10[1].checksum) {
  5501  00247A  0101               	movlb	1	; () banked
  5502  00247C  510D               	movf	(_H10+13)& (0+255),w,b
  5503  00247E  0100               	movlb	0	; () banked
  5504  002480  19EC               	xorwf	(_V+82)& (0+255),w,b
  5505  002482  E10E               	bnz	l6743
  5506  002484  0101               	movlb	1	; () banked
  5507  002486  510E               	movf	(_H10+14)& (0+255),w,b
  5508  002488  0100               	movlb	0	; () banked
  5509  00248A  19ED               	xorwf	(_V+83)& (0+255),w,b
  5510  00248C  A4D8               	btfss	status,2,c
  5511  00248E  D008               	goto	l6743
  5512                           
  5513                           ; BSR set to: 0
  5514                           ;gemsecs.c: 161:        *m_link = LINK_STATE_ACK;
  5515                           ;stkvar	_m_link @ sp[(-1)+-1]
  5516  002490  0EFE               	movlw	-2
  5517  002492  50E3               	movf	plusw1,w,c
  5518  002494  6ED9               	movwf	fsr2l,c
  5519  002496  6ADA               	clrf	fsr2h,c
  5520  002498  0E03               	movlw	3
  5521  00249A  D05E               	goto	L21
  5522  00249C                     l6741:
  5523  00249C  EC5A  F02C         	call	_UART2_Read	;wreg free
  5524  0024A0                     l6743:
  5525                           
  5526                           ;gemsecs.c: 163:        while (UART2_is_rx_ready())
  5527  0024A0  EC4B  F030         	call	_UART2_is_rx_ready	;wreg free
  5528  0024A4  503B               	movf	btemp,w,c
  5529  0024A6  A4D8               	btfss	status,2,c
  5530  0024A8  D7F9               	goto	l6741
  5531                           
  5532                           ;gemsecs.c: 165:        WaitMs(500);
  5533  0024AA  0EF4               	movlw	244
  5534  0024AC  6EE6               	movwf	postinc1,c
  5535  0024AE  0E01               	movlw	1
  5536  0024B0  6EE6               	movwf	postinc1,c
  5537  0024B2  EC5E  F02D         	call	_WaitMs	;wreg free
  5538                           
  5539                           ;gemsecs.c: 166:        V.error = LINK_ERROR_CHECKSUM;
  5540  0024B6  0E05               	movlw	5
  5541  0024B8  0100               	movlb	0	; () banked
  5542  0024BA  6FE9               	movwf	(_V+79)& (0+255),b
  5543                           
  5544                           ; BSR set to: 0
  5545                           ;gemsecs.c: 167:        V.failed_receive = 4;
  5546  0024BC  51F1               	movf	(_V+87)& (0+255),w,b
  5547  0024BE  0BF0               	andlw	-16
  5548  0024C0  0904               	iorlw	4
  5549  0024C2  D64B               	goto	L18
  5550  0024C4                     l6753:
  5551                           
  5552                           ;gemsecs.c: 176:   V.stream = H10[1].block.block.stream;
  5553  0024C4  0101               	movlb	1	; () banked
  5554  0024C6  5116               	movf	(_H10+22)& (0+255),w,b
  5555  0024C8  0B7F               	andlw	127
  5556  0024CA  0100               	movlb	0	; () banked
  5557  0024CC  6FE7               	movwf	(_V+77)& (0+255),b
  5558                           
  5559                           ; BSR set to: 0
  5560                           ;gemsecs.c: 177:   V.function = H10[1].block.block.function;
  5561  0024CE  C115  F0E8         	movff	_H10+21,_V+78
  5562                           
  5563                           ; BSR set to: 0
  5564                           ;gemsecs.c: 178:   V.systemb = H10[1].block.block.systemb;
  5565  0024D2  C10F  F0E3         	movff	_H10+15,_V+73
  5566  0024D6  C110  F0E4         	movff	_H10+16,_V+74
  5567  0024DA  C111  F0E5         	movff	_H10+17,_V+75
  5568  0024DE  C112  F0E6         	movff	_H10+18,_V+76
  5569                           
  5570                           ; BSR set to: 0
  5571                           ;gemsecs.c: 179:   V.rbit = H10[1].block.block.rbit;
  5572  0024E2  0101               	movlb	1	; () banked
  5573  0024E4  AF18               	btfss	(_H10+24)& (0+255),7,b
  5574  0024E6  D003               	bra	u4065
  5575  0024E8  0100               	movlb	0	; () banked
  5576  0024EA  81F0               	bsf	(_V+86)& (0+255),0,b
  5577  0024EC  D002               	bra	u4067
  5578  0024EE                     u4065:
  5579  0024EE  0100               	movlb	0	; () banked
  5580  0024F0  91F0               	bcf	(_V+86)& (0+255),0,b
  5581  0024F2                     u4067:
  5582                           
  5583                           ; BSR set to: 0
  5584                           ;gemsecs.c: 180:   V.wbit = H10[1].block.block.wbit;
  5585  0024F2  0101               	movlb	1	; () banked
  5586  0024F4  AF16               	btfss	(_H10+22)& (0+255),7,b
  5587  0024F6  D003               	bra	u4075
  5588  0024F8  0100               	movlb	0	; () banked
  5589  0024FA  83F0               	bsf	(_V+86)& (0+255),1,b
  5590  0024FC  D002               	bra	u4077
  5591  0024FE                     u4075:
  5592  0024FE  0100               	movlb	0	; () banked
  5593  002500  93F0               	bcf	(_V+86)& (0+255),1,b
  5594  002502                     u4077:
  5595                           
  5596                           ; BSR set to: 0
  5597                           ;gemsecs.c: 181:   V.ebit = H10[1].block.block.ebit;
  5598  002502  0101               	movlb	1	; () banked
  5599  002504  AF14               	btfss	(_H10+20)& (0+255),7,b
  5600  002506  D003               	bra	u4085
  5601  002508  0100               	movlb	0	; () banked
  5602  00250A  85F0               	bsf	(_V+86)& (0+255),2,b
  5603  00250C  D002               	bra	u4087
  5604  00250E                     u4085:
  5605  00250E  0100               	movlb	0	; () banked
  5606  002510  95F0               	bcf	(_V+86)& (0+255),2,b
  5607  002512                     u4087:
  5608                           
  5609                           ; BSR set to: 0
  5610                           ;gemsecs.c: 182:   V.failed_receive = 0;
  5611  002512  0EF0               	movlw	-16
  5612  002514  17F1               	andwf	(_V+87)& (0+255),f,b
  5613                           
  5614                           ; BSR set to: 0
  5615                           ;gemsecs.c: 183:   *m_link = LINK_STATE_DONE;
  5616                           ;stkvar	_m_link @ sp[(-1)+-1]
  5617  002516  0EFE               	movlw	-2
  5618  002518  50E3               	movf	plusw1,w,c
  5619  00251A  6ED9               	movwf	fsr2l,c
  5620  00251C  6ADA               	clrf	fsr2h,c
  5621  00251E  0E04               	movlw	4
  5622  002520  D01B               	goto	L21
  5623  002522                     l6769:
  5624                           
  5625                           ;gemsecs.c: 186:   *m_link = LINK_STATE_ERROR;
  5626                           ;stkvar	_m_link @ sp[(-1)+-1]
  5627  002522  0EFE               	movlw	-2
  5628  002524  50E3               	movf	plusw1,w,c
  5629  002526  6ED9               	movwf	fsr2l,c
  5630  002528  6ADA               	clrf	fsr2h,c
  5631  00252A  0E06               	movlw	6
  5632  00252C  6EDF               	movwf	indf2,c
  5633                           
  5634                           ;gemsecs.c: 187:   while ((uart1RxCount)) {
  5635  00252E  D002               	goto	l6773
  5636  002530                     l6771:
  5637                           
  5638                           ;gemsecs.c: 188:    UART1_Read();
  5639  002530  EC79  F02C         	call	_UART1_Read	;wreg free
  5640  002534                     l6773:
  5641                           
  5642                           ;gemsecs.c: 187:   while ((uart1RxCount)) {
  5643  002534  5035               	movf	_uart1RxCount,w,c	;volatile
  5644  002536  B4D8               	btfsc	status,2,c
  5645  002538  D003               	goto	l6777
  5646  00253A  D7FA               	goto	l6771
  5647  00253C                     l6775:
  5648                           
  5649                           ;gemsecs.c: 191:    UART2_Read();
  5650  00253C  EC5A  F02C         	call	_UART2_Read	;wreg free
  5651  002540                     l6777:
  5652                           
  5653                           ;gemsecs.c: 190:   while ((uart2RxCount)) {
  5654  002540  502F               	movf	_uart2RxCount,w,c	;volatile
  5655  002542  B4D8               	btfsc	status,2,c
  5656  002544  D02C               	goto	l6787
  5657  002546  D7FA               	goto	l6775
  5658  002548                     l6779:
  5659                           
  5660                           ;gemsecs.c: 197:   V.failed_receive = 0;
  5661  002548  0EF0               	movlw	-16
  5662  00254A  0100               	movlb	0	; () banked
  5663  00254C  17F1               	andwf	(_V+87)& (0+255),f,b
  5664  00254E                     l6781:
  5665                           
  5666                           ;gemsecs.c: 199:   *m_link = LINK_STATE_IDLE;
  5667                           ;stkvar	_m_link @ sp[(-1)+-1]
  5668  00254E  0EFE               	movlw	-2
  5669  002550  50E3               	movf	plusw1,w,c
  5670  002552  6ED9               	movwf	fsr2l,c
  5671  002554  6ADA               	clrf	fsr2h,c
  5672  002556  0E00               	movlw	0
  5673  002558                     L21:
  5674  002558  6EDF               	movwf	indf2,c
  5675                           
  5676                           ;gemsecs.c: 201:   break;
  5677  00255A  D021               	goto	l6787
  5678  00255C                     l6785:
  5679                           
  5680                           ;stkvar	_m_link @ sp[(-1)+-1]
  5681  00255C  0EFE               	movlw	-2
  5682  00255E  50E3               	movf	plusw1,w,c
  5683  002560  6ED9               	movwf	fsr2l,c
  5684  002562  6ADA               	clrf	fsr2h,c
  5685  002564  50DF               	movf	indf2,w,c
  5686  002566  6E45               	movwf	btemp+10,c
  5687  002568  6A46               	clrf	btemp+11,c
  5688                           
  5689                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5690                           ; Switch size 1, requested type "simple"
  5691                           ; Number of cases is 1, Range of values is 0 to 0
  5692                           ; switch strategies available:
  5693                           ; Name         Instructions Cycles
  5694                           ; simple_byte            4     3 (average)
  5695                           ;	Chosen strategy is simple_byte
  5696  00256A  5046               	movf	btemp+11,w,c
  5697  00256C  0A00               	xorlw	0	; case 0
  5698  00256E  A4D8               	btfss	status,2,c
  5699  002570  D7EE               	goto	l6781
  5700                           
  5701                           ; Switch size 1, requested type "simple"
  5702                           ; Number of cases is 7, Range of values is 0 to 6
  5703                           ; switch strategies available:
  5704                           ; Name         Instructions Cycles
  5705                           ; simple_byte           22    12 (average)
  5706                           ;	Chosen strategy is simple_byte
  5707  002572  5045               	movf	btemp+10,w,c
  5708  002574  0A00               	xorlw	0	; case 0
  5709  002576  B4D8               	btfsc	status,2,c
  5710  002578  D599               	goto	l6585
  5711  00257A  0A01               	xorlw	1	; case 1
  5712  00257C  B4D8               	btfsc	status,2,c
  5713  00257E  D5E0               	goto	l6613
  5714  002580  0A03               	xorlw	3	; case 2
  5715  002582  B4D8               	btfsc	status,2,c
  5716  002584  D63D               	goto	l6647
  5717  002586  0A01               	xorlw	1	; case 3
  5718  002588  B4D8               	btfsc	status,2,c
  5719  00258A  D79C               	goto	l6753
  5720  00258C  0A07               	xorlw	7	; case 4
  5721  00258E  B4D8               	btfsc	status,2,c
  5722  002590  D7DB               	goto	l6779
  5723  002592  0A01               	xorlw	1	; case 5
  5724  002594  B4D8               	btfsc	status,2,c
  5725  002596  D7C5               	goto	l6769
  5726  002598  0A03               	xorlw	3	; case 6
  5727  00259A  A4D8               	btfss	status,2,c
  5728  00259C  D7D8               	goto	l6781
  5729  00259E                     l6787:
  5730                           
  5731                           ;gemsecs.c: 204:  return *m_link;
  5732                           ;stkvar	_m_link @ sp[(-1)+-1]
  5733  00259E  0EFE               	movlw	-2
  5734  0025A0  50E3               	movf	plusw1,w,c
  5735  0025A2  6ED9               	movwf	fsr2l,c
  5736  0025A4  6ADA               	clrf	fsr2h,c
  5737  0025A6  50DF               	movf	indf2,w,c
  5738  0025A8  6E3B               	movwf	btemp,c
  5739                           
  5740                           ; _m_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5741  0025AA  52E5               	movf	postdec1,f,c
  5742  0025AC  52E5               	movf	postdec1,f,c
  5743  0025AE  0012               	return		;funcret
  5744  0025B0                     __end_of_m_protocol:
  5745                           	opt callstack 0
  5746                           
  5747 ;; *************** function _run_checksum *****************
  5748 ;; Defined at:
  5749 ;;		line 31 in file "gemsecs.c"
  5750 ;; Parameters:    Size  Location     Type
  5751 ;;  byte_block      1  [STACK] unsigned char 
  5752 ;;  clear           1  [STACK] _Bool 
  5753 ;; Auto vars:     Size  Location     Type
  5754 ;;		None
  5755 ;; Return value:  Size  Location     Type
  5756 ;;                  2  [STACK] unsigned short 
  5757 ;; Registers used:
  5758 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
  5759 ;; Tracked objects:
  5760 ;;		On entry : 6/39
  5761 ;;		On exit  : 3F/0
  5762 ;;		Unchanged: 0/0
  5763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5768 ;;Total ram usage:        0 bytes
  5769 ;; Hardware stack levels used:    1
  5770 ;; Hardware stack levels required when called:    3
  5771 ;; This function calls:
  5772 ;;		Nothing
  5773 ;; This function is called by:
  5774 ;;		_m_protocol
  5775 ;;		_r_protocol
  5776 ;; This function uses a reentrant model
  5777 ;;
  5778                           
  5779                           	psect	text11
  5780  0059E2                     __ptext11:
  5781                           	opt callstack 0
  5782  0059E2                     _run_checksum:
  5783                           	opt callstack 26
  5784                           
  5785                           ;gemsecs.c: 31: uint16_t run_checksum(uint8_t byte_block, _Bool clear);gemsecs.c: 32: {;
      +                          gemsecs.c: 33:  static uint16_t sum = 0;;gemsecs.c: 35:  if (clear)
  5786                           ;stkvar	_clear @ sp[(0)+-2]
  5787                           
  5788                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5789                           ;incstack = 0
  5790  0059E2  0EFE               	movlw	-2
  5791  0059E4  50E3               	movf	plusw1,w,c
  5792  0059E6  B4D8               	btfsc	status,2,c
  5793  0059E8  D003               	goto	l5961
  5794                           
  5795                           ;gemsecs.c: 36:   sum = 0;
  5796  0059EA  0100               	movlb	0	; () banked
  5797  0059EC  6B98               	clrf	run_checksum@sum& (0+255),b
  5798  0059EE  6B99               	clrf	(run_checksum@sum+1)& (0+255),b
  5799  0059F0                     l5961:
  5800                           
  5801                           ;gemsecs.c: 38:  sum += byte_block;
  5802                           ;stkvar	_byte_block @ sp[(0)+-1]
  5803  0059F0  0EFF               	movlw	-1
  5804  0059F2  50E3               	movf	plusw1,w,c
  5805  0059F4  0100               	movlb	0	; () banked
  5806  0059F6  2798               	addwf	run_checksum@sum& (0+255),f,b
  5807  0059F8  0E00               	movlw	0
  5808  0059FA  2399               	addwfc	(run_checksum@sum+1)& (0+255),f,b
  5809                           
  5810                           ; BSR set to: 0
  5811                           ;gemsecs.c: 39:  return sum;
  5812  0059FC  0060  F260  F03B   	movff	run_checksum@sum,btemp
  5813  005A02  0060  F264  F03C   	movff	run_checksum@sum+1,btemp+1
  5814                           
  5815                           ; BSR set to: 0
  5816                           ; _run_checksum: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, 
      +                          argsize = 2, vargsize = 0
  5817  005A08  52E5               	movf	postdec1,f,c
  5818  005A0A  52E5               	movf	postdec1,f,c
  5819  005A0C  0012               	return		;funcret
  5820  005A0E                     __end_of_run_checksum:
  5821                           	opt callstack 0
  5822                           
  5823 ;; *************** function _WaitMs *****************
  5824 ;; Defined at:
  5825 ;;		line 31 in file "timers.c"
  5826 ;; Parameters:    Size  Location     Type
  5827 ;;  numMilliseco    2  [STACK] unsigned short 
  5828 ;; Auto vars:     Size  Location     Type
  5829 ;;		None
  5830 ;; Return value:  Size  Location     Type
  5831 ;;                  1  [STACK] void 
  5832 ;; Registers used:
  5833 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  5834 ;; Tracked objects:
  5835 ;;		On entry : 0/3B
  5836 ;;		On exit  : 0/0
  5837 ;;		Unchanged: 0/0
  5838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5843 ;;Total ram usage:        0 bytes
  5844 ;; Hardware stack levels used:    1
  5845 ;; Hardware stack levels required when called:    4
  5846 ;; This function calls:
  5847 ;;		_StartTimer
  5848 ;;		_TimerDone
  5849 ;; This function is called by:
  5850 ;;		_main
  5851 ;;		_m_protocol
  5852 ;;		_r_protocol
  5853 ;; This function uses a reentrant model
  5854 ;;
  5855                           
  5856                           	psect	text12
  5857  005ABC                     __ptext12:
  5858                           	opt callstack 0
  5859  005ABC                     _WaitMs:
  5860                           	opt callstack 25
  5861                           
  5862                           ;timers.c: 31: void WaitMs(uint16_t numMilliseconds);timers.c: 32: {;timers.c: 33:  Star
      +                          tTimer(TMR_INTERNAL, numMilliseconds);
  5863                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  5864                           
  5865                           ; BSR set to: 0
  5866                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5867                           ;incstack = 0
  5868  005ABC  0EFE               	movlw	-2
  5869  005ABE  006F FF8F FFE6     	movff	plusw1,postinc1
  5870  005AC4  006F FF8F FFE6     	movff	plusw1,postinc1
  5871  005ACA  0E00               	movlw	0
  5872  005ACC  6EE6               	movwf	postinc1,c
  5873  005ACE  ECB7  F02C         	call	_StartTimer	;wreg free
  5874  005AD2                     l5899:
  5875                           
  5876                           ;timers.c: 34:  while (!TimerDone(TMR_INTERNAL)) {
  5877  005AD2  0E00               	movlw	0
  5878  005AD4  6EE6               	movwf	postinc1,c
  5879  005AD6  EC15  F02F         	call	_TimerDone	;wreg free
  5880  005ADA  503B               	movf	btemp,w,c
  5881  005ADC  B4D8               	btfsc	status,2,c
  5882  005ADE  D7F9               	goto	l5899
  5883                           
  5884                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  5885  005AE0  52E5               	movf	postdec1,f,c
  5886  005AE2  52E5               	movf	postdec1,f,c
  5887  005AE4  0012               	return		;funcret
  5888  005AE6                     __end_of_WaitMs:
  5889                           	opt callstack 0
  5890                           
  5891 ;; *************** function _TimerDone *****************
  5892 ;; Defined at:
  5893 ;;		line 20 in file "timers.c"
  5894 ;; Parameters:    Size  Location     Type
  5895 ;;  timer           1  [STACK] unsigned char 
  5896 ;; Auto vars:     Size  Location     Type
  5897 ;;		None
  5898 ;; Return value:  Size  Location     Type
  5899 ;;                  1  [STACK] _Bool 
  5900 ;; Registers used:
  5901 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  5902 ;; Tracked objects:
  5903 ;;		On entry : 0/0
  5904 ;;		On exit  : 0/0
  5905 ;;		Unchanged: 0/0
  5906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5911 ;;Total ram usage:        0 bytes
  5912 ;; Hardware stack levels used:    1
  5913 ;; Hardware stack levels required when called:    3
  5914 ;; This function calls:
  5915 ;;		Nothing
  5916 ;; This function is called by:
  5917 ;;		_m_protocol
  5918 ;;		_r_protocol
  5919 ;;		_t_protocol
  5920 ;;		_WaitMs
  5921 ;; This function uses a reentrant model
  5922 ;;
  5923                           
  5924                           	psect	text13
  5925  005E2A                     __ptext13:
  5926                           	opt callstack 0
  5927  005E2A                     _TimerDone:
  5928                           	opt callstack 26
  5929                           
  5930                           ;timers.c: 20: __attribute__((inline)) _Bool TimerDone(uint8_t timer);timers.c: 21: {;ti
      +                          mers.c: 22:  if (tickCount[timer] == 0) {
  5931                           ;stkvar	_timer @ sp[(0)+-1]
  5932                           
  5933                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5934                           ;incstack = 0
  5935  005E2A  0EFF               	movlw	-1
  5936  005E2C  50E3               	movf	plusw1,w,c
  5937  005E2E  0D02               	mullw	2
  5938  005E30  50F3               	movf	prodl,w,c
  5939  005E32  0F79               	addlw	low _tickCount
  5940  005E34  6ED9               	movwf	fsr2l,c
  5941  005E36  6ADA               	clrf	fsr2h,c
  5942  005E38  50DE               	movf	postinc2,w,c
  5943  005E3A  10DE               	iorwf	postinc2,w,c
  5944  005E3C  A4D8               	btfss	status,2,c
  5945  005E3E  D002               	goto	l5705
  5946                           
  5947                           ;timers.c: 23:   return 1;
  5948  005E40  0E01               	movlw	1
  5949  005E42  D001               	goto	L22
  5950  005E44                     l5705:
  5951                           
  5952                           ;timers.c: 25:  return 0;
  5953  005E44  0E00               	movlw	0
  5954  005E46                     L22:
  5955  005E46  6E3B               	movwf	btemp,c
  5956                           
  5957                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  5958  005E48  52E5               	movf	postdec1,f,c
  5959  005E4A  0012               	return		;funcret
  5960  005E4C                     __end_of_TimerDone:
  5961                           	opt callstack 0
  5962                           
  5963 ;; *************** function _StartTimer *****************
  5964 ;; Defined at:
  5965 ;;		line 12 in file "timers.c"
  5966 ;; Parameters:    Size  Location     Type
  5967 ;;  timer           1  [STACK] unsigned char 
  5968 ;;  count           2  [STACK] unsigned short 
  5969 ;; Auto vars:     Size  Location     Type
  5970 ;;		None
  5971 ;; Return value:  Size  Location     Type
  5972 ;;                  1  [STACK] void 
  5973 ;; Registers used:
  5974 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  5975 ;; Tracked objects:
  5976 ;;		On entry : 0/39
  5977 ;;		On exit  : 0/0
  5978 ;;		Unchanged: 0/0
  5979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5984 ;;Total ram usage:        0 bytes
  5985 ;; Hardware stack levels used:    1
  5986 ;; Hardware stack levels required when called:    3
  5987 ;; This function calls:
  5988 ;;		Nothing
  5989 ;; This function is called by:
  5990 ;;		_m_protocol
  5991 ;;		_r_protocol
  5992 ;;		_t_protocol
  5993 ;;		_WaitMs
  5994 ;; This function uses a reentrant model
  5995 ;;
  5996                           
  5997                           	psect	text14
  5998  00596E                     __ptext14:
  5999                           	opt callstack 0
  6000  00596E                     _StartTimer:
  6001                           	opt callstack 26
  6002                           
  6003                           ;timers.c: 12: __attribute__((inline)) void StartTimer(uint8_t timer, uint16_t count);ti
      +                          mers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
  6004                           ;stkvar	_count @ sp[(0)+-3]
  6005                           
  6006                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6007                           ;incstack = 0
  6008  00596E  0EFD               	movlw	-3
  6009  005970  006F FF8C  F045    	movff	plusw1,btemp+10
  6010  005976  0EFE               	movlw	-2
  6011  005978  006F FF8C  F046    	movff	plusw1,btemp+11
  6012  00597E  90D8               	bcf	status,0,c
  6013  005980  3445               	rlcf	btemp+10,w,c
  6014  005982  6E43               	movwf	btemp+8,c
  6015  005984  3446               	rlcf	btemp+11,w,c
  6016  005986  6E44               	movwf	btemp+9,c
  6017                           
  6018                           ;stkvar	_timer @ sp[(0)+-1]
  6019  005988  0EFF               	movlw	-1
  6020  00598A  50E3               	movf	plusw1,w,c
  6021  00598C  0D02               	mullw	2
  6022  00598E  50F3               	movf	prodl,w,c
  6023  005990  0F79               	addlw	low _tickCount
  6024  005992  6ED9               	movwf	fsr2l,c
  6025  005994  6ADA               	clrf	fsr2h,c
  6026  005996  0060  F10F  FFDE   	movff	btemp+8,postinc2
  6027  00599C  0060  F113  FFDD   	movff	btemp+9,postdec2
  6028                           
  6029                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
  6030  0059A2  52E5               	movf	postdec1,f,c
  6031  0059A4  52E5               	movf	postdec1,f,c
  6032  0059A6  52E5               	movf	postdec1,f,c
  6033  0059A8  0012               	return		;funcret
  6034  0059AA                     __end_of_StartTimer:
  6035                           	opt callstack 0
  6036                           
  6037 ;; *************** function _UART2_is_rx_ready *****************
  6038 ;; Defined at:
  6039 ;;		line 137 in file "mcc_generated_files/uart2.c"
  6040 ;; Parameters:    Size  Location     Type
  6041 ;;		None
  6042 ;; Auto vars:     Size  Location     Type
  6043 ;;		None
  6044 ;; Return value:  Size  Location     Type
  6045 ;;                  1  [STACK] unsigned char 
  6046 ;; Registers used:
  6047 ;;		btemp
  6048 ;; Tracked objects:
  6049 ;;		On entry : 0/0
  6050 ;;		On exit  : 0/0
  6051 ;;		Unchanged: 0/0
  6052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6057 ;;Total ram usage:        0 bytes
  6058 ;; Hardware stack levels used:    1
  6059 ;; Hardware stack levels required when called:    3
  6060 ;; This function calls:
  6061 ;;		Nothing
  6062 ;; This function is called by:
  6063 ;;		_m_protocol
  6064 ;; This function uses a reentrant model
  6065 ;;
  6066                           
  6067                           	psect	text15
  6068  006096                     __ptext15:
  6069                           	opt callstack 0
  6070  006096                     _UART2_is_rx_ready:
  6071                           	opt callstack 26
  6072                           
  6073                           ;mcc_generated_files/uart2.c: 139:     return uart2RxCount;
  6074                           
  6075                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6076                           ;incstack = 0
  6077  006096  0060  F0BC  F03B   	movff	_uart2RxCount,btemp	;volatile
  6078                           
  6079                           ; _UART2_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  6080  00609C  0012               	return		;funcret
  6081  00609E                     __end_of_UART2_is_rx_ready:
  6082                           	opt callstack 0
  6083                           
  6084 ;; *************** function _UART2_Read *****************
  6085 ;; Defined at:
  6086 ;;		line 152 in file "mcc_generated_files/uart2.c"
  6087 ;; Parameters:    Size  Location     Type
  6088 ;;		None
  6089 ;; Auto vars:     Size  Location     Type
  6090 ;;  readValue       1  [STACK] unsigned char 
  6091 ;; Return value:  Size  Location     Type
  6092 ;;                  1  [STACK] unsigned char 
  6093 ;; Registers used:
  6094 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  6095 ;; Tracked objects:
  6096 ;;		On entry : 0/0
  6097 ;;		On exit  : 3F/39
  6098 ;;		Unchanged: 0/0
  6099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6104 ;;Total ram usage:        0 bytes
  6105 ;; Hardware stack levels used:    1
  6106 ;; Hardware stack levels required when called:    3
  6107 ;; This function calls:
  6108 ;;		Nothing
  6109 ;; This function is called by:
  6110 ;;		_m_protocol
  6111 ;; This function uses a reentrant model
  6112 ;;
  6113                           
  6114                           	psect	text16
  6115  0058B4                     __ptext16:
  6116                           	opt callstack 0
  6117  0058B4                     _UART2_Read:
  6118                           	opt callstack 0
  6119                           
  6120                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6121  0058B4  52E6               	movf	postinc1,f,c
  6122  0058B6                     
  6123                           ;mcc_generated_files/uart2.c: 156:     while(0 == uart2RxCount)
  6124                           
  6125                           ;mcc_generated_files/uart2.c: 156:     while(0 == uart2RxCount)
  6126  0058B6  502F               	movf	_uart2RxCount,w,c	;volatile
  6127  0058B8  B4D8               	btfsc	status,2,c
  6128  0058BA  D7FD               	goto	l5861
  6129                           
  6130                           ;mcc_generated_files/uart2.c: 160:     readValue = uart2RxBuffer[uart2RxTail++];
  6131  0058BC  0E00               	movlw	low _uart2RxBuffer
  6132  0058BE  2430               	addwf	_uart2RxTail,w,c	;volatile
  6133  0058C0  6ED9               	movwf	fsr2l,c
  6134  0058C2  6ADA               	clrf	fsr2h,c
  6135  0058C4  0E02               	movlw	high _uart2RxBuffer
  6136  0058C6  22DA               	addwfc	fsr2h,f,c
  6137  0058C8  50DF               	movf	indf2,w,c
  6138  0058CA  6E46               	movwf	btemp+11,c
  6139                           
  6140                           ;stkvar	_readValue @ sp[(-1)+0]
  6141  0058CC  0EFF               	movlw	-1
  6142  0058CE  0060  F11B  FFE3   	movff	btemp+11,plusw1
  6143  0058D4  2A30               	incf	_uart2RxTail,f,c	;volatile
  6144                           
  6145                           ;mcc_generated_files/uart2.c: 161:     if(sizeof(uart2RxBuffer) <= uart2RxTail)
  6146  0058D6  0E3F               	movlw	63
  6147  0058D8  6430               	cpfsgt	_uart2RxTail,c
  6148  0058DA  D001               	goto	l692
  6149                           
  6150                           ;mcc_generated_files/uart2.c: 162:     {;mcc_generated_files/uart2.c: 163:         uart2
      +                          RxTail = 0;
  6151  0058DC  6A30               	clrf	_uart2RxTail,c	;volatile
  6152  0058DE                     l692:
  6153                           
  6154                           ;mcc_generated_files/uart2.c: 165:     PIE6bits.U2RXIE = 0;
  6155  0058DE  0139               	movlb	57	; () banked
  6156  0058E0  9596               	bcf	150,2,b	;volatile
  6157                           
  6158                           ; BSR set to: 57
  6159                           ;mcc_generated_files/uart2.c: 166:     uart2RxCount--;
  6160  0058E2  062F               	decf	_uart2RxCount,f,c	;volatile
  6161                           
  6162                           ; BSR set to: 57
  6163                           ;mcc_generated_files/uart2.c: 167:     PIE6bits.U2RXIE = 1;
  6164  0058E4  8596               	bsf	150,2,b	;volatile
  6165                           
  6166                           ; BSR set to: 57
  6167                           ;mcc_generated_files/uart2.c: 169:     return readValue;
  6168                           ;stkvar	_readValue @ sp[(-1)+0]
  6169  0058E6  0EFF               	movlw	-1
  6170  0058E8  006F FF8C  F03B    	movff	plusw1,btemp
  6171                           
  6172                           ; BSR set to: 57
  6173                           ; _UART2_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6174  0058EE  52E5               	movf	postdec1,f,c
  6175  0058F0  0012               	return		;funcret
  6176  0058F2                     __end_of_UART2_Read:
  6177                           	opt callstack 0
  6178                           
  6179 ;; *************** function _UART1_is_rx_ready *****************
  6180 ;; Defined at:
  6181 ;;		line 146 in file "mcc_generated_files/uart1.c"
  6182 ;; Parameters:    Size  Location     Type
  6183 ;;		None
  6184 ;; Auto vars:     Size  Location     Type
  6185 ;;		None
  6186 ;; Return value:  Size  Location     Type
  6187 ;;                  1  [STACK] unsigned char 
  6188 ;; Registers used:
  6189 ;;		btemp
  6190 ;; Tracked objects:
  6191 ;;		On entry : 0/0
  6192 ;;		On exit  : 0/0
  6193 ;;		Unchanged: 0/0
  6194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6199 ;;Total ram usage:        0 bytes
  6200 ;; Hardware stack levels used:    1
  6201 ;; Hardware stack levels required when called:    3
  6202 ;; This function calls:
  6203 ;;		Nothing
  6204 ;; This function is called by:
  6205 ;;		_m_protocol
  6206 ;;		_r_protocol
  6207 ;;		_t_protocol
  6208 ;; This function uses a reentrant model
  6209 ;;
  6210                           
  6211                           	psect	text17
  6212  00609E                     __ptext17:
  6213                           	opt callstack 0
  6214  00609E                     _UART1_is_rx_ready:
  6215                           	opt callstack 26
  6216                           
  6217                           ;mcc_generated_files/uart1.c: 148:  return uart1RxCount;
  6218                           
  6219                           ; BSR set to: 57
  6220                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6221                           ;incstack = 0
  6222  00609E  0060  F0D4  F03B   	movff	_uart1RxCount,btemp	;volatile
  6223                           
  6224                           ; _UART1_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  6225  0060A4  0012               	return		;funcret
  6226  0060A6                     __end_of_UART1_is_rx_ready:
  6227                           	opt callstack 0
  6228                           
  6229 ;; *************** function _UART1_Read *****************
  6230 ;; Defined at:
  6231 ;;		line 161 in file "mcc_generated_files/uart1.c"
  6232 ;; Parameters:    Size  Location     Type
  6233 ;;		None
  6234 ;; Auto vars:     Size  Location     Type
  6235 ;;  readValue       1  [STACK] unsigned char 
  6236 ;; Return value:  Size  Location     Type
  6237 ;;                  1  [STACK] unsigned char 
  6238 ;; Registers used:
  6239 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  6240 ;; Tracked objects:
  6241 ;;		On entry : 0/0
  6242 ;;		On exit  : 3F/39
  6243 ;;		Unchanged: 0/0
  6244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6249 ;;Total ram usage:        0 bytes
  6250 ;; Hardware stack levels used:    1
  6251 ;; Hardware stack levels required when called:    3
  6252 ;; This function calls:
  6253 ;;		Nothing
  6254 ;; This function is called by:
  6255 ;;		_m_protocol
  6256 ;;		_r_protocol
  6257 ;;		_t_protocol
  6258 ;; This function uses a reentrant model
  6259 ;;
  6260                           
  6261                           	psect	text18
  6262  0058F2                     __ptext18:
  6263                           	opt callstack 0
  6264  0058F2                     _UART1_Read:
  6265                           	opt callstack 0
  6266                           
  6267                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6268  0058F2  52E6               	movf	postinc1,f,c
  6269  0058F4                     
  6270                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  6271                           
  6272                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  6273  0058F4  5035               	movf	_uart1RxCount,w,c	;volatile
  6274  0058F6  B4D8               	btfsc	status,2,c
  6275  0058F8  D7FD               	goto	l5837
  6276                           
  6277                           ;mcc_generated_files/uart1.c: 168:  readValue = uart1RxBuffer[uart1RxTail++];
  6278  0058FA  0E40               	movlw	low _uart1RxBuffer
  6279  0058FC  2436               	addwf	_uart1RxTail,w,c	;volatile
  6280  0058FE  6ED9               	movwf	fsr2l,c
  6281  005900  6ADA               	clrf	fsr2h,c
  6282  005902  0E02               	movlw	high _uart1RxBuffer
  6283  005904  22DA               	addwfc	fsr2h,f,c
  6284  005906  50DF               	movf	indf2,w,c
  6285  005908  6E46               	movwf	btemp+11,c
  6286                           
  6287                           ;stkvar	_readValue @ sp[(-1)+0]
  6288  00590A  0EFF               	movlw	-1
  6289  00590C  0060  F11B  FFE3   	movff	btemp+11,plusw1
  6290  005912  2A36               	incf	_uart1RxTail,f,c	;volatile
  6291                           
  6292                           ;mcc_generated_files/uart1.c: 169:  if (sizeof(uart1RxBuffer) <= uart1RxTail) {
  6293  005914  0E3F               	movlw	63
  6294  005916  6436               	cpfsgt	_uart1RxTail,c
  6295  005918  D001               	goto	l572
  6296                           
  6297                           ;mcc_generated_files/uart1.c: 170:   uart1RxTail = 0;
  6298  00591A  6A36               	clrf	_uart1RxTail,c	;volatile
  6299  00591C                     l572:
  6300                           
  6301                           ;mcc_generated_files/uart1.c: 172:  PIE3bits.U1RXIE = 0;
  6302  00591C  0139               	movlb	57	; () banked
  6303  00591E  9793               	bcf	147,3,b	;volatile
  6304                           
  6305                           ; BSR set to: 57
  6306                           ;mcc_generated_files/uart1.c: 173:  uart1RxCount--;
  6307  005920  0635               	decf	_uart1RxCount,f,c	;volatile
  6308                           
  6309                           ; BSR set to: 57
  6310                           ;mcc_generated_files/uart1.c: 174:  PIE3bits.U1RXIE = 1;
  6311  005922  8793               	bsf	147,3,b	;volatile
  6312                           
  6313                           ; BSR set to: 57
  6314                           ;mcc_generated_files/uart1.c: 176:  return readValue;
  6315                           ;stkvar	_readValue @ sp[(-1)+0]
  6316  005924  0EFF               	movlw	-1
  6317  005926  006F FF8C  F03B    	movff	plusw1,btemp
  6318                           
  6319                           ; BSR set to: 57
  6320                           ; _UART1_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6321  00592C  52E5               	movf	postdec1,f,c
  6322  00592E  0012               	return		;funcret
  6323  005930                     __end_of_UART1_Read:
  6324                           	opt callstack 0
  6325                           
  6326 ;; *************** function _init_display *****************
  6327 ;; Defined at:
  6328 ;;		line 35 in file "eadog.c"
  6329 ;; Parameters:    Size  Location     Type
  6330 ;;		None
  6331 ;; Auto vars:     Size  Location     Type
  6332 ;;		None
  6333 ;; Return value:  Size  Location     Type
  6334 ;;                  1  [STACK] void 
  6335 ;; Registers used:
  6336 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6337 ;; Tracked objects:
  6338 ;;		On entry : 0/0
  6339 ;;		On exit  : 3F/3D
  6340 ;;		Unchanged: 0/0
  6341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6346 ;;Total ram usage:        0 bytes
  6347 ;; Hardware stack levels used:    1
  6348 ;; Hardware stack levels required when called:    5
  6349 ;; This function calls:
  6350 ;;		_ringBufS_init
  6351 ;;		_send_lcd_cmd
  6352 ;;		_send_lcd_cmd_long
  6353 ;;		_wdtdelay
  6354 ;; This function is called by:
  6355 ;;		_main
  6356 ;; This function uses a reentrant model
  6357 ;;
  6358                           
  6359                           	psect	text19
  6360  004B20                     __ptext19:
  6361                           	opt callstack 0
  6362  004B20                     _init_display:
  6363                           	opt callstack 25
  6364                           
  6365                           ;eadog.c: 37:  spi_link.tx1a = &ring_buf1;
  6366                           
  6367                           ; BSR set to: 57
  6368                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6369                           ;incstack = 0
  6370  004B20  0E83               	movlw	low _ring_buf1
  6371  004B22  0100               	movlb	0	; () banked
  6372  004B24  6F73               	movwf	(_spi_link+6)& (0+255),b	;volatile
  6373  004B26  0E03               	movlw	high _ring_buf1
  6374  004B28  6F74               	movwf	(_spi_link+7)& (0+255),b	;volatile
  6375                           
  6376                           ;eadog.c: 38:  spi_link.tx1b = &ring_buf2;
  6377  004B2A  0E40               	movlw	low _ring_buf2
  6378  004B2C  6F71               	movwf	(_spi_link+4)& (0+255),b	;volatile
  6379  004B2E  0E03               	movlw	high _ring_buf2
  6380  004B30  6F72               	movwf	(_spi_link+5)& (0+255),b	;volatile
  6381                           
  6382                           ; BSR set to: 0
  6383                           ;eadog.c: 39:  ringBufS_init(spi_link.tx1a);
  6384  004B32  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
  6385  004B38  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
  6386  004B3E  ECB1  F02D         	call	_ringBufS_init	;wreg free
  6387                           
  6388                           ;eadog.c: 40:  ringBufS_init(spi_link.tx1b);
  6389  004B42  0060  F1C7  FFE6   	movff	_spi_link+4,postinc1
  6390  004B48  0060  F1CB  FFE6   	movff	_spi_link+5,postinc1
  6391  004B4E  ECB1  F02D         	call	_ringBufS_init	;wreg free
  6392                           
  6393                           ;eadog.c: 42:  LATEbits.LATE0 = 1;
  6394  004B52  80BE               	bsf	16318,0,c	;volatile
  6395  004B54  84BC               	bsf	16316,2,c	;volatile
  6396                           
  6397                           ;eadog.c: 44:  wdtdelay(350000);
  6398  004B56  0E30               	movlw	48
  6399  004B58  6EE6               	movwf	postinc1,c
  6400  004B5A  0E57               	movlw	87
  6401  004B5C  6EE6               	movwf	postinc1,c
  6402  004B5E  0E05               	movlw	5
  6403  004B60  6EE6               	movwf	postinc1,c
  6404  004B62  0E00               	movlw	0
  6405  004B64  6EE6               	movwf	postinc1,c
  6406  004B66  ECF1  F02A         	call	_wdtdelay	;wreg free
  6407                           
  6408                           ; BSR set to: 0
  6409                           ;eadog.c: 45:  send_lcd_cmd(0x39);
  6410  004B6A  0E39               	movlw	57
  6411  004B6C  6EE6               	movwf	postinc1,c
  6412  004B6E  EC9D  F02D         	call	_send_lcd_cmd	;wreg free
  6413                           
  6414                           ; BSR set to: 0
  6415                           ;eadog.c: 46:  send_lcd_cmd(0x1d);
  6416  004B72  0E1D               	movlw	29
  6417  004B74  6EE6               	movwf	postinc1,c
  6418  004B76  EC9D  F02D         	call	_send_lcd_cmd	;wreg free
  6419                           
  6420                           ; BSR set to: 0
  6421                           ;eadog.c: 47:  send_lcd_cmd(0x50);
  6422  004B7A  0E50               	movlw	80
  6423  004B7C  6EE6               	movwf	postinc1,c
  6424  004B7E  EC9D  F02D         	call	_send_lcd_cmd	;wreg free
  6425                           
  6426                           ; BSR set to: 0
  6427                           ;eadog.c: 48:  send_lcd_cmd(0x6c);
  6428  004B82  0E6C               	movlw	108
  6429  004B84  6EE6               	movwf	postinc1,c
  6430  004B86  EC9D  F02D         	call	_send_lcd_cmd	;wreg free
  6431                           
  6432                           ; BSR set to: 0
  6433                           ;eadog.c: 49:  send_lcd_cmd(0x76);
  6434  004B8A  0E76               	movlw	118
  6435  004B8C  6EE6               	movwf	postinc1,c
  6436  004B8E  EC9D  F02D         	call	_send_lcd_cmd	;wreg free
  6437                           
  6438                           ; BSR set to: 0
  6439                           ;eadog.c: 50:  send_lcd_cmd_long(0x38);
  6440  004B92  0E38               	movlw	56
  6441  004B94  6EE6               	movwf	postinc1,c
  6442  004B96  EC89  F02D         	call	_send_lcd_cmd_long	;wreg free
  6443                           
  6444                           ; BSR set to: 0
  6445                           ;eadog.c: 51:  send_lcd_cmd(0x0f);
  6446  004B9A  0E0F               	movlw	15
  6447  004B9C  6EE6               	movwf	postinc1,c
  6448  004B9E  EC9D  F02D         	call	_send_lcd_cmd	;wreg free
  6449                           
  6450                           ; BSR set to: 0
  6451                           ;eadog.c: 52:  send_lcd_cmd_long(0x01);
  6452  004BA2  0E01               	movlw	1
  6453  004BA4  6EE6               	movwf	postinc1,c
  6454  004BA6  EC89  F02D         	call	_send_lcd_cmd_long	;wreg free
  6455                           
  6456                           ; BSR set to: 0
  6457                           ;eadog.c: 53:  send_lcd_cmd(0x02);
  6458  004BAA  0E02               	movlw	2
  6459  004BAC  6EE6               	movwf	postinc1,c
  6460  004BAE  EC9D  F02D         	call	_send_lcd_cmd	;wreg free
  6461                           
  6462                           ; BSR set to: 0
  6463                           ;eadog.c: 54:  send_lcd_cmd(0x06);
  6464  004BB2  0E06               	movlw	6
  6465  004BB4  6EE6               	movwf	postinc1,c
  6466  004BB6  EC9D  F02D         	call	_send_lcd_cmd	;wreg free
  6467                           
  6468                           ; BSR set to: 0
  6469                           ;eadog.c: 55:  wdtdelay(30);
  6470  004BBA  0E1E               	movlw	30
  6471  004BBC  6EE6               	movwf	postinc1,c
  6472  004BBE  0E00               	movlw	0
  6473  004BC0  6EE6               	movwf	postinc1,c
  6474  004BC2  0E00               	movlw	0
  6475  004BC4  6EE6               	movwf	postinc1,c
  6476  004BC6  0E00               	movlw	0
  6477  004BC8  6EE6               	movwf	postinc1,c
  6478  004BCA  ECF1  F02A         	call	_wdtdelay	;wreg free
  6479                           
  6480                           ; BSR set to: 0
  6481                           ;eadog.c: 56:  SPI1CON2 = 0x02;
  6482  004BCE  0E02               	movlw	2
  6483  004BD0  013D               	movlb	61	; () banked
  6484  004BD2  6F16               	movwf	22,b	;volatile
  6485                           
  6486                           ; BSR set to: 61
  6487                           ;eadog.c: 57:  SPI1CON1 = 0x40;
  6488  004BD4  0E40               	movlw	64
  6489  004BD6  6F15               	movwf	21,b	;volatile
  6490                           
  6491                           ; BSR set to: 61
  6492                           ;eadog.c: 58:  SPI1CON0 = 0x83;
  6493  004BD8  0E83               	movlw	131
  6494  004BDA  6F14               	movwf	20,b	;volatile
  6495                           
  6496                           ; BSR set to: 61
  6497                           ;eadog.c: 59:  SPI1INTFbits.SPI1TXUIF = 0;
  6498  004BDC  931A               	bcf	26,1,b	;volatile
  6499                           
  6500                           ; BSR set to: 61
  6501                           ;eadog.c: 60:  DMA1CON1bits.DMODE = 0;
  6502  004BDE  0E3F               	movlw	-193
  6503  004BE0  013B               	movlb	59	; () banked
  6504  004BE2  17FD               	andwf	253,f,b	;volatile
  6505                           
  6506                           ; BSR set to: 59
  6507                           ;eadog.c: 61:  DMA1CON1bits.DSTP = 0;
  6508  004BE4  9BFD               	bcf	253,5,b	;volatile
  6509                           
  6510                           ; BSR set to: 59
  6511                           ;eadog.c: 62:  DMA1CON1bits.SMODE = 1;
  6512  004BE6  51FD               	movf	253,w,b	;volatile
  6513  004BE8  0BF9               	andlw	-7
  6514  004BEA  0902               	iorlw	2
  6515  004BEC  6FFD               	movwf	253,b	;volatile
  6516                           
  6517                           ; BSR set to: 59
  6518                           ;eadog.c: 63:  DMA1CON1bits.SMR = 0;
  6519  004BEE  0EE7               	movlw	-25
  6520  004BF0  17FD               	andwf	253,f,b	;volatile
  6521                           
  6522                           ; BSR set to: 59
  6523                           ;eadog.c: 64:  DMA1CON1bits.SSTP = 1;
  6524  004BF2  81FD               	bsf	253,0,b	;volatile
  6525                           
  6526                           ; BSR set to: 59
  6527                           ;eadog.c: 65:  DMA1SSA = (uint32_t) & ring_buf1;
  6528  004BF4  0E83               	movlw	low _ring_buf1
  6529  004BF6  6FF9               	movwf	249,b	;volatile
  6530  004BF8  0E03               	movlw	high _ring_buf1
  6531  004BFA  6FFA               	movwf	250,b	;volatile
  6532  004BFC  0E00               	movlw	low (_ring_buf1 shr (0+16))
  6533  004BFE  6FFB               	movwf	251,b	;volatile
  6534                           
  6535                           ; BSR set to: 59
  6536                           ;eadog.c: 66:  DMA1CON0bits.DGO = 0;
  6537  004C00  9BFC               	bcf	252,5,b	;volatile
  6538                           
  6539                           ; BSR set to: 59
  6540                           ;eadog.c: 67:  SPI1INTFbits.SPI1TXUIF = 1;
  6541  004C02  013D               	movlb	61	; () banked
  6542  004C04  831A               	bsf	26,1,b	;volatile
  6543                           
  6544                           ; BSR set to: 61
  6545                           ;eadog.c: 68:  LATEbits.LATE0 = 0;
  6546  004C06  90BE               	bcf	16318,0,c	;volatile
  6547                           
  6548                           ; BSR set to: 61
  6549                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  6550  004C08  0012               	return		;funcret
  6551  004C0A                     __end_of_init_display:
  6552                           	opt callstack 0
  6553                           
  6554 ;; *************** function _send_lcd_cmd_long *****************
  6555 ;; Defined at:
  6556 ;;		line 97 in file "eadog.c"
  6557 ;; Parameters:    Size  Location     Type
  6558 ;;  cmd             1  [STACK] unsigned char 
  6559 ;; Auto vars:     Size  Location     Type
  6560 ;;		None
  6561 ;; Return value:  Size  Location     Type
  6562 ;;                  1  [STACK] void 
  6563 ;; Registers used:
  6564 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6565 ;; Tracked objects:
  6566 ;;		On entry : 3F/0
  6567 ;;		On exit  : 3F/0
  6568 ;;		Unchanged: 0/0
  6569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6574 ;;Total ram usage:        0 bytes
  6575 ;; Hardware stack levels used:    1
  6576 ;; Hardware stack levels required when called:    4
  6577 ;; This function calls:
  6578 ;;		_SPI1_Exchange8bit
  6579 ;;		_wdtdelay
  6580 ;; This function is called by:
  6581 ;;		_init_display
  6582 ;; This function uses a reentrant model
  6583 ;;
  6584                           
  6585                           	psect	text20
  6586  005B12                     __ptext20:
  6587                           	opt callstack 0
  6588  005B12                     _send_lcd_cmd_long:
  6589                           	opt callstack 25
  6590                           
  6591                           ; BSR set to: 61
  6592                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6593                           ;incstack = 0
  6594                           ;eadog.c: 97: static void send_lcd_cmd_long(uint8_t cmd);eadog.c: 98: {;eadog.c: 99:  do
      +                           { LATCbits.LATC1 = 0; } while(0);
  6595  005B12  92BC               	bcf	16316,1,c	;volatile
  6596                           
  6597                           ;eadog.c: 100:  do { LATCbits.LATC2 = 0; } while(0);
  6598  005B14  94BC               	bcf	16316,2,c	;volatile
  6599                           
  6600                           ;eadog.c: 101:  SPI1_Exchange8bit(cmd);
  6601                           ;stkvar	_cmd @ sp[(0)+-1]
  6602  005B16  0EFF               	movlw	-1
  6603  005B18  50E3               	movf	plusw1,w,c
  6604  005B1A  6EE6               	movwf	postinc1,c
  6605  005B1C  EC8A  F02F         	call	_SPI1_Exchange8bit	;wreg free
  6606                           
  6607                           ; BSR set to: 57
  6608                           ;eadog.c: 102:  wdtdelay(800);
  6609  005B20  0E20               	movlw	32
  6610  005B22  6EE6               	movwf	postinc1,c
  6611  005B24  0E03               	movlw	3
  6612  005B26  6EE6               	movwf	postinc1,c
  6613  005B28  0E00               	movlw	0
  6614  005B2A  6EE6               	movwf	postinc1,c
  6615  005B2C  0E00               	movlw	0
  6616  005B2E  6EE6               	movwf	postinc1,c
  6617  005B30  ECF1  F02A         	call	_wdtdelay	;wreg free
  6618                           
  6619                           ; BSR set to: 0
  6620  005B34  82BC               	bsf	16316,1,c	;volatile
  6621                           
  6622                           ; BSR set to: 0
  6623                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6624  005B36  52E5               	movf	postdec1,f,c
  6625  005B38  0012               	return		;funcret
  6626  005B3A                     __end_of_send_lcd_cmd_long:
  6627                           	opt callstack 0
  6628                           
  6629 ;; *************** function _send_lcd_cmd *****************
  6630 ;; Defined at:
  6631 ;;		line 85 in file "eadog.c"
  6632 ;; Parameters:    Size  Location     Type
  6633 ;;  cmd             1  [STACK] unsigned char 
  6634 ;; Auto vars:     Size  Location     Type
  6635 ;;		None
  6636 ;; Return value:  Size  Location     Type
  6637 ;;                  1  [STACK] void 
  6638 ;; Registers used:
  6639 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6640 ;; Tracked objects:
  6641 ;;		On entry : 3F/0
  6642 ;;		On exit  : 3F/0
  6643 ;;		Unchanged: 0/0
  6644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6649 ;;Total ram usage:        0 bytes
  6650 ;; Hardware stack levels used:    1
  6651 ;; Hardware stack levels required when called:    4
  6652 ;; This function calls:
  6653 ;;		_SPI1_Exchange8bit
  6654 ;;		_wdtdelay
  6655 ;; This function is called by:
  6656 ;;		_init_display
  6657 ;; This function uses a reentrant model
  6658 ;;
  6659                           
  6660                           	psect	text21
  6661  005B3A                     __ptext21:
  6662                           	opt callstack 0
  6663  005B3A                     _send_lcd_cmd:
  6664                           	opt callstack 25
  6665                           
  6666                           ; BSR set to: 0
  6667                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6668                           ;incstack = 0
  6669                           ;eadog.c: 85: static void send_lcd_cmd(uint8_t cmd);eadog.c: 86: {;eadog.c: 87:  do { LA
      +                          TCbits.LATC1 = 0; } while(0);
  6670  005B3A  92BC               	bcf	16316,1,c	;volatile
  6671                           
  6672                           ;eadog.c: 88:  do { LATCbits.LATC2 = 0; } while(0);
  6673  005B3C  94BC               	bcf	16316,2,c	;volatile
  6674                           
  6675                           ;eadog.c: 89:  SPI1_Exchange8bit(cmd);
  6676                           ;stkvar	_cmd @ sp[(0)+-1]
  6677  005B3E  0EFF               	movlw	-1
  6678  005B40  50E3               	movf	plusw1,w,c
  6679  005B42  6EE6               	movwf	postinc1,c
  6680  005B44  EC8A  F02F         	call	_SPI1_Exchange8bit	;wreg free
  6681                           
  6682                           ; BSR set to: 57
  6683                           ;eadog.c: 90:  wdtdelay(30);
  6684  005B48  0E1E               	movlw	30
  6685  005B4A  6EE6               	movwf	postinc1,c
  6686  005B4C  0E00               	movlw	0
  6687  005B4E  6EE6               	movwf	postinc1,c
  6688  005B50  0E00               	movlw	0
  6689  005B52  6EE6               	movwf	postinc1,c
  6690  005B54  0E00               	movlw	0
  6691  005B56  6EE6               	movwf	postinc1,c
  6692  005B58  ECF1  F02A         	call	_wdtdelay	;wreg free
  6693                           
  6694                           ; BSR set to: 0
  6695  005B5C  82BC               	bsf	16316,1,c	;volatile
  6696                           
  6697                           ; BSR set to: 0
  6698                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  6699  005B5E  52E5               	movf	postdec1,f,c
  6700  005B60  0012               	return		;funcret
  6701  005B62                     __end_of_send_lcd_cmd:
  6702                           	opt callstack 0
  6703                           
  6704 ;; *************** function _SPI1_Exchange8bit *****************
  6705 ;; Defined at:
  6706 ;;		line 79 in file "mcc_generated_files/spi1.c"
  6707 ;; Parameters:    Size  Location     Type
  6708 ;;  data            1  [STACK] unsigned char 
  6709 ;; Auto vars:     Size  Location     Type
  6710 ;;		None
  6711 ;; Return value:  Size  Location     Type
  6712 ;;                  1  [STACK] unsigned char 
  6713 ;; Registers used:
  6714 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  6715 ;; Tracked objects:
  6716 ;;		On entry : 0/0
  6717 ;;		On exit  : 3F/39
  6718 ;;		Unchanged: 0/0
  6719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6724 ;;Total ram usage:        0 bytes
  6725 ;; Hardware stack levels used:    1
  6726 ;; Hardware stack levels required when called:    3
  6727 ;; This function calls:
  6728 ;;		Nothing
  6729 ;; This function is called by:
  6730 ;;		_send_lcd_cmd
  6731 ;;		_send_lcd_cmd_long
  6732 ;; This function uses a reentrant model
  6733 ;;
  6734                           
  6735                           	psect	text22
  6736  005F14                     __ptext22:
  6737                           	opt callstack 0
  6738  005F14                     _SPI1_Exchange8bit:
  6739                           	opt callstack 25
  6740                           
  6741                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  6742                           
  6743                           ; BSR set to: 0
  6744                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6745                           ;incstack = 0
  6746  005F14  0E01               	movlw	1
  6747  005F16  013D               	movlb	61	; () banked
  6748  005F18  6F12               	movwf	18,b	;volatile
  6749                           
  6750                           ; BSR set to: 61
  6751                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  6752                           ;stkvar	_data @ sp[(0)+-1]
  6753  005F1A  0EFF               	movlw	-1
  6754  005F1C  006F FF8F FD11     	movff	plusw1,15633	;volatile
  6755  005F22                     l847:
  6756                           
  6757                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  6758  005F22  0139               	movlb	57	; () banked
  6759  005F24  A9A2               	btfss	162,4,b	;volatile
  6760  005F26  D7FD               	goto	l847
  6761                           
  6762                           ; BSR set to: 57
  6763                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  6764  005F28  006F F440  F03B    	movff	15632,btemp	;volatile
  6765                           
  6766                           ; BSR set to: 57
  6767                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6768  005F2E  52E5               	movf	postdec1,f,c
  6769  005F30  0012               	return		;funcret
  6770  005F32                     __end_of_SPI1_Exchange8bit:
  6771                           	opt callstack 0
  6772                           
  6773 ;; *************** function _ringBufS_init *****************
  6774 ;; Defined at:
  6775 ;;		line 22 in file "ringbufs.c"
  6776 ;; Parameters:    Size  Location     Type
  6777 ;;  _this           2  [STACK] PTR volatile struct ring
  6778 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6779 ;; Auto vars:     Size  Location     Type
  6780 ;;		None
  6781 ;; Return value:  Size  Location     Type
  6782 ;;                  1  [STACK] void 
  6783 ;; Registers used:
  6784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6785 ;; Tracked objects:
  6786 ;;		On entry : 0/0
  6787 ;;		On exit  : 0/0
  6788 ;;		Unchanged: 0/0
  6789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6794 ;;Total ram usage:        0 bytes
  6795 ;; Hardware stack levels used:    1
  6796 ;; Hardware stack levels required when called:    4
  6797 ;; This function calls:
  6798 ;;		_memset
  6799 ;; This function is called by:
  6800 ;;		_init_display
  6801 ;; This function uses a reentrant model
  6802 ;;
  6803                           
  6804                           	psect	text23
  6805  005B62                     __ptext23:
  6806                           	opt callstack 0
  6807  005B62                     _ringBufS_init:
  6808                           	opt callstack 25
  6809                           
  6810                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  6811                           
  6812                           ; BSR set to: 57
  6813                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6814                           ;incstack = 0
  6815  005B62  0E43               	movlw	67
  6816  005B64  6EE6               	movwf	postinc1,c
  6817  005B66  0E00               	movlw	0
  6818  005B68  6EE6               	movwf	postinc1,c
  6819  005B6A  0E00               	movlw	0
  6820  005B6C  6EE6               	movwf	postinc1,c
  6821  005B6E  0E00               	movlw	0
  6822  005B70  6EE6               	movwf	postinc1,c
  6823                           
  6824                           ;stkvar	__this @ sp[(-4)+-2]
  6825  005B72  0EFA               	movlw	-6
  6826  005B74  006F FF8F FFE6     	movff	plusw1,postinc1
  6827  005B7A  006F FF8F FFE6     	movff	plusw1,postinc1
  6828  005B80  ECE5  F019         	call	_memset	;wreg free
  6829                           
  6830                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  6831  005B84  52E5               	movf	postdec1,f,c
  6832  005B86  52E5               	movf	postdec1,f,c
  6833  005B88  0012               	return		;funcret
  6834  005B8A                     __end_of_ringBufS_init:
  6835                           	opt callstack 0
  6836                           
  6837 ;; *************** function _eaDogM_WriteStringAtPos *****************
  6838 ;; Defined at:
  6839 ;;		line 221 in file "eadog.c"
  6840 ;; Parameters:    Size  Location     Type
  6841 ;;  r               1  [STACK] unsigned char 
  6842 ;;  c               1  [STACK] unsigned char 
  6843 ;;  strPtr          1  [STACK] PTR unsigned char 
  6844 ;;		 -> V(88), 
  6845 ;; Auto vars:     Size  Location     Type
  6846 ;;		None
  6847 ;; Return value:  Size  Location     Type
  6848 ;;                  1  [STACK] void 
  6849 ;; Registers used:
  6850 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  6851 ;; Tracked objects:
  6852 ;;		On entry : 3F/0
  6853 ;;		On exit  : 3F/3B
  6854 ;;		Unchanged: 0/0
  6855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6860 ;;Total ram usage:        0 bytes
  6861 ;; Hardware stack levels used:    1
  6862 ;; Hardware stack levels required when called:   13
  6863 ;; This function calls:
  6864 ;;		_eaDogM_WriteString
  6865 ;;		_send_lcd_cmd_dma
  6866 ;; This function is called by:
  6867 ;;		_main
  6868 ;; This function uses a reentrant model
  6869 ;;
  6870                           
  6871                           	psect	text24
  6872  005A0E                     __ptext24:
  6873                           	opt callstack 0
  6874  005A0E                     _eaDogM_WriteStringAtPos:
  6875                           	opt callstack 17
  6876                           
  6877                           ;eadog.c: 221: void eaDogM_WriteStringAtPos(uint8_t r, uint8_t c, char *strPtr);eadog.c:
      +                           222: {;eadog.c: 223:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  6878                           ;stkvar	_c @ sp[(0)+-2]
  6879                           
  6880                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6881                           ;incstack = 0
  6882  005A0E  0EFE               	movlw	-2
  6883  005A10  006F FF8C  F046    	movff	plusw1,btemp+11
  6884                           
  6885                           ;stkvar	_r @ sp[(0)+-1]
  6886  005A16  0EFF               	movlw	-1
  6887  005A18  50E3               	movf	plusw1,w,c
  6888  005A1A  0D10               	mullw	16
  6889  005A1C  50F3               	movf	prodl,w,c
  6890  005A1E  2446               	addwf	btemp+11,w,c
  6891  005A20  0F80               	addlw	128
  6892  005A22  6EE6               	movwf	postinc1,c
  6893  005A24  EC1F  F02B         	call	_send_lcd_cmd_dma	;wreg free
  6894                           
  6895                           ; BSR set to: 0
  6896                           ;eadog.c: 224:  eaDogM_WriteString(strPtr);
  6897                           ;stkvar	_strPtr @ sp[(0)+-3]
  6898  005A28  0EFD               	movlw	-3
  6899  005A2A  50E3               	movf	plusw1,w,c
  6900  005A2C  6EE6               	movwf	postinc1,c
  6901  005A2E  EC84  F028         	call	_eaDogM_WriteString	;wreg free
  6902                           
  6903                           ; BSR set to: 59
  6904                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
  6905  005A32  52E5               	movf	postdec1,f,c
  6906  005A34  52E5               	movf	postdec1,f,c
  6907  005A36  52E5               	movf	postdec1,f,c
  6908  005A38  0012               	return		;funcret
  6909  005A3A                     __end_of_eaDogM_WriteStringAtPos:
  6910                           	opt callstack 0
  6911                           
  6912 ;; *************** function _eaDogM_WriteString *****************
  6913 ;; Defined at:
  6914 ;;		line 167 in file "eadog.c"
  6915 ;; Parameters:    Size  Location     Type
  6916 ;;  strPtr          1  [STACK] PTR unsigned char 
  6917 ;;		 -> V(88), 
  6918 ;; Auto vars:     Size  Location     Type
  6919 ;;		None
  6920 ;; Return value:  Size  Location     Type
  6921 ;;                  1  [STACK] void 
  6922 ;; Registers used:
  6923 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  6924 ;; Tracked objects:
  6925 ;;		On entry : 3F/0
  6926 ;;		On exit  : 3F/3B
  6927 ;;		Unchanged: 0/0
  6928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6933 ;;Total ram usage:        0 bytes
  6934 ;; Hardware stack levels used:    1
  6935 ;; Hardware stack levels required when called:   12
  6936 ;; This function calls:
  6937 ;;		_printf
  6938 ;;		_ringBufS_flush
  6939 ;;		_start_lcd
  6940 ;;		_strlen
  6941 ;;		_wait_lcd_set
  6942 ;; This function is called by:
  6943 ;;		_eaDogM_WriteStringAtPos
  6944 ;; This function uses a reentrant model
  6945 ;;
  6946                           
  6947                           	psect	text25
  6948  005108                     __ptext25:
  6949                           	opt callstack 0
  6950  005108                     _eaDogM_WriteString:
  6951                           	opt callstack 17
  6952                           
  6953                           ;eadog.c: 167: void eaDogM_WriteString(char *strPtr);eadog.c: 168: {;eadog.c: 169:  wait
      +                          _lcd_set();
  6954                           
  6955                           ; BSR set to: 59
  6956                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6957                           ;incstack = 0
  6958  005108  EC57  F030         	call	_wait_lcd_set	;wreg free
  6959                           
  6960                           ; BSR set to: 0
  6961                           ;eadog.c: 171:  ringBufS_flush(spi_link.tx1a, 0);
  6962  00510C  0E00               	movlw	0
  6963  00510E  6EE6               	movwf	postinc1,c
  6964  005110  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
  6965  005116  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
  6966  00511C  EC6A  F029         	call	_ringBufS_flush	;wreg free
  6967  005120  94BC               	bcf	16316,2,c	;volatile
  6968                           
  6969                           ;eadog.c: 173:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  6970                           ;stkvar	_strPtr @ sp[(0)+-1]
  6971  005122  0EFF               	movlw	-1
  6972  005124  006F FF8C  F046    	movff	plusw1,btemp+11
  6973  00512A  0060  F11B  FFE6   	movff	btemp+11,postinc1
  6974  005130  0E00               	movlw	0
  6975  005132  6EE6               	movwf	postinc1,c
  6976  005134  ECE3  F027         	call	_strlen	;wreg free
  6977  005138  503C               	movf	btemp+1,w,c
  6978  00513A  E104               	bnz	u4940
  6979  00513C  0E41               	movlw	65
  6980  00513E  5C3B               	subwf	btemp,w,c
  6981  005140  A0D8               	btfss	status,0,c
  6982  005142  D008               	goto	l7831
  6983  005144                     u4940:
  6984                           
  6985                           ;stkvar	_strPtr @ sp[(0)+-1]
  6986  005144  0EFF               	movlw	-1
  6987  005146  50E3               	movf	plusw1,w,c
  6988  005148  6ED9               	movwf	fsr2l,c
  6989  00514A  6ADA               	clrf	fsr2h,c
  6990  00514C  0E40               	movlw	64
  6991  00514E  26D9               	addwf	fsr2l,f,c
  6992  005150  0E00               	movlw	0
  6993  005152  6EDF               	movwf	indf2,c
  6994  005154                     l7831:
  6995                           
  6996                           ;eadog.c: 174:  DMA1CON0bits.EN = 0;
  6997  005154  013B               	movlb	59	; () banked
  6998  005156  9FFC               	bcf	252,7,b	;volatile
  6999                           
  7000                           ; BSR set to: 59
  7001                           ;eadog.c: 175:  DMA1SSZ = strlen(strPtr);
  7002                           ;stkvar	_strPtr @ sp[(0)+-1]
  7003  005158  0EFF               	movlw	-1
  7004  00515A  006F FF8C  F046    	movff	plusw1,btemp+11
  7005  005160  0060  F11B  FFE6   	movff	btemp+11,postinc1
  7006  005166  0E00               	movlw	0
  7007  005168  6EE6               	movwf	postinc1,c
  7008  00516A  ECE3  F027         	call	_strlen	;wreg free
  7009  00516E  0060  F0EF  FBF7   	movff	btemp,15351	;volatile
  7010  005174  0060  F0F3  FBF8   	movff	btemp+1,15352	;volatile
  7011                           
  7012                           ;eadog.c: 176:  DMA1CON0bits.EN = 1;
  7013  00517A  013B               	movlb	59	; () banked
  7014  00517C  8FFC               	bsf	252,7,b	;volatile
  7015                           
  7016                           ; BSR set to: 59
  7017                           ;eadog.c: 177:  printf("%s", strPtr);
  7018                           ;stkvar	_strPtr @ sp[(0)+-1]
  7019  00517E  0EFF               	movlw	-1
  7020  005180  006F FF8C  F046    	movff	plusw1,btemp+11
  7021  005186  0060  F11B  FFE6   	movff	btemp+11,postinc1
  7022  00518C  0E00               	movlw	0
  7023  00518E  6EE6               	movwf	postinc1,c
  7024  005190  0E88               	movlw	(STR_2+9)& (0+255)
  7025  005192  6EE6               	movwf	postinc1,c
  7026  005194  0E03               	movlw	3
  7027  005196  6EE6               	movwf	postinc1,c
  7028  005198  EC91  F02A         	call	_printf	;wreg free
  7029                           
  7030                           ; BSR set to: 0
  7031                           ;eadog.c: 178:  start_lcd();
  7032  00519C  EC5A  F030         	call	_start_lcd	;wreg free
  7033                           
  7034                           ; BSR set to: 59
  7035                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  7036  0051A0  52E5               	movf	postdec1,f,c
  7037  0051A2  0012               	return		;funcret
  7038  0051A4                     __end_of_eaDogM_WriteString:
  7039                           	opt callstack 0
  7040                           
  7041 ;; *************** function _eaDogM_WriteCommand *****************
  7042 ;; Defined at:
  7043 ;;		line 143 in file "eadog.c"
  7044 ;; Parameters:    Size  Location     Type
  7045 ;;  cmd             1  [STACK] unsigned char 
  7046 ;; Auto vars:     Size  Location     Type
  7047 ;;		None
  7048 ;; Return value:  Size  Location     Type
  7049 ;;                  1  [STACK] void 
  7050 ;; Registers used:
  7051 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  7052 ;; Tracked objects:
  7053 ;;		On entry : 3F/3D
  7054 ;;		On exit  : 3F/0
  7055 ;;		Unchanged: 0/0
  7056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7061 ;;Total ram usage:        0 bytes
  7062 ;; Hardware stack levels used:    1
  7063 ;; Hardware stack levels required when called:   13
  7064 ;; This function calls:
  7065 ;;		_send_lcd_cmd_dma
  7066 ;; This function is called by:
  7067 ;;		_main
  7068 ;; This function uses a reentrant model
  7069 ;;
  7070                           
  7071                           	psect	text26
  7072  006014                     __ptext26:
  7073                           	opt callstack 0
  7074  006014                     _eaDogM_WriteCommand:
  7075                           	opt callstack 17
  7076                           
  7077                           ;eadog.c: 143: void eaDogM_WriteCommand(uint8_t cmd);eadog.c: 144: {;eadog.c: 145:  send
      +                          _lcd_cmd_dma(cmd);
  7078                           ;stkvar	_cmd @ sp[(0)+-1]
  7079                           
  7080                           ; BSR set to: 59
  7081                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7082                           ;incstack = 0
  7083  006014  0EFF               	movlw	-1
  7084  006016  50E3               	movf	plusw1,w,c
  7085  006018  6EE6               	movwf	postinc1,c
  7086  00601A  EC1F  F02B         	call	_send_lcd_cmd_dma	;wreg free
  7087                           
  7088                           ; BSR set to: 0
  7089                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  7090  00601E  52E5               	movf	postdec1,f,c
  7091  006020  0012               	return		;funcret
  7092  006022                     __end_of_eaDogM_WriteCommand:
  7093                           	opt callstack 0
  7094                           
  7095 ;; *************** function _send_lcd_cmd_dma *****************
  7096 ;; Defined at:
  7097 ;;		line 187 in file "eadog.c"
  7098 ;; Parameters:    Size  Location     Type
  7099 ;;  strPtr          1  [STACK] unsigned char 
  7100 ;; Auto vars:     Size  Location     Type
  7101 ;;		None
  7102 ;; Return value:  Size  Location     Type
  7103 ;;                  1  [STACK] void 
  7104 ;; Registers used:
  7105 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  7106 ;; Tracked objects:
  7107 ;;		On entry : 0/0
  7108 ;;		On exit  : 3F/0
  7109 ;;		Unchanged: 0/0
  7110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7115 ;;Total ram usage:        0 bytes
  7116 ;; Hardware stack levels used:    1
  7117 ;; Hardware stack levels required when called:   12
  7118 ;; This function calls:
  7119 ;;		_printf
  7120 ;;		_ringBufS_flush
  7121 ;;		_start_lcd
  7122 ;;		_wait_lcd_done
  7123 ;;		_wait_lcd_set
  7124 ;; This function is called by:
  7125 ;;		_eaDogM_WriteCommand
  7126 ;;		_eaDogM_WriteStringAtPos
  7127 ;; This function uses a reentrant model
  7128 ;;
  7129                           
  7130                           	psect	text27
  7131  00563E                     __ptext27:
  7132                           	opt callstack 0
  7133  00563E                     _send_lcd_cmd_dma:
  7134                           	opt callstack 17
  7135                           
  7136                           ;eadog.c: 187: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 188: {;eadog.c: 189:  wait
      +                          _lcd_set();
  7137                           
  7138                           ; BSR set to: 0
  7139                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7140                           ;incstack = 0
  7141  00563E  EC57  F030         	call	_wait_lcd_set	;wreg free
  7142                           
  7143                           ; BSR set to: 0
  7144                           ;eadog.c: 191:  ringBufS_flush(spi_link.tx1a, 0);
  7145  005642  0E00               	movlw	0
  7146  005644  6EE6               	movwf	postinc1,c
  7147  005646  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
  7148  00564C  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
  7149  005652  EC6A  F029         	call	_ringBufS_flush	;wreg free
  7150  005656  92BC               	bcf	16316,1,c	;volatile
  7151  005658  94BC               	bcf	16316,2,c	;volatile
  7152                           
  7153                           ;eadog.c: 194:  DMA1CON0bits.EN = 0;
  7154  00565A  013B               	movlb	59	; () banked
  7155  00565C  9FFC               	bcf	252,7,b	;volatile
  7156                           
  7157                           ; BSR set to: 59
  7158                           ;eadog.c: 195:  DMA1SSZ = 1;
  7159  00565E  0E00               	movlw	0
  7160  005660  6FF8               	movwf	248,b	;volatile
  7161  005662  0E01               	movlw	1
  7162  005664  6FF7               	movwf	247,b	;volatile
  7163                           
  7164                           ; BSR set to: 59
  7165                           ;eadog.c: 196:  DMA1CON0bits.EN = 1;
  7166  005666  8FFC               	bsf	252,7,b	;volatile
  7167                           
  7168                           ; BSR set to: 59
  7169                           ;eadog.c: 197:  printf("%c", strPtr);
  7170                           ;stkvar	_strPtr @ sp[(0)+-1]
  7171  005668  0EFF               	movlw	-1
  7172  00566A  50E3               	movf	plusw1,w,c
  7173  00566C  6EE6               	movwf	postinc1,c
  7174  00566E  0E00               	movlw	0
  7175  005670  6EE6               	movwf	postinc1,c
  7176  005672  0EA3               	movlw	STR_17& (0+255)
  7177  005674  6EE6               	movwf	postinc1,c
  7178  005676  0E03               	movlw	3
  7179  005678  6EE6               	movwf	postinc1,c
  7180  00567A  EC91  F02A         	call	_printf	;wreg free
  7181                           
  7182                           ; BSR set to: 0
  7183                           ;eadog.c: 198:  start_lcd();
  7184  00567E  EC5A  F030         	call	_start_lcd	;wreg free
  7185                           
  7186                           ; BSR set to: 59
  7187                           ;eadog.c: 199:  wait_lcd_done();
  7188  005682  EC99  F02F         	call	_wait_lcd_done	;wreg free
  7189                           
  7190                           ; BSR set to: 0
  7191  005686  82BC               	bsf	16316,1,c	;volatile
  7192                           
  7193                           ; BSR set to: 0
  7194                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  7195  005688  52E5               	movf	postdec1,f,c
  7196  00568A  0012               	return		;funcret
  7197  00568C                     __end_of_send_lcd_cmd_dma:
  7198                           	opt callstack 0
  7199                           
  7200 ;; *************** function _wait_lcd_set *****************
  7201 ;; Defined at:
  7202 ;;		line 114 in file "eadog.c"
  7203 ;; Parameters:    Size  Location     Type
  7204 ;;		None
  7205 ;; Auto vars:     Size  Location     Type
  7206 ;;		None
  7207 ;; Return value:  Size  Location     Type
  7208 ;;                  1  [STACK] void 
  7209 ;; Registers used:
  7210 ;;		None
  7211 ;; Tracked objects:
  7212 ;;		On entry : 0/0
  7213 ;;		On exit  : 3F/0
  7214 ;;		Unchanged: 0/0
  7215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7220 ;;Total ram usage:        0 bytes
  7221 ;; Hardware stack levels used:    1
  7222 ;; Hardware stack levels required when called:    3
  7223 ;; This function calls:
  7224 ;;		Nothing
  7225 ;; This function is called by:
  7226 ;;		_eaDogM_WriteString
  7227 ;;		_send_lcd_cmd_dma
  7228 ;; This function uses a reentrant model
  7229 ;;
  7230                           
  7231                           	psect	text28
  7232  0060AE                     __ptext28:
  7233                           	opt callstack 0
  7234  0060AE                     _wait_lcd_set:
  7235                           	opt callstack 25
  7236                           
  7237                           ;eadog.c: 116:  spi_link.LCD_DATA = 1;
  7238                           
  7239                           ; BSR set to: 0
  7240                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7241                           ;incstack = 0
  7242  0060AE  0100               	movlb	0	; () banked
  7243  0060B0  876D               	bsf	_spi_link& (0+255),3,b	;volatile
  7244                           
  7245                           ; BSR set to: 0
  7246                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  7247  0060B2  0012               	return		;funcret
  7248  0060B4                     __end_of_wait_lcd_set:
  7249                           	opt callstack 0
  7250                           
  7251 ;; *************** function _wait_lcd_done *****************
  7252 ;; Defined at:
  7253 ;;		line 124 in file "eadog.c"
  7254 ;; Parameters:    Size  Location     Type
  7255 ;;		None
  7256 ;; Auto vars:     Size  Location     Type
  7257 ;;		None
  7258 ;; Return value:  Size  Location     Type
  7259 ;;                  1  [STACK] void 
  7260 ;; Registers used:
  7261 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7262 ;; Tracked objects:
  7263 ;;		On entry : 4/0
  7264 ;;		On exit  : 3F/0
  7265 ;;		Unchanged: 0/0
  7266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7271 ;;Total ram usage:        0 bytes
  7272 ;; Hardware stack levels used:    1
  7273 ;; Hardware stack levels required when called:    4
  7274 ;; This function calls:
  7275 ;;		_wdtdelay
  7276 ;; This function is called by:
  7277 ;;		_main
  7278 ;;		_send_lcd_cmd_dma
  7279 ;; This function uses a reentrant model
  7280 ;;
  7281                           
  7282                           	psect	text29
  7283  005F32                     __ptext29:
  7284                           	opt callstack 0
  7285  005F32                     _wait_lcd_done:
  7286                           	opt callstack 26
  7287                           
  7288                           ;eadog.c: 126:  while (spi_link.LCD_DATA);
  7289                           
  7290                           ; BSR set to: 0
  7291                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7292                           ;incstack = 0
  7293  005F32  0100               	movlb	0	; () banked
  7294  005F34  B76D               	btfsc	_spi_link& (0+255),3,b	;volatile
  7295  005F36  D7FD               	goto	_wait_lcd_done
  7296                           
  7297                           ; BSR set to: 0
  7298                           ;eadog.c: 127:  wdtdelay(50);
  7299  005F38  0E32               	movlw	50
  7300  005F3A  6EE6               	movwf	postinc1,c
  7301  005F3C  0E00               	movlw	0
  7302  005F3E  6EE6               	movwf	postinc1,c
  7303  005F40  0E00               	movlw	0
  7304  005F42  6EE6               	movwf	postinc1,c
  7305  005F44  0E00               	movlw	0
  7306  005F46  6EE6               	movwf	postinc1,c
  7307  005F48  ECF1  F02A         	call	_wdtdelay	;wreg free
  7308                           
  7309                           ; BSR set to: 0
  7310                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  7311  005F4C  0012               	return		;funcret
  7312  005F4E                     __end_of_wait_lcd_done:
  7313                           	opt callstack 0
  7314                           
  7315 ;; *************** function _wdtdelay *****************
  7316 ;; Defined at:
  7317 ;;		line 21 in file "eadog.c"
  7318 ;; Parameters:    Size  Location     Type
  7319 ;;  delay           4  [STACK] unsigned long 
  7320 ;; Auto vars:     Size  Location     Type
  7321 ;;		None
  7322 ;; Return value:  Size  Location     Type
  7323 ;;                  1  [STACK] void 
  7324 ;; Registers used:
  7325 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7326 ;; Tracked objects:
  7327 ;;		On entry : 0/0
  7328 ;;		On exit  : 3F/0
  7329 ;;		Unchanged: 0/0
  7330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7335 ;;Total ram usage:        0 bytes
  7336 ;; Hardware stack levels used:    1
  7337 ;; Hardware stack levels required when called:    3
  7338 ;; This function calls:
  7339 ;;		Nothing
  7340 ;; This function is called by:
  7341 ;;		_init_display
  7342 ;;		_send_lcd_cmd
  7343 ;;		_send_lcd_cmd_long
  7344 ;;		_wait_lcd_done
  7345 ;; This function uses a reentrant model
  7346 ;;
  7347                           
  7348                           	psect	text30
  7349  0055E2                     __ptext30:
  7350                           	opt callstack 0
  7351  0055E2                     _wdtdelay:
  7352                           	opt callstack 26
  7353                           
  7354                           ;eadog.c: 21: void wdtdelay(uint32_t delay);eadog.c: 22: {;eadog.c: 23:  static uint32_t
      +                           dcount;;eadog.c: 25:  for (dcount = 0; dcount <= delay; dcount++) {
  7355                           
  7356                           ; BSR set to: 0
  7357                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7358                           ;incstack = 0
  7359  0055E2  0100               	movlb	0	; () banked
  7360  0055E4  6B8C               	clrf	wdtdelay@dcount& (0+255),b
  7361  0055E6  6B8D               	clrf	(wdtdelay@dcount+1)& (0+255),b
  7362  0055E8  6B8E               	clrf	(wdtdelay@dcount+2)& (0+255),b
  7363  0055EA  6B8F               	clrf	(wdtdelay@dcount+3)& (0+255),b
  7364  0055EC  D009               	goto	l5563
  7365  0055EE                     l1320:
  7366                           
  7367                           ; BSR set to: 0
  7368                           ;eadog.c: 26:   __nop();
  7369  0055EE  F000               	nop	
  7370  0055F0  0004               	clrwdt		;# 
  7371                           
  7372                           ;eadog.c: 28:  };
  7373  0055F2  0E01               	movlw	1
  7374  0055F4  0100               	movlb	0	; () banked
  7375  0055F6  278C               	addwf	wdtdelay@dcount& (0+255),f,b
  7376  0055F8  0E00               	movlw	0
  7377  0055FA  238D               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  7378  0055FC  238E               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  7379  0055FE  238F               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  7380  005600                     l5563:
  7381                           
  7382                           ; BSR set to: 0
  7383                           ;stkvar	_delay @ sp[(0)+-4]
  7384  005600  0EFC               	movlw	-4
  7385  005602  006F FF8C  F03B    	movff	plusw1,btemp
  7386  005608  518C               	movf	wdtdelay@dcount& (0+255),w,b
  7387  00560A  5C3B               	subwf	btemp,w,c
  7388  00560C  0EFD               	movlw	-3
  7389  00560E  006F FF8C  F03B    	movff	plusw1,btemp
  7390  005614  518D               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  7391  005616  583B               	subwfb	btemp,w,c
  7392  005618  0EFE               	movlw	-2
  7393  00561A  006F FF8C  F03B    	movff	plusw1,btemp
  7394  005620  518E               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  7395  005622  583B               	subwfb	btemp,w,c
  7396  005624  0EFF               	movlw	-1
  7397  005626  006F FF8C  F03B    	movff	plusw1,btemp
  7398  00562C  518F               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  7399  00562E  583B               	subwfb	btemp,w,c
  7400  005630  B0D8               	btfsc	status,0,c
  7401  005632  D7DD               	goto	l1320
  7402                           
  7403                           ; BSR set to: 0
  7404                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  7405  005634  52E5               	movf	postdec1,f,c
  7406  005636  52E5               	movf	postdec1,f,c
  7407  005638  52E5               	movf	postdec1,f,c
  7408  00563A  52E5               	movf	postdec1,f,c
  7409  00563C  0012               	return		;funcret
  7410  00563E                     __end_of_wdtdelay:
  7411                           	opt callstack 0
  7412                           
  7413 ;; *************** function _start_lcd *****************
  7414 ;; Defined at:
  7415 ;;		line 109 in file "eadog.c"
  7416 ;; Parameters:    Size  Location     Type
  7417 ;;		None
  7418 ;; Auto vars:     Size  Location     Type
  7419 ;;		None
  7420 ;; Return value:  Size  Location     Type
  7421 ;;                  1  [STACK] void 
  7422 ;; Registers used:
  7423 ;;		None
  7424 ;; Tracked objects:
  7425 ;;		On entry : 3F/0
  7426 ;;		On exit  : 3F/3B
  7427 ;;		Unchanged: 0/0
  7428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7433 ;;Total ram usage:        0 bytes
  7434 ;; Hardware stack levels used:    1
  7435 ;; Hardware stack levels required when called:    3
  7436 ;; This function calls:
  7437 ;;		Nothing
  7438 ;; This function is called by:
  7439 ;;		_eaDogM_WriteString
  7440 ;;		_send_lcd_cmd_dma
  7441 ;; This function uses a reentrant model
  7442 ;;
  7443                           
  7444                           	psect	text31
  7445  0060B4                     __ptext31:
  7446                           	opt callstack 0
  7447  0060B4                     _start_lcd:
  7448                           	opt callstack 25
  7449                           
  7450                           ;eadog.c: 111:  DMA1CON0bits.DMA1SIRQEN = 1;
  7451                           
  7452                           ; BSR set to: 0
  7453                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7454                           ;incstack = 0
  7455  0060B4  013B               	movlb	59	; () banked
  7456  0060B6  8DFC               	bsf	252,6,b	;volatile
  7457                           
  7458                           ; BSR set to: 59
  7459                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  7460  0060B8  0012               	return		;funcret
  7461  0060BA                     __end_of_start_lcd:
  7462                           	opt callstack 0
  7463                           
  7464 ;; *************** function _ringBufS_flush *****************
  7465 ;; Defined at:
  7466 ;;		line 76 in file "ringbufs.c"
  7467 ;; Parameters:    Size  Location     Type
  7468 ;;  _this           2  [STACK] PTR struct ringBufS_t
  7469 ;;		 -> ring_buf1(67), 
  7470 ;;  clearBuffer     1  [STACK] const char 
  7471 ;; Auto vars:     Size  Location     Type
  7472 ;;		None
  7473 ;; Return value:  Size  Location     Type
  7474 ;;                  1  [STACK] void 
  7475 ;; Registers used:
  7476 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7477 ;; Tracked objects:
  7478 ;;		On entry : 3F/0
  7479 ;;		On exit  : 0/0
  7480 ;;		Unchanged: 0/0
  7481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7486 ;;Total ram usage:        0 bytes
  7487 ;; Hardware stack levels used:    1
  7488 ;; Hardware stack levels required when called:    4
  7489 ;; This function calls:
  7490 ;;		_memset
  7491 ;; This function is called by:
  7492 ;;		_eaDogM_WriteString
  7493 ;;		_send_lcd_cmd_dma
  7494 ;; This function uses a reentrant model
  7495 ;;
  7496                           
  7497                           	psect	text32
  7498  0052D4                     __ptext32:
  7499                           	opt callstack 0
  7500  0052D4                     _ringBufS_flush:
  7501                           	opt callstack 24
  7502                           
  7503                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  7504                           ;stkvar	__this @ sp[(0)+-2]
  7505                           
  7506                           ; BSR set to: 59
  7507                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7508                           ;incstack = 0
  7509  0052D4  0EFE               	movlw	-2
  7510  0052D6  006F FF8C  F045    	movff	plusw1,btemp+10
  7511  0052DC  0EFF               	movlw	-1
  7512  0052DE  006F FF8C  F046    	movff	plusw1,btemp+11
  7513  0052E4  0E42               	movlw	66
  7514  0052E6  2445               	addwf	btemp+10,w,c
  7515  0052E8  6ED9               	movwf	fsr2l,c
  7516  0052EA  0E00               	movlw	0
  7517  0052EC  2046               	addwfc	btemp+11,w,c
  7518  0052EE  6EDA               	movwf	fsr2h,c
  7519  0052F0  0E00               	movlw	0
  7520  0052F2  6EDF               	movwf	indf2,c
  7521                           
  7522                           ;ringbufs.c: 79:  _this->head = 0;
  7523                           ;stkvar	__this @ sp[(0)+-2]
  7524  0052F4  0EFE               	movlw	-2
  7525  0052F6  006F FF8C  F045    	movff	plusw1,btemp+10
  7526  0052FC  0EFF               	movlw	-1
  7527  0052FE  006F FF8C  F046    	movff	plusw1,btemp+11
  7528  005304  0E40               	movlw	64
  7529  005306  2445               	addwf	btemp+10,w,c
  7530  005308  6ED9               	movwf	fsr2l,c
  7531  00530A  0E00               	movlw	0
  7532  00530C  2046               	addwfc	btemp+11,w,c
  7533  00530E  6EDA               	movwf	fsr2h,c
  7534  005310  0E00               	movlw	0
  7535  005312  6EDF               	movwf	indf2,c
  7536                           
  7537                           ;ringbufs.c: 80:  _this->tail = 0;
  7538                           ;stkvar	__this @ sp[(0)+-2]
  7539  005314  0EFE               	movlw	-2
  7540  005316  006F FF8C  F045    	movff	plusw1,btemp+10
  7541  00531C  0EFF               	movlw	-1
  7542  00531E  006F FF8C  F046    	movff	plusw1,btemp+11
  7543  005324  0E41               	movlw	65
  7544  005326  2445               	addwf	btemp+10,w,c
  7545  005328  6ED9               	movwf	fsr2l,c
  7546  00532A  0E00               	movlw	0
  7547  00532C  2046               	addwfc	btemp+11,w,c
  7548  00532E  6EDA               	movwf	fsr2h,c
  7549  005330  0E00               	movlw	0
  7550  005332  6EDF               	movwf	indf2,c
  7551                           
  7552                           ;ringbufs.c: 81:  if (clearBuffer) {
  7553                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  7554  005334  0EFD               	movlw	-3
  7555  005336  50E3               	movf	plusw1,w,c
  7556  005338  B4D8               	btfsc	status,2,c
  7557  00533A  D011               	goto	l1456
  7558                           
  7559                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  7560  00533C  0E40               	movlw	64
  7561  00533E  6EE6               	movwf	postinc1,c
  7562  005340  0E00               	movlw	0
  7563  005342  6EE6               	movwf	postinc1,c
  7564  005344  0E00               	movlw	0
  7565  005346  6EE6               	movwf	postinc1,c
  7566  005348  0E00               	movlw	0
  7567  00534A  6EE6               	movwf	postinc1,c
  7568                           
  7569                           ;stkvar	__this @ sp[(-4)+-2]
  7570  00534C  0EFA               	movlw	-6
  7571  00534E  006F FF8F FFE6     	movff	plusw1,postinc1
  7572  005354  006F FF8F FFE6     	movff	plusw1,postinc1
  7573  00535A  ECE5  F019         	call	_memset	;wreg free
  7574  00535E                     l1456:
  7575                           
  7576                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  7577  00535E  52E5               	movf	postdec1,f,c
  7578  005360  52E5               	movf	postdec1,f,c
  7579  005362  52E5               	movf	postdec1,f,c
  7580  005364  0012               	return		;funcret
  7581  005366                     __end_of_ringBufS_flush:
  7582                           	opt callstack 0
  7583                           
  7584 ;; *************** function _memset *****************
  7585 ;; Defined at:
  7586 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/memset.c"
  7587 ;; Parameters:    Size  Location     Type
  7588 ;;  dest            2  [STACK] PTR void 
  7589 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7590 ;;  c               2  [STACK] int 
  7591 ;;  n               2  [STACK] unsigned int 
  7592 ;; Auto vars:     Size  Location     Type
  7593 ;;  s               2  [STACK] PTR unsigned char 
  7594 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7595 ;;  k               2  [STACK] unsigned int 
  7596 ;; Return value:  Size  Location     Type
  7597 ;;                  2  [STACK] PTR void 
  7598 ;; Registers used:
  7599 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7600 ;; Tracked objects:
  7601 ;;		On entry : 0/0
  7602 ;;		On exit  : 0/0
  7603 ;;		Unchanged: 0/0
  7604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7609 ;;Total ram usage:        0 bytes
  7610 ;; Hardware stack levels used:    1
  7611 ;; Hardware stack levels required when called:    3
  7612 ;; This function calls:
  7613 ;;		Nothing
  7614 ;; This function is called by:
  7615 ;;		_ringBufS_init
  7616 ;;		_ringBufS_flush
  7617 ;; This function uses a reentrant model
  7618 ;;
  7619                           
  7620                           	psect	text33
  7621  0033CA                     __ptext33:
  7622                           	opt callstack 0
  7623  0033CA                     _memset:
  7624                           	opt callstack 0
  7625                           
  7626                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7627  0033CA  52E6               	movf	postinc1,f,c
  7628  0033CC  52E6               	movf	postinc1,f,c
  7629  0033CE  52E6               	movf	postinc1,f,c
  7630  0033D0  52E6               	movf	postinc1,f,c
  7631                           
  7632                           ;stkvar	_dest @ sp[(-4)+-2]
  7633                           
  7634                           ;incstack = 0
  7635  0033D2  0EFA               	movlw	-6
  7636  0033D4  006F FF8C  F045    	movff	plusw1,btemp+10
  7637  0033DA  0EFB               	movlw	-5
  7638  0033DC  006F FF8C  F046    	movff	plusw1,btemp+11
  7639                           
  7640                           ;stkvar	_s @ sp[(-4)+0]
  7641  0033E2  0EFD               	movlw	-3
  7642  0033E4  0060  F11B  FFE3   	movff	btemp+11,plusw1
  7643  0033EA  0EFC               	movlw	-4
  7644  0033EC  0060  F117  FFE3   	movff	btemp+10,plusw1
  7645                           
  7646                           ;stkvar	_n @ sp[(-4)+-6]
  7647  0033F2  0EF6               	movlw	-10
  7648  0033F4  006F FF8C  F03B    	movff	plusw1,btemp
  7649  0033FA  0EF7               	movlw	-9
  7650  0033FC  50E3               	movf	plusw1,w,c
  7651  0033FE  103B               	iorwf	btemp,w,c
  7652  003400  B4D8               	btfsc	status,2,c
  7653  003402  D154               	goto	u4880
  7654                           
  7655                           ;stkvar	_c @ sp[(-4)+-4]
  7656                           ;stkvar	_s @ sp[(-4)+0]
  7657  003404  0EFC               	movlw	-4
  7658  003406  006F FF8F FFD9     	movff	plusw1,fsr2l
  7659  00340C  0EFD               	movlw	-3
  7660  00340E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7661  003414  0EF8               	movlw	-8
  7662  003416  006F FF8F FFDF     	movff	plusw1,indf2
  7663                           
  7664                           ;stkvar	_c @ sp[(-4)+-4]
  7665                           ;stkvar	_n @ sp[(-4)+-6]
  7666                           ;stkvar	_s @ sp[(-4)+0]
  7667  00341C  0EFC               	movlw	-4
  7668  00341E  006F FF8C  F045    	movff	plusw1,btemp+10
  7669  003424  0EFD               	movlw	-3
  7670  003426  006F FF8C  F046    	movff	plusw1,btemp+11
  7671  00342C  0EF6               	movlw	-10
  7672  00342E  50E3               	movf	plusw1,w,c
  7673  003430  2645               	addwf	btemp+10,f,c
  7674  003432  0EF7               	movlw	-9
  7675  003434  50E3               	movf	plusw1,w,c
  7676  003436  2246               	addwfc	btemp+11,f,c
  7677  003438  0EFF               	movlw	255
  7678  00343A  2445               	addwf	btemp+10,w,c
  7679  00343C  6ED9               	movwf	fsr2l,c
  7680  00343E  0EFF               	movlw	255
  7681  003440  2046               	addwfc	btemp+11,w,c
  7682  003442  6EDA               	movwf	fsr2h,c
  7683  003444  0EF8               	movlw	-8
  7684  003446  006F FF8F FFDF     	movff	plusw1,indf2
  7685                           
  7686                           ;stkvar	_n @ sp[(-4)+-6]
  7687  00344C  0EF7               	movlw	-9
  7688  00344E  50E3               	movf	plusw1,w,c
  7689  003450  E108               	bnz	l7701
  7690  003452  0EF6               	movlw	-10
  7691  003454  006F FF8C  F03B    	movff	plusw1,btemp
  7692  00345A  0E03               	movlw	3
  7693  00345C  5E3B               	subwf	btemp,f,c
  7694  00345E  A0D8               	btfss	status,0,c
  7695  003460  D125               	goto	u4880
  7696  003462                     l7701:
  7697                           
  7698                           ;stkvar	_c @ sp[(-4)+-4]
  7699                           ;stkvar	_s @ sp[(-4)+0]
  7700  003462  0EFC               	movlw	-4
  7701  003464  006F FF8C  F045    	movff	plusw1,btemp+10
  7702  00346A  0EFD               	movlw	-3
  7703  00346C  006F FF8C  F046    	movff	plusw1,btemp+11
  7704  003472  0E01               	movlw	1
  7705  003474  2445               	addwf	btemp+10,w,c
  7706  003476  6ED9               	movwf	fsr2l,c
  7707  003478  0E00               	movlw	0
  7708  00347A  2046               	addwfc	btemp+11,w,c
  7709  00347C  6EDA               	movwf	fsr2h,c
  7710  00347E  0EF8               	movlw	-8
  7711  003480  006F FF8F FFDF     	movff	plusw1,indf2
  7712                           
  7713                           ;stkvar	_c @ sp[(-4)+-4]
  7714                           ;stkvar	_s @ sp[(-4)+0]
  7715  003486  0EFC               	movlw	-4
  7716  003488  006F FF8C  F045    	movff	plusw1,btemp+10
  7717  00348E  0EFD               	movlw	-3
  7718  003490  006F FF8C  F046    	movff	plusw1,btemp+11
  7719  003496  0E02               	movlw	2
  7720  003498  2445               	addwf	btemp+10,w,c
  7721  00349A  6ED9               	movwf	fsr2l,c
  7722  00349C  0E00               	movlw	0
  7723  00349E  2046               	addwfc	btemp+11,w,c
  7724  0034A0  6EDA               	movwf	fsr2h,c
  7725  0034A2  0EF8               	movlw	-8
  7726  0034A4  006F FF8F FFDF     	movff	plusw1,indf2
  7727                           
  7728                           ;stkvar	_c @ sp[(-4)+-4]
  7729                           ;stkvar	_n @ sp[(-4)+-6]
  7730                           ;stkvar	_s @ sp[(-4)+0]
  7731  0034AA  0EFC               	movlw	-4
  7732  0034AC  006F FF8C  F045    	movff	plusw1,btemp+10
  7733  0034B2  0EFD               	movlw	-3
  7734  0034B4  006F FF8C  F046    	movff	plusw1,btemp+11
  7735  0034BA  0EF6               	movlw	-10
  7736  0034BC  50E3               	movf	plusw1,w,c
  7737  0034BE  2645               	addwf	btemp+10,f,c
  7738  0034C0  0EF7               	movlw	-9
  7739  0034C2  50E3               	movf	plusw1,w,c
  7740  0034C4  2246               	addwfc	btemp+11,f,c
  7741  0034C6  0EFE               	movlw	254
  7742  0034C8  2445               	addwf	btemp+10,w,c
  7743  0034CA  6ED9               	movwf	fsr2l,c
  7744  0034CC  0EFF               	movlw	255
  7745  0034CE  2046               	addwfc	btemp+11,w,c
  7746  0034D0  6EDA               	movwf	fsr2h,c
  7747  0034D2  0EF8               	movlw	-8
  7748  0034D4  006F FF8F FFDF     	movff	plusw1,indf2
  7749                           
  7750                           ;stkvar	_c @ sp[(-4)+-4]
  7751                           ;stkvar	_n @ sp[(-4)+-6]
  7752                           ;stkvar	_s @ sp[(-4)+0]
  7753  0034DA  0EFC               	movlw	-4
  7754  0034DC  006F FF8C  F045    	movff	plusw1,btemp+10
  7755  0034E2  0EFD               	movlw	-3
  7756  0034E4  006F FF8C  F046    	movff	plusw1,btemp+11
  7757  0034EA  0EF6               	movlw	-10
  7758  0034EC  50E3               	movf	plusw1,w,c
  7759  0034EE  2645               	addwf	btemp+10,f,c
  7760  0034F0  0EF7               	movlw	-9
  7761  0034F2  50E3               	movf	plusw1,w,c
  7762  0034F4  2246               	addwfc	btemp+11,f,c
  7763  0034F6  0EFD               	movlw	253
  7764  0034F8  2445               	addwf	btemp+10,w,c
  7765  0034FA  6ED9               	movwf	fsr2l,c
  7766  0034FC  0EFF               	movlw	255
  7767  0034FE  2046               	addwfc	btemp+11,w,c
  7768  003500  6EDA               	movwf	fsr2h,c
  7769  003502  0EF8               	movlw	-8
  7770  003504  006F FF8F FFDF     	movff	plusw1,indf2
  7771                           
  7772                           ;stkvar	_n @ sp[(-4)+-6]
  7773  00350A  0EF7               	movlw	-9
  7774  00350C  50E3               	movf	plusw1,w,c
  7775  00350E  E108               	bnz	l7707
  7776  003510  0EF6               	movlw	-10
  7777  003512  006F FF8C  F03B    	movff	plusw1,btemp
  7778  003518  0E07               	movlw	7
  7779  00351A  5E3B               	subwf	btemp,f,c
  7780  00351C  A0D8               	btfss	status,0,c
  7781  00351E  D0C6               	goto	u4880
  7782  003520                     l7707:
  7783                           
  7784                           ;stkvar	_c @ sp[(-4)+-4]
  7785                           ;stkvar	_s @ sp[(-4)+0]
  7786  003520  0EFC               	movlw	-4
  7787  003522  006F FF8C  F045    	movff	plusw1,btemp+10
  7788  003528  0EFD               	movlw	-3
  7789  00352A  006F FF8C  F046    	movff	plusw1,btemp+11
  7790  003530  0E03               	movlw	3
  7791  003532  2445               	addwf	btemp+10,w,c
  7792  003534  6ED9               	movwf	fsr2l,c
  7793  003536  0E00               	movlw	0
  7794  003538  2046               	addwfc	btemp+11,w,c
  7795  00353A  6EDA               	movwf	fsr2h,c
  7796  00353C  0EF8               	movlw	-8
  7797  00353E  006F FF8F FFDF     	movff	plusw1,indf2
  7798                           
  7799                           ;stkvar	_c @ sp[(-4)+-4]
  7800                           ;stkvar	_n @ sp[(-4)+-6]
  7801                           ;stkvar	_s @ sp[(-4)+0]
  7802  003544  0EFC               	movlw	-4
  7803  003546  006F FF8C  F045    	movff	plusw1,btemp+10
  7804  00354C  0EFD               	movlw	-3
  7805  00354E  006F FF8C  F046    	movff	plusw1,btemp+11
  7806  003554  0EF6               	movlw	-10
  7807  003556  50E3               	movf	plusw1,w,c
  7808  003558  2645               	addwf	btemp+10,f,c
  7809  00355A  0EF7               	movlw	-9
  7810  00355C  50E3               	movf	plusw1,w,c
  7811  00355E  2246               	addwfc	btemp+11,f,c
  7812  003560  0EFC               	movlw	252
  7813  003562  2445               	addwf	btemp+10,w,c
  7814  003564  6ED9               	movwf	fsr2l,c
  7815  003566  0EFF               	movlw	255
  7816  003568  2046               	addwfc	btemp+11,w,c
  7817  00356A  6EDA               	movwf	fsr2h,c
  7818  00356C  0EF8               	movlw	-8
  7819  00356E  006F FF8F FFDF     	movff	plusw1,indf2
  7820                           
  7821                           ;stkvar	_n @ sp[(-4)+-6]
  7822  003574  0EF7               	movlw	-9
  7823  003576  50E3               	movf	plusw1,w,c
  7824  003578  E108               	bnz	l7713
  7825  00357A  0EF6               	movlw	-10
  7826  00357C  006F FF8C  F03B    	movff	plusw1,btemp
  7827  003582  0E09               	movlw	9
  7828  003584  5E3B               	subwf	btemp,f,c
  7829  003586  A0D8               	btfss	status,0,c
  7830  003588  D091               	goto	u4880
  7831  00358A                     l7713:
  7832                           
  7833                           ;stkvar	_s @ sp[(-4)+0]
  7834  00358A  0EFC               	movlw	-4
  7835  00358C  006F FF8C  F045    	movff	plusw1,btemp+10
  7836  003592  1E45               	comf	btemp+10,f,c
  7837  003594  0EFD               	movlw	-3
  7838  003596  006F FF8C  F046    	movff	plusw1,btemp+11
  7839  00359C  1E46               	comf	btemp+11,f,c
  7840  00359E  2A45               	incf	btemp+10,f,c
  7841  0035A0  B4D8               	btfsc	status,2,c
  7842  0035A2  2A46               	incf	btemp+11,f,c
  7843  0035A4  0E03               	movlw	3
  7844  0035A6  1645               	andwf	btemp+10,f,c
  7845  0035A8  0E00               	movlw	0
  7846  0035AA  1646               	andwf	btemp+11,f,c
  7847                           
  7848                           ;stkvar	_k @ sp[(-4)+2]
  7849  0035AC  0EFE               	movlw	-2
  7850  0035AE  0060  F117  FFE3   	movff	btemp+10,plusw1
  7851  0035B4  0EFF               	movlw	-1
  7852  0035B6  0060  F11B  FFE3   	movff	btemp+11,plusw1
  7853                           
  7854                           ;stkvar	_k @ sp[(-4)+2]
  7855                           ;stkvar	_s @ sp[(-4)+0]
  7856  0035BC  0EFC               	movlw	-4
  7857  0035BE  50E3               	movf	plusw1,w,c
  7858  0035C0  6E3B               	movwf	btemp,c
  7859  0035C2  0EFE               	movlw	-2
  7860  0035C4  50E3               	movf	plusw1,w,c
  7861  0035C6  263B               	addwf	btemp,f,c
  7862  0035C8  0EFC               	movlw	-4
  7863  0035CA  0060  F0EF  FFE3   	movff	btemp,plusw1
  7864  0035D0  0EFD               	movlw	-3
  7865  0035D2  50E3               	movf	plusw1,w,c
  7866  0035D4  6E3B               	movwf	btemp,c
  7867  0035D6  0EFF               	movlw	-1
  7868  0035D8  50E3               	movf	plusw1,w,c
  7869  0035DA  223B               	addwfc	btemp,f,c
  7870  0035DC  0EFD               	movlw	-3
  7871  0035DE  0060  F0EF  FFE3   	movff	btemp,plusw1
  7872                           
  7873                           ;stkvar	_k @ sp[(-4)+2]
  7874                           ;stkvar	_n @ sp[(-4)+-6]
  7875  0035E4  0EF6               	movlw	-10
  7876  0035E6  50E3               	movf	plusw1,w,c
  7877  0035E8  6E3B               	movwf	btemp,c
  7878  0035EA  0EFE               	movlw	-2
  7879  0035EC  50E3               	movf	plusw1,w,c
  7880  0035EE  5E3B               	subwf	btemp,f,c
  7881  0035F0  0EF6               	movlw	-10
  7882  0035F2  0060  F0EF  FFE3   	movff	btemp,plusw1
  7883  0035F8  0EF7               	movlw	-9
  7884  0035FA  50E3               	movf	plusw1,w,c
  7885  0035FC  6E3B               	movwf	btemp,c
  7886  0035FE  0EFF               	movlw	-1
  7887  003600  50E3               	movf	plusw1,w,c
  7888  003602  5A3B               	subwfb	btemp,f,c
  7889  003604  0EF7               	movlw	-9
  7890  003606  0060  F0EF  FFE3   	movff	btemp,plusw1
  7891  00360C  0EFC               	movlw	252
  7892  00360E  6E45               	movwf	btemp+10,c
  7893  003610  0EFF               	movlw	255
  7894  003612  6E46               	movwf	btemp+11,c
  7895                           
  7896                           ;stkvar	_n @ sp[(-4)+-6]
  7897  003614  0EF6               	movlw	-10
  7898  003616  006F FF8C  F03B    	movff	plusw1,btemp
  7899  00361C  5045               	movf	btemp+10,w,c
  7900  00361E  163B               	andwf	btemp,f,c
  7901  003620  0EF6               	movlw	-10
  7902  003622  0060  F0EF  FFE3   	movff	btemp,plusw1
  7903  003628  0EF7               	movlw	-9
  7904  00362A  006F FF8C  F03B    	movff	plusw1,btemp
  7905  003630  5046               	movf	btemp+11,w,c
  7906  003632  163B               	andwf	btemp,f,c
  7907  003634  0EF7               	movlw	-9
  7908  003636  D02E               	goto	L23
  7909  003638                     l7721:
  7910                           
  7911                           ;stkvar	_c @ sp[(-4)+-4]
  7912                           ;stkvar	_s @ sp[(-4)+0]
  7913  003638  0EFC               	movlw	-4
  7914  00363A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7915  003640  0EFD               	movlw	-3
  7916  003642  006F FF8F FFDA     	movff	plusw1,fsr2h
  7917  003648  0EF8               	movlw	-8
  7918  00364A  006F FF8F FFDF     	movff	plusw1,indf2
  7919                           
  7920                           ;stkvar	_n @ sp[(-4)+-6]
  7921  003650  0EF6               	movlw	-10
  7922  003652  006F FF8C  F03B    	movff	plusw1,btemp
  7923  003658  0E01               	movlw	1
  7924  00365A  5E3B               	subwf	btemp,f,c
  7925  00365C  0EF6               	movlw	-10
  7926  00365E  0060  F0EF  FFE3   	movff	btemp,plusw1
  7927  003664  0EF7               	movlw	-9
  7928  003666  006F FF8C  F03B    	movff	plusw1,btemp
  7929  00366C  0E00               	movlw	0
  7930  00366E  5A3B               	subwfb	btemp,f,c
  7931  003670  0EF7               	movlw	-9
  7932  003672  0060  F0EF  FFE3   	movff	btemp,plusw1
  7933                           
  7934                           ;stkvar	_s @ sp[(-4)+0]
  7935  003678  0EFC               	movlw	-4
  7936  00367A  50E3               	movf	plusw1,w,c
  7937  00367C  0F01               	addlw	1
  7938  00367E  6E3B               	movwf	btemp,c
  7939  003680  0EFC               	movlw	-4
  7940  003682  0060  F0EF  FFE3   	movff	btemp,plusw1
  7941  003688  6A3B               	clrf	btemp,c
  7942  00368A  0EFD               	movlw	-3
  7943  00368C  50E3               	movf	plusw1,w,c
  7944  00368E  203B               	addwfc	btemp,w,c
  7945  003690  6E3B               	movwf	btemp,c
  7946  003692  0EFD               	movlw	-3
  7947  003694                     L23:
  7948  003694  0060  F0EF  FFE3   	movff	btemp,plusw1
  7949                           
  7950                           ;stkvar	_n @ sp[(-4)+-6]
  7951  00369A  0EF6               	movlw	-10
  7952  00369C  006F FF8C  F03B    	movff	plusw1,btemp
  7953  0036A2  0EF7               	movlw	-9
  7954  0036A4  50E3               	movf	plusw1,w,c
  7955  0036A6  103B               	iorwf	btemp,w,c
  7956  0036A8  A4D8               	btfss	status,2,c
  7957  0036AA  D7C6               	goto	l7721
  7958  0036AC                     u4880:
  7959                           
  7960                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  7961  0036AC  0EF6               	movlw	246
  7962  0036AE  26E1               	addwf	fsr1l,f,c
  7963  0036B0  0EFF               	movlw	255
  7964  0036B2  22E2               	addwfc	fsr1h,f,c
  7965  0036B4  0012               	return		;funcret
  7966  0036B6                     __end_of_memset:
  7967                           	opt callstack 0
  7968                           
  7969 ;; *************** function _printf *****************
  7970 ;; Defined at:
  7971 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
  7972 ;; Parameters:    Size  Location     Type
  7973 ;;  fmt             1  [STACK] PTR const unsigned char 
  7974 ;;		 -> STR_18(3), STR_17(3), STR_16(3), 
  7975 ;; Auto vars:     Size  Location     Type
  7976 ;;  ap              2  [STACK] PTR void [1]
  7977 ;;		 -> ?_printf(2), ?_sprintf(2), 
  7978 ;;  ret             2    0        int 
  7979 ;; Return value:  Size  Location     Type
  7980 ;;                  2  [STACK] int 
  7981 ;; Registers used:
  7982 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  7983 ;; Tracked objects:
  7984 ;;		On entry : 3F/3B
  7985 ;;		On exit  : 3F/0
  7986 ;;		Unchanged: 0/0
  7987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7992 ;;Total ram usage:        0 bytes
  7993 ;; Hardware stack levels used:    1
  7994 ;; Hardware stack levels required when called:   11
  7995 ;; This function calls:
  7996 ;;		_vfprintf
  7997 ;; This function is called by:
  7998 ;;		_eaDogM_WriteString
  7999 ;;		_send_lcd_cmd_dma
  8000 ;; This function uses a reentrant model
  8001 ;;
  8002                           
  8003                           	psect	text34
  8004  005522                     __ptext34:
  8005                           	opt callstack 0
  8006  005522                     _printf:
  8007                           	opt callstack 0
  8008                           
  8009                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8010  005522  52E6               	movf	postinc1,f,c
  8011  005524  52E6               	movf	postinc1,f,c
  8012                           
  8013                           ;stkvar	?_printf @ sp[(-2)+-3]
  8014                           
  8015                           ;incstack = 0
  8016  005526  0EFB               	movlw	251
  8017  005528  24E1               	addwf	fsr1l,w,c
  8018  00552A  6E45               	movwf	btemp+10,c
  8019  00552C  0EFF               	movlw	255
  8020  00552E  20E2               	addwfc	fsr1h,w,c
  8021  005530  6E46               	movwf	btemp+11,c
  8022  005532  0E01               	movlw	1
  8023  005534  2645               	addwf	btemp+10,f,c
  8024  005536  0E00               	movlw	0
  8025  005538  2246               	addwfc	btemp+11,f,c
  8026                           
  8027                           ;stkvar	_ap @ sp[(-2)+0]
  8028  00553A  0EFF               	movlw	-1
  8029  00553C  0060  F11B  FFE3   	movff	btemp+11,plusw1
  8030  005542  0EFE               	movlw	-2
  8031  005544  0060  F117  FFE3   	movff	btemp+10,plusw1
  8032                           
  8033                           ;stkvar	_ap @ sp[(-2)+0]
  8034  00554A  0EFE               	movlw	254
  8035  00554C  24E1               	addwf	fsr1l,w,c
  8036  00554E  6E3B               	movwf	btemp,c
  8037  005550  0EFF               	movlw	255
  8038  005552  20E2               	addwfc	fsr1h,w,c
  8039  005554  6E3C               	movwf	btemp+1,c
  8040  005556  0060  F0EF  FFE6   	movff	btemp,postinc1
  8041  00555C  0060  F0F3  FFE6   	movff	btemp+1,postinc1
  8042                           
  8043                           ;stkvar	_fmt @ sp[(-4)+-2]
  8044  005562  0EFA               	movlw	-6
  8045  005564  50E3               	movf	plusw1,w,c
  8046  005566  6EE6               	movwf	postinc1,c
  8047  005568  0E00               	movlw	0
  8048  00556A  6EE6               	movwf	postinc1,c
  8049  00556C  0E00               	movlw	0
  8050  00556E  6EE6               	movwf	postinc1,c
  8051  005570  ECD2  F028         	call	_vfprintf	;wreg free
  8052                           
  8053                           ; BSR set to: 0
  8054                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsiz
      +                          e = 1, vargsize = 0
  8055  005574  52E5               	movf	postdec1,f,c
  8056  005576  52E5               	movf	postdec1,f,c
  8057  005578  52E5               	movf	postdec1,f,c
  8058  00557A  50E7               	movf	indf1,w,c
  8059  00557C  5EE1               	subwf	fsr1l,f,c
  8060  00557E  0E00               	movlw	0
  8061  005580  5AE2               	subwfb	fsr1h,f,c
  8062  005582  0012               	return		;funcret
  8063  005584                     __end_of_printf:
  8064                           	opt callstack 0
  8065                           
  8066 ;; *************** function _vfprintf *****************
  8067 ;; Defined at:
  8068 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  8069 ;; Parameters:    Size  Location     Type
  8070 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8071 ;;		 -> f(5), NULL(0), 
  8072 ;;  fmt             1  [STACK] PTR const unsigned char 
  8073 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(21), 
  8074 ;;		 -> STR_14(20), STR_13(6), STR_12(14), STR_11(20), 
  8075 ;;		 -> STR_10(19), STR_9(20), STR_8(6), STR_7(6), 
  8076 ;;		 -> STR_6(14), STR_5(19), STR_4(15), STR_2(12), 
  8077 ;;		 -> STR_1(17), 
  8078 ;;  ap              2  [STACK] PTR PTR void 
  8079 ;;		 -> ap(2), ap(2), 
  8080 ;; Auto vars:     Size  Location     Type
  8081 ;;  cfmt            1  [STACK] PTR unsigned char 
  8082 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(21), 
  8083 ;;		 -> STR_14(20), STR_13(6), STR_12(14), STR_11(20), 
  8084 ;;		 -> STR_10(19), STR_9(20), STR_8(6), STR_7(6), 
  8085 ;;		 -> STR_6(14), STR_5(19), STR_4(15), STR_2(12), 
  8086 ;;		 -> STR_1(17), 
  8087 ;; Return value:  Size  Location     Type
  8088 ;;                  2  [STACK] int 
  8089 ;; Registers used:
  8090 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  8091 ;; Tracked objects:
  8092 ;;		On entry : 0/0
  8093 ;;		On exit  : 3F/0
  8094 ;;		Unchanged: 0/0
  8095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8100 ;;Total ram usage:        0 bytes
  8101 ;; Hardware stack levels used:    1
  8102 ;; Hardware stack levels required when called:   10
  8103 ;; This function calls:
  8104 ;;		_vfpfcnvrt
  8105 ;; This function is called by:
  8106 ;;		_sprintf
  8107 ;;		_printf
  8108 ;; This function uses a reentrant model
  8109 ;;
  8110                           
  8111                           	psect	text35
  8112  0051A4                     __ptext35:
  8113                           	opt callstack 0
  8114  0051A4                     _vfprintf:
  8115                           	opt callstack 0
  8116                           
  8117                           ; BSR set to: 0
  8118                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8119  0051A4  52E6               	movf	postinc1,f,c
  8120                           
  8121                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  8122                           ;stkvar	_fmt @ sp[(-1)+-3]
  8123                           
  8124                           ;incstack = 0
  8125  0051A6  0EFC               	movlw	-4
  8126  0051A8  006F FF8C  F046    	movff	plusw1,btemp+11
  8127                           
  8128                           ;stkvar	_cfmt @ sp[(-1)+0]
  8129  0051AE  0EFF               	movlw	-1
  8130  0051B0  0060  F11B  FFE3   	movff	btemp+11,plusw1
  8131                           
  8132                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  8133  0051B6  0100               	movlb	0	; () banked
  8134  0051B8  6B96               	clrf	_nout& (0+255),b
  8135  0051BA  6B97               	clrf	(_nout+1)& (0+255),b
  8136                           
  8137                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  8138  0051BC  D021               	goto	l7735
  8139  0051BE                     l7733:
  8140                           
  8141                           ; BSR set to: 0
  8142                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  8143                           ;stkvar	_ap @ sp[(-1)+-5]
  8144  0051BE  0EFA               	movlw	-6
  8145  0051C0  006F FF8F FFE6     	movff	plusw1,postinc1
  8146  0051C6  006F FF8F FFE6     	movff	plusw1,postinc1
  8147                           
  8148                           ;stkvar	_cfmt @ sp[(-3)+0]
  8149  0051CC  0EFD               	movlw	253
  8150  0051CE  24E1               	addwf	fsr1l,w,c
  8151  0051D0  6E3B               	movwf	btemp,c
  8152  0051D2  0EFF               	movlw	255
  8153  0051D4  20E2               	addwfc	fsr1h,w,c
  8154  0051D6  6E3C               	movwf	btemp+1,c
  8155  0051D8  0060  F0EF  FFE6   	movff	btemp,postinc1
  8156  0051DE  0060  F0F3  FFE6   	movff	btemp+1,postinc1
  8157                           
  8158                           ;stkvar	_fp @ sp[(-5)+-2]
  8159  0051E4  0EF9               	movlw	-7
  8160  0051E6  006F FF8F FFE6     	movff	plusw1,postinc1
  8161  0051EC  006F FF8F FFE6     	movff	plusw1,postinc1
  8162  0051F2  EC4E  F015         	call	_vfpfcnvrt	;wreg free
  8163  0051F6  503B               	movf	btemp,w,c
  8164  0051F8  0100               	movlb	0	; () banked
  8165  0051FA  2796               	addwf	_nout& (0+255),f,b
  8166  0051FC  503C               	movf	btemp+1,w,c
  8167  0051FE  2397               	addwfc	(_nout+1)& (0+255),f,b
  8168  005200                     l7735:
  8169                           
  8170                           ; BSR set to: 0
  8171                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  8172                           ;stkvar	_cfmt @ sp[(-1)+0]
  8173  005200  50E1               	movf	fsr1l,w,c
  8174  005202  0FFF               	addlw	-1
  8175  005204  6ED9               	movwf	fsr2l,c
  8176  005206  50E2               	movf	fsr1h,w,c
  8177  005208  6EDA               	movwf	fsr2h,c
  8178  00520A  0EFF               	movlw	255
  8179  00520C  22DA               	addwfc	fsr2h,f,c
  8180  00520E  006F FF7F FFF6     	movff	indf2,tblptrl
  8181  005214                     	if	1	;There is more than 1 active tblptr byte
  8182  005214  0E20               	movlw	high __smallconst
  8183  005216  6EF7               	movwf	tblptrh,c
  8184  005218                     	endif
  8185  005218                     	if	0	;tblptru may be non-zero
  8186  005218                     	endif
  8187  005218                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8188  005218  0E00               	movlw	low (__smallconst shr (0+16))
  8189  00521A  6EF8               	movwf	tblptru,c
  8190  00521C                     	endif
  8191  00521C  0008               	tblrd		*
  8192  00521E  50F5               	movf	tablat,w,c
  8193  005220  0900               	iorlw	0
  8194  005222  A4D8               	btfss	status,2,c
  8195  005224  D7CC               	goto	l7733
  8196                           
  8197                           ; BSR set to: 0
  8198                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  8199  005226  0060  F258  F03B   	movff	_nout,btemp
  8200  00522C  0060  F25C  F03C   	movff	_nout+1,btemp+1
  8201                           
  8202                           ; BSR set to: 0
  8203                           ; _vfprintf: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  8204  005232  0EFA               	movlw	250
  8205  005234  26E1               	addwf	fsr1l,f,c
  8206  005236  0EFF               	movlw	255
  8207  005238  22E2               	addwfc	fsr1h,f,c
  8208  00523A  0012               	return		;funcret
  8209  00523C                     __end_of_vfprintf:
  8210                           	opt callstack 0
  8211                           
  8212 ;; *************** function _vfpfcnvrt *****************
  8213 ;; Defined at:
  8214 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  8215 ;; Parameters:    Size  Location     Type
  8216 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8217 ;;		 -> f(5), NULL(0), 
  8218 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  8219 ;;		 -> cfmt(1), 
  8220 ;;  ap              2  [STACK] PTR PTR void 
  8221 ;;		 -> ap(2), ap(2), 
  8222 ;; Auto vars:     Size  Location     Type
  8223 ;;  ll              8  [STACK] long long 
  8224 ;;  llu             8    0        unsigned long long 
  8225 ;;  f               4    0        unsigned long long 
  8226 ;;  vp              3    0        PTR void 
  8227 ;;  ct              3    0        unsigned char [3]
  8228 ;;  cp              2  [STACK] PTR unsigned char 
  8229 ;;		 -> ?_printf(2), ?_sprintf(2), STR_3(6), V(88), 
  8230 ;;  i               2    0        int 
  8231 ;;  done            2    0        int 
  8232 ;;  c               1  [STACK] unsigned char 
  8233 ;; Return value:  Size  Location     Type
  8234 ;;                  2  [STACK] int 
  8235 ;; Registers used:
  8236 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  8237 ;; Tracked objects:
  8238 ;;		On entry : 0/0
  8239 ;;		On exit  : 0/0
  8240 ;;		Unchanged: 0/0
  8241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8246 ;;Total ram usage:        0 bytes
  8247 ;; Hardware stack levels used:    1
  8248 ;; Hardware stack levels required when called:    9
  8249 ;; This function calls:
  8250 ;;		_ctoa
  8251 ;;		_dtoa
  8252 ;;		_fputc
  8253 ;;		_stoa
  8254 ;;		_strncmp
  8255 ;; This function is called by:
  8256 ;;		_vfprintf
  8257 ;; This function uses a reentrant model
  8258 ;;
  8259                           
  8260                           	psect	text36
  8261  002A9C                     __ptext36:
  8262                           	opt callstack 0
  8263  002A9C                     _vfpfcnvrt:
  8264                           	opt callstack 0
  8265                           
  8266                           ; BSR set to: 0
  8267                           ; autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  8268  002A9C  0E0B               	movlw	11
  8269  002A9E  26E1               	addwf	fsr1l,f,c
  8270  002AA0  0E00               	movlw	0
  8271  002AA2  22E2               	addwfc	fsr1h,f,c
  8272                           
  8273                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  8274                           ;stkvar	_fmt @ sp[(-11)+-4]
  8275                           
  8276                           ;incstack = 0
  8277  002AA4  0EF1               	movlw	-15
  8278  002AA6  006F FF8F FFD9     	movff	plusw1,fsr2l
  8279  002AAC  0EF2               	movlw	-14
  8280  002AAE  006F FF8F FFDA     	movff	plusw1,fsr2h
  8281  002AB4  006F FF7F FFF6     	movff	indf2,tblptrl
  8282  002ABA                     	if	1	;There is more than 1 active tblptr byte
  8283  002ABA  0E20               	movlw	high __smallconst
  8284  002ABC  6EF7               	movwf	tblptrh,c
  8285  002ABE                     	endif
  8286  002ABE                     	if	0	;tblptru may be non-zero
  8287  002ABE                     	endif
  8288  002ABE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8289  002ABE  0E00               	movlw	low (__smallconst shr (0+16))
  8290  002AC0  6EF8               	movwf	tblptru,c
  8291  002AC2                     	endif
  8292  002AC2  0008               	tblrd		*
  8293  002AC4  50F5               	movf	tablat,w,c
  8294  002AC6  0A25               	xorlw	37
  8295  002AC8  A4D8               	btfss	status,2,c
  8296  002ACA  D213               	goto	l7679
  8297                           
  8298                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  8299                           ;stkvar	_fmt @ sp[(-11)+-4]
  8300  002ACC  0EF1               	movlw	-15
  8301  002ACE  006F FF8F FFD9     	movff	plusw1,fsr2l
  8302  002AD4  0EF2               	movlw	-14
  8303  002AD6  006F FF8F FFDA     	movff	plusw1,fsr2h
  8304  002ADC  2ADF               	incf	indf2,f,c
  8305                           
  8306                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  8307  002ADE  6A20               	clrf	_width,c
  8308  002AE0  6A21               	clrf	_width+1,c
  8309  002AE2  6A24               	clrf	_flags,c
  8310  002AE4  6A25               	clrf	_flags+1,c
  8311                           
  8312                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  8313  002AE6  6822               	setf	_prec,c
  8314  002AE8  6823               	setf	_prec+1,c
  8315                           
  8316                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  8317                           ;stkvar	_fmt @ sp[(-11)+-4]
  8318  002AEA  0EF1               	movlw	-15
  8319  002AEC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8320  002AF2  0EF2               	movlw	-14
  8321  002AF4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8322  002AFA  006F FF7F FFF6     	movff	indf2,tblptrl
  8323  002B00                     	if	1	;There is more than 1 active tblptr byte
  8324  002B00  0E20               	movlw	high __smallconst
  8325  002B02  6EF7               	movwf	tblptrh,c
  8326  002B04                     	endif
  8327  002B04                     	if	0	;tblptru may be non-zero
  8328  002B04                     	endif
  8329  002B04                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8330  002B04  0E00               	movlw	low (__smallconst shr (0+16))
  8331  002B06  6EF8               	movwf	tblptru,c
  8332  002B08                     	endif
  8333  002B08  0008               	tblrd		*
  8334  002B0A  50F5               	movf	tablat,w,c
  8335  002B0C  0A63               	xorlw	99
  8336  002B0E  A4D8               	btfss	status,2,c
  8337  002B10  D034               	goto	l7629
  8338                           
  8339                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  8340                           ;stkvar	_fmt @ sp[(-11)+-4]
  8341  002B12  0EF1               	movlw	-15
  8342  002B14  006F FF8F FFD9     	movff	plusw1,fsr2l
  8343  002B1A  0EF2               	movlw	-14
  8344  002B1C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8345  002B22  2ADF               	incf	indf2,f,c
  8346                           
  8347                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  8348                           ;stkvar	_ap @ sp[(-11)+-6]
  8349  002B24  0EEF               	movlw	-17
  8350  002B26  006F FF8F FFD9     	movff	plusw1,fsr2l
  8351  002B2C  0EF0               	movlw	-16
  8352  002B2E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8353  002B34  0E02               	movlw	2
  8354  002B36  5EDE               	subwf	postinc2,f,c
  8355  002B38  0E00               	movlw	0
  8356  002B3A  5ADD               	subwfb	postdec2,f,c
  8357  002B3C  006F FF78  F045    	movff	postinc2,btemp+10
  8358  002B42  006F FF74  F046    	movff	postdec2,btemp+11
  8359  002B48  0060  F117  FFD9   	movff	btemp+10,fsr2l
  8360  002B4E  0060  F11B  FFDA   	movff	btemp+11,fsr2h
  8361  002B54  50DF               	movf	indf2,w,c
  8362  002B56  6E46               	movwf	btemp+11,c
  8363                           
  8364                           ;stkvar	_c @ sp[(-11)+10]
  8365  002B58  0EFF               	movlw	-1
  8366  002B5A  0060  F11B  FFE3   	movff	btemp+11,plusw1
  8367                           
  8368                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  8369                           ;stkvar	_c @ sp[(-11)+10]
  8370  002B60  0EFF               	movlw	-1
  8371  002B62  50E3               	movf	plusw1,w,c
  8372  002B64  6EE6               	movwf	postinc1,c
  8373                           
  8374                           ;stkvar	_fp @ sp[(-12)+-2]
  8375  002B66  0EF2               	movlw	-14
  8376  002B68  006F FF8F FFE6     	movff	plusw1,postinc1
  8377  002B6E  006F FF8F FFE6     	movff	plusw1,postinc1
  8378  002B74  ECB3  F029         	call	_ctoa	;wreg free
  8379  002B78  D1E3               	goto	l1823
  8380  002B7A                     l7629:
  8381                           
  8382                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  8383                           ;stkvar	_fmt @ sp[(-11)+-4]
  8384  002B7A  0EF1               	movlw	-15
  8385  002B7C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8386  002B82  0EF2               	movlw	-14
  8387  002B84  006F FF8F FFDA     	movff	plusw1,fsr2h
  8388  002B8A  006F FF7F FFF6     	movff	indf2,tblptrl
  8389  002B90                     	if	1	;There is more than 1 active tblptr byte
  8390  002B90  0E20               	movlw	high __smallconst
  8391  002B92  6EF7               	movwf	tblptrh,c
  8392  002B94                     	endif
  8393  002B94                     	if	0	;tblptru may be non-zero
  8394  002B94                     	endif
  8395  002B94                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8396  002B94  0E00               	movlw	low (__smallconst shr (0+16))
  8397  002B96  6EF8               	movwf	tblptru,c
  8398  002B98                     	endif
  8399  002B98  0008               	tblrd		*
  8400  002B9A  50F5               	movf	tablat,w,c
  8401  002B9C  0A64               	xorlw	100
  8402  002B9E  B4D8               	btfsc	status,2,c
  8403  002BA0  D014               	goto	u4790
  8404                           
  8405                           ;stkvar	_fmt @ sp[(-11)+-4]
  8406  002BA2  0EF1               	movlw	-15
  8407  002BA4  006F FF8F FFD9     	movff	plusw1,fsr2l
  8408  002BAA  0EF2               	movlw	-14
  8409  002BAC  006F FF8F FFDA     	movff	plusw1,fsr2h
  8410  002BB2  006F FF7F FFF6     	movff	indf2,tblptrl
  8411  002BB8                     	if	1	;There is more than 1 active tblptr byte
  8412  002BB8  0E20               	movlw	high __smallconst
  8413  002BBA  6EF7               	movwf	tblptrh,c
  8414  002BBC                     	endif
  8415  002BBC                     	if	0	;tblptru may be non-zero
  8416  002BBC                     	endif
  8417  002BBC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8418  002BBC  0E00               	movlw	low (__smallconst shr (0+16))
  8419  002BBE  6EF8               	movwf	tblptru,c
  8420  002BC0                     	endif
  8421  002BC0  0008               	tblrd		*
  8422  002BC2  50F5               	movf	tablat,w,c
  8423  002BC4  0A69               	xorlw	105
  8424  002BC6  A4D8               	btfss	status,2,c
  8425  002BC8  D073               	goto	l7641
  8426  002BCA                     u4790:
  8427                           
  8428                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  8429                           ;stkvar	_fmt @ sp[(-11)+-4]
  8430  002BCA  0EF1               	movlw	-15
  8431  002BCC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8432  002BD2  0EF2               	movlw	-14
  8433  002BD4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8434  002BDA  2ADF               	incf	indf2,f,c
  8435                           
  8436                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  8437                           ;stkvar	_ap @ sp[(-11)+-6]
  8438  002BDC  0EEF               	movlw	-17
  8439  002BDE  006F FF8F FFD9     	movff	plusw1,fsr2l
  8440  002BE4  0EF0               	movlw	-16
  8441  002BE6  006F FF8F FFDA     	movff	plusw1,fsr2h
  8442  002BEC  0E02               	movlw	2
  8443  002BEE  5EDE               	subwf	postinc2,f,c
  8444  002BF0  0E00               	movlw	0
  8445  002BF2  5ADD               	subwfb	postdec2,f,c
  8446  002BF4  006F FF78  F045    	movff	postinc2,btemp+10
  8447  002BFA  006F FF74  F046    	movff	postdec2,btemp+11
  8448  002C00  0060  F117  FFD9   	movff	btemp+10,fsr2l
  8449  002C06  0060  F11B  FFDA   	movff	btemp+11,fsr2h
  8450  002C0C  006F FF78  F045    	movff	postinc2,btemp+10
  8451  002C12  006F FF74  F046    	movff	postdec2,btemp+11
  8452                           
  8453                           ;stkvar	_ll @ sp[(-11)+0]
  8454  002C18  0EF5               	movlw	-11
  8455  002C1A  0060  F117  FFE3   	movff	btemp+10,plusw1
  8456  002C20  0EF6               	movlw	-10
  8457  002C22  0060  F11B  FFE3   	movff	btemp+11,plusw1
  8458  002C28  6A3B               	clrf	btemp,c
  8459  002C2A  BEE3               	btfsc	plusw1,7,c
  8460  002C2C  683B               	setf	btemp,c
  8461  002C2E  0EF7               	movlw	-9
  8462  002C30  0060  F0EF  FFE3   	movff	btemp,plusw1
  8463  002C36  0EF8               	movlw	-8
  8464  002C38  0060  F0EF  FFE3   	movff	btemp,plusw1
  8465  002C3E  0EF9               	movlw	-7
  8466  002C40  0060  F0EF  FFE3   	movff	btemp,plusw1
  8467  002C46  0EFA               	movlw	-6
  8468  002C48  0060  F0EF  FFE3   	movff	btemp,plusw1
  8469  002C4E  0EFB               	movlw	-5
  8470  002C50  0060  F0EF  FFE3   	movff	btemp,plusw1
  8471  002C56  0EFC               	movlw	-4
  8472  002C58  0060  F0EF  FFE3   	movff	btemp,plusw1
  8473  002C5E                     l7637:
  8474                           
  8475                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  8476                           ;stkvar	_ll @ sp[(-11)+0]
  8477  002C5E  50E1               	movf	fsr1l,w,c
  8478  002C60  0FF5               	addlw	-11
  8479  002C62  6ED9               	movwf	fsr2l,c
  8480  002C64  50E2               	movf	fsr1h,w,c
  8481  002C66  6EDA               	movwf	fsr2h,c
  8482  002C68  0EFF               	movlw	255
  8483  002C6A  22DA               	addwfc	fsr2h,f,c
  8484  002C6C  006F FF7B FFE6     	movff	postinc2,postinc1
  8485  002C72  006F FF7B FFE6     	movff	postinc2,postinc1
  8486  002C78  006F FF7B FFE6     	movff	postinc2,postinc1
  8487  002C7E  006F FF7B FFE6     	movff	postinc2,postinc1
  8488  002C84  006F FF7B FFE6     	movff	postinc2,postinc1
  8489  002C8A  006F FF7B FFE6     	movff	postinc2,postinc1
  8490  002C90  006F FF7B FFE6     	movff	postinc2,postinc1
  8491  002C96  006F FF7B FFE6     	movff	postinc2,postinc1
  8492                           
  8493                           ;stkvar	_fp @ sp[(-19)+-2]
  8494  002C9C  0EEB               	movlw	-21
  8495  002C9E  006F FF8F FFE6     	movff	plusw1,postinc1
  8496  002CA4  006F FF8F FFE6     	movff	plusw1,postinc1
  8497  002CAA  ECA5  F017         	call	_dtoa	;wreg free
  8498  002CAE  D148               	goto	l1823
  8499  002CB0                     l7641:
  8500                           
  8501                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
  8502  002CB0  0E02               	movlw	2
  8503  002CB2  6EE6               	movwf	postinc1,c
  8504  002CB4  0E00               	movlw	0
  8505  002CB6  6EE6               	movwf	postinc1,c
  8506  002CB8  0E9D               	movlw	STR_19& (0+255)
  8507  002CBA  6EE6               	movwf	postinc1,c
  8508                           
  8509                           ;stkvar	_fmt @ sp[(-14)+-4]
  8510  002CBC  0EEE               	movlw	-18
  8511  002CBE  006F FF8F FFD9     	movff	plusw1,fsr2l
  8512  002CC4  0EEF               	movlw	-17
  8513  002CC6  006F FF8F FFDA     	movff	plusw1,fsr2h
  8514  002CCC  50DF               	movf	indf2,w,c
  8515  002CCE  6EE6               	movwf	postinc1,c
  8516  002CD0  ECB8  F023         	call	_strncmp	;wreg free
  8517  002CD4  503B               	movf	btemp,w,c
  8518  002CD6  103C               	iorwf	btemp+1,w,c
  8519  002CD8  B4D8               	btfsc	status,2,c
  8520  002CDA  D016               	goto	u4810
  8521  002CDC  0E02               	movlw	2
  8522  002CDE  6EE6               	movwf	postinc1,c
  8523  002CE0  0E00               	movlw	0
  8524  002CE2  6EE6               	movwf	postinc1,c
  8525  002CE4  0EA0               	movlw	STR_23& (0+255)
  8526  002CE6  6EE6               	movwf	postinc1,c
  8527                           
  8528                           ;stkvar	_fmt @ sp[(-14)+-4]
  8529  002CE8  0EEE               	movlw	-18
  8530  002CEA  006F FF8F FFD9     	movff	plusw1,fsr2l
  8531  002CF0  0EEF               	movlw	-17
  8532  002CF2  006F FF8F FFDA     	movff	plusw1,fsr2h
  8533  002CF8  50DF               	movf	indf2,w,c
  8534  002CFA  6EE6               	movwf	postinc1,c
  8535  002CFC  ECB8  F023         	call	_strncmp	;wreg free
  8536  002D00  503B               	movf	btemp,w,c
  8537  002D02  103C               	iorwf	btemp+1,w,c
  8538  002D04  A4D8               	btfss	status,2,c
  8539  002D06  D067               	goto	l7653
  8540  002D08                     u4810:
  8541                           
  8542                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
  8543                           ;stkvar	_fmt @ sp[(-11)+-4]
  8544  002D08  0EF1               	movlw	-15
  8545  002D0A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8546  002D10  0EF2               	movlw	-14
  8547  002D12  006F FF8F FFDA     	movff	plusw1,fsr2h
  8548  002D18  0E02               	movlw	2
  8549  002D1A  26DF               	addwf	indf2,f,c
  8550                           
  8551                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
  8552                           ;stkvar	_ap @ sp[(-11)+-6]
  8553  002D1C  0EEF               	movlw	-17
  8554  002D1E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8555  002D24  0EF0               	movlw	-16
  8556  002D26  006F FF8F FFDA     	movff	plusw1,fsr2h
  8557  002D2C  0E04               	movlw	4
  8558  002D2E  5EDE               	subwf	postinc2,f,c
  8559  002D30  0E00               	movlw	0
  8560  002D32  5ADD               	subwfb	postdec2,f,c
  8561  002D34  006F FF78  F045    	movff	postinc2,btemp+10
  8562  002D3A  006F FF74  F046    	movff	postdec2,btemp+11
  8563  002D40  0060  F117  FFD9   	movff	btemp+10,fsr2l
  8564  002D46  0060  F11B  FFDA   	movff	btemp+11,fsr2h
  8565  002D4C  006F FF78  F043    	movff	postinc2,btemp+8
  8566  002D52  006F FF78  F044    	movff	postinc2,btemp+9
  8567  002D58  006F FF78  F045    	movff	postinc2,btemp+10
  8568  002D5E  006F FF78  F046    	movff	postinc2,btemp+11
  8569  002D64  0060  F10C  F04B   	movff	btemp+8,btemp+16
  8570  002D6A  0060  F110  F04C   	movff	btemp+9,btemp+17
  8571  002D70  0060  F114  F04D   	movff	btemp+10,btemp+18
  8572  002D76  0060  F118  F04E   	movff	btemp+11,btemp+19
  8573  002D7C  6A4F               	clrf	btemp+20,c
  8574  002D7E  BE4E               	btfsc	btemp+19,7,c
  8575  002D80  684F               	setf	btemp+20,c
  8576  002D82  0060  F13C  F050   	movff	btemp+20,btemp+21
  8577  002D88  0060  F13C  F051   	movff	btemp+20,btemp+22
  8578  002D8E  0060  F13C  F052   	movff	btemp+20,btemp+23
  8579                           
  8580                           ;stkvar	_ll @ sp[(-11)+0]
  8581  002D94  0EF5               	movlw	-11
  8582  002D96  0060  F12F  FFE3   	movff	btemp+16,plusw1
  8583  002D9C  0EF6               	movlw	-10
  8584  002D9E  0060  F133  FFE3   	movff	btemp+17,plusw1
  8585  002DA4  0EF7               	movlw	-9
  8586  002DA6  0060  F137  FFE3   	movff	btemp+18,plusw1
  8587  002DAC  0EF8               	movlw	-8
  8588  002DAE  0060  F13B  FFE3   	movff	btemp+19,plusw1
  8589  002DB4  0EF9               	movlw	-7
  8590  002DB6  0060  F13F  FFE3   	movff	btemp+20,plusw1
  8591  002DBC  0EFA               	movlw	-6
  8592  002DBE  0060  F143  FFE3   	movff	btemp+21,plusw1
  8593  002DC4  0EFB               	movlw	-5
  8594  002DC6  0060  F147  FFE3   	movff	btemp+22,plusw1
  8595  002DCC  0EFC               	movlw	-4
  8596  002DCE  0060  F14B  FFE3   	movff	btemp+23,plusw1
  8597  002DD4  D744               	goto	l7637
  8598  002DD6                     l7653:
  8599                           
  8600                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  8601                           ;stkvar	_fmt @ sp[(-11)+-4]
  8602  002DD6  0EF1               	movlw	-15
  8603  002DD8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8604  002DDE  0EF2               	movlw	-14
  8605  002DE0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8606  002DE6  006F FF7F FFF6     	movff	indf2,tblptrl
  8607  002DEC                     	if	1	;There is more than 1 active tblptr byte
  8608  002DEC  0E20               	movlw	high __smallconst
  8609  002DEE  6EF7               	movwf	tblptrh,c
  8610  002DF0                     	endif
  8611  002DF0                     	if	0	;tblptru may be non-zero
  8612  002DF0                     	endif
  8613  002DF0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8614  002DF0  0E00               	movlw	low (__smallconst shr (0+16))
  8615  002DF2  6EF8               	movwf	tblptru,c
  8616  002DF4                     	endif
  8617  002DF4  0008               	tblrd		*
  8618  002DF6  50F5               	movf	tablat,w,c
  8619  002DF8  0A73               	xorlw	115
  8620  002DFA  A4D8               	btfss	status,2,c
  8621  002DFC  D040               	goto	l7663
  8622                           
  8623                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  8624                           ;stkvar	_fmt @ sp[(-11)+-4]
  8625  002DFE  0EF1               	movlw	-15
  8626  002E00  006F FF8F FFD9     	movff	plusw1,fsr2l
  8627  002E06  0EF2               	movlw	-14
  8628  002E08  006F FF8F FFDA     	movff	plusw1,fsr2h
  8629  002E0E  2ADF               	incf	indf2,f,c
  8630                           
  8631                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  8632                           ;stkvar	_ap @ sp[(-11)+-6]
  8633  002E10  0EEF               	movlw	-17
  8634  002E12  006F FF8F FFD9     	movff	plusw1,fsr2l
  8635  002E18  0EF0               	movlw	-16
  8636  002E1A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8637  002E20  0E02               	movlw	2
  8638  002E22  5EDE               	subwf	postinc2,f,c
  8639  002E24  0E00               	movlw	0
  8640  002E26  5ADD               	subwfb	postdec2,f,c
  8641  002E28  006F FF78  F045    	movff	postinc2,btemp+10
  8642  002E2E  006F FF74  F046    	movff	postdec2,btemp+11
  8643  002E34  0060  F117  FFD9   	movff	btemp+10,fsr2l
  8644  002E3A  0060  F11B  FFDA   	movff	btemp+11,fsr2h
  8645  002E40  006F FF78  F045    	movff	postinc2,btemp+10
  8646  002E46  006F FF74  F046    	movff	postdec2,btemp+11
  8647                           
  8648                           ;stkvar	_cp @ sp[(-11)+8]
  8649  002E4C  0EFE               	movlw	-2
  8650  002E4E  0060  F11B  FFE3   	movff	btemp+11,plusw1
  8651  002E54  0EFD               	movlw	-3
  8652  002E56  0060  F117  FFE3   	movff	btemp+10,plusw1
  8653                           
  8654                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  8655                           ;stkvar	_cp @ sp[(-11)+8]
  8656  002E5C  0EFD               	movlw	-3
  8657  002E5E  006F FF8F FFE6     	movff	plusw1,postinc1
  8658  002E64  006F FF8F FFE6     	movff	plusw1,postinc1
  8659                           
  8660                           ;stkvar	_fp @ sp[(-13)+-2]
  8661  002E6A  0EF1               	movlw	-15
  8662  002E6C  006F FF8F FFE6     	movff	plusw1,postinc1
  8663  002E72  006F FF8F FFE6     	movff	plusw1,postinc1
  8664  002E78  ECC3  F01C         	call	_stoa	;wreg free
  8665  002E7C  D061               	goto	l1823
  8666  002E7E                     l7663:
  8667                           
  8668                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  8669                           ;stkvar	_fmt @ sp[(-11)+-4]
  8670  002E7E  0EF1               	movlw	-15
  8671  002E80  006F FF8F FFD9     	movff	plusw1,fsr2l
  8672  002E86  0EF2               	movlw	-14
  8673  002E88  006F FF8F FFDA     	movff	plusw1,fsr2h
  8674  002E8E  006F FF7F FFF6     	movff	indf2,tblptrl
  8675  002E94                     	if	1	;There is more than 1 active tblptr byte
  8676  002E94  0E20               	movlw	high __smallconst
  8677  002E96  6EF7               	movwf	tblptrh,c
  8678  002E98                     	endif
  8679  002E98                     	if	0	;tblptru may be non-zero
  8680  002E98                     	endif
  8681  002E98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8682  002E98  0E00               	movlw	low (__smallconst shr (0+16))
  8683  002E9A  6EF8               	movwf	tblptru,c
  8684  002E9C                     	endif
  8685  002E9C  0008               	tblrd		*
  8686  002E9E  50F5               	movf	tablat,w,c
  8687  002EA0  0A25               	xorlw	37
  8688  002EA2  A4D8               	btfss	status,2,c
  8689  002EA4  D018               	goto	l7673
  8690                           
  8691                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  8692                           ;stkvar	_fmt @ sp[(-11)+-4]
  8693  002EA6  0EF1               	movlw	-15
  8694  002EA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8695  002EAE  0EF2               	movlw	-14
  8696  002EB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8697  002EB6  2ADF               	incf	indf2,f,c
  8698                           
  8699                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  8700                           ;stkvar	_fp @ sp[(-11)+-2]
  8701  002EB8  0EF3               	movlw	-13
  8702  002EBA  006F FF8F FFE6     	movff	plusw1,postinc1
  8703  002EC0  006F FF8F FFE6     	movff	plusw1,postinc1
  8704  002EC6  0E25               	movlw	37
  8705  002EC8  6EE6               	movwf	postinc1,c
  8706  002ECA  0E00               	movlw	0
  8707  002ECC  6EE6               	movwf	postinc1,c
  8708  002ECE  EC0A  F025         	call	_fputc	;wreg free
  8709  002ED2                     l7669:
  8710                           
  8711                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  8712  002ED2  0E01               	movlw	1
  8713  002ED4  D00A               	goto	L24
  8714  002ED6                     l7673:
  8715                           
  8716                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  8717                           ;stkvar	_fmt @ sp[(-11)+-4]
  8718  002ED6  0EF1               	movlw	-15
  8719  002ED8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8720  002EDE  0EF2               	movlw	-14
  8721  002EE0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8722  002EE6  2ADF               	incf	indf2,f,c
  8723                           
  8724                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  8725  002EE8  0E00               	movlw	0
  8726  002EEA                     L24:
  8727  002EEA  6E3B               	movwf	btemp,c
  8728  002EEC  0E00               	movlw	0
  8729  002EEE  6E3C               	movwf	btemp+1,c
  8730  002EF0  D027               	goto	l1823
  8731  002EF2                     l7679:
  8732                           
  8733                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  8734                           ;stkvar	_fp @ sp[(-11)+-2]
  8735  002EF2  0EF3               	movlw	-13
  8736  002EF4  006F FF8F FFE6     	movff	plusw1,postinc1
  8737  002EFA  006F FF8F FFE6     	movff	plusw1,postinc1
  8738                           
  8739                           ;stkvar	_fmt @ sp[(-13)+-4]
  8740  002F00  0EEF               	movlw	-17
  8741  002F02  006F FF8F FFD9     	movff	plusw1,fsr2l
  8742  002F08  0EF0               	movlw	-16
  8743  002F0A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8744  002F10  006F FF7F FFF6     	movff	indf2,tblptrl
  8745  002F16                     	if	1	;There is more than 1 active tblptr byte
  8746  002F16  0E20               	movlw	high __smallconst
  8747  002F18  6EF7               	movwf	tblptrh,c
  8748  002F1A                     	endif
  8749  002F1A                     	if	0	;tblptru may be non-zero
  8750  002F1A                     	endif
  8751  002F1A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8752  002F1A  0E00               	movlw	low (__smallconst shr (0+16))
  8753  002F1C  6EF8               	movwf	tblptru,c
  8754  002F1E                     	endif
  8755  002F1E  0008               	tblrd		*
  8756  002F20  50F5               	movf	tablat,w,c
  8757  002F22  6EE6               	movwf	postinc1,c
  8758  002F24  0E00               	movlw	0
  8759  002F26  6EE6               	movwf	postinc1,c
  8760  002F28  EC0A  F025         	call	_fputc	;wreg free
  8761                           
  8762                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  8763                           ;stkvar	_fmt @ sp[(-11)+-4]
  8764  002F2C  0EF1               	movlw	-15
  8765  002F2E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8766  002F34  0EF2               	movlw	-14
  8767  002F36  006F FF8F FFDA     	movff	plusw1,fsr2h
  8768  002F3C  2ADF               	incf	indf2,f,c
  8769  002F3E  D7C9               	goto	l7669
  8770  002F40                     l1823:
  8771                           
  8772                           ; _vfpfcnvrt: autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  8773  002F40  0EEF               	movlw	239
  8774  002F42  26E1               	addwf	fsr1l,f,c
  8775  002F44  0EFF               	movlw	255
  8776  002F46  22E2               	addwfc	fsr1h,f,c
  8777  002F48  0012               	return		;funcret
  8778  002F4A                     __end_of_vfpfcnvrt:
  8779                           	opt callstack 0
  8780                           
  8781 ;; *************** function _strncmp *****************
  8782 ;; Defined at:
  8783 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  8784 ;; Parameters:    Size  Location     Type
  8785 ;;  _l              1  [STACK] PTR const unsigned char 
  8786 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(21), 
  8787 ;;		 -> STR_14(20), STR_13(6), STR_12(14), STR_11(20), 
  8788 ;;		 -> STR_10(19), STR_9(20), STR_8(6), STR_7(6), 
  8789 ;;		 -> STR_6(14), STR_5(19), STR_4(15), STR_2(12), 
  8790 ;;		 -> STR_1(17), 
  8791 ;;  _r              1  [STACK] PTR const unsigned char 
  8792 ;;		 -> STR_25(3), STR_21(3), 
  8793 ;;  n               2  [STACK] unsigned int 
  8794 ;; Auto vars:     Size  Location     Type
  8795 ;;  r               1  [STACK] PTR const unsigned char 
  8796 ;;		 -> STR_25(3), STR_21(3), 
  8797 ;;  l               1  [STACK] PTR const unsigned char 
  8798 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(21), 
  8799 ;;		 -> STR_14(20), STR_13(6), STR_12(14), STR_11(20), 
  8800 ;;		 -> STR_10(19), STR_9(20), STR_8(6), STR_7(6), 
  8801 ;;		 -> STR_6(14), STR_5(19), STR_4(15), STR_2(12), 
  8802 ;;		 -> STR_1(17), 
  8803 ;; Return value:  Size  Location     Type
  8804 ;;                  2  [STACK] int 
  8805 ;; Registers used:
  8806 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, tblptrl, tblptrh, tblptru, prodl
  8807 ;; Tracked objects:
  8808 ;;		On entry : 0/0
  8809 ;;		On exit  : 0/0
  8810 ;;		Unchanged: 0/0
  8811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8816 ;;Total ram usage:        0 bytes
  8817 ;; Hardware stack levels used:    1
  8818 ;; Hardware stack levels required when called:    3
  8819 ;; This function calls:
  8820 ;;		Nothing
  8821 ;; This function is called by:
  8822 ;;		_vfpfcnvrt
  8823 ;; This function uses a reentrant model
  8824 ;;
  8825                           
  8826                           	psect	text37
  8827  004770                     __ptext37:
  8828                           	opt callstack 0
  8829  004770                     _strncmp:
  8830                           	opt callstack 0
  8831                           
  8832                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8833  004770  52E6               	movf	postinc1,f,c
  8834  004772  52E6               	movf	postinc1,f,c
  8835                           
  8836                           ;stkvar	__l @ sp[(-2)+-1]
  8837                           
  8838                           ;incstack = 0
  8839  004774  0EFD               	movlw	-3
  8840  004776  006F FF8C  F046    	movff	plusw1,btemp+11
  8841                           
  8842                           ;stkvar	_l @ sp[(-2)+1]
  8843  00477C  0EFF               	movlw	-1
  8844  00477E  0060  F11B  FFE3   	movff	btemp+11,plusw1
  8845                           
  8846                           ;stkvar	__r @ sp[(-2)+-2]
  8847  004784  0EFC               	movlw	-4
  8848  004786  006F FF8C  F046    	movff	plusw1,btemp+11
  8849                           
  8850                           ;stkvar	_r @ sp[(-2)+0]
  8851  00478C  0EFE               	movlw	-2
  8852  00478E  0060  F11B  FFE3   	movff	btemp+11,plusw1
  8853                           
  8854                           ;stkvar	_n @ sp[(-2)+-4]
  8855  004794  0EFA               	movlw	-6
  8856  004796  006F FF8C  F03B    	movff	plusw1,btemp
  8857  00479C  0E01               	movlw	1
  8858  00479E  5E3B               	subwf	btemp,f,c
  8859  0047A0  0EFA               	movlw	-6
  8860  0047A2  0060  F0EF  FFE3   	movff	btemp,plusw1
  8861  0047A8  0EFB               	movlw	-5
  8862  0047AA  006F FF8C  F03B    	movff	plusw1,btemp
  8863  0047B0  0E00               	movlw	0
  8864  0047B2  5A3B               	subwfb	btemp,f,c
  8865  0047B4  0EFB               	movlw	-5
  8866  0047B6  0060  F0EF  FFE3   	movff	btemp,plusw1
  8867  0047BC  0EFA               	movlw	-6
  8868  0047BE  28E3               	incf	plusw1,w,c
  8869  0047C0  E121               	bnz	l5471
  8870  0047C2  0EFB               	movlw	-5
  8871  0047C4  28E3               	incf	plusw1,w,c
  8872  0047C6  A4D8               	btfss	status,2,c
  8873  0047C8  D01D               	goto	l5471
  8874  0047CA  0E00               	movlw	0
  8875  0047CC  6E3B               	movwf	btemp,c
  8876  0047CE  0E00               	movlw	0
  8877  0047D0  6E3C               	movwf	btemp+1,c
  8878  0047D2  D091               	goto	l2572
  8879  0047D4                     l5467:
  8880                           
  8881                           ;stkvar	_l @ sp[(-2)+1]
  8882  0047D4  0EFF               	movlw	-1
  8883  0047D6  2AE3               	incf	plusw1,f,c
  8884                           
  8885                           ;stkvar	_r @ sp[(-2)+0]
  8886  0047D8  0EFE               	movlw	-2
  8887  0047DA  2AE3               	incf	plusw1,f,c
  8888                           
  8889                           ;stkvar	_n @ sp[(-2)+-4]
  8890  0047DC  0EFA               	movlw	-6
  8891  0047DE  006F FF8C  F03B    	movff	plusw1,btemp
  8892  0047E4  0E01               	movlw	1
  8893  0047E6  5E3B               	subwf	btemp,f,c
  8894  0047E8  0EFA               	movlw	-6
  8895  0047EA  0060  F0EF  FFE3   	movff	btemp,plusw1
  8896  0047F0  0EFB               	movlw	-5
  8897  0047F2  006F FF8C  F03B    	movff	plusw1,btemp
  8898  0047F8  0E00               	movlw	0
  8899  0047FA  5A3B               	subwfb	btemp,f,c
  8900  0047FC  0EFB               	movlw	-5
  8901  0047FE  0060  F0EF  FFE3   	movff	btemp,plusw1
  8902  004804                     l5471:
  8903                           
  8904                           ;stkvar	_l @ sp[(-2)+1]
  8905  004804  50E1               	movf	fsr1l,w,c
  8906  004806  0FFF               	addlw	-1
  8907  004808  6ED9               	movwf	fsr2l,c
  8908  00480A  50E2               	movf	fsr1h,w,c
  8909  00480C  6EDA               	movwf	fsr2h,c
  8910  00480E  0EFF               	movlw	255
  8911  004810  22DA               	addwfc	fsr2h,f,c
  8912  004812  006F FF7F FFF6     	movff	indf2,tblptrl
  8913  004818                     	if	1	;There is more than 1 active tblptr byte
  8914  004818  0E20               	movlw	high __smallconst
  8915  00481A  6EF7               	movwf	tblptrh,c
  8916  00481C                     	endif
  8917  00481C                     	if	0	;tblptru may be non-zero
  8918  00481C                     	endif
  8919  00481C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8920  00481C  0E00               	movlw	low (__smallconst shr (0+16))
  8921  00481E  6EF8               	movwf	tblptru,c
  8922  004820                     	endif
  8923  004820  0008               	tblrd		*
  8924  004822  50F5               	movf	tablat,w,c
  8925  004824  0900               	iorlw	0
  8926  004826  B4D8               	btfsc	status,2,c
  8927  004828  D041               	goto	u2940
  8928                           
  8929                           ;stkvar	_r @ sp[(-2)+0]
  8930  00482A  50E1               	movf	fsr1l,w,c
  8931  00482C  0FFE               	addlw	-2
  8932  00482E  6ED9               	movwf	fsr2l,c
  8933  004830  50E2               	movf	fsr1h,w,c
  8934  004832  6EDA               	movwf	fsr2h,c
  8935  004834  0EFF               	movlw	255
  8936  004836  22DA               	addwfc	fsr2h,f,c
  8937  004838  006F FF7F FFF6     	movff	indf2,tblptrl
  8938  00483E                     	if	1	;There is more than 1 active tblptr byte
  8939  00483E  0E20               	movlw	high __smallconst
  8940  004840  6EF7               	movwf	tblptrh,c
  8941  004842                     	endif
  8942  004842                     	if	0	;tblptru may be non-zero
  8943  004842                     	endif
  8944  004842                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8945  004842  0E00               	movlw	low (__smallconst shr (0+16))
  8946  004844  6EF8               	movwf	tblptru,c
  8947  004846                     	endif
  8948  004846  0008               	tblrd		*
  8949  004848  50F5               	movf	tablat,w,c
  8950  00484A  0900               	iorlw	0
  8951  00484C  B4D8               	btfsc	status,2,c
  8952  00484E  D02E               	goto	u2940
  8953                           
  8954                           ;stkvar	_n @ sp[(-2)+-4]
  8955  004850  0EFA               	movlw	-6
  8956  004852  006F FF8C  F03B    	movff	plusw1,btemp
  8957  004858  0EFB               	movlw	-5
  8958  00485A  50E3               	movf	plusw1,w,c
  8959  00485C  103B               	iorwf	btemp,w,c
  8960  00485E  B4D8               	btfsc	status,2,c
  8961  004860  D025               	goto	u2940
  8962                           
  8963                           ;stkvar	_l @ sp[(-2)+1]
  8964  004862  50E1               	movf	fsr1l,w,c
  8965  004864  0FFF               	addlw	-1
  8966  004866  6ED9               	movwf	fsr2l,c
  8967  004868  50E2               	movf	fsr1h,w,c
  8968  00486A  6EDA               	movwf	fsr2h,c
  8969  00486C  0EFF               	movlw	255
  8970  00486E  22DA               	addwfc	fsr2h,f,c
  8971  004870  006F FF7F FFF6     	movff	indf2,tblptrl
  8972  004876                     	if	1	;There is more than 1 active tblptr byte
  8973  004876  0E20               	movlw	high __smallconst
  8974  004878  6EF7               	movwf	tblptrh,c
  8975  00487A                     	endif
  8976  00487A                     	if	0	;tblptru may be non-zero
  8977  00487A                     	endif
  8978  00487A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8979  00487A  0E00               	movlw	low (__smallconst shr (0+16))
  8980  00487C  6EF8               	movwf	tblptru,c
  8981  00487E                     	endif
  8982  00487E  0008               	tblrd		*
  8983  004880  006F FFD4  F046    	movff	tablat,btemp+11
  8984                           
  8985                           ;stkvar	_r @ sp[(-2)+0]
  8986  004886  50E1               	movf	fsr1l,w,c
  8987  004888  0FFE               	addlw	-2
  8988  00488A  6ED9               	movwf	fsr2l,c
  8989  00488C  50E2               	movf	fsr1h,w,c
  8990  00488E  6EDA               	movwf	fsr2h,c
  8991  004890  0EFF               	movlw	255
  8992  004892  22DA               	addwfc	fsr2h,f,c
  8993  004894  006F FF7F FFF6     	movff	indf2,tblptrl
  8994  00489A                     	if	1	;There is more than 1 active tblptr byte
  8995  00489A  0E20               	movlw	high __smallconst
  8996  00489C  6EF7               	movwf	tblptrh,c
  8997  00489E                     	endif
  8998  00489E                     	if	0	;tblptru may be non-zero
  8999  00489E                     	endif
  9000  00489E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9001  00489E  0E00               	movlw	low (__smallconst shr (0+16))
  9002  0048A0  6EF8               	movwf	tblptru,c
  9003  0048A2                     	endif
  9004  0048A2  0008               	tblrd		*
  9005  0048A4  50F5               	movf	tablat,w,c
  9006  0048A6  1846               	xorwf	btemp+11,w,c
  9007  0048A8  B4D8               	btfsc	status,2,c
  9008  0048AA  D794               	goto	l5467
  9009  0048AC                     u2940:
  9010                           
  9011                           ;stkvar	_l @ sp[(-2)+1]
  9012  0048AC  50E1               	movf	fsr1l,w,c
  9013  0048AE  0FFF               	addlw	-1
  9014  0048B0  6ED9               	movwf	fsr2l,c
  9015  0048B2  50E2               	movf	fsr1h,w,c
  9016  0048B4  6EDA               	movwf	fsr2h,c
  9017  0048B6  0EFF               	movlw	255
  9018  0048B8  22DA               	addwfc	fsr2h,f,c
  9019  0048BA  006F FF7F FFF6     	movff	indf2,tblptrl
  9020  0048C0                     	if	1	;There is more than 1 active tblptr byte
  9021  0048C0  0E20               	movlw	high __smallconst
  9022  0048C2  6EF7               	movwf	tblptrh,c
  9023  0048C4                     	endif
  9024  0048C4                     	if	0	;tblptru may be non-zero
  9025  0048C4                     	endif
  9026  0048C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9027  0048C4  0E00               	movlw	low (__smallconst shr (0+16))
  9028  0048C6  6EF8               	movwf	tblptru,c
  9029  0048C8                     	endif
  9030  0048C8  0008               	tblrd		*
  9031  0048CA  50F5               	movf	tablat,w,c
  9032  0048CC  6E3B               	movwf	btemp,c
  9033  0048CE  6A3C               	clrf	btemp+1,c
  9034                           
  9035                           ;stkvar	_r @ sp[(-2)+0]
  9036  0048D0  50E1               	movf	fsr1l,w,c
  9037  0048D2  0FFE               	addlw	-2
  9038  0048D4  6ED9               	movwf	fsr2l,c
  9039  0048D6  50E2               	movf	fsr1h,w,c
  9040  0048D8  6EDA               	movwf	fsr2h,c
  9041  0048DA  0EFF               	movlw	255
  9042  0048DC  22DA               	addwfc	fsr2h,f,c
  9043  0048DE  006F FF7F FFF6     	movff	indf2,tblptrl
  9044  0048E4                     	if	1	;There is more than 1 active tblptr byte
  9045  0048E4  0E20               	movlw	high __smallconst
  9046  0048E6  6EF7               	movwf	tblptrh,c
  9047  0048E8                     	endif
  9048  0048E8                     	if	0	;tblptru may be non-zero
  9049  0048E8                     	endif
  9050  0048E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9051  0048E8  0E00               	movlw	low (__smallconst shr (0+16))
  9052  0048EA  6EF8               	movwf	tblptru,c
  9053  0048EC                     	endif
  9054  0048EC  0008               	tblrd		*
  9055  0048EE  50F5               	movf	tablat,w,c
  9056  0048F0  5E3B               	subwf	btemp,f,c
  9057  0048F2  0E00               	movlw	0
  9058  0048F4  5A3C               	subwfb	btemp+1,f,c
  9059  0048F6                     l2572:
  9060                           
  9061                           ; _strncmp: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
  9062  0048F6  0EFA               	movlw	250
  9063  0048F8  26E1               	addwf	fsr1l,f,c
  9064  0048FA  0EFF               	movlw	255
  9065  0048FC  22E2               	addwfc	fsr1h,f,c
  9066  0048FE  0012               	return		;funcret
  9067  004900                     __end_of_strncmp:
  9068                           	opt callstack 0
  9069                           
  9070 ;; *************** function _stoa *****************
  9071 ;; Defined at:
  9072 ;;		line 546 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9073 ;; Parameters:    Size  Location     Type
  9074 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9075 ;;		 -> f(5), NULL(0), 
  9076 ;;  s               2  [STACK] PTR unsigned char 
  9077 ;;		 -> ?_printf(2), ?_sprintf(2), STR_3(6), V(88), 
  9078 ;; Auto vars:     Size  Location     Type
  9079 ;;  nuls            7  [STACK] unsigned char [7]
  9080 ;;  l               2  [STACK] int 
  9081 ;;  p               2  [STACK] int 
  9082 ;;  cp              2  [STACK] PTR unsigned char 
  9083 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_3(6), 
  9084 ;;		 -> V(88), 
  9085 ;;  w               2  [STACK] int 
  9086 ;;  i               2  [STACK] int 
  9087 ;; Return value:  Size  Location     Type
  9088 ;;                  2  [STACK] int 
  9089 ;; Registers used:
  9090 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  9091 ;; Tracked objects:
  9092 ;;		On entry : 0/0
  9093 ;;		On exit  : 0/0
  9094 ;;		Unchanged: 0/0
  9095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9100 ;;Total ram usage:        0 bytes
  9101 ;; Hardware stack levels used:    1
  9102 ;; Hardware stack levels required when called:    6
  9103 ;; This function calls:
  9104 ;;		_fputc
  9105 ;;		_strlen
  9106 ;; This function is called by:
  9107 ;;		_vfpfcnvrt
  9108 ;; This function uses a reentrant model
  9109 ;;
  9110                           
  9111                           	psect	text38
  9112  003986                     __ptext38:
  9113                           	opt callstack 0
  9114  003986                     _stoa:
  9115                           	opt callstack 0
  9116                           
  9117                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9118  003986  0E11               	movlw	17
  9119  003988  26E1               	addwf	fsr1l,f,c
  9120  00398A  0E00               	movlw	0
  9121  00398C  22E2               	addwfc	fsr1h,f,c
  9122                           
  9123                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  9124                           
  9125                           ;incstack = 0
  9126  00398E  EE20  F0F2         	lfsr	2,stoa@F1142
  9127                           
  9128                           ;stkvar	_nuls @ sp[(-17)+0]
  9129  003992  0E07               	movlw	7
  9130  003994  6E3B               	movwf	btemp,c
  9131  003996  0EEF               	movlw	-17
  9132  003998                     us466999:
  9133  003998  006F FF7B FFE3     	movff	postinc2,plusw1
  9134  00399E  28E8               	incf	wreg,w,c
  9135  0039A0  2E3B               	decfsz	btemp,f,c
  9136  0039A2  D7FA               	bra	us466999
  9137                           
  9138                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  9139                           ;stkvar	_s @ sp[(-17)+-4]
  9140  0039A4  0EEB               	movlw	-21
  9141  0039A6  006F FF8C  F045    	movff	plusw1,btemp+10
  9142  0039AC  0EEC               	movlw	-20
  9143  0039AE  006F FF8C  F046    	movff	plusw1,btemp+11
  9144                           
  9145                           ;stkvar	_cp @ sp[(-17)+11]
  9146  0039B4  0EFB               	movlw	-5
  9147  0039B6  0060  F11B  FFE3   	movff	btemp+11,plusw1
  9148  0039BC  0EFA               	movlw	-6
  9149  0039BE  0060  F117  FFE3   	movff	btemp+10,plusw1
  9150                           
  9151                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  9152                           ;stkvar	_cp @ sp[(-17)+11]
  9153  0039C4  0EFA               	movlw	-6
  9154  0039C6  006F FF8C  F03B    	movff	plusw1,btemp
  9155  0039CC  0EFB               	movlw	-5
  9156  0039CE  50E3               	movf	plusw1,w,c
  9157  0039D0  103B               	iorwf	btemp,w,c
  9158  0039D2  A4D8               	btfss	status,2,c
  9159  0039D4  D00E               	goto	l7567
  9160                           
  9161                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  9162                           ;stkvar	_nuls @ sp[(-17)+0]
  9163  0039D6  0EEF               	movlw	239
  9164  0039D8  24E1               	addwf	fsr1l,w,c
  9165  0039DA  6E45               	movwf	btemp+10,c
  9166  0039DC  0EFF               	movlw	255
  9167  0039DE  20E2               	addwfc	fsr1h,w,c
  9168  0039E0  6E46               	movwf	btemp+11,c
  9169                           
  9170                           ;stkvar	_cp @ sp[(-17)+11]
  9171  0039E2  0EFB               	movlw	-5
  9172  0039E4  0060  F11B  FFE3   	movff	btemp+11,plusw1
  9173  0039EA  0EFA               	movlw	-6
  9174  0039EC  0060  F117  FFE3   	movff	btemp+10,plusw1
  9175  0039F2                     l7567:
  9176                           
  9177                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  9178                           ;stkvar	_cp @ sp[(-17)+11]
  9179  0039F2  0EFA               	movlw	-6
  9180  0039F4  006F FF8F FFE6     	movff	plusw1,postinc1
  9181  0039FA  006F FF8F FFE6     	movff	plusw1,postinc1
  9182  003A00  ECE3  F027         	call	_strlen	;wreg free
  9183                           
  9184                           ;stkvar	_l @ sp[(-17)+7]
  9185  003A04  0EF6               	movlw	-10
  9186  003A06  0060  F0EF  FFE3   	movff	btemp,plusw1
  9187  003A0C  0EF7               	movlw	-9
  9188  003A0E  0060  F0F3  FFE3   	movff	btemp+1,plusw1
  9189                           
  9190                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  9191                           ;stkvar	_p @ sp[(-17)+9]
  9192  003A14  0EF8               	movlw	-8
  9193  003A16  0060  F08B  FFE3   	movff	_prec,plusw1
  9194  003A1C  0EF9               	movlw	-7
  9195  003A1E  0060  F08F  FFE3   	movff	_prec+1,plusw1
  9196                           
  9197                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  9198                           ;stkvar	_p @ sp[(-17)+9]
  9199  003A24  0EF9               	movlw	-7
  9200  003A26  BEE3               	btfsc	plusw1,7,c
  9201  003A28  D023               	goto	l1804
  9202                           
  9203                           ;stkvar	_l @ sp[(-17)+7]
  9204                           ;stkvar	_p @ sp[(-17)+9]
  9205  003A2A  50E1               	movf	fsr1l,w,c
  9206  003A2C  0FF8               	addlw	-8
  9207  003A2E  6ED9               	movwf	fsr2l,c
  9208  003A30  50E2               	movf	fsr1h,w,c
  9209  003A32  6EDA               	movwf	fsr2h,c
  9210  003A34  0EFF               	movlw	255
  9211  003A36  22DA               	addwfc	fsr2h,f,c
  9212  003A38  0EF6               	movlw	-10
  9213  003A3A  50E3               	movf	plusw1,w,c
  9214  003A3C  5CDE               	subwf	postinc2,w,c
  9215  003A3E  50DE               	movf	postinc2,w,c
  9216  003A40  0A80               	xorlw	128
  9217  003A42  6E3B               	movwf	btemp,c
  9218  003A44  0EF7               	movlw	-9
  9219  003A46  50E3               	movf	plusw1,w,c
  9220  003A48  0A80               	xorlw	128
  9221  003A4A  583B               	subwfb	btemp,w,c
  9222  003A4C  B0D8               	btfsc	status,0,c
  9223  003A4E  D010               	goto	l1804
  9224                           
  9225                           ;stkvar	_p @ sp[(-17)+9]
  9226                           ;stkvar	_l @ sp[(-17)+7]
  9227  003A50  0EF8               	movlw	-8
  9228  003A52  006F FF8C  F03B    	movff	plusw1,btemp
  9229  003A58  0EF6               	movlw	-10
  9230  003A5A  0060  F0EF  FFE3   	movff	btemp,plusw1
  9231  003A60  0EF9               	movlw	-7
  9232  003A62  006F FF8C  F03B    	movff	plusw1,btemp
  9233  003A68  0EF7               	movlw	-9
  9234  003A6A  0060  F0EF  FFE3   	movff	btemp,plusw1
  9235  003A70                     l1804:
  9236                           
  9237                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 561:     p = l;
  9238                           ;stkvar	_l @ sp[(-17)+7]
  9239                           ;stkvar	_p @ sp[(-17)+9]
  9240  003A70  0EF6               	movlw	-10
  9241  003A72  006F FF8C  F03B    	movff	plusw1,btemp
  9242  003A78  0EF8               	movlw	-8
  9243  003A7A  0060  F0EF  FFE3   	movff	btemp,plusw1
  9244  003A80  0EF7               	movlw	-9
  9245  003A82  006F FF8C  F03B    	movff	plusw1,btemp
  9246  003A88  0EF9               	movlw	-7
  9247  003A8A  0060  F0EF  FFE3   	movff	btemp,plusw1
  9248                           
  9249                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 562:     w = width;
  9250                           ;stkvar	_w @ sp[(-17)+13]
  9251  003A90  0EFC               	movlw	-4
  9252  003A92  0060  F083  FFE3   	movff	_width,plusw1
  9253  003A98  0EFD               	movlw	-3
  9254  003A9A  0060  F087  FFE3   	movff	_width+1,plusw1
  9255                           
  9256                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  9257  003AA0  A024               	btfss	_flags,0,c
  9258  003AA2  D01F               	goto	l7587
  9259  003AA4  D031               	goto	u4710
  9260  003AA6                     l7583:
  9261                           
  9262                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  9263                           ;stkvar	_fp @ sp[(-17)+-2]
  9264  003AA6  0EED               	movlw	-19
  9265  003AA8  006F FF8F FFE6     	movff	plusw1,postinc1
  9266  003AAE  006F FF8F FFE6     	movff	plusw1,postinc1
  9267  003AB4  0E20               	movlw	32
  9268  003AB6  6EE6               	movwf	postinc1,c
  9269  003AB8  0E00               	movlw	0
  9270  003ABA  6EE6               	movwf	postinc1,c
  9271  003ABC  EC0A  F025         	call	_fputc	;wreg free
  9272                           
  9273                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 568:             ++l;
  9274                           ;stkvar	_l @ sp[(-17)+7]
  9275  003AC0  0EF6               	movlw	-10
  9276  003AC2  50E3               	movf	plusw1,w,c
  9277  003AC4  0F01               	addlw	1
  9278  003AC6  6E3B               	movwf	btemp,c
  9279  003AC8  0EF6               	movlw	-10
  9280  003ACA  0060  F0EF  FFE3   	movff	btemp,plusw1
  9281  003AD0  6A3B               	clrf	btemp,c
  9282  003AD2  0EF7               	movlw	-9
  9283  003AD4  50E3               	movf	plusw1,w,c
  9284  003AD6  203B               	addwfc	btemp,w,c
  9285  003AD8  6E3B               	movwf	btemp,c
  9286  003ADA  0EF7               	movlw	-9
  9287  003ADC  0060  F0EF  FFE3   	movff	btemp,plusw1
  9288  003AE2                     l7587:
  9289                           
  9290                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  9291                           ;stkvar	_w @ sp[(-17)+13]
  9292                           ;stkvar	_l @ sp[(-17)+7]
  9293  003AE2  50E1               	movf	fsr1l,w,c
  9294  003AE4  0FF6               	addlw	-10
  9295  003AE6  6ED9               	movwf	fsr2l,c
  9296  003AE8  50E2               	movf	fsr1h,w,c
  9297  003AEA  6EDA               	movwf	fsr2h,c
  9298  003AEC  0EFF               	movlw	255
  9299  003AEE  22DA               	addwfc	fsr2h,f,c
  9300  003AF0  0EFC               	movlw	-4
  9301  003AF2  50E3               	movf	plusw1,w,c
  9302  003AF4  5CDE               	subwf	postinc2,w,c
  9303  003AF6  50DE               	movf	postinc2,w,c
  9304  003AF8  0A80               	xorlw	128
  9305  003AFA  6E3B               	movwf	btemp,c
  9306  003AFC  0EFD               	movlw	-3
  9307  003AFE  50E3               	movf	plusw1,w,c
  9308  003B00  0A80               	xorlw	128
  9309  003B02  583B               	subwfb	btemp,w,c
  9310  003B04  A0D8               	btfss	status,0,c
  9311  003B06  D7CF               	goto	l7583
  9312  003B08                     u4710:
  9313                           
  9314                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  9315                           ;stkvar	_i @ sp[(-17)+15]
  9316  003B08  0EFE               	movlw	-2
  9317  003B0A  6AE3               	clrf	plusw1,c
  9318  003B0C  0EFF               	movlw	-1
  9319  003B0E  6AE3               	clrf	plusw1,c
  9320                           
  9321                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  9322  003B10  D045               	goto	l7597
  9323  003B12                     l7591:
  9324                           
  9325                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  9326                           ;stkvar	_fp @ sp[(-17)+-2]
  9327  003B12  0EED               	movlw	-19
  9328  003B14  006F FF8F FFE6     	movff	plusw1,postinc1
  9329  003B1A  006F FF8F FFE6     	movff	plusw1,postinc1
  9330                           
  9331                           ;stkvar	_cp @ sp[(-19)+11]
  9332  003B20  0EF8               	movlw	-8
  9333  003B22  006F FF8F FFF6     	movff	plusw1,tblptrl
  9334  003B28  0EF9               	movlw	-7
  9335  003B2A  006F FF8F FFF7     	movff	plusw1,tblptrh
  9336  003B30  0E00               	movlw	low (__smallconst shr (0+16))
  9337  003B32  6EF8               	movwf	tblptru,c
  9338  003B34  0E1F               	movlw	(high __ramtop+-1)
  9339  003B36  64F7               	cpfsgt	tblptrh,c
  9340  003B38  D003               	bra	u4727
  9341  003B3A  0008               	tblrd		*
  9342  003B3C  50F5               	movf	tablat,w,c
  9343  003B3E  D007               	bra	u4720
  9344  003B40                     u4727:
  9345  003B40  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9346  003B46  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9347  003B4C  50EF               	movf	indf0,w,c
  9348  003B4E                     u4720:
  9349  003B4E  6EE6               	movwf	postinc1,c
  9350  003B50  0E00               	movlw	0
  9351  003B52  6EE6               	movwf	postinc1,c
  9352  003B54  EC0A  F025         	call	_fputc	;wreg free
  9353                           
  9354                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  9355                           ;stkvar	_cp @ sp[(-17)+11]
  9356  003B58  0EFA               	movlw	-6
  9357  003B5A  50E3               	movf	plusw1,w,c
  9358  003B5C  0F01               	addlw	1
  9359  003B5E  6E3B               	movwf	btemp,c
  9360  003B60  0EFA               	movlw	-6
  9361  003B62  0060  F0EF  FFE3   	movff	btemp,plusw1
  9362  003B68  6A3B               	clrf	btemp,c
  9363  003B6A  0EFB               	movlw	-5
  9364  003B6C  50E3               	movf	plusw1,w,c
  9365  003B6E  203B               	addwfc	btemp,w,c
  9366  003B70  6E3B               	movwf	btemp,c
  9367  003B72  0EFB               	movlw	-5
  9368  003B74  0060  F0EF  FFE3   	movff	btemp,plusw1
  9369                           
  9370                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 577:         ++i;
  9371                           ;stkvar	_i @ sp[(-17)+15]
  9372  003B7A  0EFE               	movlw	-2
  9373  003B7C  50E3               	movf	plusw1,w,c
  9374  003B7E  0F01               	addlw	1
  9375  003B80  6E3B               	movwf	btemp,c
  9376  003B82  0EFE               	movlw	-2
  9377  003B84  0060  F0EF  FFE3   	movff	btemp,plusw1
  9378  003B8A  6A3B               	clrf	btemp,c
  9379  003B8C  0EFF               	movlw	-1
  9380  003B8E  50E3               	movf	plusw1,w,c
  9381  003B90  203B               	addwfc	btemp,w,c
  9382  003B92  6E3B               	movwf	btemp,c
  9383  003B94  0EFF               	movlw	-1
  9384  003B96  0060  F0EF  FFE3   	movff	btemp,plusw1
  9385  003B9C                     l7597:
  9386                           
  9387                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  9388                           ;stkvar	_p @ sp[(-17)+9]
  9389                           ;stkvar	_i @ sp[(-17)+15]
  9390  003B9C  50E1               	movf	fsr1l,w,c
  9391  003B9E  0FFE               	addlw	-2
  9392  003BA0  6ED9               	movwf	fsr2l,c
  9393  003BA2  50E2               	movf	fsr1h,w,c
  9394  003BA4  6EDA               	movwf	fsr2h,c
  9395  003BA6  0EFF               	movlw	255
  9396  003BA8  22DA               	addwfc	fsr2h,f,c
  9397  003BAA  0EF8               	movlw	-8
  9398  003BAC  50E3               	movf	plusw1,w,c
  9399  003BAE  5CDE               	subwf	postinc2,w,c
  9400  003BB0  50DE               	movf	postinc2,w,c
  9401  003BB2  0A80               	xorlw	128
  9402  003BB4  6E3B               	movwf	btemp,c
  9403  003BB6  0EF9               	movlw	-7
  9404  003BB8  50E3               	movf	plusw1,w,c
  9405  003BBA  0A80               	xorlw	128
  9406  003BBC  583B               	subwfb	btemp,w,c
  9407  003BBE  A0D8               	btfss	status,0,c
  9408  003BC0  D7A8               	goto	l7591
  9409                           
  9410                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  9411  003BC2  B024               	btfsc	_flags,0,c
  9412  003BC4  D01F               	goto	l7605
  9413  003BC6  D031               	goto	u4750
  9414  003BC8                     l7601:
  9415                           
  9416                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  9417                           ;stkvar	_fp @ sp[(-17)+-2]
  9418  003BC8  0EED               	movlw	-19
  9419  003BCA  006F FF8F FFE6     	movff	plusw1,postinc1
  9420  003BD0  006F FF8F FFE6     	movff	plusw1,postinc1
  9421  003BD6  0E20               	movlw	32
  9422  003BD8  6EE6               	movwf	postinc1,c
  9423  003BDA  0E00               	movlw	0
  9424  003BDC  6EE6               	movwf	postinc1,c
  9425  003BDE  EC0A  F025         	call	_fputc	;wreg free
  9426                           
  9427                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 584:             ++l;
  9428                           ;stkvar	_l @ sp[(-17)+7]
  9429  003BE2  0EF6               	movlw	-10
  9430  003BE4  50E3               	movf	plusw1,w,c
  9431  003BE6  0F01               	addlw	1
  9432  003BE8  6E3B               	movwf	btemp,c
  9433  003BEA  0EF6               	movlw	-10
  9434  003BEC  0060  F0EF  FFE3   	movff	btemp,plusw1
  9435  003BF2  6A3B               	clrf	btemp,c
  9436  003BF4  0EF7               	movlw	-9
  9437  003BF6  50E3               	movf	plusw1,w,c
  9438  003BF8  203B               	addwfc	btemp,w,c
  9439  003BFA  6E3B               	movwf	btemp,c
  9440  003BFC  0EF7               	movlw	-9
  9441  003BFE  0060  F0EF  FFE3   	movff	btemp,plusw1
  9442  003C04                     l7605:
  9443                           
  9444                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  9445                           ;stkvar	_w @ sp[(-17)+13]
  9446                           ;stkvar	_l @ sp[(-17)+7]
  9447  003C04  50E1               	movf	fsr1l,w,c
  9448  003C06  0FF6               	addlw	-10
  9449  003C08  6ED9               	movwf	fsr2l,c
  9450  003C0A  50E2               	movf	fsr1h,w,c
  9451  003C0C  6EDA               	movwf	fsr2h,c
  9452  003C0E  0EFF               	movlw	255
  9453  003C10  22DA               	addwfc	fsr2h,f,c
  9454  003C12  0EFC               	movlw	-4
  9455  003C14  50E3               	movf	plusw1,w,c
  9456  003C16  5CDE               	subwf	postinc2,w,c
  9457  003C18  50DE               	movf	postinc2,w,c
  9458  003C1A  0A80               	xorlw	128
  9459  003C1C  6E3B               	movwf	btemp,c
  9460  003C1E  0EFD               	movlw	-3
  9461  003C20  50E3               	movf	plusw1,w,c
  9462  003C22  0A80               	xorlw	128
  9463  003C24  583B               	subwfb	btemp,w,c
  9464  003C26  A0D8               	btfss	status,0,c
  9465  003C28  D7CF               	goto	l7601
  9466  003C2A                     u4750:
  9467                           
  9468                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 588:     return l;
  9469                           ;stkvar	_l @ sp[(-17)+7]
  9470  003C2A  0EF6               	movlw	-10
  9471  003C2C  006F FF8C  F03B    	movff	plusw1,btemp
  9472  003C32  0EF7               	movlw	-9
  9473  003C34  006F FF8C  F03C    	movff	plusw1,btemp+1
  9474                           
  9475                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
  9476  003C3A  0EEB               	movlw	235
  9477  003C3C  26E1               	addwf	fsr1l,f,c
  9478  003C3E  0EFF               	movlw	255
  9479  003C40  22E2               	addwfc	fsr1h,f,c
  9480  003C42  0012               	return		;funcret
  9481  003C44                     __end_of_stoa:
  9482                           	opt callstack 0
  9483                           
  9484 ;; *************** function _dtoa *****************
  9485 ;; Defined at:
  9486 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9487 ;; Parameters:    Size  Location     Type
  9488 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9489 ;;		 -> f(5), NULL(0), 
  9490 ;;  d               8  [STACK] long long 
  9491 ;; Auto vars:     Size  Location     Type
  9492 ;;  n               8  [STACK] long long 
  9493 ;;  i               2  [STACK] int 
  9494 ;;  s               2  [STACK] int 
  9495 ;;  w               2  [STACK] int 
  9496 ;;  p               2  [STACK] int 
  9497 ;; Return value:  Size  Location     Type
  9498 ;;                  2  [STACK] int 
  9499 ;; Registers used:
  9500 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  9501 ;; Tracked objects:
  9502 ;;		On entry : 0/0
  9503 ;;		On exit  : 0/0
  9504 ;;		Unchanged: 0/0
  9505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9510 ;;Total ram usage:        0 bytes
  9511 ;; Hardware stack levels used:    1
  9512 ;; Hardware stack levels required when called:    8
  9513 ;; This function calls:
  9514 ;;		___aodiv
  9515 ;;		___aomod
  9516 ;;		_abs
  9517 ;;		_pad
  9518 ;; This function is called by:
  9519 ;;		_vfpfcnvrt
  9520 ;; This function uses a reentrant model
  9521 ;;
  9522                           
  9523                           	psect	text39
  9524  002F4A                     __ptext39:
  9525                           	opt callstack 0
  9526  002F4A                     _dtoa:
  9527                           	opt callstack 0
  9528                           
  9529                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  9530  002F4A  0E12               	movlw	18
  9531  002F4C  26E1               	addwf	fsr1l,f,c
  9532  002F4E  0E00               	movlw	0
  9533  002F50  22E2               	addwfc	fsr1h,f,c
  9534                           
  9535                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
  9536                           ;stkvar	_d @ sp[(-18)+-10]
  9537                           
  9538                           ;incstack = 0
  9539  002F52  0EE4               	movlw	228
  9540  002F54  24E1               	addwf	fsr1l,w,c
  9541  002F56  6ED9               	movwf	fsr2l,c
  9542  002F58  0EFF               	movlw	255
  9543  002F5A  20E2               	addwfc	fsr1h,w,c
  9544  002F5C  6EDA               	movwf	fsr2h,c
  9545                           
  9546                           ;stkvar	_n @ sp[(-18)+2]
  9547  002F5E  0E08               	movlw	8
  9548  002F60  6E3B               	movwf	btemp,c
  9549  002F62  0EF0               	movlw	-16
  9550  002F64                     us449999:
  9551  002F64  006F FF7B FFE3     	movff	postinc2,plusw1
  9552  002F6A  28E8               	incf	wreg,w,c
  9553  002F6C  2E3B               	decfsz	btemp,f,c
  9554  002F6E  D7FA               	bra	us449999
  9555                           
  9556                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  9557                           ;stkvar	_n @ sp[(-18)+2]
  9558  002F70  0EF7               	movlw	-9
  9559  002F72  AEE3               	btfss	plusw1,7,c
  9560  002F74  D002               	goto	u4500
  9561  002F76  0E01               	movlw	1
  9562  002F78  D001               	goto	u4510
  9563  002F7A                     u4500:
  9564  002F7A  0E00               	movlw	0
  9565  002F7C                     u4510:
  9566  002F7C  6E45               	movwf	btemp+10,c
  9567  002F7E  6A46               	clrf	btemp+11,c
  9568                           
  9569                           ;stkvar	_s @ sp[(-18)+12]
  9570  002F80  0EFA               	movlw	-6
  9571  002F82  0060  F117  FFE3   	movff	btemp+10,plusw1
  9572  002F88  0EFB               	movlw	-5
  9573  002F8A  0060  F11B  FFE3   	movff	btemp+11,plusw1
  9574                           
  9575                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  9576                           ;stkvar	_s @ sp[(-18)+12]
  9577  002F90  0EFA               	movlw	-6
  9578  002F92  006F FF8C  F03B    	movff	plusw1,btemp
  9579  002F98  0EFB               	movlw	-5
  9580  002F9A  50E3               	movf	plusw1,w,c
  9581  002F9C  103B               	iorwf	btemp,w,c
  9582  002F9E  B4D8               	btfsc	status,2,c
  9583  002FA0  D025               	goto	u4530
  9584                           
  9585                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  9586                           ;stkvar	_n @ sp[(-18)+2]
  9587                           ;stkvar	_n @ sp[(-18)+2]
  9588  002FA2  0EF0               	movlw	-16
  9589  002FA4  6CE3               	negf	plusw1,c
  9590  002FA6  0EF1               	movlw	-15
  9591  002FA8  1EE3               	comf	plusw1,f,c
  9592  002FAA  0EF2               	movlw	-14
  9593  002FAC  1EE3               	comf	plusw1,f,c
  9594  002FAE  0EF3               	movlw	-13
  9595  002FB0  1EE3               	comf	plusw1,f,c
  9596  002FB2  0EF4               	movlw	-12
  9597  002FB4  1EE3               	comf	plusw1,f,c
  9598  002FB6  0EF5               	movlw	-11
  9599  002FB8  1EE3               	comf	plusw1,f,c
  9600  002FBA  0EF6               	movlw	-10
  9601  002FBC  1EE3               	comf	plusw1,f,c
  9602  002FBE  0EF7               	movlw	-9
  9603  002FC0  1EE3               	comf	plusw1,f,c
  9604  002FC2  E314               	bnc	u4530
  9605  002FC4  0EF1               	movlw	-15
  9606  002FC6  2AE3               	incf	plusw1,f,c
  9607  002FC8  E311               	bnc	u4530
  9608  002FCA  0EF2               	movlw	-14
  9609  002FCC  2AE3               	incf	plusw1,f,c
  9610  002FCE  E30E               	bnc	u4530
  9611  002FD0  0EF3               	movlw	-13
  9612  002FD2  2AE3               	incf	plusw1,f,c
  9613  002FD4  E30B               	bnc	u4530
  9614  002FD6  0EF4               	movlw	-12
  9615  002FD8  2AE3               	incf	plusw1,f,c
  9616  002FDA  E308               	bnc	u4530
  9617  002FDC  0EF5               	movlw	-11
  9618  002FDE  2AE3               	incf	plusw1,f,c
  9619  002FE0  E305               	bnc	u4530
  9620  002FE2  0EF6               	movlw	-10
  9621  002FE4  2AE3               	incf	plusw1,f,c
  9622  002FE6  E302               	bnc	u4530
  9623  002FE8  0EF7               	movlw	-9
  9624  002FEA  2AE3               	incf	plusw1,f,c
  9625  002FEC                     u4530:
  9626                           
  9627                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  9628  002FEC  AE23               	btfss	_prec+1,7,c
  9629                           
  9630                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  9631  002FEE  9224               	bcf	_flags,1,c
  9632                           
  9633                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  9634  002FF0  BE23               	btfsc	_prec+1,7,c
  9635  002FF2  D005               	goto	u4550
  9636  002FF4  5023               	movf	_prec+1,w,c
  9637  002FF6  E110               	bnz	l7509
  9638  002FF8  0422               	decf	_prec,w,c
  9639  002FFA  B0D8               	btfsc	status,0,c
  9640  002FFC  D00D               	goto	l7509
  9641  002FFE                     u4550:
  9642  002FFE  0E01               	movlw	1
  9643  003000  6E45               	movwf	btemp+10,c
  9644  003002  0E00               	movlw	0
  9645  003004  6E46               	movwf	btemp+11,c
  9646                           
  9647                           ;stkvar	_p @ sp[(-18)+16]
  9648  003006  0EFE               	movlw	-2
  9649  003008  0060  F117  FFE3   	movff	btemp+10,plusw1
  9650  00300E  0EFF               	movlw	-1
  9651  003010  0060  F11B  FFE3   	movff	btemp+11,plusw1
  9652  003016  D008               	goto	l1777
  9653  003018                     l7509:
  9654                           
  9655                           ;stkvar	_p @ sp[(-18)+16]
  9656  003018  0EFE               	movlw	-2
  9657  00301A  0060  F08B  FFE3   	movff	_prec,plusw1
  9658  003020  0EFF               	movlw	-1
  9659  003022  0060  F08F  FFE3   	movff	_prec+1,plusw1
  9660  003028                     l1777:
  9661                           
  9662                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  9663                           ;stkvar	_w @ sp[(-18)+14]
  9664  003028  0EFC               	movlw	-4
  9665  00302A  0060  F083  FFE3   	movff	_width,plusw1
  9666  003030  0EFD               	movlw	-3
  9667  003032  0060  F087  FFE3   	movff	_width+1,plusw1
  9668                           
  9669                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  9670                           ;stkvar	_s @ sp[(-18)+12]
  9671  003038  0EFA               	movlw	-6
  9672  00303A  006F FF8C  F03B    	movff	plusw1,btemp
  9673  003040  0EFB               	movlw	-5
  9674  003042  50E3               	movf	plusw1,w,c
  9675  003044  103B               	iorwf	btemp,w,c
  9676  003046  A4D8               	btfss	status,2,c
  9677  003048  D002               	goto	u4570
  9678  00304A  A424               	btfss	_flags,2,c
  9679  00304C  D00A               	goto	l7517
  9680  00304E                     u4570:
  9681                           
  9682                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  9683                           ;stkvar	_w @ sp[(-18)+14]
  9684  00304E  50E1               	movf	fsr1l,w,c
  9685  003050  0FFC               	addlw	-4
  9686  003052  6ED9               	movwf	fsr2l,c
  9687  003054  50E2               	movf	fsr1h,w,c
  9688  003056  6EDA               	movwf	fsr2h,c
  9689  003058  0EFF               	movlw	255
  9690  00305A  22DA               	addwfc	fsr2h,f,c
  9691  00305C  06DE               	decf	postinc2,f,c
  9692  00305E  0E00               	movlw	0
  9693  003060  5ADD               	subwfb	postdec2,f,c
  9694  003062                     l7517:
  9695                           
  9696                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  9697  003062  0E1F               	movlw	31
  9698  003064  6E45               	movwf	btemp+10,c
  9699  003066  0E00               	movlw	0
  9700  003068  6E46               	movwf	btemp+11,c
  9701                           
  9702                           ;stkvar	_i @ sp[(-18)+10]
  9703  00306A  0EF8               	movlw	-8
  9704  00306C  0060  F117  FFE3   	movff	btemp+10,plusw1
  9705  003072  0EF9               	movlw	-7
  9706  003074  0060  F11B  FFE3   	movff	btemp+11,plusw1
  9707                           
  9708                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  9709  00307A  0101               	movlb	1	; () banked
  9710  00307C  6BCE               	clrf	(_dbuf+31)& (0+255),b
  9711                           
  9712                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9713  00307E  D109               	goto	l7531
  9714  003080                     l7521:
  9715                           
  9716                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  9717                           ;stkvar	_i @ sp[(-18)+10]
  9718  003080  50E1               	movf	fsr1l,w,c
  9719  003082  0FF8               	addlw	-8
  9720  003084  6ED9               	movwf	fsr2l,c
  9721  003086  50E2               	movf	fsr1h,w,c
  9722  003088  6EDA               	movwf	fsr2h,c
  9723  00308A  0EFF               	movlw	255
  9724  00308C  22DA               	addwfc	fsr2h,f,c
  9725  00308E  06DE               	decf	postinc2,f,c
  9726  003090  0E00               	movlw	0
  9727  003092  5ADD               	subwfb	postdec2,f,c
  9728                           
  9729                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  9730  003094  0E0A               	movlw	10
  9731  003096  6EE6               	movwf	postinc1,c
  9732  003098  0E00               	movlw	0
  9733  00309A  6EE6               	movwf	postinc1,c
  9734  00309C  0E00               	movlw	0
  9735  00309E  6EE6               	movwf	postinc1,c
  9736  0030A0  0E00               	movlw	0
  9737  0030A2  6EE6               	movwf	postinc1,c
  9738  0030A4  0E00               	movlw	0
  9739  0030A6  6EE6               	movwf	postinc1,c
  9740  0030A8  0E00               	movlw	0
  9741  0030AA  6EE6               	movwf	postinc1,c
  9742  0030AC  0E00               	movlw	0
  9743  0030AE  6EE6               	movwf	postinc1,c
  9744  0030B0  0E00               	movlw	0
  9745  0030B2  6EE6               	movwf	postinc1,c
  9746                           
  9747                           ;stkvar	_n @ sp[(-26)+2]
  9748  0030B4  50E1               	movf	fsr1l,w,c
  9749  0030B6  0FE8               	addlw	-24
  9750  0030B8  6ED9               	movwf	fsr2l,c
  9751  0030BA  50E2               	movf	fsr1h,w,c
  9752  0030BC  6EDA               	movwf	fsr2h,c
  9753  0030BE  0EFF               	movlw	255
  9754  0030C0  22DA               	addwfc	fsr2h,f,c
  9755  0030C2  006F FF7B FFE6     	movff	postinc2,postinc1
  9756  0030C8  006F FF7B FFE6     	movff	postinc2,postinc1
  9757  0030CE  006F FF7B FFE6     	movff	postinc2,postinc1
  9758  0030D4  006F FF7B FFE6     	movff	postinc2,postinc1
  9759  0030DA  006F FF7B FFE6     	movff	postinc2,postinc1
  9760  0030E0  006F FF7B FFE6     	movff	postinc2,postinc1
  9761  0030E6  006F FF7B FFE6     	movff	postinc2,postinc1
  9762  0030EC  006F FF7B FFE6     	movff	postinc2,postinc1
  9763  0030F2  ECB6  F021         	call	___aomod	;wreg free
  9764  0030F6  52E5               	movf	postdec1,f,c
  9765  0030F8  006F FF9C  F052    	movff	indf1,btemp+23
  9766  0030FE  52E5               	movf	postdec1,f,c
  9767  003100  006F FF9C  F051    	movff	indf1,btemp+22
  9768  003106  52E5               	movf	postdec1,f,c
  9769  003108  006F FF9C  F050    	movff	indf1,btemp+21
  9770  00310E  52E5               	movf	postdec1,f,c
  9771  003110  006F FF9C  F04F    	movff	indf1,btemp+20
  9772  003116  52E5               	movf	postdec1,f,c
  9773  003118  006F FF9C  F04E    	movff	indf1,btemp+19
  9774  00311E  52E5               	movf	postdec1,f,c
  9775  003120  006F FF9C  F04D    	movff	indf1,btemp+18
  9776  003126  52E5               	movf	postdec1,f,c
  9777  003128  006F FF9C  F04C    	movff	indf1,btemp+17
  9778  00312E  52E5               	movf	postdec1,f,c
  9779  003130  006F FF9C  F04B    	movff	indf1,btemp+16
  9780  003136  0EF8               	movlw	248
  9781  003138  26E1               	addwf	fsr1l,f,c
  9782  00313A  0EFF               	movlw	255
  9783  00313C  22E2               	addwfc	fsr1h,f,c
  9784  00313E  0060  F12C  F045   	movff	btemp+16,btemp+10
  9785  003144  0060  F130  F046   	movff	btemp+17,btemp+11
  9786  00314A  0060  F117  FFE6   	movff	btemp+10,postinc1
  9787  003150  0060  F11B  FFE6   	movff	btemp+11,postinc1
  9788  003156  EC91  F02B         	call	_abs	;wreg free
  9789  00315A  0E30               	movlw	48
  9790  00315C  263B               	addwf	btemp,f,c
  9791                           
  9792                           ;stkvar	_i @ sp[(-18)+10]
  9793  00315E  0EF8               	movlw	-8
  9794  003160  006F FF8C  F045    	movff	plusw1,btemp+10
  9795  003166  0EF9               	movlw	-7
  9796  003168  006F FF8C  F046    	movff	plusw1,btemp+11
  9797  00316E  0EAF               	movlw	low _dbuf
  9798  003170  2445               	addwf	btemp+10,w,c
  9799  003172  6ED9               	movwf	fsr2l,c
  9800  003174  0E01               	movlw	high _dbuf
  9801  003176  2046               	addwfc	btemp+11,w,c
  9802  003178  6EDA               	movwf	fsr2h,c
  9803  00317A  0060  F0EF  FFDF   	movff	btemp,indf2
  9804                           
  9805                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  9806                           ;stkvar	_p @ sp[(-18)+16]
  9807  003180  50E1               	movf	fsr1l,w,c
  9808  003182  0FFE               	addlw	-2
  9809  003184  6ED9               	movwf	fsr2l,c
  9810  003186  50E2               	movf	fsr1h,w,c
  9811  003188  6EDA               	movwf	fsr2h,c
  9812  00318A  0EFF               	movlw	255
  9813  00318C  22DA               	addwfc	fsr2h,f,c
  9814  00318E  06DE               	decf	postinc2,f,c
  9815  003190  0E00               	movlw	0
  9816  003192  5ADD               	subwfb	postdec2,f,c
  9817                           
  9818                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  9819                           ;stkvar	_w @ sp[(-18)+14]
  9820  003194  50E1               	movf	fsr1l,w,c
  9821  003196  0FFC               	addlw	-4
  9822  003198  6ED9               	movwf	fsr2l,c
  9823  00319A  50E2               	movf	fsr1h,w,c
  9824  00319C  6EDA               	movwf	fsr2h,c
  9825  00319E  0EFF               	movlw	255
  9826  0031A0  22DA               	addwfc	fsr2h,f,c
  9827  0031A2  06DE               	decf	postinc2,f,c
  9828  0031A4  0E00               	movlw	0
  9829  0031A6  5ADD               	subwfb	postdec2,f,c
  9830                           
  9831                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  9832  0031A8  0E0A               	movlw	10
  9833  0031AA  6EE6               	movwf	postinc1,c
  9834  0031AC  0E00               	movlw	0
  9835  0031AE  6EE6               	movwf	postinc1,c
  9836  0031B0  0E00               	movlw	0
  9837  0031B2  6EE6               	movwf	postinc1,c
  9838  0031B4  0E00               	movlw	0
  9839  0031B6  6EE6               	movwf	postinc1,c
  9840  0031B8  0E00               	movlw	0
  9841  0031BA  6EE6               	movwf	postinc1,c
  9842  0031BC  0E00               	movlw	0
  9843  0031BE  6EE6               	movwf	postinc1,c
  9844  0031C0  0E00               	movlw	0
  9845  0031C2  6EE6               	movwf	postinc1,c
  9846  0031C4  0E00               	movlw	0
  9847  0031C6  6EE6               	movwf	postinc1,c
  9848                           
  9849                           ;stkvar	_n @ sp[(-26)+2]
  9850  0031C8  50E1               	movf	fsr1l,w,c
  9851  0031CA  0FE8               	addlw	-24
  9852  0031CC  6ED9               	movwf	fsr2l,c
  9853  0031CE  50E2               	movf	fsr1h,w,c
  9854  0031D0  6EDA               	movwf	fsr2h,c
  9855  0031D2  0EFF               	movlw	255
  9856  0031D4  22DA               	addwfc	fsr2h,f,c
  9857  0031D6  006F FF7B FFE6     	movff	postinc2,postinc1
  9858  0031DC  006F FF7B FFE6     	movff	postinc2,postinc1
  9859  0031E2  006F FF7B FFE6     	movff	postinc2,postinc1
  9860  0031E8  006F FF7B FFE6     	movff	postinc2,postinc1
  9861  0031EE  006F FF7B FFE6     	movff	postinc2,postinc1
  9862  0031F4  006F FF7B FFE6     	movff	postinc2,postinc1
  9863  0031FA  006F FF7B FFE6     	movff	postinc2,postinc1
  9864  003200  006F FF7B FFE6     	movff	postinc2,postinc1
  9865  003206  EC22  F01E         	call	___aodiv	;wreg free
  9866  00320A  52E5               	movf	postdec1,f,c
  9867  00320C  006F FF9C  F052    	movff	indf1,btemp+23
  9868  003212  52E5               	movf	postdec1,f,c
  9869  003214  006F FF9C  F051    	movff	indf1,btemp+22
  9870  00321A  52E5               	movf	postdec1,f,c
  9871  00321C  006F FF9C  F050    	movff	indf1,btemp+21
  9872  003222  52E5               	movf	postdec1,f,c
  9873  003224  006F FF9C  F04F    	movff	indf1,btemp+20
  9874  00322A  52E5               	movf	postdec1,f,c
  9875  00322C  006F FF9C  F04E    	movff	indf1,btemp+19
  9876  003232  52E5               	movf	postdec1,f,c
  9877  003234  006F FF9C  F04D    	movff	indf1,btemp+18
  9878  00323A  52E5               	movf	postdec1,f,c
  9879  00323C  006F FF9C  F04C    	movff	indf1,btemp+17
  9880  003242  52E5               	movf	postdec1,f,c
  9881  003244  006F FF9C  F04B    	movff	indf1,btemp+16
  9882  00324A  0EF8               	movlw	248
  9883  00324C  26E1               	addwf	fsr1l,f,c
  9884  00324E  0EFF               	movlw	255
  9885  003250  22E2               	addwfc	fsr1h,f,c
  9886                           
  9887                           ;stkvar	_n @ sp[(-18)+2]
  9888  003252  0EF0               	movlw	-16
  9889  003254  0060  F12F  FFE3   	movff	btemp+16,plusw1
  9890  00325A  0EF1               	movlw	-15
  9891  00325C  0060  F133  FFE3   	movff	btemp+17,plusw1
  9892  003262  0EF2               	movlw	-14
  9893  003264  0060  F137  FFE3   	movff	btemp+18,plusw1
  9894  00326A  0EF3               	movlw	-13
  9895  00326C  0060  F13B  FFE3   	movff	btemp+19,plusw1
  9896  003272  0EF4               	movlw	-12
  9897  003274  0060  F13F  FFE3   	movff	btemp+20,plusw1
  9898  00327A  0EF5               	movlw	-11
  9899  00327C  0060  F143  FFE3   	movff	btemp+21,plusw1
  9900  003282  0EF6               	movlw	-10
  9901  003284  0060  F147  FFE3   	movff	btemp+22,plusw1
  9902  00328A  0EF7               	movlw	-9
  9903  00328C  0060  F14B  FFE3   	movff	btemp+23,plusw1
  9904  003292                     l7531:
  9905                           
  9906                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9907                           ;stkvar	_i @ sp[(-18)+10]
  9908  003292  0EF9               	movlw	-7
  9909  003294  BEE3               	btfsc	plusw1,7,c
  9910  003296  D036               	goto	u4620
  9911  003298  0EF9               	movlw	-7
  9912  00329A  50E3               	movf	plusw1,w,c
  9913  00329C  E104               	bnz	u4580
  9914  00329E  0EF8               	movlw	-8
  9915  0032A0  04E3               	decf	plusw1,w,c
  9916  0032A2  A0D8               	btfss	status,0,c
  9917  0032A4  D02F               	goto	u4620
  9918  0032A6                     u4580:
  9919                           
  9920                           ;stkvar	_n @ sp[(-18)+2]
  9921  0032A6  0EF0               	movlw	-16
  9922  0032A8  50E3               	movf	plusw1,w,c
  9923  0032AA  E115               	bnz	u4591
  9924  0032AC  0EF1               	movlw	-15
  9925  0032AE  50E3               	movf	plusw1,w,c
  9926  0032B0  E112               	bnz	u4591
  9927  0032B2  0EF2               	movlw	-14
  9928  0032B4  50E3               	movf	plusw1,w,c
  9929  0032B6  E10F               	bnz	u4591
  9930  0032B8  0EF3               	movlw	-13
  9931  0032BA  50E3               	movf	plusw1,w,c
  9932  0032BC  E10C               	bnz	u4591
  9933  0032BE  0EF4               	movlw	-12
  9934  0032C0  50E3               	movf	plusw1,w,c
  9935  0032C2  E109               	bnz	u4591
  9936  0032C4  0EF5               	movlw	-11
  9937  0032C6  50E3               	movf	plusw1,w,c
  9938  0032C8  E106               	bnz	u4591
  9939  0032CA  0EF6               	movlw	-10
  9940  0032CC  50E3               	movf	plusw1,w,c
  9941  0032CE  E103               	bnz	u4591
  9942  0032D0  0EF7               	movlw	-9
  9943  0032D2  50E3               	movf	plusw1,w,c
  9944  0032D4  A4D8               	btfss	status,2,c
  9945  0032D6                     u4591:
  9946  0032D6  D6D4               	goto	l7521
  9947                           
  9948                           ;stkvar	_p @ sp[(-18)+16]
  9949  0032D8  0EFF               	movlw	-1
  9950  0032DA  BEE3               	btfsc	plusw1,7,c
  9951  0032DC  D007               	goto	u4600
  9952  0032DE  0EFF               	movlw	-1
  9953  0032E0  50E3               	movf	plusw1,w,c
  9954  0032E2  E103               	bnz	u4601
  9955  0032E4  0EFE               	movlw	-2
  9956  0032E6  04E3               	decf	plusw1,w,c
  9957  0032E8  B0D8               	btfsc	status,0,c
  9958  0032EA                     u4601:
  9959  0032EA  D6CA               	goto	l7521
  9960  0032EC                     u4600:
  9961                           
  9962                           ;stkvar	_w @ sp[(-18)+14]
  9963  0032EC  0EFD               	movlw	-3
  9964  0032EE  BEE3               	btfsc	plusw1,7,c
  9965  0032F0  D009               	goto	u4620
  9966  0032F2  0EFD               	movlw	-3
  9967  0032F4  50E3               	movf	plusw1,w,c
  9968  0032F6  E104               	bnz	u4610
  9969  0032F8  0EFC               	movlw	-4
  9970  0032FA  04E3               	decf	plusw1,w,c
  9971  0032FC  A0D8               	btfss	status,0,c
  9972  0032FE  D002               	goto	u4620
  9973  003300                     u4610:
  9974  003300  B224               	btfsc	_flags,1,c
  9975  003302  D6BE               	goto	l7521
  9976  003304                     u4620:
  9977                           
  9978                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  9979                           ;stkvar	_s @ sp[(-18)+12]
  9980  003304  0EFA               	movlw	-6
  9981  003306  006F FF8C  F03B    	movff	plusw1,btemp
  9982  00330C  0EFB               	movlw	-5
  9983  00330E  50E3               	movf	plusw1,w,c
  9984  003310  103B               	iorwf	btemp,w,c
  9985  003312  A4D8               	btfss	status,2,c
  9986  003314  D002               	goto	u4640
  9987  003316  A424               	btfss	_flags,2,c
  9988  003318  D033               	goto	l7555
  9989  00331A                     u4640:
  9990                           
  9991                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  9992                           ;stkvar	_i @ sp[(-18)+10]
  9993  00331A  50E1               	movf	fsr1l,w,c
  9994  00331C  0FF8               	addlw	-8
  9995  00331E  6ED9               	movwf	fsr2l,c
  9996  003320  50E2               	movf	fsr1h,w,c
  9997  003322  6EDA               	movwf	fsr2h,c
  9998  003324  0EFF               	movlw	255
  9999  003326  22DA               	addwfc	fsr2h,f,c
 10000  003328  06DE               	decf	postinc2,f,c
 10001  00332A  0E00               	movlw	0
 10002  00332C  5ADD               	subwfb	postdec2,f,c
 10003                           
 10004                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 10005                           ;stkvar	_s @ sp[(-18)+12]
 10006  00332E  0EFA               	movlw	-6
 10007  003330  006F FF8C  F03B    	movff	plusw1,btemp
 10008  003336  0EFB               	movlw	-5
 10009  003338  50E3               	movf	plusw1,w,c
 10010  00333A  103B               	iorwf	btemp,w,c
 10011  00333C  A4D8               	btfss	status,2,c
 10012  00333E  D002               	goto	l7551
 10013  003340  0E2B               	movlw	43
 10014  003342  D001               	goto	L25
 10015  003344                     l7551:
 10016  003344  0E2D               	movlw	45
 10017  003346                     L25:
 10018  003346  6E45               	movwf	btemp+10,c
 10019  003348  0E00               	movlw	0
 10020  00334A  6E46               	movwf	btemp+11,c
 10021                           
 10022                           ;stkvar	_dtoa$3796 @ sp[(-18)+0]
 10023  00334C  0EEE               	movlw	-18
 10024  00334E  0060  F117  FFE3   	movff	btemp+10,plusw1
 10025  003354  0EEF               	movlw	-17
 10026  003356  0060  F11B  FFE3   	movff	btemp+11,plusw1
 10027                           
 10028                           ;stkvar	_dtoa$3796 @ sp[(-18)+0]
 10029                           ;stkvar	_i @ sp[(-18)+10]
 10030  00335C  0EF8               	movlw	-8
 10031  00335E  006F FF8C  F045    	movff	plusw1,btemp+10
 10032  003364  0EF9               	movlw	-7
 10033  003366  006F FF8C  F046    	movff	plusw1,btemp+11
 10034  00336C  0EAF               	movlw	low _dbuf
 10035  00336E  2445               	addwf	btemp+10,w,c
 10036  003370  6ED9               	movwf	fsr2l,c
 10037  003372  0E01               	movlw	high _dbuf
 10038  003374  2046               	addwfc	btemp+11,w,c
 10039  003376  6EDA               	movwf	fsr2h,c
 10040  003378  0EEE               	movlw	-18
 10041  00337A  006F FF8F FFDF     	movff	plusw1,indf2
 10042  003380                     l7555:
 10043                           
 10044                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 10045                           ;stkvar	_w @ sp[(-18)+14]
 10046  003380  0EFC               	movlw	-4
 10047  003382  006F FF8F FFE6     	movff	plusw1,postinc1
 10048  003388  006F FF8F FFE6     	movff	plusw1,postinc1
 10049                           
 10050                           ;stkvar	_i @ sp[(-20)+10]
 10051  00338E  0EAF               	movlw	low _dbuf
 10052  003390  6E45               	movwf	btemp+10,c
 10053  003392  0E01               	movlw	high _dbuf
 10054  003394  6E46               	movwf	btemp+11,c
 10055  003396  0EF6               	movlw	-10
 10056  003398  50E3               	movf	plusw1,w,c
 10057  00339A  2645               	addwf	btemp+10,f,c
 10058  00339C  0EF7               	movlw	-9
 10059  00339E  50E3               	movf	plusw1,w,c
 10060  0033A0  2246               	addwfc	btemp+11,f,c
 10061  0033A2  0060  F117  FFE6   	movff	btemp+10,postinc1
 10062  0033A8  0060  F11B  FFE6   	movff	btemp+11,postinc1
 10063                           
 10064                           ;stkvar	_fp @ sp[(-22)+-2]
 10065  0033AE  0EE8               	movlw	-24
 10066  0033B0  006F FF8F FFE6     	movff	plusw1,postinc1
 10067  0033B6  006F FF8F FFE6     	movff	plusw1,postinc1
 10068  0033BC  EC80  F024         	call	_pad	;wreg free
 10069                           
 10070                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 10071  0033C0  0EE4               	movlw	228
 10072  0033C2  26E1               	addwf	fsr1l,f,c
 10073  0033C4  0EFF               	movlw	255
 10074  0033C6  22E2               	addwfc	fsr1h,f,c
 10075  0033C8  0012               	return		;funcret
 10076  0033CA                     __end_of_dtoa:
 10077                           	opt callstack 0
 10078                           
 10079 ;; *************** function _abs *****************
 10080 ;; Defined at:
 10081 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
 10082 ;; Parameters:    Size  Location     Type
 10083 ;;  a               2  [STACK] int 
 10084 ;; Auto vars:     Size  Location     Type
 10085 ;;		None
 10086 ;; Return value:  Size  Location     Type
 10087 ;;                  2  [STACK] int 
 10088 ;; Registers used:
 10089 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 10090 ;; Tracked objects:
 10091 ;;		On entry : 0/1
 10092 ;;		On exit  : 0/0
 10093 ;;		Unchanged: 0/0
 10094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10099 ;;Total ram usage:        0 bytes
 10100 ;; Hardware stack levels used:    1
 10101 ;; Hardware stack levels required when called:    3
 10102 ;; This function calls:
 10103 ;;		Nothing
 10104 ;; This function is called by:
 10105 ;;		_dtoa
 10106 ;; This function uses a reentrant model
 10107 ;;
 10108                           
 10109                           	psect	text40
 10110  005722                     __ptext40:
 10111                           	opt callstack 0
 10112  005722                     _abs:
 10113                           	opt callstack 23
 10114                           
 10115                           ;stkvar	_a @ sp[(0)+-2]
 10116                           
 10117                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10118                           ;incstack = 0
 10119  005722  0EFF               	movlw	-1
 10120  005724  BEE3               	btfsc	plusw1,7,c
 10121  005726  D007               	goto	u2380
 10122  005728  0EFF               	movlw	-1
 10123  00572A  50E3               	movf	plusw1,w,c
 10124  00572C  E112               	bnz	l5243
 10125  00572E  0EFE               	movlw	-2
 10126  005730  04E3               	decf	plusw1,w,c
 10127  005732  B0D8               	btfsc	status,0,c
 10128  005734  D00E               	goto	l5243
 10129  005736                     u2380:
 10130                           
 10131                           ;stkvar	_a @ sp[(0)+-2]
 10132  005736  0EFE               	movlw	-2
 10133  005738  006F FF8C  F03B    	movff	plusw1,btemp
 10134  00573E  1E3B               	comf	btemp,f,c
 10135  005740  0EFF               	movlw	-1
 10136  005742  006F FF8C  F03C    	movff	plusw1,btemp+1
 10137  005748  1E3C               	comf	btemp+1,f,c
 10138  00574A  2A3B               	incf	btemp,f,c
 10139  00574C  B4D8               	btfsc	status,2,c
 10140  00574E  2A3C               	incf	btemp+1,f,c
 10141  005750  D008               	goto	l2518
 10142  005752                     l5243:
 10143                           
 10144                           ;stkvar	_a @ sp[(0)+-2]
 10145  005752  0EFE               	movlw	-2
 10146  005754  006F FF8C  F03B    	movff	plusw1,btemp
 10147  00575A  0EFF               	movlw	-1
 10148  00575C  006F FF8C  F03C    	movff	plusw1,btemp+1
 10149  005762                     l2518:
 10150                           
 10151                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 10152  005762  52E5               	movf	postdec1,f,c
 10153  005764  52E5               	movf	postdec1,f,c
 10154  005766  0012               	return		;funcret
 10155  005768                     __end_of_abs:
 10156                           	opt callstack 0
 10157                           
 10158 ;; *************** function ___aomod *****************
 10159 ;; Defined at:
 10160 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
 10161 ;; Parameters:    Size  Location     Type
 10162 ;;  dividend        8  [STACK] long long 
 10163 ;;  divisor         8  [STACK] long long 
 10164 ;; Auto vars:     Size  Location     Type
 10165 ;;  sign            1  [STACK] unsigned char 
 10166 ;;  counter         1  [STACK] unsigned char 
 10167 ;; Return value:  Size  Location     Type
 10168 ;;                  8  [STACK] long long 
 10169 ;; Registers used:
 10170 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 10171 ;; Tracked objects:
 10172 ;;		On entry : 0/1
 10173 ;;		On exit  : 0/0
 10174 ;;		Unchanged: 0/0
 10175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10180 ;;Total ram usage:        0 bytes
 10181 ;; Hardware stack levels used:    1
 10182 ;; Hardware stack levels required when called:    3
 10183 ;; This function calls:
 10184 ;;		Nothing
 10185 ;; This function is called by:
 10186 ;;		_dtoa
 10187 ;; This function uses a reentrant model
 10188 ;;
 10189                           
 10190                           	psect	text41
 10191  00436C                     __ptext41:
 10192                           	opt callstack 0
 10193  00436C                     ___aomod:
 10194                           	opt callstack 0
 10195                           
 10196                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 10197  00436C  52E6               	movf	postinc1,f,c
 10198  00436E  52E6               	movf	postinc1,f,c
 10199                           
 10200                           ;stkvar	_sign @ sp[(-2)+0]
 10201                           
 10202                           ;incstack = 0
 10203  004370  0EFE               	movlw	-2
 10204  004372  6AE3               	clrf	plusw1,c
 10205                           
 10206                           ;stkvar	_dividend @ sp[(-2)+-8]
 10207  004374  0EFD               	movlw	-3
 10208  004376  AEE3               	btfss	plusw1,7,c
 10209  004378  D028               	goto	l5299
 10210                           
 10211                           ;stkvar	_dividend @ sp[(-2)+-8]
 10212                           ;stkvar	_dividend @ sp[(-2)+-8]
 10213  00437A  0EF6               	movlw	-10
 10214  00437C  6CE3               	negf	plusw1,c
 10215  00437E  0EF7               	movlw	-9
 10216  004380  1EE3               	comf	plusw1,f,c
 10217  004382  0EF8               	movlw	-8
 10218  004384  1EE3               	comf	plusw1,f,c
 10219  004386  0EF9               	movlw	-7
 10220  004388  1EE3               	comf	plusw1,f,c
 10221  00438A  0EFA               	movlw	-6
 10222  00438C  1EE3               	comf	plusw1,f,c
 10223  00438E  0EFB               	movlw	-5
 10224  004390  1EE3               	comf	plusw1,f,c
 10225  004392  0EFC               	movlw	-4
 10226  004394  1EE3               	comf	plusw1,f,c
 10227  004396  0EFD               	movlw	-3
 10228  004398  1EE3               	comf	plusw1,f,c
 10229  00439A  E314               	bnc	u2520
 10230  00439C  0EF7               	movlw	-9
 10231  00439E  2AE3               	incf	plusw1,f,c
 10232  0043A0  E311               	bnc	u2520
 10233  0043A2  0EF8               	movlw	-8
 10234  0043A4  2AE3               	incf	plusw1,f,c
 10235  0043A6  E30E               	bnc	u2520
 10236  0043A8  0EF9               	movlw	-7
 10237  0043AA  2AE3               	incf	plusw1,f,c
 10238  0043AC  E30B               	bnc	u2520
 10239  0043AE  0EFA               	movlw	-6
 10240  0043B0  2AE3               	incf	plusw1,f,c
 10241  0043B2  E308               	bnc	u2520
 10242  0043B4  0EFB               	movlw	-5
 10243  0043B6  2AE3               	incf	plusw1,f,c
 10244  0043B8  E305               	bnc	u2520
 10245  0043BA  0EFC               	movlw	-4
 10246  0043BC  2AE3               	incf	plusw1,f,c
 10247  0043BE  E302               	bnc	u2520
 10248  0043C0  0EFD               	movlw	-3
 10249  0043C2  2AE3               	incf	plusw1,f,c
 10250  0043C4                     u2520:
 10251                           
 10252                           ;stkvar	_sign @ sp[(-2)+0]
 10253  0043C4  0EFE               	movlw	-2
 10254  0043C6  6AE3               	clrf	plusw1,c
 10255  0043C8  2AE3               	incf	plusw1,f,c
 10256  0043CA                     l5299:
 10257                           
 10258                           ;stkvar	_divisor @ sp[(-2)+-16]
 10259  0043CA  0EF5               	movlw	-11
 10260  0043CC  AEE3               	btfss	plusw1,7,c
 10261  0043CE  D025               	goto	u2540
 10262                           
 10263                           ;stkvar	_divisor @ sp[(-2)+-16]
 10264                           ;stkvar	_divisor @ sp[(-2)+-16]
 10265  0043D0  0EEE               	movlw	-18
 10266  0043D2  6CE3               	negf	plusw1,c
 10267  0043D4  0EEF               	movlw	-17
 10268  0043D6  1EE3               	comf	plusw1,f,c
 10269  0043D8  0EF0               	movlw	-16
 10270  0043DA  1EE3               	comf	plusw1,f,c
 10271  0043DC  0EF1               	movlw	-15
 10272  0043DE  1EE3               	comf	plusw1,f,c
 10273  0043E0  0EF2               	movlw	-14
 10274  0043E2  1EE3               	comf	plusw1,f,c
 10275  0043E4  0EF3               	movlw	-13
 10276  0043E6  1EE3               	comf	plusw1,f,c
 10277  0043E8  0EF4               	movlw	-12
 10278  0043EA  1EE3               	comf	plusw1,f,c
 10279  0043EC  0EF5               	movlw	-11
 10280  0043EE  1EE3               	comf	plusw1,f,c
 10281  0043F0  E314               	bnc	u2540
 10282  0043F2  0EEF               	movlw	-17
 10283  0043F4  2AE3               	incf	plusw1,f,c
 10284  0043F6  E311               	bnc	u2540
 10285  0043F8  0EF0               	movlw	-16
 10286  0043FA  2AE3               	incf	plusw1,f,c
 10287  0043FC  E30E               	bnc	u2540
 10288  0043FE  0EF1               	movlw	-15
 10289  004400  2AE3               	incf	plusw1,f,c
 10290  004402  E30B               	bnc	u2540
 10291  004404  0EF2               	movlw	-14
 10292  004406  2AE3               	incf	plusw1,f,c
 10293  004408  E308               	bnc	u2540
 10294  00440A  0EF3               	movlw	-13
 10295  00440C  2AE3               	incf	plusw1,f,c
 10296  00440E  E305               	bnc	u2540
 10297  004410  0EF4               	movlw	-12
 10298  004412  2AE3               	incf	plusw1,f,c
 10299  004414  E302               	bnc	u2540
 10300  004416  0EF5               	movlw	-11
 10301  004418  2AE3               	incf	plusw1,f,c
 10302  00441A                     u2540:
 10303                           
 10304                           ;stkvar	_divisor @ sp[(-2)+-16]
 10305  00441A  0EEE               	movlw	-18
 10306  00441C  50E3               	movf	plusw1,w,c
 10307  00441E  E116               	bnz	u2550
 10308  004420  0EEF               	movlw	-17
 10309  004422  50E3               	movf	plusw1,w,c
 10310  004424  E113               	bnz	u2550
 10311  004426  0EF0               	movlw	-16
 10312  004428  50E3               	movf	plusw1,w,c
 10313  00442A  E110               	bnz	u2550
 10314  00442C  0EF1               	movlw	-15
 10315  00442E  50E3               	movf	plusw1,w,c
 10316  004430  E10D               	bnz	u2550
 10317  004432  0EF2               	movlw	-14
 10318  004434  50E3               	movf	plusw1,w,c
 10319  004436  E10A               	bnz	u2550
 10320  004438  0EF3               	movlw	-13
 10321  00443A  50E3               	movf	plusw1,w,c
 10322  00443C  E107               	bnz	u2550
 10323  00443E  0EF4               	movlw	-12
 10324  004440  50E3               	movf	plusw1,w,c
 10325  004442  E104               	bnz	u2550
 10326  004444  0EF5               	movlw	-11
 10327  004446  50E3               	movf	plusw1,w,c
 10328  004448  B4D8               	btfsc	status,2,c
 10329  00444A  D075               	goto	u2580
 10330  00444C                     u2550:
 10331                           
 10332                           ;stkvar	_counter @ sp[(-2)+1]
 10333  00444C  0EFF               	movlw	-1
 10334  00444E  6AE3               	clrf	plusw1,c
 10335  004450  D012               	goto	L26
 10336  004452                     l5307:
 10337                           
 10338                           ;stkvar	_divisor @ sp[(-2)+-16]
 10339  004452  90D8               	bcf	status,0,c
 10340  004454  0EEE               	movlw	-18
 10341  004456  36E3               	rlcf	plusw1,f,c
 10342  004458  0EEF               	movlw	-17
 10343  00445A  36E3               	rlcf	plusw1,f,c
 10344  00445C  0EF0               	movlw	-16
 10345  00445E  36E3               	rlcf	plusw1,f,c
 10346  004460  0EF1               	movlw	-15
 10347  004462  36E3               	rlcf	plusw1,f,c
 10348  004464  0EF2               	movlw	-14
 10349  004466  36E3               	rlcf	plusw1,f,c
 10350  004468  0EF3               	movlw	-13
 10351  00446A  36E3               	rlcf	plusw1,f,c
 10352  00446C  0EF4               	movlw	-12
 10353  00446E  36E3               	rlcf	plusw1,f,c
 10354  004470  0EF5               	movlw	-11
 10355  004472  36E3               	rlcf	plusw1,f,c
 10356                           
 10357                           ;stkvar	_counter @ sp[(-2)+1]
 10358  004474  0EFF               	movlw	-1
 10359  004476                     L26:
 10360  004476  2AE3               	incf	plusw1,f,c
 10361                           
 10362                           ;stkvar	_divisor @ sp[(-2)+-16]
 10363  004478  0EF5               	movlw	-11
 10364  00447A  AEE3               	btfss	plusw1,7,c
 10365  00447C  D7EA               	goto	l5307
 10366  00447E                     u2560:
 10367                           
 10368                           ;stkvar	_divisor @ sp[(-2)+-16]
 10369                           ;stkvar	_dividend @ sp[(-2)+-8]
 10370  00447E  50E1               	movf	fsr1l,w,c
 10371  004480  0FF6               	addlw	-10
 10372  004482  6ED9               	movwf	fsr2l,c
 10373  004484  50E2               	movf	fsr1h,w,c
 10374  004486  6EDA               	movwf	fsr2h,c
 10375  004488  0EFF               	movlw	255
 10376  00448A  22DA               	addwfc	fsr2h,f,c
 10377  00448C  0EEE               	movlw	-18
 10378  00448E  50E3               	movf	plusw1,w,c
 10379  004490  5CDE               	subwf	postinc2,w,c
 10380  004492  0EEF               	movlw	-17
 10381  004494  50E3               	movf	plusw1,w,c
 10382  004496  58DE               	subwfb	postinc2,w,c
 10383  004498  0EF0               	movlw	-16
 10384  00449A  50E3               	movf	plusw1,w,c
 10385  00449C  58DE               	subwfb	postinc2,w,c
 10386  00449E  0EF1               	movlw	-15
 10387  0044A0  50E3               	movf	plusw1,w,c
 10388  0044A2  58DE               	subwfb	postinc2,w,c
 10389  0044A4  0EF2               	movlw	-14
 10390  0044A6  50E3               	movf	plusw1,w,c
 10391  0044A8  58DE               	subwfb	postinc2,w,c
 10392  0044AA  0EF3               	movlw	-13
 10393  0044AC  50E3               	movf	plusw1,w,c
 10394  0044AE  58DE               	subwfb	postinc2,w,c
 10395  0044B0  0EF4               	movlw	-12
 10396  0044B2  50E3               	movf	plusw1,w,c
 10397  0044B4  58DE               	subwfb	postinc2,w,c
 10398  0044B6  0EF5               	movlw	-11
 10399  0044B8  50E3               	movf	plusw1,w,c
 10400  0044BA  58DE               	subwfb	postinc2,w,c
 10401  0044BC  A0D8               	btfss	status,0,c
 10402  0044BE  D01F               	goto	l5315
 10403                           
 10404                           ;stkvar	_divisor @ sp[(-2)+-16]
 10405                           ;stkvar	_dividend @ sp[(-2)+-8]
 10406  0044C0  50E1               	movf	fsr1l,w,c
 10407  0044C2  0FF6               	addlw	-10
 10408  0044C4  6ED9               	movwf	fsr2l,c
 10409  0044C6  50E2               	movf	fsr1h,w,c
 10410  0044C8  6EDA               	movwf	fsr2h,c
 10411  0044CA  0EFF               	movlw	255
 10412  0044CC  22DA               	addwfc	fsr2h,f,c
 10413  0044CE  0EEE               	movlw	-18
 10414  0044D0  50E3               	movf	plusw1,w,c
 10415  0044D2  5EDE               	subwf	postinc2,f,c
 10416  0044D4  0EEF               	movlw	-17
 10417  0044D6  50E3               	movf	plusw1,w,c
 10418  0044D8  5ADE               	subwfb	postinc2,f,c
 10419  0044DA  0EF0               	movlw	-16
 10420  0044DC  50E3               	movf	plusw1,w,c
 10421  0044DE  5ADE               	subwfb	postinc2,f,c
 10422  0044E0  0EF1               	movlw	-15
 10423  0044E2  50E3               	movf	plusw1,w,c
 10424  0044E4  5ADE               	subwfb	postinc2,f,c
 10425  0044E6  0EF2               	movlw	-14
 10426  0044E8  50E3               	movf	plusw1,w,c
 10427  0044EA  5ADE               	subwfb	postinc2,f,c
 10428  0044EC  0EF3               	movlw	-13
 10429  0044EE  50E3               	movf	plusw1,w,c
 10430  0044F0  5ADE               	subwfb	postinc2,f,c
 10431  0044F2  0EF4               	movlw	-12
 10432  0044F4  50E3               	movf	plusw1,w,c
 10433  0044F6  5ADE               	subwfb	postinc2,f,c
 10434  0044F8  0EF5               	movlw	-11
 10435  0044FA  50E3               	movf	plusw1,w,c
 10436  0044FC  5ADE               	subwfb	postinc2,f,c
 10437  0044FE                     l5315:
 10438                           
 10439                           ;stkvar	_divisor @ sp[(-2)+-16]
 10440  0044FE  90D8               	bcf	status,0,c
 10441  004500  0EF5               	movlw	-11
 10442  004502  32E3               	rrcf	plusw1,f,c
 10443  004504  0EF4               	movlw	-12
 10444  004506  32E3               	rrcf	plusw1,f,c
 10445  004508  0EF3               	movlw	-13
 10446  00450A  32E3               	rrcf	plusw1,f,c
 10447  00450C  0EF2               	movlw	-14
 10448  00450E  32E3               	rrcf	plusw1,f,c
 10449  004510  0EF1               	movlw	-15
 10450  004512  32E3               	rrcf	plusw1,f,c
 10451  004514  0EF0               	movlw	-16
 10452  004516  32E3               	rrcf	plusw1,f,c
 10453  004518  0EEF               	movlw	-17
 10454  00451A  32E3               	rrcf	plusw1,f,c
 10455  00451C  0EEE               	movlw	-18
 10456  00451E  32E3               	rrcf	plusw1,f,c
 10457                           
 10458                           ;stkvar	_counter @ sp[(-2)+1]
 10459  004520  0EFF               	movlw	-1
 10460  004522  50E3               	movf	plusw1,w,c
 10461  004524  6E3B               	movwf	btemp,c
 10462  004526  0E01               	movlw	1
 10463  004528  5E3B               	subwf	btemp,f,c
 10464  00452A  0EFF               	movlw	-1
 10465  00452C  0060  F0EF  FFE3   	movff	btemp,plusw1
 10466  004532  A4D8               	btfss	status,2,c
 10467  004534  D7A4               	goto	u2560
 10468  004536                     u2580:
 10469                           
 10470                           ;stkvar	_sign @ sp[(-2)+0]
 10471  004536  0EFE               	movlw	-2
 10472  004538  50E3               	movf	plusw1,w,c
 10473  00453A  B4D8               	btfsc	status,2,c
 10474  00453C  D025               	goto	u2600
 10475                           
 10476                           ;stkvar	_dividend @ sp[(-2)+-8]
 10477                           ;stkvar	_dividend @ sp[(-2)+-8]
 10478  00453E  0EF6               	movlw	-10
 10479  004540  6CE3               	negf	plusw1,c
 10480  004542  0EF7               	movlw	-9
 10481  004544  1EE3               	comf	plusw1,f,c
 10482  004546  0EF8               	movlw	-8
 10483  004548  1EE3               	comf	plusw1,f,c
 10484  00454A  0EF9               	movlw	-7
 10485  00454C  1EE3               	comf	plusw1,f,c
 10486  00454E  0EFA               	movlw	-6
 10487  004550  1EE3               	comf	plusw1,f,c
 10488  004552  0EFB               	movlw	-5
 10489  004554  1EE3               	comf	plusw1,f,c
 10490  004556  0EFC               	movlw	-4
 10491  004558  1EE3               	comf	plusw1,f,c
 10492  00455A  0EFD               	movlw	-3
 10493  00455C  1EE3               	comf	plusw1,f,c
 10494  00455E  E314               	bnc	u2600
 10495  004560  0EF7               	movlw	-9
 10496  004562  2AE3               	incf	plusw1,f,c
 10497  004564  E311               	bnc	u2600
 10498  004566  0EF8               	movlw	-8
 10499  004568  2AE3               	incf	plusw1,f,c
 10500  00456A  E30E               	bnc	u2600
 10501  00456C  0EF9               	movlw	-7
 10502  00456E  2AE3               	incf	plusw1,f,c
 10503  004570  E30B               	bnc	u2600
 10504  004572  0EFA               	movlw	-6
 10505  004574  2AE3               	incf	plusw1,f,c
 10506  004576  E308               	bnc	u2600
 10507  004578  0EFB               	movlw	-5
 10508  00457A  2AE3               	incf	plusw1,f,c
 10509  00457C  E305               	bnc	u2600
 10510  00457E  0EFC               	movlw	-4
 10511  004580  2AE3               	incf	plusw1,f,c
 10512  004582  E302               	bnc	u2600
 10513  004584  0EFD               	movlw	-3
 10514  004586  2AE3               	incf	plusw1,f,c
 10515  004588                     u2600:
 10516                           
 10517                           ;stkvar	_dividend @ sp[(-2)+-8]
 10518  004588  0EF6               	movlw	246
 10519  00458A  24E1               	addwf	fsr1l,w,c
 10520  00458C  6ED9               	movwf	fsr2l,c
 10521  00458E  0EFF               	movlw	255
 10522  004590  20E2               	addwfc	fsr1h,w,c
 10523  004592  6EDA               	movwf	fsr2h,c
 10524                           
 10525                           ;stkvar	?___aomod @ sp[(-2)+-8]
 10526  004594  0E08               	movlw	8
 10527  004596  6E3B               	movwf	btemp,c
 10528  004598  0EF6               	movlw	-10
 10529  00459A                     us261999:
 10530  00459A  006F FF7B FFE3     	movff	postinc2,plusw1
 10531  0045A0  28E8               	incf	wreg,w,c
 10532  0045A2  2E3B               	decfsz	btemp,f,c
 10533  0045A4  D7FA               	bra	us261999
 10534                           
 10535                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 10536  0045A6  52E5               	movf	postdec1,f,c
 10537  0045A8  52E5               	movf	postdec1,f,c
 10538  0045AA  0012               	return		;funcret
 10539  0045AC                     __end_of___aomod:
 10540                           	opt callstack 0
 10541                           
 10542 ;; *************** function ___aodiv *****************
 10543 ;; Defined at:
 10544 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
 10545 ;; Parameters:    Size  Location     Type
 10546 ;;  dividend        8  [STACK] long long 
 10547 ;;  divisor         8  [STACK] long long 
 10548 ;; Auto vars:     Size  Location     Type
 10549 ;;  quotient        8  [STACK] long long 
 10550 ;;  sign            1  [STACK] unsigned char 
 10551 ;;  counter         1  [STACK] unsigned char 
 10552 ;; Return value:  Size  Location     Type
 10553 ;;                  8  [STACK] long long 
 10554 ;; Registers used:
 10555 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 10556 ;; Tracked objects:
 10557 ;;		On entry : 0/1
 10558 ;;		On exit  : 0/0
 10559 ;;		Unchanged: 0/0
 10560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10565 ;;Total ram usage:        0 bytes
 10566 ;; Hardware stack levels used:    1
 10567 ;; Hardware stack levels required when called:    3
 10568 ;; This function calls:
 10569 ;;		Nothing
 10570 ;; This function is called by:
 10571 ;;		_dtoa
 10572 ;; This function uses a reentrant model
 10573 ;;
 10574                           
 10575                           	psect	text42
 10576  003C44                     __ptext42:
 10577                           	opt callstack 0
 10578  003C44                     ___aodiv:
 10579                           	opt callstack 0
 10580                           
 10581                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 10582  003C44  0E0A               	movlw	10
 10583  003C46  26E1               	addwf	fsr1l,f,c
 10584  003C48  0E00               	movlw	0
 10585  003C4A  22E2               	addwfc	fsr1h,f,c
 10586                           
 10587                           ;stkvar	_sign @ sp[(-10)+8]
 10588                           
 10589                           ;incstack = 0
 10590  003C4C  0EFE               	movlw	-2
 10591  003C4E  6AE3               	clrf	plusw1,c
 10592                           
 10593                           ;stkvar	_divisor @ sp[(-10)+-16]
 10594  003C50  0EED               	movlw	-19
 10595  003C52  AEE3               	btfss	plusw1,7,c
 10596  003C54  D028               	goto	l5255
 10597                           
 10598                           ;stkvar	_divisor @ sp[(-10)+-16]
 10599                           ;stkvar	_divisor @ sp[(-10)+-16]
 10600  003C56  0EE6               	movlw	-26
 10601  003C58  6CE3               	negf	plusw1,c
 10602  003C5A  0EE7               	movlw	-25
 10603  003C5C  1EE3               	comf	plusw1,f,c
 10604  003C5E  0EE8               	movlw	-24
 10605  003C60  1EE3               	comf	plusw1,f,c
 10606  003C62  0EE9               	movlw	-23
 10607  003C64  1EE3               	comf	plusw1,f,c
 10608  003C66  0EEA               	movlw	-22
 10609  003C68  1EE3               	comf	plusw1,f,c
 10610  003C6A  0EEB               	movlw	-21
 10611  003C6C  1EE3               	comf	plusw1,f,c
 10612  003C6E  0EEC               	movlw	-20
 10613  003C70  1EE3               	comf	plusw1,f,c
 10614  003C72  0EED               	movlw	-19
 10615  003C74  1EE3               	comf	plusw1,f,c
 10616  003C76  E314               	bnc	u2400
 10617  003C78  0EE7               	movlw	-25
 10618  003C7A  2AE3               	incf	plusw1,f,c
 10619  003C7C  E311               	bnc	u2400
 10620  003C7E  0EE8               	movlw	-24
 10621  003C80  2AE3               	incf	plusw1,f,c
 10622  003C82  E30E               	bnc	u2400
 10623  003C84  0EE9               	movlw	-23
 10624  003C86  2AE3               	incf	plusw1,f,c
 10625  003C88  E30B               	bnc	u2400
 10626  003C8A  0EEA               	movlw	-22
 10627  003C8C  2AE3               	incf	plusw1,f,c
 10628  003C8E  E308               	bnc	u2400
 10629  003C90  0EEB               	movlw	-21
 10630  003C92  2AE3               	incf	plusw1,f,c
 10631  003C94  E305               	bnc	u2400
 10632  003C96  0EEC               	movlw	-20
 10633  003C98  2AE3               	incf	plusw1,f,c
 10634  003C9A  E302               	bnc	u2400
 10635  003C9C  0EED               	movlw	-19
 10636  003C9E  2AE3               	incf	plusw1,f,c
 10637  003CA0                     u2400:
 10638                           
 10639                           ;stkvar	_sign @ sp[(-10)+8]
 10640  003CA0  0EFE               	movlw	-2
 10641  003CA2  6AE3               	clrf	plusw1,c
 10642  003CA4  2AE3               	incf	plusw1,f,c
 10643  003CA6                     l5255:
 10644                           
 10645                           ;stkvar	_dividend @ sp[(-10)+-8]
 10646  003CA6  0EF5               	movlw	-11
 10647  003CA8  AEE3               	btfss	plusw1,7,c
 10648  003CAA  D027               	goto	l5261
 10649                           
 10650                           ;stkvar	_dividend @ sp[(-10)+-8]
 10651                           ;stkvar	_dividend @ sp[(-10)+-8]
 10652  003CAC  0EEE               	movlw	-18
 10653  003CAE  6CE3               	negf	plusw1,c
 10654  003CB0  0EEF               	movlw	-17
 10655  003CB2  1EE3               	comf	plusw1,f,c
 10656  003CB4  0EF0               	movlw	-16
 10657  003CB6  1EE3               	comf	plusw1,f,c
 10658  003CB8  0EF1               	movlw	-15
 10659  003CBA  1EE3               	comf	plusw1,f,c
 10660  003CBC  0EF2               	movlw	-14
 10661  003CBE  1EE3               	comf	plusw1,f,c
 10662  003CC0  0EF3               	movlw	-13
 10663  003CC2  1EE3               	comf	plusw1,f,c
 10664  003CC4  0EF4               	movlw	-12
 10665  003CC6  1EE3               	comf	plusw1,f,c
 10666  003CC8  0EF5               	movlw	-11
 10667  003CCA  1EE3               	comf	plusw1,f,c
 10668  003CCC  E314               	bnc	u2420
 10669  003CCE  0EEF               	movlw	-17
 10670  003CD0  2AE3               	incf	plusw1,f,c
 10671  003CD2  E311               	bnc	u2420
 10672  003CD4  0EF0               	movlw	-16
 10673  003CD6  2AE3               	incf	plusw1,f,c
 10674  003CD8  E30E               	bnc	u2420
 10675  003CDA  0EF1               	movlw	-15
 10676  003CDC  2AE3               	incf	plusw1,f,c
 10677  003CDE  E30B               	bnc	u2420
 10678  003CE0  0EF2               	movlw	-14
 10679  003CE2  2AE3               	incf	plusw1,f,c
 10680  003CE4  E308               	bnc	u2420
 10681  003CE6  0EF3               	movlw	-13
 10682  003CE8  2AE3               	incf	plusw1,f,c
 10683  003CEA  E305               	bnc	u2420
 10684  003CEC  0EF4               	movlw	-12
 10685  003CEE  2AE3               	incf	plusw1,f,c
 10686  003CF0  E302               	bnc	u2420
 10687  003CF2  0EF5               	movlw	-11
 10688  003CF4  2AE3               	incf	plusw1,f,c
 10689  003CF6                     u2420:
 10690                           
 10691                           ;stkvar	_sign @ sp[(-10)+8]
 10692  003CF6  0EFE               	movlw	-2
 10693  003CF8  70E3               	btg	plusw1,0,c
 10694  003CFA                     l5261:
 10695                           
 10696                           ;stkvar	_quotient @ sp[(-10)+0]
 10697  003CFA  0E07               	movlw	7
 10698  003CFC  6E3B               	movwf	btemp,c
 10699  003CFE  0EF6               	movlw	-10
 10700  003D00                     u2431:
 10701  003D00  6AE3               	clrf	plusw1,c
 10702  003D02  2AE8               	incf	wreg,f,c
 10703  003D04  063B               	decf	btemp,f,c
 10704  003D06  E2FC               	bc	u2431
 10705                           
 10706                           ;stkvar	_divisor @ sp[(-10)+-16]
 10707  003D08  0EE6               	movlw	-26
 10708  003D0A  50E3               	movf	plusw1,w,c
 10709  003D0C  E116               	bnz	u2440
 10710  003D0E  0EE7               	movlw	-25
 10711  003D10  50E3               	movf	plusw1,w,c
 10712  003D12  E113               	bnz	u2440
 10713  003D14  0EE8               	movlw	-24
 10714  003D16  50E3               	movf	plusw1,w,c
 10715  003D18  E110               	bnz	u2440
 10716  003D1A  0EE9               	movlw	-23
 10717  003D1C  50E3               	movf	plusw1,w,c
 10718  003D1E  E10D               	bnz	u2440
 10719  003D20  0EEA               	movlw	-22
 10720  003D22  50E3               	movf	plusw1,w,c
 10721  003D24  E10A               	bnz	u2440
 10722  003D26  0EEB               	movlw	-21
 10723  003D28  50E3               	movf	plusw1,w,c
 10724  003D2A  E107               	bnz	u2440
 10725  003D2C  0EEC               	movlw	-20
 10726  003D2E  50E3               	movf	plusw1,w,c
 10727  003D30  E104               	bnz	u2440
 10728  003D32  0EED               	movlw	-19
 10729  003D34  50E3               	movf	plusw1,w,c
 10730  003D36  B4D8               	btfsc	status,2,c
 10731  003D38  D088               	goto	u2470
 10732  003D3A                     u2440:
 10733                           
 10734                           ;stkvar	_counter @ sp[(-10)+9]
 10735  003D3A  0EFF               	movlw	-1
 10736  003D3C  6AE3               	clrf	plusw1,c
 10737  003D3E  D012               	goto	L27
 10738  003D40                     l5267:
 10739                           
 10740                           ;stkvar	_divisor @ sp[(-10)+-16]
 10741  003D40  90D8               	bcf	status,0,c
 10742  003D42  0EE6               	movlw	-26
 10743  003D44  36E3               	rlcf	plusw1,f,c
 10744  003D46  0EE7               	movlw	-25
 10745  003D48  36E3               	rlcf	plusw1,f,c
 10746  003D4A  0EE8               	movlw	-24
 10747  003D4C  36E3               	rlcf	plusw1,f,c
 10748  003D4E  0EE9               	movlw	-23
 10749  003D50  36E3               	rlcf	plusw1,f,c
 10750  003D52  0EEA               	movlw	-22
 10751  003D54  36E3               	rlcf	plusw1,f,c
 10752  003D56  0EEB               	movlw	-21
 10753  003D58  36E3               	rlcf	plusw1,f,c
 10754  003D5A  0EEC               	movlw	-20
 10755  003D5C  36E3               	rlcf	plusw1,f,c
 10756  003D5E  0EED               	movlw	-19
 10757  003D60  36E3               	rlcf	plusw1,f,c
 10758                           
 10759                           ;stkvar	_counter @ sp[(-10)+9]
 10760  003D62  0EFF               	movlw	-1
 10761  003D64                     L27:
 10762  003D64  2AE3               	incf	plusw1,f,c
 10763                           
 10764                           ;stkvar	_divisor @ sp[(-10)+-16]
 10765  003D66  0EED               	movlw	-19
 10766  003D68  AEE3               	btfss	plusw1,7,c
 10767  003D6A  D7EA               	goto	l5267
 10768  003D6C                     u2450:
 10769                           
 10770                           ;stkvar	_quotient @ sp[(-10)+0]
 10771  003D6C  90D8               	bcf	status,0,c
 10772  003D6E  0EF6               	movlw	-10
 10773  003D70  36E3               	rlcf	plusw1,f,c
 10774  003D72  0EF7               	movlw	-9
 10775  003D74  36E3               	rlcf	plusw1,f,c
 10776  003D76  0EF8               	movlw	-8
 10777  003D78  36E3               	rlcf	plusw1,f,c
 10778  003D7A  0EF9               	movlw	-7
 10779  003D7C  36E3               	rlcf	plusw1,f,c
 10780  003D7E  0EFA               	movlw	-6
 10781  003D80  36E3               	rlcf	plusw1,f,c
 10782  003D82  0EFB               	movlw	-5
 10783  003D84  36E3               	rlcf	plusw1,f,c
 10784  003D86  0EFC               	movlw	-4
 10785  003D88  36E3               	rlcf	plusw1,f,c
 10786  003D8A  0EFD               	movlw	-3
 10787  003D8C  36E3               	rlcf	plusw1,f,c
 10788                           
 10789                           ;stkvar	_divisor @ sp[(-10)+-16]
 10790                           ;stkvar	_dividend @ sp[(-10)+-8]
 10791  003D8E  50E1               	movf	fsr1l,w,c
 10792  003D90  0FEE               	addlw	-18
 10793  003D92  6ED9               	movwf	fsr2l,c
 10794  003D94  50E2               	movf	fsr1h,w,c
 10795  003D96  6EDA               	movwf	fsr2h,c
 10796  003D98  0EFF               	movlw	255
 10797  003D9A  22DA               	addwfc	fsr2h,f,c
 10798  003D9C  0EE6               	movlw	-26
 10799  003D9E  50E3               	movf	plusw1,w,c
 10800  003DA0  5CDE               	subwf	postinc2,w,c
 10801  003DA2  0EE7               	movlw	-25
 10802  003DA4  50E3               	movf	plusw1,w,c
 10803  003DA6  58DE               	subwfb	postinc2,w,c
 10804  003DA8  0EE8               	movlw	-24
 10805  003DAA  50E3               	movf	plusw1,w,c
 10806  003DAC  58DE               	subwfb	postinc2,w,c
 10807  003DAE  0EE9               	movlw	-23
 10808  003DB0  50E3               	movf	plusw1,w,c
 10809  003DB2  58DE               	subwfb	postinc2,w,c
 10810  003DB4  0EEA               	movlw	-22
 10811  003DB6  50E3               	movf	plusw1,w,c
 10812  003DB8  58DE               	subwfb	postinc2,w,c
 10813  003DBA  0EEB               	movlw	-21
 10814  003DBC  50E3               	movf	plusw1,w,c
 10815  003DBE  58DE               	subwfb	postinc2,w,c
 10816  003DC0  0EEC               	movlw	-20
 10817  003DC2  50E3               	movf	plusw1,w,c
 10818  003DC4  58DE               	subwfb	postinc2,w,c
 10819  003DC6  0EED               	movlw	-19
 10820  003DC8  50E3               	movf	plusw1,w,c
 10821  003DCA  58DE               	subwfb	postinc2,w,c
 10822  003DCC  A0D8               	btfss	status,0,c
 10823  003DCE  D021               	goto	l5279
 10824                           
 10825                           ;stkvar	_divisor @ sp[(-10)+-16]
 10826                           ;stkvar	_dividend @ sp[(-10)+-8]
 10827  003DD0  50E1               	movf	fsr1l,w,c
 10828  003DD2  0FEE               	addlw	-18
 10829  003DD4  6ED9               	movwf	fsr2l,c
 10830  003DD6  50E2               	movf	fsr1h,w,c
 10831  003DD8  6EDA               	movwf	fsr2h,c
 10832  003DDA  0EFF               	movlw	255
 10833  003DDC  22DA               	addwfc	fsr2h,f,c
 10834  003DDE  0EE6               	movlw	-26
 10835  003DE0  50E3               	movf	plusw1,w,c
 10836  003DE2  5EDE               	subwf	postinc2,f,c
 10837  003DE4  0EE7               	movlw	-25
 10838  003DE6  50E3               	movf	plusw1,w,c
 10839  003DE8  5ADE               	subwfb	postinc2,f,c
 10840  003DEA  0EE8               	movlw	-24
 10841  003DEC  50E3               	movf	plusw1,w,c
 10842  003DEE  5ADE               	subwfb	postinc2,f,c
 10843  003DF0  0EE9               	movlw	-23
 10844  003DF2  50E3               	movf	plusw1,w,c
 10845  003DF4  5ADE               	subwfb	postinc2,f,c
 10846  003DF6  0EEA               	movlw	-22
 10847  003DF8  50E3               	movf	plusw1,w,c
 10848  003DFA  5ADE               	subwfb	postinc2,f,c
 10849  003DFC  0EEB               	movlw	-21
 10850  003DFE  50E3               	movf	plusw1,w,c
 10851  003E00  5ADE               	subwfb	postinc2,f,c
 10852  003E02  0EEC               	movlw	-20
 10853  003E04  50E3               	movf	plusw1,w,c
 10854  003E06  5ADE               	subwfb	postinc2,f,c
 10855  003E08  0EED               	movlw	-19
 10856  003E0A  50E3               	movf	plusw1,w,c
 10857  003E0C  5ADE               	subwfb	postinc2,f,c
 10858                           
 10859                           ;stkvar	_quotient @ sp[(-10)+0]
 10860  003E0E  0EF6               	movlw	-10
 10861  003E10  80E3               	bsf	plusw1,0,c
 10862  003E12                     l5279:
 10863                           
 10864                           ;stkvar	_divisor @ sp[(-10)+-16]
 10865  003E12  90D8               	bcf	status,0,c
 10866  003E14  0EED               	movlw	-19
 10867  003E16  32E3               	rrcf	plusw1,f,c
 10868  003E18  0EEC               	movlw	-20
 10869  003E1A  32E3               	rrcf	plusw1,f,c
 10870  003E1C  0EEB               	movlw	-21
 10871  003E1E  32E3               	rrcf	plusw1,f,c
 10872  003E20  0EEA               	movlw	-22
 10873  003E22  32E3               	rrcf	plusw1,f,c
 10874  003E24  0EE9               	movlw	-23
 10875  003E26  32E3               	rrcf	plusw1,f,c
 10876  003E28  0EE8               	movlw	-24
 10877  003E2A  32E3               	rrcf	plusw1,f,c
 10878  003E2C  0EE7               	movlw	-25
 10879  003E2E  32E3               	rrcf	plusw1,f,c
 10880  003E30  0EE6               	movlw	-26
 10881  003E32  32E3               	rrcf	plusw1,f,c
 10882                           
 10883                           ;stkvar	_counter @ sp[(-10)+9]
 10884  003E34  0EFF               	movlw	-1
 10885  003E36  50E3               	movf	plusw1,w,c
 10886  003E38  6E3B               	movwf	btemp,c
 10887  003E3A  0E01               	movlw	1
 10888  003E3C  5E3B               	subwf	btemp,f,c
 10889  003E3E  0EFF               	movlw	-1
 10890  003E40  0060  F0EF  FFE3   	movff	btemp,plusw1
 10891  003E46  A4D8               	btfss	status,2,c
 10892  003E48  D791               	goto	u2450
 10893  003E4A                     u2470:
 10894                           
 10895                           ;stkvar	_sign @ sp[(-10)+8]
 10896  003E4A  0EFE               	movlw	-2
 10897  003E4C  50E3               	movf	plusw1,w,c
 10898  003E4E  B4D8               	btfsc	status,2,c
 10899  003E50  D025               	goto	u2490
 10900                           
 10901                           ;stkvar	_quotient @ sp[(-10)+0]
 10902                           ;stkvar	_quotient @ sp[(-10)+0]
 10903  003E52  0EF6               	movlw	-10
 10904  003E54  6CE3               	negf	plusw1,c
 10905  003E56  0EF7               	movlw	-9
 10906  003E58  1EE3               	comf	plusw1,f,c
 10907  003E5A  0EF8               	movlw	-8
 10908  003E5C  1EE3               	comf	plusw1,f,c
 10909  003E5E  0EF9               	movlw	-7
 10910  003E60  1EE3               	comf	plusw1,f,c
 10911  003E62  0EFA               	movlw	-6
 10912  003E64  1EE3               	comf	plusw1,f,c
 10913  003E66  0EFB               	movlw	-5
 10914  003E68  1EE3               	comf	plusw1,f,c
 10915  003E6A  0EFC               	movlw	-4
 10916  003E6C  1EE3               	comf	plusw1,f,c
 10917  003E6E  0EFD               	movlw	-3
 10918  003E70  1EE3               	comf	plusw1,f,c
 10919  003E72  E314               	bnc	u2490
 10920  003E74  0EF7               	movlw	-9
 10921  003E76  2AE3               	incf	plusw1,f,c
 10922  003E78  E311               	bnc	u2490
 10923  003E7A  0EF8               	movlw	-8
 10924  003E7C  2AE3               	incf	plusw1,f,c
 10925  003E7E  E30E               	bnc	u2490
 10926  003E80  0EF9               	movlw	-7
 10927  003E82  2AE3               	incf	plusw1,f,c
 10928  003E84  E30B               	bnc	u2490
 10929  003E86  0EFA               	movlw	-6
 10930  003E88  2AE3               	incf	plusw1,f,c
 10931  003E8A  E308               	bnc	u2490
 10932  003E8C  0EFB               	movlw	-5
 10933  003E8E  2AE3               	incf	plusw1,f,c
 10934  003E90  E305               	bnc	u2490
 10935  003E92  0EFC               	movlw	-4
 10936  003E94  2AE3               	incf	plusw1,f,c
 10937  003E96  E302               	bnc	u2490
 10938  003E98  0EFD               	movlw	-3
 10939  003E9A  2AE3               	incf	plusw1,f,c
 10940  003E9C                     u2490:
 10941                           
 10942                           ;stkvar	_quotient @ sp[(-10)+0]
 10943  003E9C  0EF6               	movlw	246
 10944  003E9E  24E1               	addwf	fsr1l,w,c
 10945  003EA0  6ED9               	movwf	fsr2l,c
 10946  003EA2  0EFF               	movlw	255
 10947  003EA4  20E2               	addwfc	fsr1h,w,c
 10948  003EA6  6EDA               	movwf	fsr2h,c
 10949                           
 10950                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 10951  003EA8  0E08               	movlw	8
 10952  003EAA  6E3B               	movwf	btemp,c
 10953  003EAC  0EEE               	movlw	-18
 10954  003EAE                     us250999:
 10955  003EAE  006F FF7B FFE3     	movff	postinc2,plusw1
 10956  003EB4  28E8               	incf	wreg,w,c
 10957  003EB6  2E3B               	decfsz	btemp,f,c
 10958  003EB8  D7FA               	bra	us250999
 10959                           
 10960                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 10961  003EBA  0EF6               	movlw	246
 10962  003EBC  26E1               	addwf	fsr1l,f,c
 10963  003EBE  0EFF               	movlw	255
 10964  003EC0  22E2               	addwfc	fsr1h,f,c
 10965  003EC2  0012               	return		;funcret
 10966  003EC4                     __end_of___aodiv:
 10967                           	opt callstack 0
 10968                           
 10969 ;; *************** function _ctoa *****************
 10970 ;; Defined at:
 10971 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 10972 ;; Parameters:    Size  Location     Type
 10973 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10974 ;;		 -> f(5), NULL(0), 
 10975 ;;  c               1  [STACK] unsigned char 
 10976 ;; Auto vars:     Size  Location     Type
 10977 ;;  w               2  [STACK] int 
 10978 ;;  l               2    0        int 
 10979 ;; Return value:  Size  Location     Type
 10980 ;;                  2  [STACK] int 
 10981 ;; Registers used:
 10982 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 10983 ;; Tracked objects:
 10984 ;;		On entry : 0/0
 10985 ;;		On exit  : 0/0
 10986 ;;		Unchanged: 0/0
 10987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10992 ;;Total ram usage:        0 bytes
 10993 ;; Hardware stack levels used:    1
 10994 ;; Hardware stack levels required when called:    8
 10995 ;; This function calls:
 10996 ;;		_pad
 10997 ;; This function is called by:
 10998 ;;		_vfpfcnvrt
 10999 ;; This function uses a reentrant model
 11000 ;;
 11001                           
 11002                           	psect	text43
 11003  005366                     __ptext43:
 11004                           	opt callstack 0
 11005  005366                     _ctoa:
 11006                           	opt callstack 0
 11007                           
 11008                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11009  005366  52E6               	movf	postinc1,f,c
 11010  005368  52E6               	movf	postinc1,f,c
 11011                           
 11012                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 11013                           
 11014                           ;incstack = 0
 11015  00536A  5020               	movf	_width,w,c
 11016  00536C  1021               	iorwf	_width+1,w,c
 11017  00536E  A4D8               	btfss	status,2,c
 11018  005370  D009               	goto	l7483
 11019                           
 11020                           ;stkvar	_w @ sp[(-2)+0]
 11021  005372  0EFE               	movlw	-2
 11022  005374  0060  F083  FFE3   	movff	_width,plusw1
 11023  00537A  0EFF               	movlw	-1
 11024  00537C  0060  F087  FFE3   	movff	_width+1,plusw1
 11025  005382  D016               	goto	l7485
 11026  005384                     l7483:
 11027  005384  0EFF               	movlw	255
 11028  005386  6E45               	movwf	btemp+10,c
 11029  005388  0EFF               	movlw	255
 11030  00538A  6E46               	movwf	btemp+11,c
 11031  00538C  0060  F080  F043   	movff	_width,btemp+8
 11032  005392  0060  F084  F044   	movff	_width+1,btemp+9
 11033  005398  5045               	movf	btemp+10,w,c
 11034  00539A  2643               	addwf	btemp+8,f,c
 11035  00539C  5046               	movf	btemp+11,w,c
 11036  00539E  2244               	addwfc	btemp+9,f,c
 11037                           
 11038                           ;stkvar	_w @ sp[(-2)+0]
 11039  0053A0  0EFE               	movlw	-2
 11040  0053A2  0060  F10F  FFE3   	movff	btemp+8,plusw1
 11041  0053A8  0EFF               	movlw	-1
 11042  0053AA  0060  F113  FFE3   	movff	btemp+9,plusw1
 11043  0053B0                     l7485:
 11044                           
 11045                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 11046                           ;stkvar	_c @ sp[(-2)+-3]
 11047  0053B0  0EFB               	movlw	-5
 11048  0053B2  006F FF8C  F1AF    	movff	plusw1,_dbuf
 11049                           
 11050                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 11051  0053B8  0101               	movlb	1	; () banked
 11052  0053BA  6BB0               	clrf	(_dbuf+1)& (0+255),b
 11053                           
 11054                           ; BSR set to: 1
 11055                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 11056                           ;stkvar	_w @ sp[(-2)+0]
 11057  0053BC  0EFE               	movlw	-2
 11058  0053BE  006F FF8F FFE6     	movff	plusw1,postinc1
 11059  0053C4  006F FF8F FFE6     	movff	plusw1,postinc1
 11060  0053CA  0EAF               	movlw	low _dbuf
 11061  0053CC  6EE6               	movwf	postinc1,c
 11062  0053CE  0E01               	movlw	high _dbuf
 11063  0053D0  6EE6               	movwf	postinc1,c
 11064                           
 11065                           ;stkvar	_fp @ sp[(-6)+-2]
 11066  0053D2  0EF8               	movlw	-8
 11067  0053D4  006F FF8F FFE6     	movff	plusw1,postinc1
 11068  0053DA  006F FF8F FFE6     	movff	plusw1,postinc1
 11069  0053E0  EC80  F024         	call	_pad	;wreg free
 11070                           
 11071                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 11072  0053E4  0EFB               	movlw	251
 11073  0053E6  26E1               	addwf	fsr1l,f,c
 11074  0053E8  0EFF               	movlw	255
 11075  0053EA  22E2               	addwfc	fsr1h,f,c
 11076  0053EC  0012               	return		;funcret
 11077  0053EE                     __end_of_ctoa:
 11078                           	opt callstack 0
 11079                           
 11080 ;; *************** function _pad *****************
 11081 ;; Defined at:
 11082 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 11083 ;; Parameters:    Size  Location     Type
 11084 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11085 ;;		 -> f(5), NULL(0), 
 11086 ;;  buf             2  [STACK] PTR unsigned char 
 11087 ;;		 -> dbuf(32), 
 11088 ;;  p               2  [STACK] int 
 11089 ;; Auto vars:     Size  Location     Type
 11090 ;;  w               2  [STACK] int 
 11091 ;;  i               2  [STACK] int 
 11092 ;; Return value:  Size  Location     Type
 11093 ;;                  2  [STACK] int 
 11094 ;; Registers used:
 11095 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 11096 ;; Tracked objects:
 11097 ;;		On entry : 0/1
 11098 ;;		On exit  : 0/0
 11099 ;;		Unchanged: 0/0
 11100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11105 ;;Total ram usage:        0 bytes
 11106 ;; Hardware stack levels used:    1
 11107 ;; Hardware stack levels required when called:    7
 11108 ;; This function calls:
 11109 ;;		_fputc
 11110 ;;		_fputs
 11111 ;;		_strlen
 11112 ;; This function is called by:
 11113 ;;		_ctoa
 11114 ;;		_dtoa
 11115 ;; This function uses a reentrant model
 11116 ;;
 11117                           
 11118                           	psect	text44
 11119  004900                     __ptext44:
 11120                           	opt callstack 0
 11121  004900                     _pad:
 11122                           	opt callstack 0
 11123                           
 11124                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11125  004900  52E6               	movf	postinc1,f,c
 11126  004902  52E6               	movf	postinc1,f,c
 11127  004904  52E6               	movf	postinc1,f,c
 11128  004906  52E6               	movf	postinc1,f,c
 11129                           
 11130                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 11131                           
 11132                           ;incstack = 0
 11133  004908  A024               	btfss	_flags,0,c
 11134  00490A  D010               	goto	l7461
 11135                           
 11136                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 11137                           ;stkvar	_fp @ sp[(-4)+-2]
 11138  00490C  0EFA               	movlw	-6
 11139  00490E  006F FF8F FFE6     	movff	plusw1,postinc1
 11140  004914  006F FF8F FFE6     	movff	plusw1,postinc1
 11141                           
 11142                           ;stkvar	_buf @ sp[(-6)+-4]
 11143  00491A  0EF6               	movlw	-10
 11144  00491C  006F FF8F FFE6     	movff	plusw1,postinc1
 11145  004922  006F FF8F FFE6     	movff	plusw1,postinc1
 11146  004928  EC1E  F029         	call	_fputs	;wreg free
 11147  00492C                     l7461:
 11148                           
 11149                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 11150                           ;stkvar	_p @ sp[(-4)+-6]
 11151  00492C  0EF7               	movlw	-9
 11152  00492E  BEE3               	btfsc	plusw1,7,c
 11153  004930  D011               	goto	l7465
 11154                           
 11155                           ;stkvar	_p @ sp[(-4)+-6]
 11156                           ;stkvar	_w @ sp[(-4)+0]
 11157  004932  0EF6               	movlw	-10
 11158  004934  006F FF8C  F03B    	movff	plusw1,btemp
 11159  00493A  0EFC               	movlw	-4
 11160  00493C  0060  F0EF  FFE3   	movff	btemp,plusw1
 11161  004942  0EF7               	movlw	-9
 11162  004944  006F FF8C  F03B    	movff	plusw1,btemp
 11163  00494A  0EFD               	movlw	-3
 11164  00494C  0060  F0EF  FFE3   	movff	btemp,plusw1
 11165  004952  D004               	goto	l1757
 11166  004954                     l7465:
 11167                           
 11168                           ;stkvar	_w @ sp[(-4)+0]
 11169  004954  0EFC               	movlw	-4
 11170  004956  6AE3               	clrf	plusw1,c
 11171  004958  0EFD               	movlw	-3
 11172  00495A  6AE3               	clrf	plusw1,c
 11173  00495C                     l1757:
 11174                           
 11175                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 11176                           ;stkvar	_i @ sp[(-4)+2]
 11177  00495C  0EFE               	movlw	-2
 11178  00495E  6AE3               	clrf	plusw1,c
 11179  004960  0EFF               	movlw	-1
 11180  004962  6AE3               	clrf	plusw1,c
 11181                           
 11182                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 11183  004964  D01E               	goto	l7471
 11184  004966                     l7467:
 11185                           
 11186                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 11187                           ;stkvar	_fp @ sp[(-4)+-2]
 11188  004966  0EFA               	movlw	-6
 11189  004968  006F FF8F FFE6     	movff	plusw1,postinc1
 11190  00496E  006F FF8F FFE6     	movff	plusw1,postinc1
 11191  004974  0E20               	movlw	32
 11192  004976  6EE6               	movwf	postinc1,c
 11193  004978  0E00               	movlw	0
 11194  00497A  6EE6               	movwf	postinc1,c
 11195  00497C  EC0A  F025         	call	_fputc	;wreg free
 11196                           
 11197                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
 11198                           ;stkvar	_i @ sp[(-4)+2]
 11199  004980  0EFE               	movlw	-2
 11200  004982  50E3               	movf	plusw1,w,c
 11201  004984  0F01               	addlw	1
 11202  004986  6E3B               	movwf	btemp,c
 11203  004988  0EFE               	movlw	-2
 11204  00498A  0060  F0EF  FFE3   	movff	btemp,plusw1
 11205  004990  6A3B               	clrf	btemp,c
 11206  004992  0EFF               	movlw	-1
 11207  004994  50E3               	movf	plusw1,w,c
 11208  004996  203B               	addwfc	btemp,w,c
 11209  004998  6E3B               	movwf	btemp,c
 11210  00499A  0EFF               	movlw	-1
 11211  00499C  0060  F0EF  FFE3   	movff	btemp,plusw1
 11212  0049A2                     l7471:
 11213                           
 11214                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 11215                           ;stkvar	_w @ sp[(-4)+0]
 11216                           ;stkvar	_i @ sp[(-4)+2]
 11217  0049A2  50E1               	movf	fsr1l,w,c
 11218  0049A4  0FFE               	addlw	-2
 11219  0049A6  6ED9               	movwf	fsr2l,c
 11220  0049A8  50E2               	movf	fsr1h,w,c
 11221  0049AA  6EDA               	movwf	fsr2h,c
 11222  0049AC  0EFF               	movlw	255
 11223  0049AE  22DA               	addwfc	fsr2h,f,c
 11224  0049B0  0EFC               	movlw	-4
 11225  0049B2  50E3               	movf	plusw1,w,c
 11226  0049B4  5CDE               	subwf	postinc2,w,c
 11227  0049B6  50DE               	movf	postinc2,w,c
 11228  0049B8  0A80               	xorlw	128
 11229  0049BA  6E3B               	movwf	btemp,c
 11230  0049BC  0EFD               	movlw	-3
 11231  0049BE  50E3               	movf	plusw1,w,c
 11232  0049C0  0A80               	xorlw	128
 11233  0049C2  583B               	subwfb	btemp,w,c
 11234  0049C4  A0D8               	btfss	status,0,c
 11235  0049C6  D7CF               	goto	l7467
 11236                           
 11237                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 11238  0049C8  B024               	btfsc	_flags,0,c
 11239  0049CA  D010               	goto	l7475
 11240                           
 11241                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 11242                           ;stkvar	_fp @ sp[(-4)+-2]
 11243  0049CC  0EFA               	movlw	-6
 11244  0049CE  006F FF8F FFE6     	movff	plusw1,postinc1
 11245  0049D4  006F FF8F FFE6     	movff	plusw1,postinc1
 11246                           
 11247                           ;stkvar	_buf @ sp[(-6)+-4]
 11248  0049DA  0EF6               	movlw	-10
 11249  0049DC  006F FF8F FFE6     	movff	plusw1,postinc1
 11250  0049E2  006F FF8F FFE6     	movff	plusw1,postinc1
 11251  0049E8  EC1E  F029         	call	_fputs	;wreg free
 11252  0049EC                     l7475:
 11253                           
 11254                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 11255                           ;stkvar	_w @ sp[(-4)+0]
 11256                           ;stkvar	_buf @ sp[(-4)+-4]
 11257  0049EC  0EF8               	movlw	-8
 11258  0049EE  006F FF8F FFE6     	movff	plusw1,postinc1
 11259  0049F4  006F FF8F FFE6     	movff	plusw1,postinc1
 11260  0049FA  ECE3  F027         	call	_strlen	;wreg free
 11261  0049FE  0EFC               	movlw	-4
 11262  004A00  50E3               	movf	plusw1,w,c
 11263  004A02  263B               	addwf	btemp,f,c
 11264  004A04  0EFD               	movlw	-3
 11265  004A06  50E3               	movf	plusw1,w,c
 11266  004A08  223C               	addwfc	btemp+1,f,c
 11267                           
 11268                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 11269  004A0A  0EF6               	movlw	246
 11270  004A0C  26E1               	addwf	fsr1l,f,c
 11271  004A0E  0EFF               	movlw	255
 11272  004A10  22E2               	addwfc	fsr1h,f,c
 11273  004A12  0012               	return		;funcret
 11274  004A14                     __end_of_pad:
 11275                           	opt callstack 0
 11276                           
 11277 ;; *************** function _strlen *****************
 11278 ;; Defined at:
 11279 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
 11280 ;; Parameters:    Size  Location     Type
 11281 ;;  s               2  [STACK] PTR const unsigned char 
 11282 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
 11283 ;;		 -> STR_3(6), V(88), 
 11284 ;; Auto vars:     Size  Location     Type
 11285 ;;  a               2  [STACK] PTR const unsigned char 
 11286 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
 11287 ;;		 -> STR_3(6), V(88), 
 11288 ;; Return value:  Size  Location     Type
 11289 ;;                  2  [STACK] unsigned int 
 11290 ;; Registers used:
 11291 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 11292 ;; Tracked objects:
 11293 ;;		On entry : 0/0
 11294 ;;		On exit  : 0/0
 11295 ;;		Unchanged: 0/0
 11296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11301 ;;Total ram usage:        0 bytes
 11302 ;; Hardware stack levels used:    1
 11303 ;; Hardware stack levels required when called:    3
 11304 ;; This function calls:
 11305 ;;		Nothing
 11306 ;; This function is called by:
 11307 ;;		_eaDogM_WriteString
 11308 ;;		_pad
 11309 ;;		_stoa
 11310 ;; This function uses a reentrant model
 11311 ;;
 11312                           
 11313                           	psect	text45
 11314  004FC6                     __ptext45:
 11315                           	opt callstack 0
 11316  004FC6                     _strlen:
 11317                           	opt callstack 0
 11318                           
 11319                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11320  004FC6  52E6               	movf	postinc1,f,c
 11321  004FC8  52E6               	movf	postinc1,f,c
 11322                           
 11323                           ;stkvar	_s @ sp[(-2)+-2]
 11324                           
 11325                           ;incstack = 0
 11326  004FCA  0EFC               	movlw	-4
 11327  004FCC  006F FF8C  F045    	movff	plusw1,btemp+10
 11328  004FD2  0EFD               	movlw	-3
 11329  004FD4  006F FF8C  F046    	movff	plusw1,btemp+11
 11330                           
 11331                           ;stkvar	_a @ sp[(-2)+0]
 11332  004FDA  0EFF               	movlw	-1
 11333  004FDC  0060  F11B  FFE3   	movff	btemp+11,plusw1
 11334  004FE2  0EFE               	movlw	-2
 11335  004FE4  0060  F117  FFE3   	movff	btemp+10,plusw1
 11336  004FEA  D011               	goto	l5203
 11337  004FEC                     l5201:
 11338                           
 11339                           ;stkvar	_s @ sp[(-2)+-2]
 11340  004FEC  0EFC               	movlw	-4
 11341  004FEE  50E3               	movf	plusw1,w,c
 11342  004FF0  0F01               	addlw	1
 11343  004FF2  6E3B               	movwf	btemp,c
 11344  004FF4  0EFC               	movlw	-4
 11345  004FF6  0060  F0EF  FFE3   	movff	btemp,plusw1
 11346  004FFC  6A3B               	clrf	btemp,c
 11347  004FFE  0EFD               	movlw	-3
 11348  005000  50E3               	movf	plusw1,w,c
 11349  005002  203B               	addwfc	btemp,w,c
 11350  005004  6E3B               	movwf	btemp,c
 11351  005006  0EFD               	movlw	-3
 11352  005008  0060  F0EF  FFE3   	movff	btemp,plusw1
 11353  00500E                     l5203:
 11354                           
 11355                           ;stkvar	_s @ sp[(-2)+-2]
 11356  00500E  0EFC               	movlw	-4
 11357  005010  006F FF8F FFF6     	movff	plusw1,tblptrl
 11358  005016  0EFD               	movlw	-3
 11359  005018  006F FF8F FFF7     	movff	plusw1,tblptrh
 11360  00501E  0E00               	movlw	low (__smallconst shr (0+16))
 11361  005020  6EF8               	movwf	tblptru,c
 11362  005022  0E1F               	movlw	(high __ramtop+-1)
 11363  005024  64F7               	cpfsgt	tblptrh,c
 11364  005026  D003               	bra	u2317
 11365  005028  0008               	tblrd		*
 11366  00502A  50F5               	movf	tablat,w,c
 11367  00502C  D007               	bra	u2310
 11368  00502E                     u2317:
 11369  00502E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 11370  005034  006F FFDF FFEA     	movff	tblptrh,fsr0h
 11371  00503A  50EF               	movf	indf0,w,c
 11372  00503C                     u2310:
 11373  00503C  0900               	iorlw	0
 11374  00503E  A4D8               	btfss	status,2,c
 11375  005040  D7D5               	goto	l5201
 11376                           
 11377                           ;stkvar	_a @ sp[(-2)+0]
 11378                           ;stkvar	_s @ sp[(-2)+-2]
 11379  005042  0EFC               	movlw	-4
 11380  005044  006F FF8C  F03B    	movff	plusw1,btemp
 11381  00504A  0EFD               	movlw	-3
 11382  00504C  006F FF8C  F03C    	movff	plusw1,btemp+1
 11383  005052  0EFE               	movlw	-2
 11384  005054  50E3               	movf	plusw1,w,c
 11385  005056  5E3B               	subwf	btemp,f,c
 11386  005058  0EFF               	movlw	-1
 11387  00505A  50E3               	movf	plusw1,w,c
 11388  00505C  5A3C               	subwfb	btemp+1,f,c
 11389                           
 11390                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 11391  00505E  52E5               	movf	postdec1,f,c
 11392  005060  52E5               	movf	postdec1,f,c
 11393  005062  52E5               	movf	postdec1,f,c
 11394  005064  52E5               	movf	postdec1,f,c
 11395  005066  0012               	return		;funcret
 11396  005068                     __end_of_strlen:
 11397                           	opt callstack 0
 11398                           
 11399 ;; *************** function _fputs *****************
 11400 ;; Defined at:
 11401 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
 11402 ;; Parameters:    Size  Location     Type
 11403 ;;  s               2  [STACK] PTR const unsigned char 
 11404 ;;		 -> dbuf(32), 
 11405 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11406 ;;		 -> f(5), NULL(0), 
 11407 ;; Auto vars:     Size  Location     Type
 11408 ;;  i               2  [STACK] int 
 11409 ;;  c               1  [STACK] unsigned char 
 11410 ;; Return value:  Size  Location     Type
 11411 ;;                  2  [STACK] int 
 11412 ;; Registers used:
 11413 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 11414 ;; Tracked objects:
 11415 ;;		On entry : 0/1
 11416 ;;		On exit  : 0/0
 11417 ;;		Unchanged: 0/0
 11418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11423 ;;Total ram usage:        0 bytes
 11424 ;; Hardware stack levels used:    1
 11425 ;; Hardware stack levels required when called:    6
 11426 ;; This function calls:
 11427 ;;		_fputc
 11428 ;; This function is called by:
 11429 ;;		_pad
 11430 ;; This function uses a reentrant model
 11431 ;;
 11432                           
 11433                           	psect	text46
 11434  00523C                     __ptext46:
 11435                           	opt callstack 0
 11436  00523C                     _fputs:
 11437                           	opt callstack 0
 11438                           
 11439                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11440  00523C  52E6               	movf	postinc1,f,c
 11441  00523E  52E6               	movf	postinc1,f,c
 11442  005240  52E6               	movf	postinc1,f,c
 11443                           
 11444                           ;stkvar	_i @ sp[(-3)+0]
 11445                           
 11446                           ;incstack = 0
 11447  005242  0EFD               	movlw	-3
 11448  005244  6AE3               	clrf	plusw1,c
 11449  005246  0EFE               	movlw	-2
 11450  005248  6AE3               	clrf	plusw1,c
 11451  00524A  D01F               	goto	l7455
 11452  00524C                     l7451:
 11453                           
 11454                           ;stkvar	_fp @ sp[(-3)+-4]
 11455  00524C  0EF9               	movlw	-7
 11456  00524E  006F FF8F FFE6     	movff	plusw1,postinc1
 11457  005254  006F FF8F FFE6     	movff	plusw1,postinc1
 11458                           
 11459                           ;stkvar	_c @ sp[(-5)+2]
 11460  00525A  0EFD               	movlw	-3
 11461  00525C  50E3               	movf	plusw1,w,c
 11462  00525E  6EE6               	movwf	postinc1,c
 11463  005260  0E00               	movlw	0
 11464  005262  6EE6               	movwf	postinc1,c
 11465  005264  EC0A  F025         	call	_fputc	;wreg free
 11466                           
 11467                           ;stkvar	_i @ sp[(-3)+0]
 11468  005268  0EFD               	movlw	-3
 11469  00526A  50E3               	movf	plusw1,w,c
 11470  00526C  0F01               	addlw	1
 11471  00526E  6E3B               	movwf	btemp,c
 11472  005270  0EFD               	movlw	-3
 11473  005272  0060  F0EF  FFE3   	movff	btemp,plusw1
 11474  005278  6A3B               	clrf	btemp,c
 11475  00527A  0EFE               	movlw	-2
 11476  00527C  50E3               	movf	plusw1,w,c
 11477  00527E  203B               	addwfc	btemp,w,c
 11478  005280  6E3B               	movwf	btemp,c
 11479  005282  0EFE               	movlw	-2
 11480  005284  0060  F0EF  FFE3   	movff	btemp,plusw1
 11481  00528A                     l7455:
 11482                           
 11483                           ;stkvar	_i @ sp[(-3)+0]
 11484  00528A  0EFD               	movlw	-3
 11485  00528C  006F FF8C  F045    	movff	plusw1,btemp+10
 11486  005292  0EFE               	movlw	-2
 11487  005294  006F FF8C  F046    	movff	plusw1,btemp+11
 11488                           
 11489                           ;stkvar	_s @ sp[(-3)+-2]
 11490  00529A  0EFB               	movlw	-5
 11491  00529C  006F FF8C  F043    	movff	plusw1,btemp+8
 11492  0052A2  0EFC               	movlw	-4
 11493  0052A4  006F FF8C  F044    	movff	plusw1,btemp+9
 11494  0052AA  5045               	movf	btemp+10,w,c
 11495  0052AC  2443               	addwf	btemp+8,w,c
 11496  0052AE  6ED9               	movwf	fsr2l,c
 11497  0052B0  5046               	movf	btemp+11,w,c
 11498  0052B2  2044               	addwfc	btemp+9,w,c
 11499  0052B4  6EDA               	movwf	fsr2h,c
 11500  0052B6  50DF               	movf	indf2,w,c
 11501  0052B8  6E46               	movwf	btemp+11,c
 11502                           
 11503                           ;stkvar	_c @ sp[(-3)+2]
 11504  0052BA  0EFF               	movlw	-1
 11505  0052BC  0060  F11B  FFE3   	movff	btemp+11,plusw1
 11506  0052C2  0EFF               	movlw	-1
 11507  0052C4  50E3               	movf	plusw1,w,c
 11508  0052C6  A4D8               	btfss	status,2,c
 11509  0052C8  D7C1               	goto	l7451
 11510                           
 11511                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 11512  0052CA  0EF9               	movlw	249
 11513  0052CC  26E1               	addwf	fsr1l,f,c
 11514  0052CE  0EFF               	movlw	255
 11515  0052D0  22E2               	addwfc	fsr1h,f,c
 11516  0052D2  0012               	return		;funcret
 11517  0052D4                     __end_of_fputs:
 11518                           	opt callstack 0
 11519                           
 11520 ;; *************** function _fputc *****************
 11521 ;; Defined at:
 11522 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
 11523 ;; Parameters:    Size  Location     Type
 11524 ;;  c               2  [STACK] int 
 11525 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11526 ;;		 -> f(5), NULL(0), 
 11527 ;; Auto vars:     Size  Location     Type
 11528 ;;		None
 11529 ;; Return value:  Size  Location     Type
 11530 ;;                  2  [STACK] int 
 11531 ;; Registers used:
 11532 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 11533 ;; Tracked objects:
 11534 ;;		On entry : 0/0
 11535 ;;		On exit  : 0/0
 11536 ;;		Unchanged: 0/0
 11537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11542 ;;Total ram usage:        0 bytes
 11543 ;; Hardware stack levels used:    1
 11544 ;; Hardware stack levels required when called:    5
 11545 ;; This function calls:
 11546 ;;		_putch
 11547 ;; This function is called by:
 11548 ;;		_pad
 11549 ;;		_stoa
 11550 ;;		_vfpfcnvrt
 11551 ;;		_fputs
 11552 ;; This function uses a reentrant model
 11553 ;;
 11554                           
 11555                           	psect	text47
 11556  004A14                     __ptext47:
 11557                           	opt callstack 0
 11558  004A14                     _fputc:
 11559                           	opt callstack 21
 11560                           
 11561                           ;stkvar	_fp @ sp[(0)+-4]
 11562                           
 11563                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11564                           ;incstack = 0
 11565  004A14  0EFC               	movlw	-4
 11566  004A16  006F FF8C  F03B    	movff	plusw1,btemp
 11567  004A1C  0EFD               	movlw	-3
 11568  004A1E  50E3               	movf	plusw1,w,c
 11569  004A20  103B               	iorwf	btemp,w,c
 11570  004A22  B4D8               	btfsc	status,2,c
 11571  004A24  D009               	goto	u4400
 11572                           
 11573                           ;stkvar	_fp @ sp[(0)+-4]
 11574  004A26  0EFC               	movlw	-4
 11575  004A28  006F FF8C  F03B    	movff	plusw1,btemp
 11576  004A2E  0EFD               	movlw	-3
 11577  004A30  50E3               	movf	plusw1,w,c
 11578  004A32  103B               	iorwf	btemp,w,c
 11579  004A34  A4D8               	btfss	status,2,c
 11580  004A36  D006               	goto	l7441
 11581  004A38                     u4400:
 11582                           
 11583                           ;stkvar	_c @ sp[(0)+-2]
 11584  004A38  0EFE               	movlw	-2
 11585  004A3A  50E3               	movf	plusw1,w,c
 11586  004A3C  6EE6               	movwf	postinc1,c
 11587  004A3E  ECC3  F02F         	call	_putch	;wreg free
 11588  004A42  D069               	goto	l2540
 11589  004A44                     l7441:
 11590                           
 11591                           ;stkvar	_fp @ sp[(0)+-4]
 11592  004A44  0EFC               	movlw	-4
 11593  004A46  006F FF8C  F045    	movff	plusw1,btemp+10
 11594  004A4C  0EFD               	movlw	-3
 11595  004A4E  006F FF8C  F046    	movff	plusw1,btemp+11
 11596  004A54  0E03               	movlw	3
 11597  004A56  2445               	addwf	btemp+10,w,c
 11598  004A58  6ED9               	movwf	fsr2l,c
 11599  004A5A  0E00               	movlw	0
 11600  004A5C  2046               	addwfc	btemp+11,w,c
 11601  004A5E  6EDA               	movwf	fsr2h,c
 11602  004A60  50DE               	movf	postinc2,w,c
 11603  004A62  10DE               	iorwf	postinc2,w,c
 11604  004A64  B4D8               	btfsc	status,2,c
 11605  004A66  D026               	goto	u4420
 11606                           
 11607                           ;stkvar	_fp @ sp[(0)+-4]
 11608  004A68  0EFC               	movlw	-4
 11609  004A6A  006F FF8C  F045    	movff	plusw1,btemp+10
 11610  004A70  0EFD               	movlw	-3
 11611  004A72  006F FF8C  F046    	movff	plusw1,btemp+11
 11612  004A78  0E03               	movlw	3
 11613  004A7A  2445               	addwf	btemp+10,w,c
 11614  004A7C  6ED9               	movwf	fsr2l,c
 11615  004A7E  0E00               	movlw	0
 11616  004A80  2046               	addwfc	btemp+11,w,c
 11617  004A82  6EDA               	movwf	fsr2h,c
 11618                           
 11619                           ;stkvar	_fp @ sp[(0)+-4]
 11620  004A84  0EFC               	movlw	-4
 11621  004A86  006F FF8C  F045    	movff	plusw1,btemp+10
 11622  004A8C  0EFD               	movlw	-3
 11623  004A8E  006F FF8C  F046    	movff	plusw1,btemp+11
 11624  004A94  0E01               	movlw	1
 11625  004A96  2445               	addwf	btemp+10,w,c
 11626  004A98  6EE9               	movwf	fsr0l,c
 11627  004A9A  0E00               	movlw	0
 11628  004A9C  2046               	addwfc	btemp+11,w,c
 11629  004A9E  6EEA               	movwf	fsr0h,c
 11630  004AA0  50DE               	movf	postinc2,w,c
 11631  004AA2  5CEE               	subwf	postinc0,w,c
 11632  004AA4  50EE               	movf	postinc0,w,c
 11633  004AA6  0A80               	xorlw	128
 11634  004AA8  6E3B               	movwf	btemp,c
 11635  004AAA  50DE               	movf	postinc2,w,c
 11636  004AAC  0A80               	xorlw	128
 11637  004AAE  583B               	subwfb	btemp,w,c
 11638  004AB0  B0D8               	btfsc	status,0,c
 11639  004AB2  D031               	goto	l2540
 11640  004AB4                     u4420:
 11641                           
 11642                           ;stkvar	_c @ sp[(0)+-2]
 11643                           ;stkvar	_fp @ sp[(0)+-4]
 11644  004AB4  0EFC               	movlw	-4
 11645  004AB6  006F FF8C  F045    	movff	plusw1,btemp+10
 11646  004ABC  0EFD               	movlw	-3
 11647  004ABE  006F FF8C  F046    	movff	plusw1,btemp+11
 11648  004AC4  0E01               	movlw	1
 11649  004AC6  2445               	addwf	btemp+10,w,c
 11650  004AC8  6ED9               	movwf	fsr2l,c
 11651  004ACA  0E00               	movlw	0
 11652  004ACC  2046               	addwfc	btemp+11,w,c
 11653  004ACE  6EDA               	movwf	fsr2h,c
 11654  004AD0  50DF               	movf	indf2,w,c
 11655  004AD2  6E46               	movwf	btemp+11,c
 11656                           
 11657                           ;stkvar	_fp @ sp[(0)+-4]
 11658  004AD4  0EFC               	movlw	-4
 11659  004AD6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11660  004ADC  0EFD               	movlw	-3
 11661  004ADE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11662  004AE4  50DF               	movf	indf2,w,c
 11663  004AE6  2446               	addwf	btemp+11,w,c
 11664  004AE8  6ED9               	movwf	fsr2l,c
 11665  004AEA  6ADA               	clrf	fsr2h,c
 11666  004AEC  0EFE               	movlw	-2
 11667  004AEE  006F FF8F FFDF     	movff	plusw1,indf2
 11668                           
 11669                           ;stkvar	_fp @ sp[(0)+-4]
 11670  004AF4  0EFC               	movlw	-4
 11671  004AF6  006F FF8C  F045    	movff	plusw1,btemp+10
 11672  004AFC  0EFD               	movlw	-3
 11673  004AFE  006F FF8C  F046    	movff	plusw1,btemp+11
 11674  004B04  0E01               	movlw	1
 11675  004B06  2445               	addwf	btemp+10,w,c
 11676  004B08  6ED9               	movwf	fsr2l,c
 11677  004B0A  0E00               	movlw	0
 11678  004B0C  2046               	addwfc	btemp+11,w,c
 11679  004B0E  6EDA               	movwf	fsr2h,c
 11680  004B10  2ADE               	incf	postinc2,f,c
 11681  004B12  0E00               	movlw	0
 11682  004B14  22DD               	addwfc	postdec2,f,c
 11683  004B16                     l2540:
 11684                           
 11685                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 11686  004B16  52E5               	movf	postdec1,f,c
 11687  004B18  52E5               	movf	postdec1,f,c
 11688  004B1A  52E5               	movf	postdec1,f,c
 11689  004B1C  52E5               	movf	postdec1,f,c
 11690  004B1E  0012               	return		;funcret
 11691  004B20                     __end_of_fputc:
 11692                           	opt callstack 0
 11693                           
 11694 ;; *************** function _putch *****************
 11695 ;; Defined at:
 11696 ;;		line 138 in file "eadog.c"
 11697 ;; Parameters:    Size  Location     Type
 11698 ;;  c               1  [STACK] unsigned char 
 11699 ;; Auto vars:     Size  Location     Type
 11700 ;;		None
 11701 ;; Return value:  Size  Location     Type
 11702 ;;                  1  [STACK] void 
 11703 ;; Registers used:
 11704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 11705 ;; Tracked objects:
 11706 ;;		On entry : 0/0
 11707 ;;		On exit  : 0/0
 11708 ;;		Unchanged: 0/0
 11709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11714 ;;Total ram usage:        0 bytes
 11715 ;; Hardware stack levels used:    1
 11716 ;; Hardware stack levels required when called:    4
 11717 ;; This function calls:
 11718 ;;		_ringBufS_put_dma
 11719 ;; This function is called by:
 11720 ;;		_fputc
 11721 ;; This function uses a reentrant model
 11722 ;;
 11723                           
 11724                           	psect	text48
 11725  005F86                     __ptext48:
 11726                           	opt callstack 0
 11727  005F86                     _putch:
 11728                           	opt callstack 21
 11729                           
 11730                           ;eadog.c: 138: void putch(char c);eadog.c: 139: {;eadog.c: 140:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 11731                           ;stkvar	_c @ sp[(0)+-1]
 11732                           
 11733                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11734                           ;incstack = 0
 11735  005F86  0EFF               	movlw	-1
 11736  005F88  50E3               	movf	plusw1,w,c
 11737  005F8A  6EE6               	movwf	postinc1,c
 11738  005F8C  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
 11739  005F92  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
 11740  005F98  EC8E  F027         	call	_ringBufS_put_dma	;wreg free
 11741                           
 11742                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 11743  005F9C  52E5               	movf	postdec1,f,c
 11744  005F9E  0012               	return		;funcret
 11745  005FA0                     __end_of_putch:
 11746                           	opt callstack 0
 11747                           
 11748 ;; *************** function _ringBufS_put_dma *****************
 11749 ;; Defined at:
 11750 ;;		line 67 in file "ringbufs.c"
 11751 ;; Parameters:    Size  Location     Type
 11752 ;;  _this           2  [STACK] PTR struct ringBufS_t
 11753 ;;		 -> ring_buf1(67), 
 11754 ;;  c               1  [STACK] const unsigned char 
 11755 ;; Auto vars:     Size  Location     Type
 11756 ;;		None
 11757 ;; Return value:  Size  Location     Type
 11758 ;;                  1  [STACK] void 
 11759 ;; Registers used:
 11760 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 11761 ;; Tracked objects:
 11762 ;;		On entry : 0/0
 11763 ;;		On exit  : 0/0
 11764 ;;		Unchanged: 0/0
 11765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11770 ;;Total ram usage:        0 bytes
 11771 ;; Hardware stack levels used:    1
 11772 ;; Hardware stack levels required when called:    3
 11773 ;; This function calls:
 11774 ;;		Nothing
 11775 ;; This function is called by:
 11776 ;;		_putch
 11777 ;; This function uses a reentrant model
 11778 ;;
 11779                           
 11780                           	psect	text49
 11781  004F1C                     __ptext49:
 11782                           	opt callstack 0
 11783  004F1C                     _ringBufS_put_dma:
 11784                           	opt callstack 21
 11785                           
 11786                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 11787                           ;stkvar	__this @ sp[(0)+-2]
 11788                           
 11789                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11790                           ;incstack = 0
 11791  004F1C  0EFE               	movlw	-2
 11792  004F1E  006F FF8C  F045    	movff	plusw1,btemp+10
 11793  004F24  0EFF               	movlw	-1
 11794  004F26  006F FF8C  F046    	movff	plusw1,btemp+11
 11795  004F2C  0E42               	movlw	66
 11796  004F2E  2445               	addwf	btemp+10,w,c
 11797  004F30  6ED9               	movwf	fsr2l,c
 11798  004F32  0E00               	movlw	0
 11799  004F34  2046               	addwfc	btemp+11,w,c
 11800  004F36  6EDA               	movwf	fsr2h,c
 11801  004F38  0E40               	movlw	64
 11802  004F3A  60DF               	cpfslt	indf2,c
 11803  004F3C  D040               	goto	l1452
 11804                           
 11805                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 11806                           ;stkvar	_c @ sp[(0)+-3]
 11807                           ;stkvar	__this @ sp[(0)+-2]
 11808  004F3E  0EFE               	movlw	-2
 11809  004F40  006F FF8C  F045    	movff	plusw1,btemp+10
 11810  004F46  0EFF               	movlw	-1
 11811  004F48  006F FF8C  F046    	movff	plusw1,btemp+11
 11812  004F4E  0E40               	movlw	64
 11813  004F50  2445               	addwf	btemp+10,w,c
 11814  004F52  6ED9               	movwf	fsr2l,c
 11815  004F54  0E00               	movlw	0
 11816  004F56  2046               	addwfc	btemp+11,w,c
 11817  004F58  6EDA               	movwf	fsr2h,c
 11818  004F5A  50DF               	movf	indf2,w,c
 11819  004F5C  6E46               	movwf	btemp+11,c
 11820                           
 11821                           ;stkvar	__this @ sp[(0)+-2]
 11822  004F5E  0EFE               	movlw	-2
 11823  004F60  006F FF8C  F043    	movff	plusw1,btemp+8
 11824  004F66  0EFF               	movlw	-1
 11825  004F68  006F FF8C  F044    	movff	plusw1,btemp+9
 11826  004F6E  5046               	movf	btemp+11,w,c
 11827  004F70  2443               	addwf	btemp+8,w,c
 11828  004F72  6ED9               	movwf	fsr2l,c
 11829  004F74  0E00               	movlw	0
 11830  004F76  2044               	addwfc	btemp+9,w,c
 11831  004F78  6EDA               	movwf	fsr2h,c
 11832  004F7A  0EFD               	movlw	-3
 11833  004F7C  006F FF8F FFDF     	movff	plusw1,indf2
 11834                           
 11835                           ;ringbufs.c: 71:   ++_this->head;
 11836                           ;stkvar	__this @ sp[(0)+-2]
 11837  004F82  0EFE               	movlw	-2
 11838  004F84  006F FF8C  F045    	movff	plusw1,btemp+10
 11839  004F8A  0EFF               	movlw	-1
 11840  004F8C  006F FF8C  F046    	movff	plusw1,btemp+11
 11841  004F92  0E40               	movlw	64
 11842  004F94  2445               	addwf	btemp+10,w,c
 11843  004F96  6ED9               	movwf	fsr2l,c
 11844  004F98  0E00               	movlw	0
 11845  004F9A  2046               	addwfc	btemp+11,w,c
 11846  004F9C  6EDA               	movwf	fsr2h,c
 11847  004F9E  2ADF               	incf	indf2,f,c
 11848                           
 11849                           ;ringbufs.c: 72:   ++_this->count;
 11850                           ;stkvar	__this @ sp[(0)+-2]
 11851  004FA0  0EFE               	movlw	-2
 11852  004FA2  006F FF8C  F045    	movff	plusw1,btemp+10
 11853  004FA8  0EFF               	movlw	-1
 11854  004FAA  006F FF8C  F046    	movff	plusw1,btemp+11
 11855  004FB0  0E42               	movlw	66
 11856  004FB2  2445               	addwf	btemp+10,w,c
 11857  004FB4  6ED9               	movwf	fsr2l,c
 11858  004FB6  0E00               	movlw	0
 11859  004FB8  2046               	addwfc	btemp+11,w,c
 11860  004FBA  6EDA               	movwf	fsr2h,c
 11861  004FBC  2ADF               	incf	indf2,f,c
 11862  004FBE                     l1452:
 11863                           
 11864                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 11865  004FBE  52E5               	movf	postdec1,f,c
 11866  004FC0  52E5               	movf	postdec1,f,c
 11867  004FC2  52E5               	movf	postdec1,f,c
 11868  004FC4  0012               	return		;funcret
 11869  004FC6                     __end_of_ringBufS_put_dma:
 11870                           	opt callstack 0
 11871                           
 11872 ;; *************** function _SYSTEM_Initialize *****************
 11873 ;; Defined at:
 11874 ;;		line 50 in file "mcc_generated_files/mcc.c"
 11875 ;; Parameters:    Size  Location     Type
 11876 ;;		None
 11877 ;; Auto vars:     Size  Location     Type
 11878 ;;		None
 11879 ;; Return value:  Size  Location     Type
 11880 ;;                  1  [STACK] void 
 11881 ;; Registers used:
 11882 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 11883 ;; Tracked objects:
 11884 ;;		On entry : 0/0
 11885 ;;		On exit  : 3F/3C
 11886 ;;		Unchanged: 0/0
 11887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11892 ;;Total ram usage:        0 bytes
 11893 ;; Hardware stack levels used:    1
 11894 ;; Hardware stack levels required when called:    5
 11895 ;; This function calls:
 11896 ;;		_ADCC_Initialize
 11897 ;;		_CLC1_Initialize
 11898 ;;		_CLKREF_Initialize
 11899 ;;		_DMA1_Initialize
 11900 ;;		_DSM_Initialize
 11901 ;;		_EXT_INT_Initialize
 11902 ;;		_INTERRUPT_Initialize
 11903 ;;		_NCO1_Initialize
 11904 ;;		_OSCILLATOR_Initialize
 11905 ;;		_PIN_MANAGER_Initialize
 11906 ;;		_PMD_Initialize
 11907 ;;		_SPI1_Initialize
 11908 ;;		_TMR5_Initialize
 11909 ;;		_TMR6_Initialize
 11910 ;;		_UART1_Initialize
 11911 ;;		_UART2_Initialize
 11912 ;; This function is called by:
 11913 ;;		_main
 11914 ;; This function uses a reentrant model
 11915 ;;
 11916                           
 11917                           	psect	text50
 11918  0057F4                     __ptext50:
 11919                           	opt callstack 0
 11920  0057F4                     _SYSTEM_Initialize:
 11921                           	opt callstack 25
 11922                           
 11923                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 11924                           
 11925                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11926                           ;incstack = 0
 11927  0057F4  EC2C  F02A         	call	_INTERRUPT_Initialize	;wreg free
 11928                           
 11929                           ; BSR set to: 57
 11930                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 11931  0057F8  EC00  F030         	call	_PMD_Initialize	;wreg free
 11932                           
 11933                           ; BSR set to: 57
 11934                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 11935  0057FC  EC34  F028         	call	_PIN_MANAGER_Initialize	;wreg free
 11936                           
 11937                           ; BSR set to: 58
 11938                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 11939  005800  ECF5  F02F         	call	_OSCILLATOR_Initialize	;wreg free
 11940                           
 11941                           ; BSR set to: 57
 11942                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 11943  005804  EC6C  F02B         	call	_ADCC_Initialize	;wreg free
 11944                           
 11945                           ;mcc_generated_files/mcc.c: 57:     NCO1_Initialize();
 11946  005808  ECA7  F02F         	call	_NCO1_Initialize	;wreg free
 11947                           
 11948                           ; BSR set to: 63
 11949                           ;mcc_generated_files/mcc.c: 58:     EXT_INT_Initialize();
 11950  00580C  EC46  F02B         	call	_EXT_INT_Initialize	;wreg free
 11951                           
 11952                           ; BSR set to: 57
 11953                           ;mcc_generated_files/mcc.c: 59:     TMR6_Initialize();
 11954  005810  EC15  F02E         	call	_TMR6_Initialize	;wreg free
 11955                           
 11956                           ;mcc_generated_files/mcc.c: 60:     CLC1_Initialize();
 11957  005814  EC26  F02F         	call	_CLC1_Initialize	;wreg free
 11958                           
 11959                           ; BSR set to: 60
 11960                           ;mcc_generated_files/mcc.c: 61:     TMR5_Initialize();
 11961  005818  ECB4  F02B         	call	_TMR5_Initialize	;wreg free
 11962                           
 11963                           ;mcc_generated_files/mcc.c: 62:     DSM_Initialize();
 11964  00581C  ECB5  F02F         	call	_DSM_Initialize	;wreg free
 11965                           
 11966                           ; BSR set to: 60
 11967                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 11968  005820  EC5F  F02A         	call	_UART1_Initialize	;wreg free
 11969                           
 11970                           ; BSR set to: 57
 11971                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 11972  005824  ECC2  F02A         	call	_UART2_Initialize	;wreg free
 11973                           
 11974                           ; BSR set to: 57
 11975                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 11976  005828  ECEA  F02F         	call	_SPI1_Initialize	;wreg free
 11977                           
 11978                           ; BSR set to: 61
 11979                           ;mcc_generated_files/mcc.c: 66:     DMA1_Initialize();
 11980  00582C  ECF7  F029         	call	_DMA1_Initialize	;wreg free
 11981                           
 11982                           ; BSR set to: 59
 11983                           ;mcc_generated_files/mcc.c: 67:     CLKREF_Initialize();
 11984  005830  EC31  F030         	call	_CLKREF_Initialize	;wreg free
 11985                           
 11986                           ; BSR set to: 60
 11987                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 11988  005834  0012               	return		;funcret
 11989  005836                     __end_of_SYSTEM_Initialize:
 11990                           	opt callstack 0
 11991                           
 11992 ;; *************** function _UART2_Initialize *****************
 11993 ;; Defined at:
 11994 ;;		line 78 in file "mcc_generated_files/uart2.c"
 11995 ;; Parameters:    Size  Location     Type
 11996 ;;		None
 11997 ;; Auto vars:     Size  Location     Type
 11998 ;;		None
 11999 ;; Return value:  Size  Location     Type
 12000 ;;                  1  [STACK] void 
 12001 ;; Registers used:
 12002 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 12003 ;; Tracked objects:
 12004 ;;		On entry : 3F/39
 12005 ;;		On exit  : 3F/39
 12006 ;;		Unchanged: 0/0
 12007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12012 ;;Total ram usage:        0 bytes
 12013 ;; Hardware stack levels used:    1
 12014 ;; Hardware stack levels required when called:    4
 12015 ;; This function calls:
 12016 ;;		_UART2_SetRxInterruptHandler
 12017 ;;		_UART2_SetTxInterruptHandler
 12018 ;; This function is called by:
 12019 ;;		_SYSTEM_Initialize
 12020 ;; This function uses a reentrant model
 12021 ;;
 12022                           
 12023                           	psect	text51
 12024  005584                     __ptext51:
 12025                           	opt callstack 0
 12026  005584                     _UART2_Initialize:
 12027                           	opt callstack 25
 12028                           
 12029                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 12030                           
 12031                           ; BSR set to: 60
 12032                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12033                           ;incstack = 0
 12034  005584  0139               	movlb	57	; () banked
 12035  005586  9596               	bcf	150,2,b	;volatile
 12036                           
 12037                           ; BSR set to: 57
 12038                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 12039  005588  0EF4               	movlw	low _UART2_Receive_ISR
 12040  00558A  6EE6               	movwf	postinc1,c
 12041  00558C  0E5E               	movlw	high _UART2_Receive_ISR
 12042  00558E  6EE6               	movwf	postinc1,c
 12043  005590  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
 12044  005592  6EE6               	movwf	postinc1,c
 12045  005594  ECD9  F02D         	call	_UART2_SetRxInterruptHandler	;wreg free
 12046                           
 12047                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 12048  005598  0139               	movlb	57	; () banked
 12049  00559A  9796               	bcf	150,3,b	;volatile
 12050                           
 12051                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 12052  00559C  0E66               	movlw	low _UART2_Transmit_ISR
 12053  00559E  6EE6               	movwf	postinc1,c
 12054  0055A0  0E5A               	movlw	high _UART2_Transmit_ISR
 12055  0055A2  6EE6               	movwf	postinc1,c
 12056  0055A4  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 12057  0055A6  6EE6               	movwf	postinc1,c
 12058  0055A8  ECC5  F02D         	call	_UART2_SetTxInterruptHandler	;wreg free
 12059                           
 12060                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 12061  0055AC  013D               	movlb	61	; () banked
 12062  0055AE  6BD4               	clrf	212,b	;volatile
 12063                           
 12064                           ; BSR set to: 61
 12065                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 12066  0055B0  6BD6               	clrf	214,b	;volatile
 12067                           
 12068                           ; BSR set to: 61
 12069                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 12070  0055B2  6BD8               	clrf	216,b	;volatile
 12071                           
 12072                           ; BSR set to: 61
 12073                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 12074  0055B4  0EB0               	movlw	176
 12075  0055B6  6FDA               	movwf	218,b	;volatile
 12076                           
 12077                           ; BSR set to: 61
 12078                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 12079  0055B8  0E80               	movlw	128
 12080  0055BA  6FDB               	movwf	219,b	;volatile
 12081                           
 12082                           ; BSR set to: 61
 12083                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 12084  0055BC  6BDC               	clrf	220,b	;volatile
 12085                           
 12086                           ; BSR set to: 61
 12087                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 12088  0055BE  0E82               	movlw	130
 12089  0055C0  6FDD               	movwf	221,b	;volatile
 12090                           
 12091                           ; BSR set to: 61
 12092                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 12093  0055C2  0E06               	movlw	6
 12094  0055C4  6FDE               	movwf	222,b	;volatile
 12095                           
 12096                           ; BSR set to: 61
 12097                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 12098  0055C6  6BDF               	clrf	223,b	;volatile
 12099                           
 12100                           ; BSR set to: 61
 12101                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 12102  0055C8  6BE0               	clrf	224,b	;volatile
 12103                           
 12104                           ; BSR set to: 61
 12105                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 12106  0055CA  6BE1               	clrf	225,b	;volatile
 12107                           
 12108                           ; BSR set to: 61
 12109                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 12110  0055CC  6BE2               	clrf	226,b	;volatile
 12111                           
 12112                           ; BSR set to: 61
 12113                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 12114  0055CE  6A34               	clrf	_uart2TxHead,c	;volatile
 12115                           
 12116                           ; BSR set to: 61
 12117                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 12118  0055D0  6A33               	clrf	_uart2TxTail,c	;volatile
 12119                           
 12120                           ; BSR set to: 61
 12121                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 12122  0055D2  0E40               	movlw	64
 12123  0055D4  6E32               	movwf	_uart2TxBufferRemaining,c	;volatile
 12124                           
 12125                           ; BSR set to: 61
 12126                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 12127  0055D6  6A31               	clrf	_uart2RxHead,c	;volatile
 12128                           
 12129                           ; BSR set to: 61
 12130                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 12131  0055D8  6A30               	clrf	_uart2RxTail,c	;volatile
 12132                           
 12133                           ; BSR set to: 61
 12134                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 12135  0055DA  6A2F               	clrf	_uart2RxCount,c	;volatile
 12136                           
 12137                           ; BSR set to: 61
 12138                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 12139  0055DC  0139               	movlb	57	; () banked
 12140  0055DE  8596               	bsf	150,2,b	;volatile
 12141                           
 12142                           ; BSR set to: 57
 12143                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 12144  0055E0  0012               	return		;funcret
 12145  0055E2                     __end_of_UART2_Initialize:
 12146                           	opt callstack 0
 12147                           
 12148 ;; *************** function _UART2_SetTxInterruptHandler *****************
 12149 ;; Defined at:
 12150 ;;		line 252 in file "mcc_generated_files/uart2.c"
 12151 ;; Parameters:    Size  Location     Type
 12152 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12153 ;;		 -> UART2_Transmit_ISR(1), 
 12154 ;; Auto vars:     Size  Location     Type
 12155 ;;		None
 12156 ;; Return value:  Size  Location     Type
 12157 ;;                  1  [STACK] void 
 12158 ;; Registers used:
 12159 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12160 ;; Tracked objects:
 12161 ;;		On entry : 3F/39
 12162 ;;		On exit  : 0/0
 12163 ;;		Unchanged: 0/0
 12164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12169 ;;Total ram usage:        0 bytes
 12170 ;; Hardware stack levels used:    1
 12171 ;; Hardware stack levels required when called:    3
 12172 ;; This function calls:
 12173 ;;		Nothing
 12174 ;; This function is called by:
 12175 ;;		_UART2_Initialize
 12176 ;; This function uses a reentrant model
 12177 ;;
 12178                           
 12179                           	psect	text52
 12180  005B8A                     __ptext52:
 12181                           	opt callstack 0
 12182  005B8A                     _UART2_SetTxInterruptHandler:
 12183                           	opt callstack 25
 12184                           
 12185                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 12186                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12187                           
 12188                           ; BSR set to: 57
 12189                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12190                           ;incstack = 0
 12191  005B8A  50E1               	movf	fsr1l,w,c
 12192  005B8C  0FFD               	addlw	-3
 12193  005B8E  6ED9               	movwf	fsr2l,c
 12194  005B90  50E2               	movf	fsr1h,w,c
 12195  005B92  6EDA               	movwf	fsr2h,c
 12196  005B94  0EFF               	movlw	255
 12197  005B96  22DA               	addwfc	fsr2h,f,c
 12198  005B98  006F FF78  F011    	movff	postinc2,_UART2_TxInterruptHandler
 12199  005B9E  006F FF78  F012    	movff	postinc2,_UART2_TxInterruptHandler+1
 12200  005BA4  006F FF74  F013    	movff	postdec2,_UART2_TxInterruptHandler+2
 12201                           
 12202                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 12203  005BAA  52E5               	movf	postdec1,f,c
 12204  005BAC  52E5               	movf	postdec1,f,c
 12205  005BAE  52E5               	movf	postdec1,f,c
 12206  005BB0  0012               	return		;funcret
 12207  005BB2                     __end_of_UART2_SetTxInterruptHandler:
 12208                           	opt callstack 0
 12209                           
 12210 ;; *************** function _UART2_SetRxInterruptHandler *****************
 12211 ;; Defined at:
 12212 ;;		line 248 in file "mcc_generated_files/uart2.c"
 12213 ;; Parameters:    Size  Location     Type
 12214 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12215 ;;		 -> UART2_Receive_ISR(1), 
 12216 ;; Auto vars:     Size  Location     Type
 12217 ;;		None
 12218 ;; Return value:  Size  Location     Type
 12219 ;;                  1  [STACK] void 
 12220 ;; Registers used:
 12221 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12222 ;; Tracked objects:
 12223 ;;		On entry : 3F/39
 12224 ;;		On exit  : 0/0
 12225 ;;		Unchanged: 0/0
 12226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12231 ;;Total ram usage:        0 bytes
 12232 ;; Hardware stack levels used:    1
 12233 ;; Hardware stack levels required when called:    3
 12234 ;; This function calls:
 12235 ;;		Nothing
 12236 ;; This function is called by:
 12237 ;;		_UART2_Initialize
 12238 ;; This function uses a reentrant model
 12239 ;;
 12240                           
 12241                           	psect	text53
 12242  005BB2                     __ptext53:
 12243                           	opt callstack 0
 12244  005BB2                     _UART2_SetRxInterruptHandler:
 12245                           	opt callstack 25
 12246                           
 12247                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 12248                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12249                           
 12250                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12251                           ;incstack = 0
 12252  005BB2  50E1               	movf	fsr1l,w,c
 12253  005BB4  0FFD               	addlw	-3
 12254  005BB6  6ED9               	movwf	fsr2l,c
 12255  005BB8  50E2               	movf	fsr1h,w,c
 12256  005BBA  6EDA               	movwf	fsr2h,c
 12257  005BBC  0EFF               	movlw	255
 12258  005BBE  22DA               	addwfc	fsr2h,f,c
 12259  005BC0  006F FF78  F014    	movff	postinc2,_UART2_RxInterruptHandler
 12260  005BC6  006F FF78  F015    	movff	postinc2,_UART2_RxInterruptHandler+1
 12261  005BCC  006F FF74  F016    	movff	postdec2,_UART2_RxInterruptHandler+2
 12262                           
 12263                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 12264  005BD2  52E5               	movf	postdec1,f,c
 12265  005BD4  52E5               	movf	postdec1,f,c
 12266  005BD6  52E5               	movf	postdec1,f,c
 12267  005BD8  0012               	return		;funcret
 12268  005BDA                     __end_of_UART2_SetRxInterruptHandler:
 12269                           	opt callstack 0
 12270                           
 12271 ;; *************** function _UART1_Initialize *****************
 12272 ;; Defined at:
 12273 ;;		line 78 in file "mcc_generated_files/uart1.c"
 12274 ;; Parameters:    Size  Location     Type
 12275 ;;		None
 12276 ;; Auto vars:     Size  Location     Type
 12277 ;;		None
 12278 ;; Return value:  Size  Location     Type
 12279 ;;                  1  [STACK] void 
 12280 ;; Registers used:
 12281 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 12282 ;; Tracked objects:
 12283 ;;		On entry : 3F/3C
 12284 ;;		On exit  : 3F/39
 12285 ;;		Unchanged: 0/0
 12286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12291 ;;Total ram usage:        0 bytes
 12292 ;; Hardware stack levels used:    1
 12293 ;; Hardware stack levels required when called:    4
 12294 ;; This function calls:
 12295 ;;		_UART1_SetRxInterruptHandler
 12296 ;;		_UART1_SetTxInterruptHandler
 12297 ;; This function is called by:
 12298 ;;		_SYSTEM_Initialize
 12299 ;; This function uses a reentrant model
 12300 ;;
 12301                           
 12302                           	psect	text54
 12303  0054BE                     __ptext54:
 12304                           	opt callstack 0
 12305  0054BE                     _UART1_Initialize:
 12306                           	opt callstack 25
 12307                           
 12308                           ;mcc_generated_files/uart1.c: 81:  PIE3bits.U1RXIE = 0;
 12309                           
 12310                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12311                           ;incstack = 0
 12312  0054BE  0139               	movlb	57	; () banked
 12313  0054C0  9793               	bcf	147,3,b	;volatile
 12314                           
 12315                           ; BSR set to: 57
 12316                           ;mcc_generated_files/uart1.c: 82:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 12317  0054C2  0ED4               	movlw	low _UART1_Receive_ISR
 12318  0054C4  6EE6               	movwf	postinc1,c
 12319  0054C6  0E5E               	movlw	high _UART1_Receive_ISR
 12320  0054C8  6EE6               	movwf	postinc1,c
 12321  0054CA  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 12322  0054CC  6EE6               	movwf	postinc1,c
 12323  0054CE  EC01  F02E         	call	_UART1_SetRxInterruptHandler	;wreg free
 12324                           
 12325                           ;mcc_generated_files/uart1.c: 83:  PIE3bits.U1TXIE = 0;
 12326  0054D2  0139               	movlb	57	; () banked
 12327  0054D4  9993               	bcf	147,4,b	;volatile
 12328                           
 12329                           ;mcc_generated_files/uart1.c: 84:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 12330  0054D6  0E3A               	movlw	low _UART1_Transmit_ISR
 12331  0054D8  6EE6               	movwf	postinc1,c
 12332  0054DA  0E5A               	movlw	high _UART1_Transmit_ISR
 12333  0054DC  6EE6               	movwf	postinc1,c
 12334  0054DE  0E00               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 12335  0054E0  6EE6               	movwf	postinc1,c
 12336  0054E2  ECED  F02D         	call	_UART1_SetTxInterruptHandler	;wreg free
 12337                           
 12338                           ;mcc_generated_files/uart1.c: 89:  U1P1L = 0x00;
 12339  0054E6  013D               	movlb	61	; () banked
 12340  0054E8  6BEC               	clrf	236,b	;volatile
 12341                           
 12342                           ; BSR set to: 61
 12343                           ;mcc_generated_files/uart1.c: 92:  U1P1H = 0x00;
 12344  0054EA  6BED               	clrf	237,b	;volatile
 12345                           
 12346                           ; BSR set to: 61
 12347                           ;mcc_generated_files/uart1.c: 95:  U1P2L = 0x00;
 12348  0054EC  6BEE               	clrf	238,b	;volatile
 12349                           
 12350                           ; BSR set to: 61
 12351                           ;mcc_generated_files/uart1.c: 98:  U1P2H = 0x00;
 12352  0054EE  6BEF               	clrf	239,b	;volatile
 12353                           
 12354                           ; BSR set to: 61
 12355                           ;mcc_generated_files/uart1.c: 101:  U1P3L = 0x00;
 12356  0054F0  6BF0               	clrf	240,b	;volatile
 12357                           
 12358                           ; BSR set to: 61
 12359                           ;mcc_generated_files/uart1.c: 104:  U1P3H = 0x00;
 12360  0054F2  6BF1               	clrf	241,b	;volatile
 12361                           
 12362                           ; BSR set to: 61
 12363                           ;mcc_generated_files/uart1.c: 107:  U1CON0 = 0xB0;
 12364  0054F4  0EB0               	movlw	176
 12365  0054F6  6FF2               	movwf	242,b	;volatile
 12366                           
 12367                           ; BSR set to: 61
 12368                           ;mcc_generated_files/uart1.c: 110:  U1CON1 = 0x80;
 12369  0054F8  0E80               	movlw	128
 12370  0054FA  6FF3               	movwf	243,b	;volatile
 12371                           
 12372                           ; BSR set to: 61
 12373                           ;mcc_generated_files/uart1.c: 113:  U1CON2 = 0x00;
 12374  0054FC  6BF4               	clrf	244,b	;volatile
 12375                           
 12376                           ; BSR set to: 61
 12377                           ;mcc_generated_files/uart1.c: 116:  U1BRGL = 0x82;
 12378  0054FE  0E82               	movlw	130
 12379  005500  6FF5               	movwf	245,b	;volatile
 12380                           
 12381                           ; BSR set to: 61
 12382                           ;mcc_generated_files/uart1.c: 119:  U1BRGH = 0x06;
 12383  005502  0E06               	movlw	6
 12384  005504  6FF6               	movwf	246,b	;volatile
 12385                           
 12386                           ; BSR set to: 61
 12387                           ;mcc_generated_files/uart1.c: 122:  U1FIFO = 0x00;
 12388  005506  6BF7               	clrf	247,b	;volatile
 12389                           
 12390                           ; BSR set to: 61
 12391                           ;mcc_generated_files/uart1.c: 125:  U1UIR = 0x00;
 12392  005508  6BF8               	clrf	248,b	;volatile
 12393                           
 12394                           ; BSR set to: 61
 12395                           ;mcc_generated_files/uart1.c: 128:  U1ERRIR = 0x00;
 12396  00550A  6BF9               	clrf	249,b	;volatile
 12397                           
 12398                           ; BSR set to: 61
 12399                           ;mcc_generated_files/uart1.c: 131:  U1ERRIE = 0x00;
 12400  00550C  6BFA               	clrf	250,b	;volatile
 12401                           
 12402                           ; BSR set to: 61
 12403                           ;mcc_generated_files/uart1.c: 135:  uart1TxHead = 0;
 12404  00550E  6A3A               	clrf	_uart1TxHead,c	;volatile
 12405                           
 12406                           ; BSR set to: 61
 12407                           ;mcc_generated_files/uart1.c: 136:  uart1TxTail = 0;
 12408  005510  6A39               	clrf	_uart1TxTail,c	;volatile
 12409                           
 12410                           ; BSR set to: 61
 12411                           ;mcc_generated_files/uart1.c: 137:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 12412  005512  0E40               	movlw	64
 12413  005514  6E38               	movwf	_uart1TxBufferRemaining,c	;volatile
 12414                           
 12415                           ; BSR set to: 61
 12416                           ;mcc_generated_files/uart1.c: 138:  uart1RxHead = 0;
 12417  005516  6A37               	clrf	_uart1RxHead,c	;volatile
 12418                           
 12419                           ; BSR set to: 61
 12420                           ;mcc_generated_files/uart1.c: 139:  uart1RxTail = 0;
 12421  005518  6A36               	clrf	_uart1RxTail,c	;volatile
 12422                           
 12423                           ; BSR set to: 61
 12424                           ;mcc_generated_files/uart1.c: 140:  uart1RxCount = 0;
 12425  00551A  6A35               	clrf	_uart1RxCount,c	;volatile
 12426                           
 12427                           ; BSR set to: 61
 12428                           ;mcc_generated_files/uart1.c: 143:  PIE3bits.U1RXIE = 1;
 12429  00551C  0139               	movlb	57	; () banked
 12430  00551E  8793               	bsf	147,3,b	;volatile
 12431                           
 12432                           ; BSR set to: 57
 12433                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 12434  005520  0012               	return		;funcret
 12435  005522                     __end_of_UART1_Initialize:
 12436                           	opt callstack 0
 12437                           
 12438 ;; *************** function _UART1_SetTxInterruptHandler *****************
 12439 ;; Defined at:
 12440 ;;		line 244 in file "mcc_generated_files/uart1.c"
 12441 ;; Parameters:    Size  Location     Type
 12442 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12443 ;;		 -> UART1_Transmit_ISR(1), 
 12444 ;; Auto vars:     Size  Location     Type
 12445 ;;		None
 12446 ;; Return value:  Size  Location     Type
 12447 ;;                  1  [STACK] void 
 12448 ;; Registers used:
 12449 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12450 ;; Tracked objects:
 12451 ;;		On entry : 3F/39
 12452 ;;		On exit  : 0/0
 12453 ;;		Unchanged: 0/0
 12454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12459 ;;Total ram usage:        0 bytes
 12460 ;; Hardware stack levels used:    1
 12461 ;; Hardware stack levels required when called:    3
 12462 ;; This function calls:
 12463 ;;		Nothing
 12464 ;; This function is called by:
 12465 ;;		_UART1_Initialize
 12466 ;; This function uses a reentrant model
 12467 ;;
 12468                           
 12469                           	psect	text55
 12470  005BDA                     __ptext55:
 12471                           	opt callstack 0
 12472  005BDA                     _UART1_SetTxInterruptHandler:
 12473                           	opt callstack 25
 12474                           
 12475                           ;mcc_generated_files/uart1.c: 244: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 245: {;mcc_generated_files/uart1.c: 246:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 12476                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12477                           
 12478                           ; BSR set to: 57
 12479                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12480                           ;incstack = 0
 12481  005BDA  50E1               	movf	fsr1l,w,c
 12482  005BDC  0FFD               	addlw	-3
 12483  005BDE  6ED9               	movwf	fsr2l,c
 12484  005BE0  50E2               	movf	fsr1h,w,c
 12485  005BE2  6EDA               	movwf	fsr2h,c
 12486  005BE4  0EFF               	movlw	255
 12487  005BE6  22DA               	addwfc	fsr2h,f,c
 12488  005BE8  006F FF78  F00B    	movff	postinc2,_UART1_TxInterruptHandler
 12489  005BEE  006F FF78  F00C    	movff	postinc2,_UART1_TxInterruptHandler+1
 12490  005BF4  006F FF74  F00D    	movff	postdec2,_UART1_TxInterruptHandler+2
 12491                           
 12492                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 12493  005BFA  52E5               	movf	postdec1,f,c
 12494  005BFC  52E5               	movf	postdec1,f,c
 12495  005BFE  52E5               	movf	postdec1,f,c
 12496  005C00  0012               	return		;funcret
 12497  005C02                     __end_of_UART1_SetTxInterruptHandler:
 12498                           	opt callstack 0
 12499                           
 12500 ;; *************** function _UART1_SetRxInterruptHandler *****************
 12501 ;; Defined at:
 12502 ;;		line 239 in file "mcc_generated_files/uart1.c"
 12503 ;; Parameters:    Size  Location     Type
 12504 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12505 ;;		 -> UART1_Receive_ISR(1), 
 12506 ;; Auto vars:     Size  Location     Type
 12507 ;;		None
 12508 ;; Return value:  Size  Location     Type
 12509 ;;                  1  [STACK] void 
 12510 ;; Registers used:
 12511 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12512 ;; Tracked objects:
 12513 ;;		On entry : 3F/39
 12514 ;;		On exit  : 0/0
 12515 ;;		Unchanged: 0/0
 12516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12521 ;;Total ram usage:        0 bytes
 12522 ;; Hardware stack levels used:    1
 12523 ;; Hardware stack levels required when called:    3
 12524 ;; This function calls:
 12525 ;;		Nothing
 12526 ;; This function is called by:
 12527 ;;		_UART1_Initialize
 12528 ;; This function uses a reentrant model
 12529 ;;
 12530                           
 12531                           	psect	text56
 12532  005C02                     __ptext56:
 12533                           	opt callstack 0
 12534  005C02                     _UART1_SetRxInterruptHandler:
 12535                           	opt callstack 25
 12536                           
 12537                           ;mcc_generated_files/uart1.c: 239: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 240: {;mcc_generated_files/uart1.c: 241:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 12538                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12539                           
 12540                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12541                           ;incstack = 0
 12542  005C02  50E1               	movf	fsr1l,w,c
 12543  005C04  0FFD               	addlw	-3
 12544  005C06  6ED9               	movwf	fsr2l,c
 12545  005C08  50E2               	movf	fsr1h,w,c
 12546  005C0A  6EDA               	movwf	fsr2h,c
 12547  005C0C  0EFF               	movlw	255
 12548  005C0E  22DA               	addwfc	fsr2h,f,c
 12549  005C10  006F FF78  F00E    	movff	postinc2,_UART1_RxInterruptHandler
 12550  005C16  006F FF78  F00F    	movff	postinc2,_UART1_RxInterruptHandler+1
 12551  005C1C  006F FF74  F010    	movff	postdec2,_UART1_RxInterruptHandler+2
 12552                           
 12553                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 12554  005C22  52E5               	movf	postdec1,f,c
 12555  005C24  52E5               	movf	postdec1,f,c
 12556  005C26  52E5               	movf	postdec1,f,c
 12557  005C28  0012               	return		;funcret
 12558  005C2A                     __end_of_UART1_SetRxInterruptHandler:
 12559                           	opt callstack 0
 12560                           
 12561 ;; *************** function _TMR6_Initialize *****************
 12562 ;; Defined at:
 12563 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 12564 ;; Parameters:    Size  Location     Type
 12565 ;;		None
 12566 ;; Auto vars:     Size  Location     Type
 12567 ;;		None
 12568 ;; Return value:  Size  Location     Type
 12569 ;;                  1  [STACK] void 
 12570 ;; Registers used:
 12571 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 12572 ;; Tracked objects:
 12573 ;;		On entry : 3F/39
 12574 ;;		On exit  : 0/0
 12575 ;;		Unchanged: 0/0
 12576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12581 ;;Total ram usage:        0 bytes
 12582 ;; Hardware stack levels used:    1
 12583 ;; Hardware stack levels required when called:    4
 12584 ;; This function calls:
 12585 ;;		_TMR6_SetInterruptHandler
 12586 ;; This function is called by:
 12587 ;;		_SYSTEM_Initialize
 12588 ;; This function uses a reentrant model
 12589 ;;
 12590                           
 12591                           	psect	text57
 12592  005C2A                     __ptext57:
 12593                           	opt callstack 0
 12594  005C2A                     _TMR6_Initialize:
 12595                           	opt callstack 25
 12596                           
 12597                           ;mcc_generated_files/tmr6.c: 75:  T6CLKCON = 0x01;
 12598                           
 12599                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12600                           ;incstack = 0
 12601  005C2A  0E01               	movlw	1
 12602  005C2C  6E96               	movwf	16278,c	;volatile
 12603                           
 12604                           ;mcc_generated_files/tmr6.c: 78:  T6HLT = 0x00;
 12605  005C2E  6A95               	clrf	16277,c	;volatile
 12606                           
 12607                           ;mcc_generated_files/tmr6.c: 81:  T6RST = 0x00;
 12608  005C30  6A97               	clrf	16279,c	;volatile
 12609                           
 12610                           ;mcc_generated_files/tmr6.c: 84:  T6PR = 0x03;
 12611  005C32  0E03               	movlw	3
 12612  005C34  6E93               	movwf	16275,c	;volatile
 12613                           
 12614                           ;mcc_generated_files/tmr6.c: 87:  T6TMR = 0x00;
 12615  005C36  6A92               	clrf	16274,c	;volatile
 12616                           
 12617                           ;mcc_generated_files/tmr6.c: 90:  PIR9bits.TMR6IF = 0;
 12618  005C38  0139               	movlb	57	; () banked
 12619  005C3A  91A9               	bcf	169,0,b	;volatile
 12620                           
 12621                           ; BSR set to: 57
 12622                           ;mcc_generated_files/tmr6.c: 93:  PIE9bits.TMR6IE = 1;
 12623  005C3C  8199               	bsf	153,0,b	;volatile
 12624                           
 12625                           ; BSR set to: 57
 12626                           ;mcc_generated_files/tmr6.c: 96:  TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler)
      +                          ;
 12627  005C3E  0EAE               	movlw	low _TMR6_DefaultInterruptHandler
 12628  005C40  6EE6               	movwf	postinc1,c
 12629  005C42  0E57               	movlw	high _TMR6_DefaultInterruptHandler
 12630  005C44  6EE6               	movwf	postinc1,c
 12631  005C46  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 12632  005C48  6EE6               	movwf	postinc1,c
 12633  005C4A  EC29  F02E         	call	_TMR6_SetInterruptHandler	;wreg free
 12634                           
 12635                           ;mcc_generated_files/tmr6.c: 99:  T6CON = 0xFF;
 12636  005C4E  6894               	setf	16276,c	;volatile
 12637                           
 12638                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12639  005C50  0012               	return		;funcret
 12640  005C52                     __end_of_TMR6_Initialize:
 12641                           	opt callstack 0
 12642                           
 12643 ;; *************** function _TMR6_SetInterruptHandler *****************
 12644 ;; Defined at:
 12645 ;;		line 191 in file "mcc_generated_files/tmr6.c"
 12646 ;; Parameters:    Size  Location     Type
 12647 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12648 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 12649 ;; Auto vars:     Size  Location     Type
 12650 ;;		None
 12651 ;; Return value:  Size  Location     Type
 12652 ;;                  1  [STACK] void 
 12653 ;; Registers used:
 12654 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12655 ;; Tracked objects:
 12656 ;;		On entry : 3F/39
 12657 ;;		On exit  : 0/0
 12658 ;;		Unchanged: 0/0
 12659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12664 ;;Total ram usage:        0 bytes
 12665 ;; Hardware stack levels used:    1
 12666 ;; Hardware stack levels required when called:    3
 12667 ;; This function calls:
 12668 ;;		Nothing
 12669 ;; This function is called by:
 12670 ;;		_TMR6_Initialize
 12671 ;; This function uses a reentrant model
 12672 ;;
 12673                           
 12674                           	psect	text58
 12675  005C52                     __ptext58:
 12676                           	opt callstack 0
 12677  005C52                     _TMR6_SetInterruptHandler:
 12678                           	opt callstack 25
 12679                           
 12680                           ;mcc_generated_files/tmr6.c: 191: void TMR6_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr6.c: 192: {;mcc_generated_files/tmr6.c: 193:  TMR6_Inter
      +                          ruptHandler = InterruptHandler;
 12681                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12682                           
 12683                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12684                           ;incstack = 0
 12685  005C52  50E1               	movf	fsr1l,w,c
 12686  005C54  0FFD               	addlw	-3
 12687  005C56  6ED9               	movwf	fsr2l,c
 12688  005C58  50E2               	movf	fsr1h,w,c
 12689  005C5A  6EDA               	movwf	fsr2h,c
 12690  005C5C  0EFF               	movlw	255
 12691  005C5E  22DA               	addwfc	fsr2h,f,c
 12692  005C60  006F FF78  F093    	movff	postinc2,_TMR6_InterruptHandler
 12693  005C66  006F FF78  F094    	movff	postinc2,_TMR6_InterruptHandler+1
 12694  005C6C  006F FF74  F095    	movff	postdec2,_TMR6_InterruptHandler+2
 12695                           
 12696                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 12697  005C72  52E5               	movf	postdec1,f,c
 12698  005C74  52E5               	movf	postdec1,f,c
 12699  005C76  52E5               	movf	postdec1,f,c
 12700  005C78  0012               	return		;funcret
 12701  005C7A                     __end_of_TMR6_SetInterruptHandler:
 12702                           	opt callstack 0
 12703                           
 12704 ;; *************** function _TMR5_Initialize *****************
 12705 ;; Defined at:
 12706 ;;		line 66 in file "mcc_generated_files/tmr5.c"
 12707 ;; Parameters:    Size  Location     Type
 12708 ;;		None
 12709 ;; Auto vars:     Size  Location     Type
 12710 ;;		None
 12711 ;; Return value:  Size  Location     Type
 12712 ;;                  1  [STACK] void 
 12713 ;; Registers used:
 12714 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 12715 ;; Tracked objects:
 12716 ;;		On entry : 3F/3C
 12717 ;;		On exit  : 0/0
 12718 ;;		Unchanged: 0/0
 12719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12724 ;;Total ram usage:        0 bytes
 12725 ;; Hardware stack levels used:    1
 12726 ;; Hardware stack levels required when called:    4
 12727 ;; This function calls:
 12728 ;;		_TMR5_SetInterruptHandler
 12729 ;; This function is called by:
 12730 ;;		_SYSTEM_Initialize
 12731 ;; This function uses a reentrant model
 12732 ;;
 12733                           
 12734                           	psect	text59
 12735  005768                     __ptext59:
 12736                           	opt callstack 0
 12737  005768                     _TMR5_Initialize:
 12738                           	opt callstack 25
 12739                           
 12740                           ;mcc_generated_files/tmr5.c: 71:  T5GCON = 0x00;
 12741                           
 12742                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12743                           ;incstack = 0
 12744  005768  6A9B               	clrf	16283,c	;volatile
 12745                           
 12746                           ;mcc_generated_files/tmr5.c: 74:  T5GATE = 0x00;
 12747  00576A  6A9C               	clrf	16284,c	;volatile
 12748                           
 12749                           ;mcc_generated_files/tmr5.c: 77:  T5CLK = 0x01;
 12750  00576C  0E01               	movlw	1
 12751  00576E  6E9D               	movwf	16285,c	;volatile
 12752                           
 12753                           ;mcc_generated_files/tmr5.c: 80:  TMR5H = 0x63;
 12754  005770  0E63               	movlw	99
 12755  005772  6E99               	movwf	16281,c	;volatile
 12756                           
 12757                           ;mcc_generated_files/tmr5.c: 83:  TMR5L = 0xC0;
 12758  005774  0EC0               	movlw	192
 12759  005776  6E98               	movwf	16280,c	;volatile
 12760                           
 12761                           ;mcc_generated_files/tmr5.c: 86:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 12762  005778  5098               	movf	16280,w,c	;volatile
 12763  00577A  006F FE64  F03B    	movff	16281,btemp	;volatile
 12764  005780  6A3C               	clrf	btemp+1,c
 12765  005782  0060  F0EC  F03C   	movff	btemp,btemp+1
 12766  005788  6A3B               	clrf	btemp,c
 12767  00578A  103B               	iorwf	btemp,w,c
 12768  00578C  6E28               	movwf	_timer5ReloadVal,c	;volatile
 12769  00578E  503C               	movf	btemp+1,w,c
 12770  005790  6E29               	movwf	_timer5ReloadVal+1,c	;volatile
 12771                           
 12772                           ;mcc_generated_files/tmr5.c: 89:  PIR8bits.TMR5IF = 0;
 12773  005792  0139               	movlb	57	; () banked
 12774  005794  9DA8               	bcf	168,6,b	;volatile
 12775                           
 12776                           ; BSR set to: 57
 12777                           ;mcc_generated_files/tmr5.c: 92:  PIE8bits.TMR5IE = 1;
 12778  005796  8D98               	bsf	152,6,b	;volatile
 12779                           
 12780                           ; BSR set to: 57
 12781                           ;mcc_generated_files/tmr5.c: 95:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 12782  005798  0EBA               	movlw	low _TMR5_DefaultInterruptHandler
 12783  00579A  6EE6               	movwf	postinc1,c
 12784  00579C  0E5F               	movlw	high _TMR5_DefaultInterruptHandler
 12785  00579E  6EE6               	movwf	postinc1,c
 12786  0057A0  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 12787  0057A2  6EE6               	movwf	postinc1,c
 12788  0057A4  EC3D  F02E         	call	_TMR5_SetInterruptHandler	;wreg free
 12789                           
 12790                           ;mcc_generated_files/tmr5.c: 98:  T5CON = 0x31;
 12791  0057A8  0E31               	movlw	49
 12792  0057AA  6E9A               	movwf	16282,c	;volatile
 12793                           
 12794                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12795  0057AC  0012               	return		;funcret
 12796  0057AE                     __end_of_TMR5_Initialize:
 12797                           	opt callstack 0
 12798                           
 12799 ;; *************** function _TMR5_SetInterruptHandler *****************
 12800 ;; Defined at:
 12801 ;;		line 189 in file "mcc_generated_files/tmr5.c"
 12802 ;; Parameters:    Size  Location     Type
 12803 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12804 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 12805 ;; Auto vars:     Size  Location     Type
 12806 ;;		None
 12807 ;; Return value:  Size  Location     Type
 12808 ;;                  1  [STACK] void 
 12809 ;; Registers used:
 12810 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12811 ;; Tracked objects:
 12812 ;;		On entry : 3F/39
 12813 ;;		On exit  : 0/0
 12814 ;;		Unchanged: 0/0
 12815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12820 ;;Total ram usage:        0 bytes
 12821 ;; Hardware stack levels used:    1
 12822 ;; Hardware stack levels required when called:    3
 12823 ;; This function calls:
 12824 ;;		Nothing
 12825 ;; This function is called by:
 12826 ;;		_TMR5_Initialize
 12827 ;; This function uses a reentrant model
 12828 ;;
 12829                           
 12830                           	psect	text60
 12831  005C7A                     __ptext60:
 12832                           	opt callstack 0
 12833  005C7A                     _TMR5_SetInterruptHandler:
 12834                           	opt callstack 25
 12835                           
 12836                           ;mcc_generated_files/tmr5.c: 189: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 190: {;mcc_generated_files/tmr5.c: 191:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 12837                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12838                           
 12839                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12840                           ;incstack = 0
 12841  005C7A  50E1               	movf	fsr1l,w,c
 12842  005C7C  0FFD               	addlw	-3
 12843  005C7E  6ED9               	movwf	fsr2l,c
 12844  005C80  50E2               	movf	fsr1h,w,c
 12845  005C82  6EDA               	movwf	fsr2h,c
 12846  005C84  0EFF               	movlw	255
 12847  005C86  22DA               	addwfc	fsr2h,f,c
 12848  005C88  006F FF78  F090    	movff	postinc2,_TMR5_InterruptHandler
 12849  005C8E  006F FF78  F091    	movff	postinc2,_TMR5_InterruptHandler+1
 12850  005C94  006F FF74  F092    	movff	postdec2,_TMR5_InterruptHandler+2
 12851                           
 12852                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 12853  005C9A  52E5               	movf	postdec1,f,c
 12854  005C9C  52E5               	movf	postdec1,f,c
 12855  005C9E  52E5               	movf	postdec1,f,c
 12856  005CA0  0012               	return		;funcret
 12857  005CA2                     __end_of_TMR5_SetInterruptHandler:
 12858                           	opt callstack 0
 12859                           
 12860 ;; *************** function _SPI1_Initialize *****************
 12861 ;; Defined at:
 12862 ;;		line 64 in file "mcc_generated_files/spi1.c"
 12863 ;; Parameters:    Size  Location     Type
 12864 ;;		None
 12865 ;; Auto vars:     Size  Location     Type
 12866 ;;		None
 12867 ;; Return value:  Size  Location     Type
 12868 ;;                  1  [STACK] void 
 12869 ;; Registers used:
 12870 ;;		wreg, status,2
 12871 ;; Tracked objects:
 12872 ;;		On entry : 3F/39
 12873 ;;		On exit  : 3F/3D
 12874 ;;		Unchanged: 0/0
 12875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12880 ;;Total ram usage:        0 bytes
 12881 ;; Hardware stack levels used:    1
 12882 ;; Hardware stack levels required when called:    3
 12883 ;; This function calls:
 12884 ;;		Nothing
 12885 ;; This function is called by:
 12886 ;;		_SYSTEM_Initialize
 12887 ;; This function uses a reentrant model
 12888 ;;
 12889                           
 12890                           	psect	text61
 12891  005FD4                     __ptext61:
 12892                           	opt callstack 0
 12893  005FD4                     _SPI1_Initialize:
 12894                           	opt callstack 26
 12895                           
 12896                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 12897                           
 12898                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12899                           ;incstack = 0
 12900  005FD4  0E40               	movlw	64
 12901  005FD6  013D               	movlb	61	; () banked
 12902  005FD8  6F15               	movwf	21,b	;volatile
 12903                           
 12904                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 12905  005FDA  0E03               	movlw	3
 12906  005FDC  6F16               	movwf	22,b	;volatile
 12907                           
 12908                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 12909  005FDE  0E4F               	movlw	79
 12910  005FE0  6F19               	movwf	25,b	;volatile
 12911                           
 12912                           ; BSR set to: 61
 12913                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 12914  005FE2  6B1C               	clrf	28,b	;volatile
 12915                           
 12916                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 12917  005FE4  0E83               	movlw	131
 12918  005FE6  6F14               	movwf	20,b	;volatile
 12919                           
 12920                           ; BSR set to: 61
 12921                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12922  005FE8  0012               	return		;funcret
 12923  005FEA                     __end_of_SPI1_Initialize:
 12924                           	opt callstack 0
 12925                           
 12926 ;; *************** function _PMD_Initialize *****************
 12927 ;; Defined at:
 12928 ;;		line 88 in file "mcc_generated_files/mcc.c"
 12929 ;; Parameters:    Size  Location     Type
 12930 ;;		None
 12931 ;; Auto vars:     Size  Location     Type
 12932 ;;		None
 12933 ;; Return value:  Size  Location     Type
 12934 ;;                  1  [STACK] void 
 12935 ;; Registers used:
 12936 ;;		None
 12937 ;; Tracked objects:
 12938 ;;		On entry : 3F/39
 12939 ;;		On exit  : 3F/39
 12940 ;;		Unchanged: 0/0
 12941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12946 ;;Total ram usage:        0 bytes
 12947 ;; Hardware stack levels used:    1
 12948 ;; Hardware stack levels required when called:    3
 12949 ;; This function calls:
 12950 ;;		Nothing
 12951 ;; This function is called by:
 12952 ;;		_SYSTEM_Initialize
 12953 ;; This function uses a reentrant model
 12954 ;;
 12955                           
 12956                           	psect	text62
 12957  006000                     __ptext62:
 12958                           	opt callstack 0
 12959  006000                     _PMD_Initialize:
 12960                           	opt callstack 26
 12961                           
 12962                           ;mcc_generated_files/mcc.c: 91:     PMD0 = 0x00;
 12963                           
 12964                           ; BSR set to: 61
 12965                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12966                           ;incstack = 0
 12967  006000  0139               	movlb	57	; () banked
 12968  006002  6BC0               	clrf	192,b	;volatile
 12969                           
 12970                           ;mcc_generated_files/mcc.c: 93:     PMD1 = 0x00;
 12971  006004  6BC1               	clrf	193,b	;volatile
 12972                           
 12973                           ;mcc_generated_files/mcc.c: 95:     PMD2 = 0x00;
 12974  006006  6BC2               	clrf	194,b	;volatile
 12975                           
 12976                           ;mcc_generated_files/mcc.c: 97:     PMD3 = 0x00;
 12977  006008  6BC3               	clrf	195,b	;volatile
 12978                           
 12979                           ;mcc_generated_files/mcc.c: 99:     PMD4 = 0x00;
 12980  00600A  6BC4               	clrf	196,b	;volatile
 12981                           
 12982                           ;mcc_generated_files/mcc.c: 101:     PMD5 = 0x00;
 12983  00600C  6BC5               	clrf	197,b	;volatile
 12984                           
 12985                           ;mcc_generated_files/mcc.c: 103:     PMD6 = 0x00;
 12986  00600E  6BC6               	clrf	198,b	;volatile
 12987                           
 12988                           ;mcc_generated_files/mcc.c: 105:     PMD7 = 0x00;
 12989  006010  6BC7               	clrf	199,b	;volatile
 12990                           
 12991                           ; BSR set to: 57
 12992                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 12993  006012  0012               	return		;funcret
 12994  006014                     __end_of_PMD_Initialize:
 12995                           	opt callstack 0
 12996                           
 12997 ;; *************** function _PIN_MANAGER_Initialize *****************
 12998 ;; Defined at:
 12999 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 13000 ;; Parameters:    Size  Location     Type
 13001 ;;		None
 13002 ;; Auto vars:     Size  Location     Type
 13003 ;;		None
 13004 ;; Return value:  Size  Location     Type
 13005 ;;                  1  [STACK] void 
 13006 ;; Registers used:
 13007 ;;		wreg, status,2
 13008 ;; Tracked objects:
 13009 ;;		On entry : 3F/39
 13010 ;;		On exit  : 3F/3A
 13011 ;;		Unchanged: 0/0
 13012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13017 ;;Total ram usage:        0 bytes
 13018 ;; Hardware stack levels used:    1
 13019 ;; Hardware stack levels required when called:    3
 13020 ;; This function calls:
 13021 ;;		Nothing
 13022 ;; This function is called by:
 13023 ;;		_SYSTEM_Initialize
 13024 ;; This function uses a reentrant model
 13025 ;;
 13026                           
 13027                           	psect	text63
 13028  005068                     __ptext63:
 13029                           	opt callstack 0
 13030  005068                     _PIN_MANAGER_Initialize:
 13031                           	opt callstack 26
 13032                           
 13033                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 13034                           
 13035                           ; BSR set to: 57
 13036                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13037                           ;incstack = 0
 13038  005068  0E07               	movlw	7
 13039  00506A  6EBE               	movwf	16318,c	;volatile
 13040                           
 13041                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 13042  00506C  6ABD               	clrf	16317,c	;volatile
 13043                           
 13044                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 13045  00506E  6ABA               	clrf	16314,c	;volatile
 13046                           
 13047                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 13048  005070  6ABF               	clrf	16319,c	;volatile
 13049                           
 13050                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 13051  005072  6ABB               	clrf	16315,c	;volatile
 13052                           
 13053                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x06;
 13054  005074  0E06               	movlw	6
 13055  005076  6EBC               	movwf	16316,c	;volatile
 13056                           
 13057                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 13058  005078  6AC6               	clrf	16326,c	;volatile
 13059                           
 13060                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0xFF;
 13061  00507A  68C7               	setf	16327,c	;volatile
 13062                           
 13063                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0x8F;
 13064  00507C  0E8F               	movlw	143
 13065  00507E  6EC2               	movwf	16322,c	;volatile
 13066                           
 13067                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 13068  005080  0EBF               	movlw	191
 13069  005082  6EC3               	movwf	16323,c	;volatile
 13070                           
 13071                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x91;
 13072  005084  0E91               	movlw	145
 13073  005086  6EC4               	movwf	16324,c	;volatile
 13074                           
 13075                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0xFC;
 13076  005088  0EFC               	movlw	252
 13077  00508A  6EC5               	movwf	16325,c	;volatile
 13078                           
 13079                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0xF0;
 13080  00508C  0EF0               	movlw	240
 13081  00508E  013A               	movlb	58	; () banked
 13082  005090  6F70               	movwf	112,b	;volatile
 13083                           
 13084                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x01;
 13085  005092  0E01               	movlw	1
 13086  005094  6F60               	movwf	96,b	;volatile
 13087                           
 13088                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x38;
 13089  005096  0E38               	movlw	56
 13090  005098  6F50               	movwf	80,b	;volatile
 13091                           
 13092                           ; BSR set to: 58
 13093                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 13094  00509A  6B80               	clrf	128,b	;volatile
 13095                           
 13096                           ; BSR set to: 58
 13097                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0xFF;
 13098  00509C  6990               	setf	144,b	;volatile
 13099                           
 13100                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0x8F;
 13101  00509E  0E8F               	movlw	143
 13102  0050A0  6F40               	movwf	64,b	;volatile
 13103                           
 13104                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 13105  0050A2  0E0C               	movlw	12
 13106  0050A4  6F71               	movwf	113,b	;volatile
 13107                           
 13108                           ; BSR set to: 58
 13109                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x00;
 13110  0050A6  6B91               	clrf	145,b	;volatile
 13111                           
 13112                           ; BSR set to: 58
 13113                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 13114  0050A8  6B81               	clrf	129,b	;volatile
 13115                           
 13116                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 13117  0050AA  0E87               	movlw	135
 13118  0050AC  6F51               	movwf	81,b	;volatile
 13119                           
 13120                           ; BSR set to: 58
 13121                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 13122  0050AE  6B41               	clrf	65,b	;volatile
 13123                           
 13124                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x90;
 13125  0050B0  0E90               	movlw	144
 13126  0050B2  6F61               	movwf	97,b	;volatile
 13127                           
 13128                           ; BSR set to: 58
 13129                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 13130  0050B4  6B82               	clrf	130,b	;volatile
 13131                           
 13132                           ; BSR set to: 58
 13133                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 13134  0050B6  6B92               	clrf	146,b	;volatile
 13135                           
 13136                           ; BSR set to: 58
 13137                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 13138  0050B8  6B42               	clrf	66,b	;volatile
 13139                           
 13140                           ; BSR set to: 58
 13141                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 13142  0050BA  6B52               	clrf	82,b	;volatile
 13143                           
 13144                           ; BSR set to: 58
 13145                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 13146  0050BC  6B62               	clrf	98,b	;volatile
 13147                           
 13148                           ; BSR set to: 58
 13149                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 13150  0050BE  6B72               	clrf	114,b	;volatile
 13151                           
 13152                           ; BSR set to: 58
 13153                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 13154  0050C0  6943               	setf	67,b	;volatile
 13155                           
 13156                           ; BSR set to: 58
 13157                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 13158  0050C2  6953               	setf	83,b	;volatile
 13159                           
 13160                           ; BSR set to: 58
 13161                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 13162  0050C4  6963               	setf	99,b	;volatile
 13163                           
 13164                           ; BSR set to: 58
 13165                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 13166  0050C6  6973               	setf	115,b	;volatile
 13167                           
 13168                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 13169  0050C8  0E07               	movlw	7
 13170  0050CA  6F83               	movwf	131,b	;volatile
 13171                           
 13172                           ; BSR set to: 58
 13173                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 13174  0050CC  6993               	setf	147,b	;volatile
 13175                           
 13176                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 13177  0050CE  0E0F               	movlw	15
 13178  0050D0  6FE8               	movwf	232,b	;volatile
 13179                           
 13180                           ;mcc_generated_files/pin_manager.c: 127:     RB6PPS = 0x16;
 13181  0050D2  0E16               	movlw	22
 13182  0050D4  6F0E               	movwf	14,b	;volatile
 13183                           
 13184                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x1E;
 13185  0050D6  0E1E               	movlw	30
 13186  0050D8  6F13               	movwf	19,b	;volatile
 13187                           
 13188                           ;mcc_generated_files/pin_manager.c: 129:     INT0PPS = 0x08;
 13189  0050DA  0E08               	movlw	8
 13190  0050DC  6FC0               	movwf	192,b	;volatile
 13191                           
 13192                           ;mcc_generated_files/pin_manager.c: 130:     INT2PPS = 0x0A;
 13193  0050DE  0E0A               	movlw	10
 13194  0050E0  6FC2               	movwf	194,b	;volatile
 13195                           
 13196                           ;mcc_generated_files/pin_manager.c: 131:     INT1PPS = 0x09;
 13197  0050E2  0E09               	movlw	9
 13198  0050E4  6FC1               	movwf	193,b	;volatile
 13199                           
 13200                           ;mcc_generated_files/pin_manager.c: 132:     U1RXPPS = 0x17;
 13201  0050E6  0E17               	movlw	23
 13202  0050E8  6FE5               	movwf	229,b	;volatile
 13203                           
 13204                           ;mcc_generated_files/pin_manager.c: 133:     SPI1SCKPPS = 0x13;
 13205  0050EA  0E13               	movlw	19
 13206  0050EC  6FDE               	movwf	222,b	;volatile
 13207                           
 13208                           ;mcc_generated_files/pin_manager.c: 134:     RA4PPS = 0x01;
 13209  0050EE  0E01               	movlw	1
 13210  0050F0  6F04               	movwf	4,b	;volatile
 13211                           
 13212                           ;mcc_generated_files/pin_manager.c: 135:     RA5PPS = 0x26;
 13213  0050F2  0E26               	movlw	38
 13214  0050F4  6F05               	movwf	5,b	;volatile
 13215                           
 13216                           ;mcc_generated_files/pin_manager.c: 136:     RA6PPS = 0x28;
 13217  0050F6  0E28               	movlw	40
 13218  0050F8  6F06               	movwf	6,b	;volatile
 13219                           
 13220                           ;mcc_generated_files/pin_manager.c: 137:     RC5PPS = 0x1F;
 13221  0050FA  0E1F               	movlw	31
 13222  0050FC  6F15               	movwf	21,b	;volatile
 13223                           
 13224                           ;mcc_generated_files/pin_manager.c: 138:     RC6PPS = 0x13;
 13225  0050FE  0E13               	movlw	19
 13226  005100  6F16               	movwf	22,b	;volatile
 13227                           
 13228                           ;mcc_generated_files/pin_manager.c: 139:     SPI1SDIPPS = 0x14;
 13229  005102  0E14               	movlw	20
 13230  005104  6FDF               	movwf	223,b	;volatile
 13231                           
 13232                           ; BSR set to: 58
 13233                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 13234  005106  0012               	return		;funcret
 13235  005108                     __end_of_PIN_MANAGER_Initialize:
 13236                           	opt callstack 0
 13237                           
 13238 ;; *************** function _OSCILLATOR_Initialize *****************
 13239 ;; Defined at:
 13240 ;;		line 70 in file "mcc_generated_files/mcc.c"
 13241 ;; Parameters:    Size  Location     Type
 13242 ;;		None
 13243 ;; Auto vars:     Size  Location     Type
 13244 ;;		None
 13245 ;; Return value:  Size  Location     Type
 13246 ;;                  1  [STACK] void 
 13247 ;; Registers used:
 13248 ;;		wreg, status,2
 13249 ;; Tracked objects:
 13250 ;;		On entry : 3F/3A
 13251 ;;		On exit  : 3F/39
 13252 ;;		Unchanged: 0/0
 13253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13258 ;;Total ram usage:        0 bytes
 13259 ;; Hardware stack levels used:    1
 13260 ;; Hardware stack levels required when called:    3
 13261 ;; This function calls:
 13262 ;;		Nothing
 13263 ;; This function is called by:
 13264 ;;		_SYSTEM_Initialize
 13265 ;; This function uses a reentrant model
 13266 ;;
 13267                           
 13268                           	psect	text64
 13269  005FEA                     __ptext64:
 13270                           	opt callstack 0
 13271  005FEA                     _OSCILLATOR_Initialize:
 13272                           	opt callstack 26
 13273                           
 13274                           ;mcc_generated_files/mcc.c: 73:     OSCCON1 = 0x20;
 13275                           
 13276                           ; BSR set to: 58
 13277                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13278                           ;incstack = 0
 13279  005FEA  0E20               	movlw	32
 13280  005FEC  0139               	movlb	57	; () banked
 13281  005FEE  6FD9               	movwf	217,b	;volatile
 13282                           
 13283                           ; BSR set to: 57
 13284                           ;mcc_generated_files/mcc.c: 75:     OSCCON3 = 0x00;
 13285  005FF0  6BDB               	clrf	219,b	;volatile
 13286                           
 13287                           ; BSR set to: 57
 13288                           ;mcc_generated_files/mcc.c: 77:     OSCEN = 0x00;
 13289  005FF2  6BDD               	clrf	221,b	;volatile
 13290                           
 13291                           ;mcc_generated_files/mcc.c: 79:     OSCFRQ = 0x02;
 13292  005FF4  0E02               	movlw	2
 13293  005FF6  6FDF               	movwf	223,b	;volatile
 13294                           
 13295                           ; BSR set to: 57
 13296                           ;mcc_generated_files/mcc.c: 81:     OSCTUNE = 0x00;
 13297  005FF8  6BDE               	clrf	222,b	;volatile
 13298  005FFA                     l194:
 13299                           
 13300                           ; BSR set to: 57
 13301                           ;mcc_generated_files/mcc.c: 83:     while(PLLR == 0)
 13302  005FFA  B1DC               	btfsc	220,0,b	;volatile
 13303  005FFC  0012               	return	
 13304  005FFE  D7FD               	goto	l194
 13305  006000                     __end_of_OSCILLATOR_Initialize:
 13306                           	opt callstack 0
 13307                           
 13308 ;; *************** function _NCO1_Initialize *****************
 13309 ;; Defined at:
 13310 ;;		line 58 in file "mcc_generated_files/nco1.c"
 13311 ;; Parameters:    Size  Location     Type
 13312 ;;		None
 13313 ;; Auto vars:     Size  Location     Type
 13314 ;;		None
 13315 ;; Return value:  Size  Location     Type
 13316 ;;                  1  [STACK] void 
 13317 ;; Registers used:
 13318 ;;		wreg, status,2
 13319 ;; Tracked objects:
 13320 ;;		On entry : 0/39
 13321 ;;		On exit  : 3F/3F
 13322 ;;		Unchanged: 0/0
 13323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13328 ;;Total ram usage:        0 bytes
 13329 ;; Hardware stack levels used:    1
 13330 ;; Hardware stack levels required when called:    3
 13331 ;; This function calls:
 13332 ;;		Nothing
 13333 ;; This function is called by:
 13334 ;;		_SYSTEM_Initialize
 13335 ;; This function uses a reentrant model
 13336 ;;
 13337                           
 13338                           	psect	text65
 13339  005F4E                     __ptext65:
 13340                           	opt callstack 0
 13341  005F4E                     _NCO1_Initialize:
 13342                           	opt callstack 26
 13343                           
 13344                           ;mcc_generated_files/nco1.c: 62:     NCO1CON = 0x00;
 13345                           
 13346                           ; BSR set to: 57
 13347                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13348                           ;incstack = 0
 13349  005F4E  013F               	movlb	63	; () banked
 13350  005F50  6B3E               	clrf	62,b	;volatile
 13351                           
 13352                           ;mcc_generated_files/nco1.c: 64:     NCO1CLK = 0x00;
 13353  005F52  6B3F               	clrf	63,b	;volatile
 13354                           
 13355                           ;mcc_generated_files/nco1.c: 66:     NCO1ACCU = 0x00;
 13356  005F54  6B3A               	clrf	58,b	;volatile
 13357                           
 13358                           ;mcc_generated_files/nco1.c: 68:     NCO1ACCH = 0x00;
 13359  005F56  6B39               	clrf	57,b	;volatile
 13360                           
 13361                           ;mcc_generated_files/nco1.c: 70:     NCO1ACCL = 0x00;
 13362  005F58  6B38               	clrf	56,b	;volatile
 13363                           
 13364                           ; BSR set to: 63
 13365                           ;mcc_generated_files/nco1.c: 72:     NCO1INCU = 0x06;
 13366  005F5A  0E06               	movlw	6
 13367  005F5C  6F3D               	movwf	61,b	;volatile
 13368                           
 13369                           ;mcc_generated_files/nco1.c: 74:     NCO1INCH = 0xC7;
 13370  005F5E  0EC7               	movlw	199
 13371  005F60  6F3C               	movwf	60,b	;volatile
 13372                           
 13373                           ;mcc_generated_files/nco1.c: 76:     NCO1INCL = 0xAE;
 13374  005F62  0EAE               	movlw	174
 13375  005F64  6F3B               	movwf	59,b	;volatile
 13376                           
 13377                           ; BSR set to: 63
 13378                           ;mcc_generated_files/nco1.c: 79:     NCO1CONbits.EN = 1;
 13379  005F66  8F3E               	bsf	62,7,b	;volatile
 13380                           
 13381                           ; BSR set to: 63
 13382                           ; _NCO1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 13383  005F68  0012               	return		;funcret
 13384  005F6A                     __end_of_NCO1_Initialize:
 13385                           	opt callstack 0
 13386                           
 13387 ;; *************** function _INTERRUPT_Initialize *****************
 13388 ;; Defined at:
 13389 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 13390 ;; Parameters:    Size  Location     Type
 13391 ;;		None
 13392 ;; Auto vars:     Size  Location     Type
 13393 ;;  state           1  [STACK] _Bool 
 13394 ;; Return value:  Size  Location     Type
 13395 ;;                  1  [STACK] void 
 13396 ;; Registers used:
 13397 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 13398 ;; Tracked objects:
 13399 ;;		On entry : 0/0
 13400 ;;		On exit  : 3F/39
 13401 ;;		Unchanged: 0/0
 13402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13407 ;;Total ram usage:        0 bytes
 13408 ;; Hardware stack levels used:    1
 13409 ;; Hardware stack levels required when called:    3
 13410 ;; This function calls:
 13411 ;;		Nothing
 13412 ;; This function is called by:
 13413 ;;		_SYSTEM_Initialize
 13414 ;; This function uses a reentrant model
 13415 ;;
 13416                           
 13417                           	psect	text66
 13418  005458                     __ptext66:
 13419                           	opt callstack 0
 13420  005458                     _INTERRUPT_Initialize:
 13421                           	opt callstack 0
 13422                           
 13423                           ; BSR set to: 63
 13424                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13425  005458  52E6               	movf	postinc1,f,c
 13426                           
 13427                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 13428                           
 13429                           ;incstack = 0
 13430  00545A  8AD2               	bsf	16338,5,c	;volatile
 13431                           
 13432                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 13433  00545C  AED2               	btfss	16338,7,c	;volatile
 13434  00545E  D003               	goto	u940
 13435  005460  6A46               	clrf	btemp+11,c
 13436  005462  2A46               	incf	btemp+11,f,c
 13437  005464  D001               	goto	u958
 13438  005466                     u940:
 13439  005466  6A46               	clrf	btemp+11,c
 13440  005468                     u958:
 13441                           
 13442                           ;stkvar	_state @ sp[(-1)+0]
 13443  005468  0EFF               	movlw	-1
 13444  00546A  0060  F11B  FFE3   	movff	btemp+11,plusw1
 13445                           
 13446                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 13447  005470  9ED2               	bcf	16338,7,c	;volatile
 13448                           
 13449                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 13450  005472  0E55               	movlw	85
 13451  005474  6ED4               	movwf	16340,c	;volatile
 13452                           
 13453                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 13454  005476  0EAA               	movlw	170
 13455  005478  6ED4               	movwf	16340,c	;volatile
 13456                           
 13457                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 13458  00547A  90D4               	bcf	16340,0,c	;volatile
 13459                           
 13460                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 13461  00547C  0138               	movlb	56	; () banked
 13462  00547E  6B9F               	clrf	159,b	;volatile
 13463                           
 13464                           ; BSR set to: 56
 13465                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 13466  005480  6B9E               	clrf	158,b	;volatile
 13467                           
 13468                           ; BSR set to: 56
 13469                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 13470  005482  0E08               	movlw	8
 13471  005484  6F9D               	movwf	157,b	;volatile
 13472                           
 13473                           ; BSR set to: 56
 13474                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 13475  005486  0E55               	movlw	85
 13476  005488  6ED4               	movwf	16340,c	;volatile
 13477                           
 13478                           ; BSR set to: 56
 13479                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 13480  00548A  0EAA               	movlw	170
 13481  00548C  6ED4               	movwf	16340,c	;volatile
 13482                           
 13483                           ; BSR set to: 56
 13484                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 13485  00548E  80D4               	bsf	16340,0,c	;volatile
 13486                           
 13487                           ; BSR set to: 56
 13488                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 13489                           ;stkvar	_state @ sp[(-1)+0]
 13490  005490  0EFF               	movlw	-1
 13491  005492  B0E3               	btfsc	plusw1,0,c
 13492  005494  D002               	bra	u965
 13493  005496  9ED2               	bcf	16338,7,c	;volatile
 13494  005498  D001               	bra	u966
 13495  00549A                     u965:
 13496  00549A  8ED2               	bsf	16338,7,c	;volatile
 13497  00549C                     u966:
 13498                           
 13499                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 13500  00549C  0139               	movlb	57	; () banked
 13501  00549E  8782               	bsf	130,3,b	;volatile
 13502                           
 13503                           ; BSR set to: 57
 13504                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 13505  0054A0  8382               	bsf	130,1,b	;volatile
 13506                           
 13507                           ; BSR set to: 57
 13508                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 13509  0054A2  8182               	bsf	130,0,b	;volatile
 13510                           
 13511                           ; BSR set to: 57
 13512                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 13513  0054A4  8582               	bsf	130,2,b	;volatile
 13514                           
 13515                           ; BSR set to: 57
 13516                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 13517  0054A6  8786               	bsf	134,3,b	;volatile
 13518                           
 13519                           ; BSR set to: 57
 13520                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 13521  0054A8  8586               	bsf	134,2,b	;volatile
 13522                           
 13523                           ; BSR set to: 57
 13524                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 13525  0054AA  8983               	bsf	131,4,b	;volatile
 13526                           
 13527                           ; BSR set to: 57
 13528                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 13529  0054AC  8783               	bsf	131,3,b	;volatile
 13530                           
 13531                           ; BSR set to: 57
 13532                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 13533  0054AE  8181               	bsf	129,0,b	;volatile
 13534                           
 13535                           ; BSR set to: 57
 13536                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 13537  0054B0  8185               	bsf	133,0,b	;volatile
 13538                           
 13539                           ; BSR set to: 57
 13540                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR7bits.INT2IP = 1;
 13541  0054B2  8B87               	bsf	135,5,b	;volatile
 13542                           
 13543                           ; BSR set to: 57
 13544                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR9bits.TMR6IP = 1;
 13545  0054B4  8189               	bsf	137,0,b	;volatile
 13546                           
 13547                           ; BSR set to: 57
 13548                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR8bits.TMR5IP = 1;
 13549  0054B6  8D88               	bsf	136,6,b	;volatile
 13550                           
 13551                           ; BSR set to: 57
 13552                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADIP = 1;
 13553  0054B8  8581               	bsf	129,2,b	;volatile
 13554                           
 13555                           ; BSR set to: 57
 13556                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 13557  0054BA  52E5               	movf	postdec1,f,c
 13558  0054BC  0012               	return		;funcret
 13559  0054BE                     __end_of_INTERRUPT_Initialize:
 13560                           	opt callstack 0
 13561                           
 13562 ;; *************** function _EXT_INT_Initialize *****************
 13563 ;; Defined at:
 13564 ;;		line 119 in file "mcc_generated_files/ext_int.c"
 13565 ;; Parameters:    Size  Location     Type
 13566 ;;		None
 13567 ;; Auto vars:     Size  Location     Type
 13568 ;;		None
 13569 ;; Return value:  Size  Location     Type
 13570 ;;                  1  [STACK] void 
 13571 ;; Registers used:
 13572 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13573 ;; Tracked objects:
 13574 ;;		On entry : 3F/3F
 13575 ;;		On exit  : 3F/39
 13576 ;;		Unchanged: 0/0
 13577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13582 ;;Total ram usage:        0 bytes
 13583 ;; Hardware stack levels used:    1
 13584 ;; Hardware stack levels required when called:    4
 13585 ;; This function calls:
 13586 ;;		_INT0_SetInterruptHandler
 13587 ;;		_INT1_SetInterruptHandler
 13588 ;;		_INT2_SetInterruptHandler
 13589 ;; This function is called by:
 13590 ;;		_SYSTEM_Initialize
 13591 ;; This function uses a reentrant model
 13592 ;;
 13593                           
 13594                           	psect	text67
 13595  00568C                     __ptext67:
 13596                           	opt callstack 0
 13597  00568C                     _EXT_INT_Initialize:
 13598                           	opt callstack 25
 13599                           
 13600                           ;mcc_generated_files/ext_int.c: 124:  (PIR1bits.INT0IF = 0);
 13601                           
 13602                           ; BSR set to: 57
 13603                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13604                           ;incstack = 0
 13605  00568C  0139               	movlb	57	; () banked
 13606  00568E  91A1               	bcf	161,0,b	;volatile
 13607                           
 13608                           ;mcc_generated_files/ext_int.c: 125:  (INTCON0bits.INT0EDG = 0);
 13609  005690  90D2               	bcf	16338,0,c	;volatile
 13610                           
 13611                           ; BSR set to: 57
 13612                           ;mcc_generated_files/ext_int.c: 127:  INT0_SetInterruptHandler(INT0_DefaultInterruptHand
      +                          ler);
 13613  005692  0EC2               	movlw	low _INT0_DefaultInterruptHandler
 13614  005694  6EE6               	movwf	postinc1,c
 13615  005696  0E60               	movlw	high _INT0_DefaultInterruptHandler
 13616  005698  6EE6               	movwf	postinc1,c
 13617  00569A  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 13618  00569C  6EE6               	movwf	postinc1,c
 13619  00569E  EC79  F02E         	call	_INT0_SetInterruptHandler	;wreg free
 13620                           
 13621                           ;mcc_generated_files/ext_int.c: 128:  (PIE1bits.INT0IE = 1);
 13622  0056A2  0139               	movlb	57	; () banked
 13623  0056A4  8191               	bsf	145,0,b	;volatile
 13624                           
 13625                           ; BSR set to: 57
 13626                           ;mcc_generated_files/ext_int.c: 133:  (PIR5bits.INT1IF = 0);
 13627  0056A6  91A5               	bcf	165,0,b	;volatile
 13628                           
 13629                           ; BSR set to: 57
 13630                           ;mcc_generated_files/ext_int.c: 134:  (INTCON0bits.INT1EDG = 0);
 13631  0056A8  92D2               	bcf	16338,1,c	;volatile
 13632                           
 13633                           ;mcc_generated_files/ext_int.c: 136:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 13634  0056AA  0EC4               	movlw	low _INT1_DefaultInterruptHandler
 13635  0056AC  6EE6               	movwf	postinc1,c
 13636  0056AE  0E60               	movlw	high _INT1_DefaultInterruptHandler
 13637  0056B0  6EE6               	movwf	postinc1,c
 13638  0056B2  0E00               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 13639  0056B4  6EE6               	movwf	postinc1,c
 13640  0056B6  EC65  F02E         	call	_INT1_SetInterruptHandler	;wreg free
 13641                           
 13642                           ;mcc_generated_files/ext_int.c: 137:  (PIE5bits.INT1IE = 1);
 13643  0056BA  0139               	movlb	57	; () banked
 13644  0056BC  8195               	bsf	149,0,b	;volatile
 13645                           
 13646                           ; BSR set to: 57
 13647                           ;mcc_generated_files/ext_int.c: 142:  (PIR7bits.INT2IF = 0);
 13648  0056BE  9BA7               	bcf	167,5,b	;volatile
 13649                           
 13650                           ; BSR set to: 57
 13651                           ;mcc_generated_files/ext_int.c: 143:  (INTCON0bits.INT2EDG = 0);
 13652  0056C0  94D2               	bcf	16338,2,c	;volatile
 13653                           
 13654                           ;mcc_generated_files/ext_int.c: 145:  INT2_SetInterruptHandler(INT2_DefaultInterruptHand
      +                          ler);
 13655  0056C2  0EC6               	movlw	low _INT2_DefaultInterruptHandler
 13656  0056C4  6EE6               	movwf	postinc1,c
 13657  0056C6  0E60               	movlw	high _INT2_DefaultInterruptHandler
 13658  0056C8  6EE6               	movwf	postinc1,c
 13659  0056CA  0E00               	movlw	low (_INT2_DefaultInterruptHandler shr (0+16))
 13660  0056CC  6EE6               	movwf	postinc1,c
 13661  0056CE  EC51  F02E         	call	_INT2_SetInterruptHandler	;wreg free
 13662                           
 13663                           ;mcc_generated_files/ext_int.c: 146:  (PIE7bits.INT2IE = 1);
 13664  0056D2  0139               	movlb	57	; () banked
 13665  0056D4  8B97               	bsf	151,5,b	;volatile
 13666                           
 13667                           ; BSR set to: 57
 13668                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 13669  0056D6  0012               	return		;funcret
 13670  0056D8                     __end_of_EXT_INT_Initialize:
 13671                           	opt callstack 0
 13672                           
 13673 ;; *************** function _INT2_SetInterruptHandler *****************
 13674 ;; Defined at:
 13675 ;;		line 108 in file "mcc_generated_files/ext_int.c"
 13676 ;; Parameters:    Size  Location     Type
 13677 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13678 ;;		 -> INT2_DefaultInterruptHandler(1), 
 13679 ;; Auto vars:     Size  Location     Type
 13680 ;;		None
 13681 ;; Return value:  Size  Location     Type
 13682 ;;                  1  [STACK] void 
 13683 ;; Registers used:
 13684 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13685 ;; Tracked objects:
 13686 ;;		On entry : 3F/39
 13687 ;;		On exit  : 0/0
 13688 ;;		Unchanged: 0/0
 13689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13694 ;;Total ram usage:        0 bytes
 13695 ;; Hardware stack levels used:    1
 13696 ;; Hardware stack levels required when called:    3
 13697 ;; This function calls:
 13698 ;;		Nothing
 13699 ;; This function is called by:
 13700 ;;		_EXT_INT_Initialize
 13701 ;; This function uses a reentrant model
 13702 ;;
 13703                           
 13704                           	psect	text68
 13705  005CA2                     __ptext68:
 13706                           	opt callstack 0
 13707  005CA2                     _INT2_SetInterruptHandler:
 13708                           	opt callstack 25
 13709                           
 13710                           ;mcc_generated_files/ext_int.c: 108: void INT2_SetInterruptHandler(void (* InterruptHand
      +                          ler)(void));mcc_generated_files/ext_int.c: 109: {;mcc_generated_files/ext_int.c: 110:  I
      +                          NT2_InterruptHandler = InterruptHandler;
 13711                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13712                           
 13713                           ; BSR set to: 57
 13714                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13715                           ;incstack = 0
 13716  005CA2  50E1               	movf	fsr1l,w,c
 13717  005CA4  0FFD               	addlw	-3
 13718  005CA6  6ED9               	movwf	fsr2l,c
 13719  005CA8  50E2               	movf	fsr1h,w,c
 13720  005CAA  6EDA               	movwf	fsr2h,c
 13721  005CAC  0EFF               	movlw	255
 13722  005CAE  22DA               	addwfc	fsr2h,f,c
 13723  005CB0  006F FF78  F017    	movff	postinc2,_INT2_InterruptHandler
 13724  005CB6  006F FF78  F018    	movff	postinc2,_INT2_InterruptHandler+1
 13725  005CBC  006F FF74  F019    	movff	postdec2,_INT2_InterruptHandler+2
 13726                           
 13727                           ; _INT2_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 13728  005CC2  52E5               	movf	postdec1,f,c
 13729  005CC4  52E5               	movf	postdec1,f,c
 13730  005CC6  52E5               	movf	postdec1,f,c
 13731  005CC8  0012               	return		;funcret
 13732  005CCA                     __end_of_INT2_SetInterruptHandler:
 13733                           	opt callstack 0
 13734                           
 13735 ;; *************** function _INT1_SetInterruptHandler *****************
 13736 ;; Defined at:
 13737 ;;		line 81 in file "mcc_generated_files/ext_int.c"
 13738 ;; Parameters:    Size  Location     Type
 13739 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13740 ;;		 -> INT1_DefaultInterruptHandler(1), 
 13741 ;; Auto vars:     Size  Location     Type
 13742 ;;		None
 13743 ;; Return value:  Size  Location     Type
 13744 ;;                  1  [STACK] void 
 13745 ;; Registers used:
 13746 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13747 ;; Tracked objects:
 13748 ;;		On entry : 3F/39
 13749 ;;		On exit  : 0/0
 13750 ;;		Unchanged: 0/0
 13751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13756 ;;Total ram usage:        0 bytes
 13757 ;; Hardware stack levels used:    1
 13758 ;; Hardware stack levels required when called:    3
 13759 ;; This function calls:
 13760 ;;		Nothing
 13761 ;; This function is called by:
 13762 ;;		_EXT_INT_Initialize
 13763 ;; This function uses a reentrant model
 13764 ;;
 13765                           
 13766                           	psect	text69
 13767  005CCA                     __ptext69:
 13768                           	opt callstack 0
 13769  005CCA                     _INT1_SetInterruptHandler:
 13770                           	opt callstack 25
 13771                           
 13772                           ;mcc_generated_files/ext_int.c: 81: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 82: {;mcc_generated_files/ext_int.c: 83:  INT1
      +                          _InterruptHandler = InterruptHandler;
 13773                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13774                           
 13775                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13776                           ;incstack = 0
 13777  005CCA  50E1               	movf	fsr1l,w,c
 13778  005CCC  0FFD               	addlw	-3
 13779  005CCE  6ED9               	movwf	fsr2l,c
 13780  005CD0  50E2               	movf	fsr1h,w,c
 13781  005CD2  6EDA               	movwf	fsr2h,c
 13782  005CD4  0EFF               	movlw	255
 13783  005CD6  22DA               	addwfc	fsr2h,f,c
 13784  005CD8  006F FF78  F01A    	movff	postinc2,_INT1_InterruptHandler
 13785  005CDE  006F FF78  F01B    	movff	postinc2,_INT1_InterruptHandler+1
 13786  005CE4  006F FF74  F01C    	movff	postdec2,_INT1_InterruptHandler+2
 13787                           
 13788                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 13789  005CEA  52E5               	movf	postdec1,f,c
 13790  005CEC  52E5               	movf	postdec1,f,c
 13791  005CEE  52E5               	movf	postdec1,f,c
 13792  005CF0  0012               	return		;funcret
 13793  005CF2                     __end_of_INT1_SetInterruptHandler:
 13794                           	opt callstack 0
 13795                           
 13796 ;; *************** function _INT0_SetInterruptHandler *****************
 13797 ;; Defined at:
 13798 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 13799 ;; Parameters:    Size  Location     Type
 13800 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13801 ;;		 -> INT0_DefaultInterruptHandler(1), 
 13802 ;; Auto vars:     Size  Location     Type
 13803 ;;		None
 13804 ;; Return value:  Size  Location     Type
 13805 ;;                  1  [STACK] void 
 13806 ;; Registers used:
 13807 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13808 ;; Tracked objects:
 13809 ;;		On entry : 3F/39
 13810 ;;		On exit  : 0/0
 13811 ;;		Unchanged: 0/0
 13812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13817 ;;Total ram usage:        0 bytes
 13818 ;; Hardware stack levels used:    1
 13819 ;; Hardware stack levels required when called:    3
 13820 ;; This function calls:
 13821 ;;		Nothing
 13822 ;; This function is called by:
 13823 ;;		_EXT_INT_Initialize
 13824 ;; This function uses a reentrant model
 13825 ;;
 13826                           
 13827                           	psect	text70
 13828  005CF2                     __ptext70:
 13829                           	opt callstack 0
 13830  005CF2                     _INT0_SetInterruptHandler:
 13831                           	opt callstack 25
 13832                           
 13833                           ;mcc_generated_files/ext_int.c: 54: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 55: {;mcc_generated_files/ext_int.c: 56:  INT0
      +                          _InterruptHandler = InterruptHandler;
 13834                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13835                           
 13836                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13837                           ;incstack = 0
 13838  005CF2  50E1               	movf	fsr1l,w,c
 13839  005CF4  0FFD               	addlw	-3
 13840  005CF6  6ED9               	movwf	fsr2l,c
 13841  005CF8  50E2               	movf	fsr1h,w,c
 13842  005CFA  6EDA               	movwf	fsr2h,c
 13843  005CFC  0EFF               	movlw	255
 13844  005CFE  22DA               	addwfc	fsr2h,f,c
 13845  005D00  006F FF78  F01D    	movff	postinc2,_INT0_InterruptHandler
 13846  005D06  006F FF78  F01E    	movff	postinc2,_INT0_InterruptHandler+1
 13847  005D0C  006F FF74  F01F    	movff	postdec2,_INT0_InterruptHandler+2
 13848                           
 13849                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 13850  005D12  52E5               	movf	postdec1,f,c
 13851  005D14  52E5               	movf	postdec1,f,c
 13852  005D16  52E5               	movf	postdec1,f,c
 13853  005D18  0012               	return		;funcret
 13854  005D1A                     __end_of_INT0_SetInterruptHandler:
 13855                           	opt callstack 0
 13856                           
 13857 ;; *************** function _DSM_Initialize *****************
 13858 ;; Defined at:
 13859 ;;		line 58 in file "mcc_generated_files/dsm.c"
 13860 ;; Parameters:    Size  Location     Type
 13861 ;;		None
 13862 ;; Auto vars:     Size  Location     Type
 13863 ;;		None
 13864 ;; Return value:  Size  Location     Type
 13865 ;;                  1  [STACK] void 
 13866 ;; Registers used:
 13867 ;;		wreg, status,2
 13868 ;; Tracked objects:
 13869 ;;		On entry : 0/3C
 13870 ;;		On exit  : 3F/3C
 13871 ;;		Unchanged: 0/0
 13872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13877 ;;Total ram usage:        0 bytes
 13878 ;; Hardware stack levels used:    1
 13879 ;; Hardware stack levels required when called:    3
 13880 ;; This function calls:
 13881 ;;		Nothing
 13882 ;; This function is called by:
 13883 ;;		_SYSTEM_Initialize
 13884 ;; This function uses a reentrant model
 13885 ;;
 13886                           
 13887                           	psect	text71
 13888  005F6A                     __ptext71:
 13889                           	opt callstack 0
 13890  005F6A                     _DSM_Initialize:
 13891                           	opt callstack 26
 13892                           
 13893                           ;mcc_generated_files/dsm.c: 63:     MD1CON0bits.MD1OPOL = 0;
 13894                           
 13895                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13896                           ;incstack = 0
 13897  005F6A  013C               	movlb	60	; () banked
 13898  005F6C  99FA               	bcf	250,4,b	;volatile
 13899                           
 13900                           ;mcc_generated_files/dsm.c: 66:     MD1CON1bits.MD1CLSYNC = 1;
 13901  005F6E  81FB               	bsf	251,0,b	;volatile
 13902                           
 13903                           ;mcc_generated_files/dsm.c: 69:     MD1CON1bits.MD1CLPOL = 0;
 13904  005F70  93FB               	bcf	251,1,b	;volatile
 13905                           
 13906                           ;mcc_generated_files/dsm.c: 72:     MD1CON1bits.MD1CHSYNC = 1;
 13907  005F72  89FB               	bsf	251,4,b	;volatile
 13908                           
 13909                           ;mcc_generated_files/dsm.c: 75:     MD1CON1bits.MD1CHPOL = 0;
 13910  005F74  9BFB               	bcf	251,5,b	;volatile
 13911                           
 13912                           ; BSR set to: 60
 13913                           ;mcc_generated_files/dsm.c: 78:     MD1SRC = 0x13;
 13914  005F76  0E13               	movlw	19
 13915  005F78  6FFC               	movwf	252,b	;volatile
 13916                           
 13917                           ;mcc_generated_files/dsm.c: 81:     MD1CARH = 0x0E;
 13918  005F7A  0E0E               	movlw	14
 13919  005F7C  6FFE               	movwf	254,b	;volatile
 13920                           
 13921                           ;mcc_generated_files/dsm.c: 84:     MD1CARL = 0x04;
 13922  005F7E  0E04               	movlw	4
 13923  005F80  6FFD               	movwf	253,b	;volatile
 13924                           
 13925                           ; BSR set to: 60
 13926                           ;mcc_generated_files/dsm.c: 87:     MD1CON0bits.MD1EN = 1;
 13927  005F82  8FFA               	bsf	250,7,b	;volatile
 13928                           
 13929                           ; BSR set to: 60
 13930                           ; _DSM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 13931  005F84  0012               	return		;funcret
 13932  005F86                     __end_of_DSM_Initialize:
 13933                           	opt callstack 0
 13934                           
 13935 ;; *************** function _DMA1_Initialize *****************
 13936 ;; Defined at:
 13937 ;;		line 86 in file "mcc_generated_files/dma1.c"
 13938 ;; Parameters:    Size  Location     Type
 13939 ;;		None
 13940 ;; Auto vars:     Size  Location     Type
 13941 ;;		None
 13942 ;; Return value:  Size  Location     Type
 13943 ;;                  1  [STACK] void 
 13944 ;; Registers used:
 13945 ;;		wreg, status,2
 13946 ;; Tracked objects:
 13947 ;;		On entry : 3F/3D
 13948 ;;		On exit  : 3F/3B
 13949 ;;		Unchanged: 0/0
 13950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13955 ;;Total ram usage:        0 bytes
 13956 ;; Hardware stack levels used:    1
 13957 ;; Hardware stack levels required when called:    3
 13958 ;; This function calls:
 13959 ;;		Nothing
 13960 ;; This function is called by:
 13961 ;;		_SYSTEM_Initialize
 13962 ;; This function uses a reentrant model
 13963 ;;
 13964                           
 13965                           	psect	text72
 13966  0053EE                     __ptext72:
 13967                           	opt callstack 0
 13968  0053EE                     _DMA1_Initialize:
 13969                           	opt callstack 26
 13970                           
 13971                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 13972                           
 13973                           ; BSR set to: 60
 13974                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13975                           ;incstack = 0
 13976  0053EE  0E00               	movlw	0
 13977  0053F0  013B               	movlb	59	; () banked
 13978  0053F2  6FF9               	movwf	249,b	;volatile
 13979  0053F4  0E10               	movlw	16
 13980  0053F6  6FFA               	movwf	250,b	;volatile
 13981  0053F8  0E00               	movlw	0
 13982  0053FA  6FFB               	movwf	251,b	;volatile
 13983                           
 13984                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 13985  0053FC  0E3D               	movlw	61
 13986  0053FE  6FF1               	movwf	241,b	;volatile
 13987  005400  0E11               	movlw	17
 13988  005402  6FF0               	movwf	240,b	;volatile
 13989                           
 13990                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 13991  005404  0E03               	movlw	3
 13992  005406  6FFD               	movwf	253,b	;volatile
 13993                           
 13994                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 13995  005408  0E00               	movlw	0
 13996  00540A  6FF8               	movwf	248,b	;volatile
 13997  00540C  0E01               	movlw	1
 13998  00540E  6FF7               	movwf	247,b	;volatile
 13999                           
 14000                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 14001  005410  0E00               	movlw	0
 14002  005412  6FEF               	movwf	239,b	;volatile
 14003  005414  0E01               	movlw	1
 14004  005416  6FEE               	movwf	238,b	;volatile
 14005                           
 14006                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 14007  005418  0E15               	movlw	21
 14008  00541A  6FFF               	movwf	255,b	;volatile
 14009                           
 14010                           ; BSR set to: 59
 14011                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 14012  00541C  6BFE               	clrf	254,b	;volatile
 14013                           
 14014                           ; BSR set to: 59
 14015                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 14016  00541E  0139               	movlb	57	; () banked
 14017  005420  93A2               	bcf	162,1,b	;volatile
 14018                           
 14019                           ; BSR set to: 57
 14020                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 14021  005422  91A2               	bcf	162,0,b	;volatile
 14022                           
 14023                           ; BSR set to: 57
 14024                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 14025  005424  97A2               	bcf	162,3,b	;volatile
 14026                           
 14027                           ; BSR set to: 57
 14028                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 14029  005426  95A2               	bcf	162,2,b	;volatile
 14030                           
 14031                           ; BSR set to: 57
 14032                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 14033  005428  8392               	bsf	146,1,b	;volatile
 14034                           
 14035                           ; BSR set to: 57
 14036                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 14037  00542A  8192               	bsf	146,0,b	;volatile
 14038                           
 14039                           ; BSR set to: 57
 14040                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 14041  00542C  8792               	bsf	146,3,b	;volatile
 14042                           
 14043                           ; BSR set to: 57
 14044                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 14045  00542E  8592               	bsf	146,2,b	;volatile
 14046                           
 14047                           ; BSR set to: 57
 14048                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 14049  005430  6BF1               	clrf	241,b	;volatile
 14050                           
 14051                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 14052  005432  0E01               	movlw	1
 14053  005434  6FF2               	movwf	242,b	;volatile
 14054                           
 14055                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 14056  005436  0E04               	movlw	4
 14057  005438  6FF3               	movwf	243,b	;volatile
 14058                           
 14059                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 14060  00543A  0E02               	movlw	2
 14061  00543C  6FF4               	movwf	244,b	;volatile
 14062                           
 14063                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 14064  00543E  0E03               	movlw	3
 14065  005440  6FF7               	movwf	247,b	;volatile
 14066  005442  9ED2               	bcf	16338,7,c	;# 
 14067  005444  0139               	banksel	14831	;# 
 14068  005446  0E55               	movlw	85	;# 
 14069  005448  6FEF               	movwf	14831,b	;# 
 14070  00544A  0EAA               	movlw	170	;# 
 14071  00544C  6FEF               	movwf	14831,b	;# 
 14072  00544E  81EF               	bsf	14831,0,b	;# 
 14073  005450  8ED2               	bsf	16338,7,c	;# 
 14074                           
 14075                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 14076  005452  013B               	movlb	59	; () banked
 14077  005454  6BFC               	clrf	252,b	;volatile
 14078                           
 14079                           ; BSR set to: 59
 14080                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 14081  005456  0012               	return		;funcret
 14082  005458                     __end_of_DMA1_Initialize:
 14083                           	opt callstack 0
 14084                           
 14085 ;; *************** function _CLKREF_Initialize *****************
 14086 ;; Defined at:
 14087 ;;		line 58 in file "mcc_generated_files/clkref.c"
 14088 ;; Parameters:    Size  Location     Type
 14089 ;;		None
 14090 ;; Auto vars:     Size  Location     Type
 14091 ;;		None
 14092 ;; Return value:  Size  Location     Type
 14093 ;;                  1  [STACK] void 
 14094 ;; Registers used:
 14095 ;;		wreg, status,2
 14096 ;; Tracked objects:
 14097 ;;		On entry : 3F/3B
 14098 ;;		On exit  : 3F/3C
 14099 ;;		Unchanged: 0/0
 14100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14105 ;;Total ram usage:        0 bytes
 14106 ;; Hardware stack levels used:    1
 14107 ;; Hardware stack levels required when called:    3
 14108 ;; This function calls:
 14109 ;;		Nothing
 14110 ;; This function is called by:
 14111 ;;		_SYSTEM_Initialize
 14112 ;; This function uses a reentrant model
 14113 ;;
 14114                           
 14115                           	psect	text73
 14116  006062                     __ptext73:
 14117                           	opt callstack 0
 14118  006062                     _CLKREF_Initialize:
 14119                           	opt callstack 26
 14120                           
 14121                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 14122                           
 14123                           ; BSR set to: 59
 14124                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14125                           ;incstack = 0
 14126  006062  013C               	movlb	60	; () banked
 14127  006064  6BE6               	clrf	230,b	;volatile
 14128                           
 14129                           ; BSR set to: 60
 14130                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 14131  006066  0E94               	movlw	148
 14132  006068  6FE5               	movwf	229,b	;volatile
 14133                           
 14134                           ; BSR set to: 60
 14135                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 14136  00606A  0012               	return		;funcret
 14137  00606C                     __end_of_CLKREF_Initialize:
 14138                           	opt callstack 0
 14139                           
 14140 ;; *************** function _CLC1_Initialize *****************
 14141 ;; Defined at:
 14142 ;;		line 58 in file "mcc_generated_files/clc1.c"
 14143 ;; Parameters:    Size  Location     Type
 14144 ;;		None
 14145 ;; Auto vars:     Size  Location     Type
 14146 ;;		None
 14147 ;; Return value:  Size  Location     Type
 14148 ;;                  1  [STACK] void 
 14149 ;; Registers used:
 14150 ;;		wreg, status,2
 14151 ;; Tracked objects:
 14152 ;;		On entry : 0/39
 14153 ;;		On exit  : 3F/3C
 14154 ;;		Unchanged: 0/0
 14155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14160 ;;Total ram usage:        0 bytes
 14161 ;; Hardware stack levels used:    1
 14162 ;; Hardware stack levels required when called:    3
 14163 ;; This function calls:
 14164 ;;		Nothing
 14165 ;; This function is called by:
 14166 ;;		_SYSTEM_Initialize
 14167 ;; This function uses a reentrant model
 14168 ;;
 14169                           
 14170                           	psect	text74
 14171  005E4C                     __ptext74:
 14172                           	opt callstack 0
 14173  005E4C                     _CLC1_Initialize:
 14174                           	opt callstack 26
 14175                           
 14176                           ;mcc_generated_files/clc1.c: 63:     CLC1POL = 0x00;
 14177                           
 14178                           ; BSR set to: 60
 14179                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14180                           ;incstack = 0
 14181  005E4C  013C               	movlb	60	; () banked
 14182  005E4E  6B75               	clrf	117,b	;volatile
 14183                           
 14184                           ; BSR set to: 60
 14185                           ;mcc_generated_files/clc1.c: 65:     CLC1SEL0 = 0x04;
 14186  005E50  0E04               	movlw	4
 14187  005E52  6F76               	movwf	118,b	;volatile
 14188                           
 14189                           ;mcc_generated_files/clc1.c: 67:     CLC1SEL1 = 0x04;
 14190  005E54  0E04               	movlw	4
 14191  005E56  6F77               	movwf	119,b	;volatile
 14192                           
 14193                           ;mcc_generated_files/clc1.c: 69:     CLC1SEL2 = 0x04;
 14194  005E58  0E04               	movlw	4
 14195  005E5A  6F78               	movwf	120,b	;volatile
 14196                           
 14197                           ;mcc_generated_files/clc1.c: 71:     CLC1SEL3 = 0x04;
 14198  005E5C  0E04               	movlw	4
 14199  005E5E  6F79               	movwf	121,b	;volatile
 14200                           
 14201                           ; BSR set to: 60
 14202                           ;mcc_generated_files/clc1.c: 73:     CLC1GLS0 = 0x00;
 14203  005E60  6B7A               	clrf	122,b	;volatile
 14204                           
 14205                           ; BSR set to: 60
 14206                           ;mcc_generated_files/clc1.c: 75:     CLC1GLS1 = 0x00;
 14207  005E62  6B7B               	clrf	123,b	;volatile
 14208                           
 14209                           ; BSR set to: 60
 14210                           ;mcc_generated_files/clc1.c: 77:     CLC1GLS2 = 0x00;
 14211  005E64  6B7C               	clrf	124,b	;volatile
 14212                           
 14213                           ; BSR set to: 60
 14214                           ;mcc_generated_files/clc1.c: 79:     CLC1GLS3 = 0x00;
 14215  005E66  6B7D               	clrf	125,b	;volatile
 14216                           
 14217                           ;mcc_generated_files/clc1.c: 81:     CLC1CON = 0x81;
 14218  005E68  0E81               	movlw	129
 14219  005E6A  6F74               	movwf	116,b	;volatile
 14220                           
 14221                           ; BSR set to: 60
 14222                           ; _CLC1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 14223  005E6C  0012               	return		;funcret
 14224  005E6E                     __end_of_CLC1_Initialize:
 14225                           	opt callstack 0
 14226                           
 14227 ;; *************** function _ADCC_Initialize *****************
 14228 ;; Defined at:
 14229 ;;		line 64 in file "mcc_generated_files/adcc.c"
 14230 ;; Parameters:    Size  Location     Type
 14231 ;;		None
 14232 ;; Auto vars:     Size  Location     Type
 14233 ;;		None
 14234 ;; Return value:  Size  Location     Type
 14235 ;;                  1  [STACK] void 
 14236 ;; Registers used:
 14237 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 14238 ;; Tracked objects:
 14239 ;;		On entry : 3F/39
 14240 ;;		On exit  : 0/0
 14241 ;;		Unchanged: 0/0
 14242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14247 ;;Total ram usage:        0 bytes
 14248 ;; Hardware stack levels used:    1
 14249 ;; Hardware stack levels required when called:    4
 14250 ;; This function calls:
 14251 ;;		_ADCC_SetADIInterruptHandler
 14252 ;; This function is called by:
 14253 ;;		_SYSTEM_Initialize
 14254 ;; This function uses a reentrant model
 14255 ;;
 14256                           
 14257                           	psect	text75
 14258  0056D8                     __ptext75:
 14259                           	opt callstack 0
 14260  0056D8                     _ADCC_Initialize:
 14261                           	opt callstack 25
 14262                           
 14263                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 14264                           
 14265                           ; BSR set to: 60
 14266                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14267                           ;incstack = 0
 14268  0056D8  013E               	movlb	62	; () banked
 14269  0056DA  6BDE               	clrf	222,b	;volatile
 14270                           
 14271                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 14272  0056DC  6BDF               	clrf	223,b	;volatile
 14273                           
 14274                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 14275  0056DE  6BE0               	clrf	224,b	;volatile
 14276                           
 14277                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 14278  0056E0  6BE1               	clrf	225,b	;volatile
 14279                           
 14280                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 14281  0056E2  6BE4               	clrf	228,b	;volatile
 14282                           
 14283                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 14284  0056E4  6BE5               	clrf	229,b	;volatile
 14285                           
 14286                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 14287  0056E6  6BEA               	clrf	234,b	;volatile
 14288                           
 14289                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 14290  0056E8  6BEC               	clrf	236,b	;volatile
 14291                           
 14292                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 14293  0056EA  6BF1               	clrf	241,b	;volatile
 14294                           
 14295                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 14296  0056EC  6BF3               	clrf	243,b	;volatile
 14297                           
 14298                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 14299  0056EE  6BF4               	clrf	244,b	;volatile
 14300                           
 14301                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 14302  0056F0  6BF5               	clrf	245,b	;volatile
 14303                           
 14304                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 14305  0056F2  6BF6               	clrf	246,b	;volatile
 14306                           
 14307                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 14308  0056F4  6BF7               	clrf	247,b	;volatile
 14309                           
 14310                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 14311  0056F6  6BF9               	clrf	249,b	;volatile
 14312                           
 14313                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x00;
 14314  0056F8  6BFA               	clrf	250,b	;volatile
 14315                           
 14316                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x00;
 14317  0056FA  6BFB               	clrf	251,b	;volatile
 14318                           
 14319                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 14320  0056FC  6BFC               	clrf	252,b	;volatile
 14321                           
 14322                           ; BSR set to: 62
 14323                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x02;
 14324  0056FE  0E02               	movlw	2
 14325  005700  6FFD               	movwf	253,b	;volatile
 14326                           
 14327                           ; BSR set to: 62
 14328                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 14329  005702  6BFE               	clrf	254,b	;volatile
 14330                           
 14331                           ; BSR set to: 62
 14332                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 14333  005704  6BFF               	clrf	255,b	;volatile
 14334                           
 14335                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0x94;
 14336  005706  0E94               	movlw	148
 14337  005708  6FF8               	movwf	248,b	;volatile
 14338                           
 14339                           ; BSR set to: 62
 14340                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADIF = 0;
 14341  00570A  0139               	movlb	57	; () banked
 14342  00570C  95A1               	bcf	161,2,b	;volatile
 14343                           
 14344                           ; BSR set to: 57
 14345                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADIE = 1;
 14346  00570E  8591               	bsf	145,2,b	;volatile
 14347                           
 14348                           ; BSR set to: 57
 14349                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 14350  005710  0EC8               	movlw	low _ADCC_DefaultInterruptHandler
 14351  005712  6EE6               	movwf	postinc1,c
 14352  005714  0E60               	movlw	high _ADCC_DefaultInterruptHandler
 14353  005716  6EE6               	movwf	postinc1,c
 14354  005718  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 14355  00571A  6EE6               	movwf	postinc1,c
 14356  00571C  EC8D  F02E         	call	_ADCC_SetADIInterruptHandler	;wreg free
 14357                           
 14358                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 14359  005720  0012               	return		;funcret
 14360  005722                     __end_of_ADCC_Initialize:
 14361                           	opt callstack 0
 14362                           
 14363 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 14364 ;; Defined at:
 14365 ;;		line 316 in file "mcc_generated_files/adcc.c"
 14366 ;; Parameters:    Size  Location     Type
 14367 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14368 ;;		 -> ADCC_DefaultInterruptHandler(1), 
 14369 ;; Auto vars:     Size  Location     Type
 14370 ;;		None
 14371 ;; Return value:  Size  Location     Type
 14372 ;;                  1  [STACK] void 
 14373 ;; Registers used:
 14374 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14375 ;; Tracked objects:
 14376 ;;		On entry : 3F/39
 14377 ;;		On exit  : 0/0
 14378 ;;		Unchanged: 0/0
 14379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14384 ;;Total ram usage:        0 bytes
 14385 ;; Hardware stack levels used:    1
 14386 ;; Hardware stack levels required when called:    3
 14387 ;; This function calls:
 14388 ;;		Nothing
 14389 ;; This function is called by:
 14390 ;;		_ADCC_Initialize
 14391 ;; This function uses a reentrant model
 14392 ;;
 14393                           
 14394                           	psect	text76
 14395  005D1A                     __ptext76:
 14396                           	opt callstack 0
 14397  005D1A                     _ADCC_SetADIInterruptHandler:
 14398                           	opt callstack 25
 14399                           
 14400                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADI_InterruptHandler = InterruptHandler;
 14401                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14402                           
 14403                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14404                           ;incstack = 0
 14405  005D1A  50E1               	movf	fsr1l,w,c
 14406  005D1C  0FFD               	addlw	-3
 14407  005D1E  6ED9               	movwf	fsr2l,c
 14408  005D20  50E2               	movf	fsr1h,w,c
 14409  005D22  6EDA               	movwf	fsr2h,c
 14410  005D24  0EFF               	movlw	255
 14411  005D26  22DA               	addwfc	fsr2h,f,c
 14412  005D28  006F FF78  F008    	movff	postinc2,_ADCC_ADI_InterruptHandler
 14413  005D2E  006F FF78  F009    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 14414  005D34  006F FF74  F00A    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 14415                           
 14416                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 14417  005D3A  52E5               	movf	postdec1,f,c
 14418  005D3C  52E5               	movf	postdec1,f,c
 14419  005D3E  52E5               	movf	postdec1,f,c
 14420  005D40  0012               	return		;funcret
 14421  005D42                     __end_of_ADCC_SetADIInterruptHandler:
 14422                           	opt callstack 0
 14423                           
 14424 ;; *************** function _INT0_ISR *****************
 14425 ;; Defined at:
 14426 ;;		line 38 in file "mcc_generated_files/ext_int.c"
 14427 ;; Parameters:    Size  Location     Type
 14428 ;;		None
 14429 ;; Auto vars:     Size  Location     Type
 14430 ;;		None
 14431 ;; Return value:  Size  Location     Type
 14432 ;;                  1    wreg      void 
 14433 ;; Registers used:
 14434 ;;		wreg, status,2, status,0, pclath, tosl
 14435 ;; Tracked objects:
 14436 ;;		On entry : 0/0
 14437 ;;		On exit  : 0/0
 14438 ;;		Unchanged: 0/0
 14439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14444 ;;Total ram usage:        0 bytes
 14445 ;; Hardware stack levels used:    1
 14446 ;; Hardware stack levels required when called:    2
 14447 ;; This function calls:
 14448 ;;		_INT0_CallBack
 14449 ;; This function is called by:
 14450 ;;		Interrupt level 2
 14451 ;; This function uses a non-reentrant model
 14452 ;;
 14453                           
 14454                           	psect	text77
 14455  006024                     __ptext77:
 14456                           	opt callstack 0
 14457  006024                     _INT0_ISR:
 14458                           	opt callstack 17
 14459                           
 14460                           ;incstack = 0
 14461  006024  EE13  F130         	lfsr	1,___inthi_sp
 14462                           
 14463                           ;mcc_generated_files/ext_int.c: 40:  (PIR1bits.INT0IF = 0);
 14464  006028  0139               	movlb	57	; () banked
 14465  00602A  91A1               	bcf	161,0,b	;volatile
 14466                           
 14467                           ; BSR set to: 57
 14468                           ;mcc_generated_files/ext_int.c: 43:  INT0_CallBack();
 14469  00602C  EC37  F02F         	call	_INT0_CallBack	;wreg free
 14470  006030  0011               	retfie		f
 14471  006032                     __end_of_INT0_ISR:
 14472                           	opt callstack 0
 14473                           
 14474 ;; *************** function _INT0_CallBack *****************
 14475 ;; Defined at:
 14476 ;;		line 46 in file "mcc_generated_files/ext_int.c"
 14477 ;; Parameters:    Size  Location     Type
 14478 ;;		None
 14479 ;; Auto vars:     Size  Location     Type
 14480 ;;		None
 14481 ;; Return value:  Size  Location     Type
 14482 ;;                  1  [STACK] void 
 14483 ;; Registers used:
 14484 ;;		wreg, status,2, status,0, pclath, tosl
 14485 ;; Tracked objects:
 14486 ;;		On entry : 3F/39
 14487 ;;		On exit  : 0/0
 14488 ;;		Unchanged: 0/0
 14489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14494 ;;Total ram usage:        0 bytes
 14495 ;; Hardware stack levels used:    1
 14496 ;; Hardware stack levels required when called:    1
 14497 ;; This function calls:
 14498 ;;		Absolute function
 14499 ;;		_INT0_DefaultInterruptHandler
 14500 ;; This function is called by:
 14501 ;;		_INT0_ISR
 14502 ;; This function uses a reentrant model
 14503 ;;
 14504                           
 14505                           	psect	text78
 14506  005E6E                     __ptext78:
 14507                           	opt callstack 0
 14508  005E6E                     _INT0_CallBack:
 14509                           	opt callstack 17
 14510                           
 14511                           ;mcc_generated_files/ext_int.c: 49:  if (INT0_InterruptHandler) {
 14512                           
 14513                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14514                           ;incstack = 0
 14515  005E6E  501D               	movf	_INT0_InterruptHandler,w,c
 14516  005E70  101E               	iorwf	_INT0_InterruptHandler+1,w,c
 14517  005E72  101F               	iorwf	_INT0_InterruptHandler+2,w,c
 14518  005E74  B4D8               	btfsc	status,2,c
 14519  005E76  0012               	return	
 14520                           
 14521                           ;mcc_generated_files/ext_int.c: 50:   INT0_InterruptHandler();
 14522  005E78  D801               	call	u114_48
 14523  005E7A  0012               	return	
 14524  005E7C                     u114_48:
 14525  005E7C  0005               	push	
 14526  005E7E  6EFA               	movwf	pclath,c
 14527  005E80  501D               	movf	_INT0_InterruptHandler,w,c
 14528  005E82  6EFD               	movwf	tosl,c
 14529  005E84  501E               	movf	_INT0_InterruptHandler+1,w,c
 14530  005E86  6EFE               	movwf	tosh,c
 14531  005E88  501F               	movf	_INT0_InterruptHandler+2,w,c
 14532  005E8A  6EFF               	movwf	tosu,c
 14533  005E8C  50FA               	movf	pclath,w,c
 14534  005E8E  0012               	return		;indir
 14535  005E90                     __end_of_INT0_CallBack:
 14536                           	opt callstack 0
 14537                           
 14538 ;; *************** function _INT0_DefaultInterruptHandler *****************
 14539 ;; Defined at:
 14540 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 14541 ;; Parameters:    Size  Location     Type
 14542 ;;		None
 14543 ;; Auto vars:     Size  Location     Type
 14544 ;;		None
 14545 ;; Return value:  Size  Location     Type
 14546 ;;                  1  [STACK] void 
 14547 ;; Registers used:
 14548 ;;		None
 14549 ;; Tracked objects:
 14550 ;;		On entry : 0/39
 14551 ;;		On exit  : 0/0
 14552 ;;		Unchanged: 0/0
 14553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14558 ;;Total ram usage:        0 bytes
 14559 ;; Hardware stack levels used:    1
 14560 ;; This function calls:
 14561 ;;		Nothing
 14562 ;; This function is called by:
 14563 ;;		_EXT_INT_Initialize
 14564 ;;		_INT0_CallBack
 14565 ;; This function uses a reentrant model
 14566 ;;
 14567                           
 14568                           	psect	text79
 14569  0060C2                     __ptext79:
 14570                           	opt callstack 0
 14571  0060C2                     _INT0_DefaultInterruptHandler:
 14572                           	opt callstack 17
 14573                           
 14574                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 14575                           
 14576                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14577                           ;incstack = 0
 14578  0060C2  0012               	return		;funcret
 14579  0060C4                     __end_of_INT0_DefaultInterruptHandler:
 14580                           	opt callstack 0
 14581                           
 14582 ;; *************** function _INT1_ISR *****************
 14583 ;; Defined at:
 14584 ;;		line 65 in file "mcc_generated_files/ext_int.c"
 14585 ;; Parameters:    Size  Location     Type
 14586 ;;		None
 14587 ;; Auto vars:     Size  Location     Type
 14588 ;;		None
 14589 ;; Return value:  Size  Location     Type
 14590 ;;                  1    wreg      void 
 14591 ;; Registers used:
 14592 ;;		wreg, status,2, status,0, pclath, tosl
 14593 ;; Tracked objects:
 14594 ;;		On entry : 0/0
 14595 ;;		On exit  : 0/0
 14596 ;;		Unchanged: 0/0
 14597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14602 ;;Total ram usage:        0 bytes
 14603 ;; Hardware stack levels used:    1
 14604 ;; Hardware stack levels required when called:    2
 14605 ;; This function calls:
 14606 ;;		_INT1_CallBack
 14607 ;; This function is called by:
 14608 ;;		Interrupt level 2
 14609 ;; This function uses a non-reentrant model
 14610 ;;
 14611                           
 14612                           	psect	text80
 14613  006034                     __ptext80:
 14614                           	opt callstack 0
 14615  006034                     _INT1_ISR:
 14616                           	opt callstack 17
 14617                           
 14618                           ;incstack = 0
 14619  006034  EE13  F130         	lfsr	1,___inthi_sp
 14620                           
 14621                           ;mcc_generated_files/ext_int.c: 67:  (PIR5bits.INT1IF = 0);
 14622  006038  0139               	movlb	57	; () banked
 14623  00603A  91A5               	bcf	165,0,b	;volatile
 14624                           
 14625                           ; BSR set to: 57
 14626                           ;mcc_generated_files/ext_int.c: 70:  INT1_CallBack();
 14627  00603C  EC48  F02F         	call	_INT1_CallBack	;wreg free
 14628  006040  0011               	retfie		f
 14629  006042                     __end_of_INT1_ISR:
 14630                           	opt callstack 0
 14631                           
 14632 ;; *************** function _INT1_CallBack *****************
 14633 ;; Defined at:
 14634 ;;		line 73 in file "mcc_generated_files/ext_int.c"
 14635 ;; Parameters:    Size  Location     Type
 14636 ;;		None
 14637 ;; Auto vars:     Size  Location     Type
 14638 ;;		None
 14639 ;; Return value:  Size  Location     Type
 14640 ;;                  1  [STACK] void 
 14641 ;; Registers used:
 14642 ;;		wreg, status,2, status,0, pclath, tosl
 14643 ;; Tracked objects:
 14644 ;;		On entry : 3F/39
 14645 ;;		On exit  : 0/0
 14646 ;;		Unchanged: 0/0
 14647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14652 ;;Total ram usage:        0 bytes
 14653 ;; Hardware stack levels used:    1
 14654 ;; Hardware stack levels required when called:    1
 14655 ;; This function calls:
 14656 ;;		Absolute function
 14657 ;;		_INT1_DefaultInterruptHandler
 14658 ;; This function is called by:
 14659 ;;		_INT1_ISR
 14660 ;; This function uses a reentrant model
 14661 ;;
 14662                           
 14663                           	psect	text81
 14664  005E90                     __ptext81:
 14665                           	opt callstack 0
 14666  005E90                     _INT1_CallBack:
 14667                           	opt callstack 17
 14668                           
 14669                           ;mcc_generated_files/ext_int.c: 76:  if (INT1_InterruptHandler) {
 14670                           
 14671                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14672                           ;incstack = 0
 14673  005E90  501A               	movf	_INT1_InterruptHandler,w,c
 14674  005E92  101B               	iorwf	_INT1_InterruptHandler+1,w,c
 14675  005E94  101C               	iorwf	_INT1_InterruptHandler+2,w,c
 14676  005E96  B4D8               	btfsc	status,2,c
 14677  005E98  0012               	return	
 14678                           
 14679                           ;mcc_generated_files/ext_int.c: 77:   INT1_InterruptHandler();
 14680  005E9A  D801               	call	u116_48
 14681  005E9C  0012               	return	
 14682  005E9E                     u116_48:
 14683  005E9E  0005               	push	
 14684  005EA0  6EFA               	movwf	pclath,c
 14685  005EA2  501A               	movf	_INT1_InterruptHandler,w,c
 14686  005EA4  6EFD               	movwf	tosl,c
 14687  005EA6  501B               	movf	_INT1_InterruptHandler+1,w,c
 14688  005EA8  6EFE               	movwf	tosh,c
 14689  005EAA  501C               	movf	_INT1_InterruptHandler+2,w,c
 14690  005EAC  6EFF               	movwf	tosu,c
 14691  005EAE  50FA               	movf	pclath,w,c
 14692  005EB0  0012               	return		;indir
 14693  005EB2                     __end_of_INT1_CallBack:
 14694                           	opt callstack 0
 14695                           
 14696 ;; *************** function _INT1_DefaultInterruptHandler *****************
 14697 ;; Defined at:
 14698 ;;		line 86 in file "mcc_generated_files/ext_int.c"
 14699 ;; Parameters:    Size  Location     Type
 14700 ;;		None
 14701 ;; Auto vars:     Size  Location     Type
 14702 ;;		None
 14703 ;; Return value:  Size  Location     Type
 14704 ;;                  1  [STACK] void 
 14705 ;; Registers used:
 14706 ;;		None
 14707 ;; Tracked objects:
 14708 ;;		On entry : 0/39
 14709 ;;		On exit  : 0/0
 14710 ;;		Unchanged: 0/0
 14711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14716 ;;Total ram usage:        0 bytes
 14717 ;; Hardware stack levels used:    1
 14718 ;; This function calls:
 14719 ;;		Nothing
 14720 ;; This function is called by:
 14721 ;;		_EXT_INT_Initialize
 14722 ;;		_INT1_CallBack
 14723 ;; This function uses a reentrant model
 14724 ;;
 14725                           
 14726                           	psect	text82
 14727  0060C4                     __ptext82:
 14728                           	opt callstack 0
 14729  0060C4                     _INT1_DefaultInterruptHandler:
 14730                           	opt callstack 17
 14731                           
 14732                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 14733                           
 14734                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14735                           ;incstack = 0
 14736  0060C4  0012               	return		;funcret
 14737  0060C6                     __end_of_INT1_DefaultInterruptHandler:
 14738                           	opt callstack 0
 14739                           
 14740 ;; *************** function _INT2_ISR *****************
 14741 ;; Defined at:
 14742 ;;		line 92 in file "mcc_generated_files/ext_int.c"
 14743 ;; Parameters:    Size  Location     Type
 14744 ;;		None
 14745 ;; Auto vars:     Size  Location     Type
 14746 ;;		None
 14747 ;; Return value:  Size  Location     Type
 14748 ;;                  1    wreg      void 
 14749 ;; Registers used:
 14750 ;;		wreg, status,2, status,0, pclath, tosl
 14751 ;; Tracked objects:
 14752 ;;		On entry : 0/0
 14753 ;;		On exit  : 0/0
 14754 ;;		Unchanged: 0/0
 14755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14760 ;;Total ram usage:        0 bytes
 14761 ;; Hardware stack levels used:    1
 14762 ;; Hardware stack levels required when called:    2
 14763 ;; This function calls:
 14764 ;;		_INT2_CallBack
 14765 ;; This function is called by:
 14766 ;;		Interrupt level 2
 14767 ;; This function uses a non-reentrant model
 14768 ;;
 14769                           
 14770                           	psect	text83
 14771  006044                     __ptext83:
 14772                           	opt callstack 0
 14773  006044                     _INT2_ISR:
 14774                           	opt callstack 17
 14775                           
 14776                           ;incstack = 0
 14777  006044  EE13  F130         	lfsr	1,___inthi_sp
 14778                           
 14779                           ;mcc_generated_files/ext_int.c: 94:  (PIR7bits.INT2IF = 0);
 14780  006048  0139               	movlb	57	; () banked
 14781  00604A  9BA7               	bcf	167,5,b	;volatile
 14782                           
 14783                           ; BSR set to: 57
 14784                           ;mcc_generated_files/ext_int.c: 97:  INT2_CallBack();
 14785  00604C  EC59  F02F         	call	_INT2_CallBack	;wreg free
 14786  006050  0011               	retfie		f
 14787  006052                     __end_of_INT2_ISR:
 14788                           	opt callstack 0
 14789                           
 14790 ;; *************** function _INT2_CallBack *****************
 14791 ;; Defined at:
 14792 ;;		line 100 in file "mcc_generated_files/ext_int.c"
 14793 ;; Parameters:    Size  Location     Type
 14794 ;;		None
 14795 ;; Auto vars:     Size  Location     Type
 14796 ;;		None
 14797 ;; Return value:  Size  Location     Type
 14798 ;;                  1  [STACK] void 
 14799 ;; Registers used:
 14800 ;;		wreg, status,2, status,0, pclath, tosl
 14801 ;; Tracked objects:
 14802 ;;		On entry : 3F/39
 14803 ;;		On exit  : 0/0
 14804 ;;		Unchanged: 0/0
 14805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14810 ;;Total ram usage:        0 bytes
 14811 ;; Hardware stack levels used:    1
 14812 ;; Hardware stack levels required when called:    1
 14813 ;; This function calls:
 14814 ;;		Absolute function
 14815 ;;		_INT2_DefaultInterruptHandler
 14816 ;; This function is called by:
 14817 ;;		_INT2_ISR
 14818 ;; This function uses a reentrant model
 14819 ;;
 14820                           
 14821                           	psect	text84
 14822  005EB2                     __ptext84:
 14823                           	opt callstack 0
 14824  005EB2                     _INT2_CallBack:
 14825                           	opt callstack 17
 14826                           
 14827                           ;mcc_generated_files/ext_int.c: 103:  if (INT2_InterruptHandler) {
 14828                           
 14829                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14830                           ;incstack = 0
 14831  005EB2  5017               	movf	_INT2_InterruptHandler,w,c
 14832  005EB4  1018               	iorwf	_INT2_InterruptHandler+1,w,c
 14833  005EB6  1019               	iorwf	_INT2_InterruptHandler+2,w,c
 14834  005EB8  B4D8               	btfsc	status,2,c
 14835  005EBA  0012               	return	
 14836                           
 14837                           ;mcc_generated_files/ext_int.c: 104:   INT2_InterruptHandler();
 14838  005EBC  D801               	call	u118_48
 14839  005EBE  0012               	return	
 14840  005EC0                     u118_48:
 14841  005EC0  0005               	push	
 14842  005EC2  6EFA               	movwf	pclath,c
 14843  005EC4  5017               	movf	_INT2_InterruptHandler,w,c
 14844  005EC6  6EFD               	movwf	tosl,c
 14845  005EC8  5018               	movf	_INT2_InterruptHandler+1,w,c
 14846  005ECA  6EFE               	movwf	tosh,c
 14847  005ECC  5019               	movf	_INT2_InterruptHandler+2,w,c
 14848  005ECE  6EFF               	movwf	tosu,c
 14849  005ED0  50FA               	movf	pclath,w,c
 14850  005ED2  0012               	return		;indir
 14851  005ED4                     __end_of_INT2_CallBack:
 14852                           	opt callstack 0
 14853                           
 14854 ;; *************** function _INT2_DefaultInterruptHandler *****************
 14855 ;; Defined at:
 14856 ;;		line 113 in file "mcc_generated_files/ext_int.c"
 14857 ;; Parameters:    Size  Location     Type
 14858 ;;		None
 14859 ;; Auto vars:     Size  Location     Type
 14860 ;;		None
 14861 ;; Return value:  Size  Location     Type
 14862 ;;                  1  [STACK] void 
 14863 ;; Registers used:
 14864 ;;		None
 14865 ;; Tracked objects:
 14866 ;;		On entry : 0/39
 14867 ;;		On exit  : 0/0
 14868 ;;		Unchanged: 0/0
 14869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14874 ;;Total ram usage:        0 bytes
 14875 ;; Hardware stack levels used:    1
 14876 ;; This function calls:
 14877 ;;		Nothing
 14878 ;; This function is called by:
 14879 ;;		_EXT_INT_Initialize
 14880 ;;		_INT2_CallBack
 14881 ;; This function uses a reentrant model
 14882 ;;
 14883                           
 14884                           	psect	text85
 14885  0060C6                     __ptext85:
 14886                           	opt callstack 0
 14887  0060C6                     _INT2_DefaultInterruptHandler:
 14888                           	opt callstack 17
 14889                           
 14890                           ; _INT2_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 14891                           
 14892                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14893                           ;incstack = 0
 14894  0060C6  0012               	return		;funcret
 14895  0060C8                     __end_of_INT2_DefaultInterruptHandler:
 14896                           	opt callstack 0
 14897                           
 14898 ;; *************** function _Default_ISR *****************
 14899 ;; Defined at:
 14900 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 14901 ;; Parameters:    Size  Location     Type
 14902 ;;		None
 14903 ;; Auto vars:     Size  Location     Type
 14904 ;;		None
 14905 ;; Return value:  Size  Location     Type
 14906 ;;                  1    wreg      void 
 14907 ;; Registers used:
 14908 ;;		None
 14909 ;; Tracked objects:
 14910 ;;		On entry : 0/0
 14911 ;;		On exit  : 0/0
 14912 ;;		Unchanged: 0/0
 14913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14918 ;;Total ram usage:        0 bytes
 14919 ;; Hardware stack levels used:    1
 14920 ;; This function calls:
 14921 ;;		Nothing
 14922 ;; This function is called by:
 14923 ;;		Interrupt level 2
 14924 ;; This function uses a non-reentrant model
 14925 ;;
 14926                           
 14927                           	psect	text86
 14928  0060BC                     __ptext86:
 14929                           	opt callstack 0
 14930  0060BC                     _Default_ISR:
 14931                           	opt callstack 19
 14932                           
 14933                           ;incstack = 0
 14934  0060BC  EE13  F130         	lfsr	1,___inthi_sp
 14935  0060C0  0011               	retfie		f
 14936  0060C2                     __end_of_Default_ISR:
 14937                           	opt callstack 0
 14938                           
 14939 ;; *************** function _ADCC_ISR *****************
 14940 ;; Defined at:
 14941 ;;		line 307 in file "mcc_generated_files/adcc.c"
 14942 ;; Parameters:    Size  Location     Type
 14943 ;;		None
 14944 ;; Auto vars:     Size  Location     Type
 14945 ;;		None
 14946 ;; Return value:  Size  Location     Type
 14947 ;;                  1    wreg      void 
 14948 ;; Registers used:
 14949 ;;		wreg, status,2, status,0, pclath, tosl
 14950 ;; Tracked objects:
 14951 ;;		On entry : 0/0
 14952 ;;		On exit  : 0/0
 14953 ;;		Unchanged: 0/0
 14954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14959 ;;Total ram usage:        0 bytes
 14960 ;; Hardware stack levels used:    1
 14961 ;; Hardware stack levels required when called:    1
 14962 ;; This function calls:
 14963 ;;		Absolute function
 14964 ;;		_ADCC_DefaultInterruptHandler
 14965 ;; This function is called by:
 14966 ;;		Interrupt level 2
 14967 ;; This function uses a non-reentrant model
 14968 ;;
 14969                           
 14970                           	psect	text87
 14971  005AE8                     __ptext87:
 14972                           	opt callstack 0
 14973  005AE8                     _ADCC_ISR:
 14974                           	opt callstack 18
 14975                           
 14976                           ;incstack = 0
 14977  005AE8  EE13  F130         	lfsr	1,___inthi_sp
 14978                           
 14979                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADIF = 0;
 14980  005AEC  0139               	movlb	57	; () banked
 14981  005AEE  95A1               	bcf	161,2,b	;volatile
 14982                           
 14983                           ; BSR set to: 57
 14984                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADI_InterruptHandler)
 14985  005AF0  5008               	movf	_ADCC_ADI_InterruptHandler,w,c
 14986  005AF2  1009               	iorwf	_ADCC_ADI_InterruptHandler+1,w,c
 14987  005AF4  100A               	iorwf	_ADCC_ADI_InterruptHandler+2,w,c
 14988  005AF6  B4D8               	btfsc	status,2,c
 14989  005AF8  0011               	retfie		f
 14990                           
 14991                           ; BSR set to: 57
 14992                           ;mcc_generated_files/adcc.c: 313:             ADCC_ADI_InterruptHandler();
 14993  005AFA  D801               	call	i2u198_48
 14994  005AFC  0011               	retfie		f
 14995  005AFE                     i2u198_48:
 14996  005AFE  0005               	push	
 14997  005B00  6EFA               	movwf	pclath,c
 14998  005B02  5008               	movf	_ADCC_ADI_InterruptHandler,w,c
 14999  005B04  6EFD               	movwf	tosl,c
 15000  005B06  5009               	movf	_ADCC_ADI_InterruptHandler+1,w,c
 15001  005B08  6EFE               	movwf	tosh,c
 15002  005B0A  500A               	movf	_ADCC_ADI_InterruptHandler+2,w,c
 15003  005B0C  6EFF               	movwf	tosu,c
 15004  005B0E  50FA               	movf	pclath,w,c
 15005  005B10  0012               	return		;indir
 15006  005B12                     __end_of_ADCC_ISR:
 15007                           	opt callstack 0
 15008                           
 15009 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 15010 ;; Defined at:
 15011 ;;		line 320 in file "mcc_generated_files/adcc.c"
 15012 ;; Parameters:    Size  Location     Type
 15013 ;;		None
 15014 ;; Auto vars:     Size  Location     Type
 15015 ;;		None
 15016 ;; Return value:  Size  Location     Type
 15017 ;;                  1  [STACK] void 
 15018 ;; Registers used:
 15019 ;;		None
 15020 ;; Tracked objects:
 15021 ;;		On entry : 3F/39
 15022 ;;		On exit  : 0/0
 15023 ;;		Unchanged: 0/0
 15024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15029 ;;Total ram usage:        0 bytes
 15030 ;; Hardware stack levels used:    1
 15031 ;; This function calls:
 15032 ;;		Nothing
 15033 ;; This function is called by:
 15034 ;;		_ADCC_Initialize
 15035 ;;		_ADCC_ISR
 15036 ;; This function uses a reentrant model
 15037 ;;
 15038                           
 15039                           	psect	text88
 15040  0060C8                     __ptext88:
 15041                           	opt callstack 0
 15042  0060C8                     _ADCC_DefaultInterruptHandler:
 15043                           	opt callstack 18
 15044                           
 15045                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 15046                           
 15047                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15048                           ;incstack = 0
 15049  0060C8  0012               	return		;funcret
 15050  0060CA                     __end_of_ADCC_DefaultInterruptHandler:
 15051                           	opt callstack 0
 15052                           
 15053 ;; *************** function _UART1_tx_vect_isr *****************
 15054 ;; Defined at:
 15055 ;;		line 197 in file "mcc_generated_files/uart1.c"
 15056 ;; Parameters:    Size  Location     Type
 15057 ;;		None
 15058 ;; Auto vars:     Size  Location     Type
 15059 ;;		None
 15060 ;; Return value:  Size  Location     Type
 15061 ;;                  1    wreg      void 
 15062 ;; Registers used:
 15063 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 15064 ;; Tracked objects:
 15065 ;;		On entry : 0/0
 15066 ;;		On exit  : 0/0
 15067 ;;		Unchanged: 0/0
 15068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15073 ;;Total ram usage:        0 bytes
 15074 ;; Hardware stack levels used:    1
 15075 ;; Hardware stack levels required when called:    1
 15076 ;; This function calls:
 15077 ;;		Absolute function
 15078 ;;		_UART1_Transmit_ISR
 15079 ;; This function is called by:
 15080 ;;		Interrupt level 2
 15081 ;; This function uses a non-reentrant model
 15082 ;;
 15083                           
 15084                           	psect	text89
 15085  005D44                     __ptext89:
 15086                           	opt callstack 0
 15087  005D44                     _UART1_tx_vect_isr:
 15088                           	opt callstack 18
 15089                           
 15090                           ;incstack = 0
 15091  005D44  EE13  F130         	lfsr	1,___inthi_sp
 15092                           
 15093                           ;mcc_generated_files/uart1.c: 199:  if (UART1_TxInterruptHandler) {
 15094  005D48  500B               	movf	_UART1_TxInterruptHandler,w,c
 15095  005D4A  100C               	iorwf	_UART1_TxInterruptHandler+1,w,c
 15096  005D4C  100D               	iorwf	_UART1_TxInterruptHandler+2,w,c
 15097  005D4E  B4D8               	btfsc	status,2,c
 15098  005D50  0011               	retfie		f
 15099                           
 15100                           ;mcc_generated_files/uart1.c: 200:   UART1_TxInterruptHandler();
 15101  005D52  D801               	call	i2u412_48
 15102  005D54  0011               	retfie		f
 15103  005D56                     i2u412_48:
 15104  005D56  0005               	push	
 15105  005D58  6EFA               	movwf	pclath,c
 15106  005D5A  500B               	movf	_UART1_TxInterruptHandler,w,c
 15107  005D5C  6EFD               	movwf	tosl,c
 15108  005D5E  500C               	movf	_UART1_TxInterruptHandler+1,w,c
 15109  005D60  6EFE               	movwf	tosh,c
 15110  005D62  500D               	movf	_UART1_TxInterruptHandler+2,w,c
 15111  005D64  6EFF               	movwf	tosu,c
 15112  005D66  50FA               	movf	pclath,w,c
 15113  005D68  0012               	return		;indir
 15114  005D6A                     __end_of_UART1_tx_vect_isr:
 15115                           	opt callstack 0
 15116                           
 15117 ;; *************** function _UART1_Transmit_ISR *****************
 15118 ;; Defined at:
 15119 ;;		line 211 in file "mcc_generated_files/uart1.c"
 15120 ;; Parameters:    Size  Location     Type
 15121 ;;		None
 15122 ;; Auto vars:     Size  Location     Type
 15123 ;;		None
 15124 ;; Return value:  Size  Location     Type
 15125 ;;                  1  [STACK] void 
 15126 ;; Registers used:
 15127 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15128 ;; Tracked objects:
 15129 ;;		On entry : 0/0
 15130 ;;		On exit  : 3B/39
 15131 ;;		Unchanged: 0/0
 15132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15137 ;;Total ram usage:        0 bytes
 15138 ;; Hardware stack levels used:    1
 15139 ;; This function calls:
 15140 ;;		Nothing
 15141 ;; This function is called by:
 15142 ;;		_UART1_Initialize
 15143 ;;		_UART1_tx_vect_isr
 15144 ;; This function uses a reentrant model
 15145 ;;
 15146                           
 15147                           	psect	text90
 15148  005A3A                     __ptext90:
 15149                           	opt callstack 0
 15150  005A3A                     _UART1_Transmit_ISR:
 15151                           	opt callstack 18
 15152                           
 15153                           ;mcc_generated_files/uart1.c: 214:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 15154                           
 15155                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15156                           ;incstack = 0
 15157  005A3A  0E40               	movlw	64
 15158  005A3C  6038               	cpfslt	_uart1TxBufferRemaining,c
 15159  005A3E  D010               	goto	l597
 15160                           
 15161                           ;mcc_generated_files/uart1.c: 215:   U1TXB = uart1TxBuffer[uart1TxTail++];
 15162  005A40  0E80               	movlw	low _uart1TxBuffer
 15163  005A42  2439               	addwf	_uart1TxTail,w,c	;volatile
 15164  005A44  6ED9               	movwf	fsr2l,c
 15165  005A46  6ADA               	clrf	fsr2h,c
 15166  005A48  0E02               	movlw	high _uart1TxBuffer
 15167  005A4A  22DA               	addwfc	fsr2h,f,c
 15168  005A4C  50DF               	movf	indf2,w,c
 15169  005A4E  013D               	movlb	61	; () banked
 15170  005A50  6FEA               	movwf	234,b	;volatile
 15171                           
 15172                           ; BSR set to: 61
 15173  005A52  2A39               	incf	_uart1TxTail,f,c	;volatile
 15174                           
 15175                           ; BSR set to: 61
 15176                           ;mcc_generated_files/uart1.c: 216:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 15177  005A54  0E3F               	movlw	63
 15178  005A56  6439               	cpfsgt	_uart1TxTail,c
 15179  005A58  D001               	goto	l6235
 15180                           
 15181                           ; BSR set to: 61
 15182                           ;mcc_generated_files/uart1.c: 217:    uart1TxTail = 0;
 15183  005A5A  6A39               	clrf	_uart1TxTail,c	;volatile
 15184  005A5C                     l6235:
 15185                           
 15186                           ; BSR set to: 61
 15187                           ;mcc_generated_files/uart1.c: 219:   uart1TxBufferRemaining++;
 15188  005A5C  2A38               	incf	_uart1TxBufferRemaining,f,c	;volatile
 15189                           
 15190                           ;mcc_generated_files/uart1.c: 220:  } else {
 15191  005A5E  0012               	return	
 15192  005A60                     l597:
 15193                           
 15194                           ;mcc_generated_files/uart1.c: 221:   PIE3bits.U1TXIE = 0;
 15195  005A60  0139               	movlb	57	; () banked
 15196  005A62  9993               	bcf	147,4,b	;volatile
 15197                           
 15198                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 15199  005A64  0012               	return		;funcret
 15200  005A66                     __end_of_UART1_Transmit_ISR:
 15201                           	opt callstack 0
 15202                           
 15203 ;; *************** function _UART1_rx_vect_isr *****************
 15204 ;; Defined at:
 15205 ;;		line 204 in file "mcc_generated_files/uart1.c"
 15206 ;; Parameters:    Size  Location     Type
 15207 ;;		None
 15208 ;; Auto vars:     Size  Location     Type
 15209 ;;		None
 15210 ;; Return value:  Size  Location     Type
 15211 ;;                  1    wreg      void 
 15212 ;; Registers used:
 15213 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 15214 ;; Tracked objects:
 15215 ;;		On entry : 0/0
 15216 ;;		On exit  : 0/0
 15217 ;;		Unchanged: 0/0
 15218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15223 ;;Total ram usage:        0 bytes
 15224 ;; Hardware stack levels used:    1
 15225 ;; Hardware stack levels required when called:    1
 15226 ;; This function calls:
 15227 ;;		Absolute function
 15228 ;;		_UART1_Receive_ISR
 15229 ;; This function is called by:
 15230 ;;		Interrupt level 2
 15231 ;; This function uses a non-reentrant model
 15232 ;;
 15233                           
 15234                           	psect	text91
 15235  005D6C                     __ptext91:
 15236                           	opt callstack 0
 15237  005D6C                     _UART1_rx_vect_isr:
 15238                           	opt callstack 18
 15239                           
 15240                           ;incstack = 0
 15241  005D6C  EE13  F130         	lfsr	1,___inthi_sp
 15242                           
 15243                           ;mcc_generated_files/uart1.c: 206:  if (UART1_RxInterruptHandler) {
 15244  005D70  500E               	movf	_UART1_RxInterruptHandler,w,c
 15245  005D72  100F               	iorwf	_UART1_RxInterruptHandler+1,w,c
 15246  005D74  1010               	iorwf	_UART1_RxInterruptHandler+2,w,c
 15247  005D76  B4D8               	btfsc	status,2,c
 15248  005D78  0011               	retfie		f
 15249                           
 15250                           ;mcc_generated_files/uart1.c: 207:   UART1_RxInterruptHandler();
 15251  005D7A  D801               	call	i2u414_48
 15252  005D7C  0011               	retfie		f
 15253  005D7E                     i2u414_48:
 15254  005D7E  0005               	push	
 15255  005D80  6EFA               	movwf	pclath,c
 15256  005D82  500E               	movf	_UART1_RxInterruptHandler,w,c
 15257  005D84  6EFD               	movwf	tosl,c
 15258  005D86  500F               	movf	_UART1_RxInterruptHandler+1,w,c
 15259  005D88  6EFE               	movwf	tosh,c
 15260  005D8A  5010               	movf	_UART1_RxInterruptHandler+2,w,c
 15261  005D8C  6EFF               	movwf	tosu,c
 15262  005D8E  50FA               	movf	pclath,w,c
 15263  005D90  0012               	return		;indir
 15264  005D92                     __end_of_UART1_rx_vect_isr:
 15265                           	opt callstack 0
 15266                           
 15267 ;; *************** function _UART1_Receive_ISR *****************
 15268 ;; Defined at:
 15269 ;;		line 227 in file "mcc_generated_files/uart1.c"
 15270 ;; Parameters:    Size  Location     Type
 15271 ;;		None
 15272 ;; Auto vars:     Size  Location     Type
 15273 ;;		None
 15274 ;; Return value:  Size  Location     Type
 15275 ;;                  1  [STACK] void 
 15276 ;; Registers used:
 15277 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15278 ;; Tracked objects:
 15279 ;;		On entry : 0/0
 15280 ;;		On exit  : 0/0
 15281 ;;		Unchanged: 0/0
 15282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15287 ;;Total ram usage:        0 bytes
 15288 ;; Hardware stack levels used:    1
 15289 ;; This function calls:
 15290 ;;		Nothing
 15291 ;; This function is called by:
 15292 ;;		_UART1_Initialize
 15293 ;;		_UART1_rx_vect_isr
 15294 ;; This function uses a reentrant model
 15295 ;;
 15296                           
 15297                           	psect	text92
 15298  005ED4                     __ptext92:
 15299                           	opt callstack 0
 15300  005ED4                     _UART1_Receive_ISR:
 15301                           	opt callstack 18
 15302                           
 15303                           ;mcc_generated_files/uart1.c: 230:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 15304                           
 15305                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15306                           ;incstack = 0
 15307  005ED4  0E40               	movlw	low _uart1RxBuffer
 15308  005ED6  2437               	addwf	_uart1RxHead,w,c	;volatile
 15309  005ED8  6ED9               	movwf	fsr2l,c
 15310  005EDA  6ADA               	clrf	fsr2h,c
 15311  005EDC  0E02               	movlw	high _uart1RxBuffer
 15312  005EDE  22DA               	addwfc	fsr2h,f,c
 15313  005EE0  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 15314  005EE6  2A37               	incf	_uart1RxHead,f,c	;volatile
 15315                           
 15316                           ;mcc_generated_files/uart1.c: 231:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 15317  005EE8  0E3F               	movlw	63
 15318  005EEA  6437               	cpfsgt	_uart1RxHead,c
 15319  005EEC  D001               	goto	l6245
 15320                           
 15321                           ;mcc_generated_files/uart1.c: 232:   uart1RxHead = 0;
 15322  005EEE  6A37               	clrf	_uart1RxHead,c	;volatile
 15323  005EF0                     l6245:
 15324                           
 15325                           ;mcc_generated_files/uart1.c: 234:  uart1RxCount++;
 15326  005EF0  2A35               	incf	_uart1RxCount,f,c	;volatile
 15327                           
 15328                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 15329  005EF2  0012               	return		;funcret
 15330  005EF4                     __end_of_UART1_Receive_ISR:
 15331                           	opt callstack 0
 15332                           
 15333 ;; *************** function _UART2_tx_vect_isr *****************
 15334 ;; Defined at:
 15335 ;;		line 195 in file "mcc_generated_files/uart2.c"
 15336 ;; Parameters:    Size  Location     Type
 15337 ;;		None
 15338 ;; Auto vars:     Size  Location     Type
 15339 ;;		None
 15340 ;; Return value:  Size  Location     Type
 15341 ;;                  1    wreg      void 
 15342 ;; Registers used:
 15343 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 15344 ;; Tracked objects:
 15345 ;;		On entry : 0/0
 15346 ;;		On exit  : 0/0
 15347 ;;		Unchanged: 0/0
 15348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15353 ;;Total ram usage:        0 bytes
 15354 ;; Hardware stack levels used:    1
 15355 ;; Hardware stack levels required when called:    1
 15356 ;; This function calls:
 15357 ;;		Absolute function
 15358 ;;		_UART2_Transmit_ISR
 15359 ;; This function is called by:
 15360 ;;		Interrupt level 2
 15361 ;; This function uses a non-reentrant model
 15362 ;;
 15363                           
 15364                           	psect	text93
 15365  005D94                     __ptext93:
 15366                           	opt callstack 0
 15367  005D94                     _UART2_tx_vect_isr:
 15368                           	opt callstack 18
 15369                           
 15370                           ;incstack = 0
 15371  005D94  EE13  F130         	lfsr	1,___inthi_sp
 15372                           
 15373                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 15374  005D98  5011               	movf	_UART2_TxInterruptHandler,w,c
 15375  005D9A  1012               	iorwf	_UART2_TxInterruptHandler+1,w,c
 15376  005D9C  1013               	iorwf	_UART2_TxInterruptHandler+2,w,c
 15377  005D9E  B4D8               	btfsc	status,2,c
 15378  005DA0  0011               	retfie		f
 15379                           
 15380                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 15381  005DA2  D801               	call	i2u416_48
 15382  005DA4  0011               	retfie		f
 15383  005DA6                     i2u416_48:
 15384  005DA6  0005               	push	
 15385  005DA8  6EFA               	movwf	pclath,c
 15386  005DAA  5011               	movf	_UART2_TxInterruptHandler,w,c
 15387  005DAC  6EFD               	movwf	tosl,c
 15388  005DAE  5012               	movf	_UART2_TxInterruptHandler+1,w,c
 15389  005DB0  6EFE               	movwf	tosh,c
 15390  005DB2  5013               	movf	_UART2_TxInterruptHandler+2,w,c
 15391  005DB4  6EFF               	movwf	tosu,c
 15392  005DB6  50FA               	movf	pclath,w,c
 15393  005DB8  0012               	return		;indir
 15394  005DBA                     __end_of_UART2_tx_vect_isr:
 15395                           	opt callstack 0
 15396                           
 15397 ;; *************** function _UART2_Transmit_ISR *****************
 15398 ;; Defined at:
 15399 ;;		line 213 in file "mcc_generated_files/uart2.c"
 15400 ;; Parameters:    Size  Location     Type
 15401 ;;		None
 15402 ;; Auto vars:     Size  Location     Type
 15403 ;;		None
 15404 ;; Return value:  Size  Location     Type
 15405 ;;                  1  [STACK] void 
 15406 ;; Registers used:
 15407 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15408 ;; Tracked objects:
 15409 ;;		On entry : 0/0
 15410 ;;		On exit  : 3B/39
 15411 ;;		Unchanged: 0/0
 15412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15417 ;;Total ram usage:        0 bytes
 15418 ;; Hardware stack levels used:    1
 15419 ;; This function calls:
 15420 ;;		Nothing
 15421 ;; This function is called by:
 15422 ;;		_UART2_Initialize
 15423 ;;		_UART2_tx_vect_isr
 15424 ;; This function uses a reentrant model
 15425 ;;
 15426                           
 15427                           	psect	text94
 15428  005A66                     __ptext94:
 15429                           	opt callstack 0
 15430  005A66                     _UART2_Transmit_ISR:
 15431                           	opt callstack 18
 15432                           
 15433                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 15434                           
 15435                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15436                           ;incstack = 0
 15437  005A66  0E40               	movlw	64
 15438  005A68  6032               	cpfslt	_uart2TxBufferRemaining,c
 15439  005A6A  D010               	goto	l717
 15440                           
 15441                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 15442  005A6C  0E00               	movlw	low _uart2TxBuffer
 15443  005A6E  2433               	addwf	_uart2TxTail,w,c	;volatile
 15444  005A70  6ED9               	movwf	fsr2l,c
 15445  005A72  6ADA               	clrf	fsr2h,c
 15446  005A74  0E03               	movlw	high _uart2TxBuffer
 15447  005A76  22DA               	addwfc	fsr2h,f,c
 15448  005A78  50DF               	movf	indf2,w,c
 15449  005A7A  013D               	movlb	61	; () banked
 15450  005A7C  6FD2               	movwf	210,b	;volatile
 15451                           
 15452                           ; BSR set to: 61
 15453  005A7E  2A33               	incf	_uart2TxTail,f,c	;volatile
 15454                           
 15455                           ; BSR set to: 61
 15456                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 15457  005A80  0E3F               	movlw	63
 15458  005A82  6433               	cpfsgt	_uart2TxTail,c
 15459  005A84  D001               	goto	l6257
 15460                           
 15461                           ; BSR set to: 61
 15462                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 15463  005A86  6A33               	clrf	_uart2TxTail,c	;volatile
 15464  005A88                     l6257:
 15465                           
 15466                           ; BSR set to: 61
 15467                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 15468  005A88  2A32               	incf	_uart2TxBufferRemaining,f,c	;volatile
 15469                           
 15470                           ;mcc_generated_files/uart2.c: 224:     }
 15471  005A8A  0012               	return	
 15472  005A8C                     l717:
 15473                           
 15474                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 15475  005A8C  0139               	movlb	57	; () banked
 15476  005A8E  9796               	bcf	150,3,b	;volatile
 15477                           
 15478                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 15479  005A90  0012               	return		;funcret
 15480  005A92                     __end_of_UART2_Transmit_ISR:
 15481                           	opt callstack 0
 15482                           
 15483 ;; *************** function _UART2_rx_vect_isr *****************
 15484 ;; Defined at:
 15485 ;;		line 203 in file "mcc_generated_files/uart2.c"
 15486 ;; Parameters:    Size  Location     Type
 15487 ;;		None
 15488 ;; Auto vars:     Size  Location     Type
 15489 ;;		None
 15490 ;; Return value:  Size  Location     Type
 15491 ;;                  1    wreg      void 
 15492 ;; Registers used:
 15493 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 15494 ;; Tracked objects:
 15495 ;;		On entry : 0/0
 15496 ;;		On exit  : 0/0
 15497 ;;		Unchanged: 0/0
 15498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15503 ;;Total ram usage:        0 bytes
 15504 ;; Hardware stack levels used:    1
 15505 ;; Hardware stack levels required when called:    1
 15506 ;; This function calls:
 15507 ;;		Absolute function
 15508 ;;		_UART2_Receive_ISR
 15509 ;; This function is called by:
 15510 ;;		Interrupt level 2
 15511 ;; This function uses a non-reentrant model
 15512 ;;
 15513                           
 15514                           	psect	text95
 15515  005DBC                     __ptext95:
 15516                           	opt callstack 0
 15517  005DBC                     _UART2_rx_vect_isr:
 15518                           	opt callstack 18
 15519                           
 15520                           ;incstack = 0
 15521  005DBC  EE13  F130         	lfsr	1,___inthi_sp
 15522                           
 15523                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 15524  005DC0  5014               	movf	_UART2_RxInterruptHandler,w,c
 15525  005DC2  1015               	iorwf	_UART2_RxInterruptHandler+1,w,c
 15526  005DC4  1016               	iorwf	_UART2_RxInterruptHandler+2,w,c
 15527  005DC6  B4D8               	btfsc	status,2,c
 15528  005DC8  0011               	retfie		f
 15529                           
 15530                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 15531  005DCA  D801               	call	i2u418_48
 15532  005DCC  0011               	retfie		f
 15533  005DCE                     i2u418_48:
 15534  005DCE  0005               	push	
 15535  005DD0  6EFA               	movwf	pclath,c
 15536  005DD2  5014               	movf	_UART2_RxInterruptHandler,w,c
 15537  005DD4  6EFD               	movwf	tosl,c
 15538  005DD6  5015               	movf	_UART2_RxInterruptHandler+1,w,c
 15539  005DD8  6EFE               	movwf	tosh,c
 15540  005DDA  5016               	movf	_UART2_RxInterruptHandler+2,w,c
 15541  005DDC  6EFF               	movwf	tosu,c
 15542  005DDE  50FA               	movf	pclath,w,c
 15543  005DE0  0012               	return		;indir
 15544  005DE2                     __end_of_UART2_rx_vect_isr:
 15545                           	opt callstack 0
 15546                           
 15547 ;; *************** function _UART2_Receive_ISR *****************
 15548 ;; Defined at:
 15549 ;;		line 233 in file "mcc_generated_files/uart2.c"
 15550 ;; Parameters:    Size  Location     Type
 15551 ;;		None
 15552 ;; Auto vars:     Size  Location     Type
 15553 ;;		None
 15554 ;; Return value:  Size  Location     Type
 15555 ;;                  1  [STACK] void 
 15556 ;; Registers used:
 15557 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15558 ;; Tracked objects:
 15559 ;;		On entry : 0/0
 15560 ;;		On exit  : 0/0
 15561 ;;		Unchanged: 0/0
 15562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15567 ;;Total ram usage:        0 bytes
 15568 ;; Hardware stack levels used:    1
 15569 ;; This function calls:
 15570 ;;		Nothing
 15571 ;; This function is called by:
 15572 ;;		_UART2_Initialize
 15573 ;;		_UART2_rx_vect_isr
 15574 ;; This function uses a reentrant model
 15575 ;;
 15576                           
 15577                           	psect	text96
 15578  005EF4                     __ptext96:
 15579                           	opt callstack 0
 15580  005EF4                     _UART2_Receive_ISR:
 15581                           	opt callstack 18
 15582                           
 15583                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 15584                           
 15585                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15586                           ;incstack = 0
 15587  005EF4  0E00               	movlw	low _uart2RxBuffer
 15588  005EF6  2431               	addwf	_uart2RxHead,w,c	;volatile
 15589  005EF8  6ED9               	movwf	fsr2l,c
 15590  005EFA  6ADA               	clrf	fsr2h,c
 15591  005EFC  0E02               	movlw	high _uart2RxBuffer
 15592  005EFE  22DA               	addwfc	fsr2h,f,c
 15593  005F00  006F F743 FFDF     	movff	15824,indf2	;volatile
 15594  005F06  2A31               	incf	_uart2RxHead,f,c	;volatile
 15595                           
 15596                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 15597  005F08  0E3F               	movlw	63
 15598  005F0A  6431               	cpfsgt	_uart2RxHead,c
 15599  005F0C  D001               	goto	l6267
 15600                           
 15601                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 15602  005F0E  6A31               	clrf	_uart2RxHead,c	;volatile
 15603  005F10                     l6267:
 15604                           
 15605                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 15606  005F10  2A2F               	incf	_uart2RxCount,f,c	;volatile
 15607                           
 15608                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 15609  005F12  0012               	return		;funcret
 15610  005F14                     __end_of_UART2_Receive_ISR:
 15611                           	opt callstack 0
 15612                           
 15613 ;; *************** function _TMR6_ISR *****************
 15614 ;; Defined at:
 15615 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 15616 ;; Parameters:    Size  Location     Type
 15617 ;;		None
 15618 ;; Auto vars:     Size  Location     Type
 15619 ;;		None
 15620 ;; Return value:  Size  Location     Type
 15621 ;;                  1    wreg      void 
 15622 ;; Registers used:
 15623 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 15624 ;; Tracked objects:
 15625 ;;		On entry : 0/0
 15626 ;;		On exit  : 0/0
 15627 ;;		Unchanged: 0/0
 15628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15631 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15632 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15633 ;;Total ram usage:        1 bytes
 15634 ;; Hardware stack levels used:    1
 15635 ;; Hardware stack levels required when called:    2
 15636 ;; This function calls:
 15637 ;;		_TMR6_CallBack
 15638 ;; This function is called by:
 15639 ;;		Interrupt level 2
 15640 ;; This function uses a non-reentrant model
 15641 ;;
 15642                           
 15643                           	psect	text97
 15644  005FA0                     __ptext97:
 15645                           	opt callstack 0
 15646  005FA0                     _TMR6_ISR:
 15647                           	opt callstack 17
 15648                           
 15649                           ;incstack = 0
 15650  005FA0  0060  F0EC  F05B   	movff	btemp,??_TMR6_ISR
 15651  005FA6  EE13  F130         	lfsr	1,___inthi_sp
 15652                           
 15653                           ;mcc_generated_files/tmr6.c: 175:  PIR9bits.TMR6IF = 0;
 15654  005FAA  0139               	movlb	57	; () banked
 15655  005FAC  91A9               	bcf	169,0,b	;volatile
 15656                           
 15657                           ; BSR set to: 57
 15658                           ;mcc_generated_files/tmr6.c: 179:  TMR6_CallBack();
 15659  005FAE  ECF1  F02E         	call	_TMR6_CallBack	;wreg free
 15660  005FB2  0060  F16C  F03B   	movff	??_TMR6_ISR,btemp
 15661  005FB8  0011               	retfie		f
 15662  005FBA                     __end_of_TMR6_ISR:
 15663                           	opt callstack 0
 15664                           
 15665 ;; *************** function _TMR6_CallBack *****************
 15666 ;; Defined at:
 15667 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 15668 ;; Parameters:    Size  Location     Type
 15669 ;;		None
 15670 ;; Auto vars:     Size  Location     Type
 15671 ;;		None
 15672 ;; Return value:  Size  Location     Type
 15673 ;;                  1  [STACK] void 
 15674 ;; Registers used:
 15675 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 15676 ;; Tracked objects:
 15677 ;;		On entry : 3F/39
 15678 ;;		On exit  : 0/0
 15679 ;;		Unchanged: 0/0
 15680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15685 ;;Total ram usage:        0 bytes
 15686 ;; Hardware stack levels used:    1
 15687 ;; Hardware stack levels required when called:    1
 15688 ;; This function calls:
 15689 ;;		Absolute function
 15690 ;;		_TMR6_DefaultInterruptHandler
 15691 ;; This function is called by:
 15692 ;;		_TMR6_ISR
 15693 ;; This function uses a reentrant model
 15694 ;;
 15695                           
 15696                           	psect	text98
 15697  005DE2                     __ptext98:
 15698                           	opt callstack 0
 15699  005DE2                     _TMR6_CallBack:
 15700                           	opt callstack 17
 15701                           
 15702                           ;mcc_generated_files/tmr6.c: 186:  if (TMR6_InterruptHandler) {
 15703                           
 15704                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15705                           ;incstack = 0
 15706  005DE2  0100               	movlb	0	; () banked
 15707  005DE4  5193               	movf	_TMR6_InterruptHandler& (0+255),w,b
 15708  005DE6  1194               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 15709  005DE8  1195               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 15710  005DEA  B4D8               	btfsc	status,2,c
 15711  005DEC  0012               	return	
 15712                           
 15713                           ; BSR set to: 0
 15714                           ;mcc_generated_files/tmr6.c: 187:   TMR6_InterruptHandler();
 15715  005DEE  D801               	call	u500_48
 15716  005DF0  0012               	return	
 15717  005DF2                     u500_48:
 15718  005DF2  0005               	push	
 15719  005DF4  6EFA               	movwf	pclath,c
 15720  005DF6  5193               	movf	_TMR6_InterruptHandler& (0+255),w,b
 15721  005DF8  6EFD               	movwf	tosl,c
 15722  005DFA  5194               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 15723  005DFC  6EFE               	movwf	tosh,c
 15724  005DFE  5195               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 15725  005E00  6EFF               	movwf	tosu,c
 15726  005E02  50FA               	movf	pclath,w,c
 15727  005E04  0012               	return		;indir
 15728  005E06                     __end_of_TMR6_CallBack:
 15729                           	opt callstack 0
 15730                           
 15731 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 15732 ;; Defined at:
 15733 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 15734 ;; Parameters:    Size  Location     Type
 15735 ;;		None
 15736 ;; Auto vars:     Size  Location     Type
 15737 ;;  i               1  [STACK] unsigned char 
 15738 ;; Return value:  Size  Location     Type
 15739 ;;                  1  [STACK] void 
 15740 ;; Registers used:
 15741 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 15742 ;; Tracked objects:
 15743 ;;		On entry : 3F/0
 15744 ;;		On exit  : 0/0
 15745 ;;		Unchanged: 0/0
 15746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15751 ;;Total ram usage:        0 bytes
 15752 ;; Hardware stack levels used:    1
 15753 ;; This function calls:
 15754 ;;		Nothing
 15755 ;; This function is called by:
 15756 ;;		_TMR6_Initialize
 15757 ;;		_TMR6_CallBack
 15758 ;; This function uses a reentrant model
 15759 ;;
 15760                           
 15761                           	psect	text99
 15762  0057AE                     __ptext99:
 15763                           	opt callstack 0
 15764  0057AE                     _TMR6_DefaultInterruptHandler:
 15765                           	opt callstack 0
 15766                           
 15767                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15768  0057AE  52E6               	movf	postinc1,f,c
 15769                           
 15770                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 15771                           ;stkvar	_i @ sp[(-1)+0]
 15772                           
 15773                           ;incstack = 0
 15774  0057B0  0EFF               	movlw	-1
 15775  0057B2  6AE3               	clrf	plusw1,c
 15776  0057B4                     l7789:
 15777                           
 15778                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 15779                           ;stkvar	_i @ sp[(-1)+0]
 15780  0057B4  0EFF               	movlw	-1
 15781  0057B6  50E3               	movf	plusw1,w,c
 15782  0057B8  0D02               	mullw	2
 15783  0057BA  50F3               	movf	prodl,w,c
 15784  0057BC  0F79               	addlw	low _tickCount
 15785  0057BE  6ED9               	movwf	fsr2l,c
 15786  0057C0  6ADA               	clrf	fsr2h,c
 15787  0057C2  50DE               	movf	postinc2,w,c
 15788  0057C4  10DE               	iorwf	postinc2,w,c
 15789  0057C6  B4D8               	btfsc	status,2,c
 15790  0057C8  D00A               	goto	l7793
 15791                           
 15792                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 15793                           ;stkvar	_i @ sp[(-1)+0]
 15794  0057CA  0EFF               	movlw	-1
 15795  0057CC  50E3               	movf	plusw1,w,c
 15796  0057CE  0D02               	mullw	2
 15797  0057D0  50F3               	movf	prodl,w,c
 15798  0057D2  0F79               	addlw	low _tickCount
 15799  0057D4  6ED9               	movwf	fsr2l,c
 15800  0057D6  6ADA               	clrf	fsr2h,c
 15801  0057D8  06DE               	decf	postinc2,f,c
 15802  0057DA  0E00               	movlw	0
 15803  0057DC  5ADD               	subwfb	postdec2,f,c
 15804  0057DE                     l7793:
 15805                           
 15806                           ;mcc_generated_files/tmr6.c: 207:  }
 15807                           ;stkvar	_i @ sp[(-1)+0]
 15808  0057DE  0EFF               	movlw	-1
 15809  0057E0  2AE3               	incf	plusw1,f,c
 15810                           
 15811                           ;stkvar	_i @ sp[(-1)+0]
 15812  0057E2  0EFF               	movlw	-1
 15813  0057E4  006F FF8C  F03B    	movff	plusw1,btemp
 15814  0057EA  0E05               	movlw	5
 15815  0057EC  643B               	cpfsgt	btemp,c
 15816  0057EE  D7E2               	goto	l7789
 15817                           
 15818                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 15819  0057F0  52E5               	movf	postdec1,f,c
 15820  0057F2  0012               	return		;funcret
 15821  0057F4                     __end_of_TMR6_DefaultInterruptHandler:
 15822                           	opt callstack 0
 15823                           
 15824 ;; *************** function _DMA1_DMASCNT_ISR *****************
 15825 ;; Defined at:
 15826 ;;		line 126 in file "mcc_generated_files/dma1.c"
 15827 ;; Parameters:    Size  Location     Type
 15828 ;;		None
 15829 ;; Auto vars:     Size  Location     Type
 15830 ;;		None
 15831 ;; Return value:  Size  Location     Type
 15832 ;;                  1    wreg      void 
 15833 ;; Registers used:
 15834 ;;		None
 15835 ;; Tracked objects:
 15836 ;;		On entry : 0/0
 15837 ;;		On exit  : 3F/0
 15838 ;;		Unchanged: 0/0
 15839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15844 ;;Total ram usage:        0 bytes
 15845 ;; Hardware stack levels used:    1
 15846 ;; This function calls:
 15847 ;;		Nothing
 15848 ;; This function is called by:
 15849 ;;		Interrupt level 2
 15850 ;; This function uses a non-reentrant model
 15851 ;;
 15852                           
 15853                           	psect	text100
 15854  006054                     __ptext100:
 15855                           	opt callstack 0
 15856  006054                     _DMA1_DMASCNT_ISR:
 15857                           	opt callstack 19
 15858                           
 15859                           ;incstack = 0
 15860  006054  EE13  F130         	lfsr	1,___inthi_sp
 15861                           
 15862                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 15863  006058  0139               	movlb	57	; () banked
 15864  00605A  91A2               	bcf	162,0,b	;volatile
 15865                           
 15866                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 15867  00605C  0100               	movlb	0	; () banked
 15868  00605E  976D               	bcf	_spi_link& (0+255),3,b	;volatile
 15869                           
 15870                           ; BSR set to: 0
 15871  006060  0011               	retfie		f
 15872  006062                     __end_of_DMA1_DMASCNT_ISR:
 15873                           	opt callstack 0
 15874                           
 15875 ;; *************** function _DMA1_DMADCNT_ISR *****************
 15876 ;; Defined at:
 15877 ;;		line 133 in file "mcc_generated_files/dma1.c"
 15878 ;; Parameters:    Size  Location     Type
 15879 ;;		None
 15880 ;; Auto vars:     Size  Location     Type
 15881 ;;		None
 15882 ;; Return value:  Size  Location     Type
 15883 ;;                  1    wreg      void 
 15884 ;; Registers used:
 15885 ;;		None
 15886 ;; Tracked objects:
 15887 ;;		On entry : 0/0
 15888 ;;		On exit  : 3F/39
 15889 ;;		Unchanged: 0/0
 15890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15895 ;;Total ram usage:        0 bytes
 15896 ;; Hardware stack levels used:    1
 15897 ;; This function calls:
 15898 ;;		Nothing
 15899 ;; This function is called by:
 15900 ;;		Interrupt level 2
 15901 ;; This function uses a non-reentrant model
 15902 ;;
 15903                           
 15904                           	psect	text101
 15905  00606C                     __ptext101:
 15906                           	opt callstack 0
 15907  00606C                     _DMA1_DMADCNT_ISR:
 15908                           	opt callstack 19
 15909                           
 15910                           ; BSR set to: 0
 15911                           ;incstack = 0
 15912  00606C  EE13  F130         	lfsr	1,___inthi_sp
 15913                           
 15914                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 15915  006070  0139               	movlb	57	; () banked
 15916  006072  93A2               	bcf	162,1,b	;volatile
 15917                           
 15918                           ; BSR set to: 57
 15919  006074  0011               	retfie		f
 15920  006076                     __end_of_DMA1_DMADCNT_ISR:
 15921                           	opt callstack 0
 15922                           
 15923 ;; *************** function _DMA1_DMAA_ISR *****************
 15924 ;; Defined at:
 15925 ;;		line 143 in file "mcc_generated_files/dma1.c"
 15926 ;; Parameters:    Size  Location     Type
 15927 ;;		None
 15928 ;; Auto vars:     Size  Location     Type
 15929 ;;		None
 15930 ;; Return value:  Size  Location     Type
 15931 ;;                  1    wreg      void 
 15932 ;; Registers used:
 15933 ;;		None
 15934 ;; Tracked objects:
 15935 ;;		On entry : 0/0
 15936 ;;		On exit  : 3F/39
 15937 ;;		Unchanged: 0/0
 15938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15943 ;;Total ram usage:        0 bytes
 15944 ;; Hardware stack levels used:    1
 15945 ;; This function calls:
 15946 ;;		Nothing
 15947 ;; This function is called by:
 15948 ;;		Interrupt level 2
 15949 ;; This function uses a non-reentrant model
 15950 ;;
 15951                           
 15952                           	psect	text102
 15953  006078                     __ptext102:
 15954                           	opt callstack 0
 15955  006078                     _DMA1_DMAA_ISR:
 15956                           	opt callstack 19
 15957                           
 15958                           ; BSR set to: 57
 15959                           ;incstack = 0
 15960  006078  EE13  F130         	lfsr	1,___inthi_sp
 15961                           
 15962                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 15963  00607C  0139               	movlb	57	; () banked
 15964  00607E  97A2               	bcf	162,3,b	;volatile
 15965                           
 15966                           ; BSR set to: 57
 15967  006080  0011               	retfie		f
 15968  006082                     __end_of_DMA1_DMAA_ISR:
 15969                           	opt callstack 0
 15970                           
 15971 ;; *************** function _DMA1_DMAOR_ISR *****************
 15972 ;; Defined at:
 15973 ;;		line 154 in file "mcc_generated_files/dma1.c"
 15974 ;; Parameters:    Size  Location     Type
 15975 ;;		None
 15976 ;; Auto vars:     Size  Location     Type
 15977 ;;		None
 15978 ;; Return value:  Size  Location     Type
 15979 ;;                  1    wreg      void 
 15980 ;; Registers used:
 15981 ;;		None
 15982 ;; Tracked objects:
 15983 ;;		On entry : 0/0
 15984 ;;		On exit  : 3F/39
 15985 ;;		Unchanged: 0/0
 15986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15991 ;;Total ram usage:        0 bytes
 15992 ;; Hardware stack levels used:    1
 15993 ;; This function calls:
 15994 ;;		Nothing
 15995 ;; This function is called by:
 15996 ;;		Interrupt level 2
 15997 ;; This function uses a non-reentrant model
 15998 ;;
 15999                           
 16000                           	psect	text103
 16001  006084                     __ptext103:
 16002                           	opt callstack 0
 16003  006084                     _DMA1_DMAOR_ISR:
 16004                           	opt callstack 19
 16005                           
 16006                           ; BSR set to: 57
 16007                           ;incstack = 0
 16008  006084  EE13  F130         	lfsr	1,___inthi_sp
 16009                           
 16010                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 16011  006088  0139               	movlb	57	; () banked
 16012  00608A  95A2               	bcf	162,2,b	;volatile
 16013                           
 16014                           ; BSR set to: 57
 16015  00608C  0011               	retfie		f
 16016  00608E                     __end_of_DMA1_DMAOR_ISR:
 16017                           	opt callstack 0
 16018                           
 16019 ;; *************** function _TMR5_ISR *****************
 16020 ;; Defined at:
 16021 ;;		line 163 in file "mcc_generated_files/tmr5.c"
 16022 ;; Parameters:    Size  Location     Type
 16023 ;;		None
 16024 ;; Auto vars:     Size  Location     Type
 16025 ;;		None
 16026 ;; Return value:  Size  Location     Type
 16027 ;;                  1    wreg      void 
 16028 ;; Registers used:
 16029 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 16030 ;; Tracked objects:
 16031 ;;		On entry : 0/0
 16032 ;;		On exit  : 0/0
 16033 ;;		Unchanged: 0/0
 16034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16037 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16038 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16039 ;;Total ram usage:        1 bytes
 16040 ;; Hardware stack levels used:    1
 16041 ;; Hardware stack levels required when called:    2
 16042 ;; This function calls:
 16043 ;;		_TMR5_CallBack
 16044 ;;		_TMR5_WriteTimer
 16045 ;; This function is called by:
 16046 ;;		Interrupt level 2
 16047 ;; This function uses a non-reentrant model
 16048 ;;
 16049                           
 16050                           	psect	text104
 16051  005930                     __ptext104:
 16052                           	opt callstack 0
 16053  005930                     _TMR5_ISR:
 16054                           	opt callstack 17
 16055                           
 16056                           ; BSR set to: 57
 16057                           ;incstack = 0
 16058  005930  0060  F118  F05C   	movff	btemp+11,??_TMR5_ISR
 16059  005936  EE13  F130         	lfsr	1,___inthi_sp
 16060                           
 16061                           ;mcc_generated_files/tmr5.c: 165:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 168:  PIR8bits.TMR5IF = 0;
 16062  00593A  0139               	movlb	57	; () banked
 16063  00593C  9DA8               	bcf	168,6,b	;volatile
 16064                           
 16065                           ; BSR set to: 57
 16066                           ;mcc_generated_files/tmr5.c: 169:  TMR5_WriteTimer(timer5ReloadVal);
 16067  00593E  0060  F0A3  FFE6   	movff	_timer5ReloadVal,postinc1
 16068  005944  0060  F0A7  FFE6   	movff	_timer5ReloadVal+1,postinc1
 16069  00594A  EC1B  F02C         	call	_TMR5_WriteTimer	;wreg free
 16070                           
 16071                           ;mcc_generated_files/tmr5.c: 172:  if (++CountCallBack >= 50) {
 16072  00594E  4A26               	infsnz	TMR5_ISR@CountCallBack,f,c	;volatile
 16073  005950  2A27               	incf	TMR5_ISR@CountCallBack+1,f,c	;volatile
 16074  005952  5027               	movf	TMR5_ISR@CountCallBack+1,w,c	;volatile
 16075  005954  E104               	bnz	i2u419_40
 16076  005956  0E32               	movlw	50
 16077  005958  5C26               	subwf	TMR5_ISR@CountCallBack,w,c	;volatile
 16078  00595A  A0D8               	btfss	status,0,c
 16079  00595C  D004               	goto	i2l1135
 16080  00595E                     i2u419_40:
 16081                           
 16082                           ;mcc_generated_files/tmr5.c: 174:   TMR5_CallBack();
 16083  00595E  EC03  F02F         	call	_TMR5_CallBack	;wreg free
 16084                           
 16085                           ;mcc_generated_files/tmr5.c: 177:   CountCallBack = 0;
 16086  005962  6A26               	clrf	TMR5_ISR@CountCallBack,c	;volatile
 16087  005964  6A27               	clrf	TMR5_ISR@CountCallBack+1,c	;volatile
 16088  005966                     i2l1135:
 16089  005966  0060  F170  F046   	movff	??_TMR5_ISR,btemp+11
 16090  00596C  0011               	retfie		f
 16091  00596E                     __end_of_TMR5_ISR:
 16092                           	opt callstack 0
 16093                           
 16094 ;; *************** function _TMR5_WriteTimer *****************
 16095 ;; Defined at:
 16096 ;;		line 129 in file "mcc_generated_files/tmr5.c"
 16097 ;; Parameters:    Size  Location     Type
 16098 ;;  timerVal        2  [STACK] unsigned short 
 16099 ;; Auto vars:     Size  Location     Type
 16100 ;;		None
 16101 ;; Return value:  Size  Location     Type
 16102 ;;                  1  [STACK] void 
 16103 ;; Registers used:
 16104 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 16105 ;; Tracked objects:
 16106 ;;		On entry : 3F/39
 16107 ;;		On exit  : 0/0
 16108 ;;		Unchanged: 0/0
 16109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16114 ;;Total ram usage:        0 bytes
 16115 ;; Hardware stack levels used:    1
 16116 ;; This function calls:
 16117 ;;		Nothing
 16118 ;; This function is called by:
 16119 ;;		_TMR5_ISR
 16120 ;; This function uses a reentrant model
 16121 ;;
 16122                           
 16123                           	psect	text105
 16124  005836                     __ptext105:
 16125                           	opt callstack 0
 16126  005836                     _TMR5_WriteTimer:
 16127                           	opt callstack 18
 16128                           
 16129                           ;mcc_generated_files/tmr5.c: 129: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 130: {;mcc_generated_files/tmr5.c: 131:  if (T5CONbits.NOT_SYNC == 1) {
 16130                           
 16131                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16132                           ;incstack = 0
 16133  005836  A49A               	btfss	16282,2,c	;volatile
 16134  005838  D00F               	goto	l3935
 16135                           
 16136                           ;mcc_generated_files/tmr5.c: 133:   T5CONbits.TMR5ON = 0;
 16137  00583A  909A               	bcf	16282,0,c	;volatile
 16138                           
 16139                           ;mcc_generated_files/tmr5.c: 136:   TMR5H = (timerVal >> 8);
 16140                           ;stkvar	_timerVal @ sp[(0)+-2]
 16141  00583C  0EFF               	movlw	255
 16142  00583E  24E1               	addwf	fsr1l,w,c
 16143  005840  6ED9               	movwf	fsr2l,c
 16144  005842  0EFF               	movlw	255
 16145  005844  20E2               	addwfc	fsr1h,w,c
 16146  005846  6EDA               	movwf	fsr2h,c
 16147  005848  50DF               	movf	indf2,w,c
 16148  00584A  6E99               	movwf	16281,c	;volatile
 16149                           
 16150                           ;mcc_generated_files/tmr5.c: 137:   TMR5L = timerVal;
 16151                           ;stkvar	_timerVal @ sp[(0)+-2]
 16152  00584C  0EFE               	movlw	-2
 16153  00584E  006F FF8F FF98     	movff	plusw1,16280	;volatile
 16154                           
 16155                           ;mcc_generated_files/tmr5.c: 140:   T5CONbits.TMR5ON = 1;
 16156  005854  809A               	bsf	16282,0,c	;volatile
 16157                           
 16158                           ;mcc_generated_files/tmr5.c: 141:  } else {
 16159  005856  D00C               	goto	l1118
 16160  005858                     l3935:
 16161                           
 16162                           ;mcc_generated_files/tmr5.c: 143:   TMR5H = (timerVal >> 8);
 16163                           ;stkvar	_timerVal @ sp[(0)+-2]
 16164  005858  0EFF               	movlw	255
 16165  00585A  24E1               	addwf	fsr1l,w,c
 16166  00585C  6ED9               	movwf	fsr2l,c
 16167  00585E  0EFF               	movlw	255
 16168  005860  20E2               	addwfc	fsr1h,w,c
 16169  005862  6EDA               	movwf	fsr2h,c
 16170  005864  50DF               	movf	indf2,w,c
 16171  005866  6E99               	movwf	16281,c	;volatile
 16172                           
 16173                           ;mcc_generated_files/tmr5.c: 144:   TMR5L = timerVal;
 16174                           ;stkvar	_timerVal @ sp[(0)+-2]
 16175  005868  0EFE               	movlw	-2
 16176  00586A  006F FF8F FF98     	movff	plusw1,16280	;volatile
 16177  005870                     l1118:
 16178                           
 16179                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 16180  005870  52E5               	movf	postdec1,f,c
 16181  005872  52E5               	movf	postdec1,f,c
 16182  005874  0012               	return		;funcret
 16183  005876                     __end_of_TMR5_WriteTimer:
 16184                           	opt callstack 0
 16185                           
 16186 ;; *************** function _TMR5_CallBack *****************
 16187 ;; Defined at:
 16188 ;;		line 181 in file "mcc_generated_files/tmr5.c"
 16189 ;; Parameters:    Size  Location     Type
 16190 ;;		None
 16191 ;; Auto vars:     Size  Location     Type
 16192 ;;		None
 16193 ;; Return value:  Size  Location     Type
 16194 ;;                  1  [STACK] void 
 16195 ;; Registers used:
 16196 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 16197 ;; Tracked objects:
 16198 ;;		On entry : 0/39
 16199 ;;		On exit  : 0/0
 16200 ;;		Unchanged: 0/0
 16201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16206 ;;Total ram usage:        0 bytes
 16207 ;; Hardware stack levels used:    1
 16208 ;; Hardware stack levels required when called:    1
 16209 ;; This function calls:
 16210 ;;		Absolute function
 16211 ;;		_TMR5_DefaultInterruptHandler
 16212 ;; This function is called by:
 16213 ;;		_TMR5_ISR
 16214 ;; This function uses a reentrant model
 16215 ;;
 16216                           
 16217                           	psect	text106
 16218  005E06                     __ptext106:
 16219                           	opt callstack 0
 16220  005E06                     _TMR5_CallBack:
 16221                           	opt callstack 17
 16222                           
 16223                           ;mcc_generated_files/tmr5.c: 184:  if (TMR5_InterruptHandler) {
 16224                           
 16225                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16226                           ;incstack = 0
 16227  005E06  0100               	movlb	0	; () banked
 16228  005E08  5190               	movf	_TMR5_InterruptHandler& (0+255),w,b
 16229  005E0A  1191               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 16230  005E0C  1192               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 16231  005E0E  B4D8               	btfsc	status,2,c
 16232  005E10  0012               	return	
 16233                           
 16234                           ; BSR set to: 0
 16235                           ;mcc_generated_files/tmr5.c: 185:   TMR5_InterruptHandler();
 16236  005E12  D801               	call	u343_48
 16237  005E14  0012               	return	
 16238  005E16                     u343_48:
 16239  005E16  0005               	push	
 16240  005E18  6EFA               	movwf	pclath,c
 16241  005E1A  5190               	movf	_TMR5_InterruptHandler& (0+255),w,b
 16242  005E1C  6EFD               	movwf	tosl,c
 16243  005E1E  5191               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 16244  005E20  6EFE               	movwf	tosh,c
 16245  005E22  5192               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 16246  005E24  6EFF               	movwf	tosu,c
 16247  005E26  50FA               	movf	pclath,w,c
 16248  005E28  0012               	return		;indir
 16249  005E2A                     __end_of_TMR5_CallBack:
 16250                           	opt callstack 0
 16251                           
 16252 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 16253 ;; Defined at:
 16254 ;;		line 194 in file "mcc_generated_files/tmr5.c"
 16255 ;; Parameters:    Size  Location     Type
 16256 ;;		None
 16257 ;; Auto vars:     Size  Location     Type
 16258 ;;		None
 16259 ;; Return value:  Size  Location     Type
 16260 ;;                  1  [STACK] void 
 16261 ;; Registers used:
 16262 ;;		wreg, status,2, status,0, btemp+11
 16263 ;; Tracked objects:
 16264 ;;		On entry : 3F/0
 16265 ;;		On exit  : 0/0
 16266 ;;		Unchanged: 0/0
 16267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16272 ;;Total ram usage:        0 bytes
 16273 ;; Hardware stack levels used:    1
 16274 ;; This function calls:
 16275 ;;		Nothing
 16276 ;; This function is called by:
 16277 ;;		_TMR5_Initialize
 16278 ;;		_TMR5_CallBack
 16279 ;; This function uses a reentrant model
 16280 ;;
 16281                           
 16282                           	psect	text107
 16283  005FBA                     __ptext107:
 16284                           	opt callstack 0
 16285  005FBA                     _TMR5_DefaultInterruptHandler:
 16286                           	opt callstack 17
 16287                           
 16288                           ;mcc_generated_files/tmr5.c: 198:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 16289                           
 16290                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16291                           ;incstack = 0
 16292  005FBA  A0BE               	btfss	16318,0,c	;volatile
 16293  005FBC  D002               	goto	u325_40
 16294  005FBE  0E01               	movlw	1
 16295  005FC0  D001               	goto	u325_46
 16296  005FC2                     u325_40:
 16297  005FC2  0E00               	movlw	0
 16298  005FC4                     u325_46:
 16299  005FC4  0AFF               	xorlw	255
 16300  005FC6  6E46               	movwf	btemp+11,c
 16301  005FC8  50BE               	movf	16318,w,c	;volatile
 16302  005FCA  1846               	xorwf	btemp+11,w,c
 16303  005FCC  0BFE               	andlw	-2
 16304  005FCE  1846               	xorwf	btemp+11,w,c
 16305  005FD0  6EBE               	movwf	16318,c	;volatile
 16306                           
 16307                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 16308  005FD2  0012               	return		;funcret
 16309  005FD4                     __end_of_TMR5_DefaultInterruptHandler:
 16310                           	opt callstack 0
 16311                           
 16312                           ;
 16313                           ; Interrupt Vector Table @ 0x8
 16314                           ;
 16315                           
 16316                           	psect	ivt0x8
 16317  000008                     __pivt0x8:
 16318                           	opt callstack 0
 16319  000008                     ivt0x8_base:
 16320                           	opt callstack 0
 16321                           
 16322                           ; Vector 0 : SWINT
 16323  000008  182F               	dw	_Default_ISR shr (0+2)
 16324                           
 16325                           ; Vector 1 : HLVD
 16326  00000A  182F               	dw	_Default_ISR shr (0+2)
 16327                           
 16328                           ; Vector 2 : OSF
 16329  00000C  182F               	dw	_Default_ISR shr (0+2)
 16330                           
 16331                           ; Vector 3 : CSW
 16332  00000E  182F               	dw	_Default_ISR shr (0+2)
 16333                           
 16334                           ; Vector 4 : NVM
 16335  000010  182F               	dw	_Default_ISR shr (0+2)
 16336                           
 16337                           ; Vector 5 : SCAN
 16338  000012  182F               	dw	_Default_ISR shr (0+2)
 16339                           
 16340                           ; Vector 6 : CRC
 16341  000014  182F               	dw	_Default_ISR shr (0+2)
 16342                           
 16343                           ; Vector 7 : IOC
 16344  000016  182F               	dw	_Default_ISR shr (0+2)
 16345                           
 16346                           ; Vector 8 : INT0
 16347  000018  1809               	dw	_INT0_ISR shr (0+2)
 16348                           
 16349                           ; Vector 9 : ZCD
 16350  00001A  182F               	dw	_Default_ISR shr (0+2)
 16351                           
 16352                           ; Vector 10 : AD
 16353  00001C  16BA               	dw	_ADCC_ISR shr (0+2)
 16354                           
 16355                           ; Vector 11 : ADT
 16356  00001E  182F               	dw	_Default_ISR shr (0+2)
 16357                           
 16358                           ; Vector 12 : CMP1
 16359  000020  182F               	dw	_Default_ISR shr (0+2)
 16360                           
 16361                           ; Vector 13 : SMT1
 16362  000022  182F               	dw	_Default_ISR shr (0+2)
 16363                           
 16364                           ; Vector 14 : SMT1PRA
 16365  000024  182F               	dw	_Default_ISR shr (0+2)
 16366                           
 16367                           ; Vector 15 : SMT1PRW
 16368  000026  182F               	dw	_Default_ISR shr (0+2)
 16369                           
 16370                           ; Vector 16 : DMA1SCNT
 16371  000028  1815               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 16372                           
 16373                           ; Vector 17 : DMA1DCNT
 16374  00002A  181B               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 16375                           
 16376                           ; Vector 18 : DMA1OR
 16377  00002C  1821               	dw	_DMA1_DMAOR_ISR shr (0+2)
 16378                           
 16379                           ; Vector 19 : DMA1A
 16380  00002E  181E               	dw	_DMA1_DMAA_ISR shr (0+2)
 16381                           
 16382                           ; Vector 20 : SPI1RX
 16383  000030  182F               	dw	_Default_ISR shr (0+2)
 16384                           
 16385                           ; Vector 21 : SPI1TX
 16386  000032  182F               	dw	_Default_ISR shr (0+2)
 16387                           
 16388                           ; Vector 22 : SPI1
 16389  000034  182F               	dw	_Default_ISR shr (0+2)
 16390                           
 16391                           ; Vector 23 : I2C1RX
 16392  000036  182F               	dw	_Default_ISR shr (0+2)
 16393                           
 16394                           ; Vector 24 : I2C1TX
 16395  000038  182F               	dw	_Default_ISR shr (0+2)
 16396                           
 16397                           ; Vector 25 : I2C1
 16398  00003A  182F               	dw	_Default_ISR shr (0+2)
 16399                           
 16400                           ; Vector 26 : I2C1E
 16401  00003C  182F               	dw	_Default_ISR shr (0+2)
 16402                           
 16403                           ; Vector 27 : U1RX
 16404  00003E  175B               	dw	_UART1_rx_vect_isr shr (0+2)
 16405                           
 16406                           ; Vector 28 : U1TX
 16407  000040  1751               	dw	_UART1_tx_vect_isr shr (0+2)
 16408                           
 16409                           ; Vector 29 : U1E
 16410  000042  182F               	dw	_Default_ISR shr (0+2)
 16411                           
 16412                           ; Vector 30 : U1
 16413  000044  182F               	dw	_Default_ISR shr (0+2)
 16414                           
 16415                           ; Vector 31 : TMR0
 16416  000046  182F               	dw	_Default_ISR shr (0+2)
 16417                           
 16418                           ; Vector 32 : TMR1
 16419  000048  182F               	dw	_Default_ISR shr (0+2)
 16420                           
 16421                           ; Vector 33 : TMR1G
 16422  00004A  182F               	dw	_Default_ISR shr (0+2)
 16423                           
 16424                           ; Vector 34 : TMR2
 16425  00004C  182F               	dw	_Default_ISR shr (0+2)
 16426                           
 16427                           ; Vector 35 : CCP1
 16428  00004E  182F               	dw	_Default_ISR shr (0+2)
 16429                           
 16430                           ; Vector 36 : Undefined
 16431  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 16432                           
 16433                           ; Vector 37 : NCO1
 16434  000052  182F               	dw	_Default_ISR shr (0+2)
 16435                           
 16436                           ; Vector 38 : CWG1
 16437  000054  182F               	dw	_Default_ISR shr (0+2)
 16438                           
 16439                           ; Vector 39 : CLC1
 16440  000056  182F               	dw	_Default_ISR shr (0+2)
 16441                           
 16442                           ; Vector 40 : INT1
 16443  000058  180D               	dw	_INT1_ISR shr (0+2)
 16444                           
 16445                           ; Vector 41 : CMP2
 16446  00005A  182F               	dw	_Default_ISR shr (0+2)
 16447                           
 16448                           ; Vector 42 : DMA2SCNT
 16449  00005C  182F               	dw	_Default_ISR shr (0+2)
 16450                           
 16451                           ; Vector 43 : DMA2DCNT
 16452  00005E  182F               	dw	_Default_ISR shr (0+2)
 16453                           
 16454                           ; Vector 44 : DMA2OR
 16455  000060  182F               	dw	_Default_ISR shr (0+2)
 16456                           
 16457                           ; Vector 45 : DMA2A
 16458  000062  182F               	dw	_Default_ISR shr (0+2)
 16459                           
 16460                           ; Vector 46 : I2C2RX
 16461  000064  182F               	dw	_Default_ISR shr (0+2)
 16462                           
 16463                           ; Vector 47 : I2C2TX
 16464  000066  182F               	dw	_Default_ISR shr (0+2)
 16465                           
 16466                           ; Vector 48 : I2C2
 16467  000068  182F               	dw	_Default_ISR shr (0+2)
 16468                           
 16469                           ; Vector 49 : I2C2E
 16470  00006A  182F               	dw	_Default_ISR shr (0+2)
 16471                           
 16472                           ; Vector 50 : U2RX
 16473  00006C  176F               	dw	_UART2_rx_vect_isr shr (0+2)
 16474                           
 16475                           ; Vector 51 : U2TX
 16476  00006E  1765               	dw	_UART2_tx_vect_isr shr (0+2)
 16477                           
 16478                           ; Vector 52 : U2E
 16479  000070  182F               	dw	_Default_ISR shr (0+2)
 16480                           
 16481                           ; Vector 53 : U2
 16482  000072  182F               	dw	_Default_ISR shr (0+2)
 16483                           
 16484                           ; Vector 54 : TMR3
 16485  000074  182F               	dw	_Default_ISR shr (0+2)
 16486                           
 16487                           ; Vector 55 : TMR3G
 16488  000076  182F               	dw	_Default_ISR shr (0+2)
 16489                           
 16490                           ; Vector 56 : TMR4
 16491  000078  182F               	dw	_Default_ISR shr (0+2)
 16492                           
 16493                           ; Vector 57 : CCP2
 16494  00007A  182F               	dw	_Default_ISR shr (0+2)
 16495                           
 16496                           ; Vector 58 : Undefined
 16497  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 16498                           
 16499                           ; Vector 59 : CWG2
 16500  00007E  182F               	dw	_Default_ISR shr (0+2)
 16501                           
 16502                           ; Vector 60 : CLC2
 16503  000080  182F               	dw	_Default_ISR shr (0+2)
 16504                           
 16505                           ; Vector 61 : INT2
 16506  000082  1811               	dw	_INT2_ISR shr (0+2)
 16507                           
 16508                           ; Vector 62 : Undefined
 16509  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 16510                           
 16511                           ; Vector 63 : Undefined
 16512  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 16513                           
 16514                           ; Vector 64 : Undefined
 16515  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 16516                           
 16517                           ; Vector 65 : Undefined
 16518  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 16519                           
 16520                           ; Vector 66 : Undefined
 16521  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 16522                           
 16523                           ; Vector 67 : Undefined
 16524  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 16525                           
 16526                           ; Vector 68 : Undefined
 16527  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 16528                           
 16529                           ; Vector 69 : Undefined
 16530  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 16531                           
 16532                           ; Vector 70 : TMR5
 16533  000094  164C               	dw	_TMR5_ISR shr (0+2)
 16534                           
 16535                           ; Vector 71 : TMR5G
 16536  000096  182F               	dw	_Default_ISR shr (0+2)
 16537                           
 16538                           ; Vector 72 : TMR6
 16539  000098  17E8               	dw	_TMR6_ISR shr (0+2)
 16540                           
 16541                           ; Vector 73 : CCP3
 16542  00009A  182F               	dw	_Default_ISR shr (0+2)
 16543                           
 16544                           ; Vector 74 : CWG3
 16545  00009C  182F               	dw	_Default_ISR shr (0+2)
 16546                           
 16547                           ; Vector 75 : CLC3
 16548  00009E  182F               	dw	_Default_ISR shr (0+2)
 16549                           
 16550                           ; Vector 76 : Undefined
 16551  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 16552                           
 16553                           ; Vector 77 : Undefined
 16554  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 16555                           
 16556                           ; Vector 78 : Undefined
 16557  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 16558                           
 16559                           ; Vector 79 : Undefined
 16560  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 16561                           
 16562                           ; Vector 80 : CCP4
 16563  0000A8  182F               	dw	_Default_ISR shr (0+2)
 16564                           
 16565                           ; Vector 81 : CLC4
 16566  0000AA  182F               	dw	_Default_ISR shr (0+2)
 16567  0000AC                     ivt0x8_undefint:
 16568                           	opt callstack 0
 16569  0000AC  00FF               	reset	
 16570                           
 16571                           	psect	text108
 16572  000000                     __ptext108:
 16573                           	opt callstack 0
 16574                           
 16575                           	psect	rparam
 16576  0000                     
 16577                           	psect	temp
 16578  00003B                     btemp:
 16579                           	opt callstack 0
 16580  00003B                     	ds	32
 16581  0000                     wtemp0	set	btemp
 16582  0000                     wtemp1	set	btemp+2
 16583  0000                     wtemp2	set	btemp+4
 16584  0000                     wtemp3	set	btemp+6
 16585  0000                     wtemp4	set	btemp+8
 16586  0000                     wtemp5	set	btemp+10
 16587  0000                     wtemp8	set	btemp+1
 16588  0000                     ttemp0	set	btemp
 16589  0000                     ttemp1	set	btemp+3
 16590  0000                     ttemp2	set	btemp+6
 16591  0000                     ttemp3	set	btemp+9
 16592  0000                     ttemp5	set	btemp+1
 16593  0000                     ttemp6	set	btemp+4
 16594  0000                     ttemp7	set	btemp+8
 16595  0000                     ltemp0	set	btemp
 16596  0000                     ltemp1	set	btemp+4
 16597  0000                     ltemp2	set	btemp+8
 16598  0000                     lltemp0	set	btemp
 16599  0000                     lltemp1	set	btemp+8
 16600  0000                     lltemp2	set	btemp+16
 16601  0000                     lltemp3	set	btemp+24
 16602                           tosu	equ	0x3FFF
 16603                           tosh	equ	0x3FFE
 16604                           tosl	equ	0x3FFD
 16605                           stkptr	equ	0x3FFC
 16606                           pclatu	equ	0x3FFB
 16607                           pclath	equ	0x3FFA
 16608                           pcl	equ	0x3FF9
 16609                           tblptru	equ	0x3FF8
 16610                           tblptrh	equ	0x3FF7
 16611                           tblptrl	equ	0x3FF6
 16612                           tablat	equ	0x3FF5
 16613                           prodh	equ	0x3FF4
 16614                           prodl	equ	0x3FF3
 16615                           indf0	equ	0x3FEF
 16616                           postinc0	equ	0x3FEE
 16617                           postdec0	equ	0x3FED
 16618                           preinc0	equ	0x3FEC
 16619                           plusw0	equ	0x3FEB
 16620                           fsr0h	equ	0x3FEA
 16621                           fsr0l	equ	0x3FE9
 16622                           wreg	equ	0x3FE8
 16623                           indf1	equ	0x3FE7
 16624                           postinc1	equ	0x3FE6
 16625                           postdec1	equ	0x3FE5
 16626                           preinc1	equ	0x3FE4
 16627                           plusw1	equ	0x3FE3
 16628                           fsr1h	equ	0x3FE2
 16629                           fsr1l	equ	0x3FE1
 16630                           bsr	equ	0x3FE0
 16631                           indf2	equ	0x3FDF
 16632                           postinc2	equ	0x3FDE
 16633                           postdec2	equ	0x3FDD
 16634                           preinc2	equ	0x3FDC
 16635                           plusw2	equ	0x3FDB
 16636                           fsr2h	equ	0x3FDA
 16637                           fsr2l	equ	0x3FD9
 16638                           status	equ	0x3FD8


Data Sizes:
    Strings     165
    Constant    0
    Data        239
    BSS         626
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      2      61
    BANK0           160      0     153
    BANK1           256      0     207
    BANK2           256      0     248
    BANK3           256      0     198
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    ?_secs_II_message.reply	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK2[56]), H12(BANK1[30]), H10(BANK1[65]), 

    ?_secs_II_message.header	PTR unsigned char  size(2) Largest target is 65
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[65]), 

    _r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_25(CODE[3]), STR_21(CODE[3]), 

    r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_25(CODE[3]), STR_21(CODE[3]), 

    _l	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[21]), 
		 -> STR_14(CODE[20]), STR_13(CODE[6]), STR_12(CODE[14]), STR_11(CODE[20]), 
		 -> STR_10(CODE[19]), STR_9(CODE[20]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[19]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    l	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[21]), 
		 -> STR_14(CODE[20]), STR_13(CODE[6]), STR_12(CODE[14]), STR_11(CODE[20]), 
		 -> STR_10(CODE[19]), STR_9(CODE[20]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[19]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 88
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_3(CODE[6]), V(BANK0[88]), 

    a	PTR const unsigned char  size(2) Largest target is 88
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_3(CODE[6]), V(BANK0[88]), 

    fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_15(CODE[21]), STR_14(CODE[20]), STR_13(CODE[6]), STR_12(CODE[14]), 
		 -> STR_11(CODE[20]), STR_10(CODE[19]), STR_9(CODE[20]), STR_8(CODE[6]), 
		 -> STR_7(CODE[6]), STR_6(CODE[14]), STR_5(CODE[19]), STR_4(CODE[15]), 
		 -> STR_2(CODE[12]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(1) Largest target is 88
		 -> V(BANK0[88]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 88
		 -> V(BANK0[88]), 

    s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    S4284_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 88
		 -> V(BANK0[88]), 

    fp.buffer	PTR unsigned char  size(1) Largest target is 88
		 -> V(BANK0[88]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[21]), 
		 -> STR_14(CODE[20]), STR_13(CODE[6]), STR_12(CODE[14]), STR_11(CODE[20]), 
		 -> STR_10(CODE[19]), STR_9(CODE[20]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[19]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(1) Largest target is 21
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[21]), 
		 -> STR_14(CODE[20]), STR_13(CODE[6]), STR_12(CODE[14]), STR_11(CODE[20]), 
		 -> STR_10(CODE[19]), STR_9(CODE[20]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[19]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_3(CODE[6]), V(BANK0[88]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 1
		 -> cfmt(STACK[1]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_3(CODE[6]), V(BANK0[88]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_3(CODE[6]), 
		 -> V(BANK0[88]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    F16618.reply	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK2[56]), H12(BANK1[30]), H10(BANK1[65]), 

    F16618.header	PTR unsigned char  size(2) Largest target is 65
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[65]), 

    byte_block	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK2[56]), H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK1[30]), H10(BANK1[65]), 

    k	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK2[56]), H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK1[30]), H10(BANK1[65]), 

    t_link	PTR enum E16163 size(1) Largest target is 88
		 -> V(BANK0[88]), 

    S3607response_type$reply	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK2[56]), H12(BANK1[30]), H10(BANK1[65]), 

    F16607.reply	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK2[56]), H12(BANK1[30]), H10(BANK1[65]), 

    S3607response_type$header	PTR unsigned char  size(2) Largest target is 65
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[65]), 

    F16607.header	PTR unsigned char  size(2) Largest target is 65
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[65]), 

    r_link	PTR enum E16163 size(1) Largest target is 88
		 -> V(BANK0[88]), 

    m_link	PTR enum E16163 size(1) Largest target is 88
		 -> V(BANK0[88]), 

    byte_block	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK2[56]), H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK1[30]), H10(BANK1[65]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(1) Largest target is 88
		 -> V(BANK0[88]), 

    strPtr	PTR unsigned char  size(1) Largest target is 88
		 -> V(BANK0[88]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1984spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1984spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT2_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT2_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT2_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT2_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT2_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT2_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT2_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT2_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT2_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _INT2_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _INT2_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _INT2_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _INT2_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _INT2_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _INT2_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _INT2_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _INT2_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _INT2_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _INT2_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _INT2_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _INT2_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _INT2_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _INT2_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _INT2_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _INT2_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _INT2_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _INT2_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _INT2_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _INT2_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _INT2_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _INT2_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _INT2_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _INT2_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   41285
                  _SYSTEM_Initialize
                             _WaitMs
                _eaDogM_WriteCommand
            _eaDogM_WriteStringAtPos
                       _init_display
                         _m_protocol
                         _r_protocol
                            _sprintf
                         _t_protocol
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _t_protocol                                           2     1      1    1627
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                   _UART1_put_buffer
                    _secs_II_message
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_send                                            9     5      4     837
                        _UART1_Write
                  _UART1_is_tx_ready
                   _UART1_put_buffer
                     _block_checksum
 ---------------------------------------------------------------------------------
 (3) _block_checksum                                       8     4      4     167
 ---------------------------------------------------------------------------------
 (3) _UART1_put_buffer                                     1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _UART1_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _secs_II_message                                      7     0      7     132
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             19     9     10    8312
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _r_protocol                                           2     1      1     643
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                             _WaitMs
                       _run_checksum
 ---------------------------------------------------------------------------------
 (3) _UART1_Write                                          1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _m_protocol                                           2     1      1     892
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                  _UART1_is_rx_ready
                         _UART2_Read
                  _UART2_is_rx_ready
                             _WaitMs
                       _run_checksum
 ---------------------------------------------------------------------------------
 (2) _run_checksum                                         2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _UART2_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART2_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (2) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1202
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteStringAtPos                              3     0      3   18878
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteString                                   1     0      1    9473
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1    9343
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_dma                                     1     0      1    9312
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      22
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      22
 ---------------------------------------------------------------------------------
 (3) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (3) _printf                                               7     4      3    8087
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     1      5    7988
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           39    33      6    7749
                               _ctoa
                               _dtoa
                              _fputc
                               _stoa
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              6     2      4     225
 ---------------------------------------------------------------------------------
 (4) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (7) _ringBufS_put_dma                                     3     0      3     186
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     179
                    _ADCC_Initialize
                    _CLC1_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                     _DSM_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
                    _NCO1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      30
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      30
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NCO1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      45
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _DSM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      15
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR6_ISR                                            1     1      0     130
                                              0 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR6_CallBack                                       0     0      0     130
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR6_DefaultInterruptHandler                        1     1      0     130
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR5_ISR                                            1     1      0      60
                                              1 COMRAM     1     1      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR5_WriteTimer                                     2     0      2      60
 ---------------------------------------------------------------------------------
 (13) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _CLC1_Initialize
     _CLKREF_Initialize
     _DMA1_Initialize
     _DSM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _NCO1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _WaitMs
     _StartTimer
     _TimerDone
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _eaDogM_WriteStringAtPos
     _eaDogM_WriteString
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _strlen
       _wait_lcd_set
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _m_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_is_rx_ready
     _UART2_Read
     _UART2_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _run_checksum
   _r_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _run_checksum
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _fputc
           _putch
             _ringBufS_put_dma
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
   _t_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _UART1_put_buffer
     _secs_II_message
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _block_checksum
   _wait_lcd_done
     _wdtdelay

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *

 _INT2_ISR (ROOT)
   _INT2_CallBack
     Absolute function(Fake) *
     _INT2_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C6      11       77.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F8       9       96.9%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      CF       7       80.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      99       5       95.6%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      2      3D       1       96.8%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     363      58        0.0%
DATA                 0      0     363       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Mar 13 23:44:11 2019

                    _SPI1_Exchange8bit 5F14                                      _V 009A  
     __end_of_TMR5_SetInterruptHandler 5CA2              __end_of_UART2_is_rx_ready 609E  
                          __CFG_CP$OFF 000000                __size_of_ringBufS_flush 0092  
                          __CFG_LVP$ON 000000                                    _H10 0100  
                                  _H12 0141                                    _H13 019F  
                                  _H14 018E                                    _H24 015F  
                                  _H17 017A                                    _H53 02C0  
                                  l194 5FFA                                    l572 591C  
                                  l717 5A8C                                    l579 588C  
                                  l692 58DE                                    l597 5A60  
                                  l847 5F22                                    _GIE 01FE97  
                                  u940 5466                                    u965 549A  
                                  u966 549C                                    u958 5468  
                                  _abs 5722                                    _pad 4900  
              __size_of_PMD_Initialize 0014                                    tosl 003FFD  
                                  wreg 003FE8                          _INT0_CallBack 5E6E  
                         _run_checksum 59E2                     _UART1_Transmit_ISR 5A3A  
                        __CFG_BBEN$OFF 000000                          _INT1_CallBack 5E90  
                         __CFG_ZCD$OFF 000000                                   l1118 5870  
                                 l1320 55EE                                   l1216 25E8  
                                 l1242 27F2                                   l1226 2698  
                                 l1244 27F6                                   l1237 2788  
                                 l1254 29AA                                   l1248 28B0  
                                 l1258 2A06                                   l1259 2A32  
                                 l1452 4FBE                                   l1630 3EC8  
                                 l1456 535E                                   l2540 4B16  
                                 l1804 3A70                                   l1644 4024  
                                 l2518 5762                                   l1823 2F40  
                                 l5201 4FEC                                   l1593 36F0  
                                 l1665 4766                                   l5203 500E  
                                 l6003 41D2                                   l2572 48F6  
                                 l1757 495C                                   l6013 41F4  
                                 l6101 4322                                   l6015 421A  
                                 l6103 4354                                   l1777 3028  
                                 l6033 423E                                   l5315 44FE  
                                 l5307 4452                                   l5243 5752  
                                 l6051 4276                                   l6035 4258  
                                 l5261 3CFA                                   l5255 3CA6  
                                 l6063 4290                                   l6401 37A4  
                                 l6065 42CE                                   l6235 5A5C  
                                 l5267 3D40                                   l6245 5EF0  
                                 l6421 3872                                   l6413 3824  
                                 l6405 37C8                                   l8013 3F24  
                                 l8005 3EF4                                   l3935 5858  
                                 l5279 3E12                                   l5471 4804  
                                 l6423 3876                                   l8031 3F9C  
                                 l8015 3F36                                   l6257 5A88  
                                 l5705 5E44                                   l6433 389A  
                                 l6409 37F4                                   l6089 4308  
                                 l8025 3F78                                   l8201 27C4  
                                 l8121 25EE                                   l6267 5F10  
                                 l5299 43CA                                   l5467 47D4  
                                 l5563 5600                                   l5651 5AB4  
                                 l8043 3FFA                                   l8035 3FC2  
                                 l6613 2140                                   l5637 58AC  
                                 l6453 391A                                   l8061 405C  
                                 l8053 4040                                   l8029 3F90  
                                 l8205 27DA                                   l8221 285E  
                                 l8117 25CA                                   l6703 2376  
                                 l5639 58AE                                   l6455 391E  
                                 l6383 3746                                   l6375 3716  
                                 l6359 36BA                                   l8119 25D2  
                                 l7441 4A44                                   l7521 3080  
                                 l7601 3BC8                                   l6721 23CE  
                                 l6633 21B4                                   l6449 3904  
                                 l6385 3752                                   l6465 3932  
                                 l8081 40B8                                   l8057 4054  
                                 l8161 26F0                                   l7451 524C  
                                 l7531 3292                                   l6619 2168  
                                 l6459 392A                                   l6467 3974  
                                 l8083 40C0                                   l8067 4078  
                                 l8091 4118                                   l8227 2896  
                                 l8219 282C                                   l8155 26D6  
                                 l7461 492C                                   l7517 3062  
                                 l7509 3018                                   l7605 3C04  
                                 l7701 3462                                   l5837 58F4  
                                 l5861 58B6                                   l6741 249C  
                                 l6733 244E                                   l6725 23F2  
                                 l6717 23B0                                   l6653 221C  
                                 l6397 3786                                   l8085 40C8  
                                 l8077 40A6                                   l8245 28FC  
                                 l7455 528A                                   l7471 49A2  
                                 l7551 3344                                   l6743 24A0  
                                 l6671 2274                                   l6647 2200  
                                 l8079 40B4                                   l8263 2974  
                                 l8183 2764                                   l7465 4954  
                                 l7641 2CB0                                   l7721 3638  
                                 l7713 358A                                   l5961 59F0  
                                 l6753 24C4                                   l6729 241E  
                                 l6585 20AC                                   l8089 40D6  
                                 l8273 29AE                                   l8177 2750  
                                 l7475 49EC                                   l7467 4966  
                                 l7483 5384                                   l7555 3380  
                                 l7707 3520                                   l6771 2530  
                                 l6691 2342                                   l6683 22F4  
                                 l6675 2298                                   l6667 2256  
                                 l8259 2964                                   l8275 29DA  
                                 l8187 277C                                   l8179 2754  
                                 l7485 53B0                                   l7653 2DD6  
                                 l7637 2C5E                                   l7629 2B7A  
                                 l7733 51BE                                   l6781 254E  
                                 l6773 2534                                   l6693 2346  
                                 l8285 2A0A                                   l7591 3B12  
                                 l7583 3AA6                                   l7567 39F2  
                                 l7663 2E7E                                   l7735 5200  
                                 l7831 5154                                   l6775 253C  
                                 l6679 22C4                                   l6599 20F6  
                                 l5983 417A                                   l7673 2ED6  
                                 l6777 2540                                   l6769 2522  
                                 l6785 255C                                   l5969 413C  
                                 l7761 4C96                                   l8297 2A98  
                                 l7587 3AE2                                   l5899 5AD2  
                                 l6779 2548                                   l6787 259E  
                                 l7597 3B9C                                   l7669 2ED2  
                                 l5989 4198                                   l7757 4C24  
                                 l7861 46E4                                   l7853 4636  
                                 l7679 2EF2                                   l7793 57DE  
                                 l7873 4738                                   l7865 46FE  
                                 l7875 4760                                   l7789 57B4  
                                 STR_1 2051                                   STR_2 207F  
                                 STR_3 2097                                   STR_4 2062  
                                 STR_5 203E                                   STR_6 2071  
                                 STR_7 2091                                   STR_8 208B  
                                 STR_9 202A                                   _LATA 003FBA  
                                 u2310 503C                                   _LATB 003FBB  
                                 _LATC 003FBC                                   u2400 3CA0  
                                 _LATD 003FBD                                   _LATE 003FBE  
                                 _LATF 003FBF                                   u2420 3CF6  
                                 u2317 502E                                   u2431 3D00  
                                 u2440 3D3A                                   u2600 4588  
                                 u2520 43C4                                   u2450 3D6C  
                                 u2540 441A                                   u2380 5736  
                                 u2470 3E4A                                   u2550 444C  
                                 u4400 4A38                                   u2560 447E  
                                 u4065 24EE                                   u2490 3E9C  
                                 u4075 24FE                                   u4067 24F2  
                                 u4420 4AB4                                   u2580 4536  
                                 u4500 2F7A                                   u5300 2956  
                                 u5220 275E                                   u4085 250E  
                                 u4077 2502                                   u4510 2F7C  
                                 u4087 2512                                   u5071 3FB6  
                                 u4600 32EC                                   u5320 29A0  
                                 u4601 32EA                                   u4610 3300  
                                 u4530 2FEC                                   u5306 2958  
                                 _T6PR 003F93                                   u4620 3304  
                                 u2940 48AC                                   u5260 2794  
                                 _PMD0 0039C0                                   _PMD1 0039C1  
                                 u4550 2FFE                                   u4710 3B08  
                                 u5326 29A2                                   _PMD2 0039C2  
                                 u3575 38C4                                   _PMD3 0039C3  
                                 u4640 331A                                   u4720 3B4E  
                                 _PMD4 0039C4                                   u3585 38D4  
                                 u3577 38C8                                   _PMD5 0039C5  
                                 u4570 304E                                   u4810 2D08  
                                 u5266 2796                                   _PMD6 0039C6  
                                 u3595 38E4                                   u3587 38D8  
                                 _PMD7 0039C7                                   u4580 32A6  
                                 u3597 38E8                                   u4750 3C2A  
                                 u4591 32D6                                   u4727 3B40  
                                 u4940 5144                                   u4790 2BCA  
                                 u4950 4630                                   u4880 36AC  
                                 _PLLR 01CEE0                                   _WPUA 003A41  
                                 _WPUB 003A51                                   _WPUC 003A61  
                                 _WPUD 003A71                                   _WPUE 003A81  
                                 _WPUF 003A91                          _INT2_CallBack 5EB2  
                     __end_of_ADCC_ISR 5B12                          __CFG_FCMEN$ON 000000  
                                 _dbuf 01AF                                   _ctoa 5366  
                                 _main 25B0                                   _dtoa 2F4A  
                                 _prec 0022                                   _nout 0096  
                                 fsr0h 003FEA                                   fsr1h 003FE2  
                                 indf0 003FEF                                   fsr2h 003FDA  
                                 fsr0l 003FE9                                   indf1 003FE7  
                                 indf2 003FDF                                   fsr1l 003FE1  
                                 fsr2l 003FD9                                   _stoa 3986  
                                 btemp 003B      __size_of_INT2_SetInterruptHandler 0028  
                                 prodl 003FF3                                   start 00AE  
                      _timer5ReloadVal 0028              __end_of_SPI1_Exchange8bit 5F32  
                        __CFG_CSWEN$ON 000000                      _UART1_rx_vect_isr 5D6C  
                         ___param_bank 000000             __size_of_UART1_is_rx_ready 0008  
                   ?_UART1_rx_vect_isr 005B             __size_of_UART1_is_tx_ready 0008  
                     __end_of_INT0_ISR 6032                       __end_of_INT1_ISR 6042  
                     __end_of_INT2_ISR 6052         __size_of_OSCILLATOR_Initialize 0016  
             __end_of_ringBufS_put_dma 4FC6          __end_of_OSCILLATOR_Initialize 6000  
                                PRLOCK 0039EF                        __end_of___aodiv 3EC4  
                                _ADCAP 003EF5                                  _ADACT 003EFE  
                                _ADCLK 003EFF                        __end_of___aomod 45AC  
                                _ADPCH 003EF1                                  _ADREF 003EFD  
                                STR_10 203E                                  STR_11 2016  
                                STR_12 2071                                  STR_13 208B  
                                STR_21 209D                                  STR_14 2016  
                                STR_23 20A0                                  STR_15 2001  
                                STR_16 2088                                  STR_25 20A0  
                                STR_17 20A3                          __CFG_WDTE$OFF 000000  
                                STR_19 209D                                  _ADRPT 003EEC  
                                _U1P1H 003DED                                  _U1P2H 003DEF  
                                _U1P1L 003DEC                                  _U1P3H 003DF1  
                                _U1P2L 003DEE                                  _U1P3L 003DF0  
                                _U2P1L 003DD4                                  _U2P2L 003DD6  
                                _U2P3L 003DD8                                  _T5CLK 003F9D  
                                _T5CON 003F9A                                  _T6CON 003F94  
                       __CFG_DEBUG$OFF 000000                                  _T6HLT 003F95  
                                _U1UIR 003DF8                                  _U1RXB 003DE8  
                                _U2UIR 003DE0                                  _U1TXB 003DEA  
                                _U2RXB 003DD0                                  _U2TXB 003DD2  
                                _T6TMR 003F92                                  _T6RST 003F97  
                  ??_UART1_rx_vect_isr 005B                                  _ISRPR 0039F1  
                                _OSCEN 0039DD                                  _TMR5H 003F99  
                                _TMR5L 003F98                                  _TRISA 003FC2  
                                _TRISB 003FC3                                  _TRISC 003FC4  
                                _TRISD 003FC5                                  _TRISE 003FC6  
                                _TRISF 003FC7                            _Default_ISR 60BC  
    __size_of_TMR6_SetInterruptHandler 0028                      _UART1_tx_vect_isr 5D44  
                        __CFG_WRTB$OFF 000000                          __CFG_WRTC$OFF 000000  
                        __CFG_WRTD$OFF 000000                       __end_of_TMR5_ISR 596E  
                         _DMA1CON0bits 003BFC                       __end_of_TMR6_ISR 5FBA  
                         _DMA1CON1bits 003BFD                     r_protocol@rxData_l 002C  
                                _flags 0024                                  _fputc 4A14  
           __size_of_send_lcd_cmd_long 0028                                  _fputs 523C  
                   __CFG_MCLRE$EXTMCLR 000000                     ?_UART1_tx_vect_isr 005B  
                                _width 0020                                  _putch 5F86  
             _INT1_SetInterruptHandler 5CCA                                  pclath 003FFA  
                                tablat 003FF5                __size_of_DSM_Initialize 001C  
                                ltemp0 003B                                  ltemp1 003F  
                                ltemp2 0043               __size_of_DMA1_Initialize 006A  
                                plusw1 003FE3                                  plusw2 003FDB  
                                ttemp0 003B                                  ttemp1 003E  
                                ttemp2 0041                                  ttemp3 0044  
                                ttemp5 003C                                  ttemp6 003F  
                                ttemp7 0043                                  status 003FD8  
  __end_of_UART1_SetRxInterruptHandler 5C2A            _UART1_SetRxInterruptHandler 5C02  
                                wtemp0 003B                                  wtemp1 003D  
                                wtemp2 003F                                  wtemp3 0041  
                                wtemp4 0043                                  wtemp5 0045  
                                wtemp8 003C                        __end_of_sprintf 4E6C  
                      __end_of_strncmp 4900                    ??_UART1_tx_vect_isr 005B  
            __size_of_DMA1_DMADCNT_ISR 000A              __end_of_UART1_rx_vect_isr 5D92  
             __size_of_SPI1_Initialize 0016                        _TMR5_Initialize 5768  
                __end_of_ringBufS_init 5B8A                        __initialization 4CDC  
                    _UART2_rx_vect_isr 5DBC                           __end_of_ctoa 53EE  
                         __end_of_main 2A9C                           __end_of_dtoa 33CA  
                         __end_of_stoa 3C44             __size_of_UART2_is_rx_ready 0008  
                       __CFG_SAFEN$OFF 000000                     ?_UART2_rx_vect_isr 005B  
             _TMR5_SetInterruptHandler 5C7A                          __activetblptr 000003  
            __size_of_DMA1_DMASCNT_ISR 000E   __size_of_UART1_SetTxInterruptHandler 0028  
                  ??_UART2_rx_vect_isr 005B              __end_of_UART1_tx_vect_isr 5D6A  
                               INTCON0 003FD2   __size_of_UART2_SetRxInterruptHandler 0028  
                       __CFG_MVECEN$ON 000000                        _TMR6_Initialize 5C2A  
                     _UART1_Initialize 54BE                      _UART2_tx_vect_isr 5D94  
                   _UART2_Transmit_ISR 5A66                                 _ADACCU 003EEA  
                               _ADACQH 003EF4                                 _ADACQL 003EF3  
                               _ADCON0 003EF8                                 _ADCON1 003EF9  
                               _ADCON2 003EFA                                 _ADCON3 003EFB  
                               _ADLTHH 003EDF                                 _ADLTHL 003EDE  
                               _ADPREH 003EF7                                 _ADPREL 003EF6  
                               _DMA1PR 0039F3                                 _DMA2PR 0039F4  
                               _ADSTAT 003EFC                                 _ADUTHH 003EE1  
                               _ADUTHL 003EE0                                 _ANSELA 003A40  
                               _ANSELB 003A50                                 _ANSELC 003A60  
                               _ANSELD 003A70                                 _ANSELE 003A80  
                               _ANSELF 003A90                     ?_UART2_tx_vect_isr 005B  
                               _MD1SRC 003CFC                                 _U1CON0 003DF2  
                               _U1CON1 003DF3                                 _U1CON2 003DF4  
                  __size_of_UART1_Read 003E                                 _U1BRGH 003DF6  
                               _U1FIFO 003DF7                                 _U2CON0 003DDA  
                               _U2CON1 003DDB                                 _U1BRGL 003DF5  
                               _U2CON2 003DDC                                 _U2BRGH 003DDE  
                               _U2FIFO 003DDF                                 _U2BRGL 003DDD  
                               _T5GATE 003F9C                    __size_of_UART2_Read 003E  
                               _T5GCON 003F9B                                 _MAINPR 0039F2  
                               _RA4PPS 003A04                                 _RA5PPS 003A05  
                               _RA6PPS 003A06                                 _RC3PPS 003A13  
                               _RB6PPS 003A0E                                 _RC5PPS 003A15  
                               _ODCONA 003A42                                 _ODCONB 003A52  
                               _ODCONC 003A62                                 _RC6PPS 003A16  
                               _ODCOND 003A72                                 _ODCONE 003A82  
                               _ODCONF 003A92                                 i2l1135 5966  
                               u114_48 5E7C                         __CFG_WDTCCS$SC 000000  
                               u116_48 5E9E                                 u118_48 5EC0  
                               u325_40 5FC2                                 u500_48 5DF2  
                               u325_46 5FC4                                 _SCANPR 0039F7  
                               u343_48 5E16                                 _IVTADH 00389E  
                               _IVTADL 00389D                                 _IVTADU 00389F  
         __size_of_eaDogM_WriteCommand 000E                                 _OSCFRQ 0039DF  
             __end_of_send_lcd_cmd_dma 568C                    ??_UART2_tx_vect_isr 005B  
            __end_of_UART2_rx_vect_isr 5DE2             __size_of_SPI1_Exchange8bit 001E  
               __size_of_DMA1_DMAA_ISR 000A                         __CFG_XINST$OFF 000000  
                    _CLKREF_Initialize 6062                       _UART2_Initialize 5584  
                               _WaitMs 5ABC   __size_of_ADCC_SetADIInterruptHandler 0028  
                       __CFG_STVREN$ON 000000                         _ringBufS_flush 52D4  
                               _memset 33CA                                 clear_0 4D5C  
                               clear_1 4D68                                 clear_2 4D74  
                               clear_3 4D80                                 clear_4 4D8C  
                               _printf 5522                     _eaDogM_WriteString 5108  
                            ?_ADCC_ISR 005B                                 _strlen 4FC6  
                   __size_of_TimerDone 0022                        _ADCC_Initialize 56D8  
                       _PMD_Initialize 6000   __end_of_INT2_DefaultInterruptHandler 60C8  
__size_of_INT2_DefaultInterruptHandler 0002           _INT2_DefaultInterruptHandler 60C6  
                         __pdataCOMRAM 005D              __end_of_UART2_tx_vect_isr 5DBA  
                               lltemp0 003B                                 lltemp1 0043  
                               lltemp2 004B                                 lltemp3 0053  
                         __mediumconst 0000                                 tblptrh 003FF7  
                               tblptrl 003FF6                                 tblptru 003FF8  
                     __end_of_wdtdelay 563E                       __end_of_vfprintf 523C  
                           _StartTimer 596E                        _CLC1_Initialize 5E4C  
        __size_of_INTERRUPT_Initialize 0066                __end_of_TMR5_Initialize 57AE  
                    _SYSTEM_Initialize 57F4                             __accesstop 0060  
              __end_of__initialization 4D9E                              ?_INT0_ISR 005B  
                            ?_INT1_ISR 005B                              ?_INT2_ISR 005B  
            __end_of_CLKREF_Initialize 606C                          ___rparam_used 000001  
           __size_of_UART1_rx_vect_isr 0026                        _TMR5_WriteTimer 5836  
               __end_of_ringBufS_flush 5366                         __pcstackCOMRAM 005B  
                           ___inthi_sp 0D30                           __pidataBANK0 60A6  
                         __pidataBANK1 4E6C                           __pidataBANK2 59AA  
                            ?_TMR5_ISR 005B                              ?_TMR6_ISR 005B  
                       ivt0x8_undefint 00AC                          __end_of_fputc 4B20  
                        __end_of_fputs 52D4                  __end_of_TMR5_CallBack 5E2A  
                        __end_of_putch 5FA0                __end_of_TMR6_Initialize 5C52  
               __end_of_PMD_Initialize 6014                __size_of_block_checksum 00D2  
                           ??_ADCC_ISR 005B                  __end_of_TMR6_CallBack 5E06  
          __size_of_EXT_INT_Initialize 004C             __size_of_UART1_tx_vect_isr 0026  
                        _DMA1_DMAA_ISR 6078       __end_of_INT2_SetInterruptHandler 5CCA  
             _UART2_RxInterruptHandler 0014              __end_of_SYSTEM_Initialize 5836  
                      __CFG_PR1WAY$OFF 000000                        __CFG_IVT1WAY$ON 000000  
                       _DSM_Initialize 5F6A                             __pbssBANK0 0060  
                           __pbssBANK1 01AF                             __pbssBANK2 0200  
                           __pbssBANK3 0300                  _INT0_InterruptHandler 001D  
                           ??_INT0_ISR 005B                             ??_INT1_ISR 005B  
                           ??_INT2_ISR 005B                      __end_of_TimerDone 5E4C  
                     _DMA1_DMADCNT_ISR 606C              __size_of_UART1_put_buffer 002A  
           __size_of_UART2_rx_vect_isr 0026                                IVTBASEH 003FD6  
                              IVTBASEL 003FD5                                IVTBASEU 003FD7  
                __end_of_wait_lcd_done 5F4E                        __CFG_PPS1WAY$ON 000000  
     __end_of_TMR6_SetInterruptHandler 5C7A                __end_of_ADCC_Initialize 5722  
                           ??_TMR5_ISR 005C                             ??_TMR6_ISR 005B  
                   __size_of_secs_send 01C4                                _CLC1CON 003C74  
                              _CLC1POL 003C75                                _DMA1DSA 003BF0  
                              _DMA1DSZ 003BEE                                _DMA1SSA 003BF9  
                              _DMA1SSZ 003BF7                                _ADSTPTH 003EE5  
                              _ADSTPTL 003EE4                                _MD1CARH 003CFE  
                              _MD1CARL 003CFD                      _UART1_Receive_ISR 5ED4  
                              _CLKRCLK 003CE6                                _CLKRCON 003CE5  
                              _NCO1CLK 003F3F                         ?_DMA1_DMAA_ISR 005B  
                     _DMA1_DMASCNT_ISR 6054                                _NCO1CON 003F3E  
                              _U1ERRIE 003DFA                                _U1ERRIR 003DF9  
              __end_of_CLC1_Initialize 5E6E                                _U2ERRIE 003DE2  
                              _U2ERRIR 003DE1                                _INT0PPS 003AC0  
                  __CFG_PWRTS$PWRT_OFF 000000                                _INT1PPS 003AC1  
                              _INT2PPS 003AC2                           ?_Default_ISR 005B  
                 __size_of_UART1_Write 003E             __size_of_UART2_tx_vect_isr 0026  
                              _U1RXPPS 003AE5                                _U2RXPPS 003AE8  
                              _OSCCON1 0039D9                                _OSCCON3 0039DB  
                              _IVTLOCK 003FD4                     __size_of_vfpfcnvrt 04AE  
                              _SPI1CLK 003D1C                                _SPI1RXB 003D10  
                              _SPI1TXB 003D11                                _OSCTUNE 0039DE  
               __end_of_DSM_Initialize 5F86                                _SLRCONA 003A43  
                              _SLRCONB 003A53                                _SLRCONC 003A63  
                              _SLRCOND 003A73                                _SLRCONE 003A83  
                              _SLRCONF 003A93                     __size_of_start_lcd 0006  
              __end_of_TMR5_WriteTimer 5876                     __end_of_UART1_Read 5930  
                   __end_of_UART2_Read 58F2      __size_of_INT0_SetInterruptHandler 0028  
           __size_of_CLKREF_Initialize 000A                __size_of_DMA1_DMAOR_ISR 000A  
                              __Hparam 0000                                __Lparam 0000  
             __end_of_UART1_Initialize 5522                        __size_of_WaitMs 002A  
                              ___aodiv 3C44                                ___aomod 436C  
                           _m_protocol 20A8              __end_of_UART1_Receive_ISR 5EF4  
                         __psmallconst 2000                   __end_of_init_display 4C0A  
                              __pcinit 4CDC                        __size_of_memset 02EC  
                  _eaDogM_WriteCommand 6014                                __ramtop 2000  
          __size_of_UART1_Transmit_ISR 002C               __size_of_NCO1_Initialize 001C  
                              __ptext0 25B0                                __ptext1 3EC4  
                              __ptext2 45AC                                __ptext3 4C0A  
                              __ptext4 5A92                                __ptext5 608E  
                              __ptext6 412A                                __ptext7 4DA4  
                              __ptext8 36B6                                __ptext9 5876  
                    _UART2_Receive_ISR 5EF4                        __size_of_printf 0062  
                      __CFG_WRTAPP$OFF 000000                        __size_of_strlen 00A2  
                              us250999 3EAE                                us261999 459A  
                              us329999 435E                  _OSCILLATOR_Initialize 5FEA  
                         __size_of_abs 0046                                _r_block 0060  
                              us449999 2F64                                us466999 3998  
                         __size_of_pad 0114                                _mode_sw 002E  
                      __CFG_WRTSAF$OFF 000000                              _T5CONbits 003F9A  
             __end_of_UART2_Initialize 55E2                     m_protocol@rxData_l 002D  
           __size_of_SYSTEM_Initialize 0042                                _sprintf 4DA4  
                              _strncmp 4770                   end_of_initialization 4D9E  
                    __end_of_secs_send 4770               _INT2_SetInterruptHandler 5CA2  
             __size_of_secs_II_message 0242                             _r_protocol 36B6  
  __end_of_UART1_SetTxInterruptHandler 5C02            _UART1_SetTxInterruptHandler 5BDA  
  __end_of_UART2_SetRxInterruptHandler 5BDA            _UART2_SetRxInterruptHandler 5BB2  
                           _t_protocol 3EC4                      __end_of_vfpfcnvrt 2F4A  
                            _SPI1TCNTL 003D12                                postdec1 003FE5  
                              postdec2 003FDD                                postinc0 003FEE  
                              postinc1 003FE6                                postinc2 003FDE  
                  __size_of_StartTimer 003C                      __end_of_start_lcd 60BA  
            __end_of_UART2_Receive_ISR 5F14                         wdtdelay@dcount 008C  
                __CFG_WDTCPS$WDTCPS_31 000000                        ??_DMA1_DMAA_ISR 005C  
                       _block_checksum 4C0A                  _INT1_InterruptHandler 001A  
                            _PORTBbits 003FCB               _TMR6_SetInterruptHandler 5C52  
                _TMR5_InterruptHandler 0090   __size_of_UART2_SetTxInterruptHandler 0028  
                    __size_of_ADCC_ISR 002A    __end_of_ADCC_SetADIInterruptHandler 5D42  
          _ADCC_SetADIInterruptHandler 5D1A                 __size_of_ringBufS_init 0028  
                     __CFG_FEXTOSC$ECH 000000                        _DMA1_Initialize 53EE  
                      _SPI1_Initialize 5FD4                       _UART1_put_buffer 5A92  
                    __size_of_INT0_ISR 000E                      __size_of_INT1_ISR 000E  
                    __size_of_INT2_ISR 000E                         __end_of_WaitMs 5AE6  
         __end_of_INTERRUPT_Initialize 54BE                 __end_of_block_checksum 4CDC  
 __end_of_INT0_DefaultInterruptHandler 60C4  __size_of_INT0_DefaultInterruptHandler 0002  
         _INT0_DefaultInterruptHandler 60C2             __size_of_UART1_Receive_ISR 0020  
                        __pidataCOMRAM 60CA                      __size_of_TMR5_ISR 003E  
                    __size_of_TMR6_ISR 001A            __size_of_UART2_Transmit_ISR 002C  
                       __end_of_memset 36B6                         __end_of_printf 5584  
             __end_of_DMA1_DMADCNT_ISR 6076                  __end_of_INT0_CallBack 5E90  
                       __end_of_strlen 5068                    start_initialization 4CDC  
 __end_of_TMR5_DefaultInterruptHandler 5FD4  __size_of_TMR5_DefaultInterruptHandler 001A  
         _TMR5_DefaultInterruptHandler 5FBA        __size_of_PIN_MANAGER_Initialize 00A0  
                          __end_of_abs 5768                  __end_of_INT1_CallBack 5EB2  
                          __end_of_pad 4A14                   __size_of_Default_ISR 0006  
                 __end_of_send_lcd_cmd 5B62                             ivt0x8_base 0008  
                __end_of_INT2_CallBack 5ED4                   secs_II_message@block 0001  
                        _uart1RxBuffer 0240                          _uart1TxBuffer 0280  
                        _uart2RxBuffer 0200               __end_of_DMA1_DMASCNT_ISR 6062  
                        _uart2TxBuffer 0300                         _DMA1_DMAOR_ISR 6084  
                     __CFG_LPBOREN$OFF 000000                  __size_of_init_display 00EA  
          __size_of_eaDogM_WriteString 009C                              _TimerDone 5E2A  
                        _ringBufS_init 5B62                            _MD1CON0bits 003CFA  
                          _MD1CON1bits 003CFB                            __pdataBANK0 00F2  
                          __pdataBANK1 0100                            __pdataBANK2 02C0  
           __size_of_UART2_Receive_ISR 0020             __end_of_EXT_INT_Initialize 56D8  
                      run_checksum@sum 0098        __end_of_eaDogM_WriteStringAtPos 5A3A  
              __end_of_DMA1_Initialize 5458                            __pbssCOMRAM 0001  
     __end_of_INT0_SetInterruptHandler 5D1A                __end_of_SPI1_Initialize 5FEA  
             _UART1_RxInterruptHandler 000E               _UART2_TxInterruptHandler 0011  
                  __size_of_m_protocol 0508              __size_of_ringBufS_put_dma 00AA  
                         _init_display 4B20                 __end_of_DMA1_DMAOR_ISR 608E  
               __size_of_TMR5_CallBack 0024                  _INT2_InterruptHandler 0017  
                _TMR6_InterruptHandler 0093                 __size_of_TMR6_CallBack 0024  
               _PIN_MANAGER_Initialize 5068                   __end_of_wait_lcd_set 60B4  
                            __ptext100 6054                              __ptext101 606C  
                            __ptext102 6078                              __ptext103 6084  
                            __ptext104 5930                              __ptext105 5836  
                            __ptext106 5E06                              __ptext107 5FBA  
                            __ptext108 0000                     __end_of_StartTimer 59AA  
                    __size_of_wdtdelay 005C                      __size_of_vfprintf 0098  
                             _ADCC_ISR 5AE8                    __size_of_r_protocol 02D0  
               __CFG_BBSIZE$BBSIZE_512 000000                            __smallconst 2000  
                             _CLC1GLS0 003C7A                               _CLC1GLS1 003C7B  
                             _CLC1GLS2 003C7C                               _CLC1GLS3 003C7D  
                             _CLC1SEL0 003C76                               _CLC1SEL1 003C77  
                             _CLC1SEL2 003C78                               _CLC1SEL3 003C79  
                             _DMA1CON0 003BFC                               _DMA1CON1 003BFD  
                             _DMA1AIRQ 003BFE                               _DMA1SIRQ 003BFF  
                          _NCO1CONbits 003F3E                    __size_of_t_protocol 0266  
               __size_of_wait_lcd_done 001C                         __size_of_fputc 010C  
                       __size_of_fputs 0098                               _NCO1ACCH 003F39  
                       __size_of_putch 001A                               _NCO1ACCL 003F38  
                             _NCO1ACCU 003F3A                   _INTERRUPT_Initialize 5458  
                             _T6CLKCON 003F96                               _NCO1INCH 003F3C  
                             _NCO1INCL 003F3B                               _NCO1INCU 003F3D  
                      ?_DMA1_DMAOR_ISR 005B                               _INT0_ISR 6024  
                             _INT1_ISR 6034                               _INT2_ISR 6044  
                             _LATCbits 003FBC                               _LATDbits 003FBD  
                             _LATEbits 003FBE      __size_of_INT1_SetInterruptHandler 0028  
                            _secs_send 45AC                               _IPR1bits 003981  
                             _IPR2bits 003982                               _PIE1bits 003991  
                             _IPR3bits 003983                               _PIE2bits 003992  
                             _IPR5bits 003985                               _PIE3bits 003993  
                            _tickCount 0079                               _IPR6bits 003986  
                             _PIE5bits 003995                               _IPR7bits 003987  
                             _IPR8bits 003988                               _PIE6bits 003996  
                             _PIE7bits 003997                               _IPR9bits 003989  
                             _PIE8bits 003998                    __CFG_BORV$VBOR_2P45 000000  
                             _PIE9bits 003999                              _ring_buf1 0383  
                            _ring_buf2 0340                               i2u412_48 5D56  
                             i2u414_48 5D7E                               i2u416_48 5DA6  
                             _PIR1bits 0039A1                               i2u419_40 595E  
                             i2u418_48 5DCE                               _PIR2bits 0039A2  
                             _SPI1BAUD 003D19                               i2u198_48 5AFE  
                             _SPI1CON0 003D14                               _SPI1CON1 003D15  
                             _SPI1CON2 003D16                               _PIR5bits 0039A5  
                             _PIR7bits 0039A7                               _PIR8bits 0039A8  
                             _PIR9bits 0039A9               __size_of_TMR5_Initialize 0046  
           __end_of_UART1_Transmit_ISR 5A66                               _TMR5_ISR 5930  
                             _TMR6_ISR 5FA0                              _vfpfcnvrt 2A9C  
                         _SPI1INTFbits 003D1A                          _TMR5_CallBack 5E06  
                            _start_lcd 60B4              __size_of_send_lcd_cmd_dma 004E  
                        _TMR6_CallBack 5DE2               __end_of_UART1_put_buffer 5ABC  
                __size_of_send_lcd_cmd 0028      __size_of_TMR5_SetInterruptHandler 0028  
                  __end_of_UART1_Write 58B4               __size_of_TMR6_Initialize 0028  
                          _INTCON0bits 003FD2                              copy_data0 4CF0  
                            copy_data1 4D12                              copy_data2 4D34  
             _INT0_SetInterruptHandler 5CF2                 _uart1TxBufferRemaining 0038  
  __end_of_UART2_SetTxInterruptHandler 5BB2            _UART2_SetTxInterruptHandler 5B8A  
                         _uart1RxCount 0035                           _uart2RxCount 002F  
                             __Hrparam 0000       __size_of_eaDogM_WriteStringAtPos 002C  
              __CFG_RSTOSC$EXTOSC_4PLL 000000                   __end_of_run_checksum 5A0E  
                             __Lrparam 0000                     __CFG_BOREN$SBORDIS 000000  
                        _wait_lcd_done 5F32                           _send_lcd_cmd 5B3A  
                     __size_of___aodiv 0280                       __size_of___aomod 0240  
                      _NCO1_Initialize 5F4E                  __end_of_DMA1_DMAA_ISR 6082  
 __size_of_UART1_SetRxInterruptHandler 0028                      ?_DMA1_DMADCNT_ISR 005B  
             __size_of_ADCC_Initialize 004A            __end_of_eaDogM_WriteCommand 6022  
                             __pivt0x8 0008                     ??_DMA1_DMADCNT_ISR 005C  
                             __ptext10 20A8                               __ptext11 59E2  
                             __ptext20 5B12                               __ptext12 5ABC  
                             __ptext21 5B3A                               __ptext13 5E2A  
                             __ptext30 55E2                               __ptext22 5F14  
                             __ptext14 596E                               __ptext31 60B4  
                             __ptext23 5B62                               __ptext15 6096  
                             __ptext40 5722                               __ptext32 52D4  
                             __ptext24 5A0E                               __ptext16 58B4  
                             __ptext41 436C                               __ptext33 33CA  
                             __ptext25 5108                               __ptext17 609E  
                             __ptext50 57F4                               __ptext42 3C44  
                             __ptext34 5522                               __ptext26 6014  
                             __ptext18 58F2                               __ptext51 5584  
                             __ptext43 5366                               __ptext35 51A4  
                             __ptext27 563E                               __ptext19 4B20  
                             __ptext60 5C7A                               __ptext52 5B8A  
                             __ptext44 4900                               __ptext36 2A9C  
                             __ptext28 60AE                               __ptext61 5FD4  
                             __ptext53 5BB2                               __ptext45 4FC6  
                             __ptext37 4770                               __ptext29 5F32  
                             __ptext70 5CF2                               __ptext62 6000  
                             __ptext54 54BE                               __ptext46 523C  
                             __ptext38 3986                               __ptext71 5F6A  
                             __ptext63 5068                               __ptext55 5BDA  
                             __ptext47 4A14                               __ptext39 2F4A  
                             __ptext80 6034                               __ptext72 53EE  
                             __ptext64 5FEA                               __ptext56 5C02  
                             __ptext48 5F86                               __ptext81 5E90  
                             __ptext73 6062                               __ptext65 5F4E  
                             __ptext57 5C2A                               __ptext49 4F1C  
                             __ptext90 5A3A                               __ptext82 60C4  
                             __ptext74 5E4C                               __ptext66 5458  
                             __ptext58 5C52                               __ptext91 5D6C  
                             __ptext83 6044                               __ptext75 56D8  
                             __ptext67 568C                               __ptext59 5768  
                             __ptext92 5ED4                               __ptext84 5EB2  
                             __ptext76 5D1A                               __ptext68 5CA2  
                             __ptext93 5D94                               __ptext85 60C6  
                             __ptext77 6024                               __ptext69 5CCA  
                             __ptext94 5A66                               __ptext86 60BC  
                             __ptext78 5E6E                               __ptext95 5DBC  
                             __ptext87 5AE8                               __ptext79 60C2  
                             __ptext96 5EF4                               __ptext88 60C8  
                             __ptext97 5FA0                               __ptext89 5D44  
                             __ptext98 5DE2                               __ptext99 57AE  
                      _secs_II_message 412A               __size_of_CLC1_Initialize 0022  
                     __size_of_sprintf 00C8                       __size_of_strncmp 0190  
                     _ringBufS_put_dma 4F1C                     __end_of_m_protocol 25B0  
                        __size_of_ctoa 0088                          __size_of_main 04EC  
                        __size_of_dtoa 0480                  __size_of_wait_lcd_set 0006  
                        __size_of_stoa 02BE                   __CFG_WDTCWS$WDTCWS_7 000000  
                    ?_DMA1_DMASCNT_ISR 005B                            _IVTLOCKbits 003FD4  
             __size_of_TMR5_WriteTimer 0040              _ADCC_ADI_InterruptHandler 0008  
                            stoa@F1142 00F2                     ??_DMA1_DMASCNT_ISR 005C  
                             _spi_link 006D                               _wdtdelay 55E2  
           __end_of_UART2_Transmit_ISR 5A92                               _vfprintf 51A4  
                    _UART1_is_rx_ready 609E                            _UART1_Write 5876  
 __end_of_INT1_DefaultInterruptHandler 60C6  __size_of_INT1_DefaultInterruptHandler 0002  
         _INT1_DefaultInterruptHandler 60C4                      _UART1_is_tx_ready 608E  
                      r_protocol@retry 005D                      t_protocol@requeue 002A  
                        ??_Default_ISR 005B                     __end_of_r_protocol 3986  
                          _uart1RxHead 0037                            _uart1TxHead 003A  
                          _uart2RxHead 0031                            _uart1RxTail 0036  
                          _uart2TxHead 0034                            _uart1TxTail 0039  
                          _uart2RxTail 0030                            _uart2TxTail 0033  
                         _wait_lcd_set 60AE                     _EXT_INT_Initialize 568C  
 __end_of_TMR6_DefaultInterruptHandler 57F4  __size_of_TMR6_DefaultInterruptHandler 0046  
         _TMR6_DefaultInterruptHandler 57AE                     __end_of_t_protocol 412A  
 __end_of_ADCC_DefaultInterruptHandler 60CA  __size_of_ADCC_DefaultInterruptHandler 0002  
         _ADCC_DefaultInterruptHandler 60C8                               intlevel2 0000  
                    _send_lcd_cmd_long 5B12                      __CFG_CLKOUTEN$OFF 000000  
           __end_of_eaDogM_WriteString 51A4                __end_of_NCO1_Initialize 5F6A  
               __size_of_INT0_CallBack 0022                             _SPI1SCKPPS 003ADE  
                           _SPI1SDIPPS 003ADF              __end_of_UART1_is_rx_ready 60A6  
                           _UART1_Read 58F2                 __size_of_INT1_CallBack 0022  
                           _UART2_Read 58B4              __end_of_UART1_is_tx_ready 6096  
               __size_of_INT2_CallBack 0022                      _UART2_is_rx_ready 6096  
               _uart2TxBufferRemaining 0032                       _send_lcd_cmd_dma 563E  
                TMR5_ISR@CountCallBack 0026                __end_of_secs_II_message 436C  
     __end_of_INT1_SetInterruptHandler 5CF2              __size_of_UART1_Initialize 0064  
                      t_protocol@block 0085                       ??_DMA1_DMAOR_ISR 005C  
             _UART1_TxInterruptHandler 000B                        t_protocol@retry 002B  
            __end_of_send_lcd_cmd_long 5B3A                    __end_of_Default_ISR 60C2  
       __end_of_PIN_MANAGER_Initialize 5108                  __size_of_run_checksum 002C  
              _eaDogM_WriteStringAtPos 5A0E              __size_of_UART2_Initialize 005E  
