

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Dec 21 19:55:50 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1,inline
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1,inline
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=2
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=4,class=CODE,delta=1
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1
   164                           	psect	text140,global,reloc=4,class=CODE,delta=1
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1
   171                           	psect	text147,global,reloc=4,class=CODE,delta=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=2,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1
   178                           	psect	text154,global,reloc=4,class=CODE,delta=1
   179                           	psect	text155,global,reloc=2,class=CODE,delta=1
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1
   181                           	psect	text157,global,reloc=4,class=CODE,delta=1
   182                           	psect	text158,global,reloc=4,class=CODE,delta=1
   183                           	psect	text159,global,reloc=2,class=CODE,delta=1
   184                           	psect	text160,global,reloc=2,class=CODE,delta=1
   185                           	psect	text161,global,reloc=2,class=CODE,delta=1
   186                           	psect	text162,global,reloc=4,class=CODE,delta=1
   187                           	psect	text163,global,reloc=4,class=CODE,delta=1
   188                           	psect	text164,global,reloc=2,class=CODE,delta=1
   189                           	psect	text165,global,reloc=4,class=CODE,delta=1
   190                           	psect	text166,global,reloc=2,class=CODE,delta=1
   191                           	psect	text167,global,reloc=4,class=CODE,delta=1
   192                           	psect	text168,global,reloc=2,class=CODE,delta=1
   193                           	psect	text169,global,reloc=4,class=CODE,delta=1
   194                           	psect	text170,global,reloc=2,class=CODE,delta=1
   195                           	psect	text171,global,reloc=2,class=CODE,delta=1
   196                           	psect	text172,global,reloc=4,class=CODE,delta=1
   197                           	psect	text173,global,reloc=4,class=CODE,delta=1
   198                           	psect	text174,global,reloc=4,class=CODE,delta=1
   199                           	psect	text175,global,reloc=4,class=CODE,delta=1
   200                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   201                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   202                           	psect	text176,global,reloc=4,class=CODE,delta=1
   203                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   204                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   205  0000                     
   206                           ; Version 2.10
   207                           ; Generated 31/07/2019 GMT
   208                           ; 
   209                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   210                           ; All rights reserved.
   211                           ; 
   212                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   213                           ; 
   214                           ; Redistribution and use in source and binary forms, with or without modification, are
   215                           ; permitted provided that the following conditions are met:
   216                           ; 
   217                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   218                           ;        conditions and the following disclaimer.
   219                           ; 
   220                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   221                           ;        of conditions and the following disclaimer in the documentation and/or other
   222                           ;        materials provided with the distribution.
   223                           ; 
   224                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   225                           ;        software without specific prior written permission.
   226                           ; 
   227                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   228                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   229                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   230                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   231                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   232                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   233                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   234                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   235                           ; 
   236                           ; 
   237                           ; Code-generator required, PIC18F57K42 Definitions
   238                           ; 
   239                           ; SFR Addresses
   240  0000                     
   241 ;;_main$3720	offset	0
   242 ;;_main$3716	offset	2
   243 ;;_esr_temp	offset	4
   244 ;;_i_esr	offset	8
   245 ;;_shape	offset	10
   246 ;;_k	offset	11
   247 ;;_j	offset	12
   248 ;;_i	offset	13
   249 ;;_inp_index	offset	14
   250 ;;_mode	offset	15
   251 ;;_i_ror	offset	16
   252 ;;_s	offset=-2 (param)
   253 ;;_c	offset	0
   254 ;;_shape	offset=-1 (param)
   255 ;;_reset	offset=-2 (param)
   256 ;;_cmd	offset=-1 (param)
   257 ;;_cmd	offset=-1 (param)
   258 ;;_data	offset=-1 (param)
   259 ;;__this	offset=-2 (param)
   260 ;;_cvoltage	offset=-4 (param)
   261 ;;_h	offset=-1 (param)
   262 ;;_h	offset=-1 (param)
   263 ;;_i	offset=-1 (param)
   264 ;;_fsm	offset=-1 (param)
   265 ;;_channel	offset=-1 (param)
   266 ;;_mode	offset=-1 (param)
   267 ;;_mode	offset=-1 (param)
   268 ;;_cmd	offset=-1 (param)
   269 ;;_i	offset	0
   270 ;;_h	offset=-1 (param)
   271 ;;_flipper	offset=-1 (param)
   272 ;;_f	offset	0
   273 ;;_ap	offset	6
   274 ;;_s	offset=-3 (param)
   275 ;;_fmt	offset=-5 (param)
   276 ;;_line	offset=-1 (param)
   277 ;;_vterm	offset=-2 (param)
   278 ;;_numMilliseconds	offset=-2 (param)
   279 ;;_vterm	offset=-1 (param)
   280 ;;_r	offset=-1 (param)
   281 ;;_c	offset=-2 (param)
   282 ;;_strPtr	offset=-4 (param)
   283 ;;_strPtr	offset=-1 (param)
   284 ;;_delay	offset=-4 (param)
   285 ;;_strPtr	offset=-2 (param)
   286 ;;__this	offset=-2 (param)
   287 ;;_clearBuffer	offset=-3 (param)
   288 ;;_s	offset	0
   289 ;;_k	offset	2
   290 ;;_dest	offset=-2 (param)
   291 ;;_c	offset=-4 (param)
   292 ;;_n	offset=-6 (param)
   293 ;;_ap	offset	0
   294 ;;_fmt	offset=-3 (param)
   295 ;;_cfmt	offset	0
   296 ;;_fp	offset=-2 (param)
   297 ;;_fmt	offset=-4 (param)
   298 ;;_ap	offset=-6 (param)
   299 ;;_vfpfcnvrt$5475	offset	0
   300 ;;_vfpfcnvrt$5486	offset	2
   301 ;;_vfpfcnvrt$5474	offset	4
   302 ;;_llu	offset	6
   303 ;;_ll	offset	14
   304 ;;_f	offset	22
   305 ;;_ct	offset	26
   306 ;;_cp	offset	29
   307 ;;_c	offset	31
   308 ;;_fp	offset=-2 (param)
   309 ;;_fmt	offset=-4 (param)
   310 ;;_ap	offset=-6 (param)
   311 ;;_xtoa$5460	offset	0
   312 ;;_xtoa$5459	offset	2
   313 ;;_n	offset	4
   314 ;;_c	offset	12
   315 ;;_i	offset	14
   316 ;;_w	offset	16
   317 ;;_p	offset	18
   318 ;;_fp	offset=-2 (param)
   319 ;;_d	offset=-10 (param)
   320 ;;_x	offset=-11 (param)
   321 ;;_toupper$6266	offset	0
   322 ;;_c	offset=-2 (param)
   323 ;;_c	offset=-2 (param)
   324 ;;_c	offset=-2 (param)
   325 ;;_n	offset	0
   326 ;;_i	offset	8
   327 ;;_w	offset	10
   328 ;;_p	offset	12
   329 ;;_fp	offset=-2 (param)
   330 ;;_d	offset=-10 (param)
   331 ;;_counter	offset	0
   332 ;;_dividend	offset=-8 (param)
   333 ;;_divisor	offset=-16 (param)
   334 ;;_quotient	offset	0
   335 ;;_counter	offset	8
   336 ;;_dividend	offset=-8 (param)
   337 ;;_divisor	offset=-16 (param)
   338 ;;_r	offset	0
   339 ;;_l	offset	2
   340 ;;__l	offset=-2 (param)
   341 ;;__r	offset=-4 (param)
   342 ;;_n	offset=-6 (param)
   343 ;;_nuls	offset	0
   344 ;;_l	offset	7
   345 ;;_p	offset	9
   346 ;;_cp	offset	11
   347 ;;_w	offset	13
   348 ;;_i	offset	15
   349 ;;_fp	offset=-2 (param)
   350 ;;_s	offset=-4 (param)
   351 ;;_efgtoa$5432	offset	0
   352 ;;_efgtoa$5431	offset	2
   353 ;;_efgtoa$5430	offset	4
   354 ;;_efgtoa$5426	offset	6
   355 ;;_efgtoa$5422	offset	8
   356 ;;_efgtoa$5421	offset	10
   357 ;;_u	offset	12
   358 ;;_g	offset	16
   359 ;;_l	offset	20
   360 ;;_h	offset	24
   361 ;;_ou	offset	28
   362 ;;_n	offset	32
   363 ;;_e	offset	34
   364 ;;_i	offset	36
   365 ;;_w	offset	38
   366 ;;_p	offset	40
   367 ;;_sign	offset	42
   368 ;;_d	offset	44
   369 ;;_ne	offset	46
   370 ;;_m	offset	48
   371 ;;_pp	offset	50
   372 ;;_t	offset	52
   373 ;;_mode	offset	54
   374 ;;_nmode	offset	55
   375 ;;_fp	offset=-2 (param)
   376 ;;_f	offset=-6 (param)
   377 ;;_c	offset=-7 (param)
   378 ;;_tolower$6251	offset	0
   379 ;;_c	offset=-2 (param)
   380 ;;_c	offset=-2 (param)
   381 ;;_d	offset	0
   382 ;;_s	offset	2
   383 ;;_dest	offset=-2 (param)
   384 ;;_src	offset=-4 (param)
   385 ;;_u	offset	0
   386 ;;_m	offset	4
   387 ;;_e	offset	8
   388 ;;_x	offset=-4 (param)
   389 ;;_u	offset	0
   390 ;;_e	offset	4
   391 ;;_x	offset=-4 (param)
   392 ;;_exp1	offset	0
   393 ;;_sign1	offset	1
   394 ;;_f1	offset=-4 (param)
   395 ;;_f1	offset=-4 (param)
   396 ;;_ff1	offset=-4 (param)
   397 ;;_ff2	offset=-8 (param)
   398 ;;_sign	offset	0
   399 ;;_counter	offset	1
   400 ;;_dividend	offset=-2 (param)
   401 ;;_divisor	offset=-4 (param)
   402 ;;_quotient	offset	0
   403 ;;_sign	offset	2
   404 ;;_counter	offset	3
   405 ;;_dividend	offset=-2 (param)
   406 ;;_divisor	offset=-4 (param)
   407 ;;_dtoa$5398	offset	0
   408 ;;_n	offset	2
   409 ;;_i	offset	10
   410 ;;_s	offset	12
   411 ;;_w	offset	14
   412 ;;_p	offset	16
   413 ;;_fp	offset=-2 (param)
   414 ;;_d	offset=-10 (param)
   415 ;;_a	offset=-2 (param)
   416 ;;_sign	offset	0
   417 ;;_counter	offset	1
   418 ;;_dividend	offset=-8 (param)
   419 ;;_divisor	offset=-16 (param)
   420 ;;_quotient	offset	0
   421 ;;_sign	offset	8
   422 ;;_counter	offset	9
   423 ;;_dividend	offset=-8 (param)
   424 ;;_divisor	offset=-16 (param)
   425 ;;_w	offset	0
   426 ;;_fp	offset=-2 (param)
   427 ;;_c	offset=-3 (param)
   428 ;;_w	offset	0
   429 ;;_i	offset	2
   430 ;;_fp	offset=-2 (param)
   431 ;;_buf	offset=-4 (param)
   432 ;;_p	offset=-6 (param)
   433 ;;_a	offset	0
   434 ;;_s	offset=-2 (param)
   435 ;;_i	offset	0
   436 ;;_c	offset	2
   437 ;;_s	offset=-2 (param)
   438 ;;_fp	offset=-4 (param)
   439 ;;_c	offset=-2 (param)
   440 ;;_fp	offset=-4 (param)
   441 ;;_c	offset=-1 (param)
   442 ;;__this	offset=-2 (param)
   443 ;;_c	offset=-3 (param)
   444 ;;_atoi$5982	offset	0
   445 ;;_atoi$5980	offset	2
   446 ;;_atoi$5981	offset	4
   447 ;;_n	offset	5
   448 ;;_neg	offset	7
   449 ;;_s	offset=-2 (param)
   450 ;;_isspace$6031	offset	0
   451 ;;_c	offset=-2 (param)
   452 ;;_c	offset=-2 (param)
   453 ;;_vterm	offset=-1 (param)
   454 ;;_new_response_info	offset=-1 (param)
   455 ;;_new_response_info	offset=-1 (param)
   456 ;;_level	offset=-2 (param)
   457 ;;_dutyValue	offset=-2 (param)
   458 ;;_timer	offset=-1 (param)
   459 ;;_timer	offset=-1 (param)
   460 ;;_count	offset=-3 (param)
   461 ;;_h	offset=-1 (param)
   462 ;;_u	offset	0
   463 ;;_x	offset=-4 (param)
   464 ;;_chan	offset=-1 (param)
   465 ;;_to_what	offset=-2 (param)
   466 ;;_u	offset	0
   467 ;;_s	offset=-2 (param)
   468 ;;_index	offset=-1 (param)
   469 ;;_arg	offset	0
   470 ;;_exp	offset	4
   471 ;;_sign	offset=-1 (param)
   472 ;;_val	offset=-5 (param)
   473 ;;_grs	offset	0
   474 ;;_rem	offset	4
   475 ;;_new_exp	offset	8
   476 ;;_aexp	offset	10
   477 ;;_bexp	offset	11
   478 ;;_sign	offset	12
   479 ;;_b	offset=-4 (param)
   480 ;;_a	offset=-8 (param)
   481 ;;_ff1	offset=-4 (param)
   482 ;;_ff2	offset=-8 (param)
   483 ;;_lp_speed	offset	0
   484 ;;_new	offset=-4 (param)
   485 ;;_bn	offset=-5 (param)
   486 ;;_slow	offset=-6 (param)
   487 ;;_b	offset=-4 (param)
   488 ;;_a	offset=-8 (param)
   489 ;;_grs	offset	0
   490 ;;_bexp	offset	1
   491 ;;_aexp	offset	2
   492 ;;_signs	offset	3
   493 ;;_b	offset=-4 (param)
   494 ;;_a	offset=-8 (param)
   495 ;;_prod	offset	0
   496 ;;_grs	offset	4
   497 ;;_temp	offset	8
   498 ;;_bexp	offset	10
   499 ;;_aexp	offset	11
   500 ;;_sign	offset	12
   501 ;;_b	offset=-4 (param)
   502 ;;_a	offset=-8 (param)
   503 ;;_InterruptHandler	offset=-3 (param)
   504 ;;_InterruptHandler	offset=-3 (param)
   505 ;;_InterruptHandler	offset=-3 (param)
   506 ;;_InterruptHandler	offset=-3 (param)
   507 ;;_InterruptHandler	offset=-3 (param)
   508 ;;_InterruptHandler	offset=-3 (param)
   509 ;;_state	offset	0
   510 ;;_InterruptHandler	offset=-3 (param)
   511 ;;_InterruptHandler	offset=-3 (param)
   512 ;;_InterruptHandler	offset=-3 (param)
   513 ;;_InterruptHandler	offset=-3 (param)
   514 ;;_i	offset	0
   515 ;;_sw_value	offset	1
   516 ;;_timerVal	offset=-2 (param)
   517 ;;_mode	offset=-1 (param)
   518 ;;_chan	offset=-1 (param)
   519 ;;_to_what	offset=-2 (param)
   520 ;;_u	offset	0
   521 ;;_s	offset=-2 (param)
   522 ;;_index	offset=-1 (param)
   523 ;;_arg	offset	0
   524 ;;_exp	offset	4
   525 ;;_sign	offset=-1 (param)
   526 ;;_val	offset=-5 (param)
   527 ;;_b	offset=-4 (param)
   528 ;;_a	offset=-8 (param)
   529 ;;_grs	offset	0
   530 ;;_bexp	offset	1
   531 ;;_aexp	offset	2
   532 ;;_signs	offset	3
   533 ;;_b	offset=-4 (param)
   534 ;;_a	offset=-8 (param)
   535 ;;_prod	offset	0
   536 ;;_grs	offset	4
   537 ;;_temp	offset	8
   538 ;;_bexp	offset	10
   539 ;;_aexp	offset	11
   540 ;;_sign	offset	12
   541 ;;_b	offset=-4 (param)
   542 ;;_a	offset=-8 (param)
   543 ;;_grs	offset	0
   544 ;;_rem	offset	4
   545 ;;_new_exp	offset	8
   546 ;;_aexp	offset	10
   547 ;;_bexp	offset	11
   548 ;;_sign	offset	12
   549 ;;_b	offset=-4 (param)
   550 ;;_a	offset=-8 (param)
   551 ;;_ff1	offset=-4 (param)
   552 ;;_ff2	offset=-8 (param)
   553 ;;_timerVal	offset=-2 (param)
   554 ;;_log_ptr	offset	0
   555 ;;_f	offset	0
   556 ;;_ap	offset	6
   557 ;;_s	offset=-3 (param)
   558 ;;_fmt	offset=-5 (param)
   559 ;;_cfmt	offset	0
   560 ;;_fp	offset=-2 (param)
   561 ;;_fmt	offset=-4 (param)
   562 ;;_ap	offset=-6 (param)
   563 ;;_vfpfcnvrt$5475	offset	0
   564 ;;_vfpfcnvrt$5486	offset	2
   565 ;;_vfpfcnvrt$5474	offset	4
   566 ;;_llu	offset	6
   567 ;;_ll	offset	14
   568 ;;_f	offset	22
   569 ;;_ct	offset	26
   570 ;;_cp	offset	29
   571 ;;_c	offset	31
   572 ;;_fp	offset=-2 (param)
   573 ;;_fmt	offset=-4 (param)
   574 ;;_ap	offset=-6 (param)
   575 ;;_xtoa$5460	offset	0
   576 ;;_xtoa$5459	offset	2
   577 ;;_n	offset	4
   578 ;;_c	offset	12
   579 ;;_i	offset	14
   580 ;;_w	offset	16
   581 ;;_p	offset	18
   582 ;;_fp	offset=-2 (param)
   583 ;;_d	offset=-10 (param)
   584 ;;_x	offset=-11 (param)
   585 ;;_toupper$6266	offset	0
   586 ;;_c	offset=-2 (param)
   587 ;;_c	offset=-2 (param)
   588 ;;_c	offset=-2 (param)
   589 ;;_n	offset	0
   590 ;;_i	offset	8
   591 ;;_w	offset	10
   592 ;;_p	offset	12
   593 ;;_fp	offset=-2 (param)
   594 ;;_d	offset=-10 (param)
   595 ;;_counter	offset	0
   596 ;;_dividend	offset=-8 (param)
   597 ;;_divisor	offset=-16 (param)
   598 ;;_quotient	offset	0
   599 ;;_counter	offset	8
   600 ;;_dividend	offset=-8 (param)
   601 ;;_divisor	offset=-16 (param)
   602 ;;_r	offset	0
   603 ;;_l	offset	2
   604 ;;__l	offset=-2 (param)
   605 ;;__r	offset=-4 (param)
   606 ;;_n	offset=-6 (param)
   607 ;;_nuls	offset	0
   608 ;;_l	offset	7
   609 ;;_p	offset	9
   610 ;;_cp	offset	11
   611 ;;_w	offset	13
   612 ;;_i	offset	15
   613 ;;_fp	offset=-2 (param)
   614 ;;_s	offset=-4 (param)
   615 ;;_efgtoa$5432	offset	0
   616 ;;_efgtoa$5431	offset	2
   617 ;;_efgtoa$5430	offset	4
   618 ;;_efgtoa$5426	offset	6
   619 ;;_efgtoa$5422	offset	8
   620 ;;_efgtoa$5421	offset	10
   621 ;;_u	offset	12
   622 ;;_g	offset	16
   623 ;;_l	offset	20
   624 ;;_h	offset	24
   625 ;;_ou	offset	28
   626 ;;_n	offset	32
   627 ;;_e	offset	34
   628 ;;_i	offset	36
   629 ;;_w	offset	38
   630 ;;_p	offset	40
   631 ;;_sign	offset	42
   632 ;;_d	offset	44
   633 ;;_ne	offset	46
   634 ;;_m	offset	48
   635 ;;_pp	offset	50
   636 ;;_t	offset	52
   637 ;;_mode	offset	54
   638 ;;_nmode	offset	55
   639 ;;_fp	offset=-2 (param)
   640 ;;_f	offset=-6 (param)
   641 ;;_c	offset=-7 (param)
   642 ;;_tolower$6251	offset	0
   643 ;;_c	offset=-2 (param)
   644 ;;_c	offset=-2 (param)
   645 ;;_d	offset	0
   646 ;;_s	offset	2
   647 ;;_dest	offset=-2 (param)
   648 ;;_src	offset=-4 (param)
   649 ;;_u	offset	0
   650 ;;_m	offset	4
   651 ;;_e	offset	8
   652 ;;_x	offset=-4 (param)
   653 ;;_u	offset	0
   654 ;;_e	offset	4
   655 ;;_x	offset=-4 (param)
   656 ;;_exp1	offset	0
   657 ;;_sign1	offset	1
   658 ;;_f1	offset=-4 (param)
   659 ;;_f1	offset=-4 (param)
   660 ;;_ff1	offset=-4 (param)
   661 ;;_ff2	offset=-8 (param)
   662 ;;_sign	offset	0
   663 ;;_counter	offset	1
   664 ;;_dividend	offset=-2 (param)
   665 ;;_divisor	offset=-4 (param)
   666 ;;_quotient	offset	0
   667 ;;_sign	offset	2
   668 ;;_counter	offset	3
   669 ;;_dividend	offset=-2 (param)
   670 ;;_divisor	offset=-4 (param)
   671 ;;_dtoa$5398	offset	0
   672 ;;_n	offset	2
   673 ;;_i	offset	10
   674 ;;_s	offset	12
   675 ;;_w	offset	14
   676 ;;_p	offset	16
   677 ;;_fp	offset=-2 (param)
   678 ;;_d	offset=-10 (param)
   679 ;;_a	offset=-2 (param)
   680 ;;_sign	offset	0
   681 ;;_counter	offset	1
   682 ;;_dividend	offset=-8 (param)
   683 ;;_divisor	offset=-16 (param)
   684 ;;_quotient	offset	0
   685 ;;_sign	offset	8
   686 ;;_counter	offset	9
   687 ;;_dividend	offset=-8 (param)
   688 ;;_divisor	offset=-16 (param)
   689 ;;_w	offset	0
   690 ;;_fp	offset=-2 (param)
   691 ;;_c	offset=-3 (param)
   692 ;;_w	offset	0
   693 ;;_i	offset	2
   694 ;;_fp	offset=-2 (param)
   695 ;;_buf	offset=-4 (param)
   696 ;;_p	offset=-6 (param)
   697 ;;_a	offset	0
   698 ;;_s	offset=-2 (param)
   699 ;;_i	offset	0
   700 ;;_c	offset	2
   701 ;;_s	offset=-2 (param)
   702 ;;_fp	offset=-4 (param)
   703 ;;_c	offset=-2 (param)
   704 ;;_fp	offset=-4 (param)
   705 ;;_c	offset=-1 (param)
   706 ;;__this	offset=-2 (param)
   707 ;;_c	offset=-3 (param)
   708 ;;_atoi$5982	offset	0
   709 ;;_atoi$5980	offset	2
   710 ;;_atoi$5981	offset	4
   711 ;;_n	offset	5
   712 ;;_neg	offset	7
   713 ;;_s	offset=-2 (param)
   714 ;;_isspace$6031	offset	0
   715 ;;_c	offset=-2 (param)
   716 ;;_c	offset=-2 (param)
   717 ;;_dsize	offset=-2 (param)
   718 ;;_u	offset	0
   719 ;;_x	offset=-4 (param)
   720 ;;_timer	offset=-1 (param)
   721 ;;_count	offset=-3 (param)
   722 ;;_channel	offset=-1 (param)
   723 ;;_i	offset	0
   724                           
   725                           	psect	idataBIGRAM
   726  017C32                     __pidataBIGRAM:
   727                           	opt callstack 0
   728                           
   729                           ;initializer for _port_data
   730  017C32  FF                 	db	255
   731  017C33  00                 	db	0
   732  017C34  FF                 	db	255
   733  017C35  00                 	db	0
   734  017C36  FF                 	db	255
   735  017C37  00                 	db	0
   736  017C38  FF                 	db	255
   737  017C39  00                 	db	0
   738  017C3A  FF                 	db	255
   739  017C3B  00                 	db	0
   740  017C3C  FF                 	db	255
   741  017C3D  00                 	db	0
   742  017C3E  FF                 	db	255
   743  017C3F  00                 	db	0
   744  017C40  FF                 	db	255
   745  017C41  00                 	db	0
   746  017C42  00                 	db	0
   747  017C43  00                 	db	0
   748  017C44  00                 	db	0
   749  017C45  00                 	db	0
   750  017C46  00                 	db	0
   751  017C47  00                 	db	0
   752  017C48  00                 	db	0
   753  017C49  00                 	db	0
   754  017C4A  00                 	db	0
   755  017C4B  00                 	db	0
   756  017C4C  00                 	db	0
   757  017C4D  00                 	db	0
   758  017C4E  00                 	db	0
   759  017C4F  00                 	db	0
   760  017C50  00                 	db	0
   761  017C51  00                 	db	0
   762  017C52  00                 	db	0
   763  017C53  00                 	db	0
   764  017C54  00                 	db	0
   765  017C55  00                 	db	0
   766  017C56  00                 	db	0
   767  017C57  00                 	db	0
   768  017C58  00                 	db	0
   769  017C59  00                 	db	0
   770  017C5A  00                 	db	0
   771  017C5B  00                 	db	0
   772  017C5C  00                 	db	0
   773  017C5D  00                 	db	0
   774  017C5E  00                 	db	0
   775  017C5F  00                 	db	0
   776  017C60  00                 	db	0
   777  017C61  00                 	db	0
   778  017C62  00                 	db	0
   779  017C63  00                 	db	0
   780  017C64  00                 	db	0
   781  017C65  00                 	db	0
   782  017C66  00                 	db	0
   783  017C67  00                 	db	0
   784  017C68  00                 	db	0
   785  017C69  00                 	db	0
   786  017C6A  00                 	db	0
   787  017C6B  00                 	db	0
   788  017C6C  00                 	db	0
   789  017C6D  00                 	db	0
   790  017C6E  00                 	db	0
   791  017C6F  00                 	db	0
   792  017C70  00                 	db	0
   793  017C71  00                 	db	0
   794  017C72  00                 	db	0
   795  017C73  00                 	db	0
   796  017C74  00                 	db	0
   797  017C75  00                 	db	0
   798  017C76  00                 	db	0
   799  017C77  00                 	db	0
   800  017C78  00                 	db	0
   801  017C79  00                 	db	0
   802  017C7A  00                 	db	0
   803  017C7B  00                 	db	0
   804  017C7C  00                 	db	0
   805  017C7D  00                 	db	0
   806  017C7E  00                 	db	0
   807  017C7F  00                 	db	0
   808  017C80  00                 	db	0
   809  017C81  00                 	db	0
   810  017C82  00                 	db	0
   811  017C83  00                 	db	0
   812  017C84  00                 	db	0
   813  017C85  00                 	db	0
   814  017C86  00                 	db	0
   815  017C87  00                 	db	0
   816  017C88  00                 	db	0
   817  017C89  00                 	db	0
   818  017C8A  00                 	db	0
   819  017C8B  00                 	db	0
   820  017C8C  00                 	db	0
   821  017C8D  00                 	db	0
   822  017C8E  00                 	db	0
   823  017C8F  00                 	db	0
   824  017C90  00                 	db	0
   825  017C91  00                 	db	0
   826  017C92  00                 	db	0
   827  017C93  00                 	db	0
   828  017C94  00                 	db	0
   829  017C95  00                 	db	0
   830  017C96  00                 	db	0
   831  017C97  00                 	db	0
   832  017C98  00                 	db	0
   833  017C99  00                 	db	0
   834  017C9A  00                 	db	0
   835  017C9B  00                 	db	0
   836  017C9C  00                 	db	0
   837  017C9D  00                 	db	0
   838  017C9E  00                 	db	0
   839  017C9F  00                 	db	0
   840  017CA0  00                 	db	0
   841  017CA1  00                 	db	0
   842  017CA2  00                 	db	0
   843  017CA3  00                 	db	0
   844  017CA4  00                 	db	0
   845  017CA5  00                 	db	0
   846  017CA6  00                 	db	0
   847  017CA7  00                 	db	0
   848  017CA8  00                 	db	0
   849  017CA9  00                 	db	0
   850  017CAA  00                 	db	0
   851  017CAB  00                 	db	0
   852  017CAC  00                 	db	0
   853  017CAD  00                 	db	0
   854  017CAE  00                 	db	0
   855  017CAF  00                 	db	0
   856  017CB0  00                 	db	0
   857  017CB1  00                 	db	0
   858  017CB2  00                 	db	0
   859  017CB3  00                 	db	0
   860  017CB4  00                 	db	0
   861  017CB5  00                 	db	0
   862  017CB6  00                 	db	0
   863  017CB7  00                 	db	0
   864  017CB8  00                 	db	0
   865  017CB9  00                 	db	0
   866  017CBA  00                 	db	0
   867  017CBB  00                 	db	0
   868  017CBC  00                 	db	0
   869  017CBD  00                 	db	0
   870  017CBE  00                 	db	0
   871  017CBF  00                 	db	0
   872  017CC0  00                 	db	0
   873  017CC1  00                 	db	0
   874  017CC2  00                 	db	0
   875  017CC3  00                 	db	0
   876  017CC4  00                 	db	0
   877  017CC5  00                 	db	0
   878  017CC6  00                 	db	0
   879  017CC7  00                 	db	0
   880  017CC8  00                 	db	0
   881  017CC9  00                 	db	0
   882  017CCA  00                 	db	0
   883  017CCB  00                 	db	0
   884  017CCC  00                 	db	0
   885  017CCD  00                 	db	0
   886  017CCE  00                 	db	0
   887  017CCF  00                 	db	0
   888  017CD0  00                 	db	0
   889  017CD1  00                 	db	0
   890  017CD2  00                 	db	0
   891  017CD3  00                 	db	0
   892  017CD4  00                 	db	0
   893  017CD5  00                 	db	0
   894  017CD6  00                 	db	0
   895  017CD7  00                 	db	0
   896  017CD8  00                 	db	0
   897  017CD9  00                 	db	0
   898  017CDA  00                 	db	0
   899  017CDB  00                 	db	0
   900  017CDC  00                 	db	0
   901  017CDD  00                 	db	0
   902  017CDE  00                 	db	0
   903  017CDF  00                 	db	0
   904  017CE0  00                 	db	0
   905  017CE1  00                 	db	0
   906  017CE2  00                 	db	0
   907  017CE3  00                 	db	0
   908  017CE4  00                 	db	0
   909  017CE5  00                 	db	0
   910  017CE6  00                 	db	0
   911  017CE7  00                 	db	0
   912  017CE8  00                 	db	0
   913  017CE9  00                 	db	0
   914  017CEA  00                 	db	0
   915  017CEB  00                 	db	0
   916  017CEC  00                 	db	0
   917  017CED  00                 	db	0
   918  017CEE  00                 	db	0
   919  017CEF  00                 	db	0
   920  017CF0  00                 	db	0
   921  017CF1  00                 	db	0
   922  017CF2  00                 	db	0
   923  017CF3  00                 	db	0
   924  017CF4  00                 	db	0
   925  017CF5  00                 	db	0
   926  017CF6  00                 	db	0
   927  017CF7  00                 	db	0
   928  017CF8  00                 	db	0
   929  017CF9  00                 	db	0
   930  017CFA  00                 	db	0
   931  017CFB  00                 	db	0
   932  017CFC  00                 	db	0
   933  017CFD  00                 	db	0
   934  017CFE  00                 	db	0
   935  017CFF  00                 	db	0
   936  017D00  00                 	db	0
   937  017D01  00                 	db	0
   938  017D02  00                 	db	0
   939  017D03  00                 	db	0
   940  017D04  00                 	db	0
   941  017D05  00                 	db	0
   942  017D06  00                 	db	0
   943  017D07  00                 	db	0
   944  017D08  00                 	db	0
   945  017D09  00                 	db	0
   946  017D0A  00                 	db	0
   947  017D0B  00                 	db	0
   948  017D0C  00                 	db	0
   949  017D0D  00                 	db	0
   950  017D0E  00                 	db	0
   951  017D0F  00                 	db	0
   952  017D10  00                 	db	0
   953  017D11  00                 	db	0
   954  017D12  00                 	db	0
   955  017D13  00                 	db	0
   956  017D14  00                 	db	0
   957  017D15  00                 	db	0
   958  017D16  00                 	db	0
   959  017D17  00                 	db	0
   960  017D18  00                 	db	0
   961  017D19  00                 	db	0
   962  017D1A  00                 	db	0
   963  017D1B  00                 	db	0
   964  017D1C  00                 	db	0
   965  017D1D  00                 	db	0
   966  017D1E  00                 	db	0
   967  017D1F  00                 	db	0
   968  017D20  00                 	db	0
   969  017D21  00                 	db	0
   970  017D22  00                 	db	0
   971  017D23  00                 	db	0
   972  017D24  00                 	db	0
   973  017D25  00                 	db	0
   974  017D26  00                 	db	0
   975  017D27  00                 	db	0
   976  017D28  00                 	db	0
   977  017D29  00                 	db	0
   978  017D2A  00                 	db	0
   979  017D2B  00                 	db	0
   980  017D2C  00                 	db	0
   981  017D2D  00                 	db	0
   982  017D2E  00                 	db	0
   983  017D2F  00                 	db	0
   984  017D30  00                 	db	0
   985  017D31  00                 	db	0
   986  017D32  00                 	db	0
   987  017D33  00                 	db	0
   988  017D34  00                 	db	0
   989  017D35  00                 	db	0
   990  017D36  00                 	db	0
   991  017D37  00                 	db	0
   992  017D38  00                 	db	0
   993  017D39  00                 	db	0
   994  017D3A  00                 	db	0
   995  017D3B  00                 	db	0
   996  017D3C  00                 	db	0
   997  017D3D  00                 	db	0
   998  017D3E  00                 	db	0
   999  017D3F  00                 	db	0
  1000  017D40  00                 	db	0
  1001  017D41  00                 	db	0
  1002  017D42  00                 	db	0
  1003  017D43  00                 	db	0
  1004  017D44  00                 	db	0
  1005  017D45  00                 	db	0
  1006  017D46  00                 	db	0
  1007  017D47  00                 	db	0
  1008  017D48  00                 	db	0
  1009  017D49  00                 	db	0
  1010  017D4A  00                 	db	0
  1011  017D4B  00                 	db	0
  1012  017D4C  00                 	db	0
  1013  017D4D  00                 	db	0
  1014  017D4E  00                 	db	0
  1015  017D4F  00                 	db	0
  1016  017D50  00                 	db	0
  1017  017D51  00                 	db	0
  1018  017D52  00                 	db	0
  1019  017D53  00                 	db	0
  1020  017D54  00                 	db	0
  1021  017D55  00                 	db	0
  1022  017D56  00                 	db	0
  1023  017D57  00                 	db	0
  1024  017D58  00                 	db	0
  1025  017D59  00                 	db	0
  1026  017D5A  00                 	db	0
  1027  017D5B  00                 	db	0
  1028  017D5C  00                 	db	0
  1029  017D5D  00                 	db	0
  1030  017D5E  00                 	db	0
  1031  017D5F  00                 	db	0
  1032  017D60  00                 	db	0
  1033  017D61  00                 	db	0
  1034  017D62  00                 	db	0
  1035  017D63  00                 	db	0
  1036  017D64  00                 	db	0
  1037  017D65  00                 	db	0
  1038  017D66  00                 	db	0
  1039  017D67  00                 	db	0
  1040  017D68  00                 	db	0
  1041  017D69  00                 	db	0
  1042  017D6A  00                 	db	0
  1043  017D6B  00                 	db	0
  1044  017D6C  00                 	db	0
  1045  017D6D  00                 	db	0
  1046  017D6E  00                 	db	0
  1047  017D6F  00                 	db	0
  1048  017D70  00                 	db	0
  1049  017D71  00                 	db	0
  1050  017D72  00                 	db	0
  1051  017D73  00                 	db	0
  1052  017D74  00                 	db	0
  1053  017D75  00                 	db	0
  1054  017D76  00                 	db	0
  1055  017D77  00                 	db	0
  1056  017D78  00                 	db	0
  1057  017D79  00                 	db	0
  1058  017D7A  00                 	db	0
  1059  017D7B  00                 	db	0
  1060  017D7C  00                 	db	0
  1061  017D7D  00                 	db	0
  1062  017D7E  00                 	db	0
  1063  017D7F  00                 	db	0
  1064  017D80  00                 	db	0
  1065  017D81  00                 	db	0
  1066  017D82  00                 	db	0
  1067  017D83  00                 	db	0
  1068  017D84  00                 	db	0
  1069  017D85  00                 	db	0
  1070  017D86  00                 	db	0
  1071  017D87  00                 	db	0
  1072  017D88  00                 	db	0
  1073  017D89  00                 	db	0
  1074  017D8A  00                 	db	0
  1075  017D8B  00                 	db	0
  1076  017D8C  00                 	db	0
  1077  017D8D  00                 	db	0
  1078  017D8E  00                 	db	0
  1079  017D8F  00                 	db	0
  1080  017D90  00                 	db	0
  1081  017D91  00                 	db	0
  1082  017D92  00                 	db	0
  1083  017D93  00                 	db	0
  1084  017D94  00                 	db	0
  1085  017D95  00                 	db	0
  1086  017D96  00                 	db	0
  1087  017D97  00                 	db	0
  1088  017D98  00                 	db	0
  1089  017D99  00                 	db	0
  1090  017D9A  00                 	db	0
  1091  017D9B  00                 	db	0
  1092  017D9C  00                 	db	0
  1093  017D9D  00                 	db	0
  1094  017D9E  00                 	db	0
  1095  017D9F  00                 	db	0
  1096  017DA0  00                 	db	0
  1097  017DA1  00                 	db	0
  1098  017DA2  00                 	db	0
  1099  017DA3  00                 	db	0
  1100  017DA4  00                 	db	0
  1101  017DA5  00                 	db	0
  1102  017DA6  00                 	db	0
  1103  017DA7  00                 	db	0
  1104  017DA8  00                 	db	0
  1105  017DA9  00                 	db	0
  1106  017DAA  00                 	db	0
  1107  017DAB  00                 	db	0
  1108  017DAC  00                 	db	0
  1109  017DAD  00                 	db	0
  1110  017DAE  00                 	db	0
  1111  017DAF  00                 	db	0
  1112  017DB0  00                 	db	0
  1113  017DB1  00                 	db	0
  1114  017DB2  00                 	db	0
  1115  017DB3  00                 	db	0
  1116  017DB4  00                 	db	0
  1117  017DB5  00                 	db	0
  1118  017DB6  00                 	db	0
  1119  017DB7  00                 	db	0
  1120  017DB8  00                 	db	0
  1121  017DB9  00                 	db	0
  1122  017DBA  00                 	db	0
  1123  017DBB  00                 	db	0
  1124  017DBC  00                 	db	0
  1125  017DBD  00                 	db	0
  1126  017DBE  00                 	db	0
  1127  017DBF  00                 	db	0
  1128  017DC0  00                 	db	0
  1129  017DC1  00                 	db	0
  1130  017DC2  00                 	db	0
  1131  017DC3  00                 	db	0
  1132  017DC4  00                 	db	0
  1133  017DC5  00                 	db	0
  1134  017DC6  00                 	db	0
  1135  017DC7  00                 	db	0
  1136  017DC8  00                 	db	0
  1137  017DC9  00                 	db	0
  1138  017DCA  00                 	db	0
  1139  017DCB  00                 	db	0
  1140  017DCC  00                 	db	0
  1141  017DCD  00                 	db	0
  1142  017DCE  00                 	db	0
  1143  017DCF  00                 	db	0
  1144  017DD0  00                 	db	0
  1145  017DD1  00                 	db	0
  1146  017DD2  00                 	db	0
  1147  017DD3  00                 	db	0
  1148  017DD4  00                 	db	0
  1149  017DD5  00                 	db	0
  1150  017DD6  00                 	db	0
  1151  017DD7  00                 	db	0
  1152  017DD8  00                 	db	0
  1153  017DD9  00                 	db	0
  1154  017DDA  00                 	db	0
  1155  017DDB  00                 	db	0
  1156  017DDC  00                 	db	0
  1157  017DDD  00                 	db	0
  1158  017DDE  00                 	db	0
  1159  017DDF  00                 	db	0
  1160  017DE0  00                 	db	0
  1161  017DE1  00                 	db	0
  1162  017DE2  00                 	db	0
  1163  017DE3  00                 	db	0
  1164  017DE4  00                 	db	0
  1165  017DE5  00                 	db	0
  1166  017DE6  00                 	db	0
  1167  017DE7  00                 	db	0
  1168  017DE8  00                 	db	0
  1169  017DE9  00                 	db	0
  1170  017DEA  00                 	db	0
  1171  017DEB  00                 	db	0
  1172  017DEC  00                 	db	0
  1173  017DED  00                 	db	0
  1174  017DEE  00                 	db	0
  1175  017DEF  00                 	db	0
  1176  017DF0  00                 	db	0
  1177  017DF1  00                 	db	0
  1178  017DF2  00                 	db	0
  1179  017DF3  00                 	db	0
  1180  017DF4  00                 	db	0
  1181  017DF5  00                 	db	0
  1182  017DF6  00                 	db	0
  1183  017DF7  00                 	db	0
  1184  017DF8  00                 	db	0
  1185  017DF9  00                 	db	0
  1186  017DFA  00                 	db	0
  1187  017DFB  00                 	db	0
  1188  017DFC  00                 	db	0
  1189  017DFD  00                 	db	0
  1190  017DFE  00                 	db	0
  1191  017DFF  00                 	db	0
  1192  017E00  00                 	db	0
  1193  017E01  00                 	db	0
  1194  017E02  00                 	db	0
  1195  017E03  00                 	db	0
  1196  017E04  00                 	db	0
  1197  017E05  00                 	db	0
  1198  017E06  00                 	db	0
  1199  017E07  00                 	db	0
  1200  017E08  00                 	db	0
  1201  017E09  00                 	db	0
  1202  017E0A  00                 	db	0
  1203  017E0B  00                 	db	0
  1204  017E0C  00                 	db	0
  1205  017E0D  00                 	db	0
  1206  017E0E  00                 	db	0
  1207  017E0F  00                 	db	0
  1208  017E10  00                 	db	0
  1209  017E11  00                 	db	0
  1210  017E12  00                 	db	0
  1211  017E13  00                 	db	0
  1212  017E14  00                 	db	0
  1213  017E15  00                 	db	0
  1214  017E16  00                 	db	0
  1215  017E17  00                 	db	0
  1216  017E18  00                 	db	0
  1217  017E19  00                 	db	0
  1218  017E1A  00                 	db	0
  1219  017E1B  00                 	db	0
  1220  017E1C  00                 	db	0
  1221  017E1D  00                 	db	0
  1222  017E1E  00                 	db	0
  1223  017E1F  00                 	db	0
  1224  017E20  00                 	db	0
  1225  017E21  00                 	db	0
  1226  017E22  00                 	db	0
  1227  017E23  00                 	db	0
  1228  017E24  00                 	db	0
  1229  017E25  00                 	db	0
  1230  017E26  00                 	db	0
  1231  017E27  00                 	db	0
  1232  017E28  00                 	db	0
  1233  017E29  00                 	db	0
  1234  017E2A  00                 	db	0
  1235  017E2B  00                 	db	0
  1236  017E2C  00                 	db	0
  1237  017E2D  00                 	db	0
  1238  017E2E  00                 	db	0
  1239  017E2F  00                 	db	0
  1240  017E30  00                 	db	0
  1241  017E31  00                 	db	0
  1242                           
  1243                           	psect	idataBANK0
  1244  01B1A0                     __pidataBANK0:
  1245                           	opt callstack 0
  1246                           
  1247                           ;initializer for _R
  1248  01B1A0  0000               	dw	0
  1249  01B1A2  0000               	dw	0
  1250  01B1A4  0000               	dw	0
  1251  01B1A6  0000               	dw	0
  1252  01B1A8  0000               	dw	0
  1253  01B1AA  0000               	dw	0
  1254  01B1AC  0000               	dw	0
  1255  01B1AE  0000               	dw	0
  1256  01B1B0  0000               	dw	0
  1257  01B1B2  0000               	dw	0
  1258  01B1B4  0000               	dw	0
  1259  01B1B6  0000               	dw	0
  1260  01B1B8  0000               	dw	0
  1261  01B1BA  0000               	dw	0
  1262  01B1BC  0000               	dw	0
  1263  01B1BE  0000               	dw	0
  1264  01B1C0  0F67               	dw	3943
  1265  01B1C2  0F8F               	dw	3983
  1266  01B1C4  00                 	db	0
  1267  01B1C5  0000               	dw	0
  1268  01B1C7  00                 	db	0
  1269                           
  1270                           ;initializer for _H
  1271  01B1C8  00                 	db	0
  1272  01B1C9  00                 	db	0
  1273  01B1CA  01                 	db	1
  1274  01B1CB  00                 	db	0
  1275  01B1CC  01                 	db	1
  1276  01B1CD  00                 	db	0
  1277  01B1CE  00                 	db	0
  1278                           
  1279                           	psect	idataBANK1
  1280  01978A                     __pidataBANK1:
  1281                           	opt callstack 0
  1282                           
  1283                           ;initializer for _C
  1284  01978A  0000               	dw	0
  1285  01978C  0000               	dw	0
  1286  01978E  0000               	dw	0
  1287  019790  0000               	dw	0
  1288  019792  0000               	dw	0
  1289  019794  0000               	dw	0
  1290  019796  0000               	dw	0
  1291  019798  0000               	dw	0
  1292  01979A  0000               	dw	0
  1293  01979C  0000               	dw	0
  1294  01979E  0000               	dw	0
  1295  0197A0  0000               	dw	0
  1296  0197A2  0000               	dw	0
  1297  0197A4  0000               	dw	0
  1298  0197A6  0000               	dw	0
  1299  0197A8  0000               	dw	0
  1300  0197AA  0000               	dw	0
  1301  0197AC  0000               	dw	0
  1302  0197AE  0000               	dw	0
  1303  0197B0  0000               	dw	0
  1304  0197B2  0000               	dw	0
  1305  0197B4  0000               	dw	0
  1306  0197B6  0000               	dw	0
  1307  0197B8  0000               	dw	0
  1308  0197BA  0000               	dw	0
  1309  0197BC  0000               	dw	0
  1310  0197BE  0000               	dw	0
  1311  0197C0  0000               	dw	0
  1312  0197C2  0000               	dw	0
  1313  0197C4  0000               	dw	0
  1314  0197C6  0000               	dw	0
  1315  0197C8  0000               	dw	0
  1316  0197CA  0000               	dw	0
  1317  0197CC  0000               	dw	0
  1318  0197CE  0000               	dw	0
  1319  0197D0  0000               	dw	0
  1320  0197D2  0000               	dw	0
  1321  0197D4  0000               	dw	0
  1322  0197D6  0000               	dw	0
  1323  0197D8  0000               	dw	0
  1324  0197DA  0000               	dw	0
  1325  0197DC  0000               	dw	0
  1326  0197DE  0000               	dw	0
  1327  0197E0  0000               	dw	0
  1328  0197E2  0000               	dw	0
  1329  0197E4  0000               	dw	0
  1330  0197E6  0000               	dw	0
  1331  0197E8  0000               	dw	0
  1332  0197EA  0000               	dw	0
  1333  0197EC  0000               	dw	0
  1334  0197EE  0000               	dw	0
  1335  0197F0  0000               	dw	0
  1336  0197F2  0000               	dw	0
  1337  0197F4  0000               	dw	0
  1338  0197F6  0000               	dw	0
  1339  0197F8  0000               	dw	0
  1340  0197FA  0000               	dw	0
  1341  0197FC  0000               	dw	0
  1342  0197FE  0000               	dw	0
  1343  019800  0000               	dw	0
  1344  019802  0000               	dw	0
  1345  019804  0000               	dw	0
  1346  019806  0000               	dw	0
  1347  019808  0000               	dw	0
  1348  01980A  0000               	dw	0
  1349  01980C  0000               	dw	0
  1350  01980E  0000               	dw	0
  1351  019810  0000               	dw	0
  1352  019812  0000               	dw	0
  1353  019814  42FA               	dw	17146
  1354  019816  0000               	dw	0
  1355  019818  0000               	dw	0
  1356  01981A  0000               	dw	0
  1357  01981C  0000               	dw	0
  1358  01981E  0000               	dw	0
  1359  019820  0000               	dw	0
  1360  019822  0000               	dw	0
  1361  019824  0000               	dw	0
  1362  019826  0000               	dw	0
  1363  019828  0000               	dw	0
  1364  01982A  0000               	dw	0
  1365  01982C  0000               	dw	0
  1366  01982E  0000               	dw	0
  1367  019830  0000               	dw	0
  1368  019832  0000               	dw	0
  1369  019834  0000               	dw	0
  1370  019836  0000               	dw	0
  1371  019838  0000               	dw	0
  1372  01983A  00                 	db	0
  1373  01983B  0000               	dw	0
  1374  01983D  0000               	dw	0
  1375  01983F  0000               	dw	0
  1376  019841  0000               	dw	0
  1377  019843  0000               	dw	0
  1378  019845  0000               	dw	0
  1379  019847  0000               	dw	0
  1380  019849  0000               	dw	0
  1381  01984B  0000               	dw	0
  1382  01984D  0000               	dw	0
  1383  01984F  0000               	dw	0
  1384  019851  0000               	dw	0
  1385  019853  0000               	dw	0
  1386  019855  0000               	dw	0
  1387  019857  0000               	dw	0
  1388  019859  0000               	dw	0
  1389  01985B  0000               	dw	0
  1390  01985D  0000               	dw	0
  1391  01985F  0000               	dw	0
  1392  019861  0000               	dw	0
  1393  019863  0000               	dw	0
  1394  019865  0000               	dw	0
  1395  019867  0000               	dw	0
  1396  019869  0000               	dw	0
  1397  01986B  0000               	dw	0
  1398  01986D  0000               	dw	0
  1399  01986F  0000               	dw	0
  1400  019871  0000               	dw	0
  1401  019873  0000               	dw	0
  1402  019875  0000               	dw	0
  1403  019877  0000               	dw	0
  1404  019879  0000               	dw	0
  1405  01987B  0000               	dw	0
  1406  01987D  0000               	dw	0
  1407  01987F  0000               	dw	0
  1408  019881  00                 	db	0
  1409  019882  00                 	db	0
  1410  019883  00                 	db	0
  1411  019884  00                 	db	0
  1412  019885  00                 	db	0
  1413  019886  00                 	db	0
  1414  019887  00                 	db	0
  1415  019888  00                 	db	0
  1416  019889  00                 	db	0
  1417                           
  1418                           	psect	idataBANK2
  1419  019C0E                     __pidataBANK2:
  1420                           	opt callstack 0
  1421                           
  1422                           ;initializer for stoa@F1166
  1423  019C0E  28                 	db	40
  1424  019C0F  6E                 	db	110
  1425  019C10  75                 	db	117
  1426  019C11  6C                 	db	108
  1427  019C12  6C                 	db	108
  1428  019C13  29                 	db	41
  1429  019C14  00                 	db	0
  1430                           
  1431                           ;initializer for _V
  1432  019C15  00                 	db	0
  1433  019C16  00                 	db	0
  1434  019C17  00                 	db	0
  1435  019C18  00                 	db	0
  1436  019C19  00                 	db	0
  1437  019C1A  00                 	db	0
  1438  019C1B  00                 	db	0
  1439  019C1C  00                 	db	0
  1440  019C1D  00                 	db	0
  1441  019C1E  00                 	db	0
  1442  019C1F  00                 	db	0
  1443  019C20  00                 	db	0
  1444  019C21  00                 	db	0
  1445  019C22  00                 	db	0
  1446  019C23  00                 	db	0
  1447  019C24  00                 	db	0
  1448  019C25  00                 	db	0
  1449  019C26  00                 	db	0
  1450  019C27  00                 	db	0
  1451  019C28  00                 	db	0
  1452  019C29  00                 	db	0
  1453  019C2A  00                 	db	0
  1454  019C2B  00                 	db	0
  1455  019C2C  00                 	db	0
  1456  019C2D  00                 	db	0
  1457  019C2E  00                 	db	0
  1458  019C2F  00                 	db	0
  1459  019C30  00                 	db	0
  1460  019C31  00                 	db	0
  1461  019C32  00                 	db	0
  1462  019C33  00                 	db	0
  1463  019C34  00                 	db	0
  1464  019C35  00                 	db	0
  1465  019C36  00                 	db	0
  1466  019C37  00                 	db	0
  1467  019C38  00                 	db	0
  1468  019C39  00                 	db	0
  1469  019C3A  00                 	db	0
  1470  019C3B  00                 	db	0
  1471  019C3C  00                 	db	0
  1472  019C3D  00                 	db	0
  1473  019C3E  00                 	db	0
  1474  019C3F  00                 	db	0
  1475  019C40  00                 	db	0
  1476  019C41  00                 	db	0
  1477  019C42  00                 	db	0
  1478  019C43  00                 	db	0
  1479  019C44  00                 	db	0
  1480  019C45  00                 	db	0
  1481  019C46  00                 	db	0
  1482  019C47  00                 	db	0
  1483  019C48  00                 	db	0
  1484  019C49  00                 	db	0
  1485  019C4A  00                 	db	0
  1486  019C4B  00                 	db	0
  1487  019C4C  00                 	db	0
  1488  019C4D  00                 	db	0
  1489  019C4E  00                 	db	0
  1490  019C4F  00                 	db	0
  1491  019C50  00                 	db	0
  1492  019C51  00                 	db	0
  1493  019C52  00                 	db	0
  1494  019C53  00                 	db	0
  1495  019C54  00                 	db	0
  1496  019C55  00                 	db	0
  1497  019C56  00                 	db	0
  1498  019C57  00                 	db	0
  1499  019C58  00                 	db	0
  1500  019C59  00                 	db	0
  1501  019C5A  00                 	db	0
  1502  019C5B  00                 	db	0
  1503  019C5C  00                 	db	0
  1504  019C5D  00                 	db	0
  1505  019C5E  00                 	db	0
  1506  019C5F  00                 	db	0
  1507  019C60  00                 	db	0
  1508  019C61  00                 	db	0
  1509  019C62  00                 	db	0
  1510  019C63  00                 	db	0
  1511  019C64  00                 	db	0
  1512  019C65  00                 	db	0
  1513  019C66  00                 	db	0
  1514  019C67  00                 	db	0
  1515  019C68  00                 	db	0
  1516  019C69  00                 	db	0
  1517  019C6A  00                 	db	0
  1518  019C6B  00                 	db	0
  1519  019C6C  00                 	db	0
  1520  019C6D  00                 	db	0
  1521  019C6E  00                 	db	0
  1522  019C6F  00                 	db	0
  1523  019C70  00                 	db	0
  1524  019C71  00                 	db	0
  1525  019C72  00                 	db	0
  1526  019C73  00                 	db	0
  1527  019C74  00                 	db	0
  1528  019C75  00                 	db	0
  1529  019C76  00                 	db	0
  1530  019C77  00                 	db	0
  1531  019C78  00                 	db	0
  1532  019C79  00                 	db	0
  1533  019C7A  00                 	db	0
  1534  019C7B  00                 	db	0
  1535  019C7C  00                 	db	0
  1536  019C7D  00                 	db	0
  1537  019C7E  00                 	db	0
  1538  019C7F  00                 	db	0
  1539  019C80  00                 	db	0
  1540  019C81  00                 	db	0
  1541  019C82  00                 	db	0
  1542  019C83  00                 	db	0
  1543  019C84  00                 	db	0
  1544  019C85  00                 	db	0
  1545  019C86  00                 	db	0
  1546  019C87  00                 	db	0
  1547  019C88  00                 	db	0
  1548  019C89  00                 	db	0
  1549  019C8A  00                 	db	0
  1550  019C8B  00                 	db	0
  1551  019C8C  00                 	db	0
  1552  019C8D  00                 	db	0
  1553  019C8E  00                 	db	0
  1554  019C8F  00                 	db	0
  1555  019C90  00                 	db	0
  1556  019C91  00                 	db	0
  1557  019C92  00                 	db	0
  1558  019C93  00                 	db	0
  1559  019C94  00                 	db	0
  1560  019C95  00                 	db	0
  1561  019C96  0000               	dw	0
  1562  019C98  0000               	dw	0
  1563  019C9A  0000               	dw	0
  1564  019C9C  0000               	dw	0
  1565  019C9E  00                 	db	0
  1566  019C9F  00                 	db	0
  1567  019CA0  00                 	db	0
  1568  019CA1  00                 	db	0
  1569  019CA2  00                 	db	0
  1570  019CA3  00                 	db	0
  1571  019CA4  0000               	dw	0
  1572  019CA6  0000               	dw	0
  1573  019CA8  0000               	dw	0
  1574  019CAA  0000               	dw	0
  1575  019CAC  0000               	dw	0
  1576  019CAE  0000               	dw	0
  1577  019CB0  00                 	db	0
  1578  019CB1  00                 	db	0
  1579  019CB2  00                 	db	0
  1580  019CB3  00                 	db	0
  1581  019CB4  00                 	db	0
  1582  019CB5  00                 	db	0
  1583  019CB6  00                 	db	0
  1584  019CB7  00                 	db	0
  1585  019CB8  00                 	db	0
  1586  019CB9  00                 	db	0
  1587  019CBA  00                 	db	0
  1588  019CBB  0000               	dw	0
  1589  019CBD  0000               	dw	0
  1590  019CBF  2D                 	db	45
  1591  019CC0  00                 	db	0
  1592  019CC1  00                 	db	0
  1593  019CC2  00                 	db	0
  1594  019CC3  00                 	db	0
  1595  019CC4  0000               	dw	0
  1596  019CC6  0000               	dw	0
  1597  019CC8  0000               	dw	0
  1598  019CCA  0000               	dw	0
  1599  019CCC  0000               	dw	0
  1600  019CCE  0000               	dw	0
  1601  019CD0  0000               	dw	0
  1602  019CD2  0000               	dw	0
  1603                           
  1604                           	psect	mediumconst
  1605  00FA78                     __pmediumconst:
  1606                           	opt callstack 0
  1607  00FA78  00                 	db	0
  1608  00FA79                     _BVSOC_TABLE:
  1609                           	opt callstack 0
  1610  00FA79  59D8               	dw	23000
  1611  00FA7B  0000               	dw	0
  1612  00FA7D  0005               	dw	5
  1613  00FA7F  0000               	dw	0
  1614  00FA81  5B68               	dw	23400
  1615  00FA83  0000               	dw	0
  1616  00FA85  000A               	dw	10
  1617  00FA87  0000               	dw	0
  1618  00FA89  5C30               	dw	23600
  1619  00FA8B  0000               	dw	0
  1620  00FA8D  0014               	dw	20
  1621  00FA8F  0000               	dw	0
  1622  00FA91  5E38               	dw	24120
  1623  00FA93  0000               	dw	0
  1624  00FA95  0019               	dw	25
  1625  00FA97  0000               	dw	0
  1626  00FA99  5E88               	dw	24200
  1627  00FA9B  0000               	dw	0
  1628  00FA9D  001E               	dw	30
  1629  00FA9F  0000               	dw	0
  1630  00FAA1  5F78               	dw	24440
  1631  00FAA3  0000               	dw	0
  1632  00FAA5  0028               	dw	40
  1633  00FAA7  0000               	dw	0
  1634  00FAA9  5FDC               	dw	24540
  1635  00FAAB  0000               	dw	0
  1636  00FAAD  002D               	dw	45
  1637  00FAAF  0000               	dw	0
  1638  00FAB1  6018               	dw	24600
  1639  00FAB3  0000               	dw	0
  1640  00FAB5  0032               	dw	50
  1641  00FAB7  0000               	dw	0
  1642  00FAB9  6046               	dw	24646
  1643  00FABB  0000               	dw	0
  1644  00FABD  0035               	dw	53
  1645  00FABF  0000               	dw	0
  1646  00FAC1  607C               	dw	24700
  1647  00FAC3  0000               	dw	0
  1648  00FAC5  0037               	dw	55
  1649  00FAC7  0000               	dw	0
  1650  00FAC9  60AE               	dw	24750
  1651  00FACB  0000               	dw	0
  1652  00FACD  0039               	dw	57
  1653  00FACF  0000               	dw	0
  1654  00FAD1  60E0               	dw	24800
  1655  00FAD3  0000               	dw	0
  1656  00FAD5  003C               	dw	60
  1657  00FAD7  0000               	dw	0
  1658  00FAD9  6112               	dw	24850
  1659  00FADB  0000               	dw	0
  1660  00FADD  003F               	dw	63
  1661  00FADF  0000               	dw	0
  1662  00FAE1  615D               	dw	24925
  1663  00FAE3  0000               	dw	0
  1664  00FAE5  0043               	dw	67
  1665  00FAE7  0000               	dw	0
  1666  00FAE9  61A8               	dw	25000
  1667  00FAEB  0000               	dw	0
  1668  00FAED  0046               	dw	70
  1669  00FAEF  0000               	dw	0
  1670  00FAF1  61BC               	dw	25020
  1671  00FAF3  0000               	dw	0
  1672  00FAF5  0048               	dw	72
  1673  00FAF7  0000               	dw	0
  1674  00FAF9  61D0               	dw	25040
  1675  00FAFB  0000               	dw	0
  1676  00FAFD  004B               	dw	75
  1677  00FAFF  0000               	dw	0
  1678  00FB01  61DA               	dw	25050
  1679  00FB03  0000               	dw	0
  1680  00FB05  0050               	dw	80
  1681  00FB07  0000               	dw	0
  1682  00FB09  61E4               	dw	25060
  1683  00FB0B  0000               	dw	0
  1684  00FB0D  0055               	dw	85
  1685  00FB0F  0000               	dw	0
  1686  00FB11  61F8               	dw	25080
  1687  00FB13  0000               	dw	0
  1688  00FB15  005A               	dw	90
  1689  00FB17  0000               	dw	0
  1690  00FB19  6208               	dw	25096
  1691  00FB1B  0000               	dw	0
  1692  00FB1D  005C               	dw	92
  1693  00FB1F  0000               	dw	0
  1694  00FB21  6222               	dw	25122
  1695  00FB23  0000               	dw	0
  1696  00FB25  005D               	dw	93
  1697  00FB27  0000               	dw	0
  1698  00FB29  6234               	dw	25140
  1699  00FB2B  0000               	dw	0
  1700  00FB2D  005F               	dw	95
  1701  00FB2F  0000               	dw	0
  1702  00FB31  6248               	dw	25160
  1703  00FB33  0000               	dw	0
  1704  00FB35  0061               	dw	97
  1705  00FB37  0000               	dw	0
  1706  00FB39  625C               	dw	25180
  1707  00FB3B  0000               	dw	0
  1708  00FB3D  0064               	dw	100
  1709  00FB3F  0000               	dw	0
  1710  00FB41  6784               	dw	26500
  1711  00FB43  0000               	dw	0
  1712  00FB45  0062               	dw	98
  1713  00FB47  0000               	dw	0
  1714  00FB49                     __end_of_BVSOC_TABLE:
  1715                           	opt callstack 0
  1716  00FB49                     _T:
  1717                           	opt callstack 0
  1718  00FB49  63                 	db	99
  1719  00FB4A  6F                 	db	111
  1720  00FB4B  6D                 	db	109
  1721  00FB4C  6D                 	db	109
  1722  00FB4D  61                 	db	97
  1723  00FB4E  6E                 	db	110
  1724  00FB4F  64                 	db	100
  1725  00FB50  73                 	db	115
  1726  00FB51  20                 	db	32
  1727  00FB52  31                 	db	49
  1728  00FB53  00                 	db	0
  1729  00FB54  00                 	db	0
  1730  00FB55  00                 	db	0
  1731  00FB56  00                 	db	0
  1732  00FB57  00                 	db	0
  1733  00FB58  00                 	db	0
  1734  00FB59  00                 	db	0
  1735  00FB5A  00                 	db	0
  1736  00FB5B  64                 	db	100
  1737  00FB5C  69                 	db	105
  1738  00FB5D  73                 	db	115
  1739  00FB5E  70                 	db	112
  1740  00FB5F  6C                 	db	108
  1741  00FB60  61                 	db	97
  1742  00FB61  79                 	db	121
  1743  00FB62  73                 	db	115
  1744  00FB63  20                 	db	32
  1745  00FB64  31                 	db	49
  1746  00FB65  00                 	db	0
  1747  00FB66  00                 	db	0
  1748  00FB67  00                 	db	0
  1749  00FB68  00                 	db	0
  1750  00FB69  00                 	db	0
  1751  00FB6A  00                 	db	0
  1752  00FB6B  00                 	db	0
  1753  00FB6C  00                 	db	0
  1754  00FB6D  63                 	db	99
  1755  00FB6E  6F                 	db	111
  1756  00FB6F  6D                 	db	109
  1757  00FB70  6D                 	db	109
  1758  00FB71  61                 	db	97
  1759  00FB72  6E                 	db	110
  1760  00FB73  64                 	db	100
  1761  00FB74  73                 	db	115
  1762  00FB75  20                 	db	32
  1763  00FB76  32                 	db	50
  1764  00FB77  00                 	db	0
  1765  00FB78  00                 	db	0
  1766  00FB79  00                 	db	0
  1767  00FB7A  00                 	db	0
  1768  00FB7B  00                 	db	0
  1769  00FB7C  00                 	db	0
  1770  00FB7D  00                 	db	0
  1771  00FB7E  00                 	db	0
  1772  00FB7F  64                 	db	100
  1773  00FB80  69                 	db	105
  1774  00FB81  73                 	db	115
  1775  00FB82  70                 	db	112
  1776  00FB83  6C                 	db	108
  1777  00FB84  61                 	db	97
  1778  00FB85  79                 	db	121
  1779  00FB86  73                 	db	115
  1780  00FB87  20                 	db	32
  1781  00FB88  32                 	db	50
  1782  00FB89  00                 	db	0
  1783  00FB8A  00                 	db	0
  1784  00FB8B  00                 	db	0
  1785  00FB8C  00                 	db	0
  1786  00FB8D  00                 	db	0
  1787  00FB8E  00                 	db	0
  1788  00FB8F  00                 	db	0
  1789  00FB90  00                 	db	0
  1790  00FB91  63                 	db	99
  1791  00FB92  6F                 	db	111
  1792  00FB93  6D                 	db	109
  1793  00FB94  6D                 	db	109
  1794  00FB95  61                 	db	97
  1795  00FB96  6E                 	db	110
  1796  00FB97  64                 	db	100
  1797  00FB98  73                 	db	115
  1798  00FB99  20                 	db	32
  1799  00FB9A  33                 	db	51
  1800  00FB9B  00                 	db	0
  1801  00FB9C  00                 	db	0
  1802  00FB9D  00                 	db	0
  1803  00FB9E  00                 	db	0
  1804  00FB9F  00                 	db	0
  1805  00FBA0  00                 	db	0
  1806  00FBA1  00                 	db	0
  1807  00FBA2  00                 	db	0
  1808  00FBA3  64                 	db	100
  1809  00FBA4  69                 	db	105
  1810  00FBA5  73                 	db	115
  1811  00FBA6  70                 	db	112
  1812  00FBA7  6C                 	db	108
  1813  00FBA8  61                 	db	97
  1814  00FBA9  79                 	db	121
  1815  00FBAA  73                 	db	115
  1816  00FBAB  20                 	db	32
  1817  00FBAC  33                 	db	51
  1818  00FBAD  00                 	db	0
  1819  00FBAE  00                 	db	0
  1820  00FBAF  00                 	db	0
  1821  00FBB0  00                 	db	0
  1822  00FBB1  00                 	db	0
  1823  00FBB2  00                 	db	0
  1824  00FBB3  00                 	db	0
  1825  00FBB4  00                 	db	0
  1826  00FBB5  63                 	db	99
  1827  00FBB6  6F                 	db	111
  1828  00FBB7  6D                 	db	109
  1829  00FBB8  6D                 	db	109
  1830  00FBB9  61                 	db	97
  1831  00FBBA  6E                 	db	110
  1832  00FBBB  64                 	db	100
  1833  00FBBC  73                 	db	115
  1834  00FBBD  20                 	db	32
  1835  00FBBE  34                 	db	52
  1836  00FBBF  00                 	db	0
  1837  00FBC0  00                 	db	0
  1838  00FBC1  00                 	db	0
  1839  00FBC2  00                 	db	0
  1840  00FBC3  00                 	db	0
  1841  00FBC4  00                 	db	0
  1842  00FBC5  00                 	db	0
  1843  00FBC6  00                 	db	0
  1844  00FBC7  64                 	db	100
  1845  00FBC8  69                 	db	105
  1846  00FBC9  73                 	db	115
  1847  00FBCA  70                 	db	112
  1848  00FBCB  6C                 	db	108
  1849  00FBCC  61                 	db	97
  1850  00FBCD  79                 	db	121
  1851  00FBCE  73                 	db	115
  1852  00FBCF  20                 	db	32
  1853  00FBD0  34                 	db	52
  1854  00FBD1  00                 	db	0
  1855  00FBD2  00                 	db	0
  1856  00FBD3  00                 	db	0
  1857  00FBD4  00                 	db	0
  1858  00FBD5  00                 	db	0
  1859  00FBD6  00                 	db	0
  1860  00FBD7  00                 	db	0
  1861  00FBD8  00                 	db	0
  1862  00FBD9                     __end_of_T:
  1863                           	opt callstack 0
  1864  00FBD9                     _spin:
  1865                           	opt callstack 0
  1866  00FBD9  7C                 	db	124
  1867  00FBDA  7C                 	db	124
  1868  00FBDB  2F                 	db	47
  1869  00FBDC  2F                 	db	47
  1870  00FBDD  2D                 	db	45
  1871  00FBDE  2D                 	db	45
  1872  00FBDF  00                 	db	0
  1873  00FBE0  00                 	db	0
  1874  00FBE1  00                 	db	0
  1875  00FBE2  00                 	db	0
  1876  00FBE3  00                 	db	0
  1877  00FBE4  00                 	db	0
  1878  00FBE5  00                 	db	0
  1879  00FBE6  00                 	db	0
  1880  00FBE7  00                 	db	0
  1881  00FBE8  00                 	db	0
  1882  00FBE9  00                 	db	0
  1883  00FBEA  00                 	db	0
  1884  00FBEB  00                 	db	0
  1885  00FBEC  00                 	db	0
  1886  00FBED  7C                 	db	124
  1887  00FBEE  7C                 	db	124
  1888  00FBEF  2F                 	db	47
  1889  00FBF0  2F                 	db	47
  1890  00FBF1  2D                 	db	45
  1891  00FBF2  2D                 	db	45
  1892  00FBF3  5C                 	db	92
  1893  00FBF4  5C                 	db	92
  1894  00FBF5  00                 	db	0
  1895  00FBF6  00                 	db	0
  1896  00FBF7  00                 	db	0
  1897  00FBF8  00                 	db	0
  1898  00FBF9  00                 	db	0
  1899  00FBFA  00                 	db	0
  1900  00FBFB  00                 	db	0
  1901  00FBFC  00                 	db	0
  1902  00FBFD  00                 	db	0
  1903  00FBFE  00                 	db	0
  1904  00FBFF  00                 	db	0
  1905  00FC00  00                 	db	0
  1906  00FC01  4F                 	db	79
  1907  00FC02  4F                 	db	79
  1908  00FC03  4F                 	db	79
  1909  00FC04  4F                 	db	79
  1910  00FC05  4F                 	db	79
  1911  00FC06  4F                 	db	79
  1912  00FC07  2D                 	db	45
  1913  00FC08  2D                 	db	45
  1914  00FC09  5F                 	db	95
  1915  00FC0A  5F                 	db	95
  1916  00FC0B  2D                 	db	45
  1917  00FC0C  00                 	db	0
  1918  00FC0D  00                 	db	0
  1919  00FC0E  00                 	db	0
  1920  00FC0F  00                 	db	0
  1921  00FC10  00                 	db	0
  1922  00FC11  00                 	db	0
  1923  00FC12  00                 	db	0
  1924  00FC13  00                 	db	0
  1925  00FC14  00                 	db	0
  1926  00FC15  76                 	db	118
  1927  00FC16  76                 	db	118
  1928  00FC17  3C                 	db	60
  1929  00FC18  3C                 	db	60
  1930  00FC19  5E                 	db	94
  1931  00FC1A  5E                 	db	94
  1932  00FC1B  3E                 	db	62
  1933  00FC1C  3E                 	db	62
  1934  00FC1D  00                 	db	0
  1935  00FC1E  00                 	db	0
  1936  00FC1F  00                 	db	0
  1937  00FC20  00                 	db	0
  1938  00FC21  00                 	db	0
  1939  00FC22  00                 	db	0
  1940  00FC23  00                 	db	0
  1941  00FC24  00                 	db	0
  1942  00FC25  00                 	db	0
  1943  00FC26  00                 	db	0
  1944  00FC27  00                 	db	0
  1945  00FC28  00                 	db	0
  1946  00FC29  2E                 	db	46
  1947  00FC2A  2E                 	db	46
  1948  00FC2B  2A                 	db	42
  1949  00FC2C  2A                 	db	42
  1950  00FC2D  78                 	db	120
  1951  00FC2E  23                 	db	35
  1952  00FC2F  78                 	db	120
  1953  00FC30  23                 	db	35
  1954  00FC31  58                 	db	88
  1955  00FC32  58                 	db	88
  1956  00FC33  7C                 	db	124
  1957  00FC34  7C                 	db	124
  1958  00FC35  2D                 	db	45
  1959  00FC36  2D                 	db	45
  1960  00FC37  00                 	db	0
  1961  00FC38  00                 	db	0
  1962  00FC39  00                 	db	0
  1963  00FC3A  00                 	db	0
  1964  00FC3B  00                 	db	0
  1965  00FC3C  00                 	db	0
  1966  00FC3D  2E                 	db	46
  1967  00FC3E  2E                 	db	46
  1968  00FC3F  6F                 	db	111
  1969  00FC40  6F                 	db	111
  1970  00FC41  4F                 	db	79
  1971  00FC42  4F                 	db	79
  1972  00FC43  6F                 	db	111
  1973  00FC44  6F                 	db	111
  1974  00FC45  00                 	db	0
  1975  00FC46  00                 	db	0
  1976  00FC47  00                 	db	0
  1977  00FC48  00                 	db	0
  1978  00FC49  00                 	db	0
  1979  00FC4A  00                 	db	0
  1980  00FC4B  00                 	db	0
  1981  00FC4C  00                 	db	0
  1982  00FC4D  00                 	db	0
  1983  00FC4E  00                 	db	0
  1984  00FC4F  00                 	db	0
  1985  00FC50  00                 	db	0
  1986  00FC51                     __end_of_spin:
  1987                           	opt callstack 0
  1988  00FC51  0000               	dw	0
  1989  00FC53  3F80               	dw	16256
  1990  00FC55  0000               	dw	0
  1991  00FC57  3FC0               	dw	16320
  1992  00FC59                     __end_of_bp:
  1993                           	opt callstack 0
  1994  00FC59  AA00               	dw	43520
  1995  00FC5B  3FB8               	dw	16312
  1996  00FC5D                     __end_of_ivln2_h:
  1997                           	opt callstack 0
  1998  00FC5D  23C6               	dw	9158
  1999  00FC5F  B8F6               	dw	47350
  2000  00FC61                     __end_of_cp_l:
  2001                           	opt callstack 0
  2002  00FC61  4000               	dw	16384
  2003  00FC63  3F76               	dw	16246
  2004  00FC65                     __end_of_cp_h:
  2005                           	opt callstack 0
  2006  0000                     _IVTADL	set	14493
  2007  0000                     _IVTADH	set	14494
  2008  0000                     _IVTADU	set	14495
  2009  0000                     _PIR6bits	set	14758
  2010  0000                     _PIR4bits	set	14756
  2011  0000                     _PIE8bits	set	14744
  2012  0000                     _PIR8bits	set	14760
  2013  0000                     _SCANPR	set	14839
  2014  0000                     _DMA2PR	set	14836
  2015  0000                     _DMA1PR	set	14835
  2016  0000                     _MAINPR	set	14834
  2017  0000                     _ISRPR	set	14833
  2018  0000                     _PIE2bits	set	14738
  2019  0000                     _PIR2bits	set	14754
  2020  0000                     _PIE9bits	set	14745
  2021  0000                     _PIR9bits	set	14761
  2022  0000                     _PIE6bits	set	14742
  2023  0000                     _PIE3bits	set	14739
  2024  0000                     _PMD7	set	14791
  2025  0000                     _PMD6	set	14790
  2026  0000                     _PMD5	set	14789
  2027  0000                     _PMD4	set	14788
  2028  0000                     _PMD3	set	14787
  2029  0000                     _PMD2	set	14786
  2030  0000                     _PMD1	set	14785
  2031  0000                     _PMD0	set	14784
  2032  0000                     _OSCTUNE	set	14814
  2033  0000                     _OSCFRQ	set	14815
  2034  0000                     _OSCEN	set	14813
  2035  0000                     _OSCCON3	set	14811
  2036  0000                     _OSCCON1	set	14809
  2037  0000                     _IPR8bits	set	14728
  2038  0000                     _IPR9bits	set	14729
  2039  0000                     _IPR5bits	set	14725
  2040  0000                     _IPR1bits	set	14721
  2041  0000                     _IPR3bits	set	14723
  2042  0000                     _IPR6bits	set	14726
  2043  0000                     _IPR2bits	set	14722
  2044  0000                     _PIE5bits	set	14741
  2045  0000                     _PIE1bits	set	14737
  2046  0000                     _PIR5bits	set	14757
  2047  0000                     _PIR1bits	set	14753
  2048  0000                     _PLLR	set	118496
  2049  0000                     _SPI1SDIPPS	set	15071
  2050  0000                     _U1RXPPS	set	15077
  2051  0000                     _RC6PPS	set	14870
  2052  0000                     _RC5PPS	set	14869
  2053  0000                     _INT1PPS	set	15041
  2054  0000                     _RD1PPS	set	14873
  2055  0000                     _INT0PPS	set	15040
  2056  0000                     _RC3PPS	set	14867
  2057  0000                     _RB6PPS	set	14862
  2058  0000                     _SPI1SCKPPS	set	15070
  2059  0000                     _U2RXPPS	set	15080
  2060  0000                     _SLRCONF	set	14995
  2061  0000                     _SLRCONE	set	14979
  2062  0000                     _SLRCOND	set	14963
  2063  0000                     _SLRCONC	set	14947
  2064  0000                     _SLRCONB	set	14931
  2065  0000                     _SLRCONA	set	14915
  2066  0000                     _ODCOND	set	14962
  2067  0000                     _ODCONC	set	14946
  2068  0000                     _ODCONB	set	14930
  2069  0000                     _ODCONA	set	14914
  2070  0000                     _ODCONF	set	14994
  2071  0000                     _ODCONE	set	14978
  2072  0000                     _WPUC	set	14945
  2073  0000                     _WPUA	set	14913
  2074  0000                     _WPUB	set	14929
  2075  0000                     _WPUE	set	14977
  2076  0000                     _WPUF	set	14993
  2077  0000                     _WPUD	set	14961
  2078  0000                     _ANSELA	set	14912
  2079  0000                     _ANSELF	set	14992
  2080  0000                     _ANSELE	set	14976
  2081  0000                     _ANSELB	set	14928
  2082  0000                     _ANSELC	set	14944
  2083  0000                     _ANSELD	set	14960
  2084  0000                     _DMA2SSA	set	15321
  2085  0000                     _DMA1SSA	set	15353
  2086  0000                     _DMA2DSZ	set	15310
  2087  0000                     _DMA2SSZ	set	15319
  2088  0000                     _DMA2DSA	set	15312
  2089  0000                     _DMA1DSZ	set	15342
  2090  0000                     _DMA1SSZ	set	15351
  2091  0000                     _DMA1DSA	set	15344
  2092  0000                     _DMA2CON0bits	set	15324
  2093  0000                     _DMA2CON1bits	set	15325
  2094  0000                     _DMA1CON0bits	set	15356
  2095  0000                     _DMA1CON1bits	set	15357
  2096  0000                     _DMA2CON0	set	15324
  2097  0000                     _DMA2AIRQ	set	15326
  2098  0000                     _DMA2SIRQ	set	15327
  2099  0000                     _DMA2CON1	set	15325
  2100  0000                     _DMA1CON0	set	15356
  2101  0000                     _DMA1AIRQ	set	15358
  2102  0000                     _DMA1SIRQ	set	15359
  2103  0000                     _DMA1CON1	set	15357
  2104  0000                     _CLKRCON	set	15589
  2105  0000                     _CLKRCLK	set	15590
  2106  0000                     _SPI1INTFbits	set	15642
  2107  0000                     _SPI1RXB	set	15632
  2108  0000                     _SPI1TXB	set	15633
  2109  0000                     _SPI1TCNTL	set	15634
  2110  0000                     _SPI1CON0	set	15636
  2111  0000                     _SPI1CLK	set	15644
  2112  0000                     _SPI1BAUD	set	15641
  2113  0000                     _SPI1CON2	set	15638
  2114  0000                     _SPI1CON1	set	15637
  2115  0000                     _U2RXB	set	15824
  2116  0000                     _U2TXB	set	15826
  2117  0000                     _U2ERRIE	set	15842
  2118  0000                     _U2ERRIR	set	15841
  2119  0000                     _U2UIR	set	15840
  2120  0000                     _U2FIFO	set	15839
  2121  0000                     _U2BRGH	set	15838
  2122  0000                     _U2BRGL	set	15837
  2123  0000                     _U2CON2	set	15836
  2124  0000                     _U2CON1	set	15835
  2125  0000                     _U2CON0	set	15834
  2126  0000                     _U2P3L	set	15832
  2127  0000                     _U2P2L	set	15830
  2128  0000                     _U2P1L	set	15828
  2129  0000                     _U1RXB	set	15848
  2130  0000                     _U1ERRIE	set	15866
  2131  0000                     _U1ERRIR	set	15865
  2132  0000                     _U1UIR	set	15864
  2133  0000                     _U1FIFO	set	15863
  2134  0000                     _U1BRGH	set	15862
  2135  0000                     _U1BRGL	set	15861
  2136  0000                     _U1CON2	set	15860
  2137  0000                     _U1CON1	set	15859
  2138  0000                     _U1CON0	set	15858
  2139  0000                     _U1P3H	set	15857
  2140  0000                     _U1P3L	set	15856
  2141  0000                     _U1P2H	set	15855
  2142  0000                     _U1P2L	set	15854
  2143  0000                     _U1P1H	set	15853
  2144  0000                     _U1P1L	set	15852
  2145  0000                     _FVRCON	set	16065
  2146  0000                     _ADFLTRL	set	16102
  2147  0000                     _ADFLTRH	set	16103
  2148  0000                     _ADCON0bits	set	16120
  2149  0000                     _ADCON0	set	16120
  2150  0000                     _ADCLK	set	16127
  2151  0000                     _ADACT	set	16126
  2152  0000                     _ADREF	set	16125
  2153  0000                     _ADSTAT	set	16124
  2154  0000                     _ADCON3	set	16123
  2155  0000                     _ADCON2	set	16122
  2156  0000                     _ADCON1	set	16121
  2157  0000                     _ADPREH	set	16119
  2158  0000                     _ADPREL	set	16118
  2159  0000                     _ADCAP	set	16117
  2160  0000                     _ADACQH	set	16116
  2161  0000                     _ADACQL	set	16115
  2162  0000                     _ADPCH	set	16113
  2163  0000                     _ADRPT	set	16108
  2164  0000                     _ADACCU	set	16106
  2165  0000                     _ADSTPTH	set	16101
  2166  0000                     _ADSTPTL	set	16100
  2167  0000                     _ADUTHH	set	16097
  2168  0000                     _ADUTHL	set	16096
  2169  0000                     _ADLTHH	set	16095
  2170  0000                     _ADLTHL	set	16094
  2171  0000                     _CCPTMRS1bits	set	16223
  2172  0000                     _PORTFbits	set	16335
  2173  0000                     _LATFbits	set	16319
  2174  0000                     _LATCbits	set	16316
  2175  0000                     _LATDbits	set	16317
  2176  0000                     _PORTBbits	set	16331
  2177  0000                     _T3CONbits	set	16294
  2178  0000                     _T3CON	set	16294
  2179  0000                     _TMR3L	set	16292
  2180  0000                     _TMR3H	set	16293
  2181  0000                     _T3CLK	set	16297
  2182  0000                     _T3GATE	set	16296
  2183  0000                     _T3GCON	set	16295
  2184  0000                     _T2CON	set	16300
  2185  0000                     _T2TMR	set	16298
  2186  0000                     _T2PR	set	16299
  2187  0000                     _T2RST	set	16303
  2188  0000                     _T2HLT	set	16301
  2189  0000                     _T2CLKCON	set	16302
  2190  0000                     _PWM8DCL	set	16224
  2191  0000                     _PWM8DCH	set	16225
  2192  0000                     _PWM8CON	set	16226
  2193  0000                     _LATEbits	set	16318
  2194  0000                     _T5CONbits	set	16282
  2195  0000                     _T5CON	set	16282
  2196  0000                     _TMR5L	set	16280
  2197  0000                     _TMR5H	set	16281
  2198  0000                     _T5CLK	set	16285
  2199  0000                     _T5GATE	set	16284
  2200  0000                     _T5GCON	set	16283
  2201  0000                     _T6CON	set	16276
  2202  0000                     _T6TMR	set	16274
  2203  0000                     _T6PR	set	16275
  2204  0000                     _T6RST	set	16279
  2205  0000                     _T6HLT	set	16277
  2206  0000                     _T6CLKCON	set	16278
  2207  0000                     _TRISD	set	16325
  2208  0000                     _TRISC	set	16324
  2209  0000                     _TRISB	set	16323
  2210  0000                     _TRISA	set	16322
  2211  0000                     _TRISF	set	16327
  2212  0000                     _TRISE	set	16326
  2213  0000                     _LATC	set	16316
  2214  0000                     _LATB	set	16315
  2215  0000                     _LATF	set	16319
  2216  0000                     _LATA	set	16314
  2217  0000                     _LATD	set	16317
  2218  0000                     _LATE	set	16318
  2219  0000                     _IVTLOCKbits	set	16340
  2220  0000                     _IVTLOCK	set	16340
  2221  0000                     _INTCON0bits	set	16338
  2222  0000                     _GIE	set	130711
  2223  00FC65                     STR_65:
  2224                           
  2225                           ; BSR set to: 57
  2226  00FC65  20                 	db	32
  2227  00FC66  25                 	db	37
  2228  00FC67  6C                 	db	108	;'l'
  2229  00FC68  75                 	db	117	;'u'
  2230  00FC69  2C                 	db	44
  2231  00FC6A  25                 	db	37
  2232  00FC6B  34                 	db	52	;'4'
  2233  00FC6C  2E                 	db	46
  2234  00FC6D  34                 	db	52	;'4'
  2235  00FC6E  66                 	db	102	;'f'
  2236  00FC6F  2C                 	db	44
  2237  00FC70  25                 	db	37
  2238  00FC71  34                 	db	52	;'4'
  2239  00FC72  2E                 	db	46
  2240  00FC73  34                 	db	52	;'4'
  2241  00FC74  66                 	db	102	;'f'
  2242  00FC75  2C                 	db	44
  2243  00FC76  25                 	db	37
  2244  00FC77  34                 	db	52	;'4'
  2245  00FC78  2E                 	db	46
  2246  00FC79  34                 	db	52	;'4'
  2247  00FC7A  66                 	db	102	;'f'
  2248  00FC7B  2C                 	db	44
  2249  00FC7C  25                 	db	37
  2250  00FC7D  34                 	db	52	;'4'
  2251  00FC7E  2E                 	db	46
  2252  00FC7F  34                 	db	52	;'4'
  2253  00FC80  66                 	db	102	;'f'
  2254  00FC81  2C                 	db	44
  2255  00FC82  25                 	db	37
  2256  00FC83  34                 	db	52	;'4'
  2257  00FC84  2E                 	db	46
  2258  00FC85  33                 	db	51	;'3'
  2259  00FC86  66                 	db	102	;'f'
  2260  00FC87  2C                 	db	44
  2261  00FC88  25                 	db	37
  2262  00FC89  34                 	db	52	;'4'
  2263  00FC8A  2E                 	db	46
  2264  00FC8B  33                 	db	51	;'3'
  2265  00FC8C  66                 	db	102	;'f'
  2266  00FC8D  2C                 	db	44
  2267  00FC8E  25                 	db	37
  2268  00FC8F  34                 	db	52	;'4'
  2269  00FC90  2E                 	db	46
  2270  00FC91  33                 	db	51	;'3'
  2271  00FC92  66                 	db	102	;'f'
  2272  00FC93  2C                 	db	44
  2273  00FC94  25                 	db	37
  2274  00FC95  34                 	db	52	;'4'
  2275  00FC96  2E                 	db	46
  2276  00FC97  33                 	db	51	;'3'
  2277  00FC98  66                 	db	102	;'f'
  2278  00FC99  2C                 	db	44
  2279  00FC9A  25                 	db	37
  2280  00FC9B  34                 	db	52	;'4'
  2281  00FC9C  2E                 	db	46
  2282  00FC9D  33                 	db	51	;'3'
  2283  00FC9E  66                 	db	102	;'f'
  2284  00FC9F  2C                 	db	44
  2285  00FCA0  25                 	db	37
  2286  00FCA1  34                 	db	52	;'4'
  2287  00FCA2  2E                 	db	46
  2288  00FCA3  33                 	db	51	;'3'
  2289  00FCA4  66                 	db	102	;'f'
  2290  00FCA5  2C                 	db	44
  2291  00FCA6  25                 	db	37
  2292  00FCA7  34                 	db	52	;'4'
  2293  00FCA8  2E                 	db	46
  2294  00FCA9  33                 	db	51	;'3'
  2295  00FCAA  64                 	db	100	;'d'
  2296  00FCAB  2C                 	db	44
  2297  00FCAC  25                 	db	37
  2298  00FCAD  34                 	db	52	;'4'
  2299  00FCAE  2E                 	db	46
  2300  00FCAF  33                 	db	51	;'3'
  2301  00FCB0  64                 	db	100	;'d'
  2302  00FCB1  2C                 	db	44
  2303  00FCB2  25                 	db	37
  2304  00FCB3  32                 	db	50	;'2'
  2305  00FCB4  2E                 	db	46
  2306  00FCB5  36                 	db	54	;'6'
  2307  00FCB6  66                 	db	102	;'f'
  2308  00FCB7  0D                 	db	13
  2309  00FCB8  0A                 	db	10
  2310  00FCB9  00                 	db	0
  2311  00FCBA                     STR_17:
  2312                           
  2313                           ; BSR set to: 57
  2314  00FCBA  52                 	db	82	;'R'
  2315  00FCBB  31                 	db	49	;'1'
  2316  00FCBC  20                 	db	32
  2317  00FCBD  25                 	db	37
  2318  00FCBE  32                 	db	50	;'2'
  2319  00FCBF  2E                 	db	46
  2320  00FCC0  33                 	db	51	;'3'
  2321  00FCC1  66                 	db	102	;'f'
  2322  00FCC2  20                 	db	32
  2323  00FCC3  25                 	db	37
  2324  00FCC4  33                 	db	51	;'3'
  2325  00FCC5  2E                 	db	46
  2326  00FCC6  34                 	db	52	;'4'
  2327  00FCC7  66                 	db	102	;'f'
  2328  00FCC8  20                 	db	32
  2329  00FCC9  20                 	db	32
  2330  00FCCA  20                 	db	32
  2331  00FCCB  20                 	db	32
  2332  00FCCC  20                 	db	32
  2333  00FCCD  20                 	db	32
  2334  00FCCE  20                 	db	32
  2335  00FCCF  20                 	db	32
  2336  00FCD0  20                 	db	32
  2337  00FCD1  20                 	db	32
  2338  00FCD2  20                 	db	32
  2339  00FCD3  00                 	db	0
  2340  00FCD4                     STR_18:
  2341                           
  2342                           ; BSR set to: 57
  2343  00FCD4  52                 	db	82	;'R'
  2344  00FCD5  32                 	db	50	;'2'
  2345  00FCD6  20                 	db	32
  2346  00FCD7  25                 	db	37
  2347  00FCD8  32                 	db	50	;'2'
  2348  00FCD9  2E                 	db	46
  2349  00FCDA  33                 	db	51	;'3'
  2350  00FCDB  66                 	db	102	;'f'
  2351  00FCDC  20                 	db	32
  2352  00FCDD  25                 	db	37
  2353  00FCDE  33                 	db	51	;'3'
  2354  00FCDF  2E                 	db	46
  2355  00FCE0  34                 	db	52	;'4'
  2356  00FCE1  66                 	db	102	;'f'
  2357  00FCE2  20                 	db	32
  2358  00FCE3  20                 	db	32
  2359  00FCE4  20                 	db	32
  2360  00FCE5  20                 	db	32
  2361  00FCE6  20                 	db	32
  2362  00FCE7  20                 	db	32
  2363  00FCE8  20                 	db	32
  2364  00FCE9  20                 	db	32
  2365  00FCEA  20                 	db	32
  2366  00FCEB  20                 	db	32
  2367  00FCEC  20                 	db	32
  2368  00FCED  00                 	db	0
  2369  00FCEE                     
  2370                           ; BSR set to: 57
  2371  00FCEE  20                 	db	32
  2372  00FCEF  4D                 	db	77	;'M'
  2373  00FCF0  65                 	db	101	;'e'
  2374  00FCF1  73                 	db	115	;'s'
  2375  00FCF2  67                 	db	103	;'g'
  2376  00FCF3  20                 	db	32
  2377  00FCF4  25                 	db	37
  2378  00FCF5  64                 	db	100	;'d'
  2379  00FCF6  20                 	db	32
  2380  00FCF7  53                 	db	83	;'S'
  2381  00FCF8  74                 	db	116	;'t'
  2382  00FCF9  61                 	db	97	;'a'
  2383  00FCFA  63                 	db	99	;'c'
  2384  00FCFB  6B                 	db	107	;'k'
  2385  00FCFC  20                 	db	32
  2386  00FCFD  25                 	db	37
  2387  00FCFE  64                 	db	100	;'d'
  2388  00FCFF  20                 	db	32
  2389  00FD00  20                 	db	32
  2390  00FD01  20                 	db	32
  2391  00FD02  20                 	db	32
  2392  00FD03  20                 	db	32
  2393  00FD04  20                 	db	32
  2394  00FD05  00                 	db	0
  2395  00FD06                     STR_9:
  2396                           
  2397                           ; BSR set to: 57
  2398  00FD06  53                 	db	83	;'S'
  2399  00FD07  20                 	db	32
  2400  00FD08  53                 	db	83	;'S'
  2401  00FD09  25                 	db	37
  2402  00FD0A  63                 	db	99	;'c'
  2403  00FD0B  43                 	db	67	;'C'
  2404  00FD0C  20                 	db	32
  2405  00FD0D  25                 	db	37
  2406  00FD0E  64                 	db	100	;'d'
  2407  00FD0F  20                 	db	32
  2408  00FD10  25                 	db	37
  2409  00FD11  32                 	db	50	;'2'
  2410  00FD12  2E                 	db	46
  2411  00FD13  34                 	db	52	;'4'
  2412  00FD14  66                 	db	102	;'f'
  2413  00FD15  20                 	db	32
  2414  00FD16  20                 	db	32
  2415  00FD17  20                 	db	32
  2416  00FD18  20                 	db	32
  2417  00FD19  20                 	db	32
  2418  00FD1A  20                 	db	32
  2419  00FD1B  20                 	db	32
  2420  00FD1C  00                 	db	0
  2421  00FD1D                     STR_16:
  2422                           
  2423                           ; BSR set to: 57
  2424  00FD1D  45                 	db	69	;'E'
  2425  00FD1E  53                 	db	83	;'S'
  2426  00FD1F  52                 	db	82	;'R'
  2427  00FD20  20                 	db	32
  2428  00FD21  20                 	db	32
  2429  00FD22  25                 	db	37
  2430  00FD23  32                 	db	50	;'2'
  2431  00FD24  2E                 	db	46
  2432  00FD25  36                 	db	54	;'6'
  2433  00FD26  66                 	db	102	;'f'
  2434  00FD27  20                 	db	32
  2435  00FD28  20                 	db	32
  2436  00FD29  20                 	db	32
  2437  00FD2A  20                 	db	32
  2438  00FD2B  20                 	db	32
  2439  00FD2C  20                 	db	32
  2440  00FD2D  20                 	db	32
  2441  00FD2E  20                 	db	32
  2442  00FD2F  20                 	db	32
  2443  00FD30  20                 	db	32
  2444  00FD31  20                 	db	32
  2445  00FD32  00                 	db	0
  2446  00FD33                     STR_10:
  2447                           
  2448                           ; BSR set to: 57
  2449  00FD33  53                 	db	83	;'S'
  2450  00FD34  74                 	db	116	;'t'
  2451  00FD35  61                 	db	97	;'a'
  2452  00FD36  74                 	db	116	;'t'
  2453  00FD37  69                 	db	105	;'i'
  2454  00FD38  63                 	db	99	;'c'
  2455  00FD39  20                 	db	32
  2456  00FD3A  53                 	db	83	;'S'
  2457  00FD3B  4F                 	db	79	;'O'
  2458  00FD3C  43                 	db	67	;'C'
  2459  00FD3D  20                 	db	32
  2460  00FD3E  25                 	db	37
  2461  00FD3F  64                 	db	100	;'d'
  2462  00FD40  20                 	db	32
  2463  00FD41  20                 	db	32
  2464  00FD42  20                 	db	32
  2465  00FD43  20                 	db	32
  2466  00FD44  20                 	db	32
  2467  00FD45  20                 	db	32
  2468  00FD46  20                 	db	32
  2469  00FD47  20                 	db	32
  2470  00FD48  00                 	db	0
  2471  00FD49                     STR_11:
  2472                           
  2473                           ; BSR set to: 57
  2474  00FD49  42                 	db	66	;'B'
  2475  00FD4A  61                 	db	97	;'a'
  2476  00FD4B  74                 	db	116	;'t'
  2477  00FD4C  74                 	db	116	;'t'
  2478  00FD4D  65                 	db	101	;'e'
  2479  00FD4E  72                 	db	114	;'r'
  2480  00FD4F  79                 	db	121	;'y'
  2481  00FD50  20                 	db	32
  2482  00FD51  41                 	db	65	;'A'
  2483  00FD52  68                 	db	104	;'h'
  2484  00FD53  20                 	db	32
  2485  00FD54  25                 	db	37
  2486  00FD55  33                 	db	51	;'3'
  2487  00FD56  2E                 	db	46
  2488  00FD57  32                 	db	50	;'2'
  2489  00FD58  66                 	db	102	;'f'
  2490  00FD59  20                 	db	32
  2491  00FD5A  20                 	db	32
  2492  00FD5B  20                 	db	32
  2493  00FD5C  20                 	db	32
  2494  00FD5D  20                 	db	32
  2495  00FD5E  00                 	db	0
  2496  00FD5F                     STR_15:
  2497                           
  2498                           ; BSR set to: 57
  2499  00FD5F  43                 	db	67	;'C'
  2500  00FD60  68                 	db	104	;'h'
  2501  00FD61  65                 	db	101	;'e'
  2502  00FD62  63                 	db	99	;'c'
  2503  00FD63  6B                 	db	107	;'k'
  2504  00FD64  69                 	db	105	;'i'
  2505  00FD65  6E                 	db	110	;'n'
  2506  00FD66  67                 	db	103	;'g'
  2507  00FD67  20                 	db	32
  2508  00FD68  25                 	db	37
  2509  00FD69  63                 	db	99	;'c'
  2510  00FD6A  20                 	db	32
  2511  00FD6B  25                 	db	37
  2512  00FD6C  63                 	db	99	;'c'
  2513  00FD6D  20                 	db	32
  2514  00FD6E  20                 	db	32
  2515  00FD6F  20                 	db	32
  2516  00FD70  20                 	db	32
  2517  00FD71  20                 	db	32
  2518  00FD72  20                 	db	32
  2519  00FD73  00                 	db	0
  2520  00FD74                     STR_37:
  2521                           
  2522                           ; BSR set to: 57
  2523  00FD74  45                 	db	69	;'E'
  2524  00FD75  53                 	db	83	;'S'
  2525  00FD76  52                 	db	82	;'R'
  2526  00FD77  20                 	db	32
  2527  00FD78  20                 	db	32
  2528  00FD79  25                 	db	37
  2529  00FD7A  32                 	db	50	;'2'
  2530  00FD7B  2E                 	db	46
  2531  00FD7C  36                 	db	54	;'6'
  2532  00FD7D  66                 	db	102	;'f'
  2533  00FD7E  20                 	db	32
  2534  00FD7F  20                 	db	32
  2535  00FD80  20                 	db	32
  2536  00FD81  20                 	db	32
  2537  00FD82  20                 	db	32
  2538  00FD83  20                 	db	32
  2539  00FD84  20                 	db	32
  2540  00FD85  20                 	db	32
  2541  00FD86  20                 	db	32
  2542  00FD87  00                 	db	0
  2543  00FD88                     STR_36:
  2544                           
  2545                           ; BSR set to: 57
  2546  00FD88  53                 	db	83	;'S'
  2547  00FD89  25                 	db	37
  2548  00FD8A  63                 	db	99	;'c'
  2549  00FD8B  43                 	db	67	;'C'
  2550  00FD8C  20                 	db	32
  2551  00FD8D  25                 	db	37
  2552  00FD8E  64                 	db	100	;'d'
  2553  00FD8F  20                 	db	32
  2554  00FD90  52                 	db	82	;'R'
  2555  00FD91  55                 	db	85	;'U'
  2556  00FD92  4E                 	db	78	;'N'
  2557  00FD93  20                 	db	32
  2558  00FD94  25                 	db	37
  2559  00FD95  64                 	db	100	;'d'
  2560  00FD96  20                 	db	32
  2561  00FD97  20                 	db	32
  2562  00FD98  20                 	db	32
  2563  00FD99  20                 	db	32
  2564  00FD9A  20                 	db	32
  2565  00FD9B  00                 	db	0
  2566  00FD9C                     STR_25:
  2567                           
  2568                           ; BSR set to: 57
  2569  00FD9C  50                 	db	80	;'P'
  2570  00FD9D  56                 	db	86	;'V'
  2571  00FD9E  20                 	db	32
  2572  00FD9F  25                 	db	37
  2573  00FDA0  63                 	db	99	;'c'
  2574  00FDA1  20                 	db	32
  2575  00FDA2  57                 	db	87	;'W'
  2576  00FDA3  48                 	db	72	;'H'
  2577  00FDA4  20                 	db	32
  2578  00FDA5  25                 	db	37
  2579  00FDA6  33                 	db	51	;'3'
  2580  00FDA7  2E                 	db	46
  2581  00FDA8  32                 	db	50	;'2'
  2582  00FDA9  66                 	db	102	;'f'
  2583  00FDAA  20                 	db	32
  2584  00FDAB  20                 	db	32
  2585  00FDAC  20                 	db	32
  2586  00FDAD  20                 	db	32
  2587  00FDAE  20                 	db	32
  2588  00FDAF  00                 	db	0
  2589  00FDB0                     STR_34:
  2590                           
  2591                           ; BSR set to: 57
  2592  00FDB0  42                 	db	66	;'B'
  2593  00FDB1  41                 	db	65	;'A'
  2594  00FDB2  54                 	db	84	;'T'
  2595  00FDB3  54                 	db	84	;'T'
  2596  00FDB4  20                 	db	32
  2597  00FDB5  50                 	db	80	;'P'
  2598  00FDB6  57                 	db	87	;'W'
  2599  00FDB7  52                 	db	82	;'R'
  2600  00FDB8  20                 	db	32
  2601  00FDB9  25                 	db	37
  2602  00FDBA  33                 	db	51	;'3'
  2603  00FDBB  2E                 	db	46
  2604  00FDBC  32                 	db	50	;'2'
  2605  00FDBD  66                 	db	102	;'f'
  2606  00FDBE  20                 	db	32
  2607  00FDBF  20                 	db	32
  2608  00FDC0  20                 	db	32
  2609  00FDC1  20                 	db	32
  2610  00FDC2  20                 	db	32
  2611  00FDC3  00                 	db	0
  2612  00FDC4                     STR_38:
  2613                           
  2614                           ; BSR set to: 57
  2615  00FDC4  52                 	db	82	;'R'
  2616  00FDC5  31                 	db	49	;'1'
  2617  00FDC6  20                 	db	32
  2618  00FDC7  25                 	db	37
  2619  00FDC8  32                 	db	50	;'2'
  2620  00FDC9  2E                 	db	46
  2621  00FDCA  33                 	db	51	;'3'
  2622  00FDCB  66                 	db	102	;'f'
  2623  00FDCC  20                 	db	32
  2624  00FDCD  25                 	db	37
  2625  00FDCE  33                 	db	51	;'3'
  2626  00FDCF  2E                 	db	46
  2627  00FDD0  34                 	db	52	;'4'
  2628  00FDD1  66                 	db	102	;'f'
  2629  00FDD2  20                 	db	32
  2630  00FDD3  20                 	db	32
  2631  00FDD4  20                 	db	32
  2632  00FDD5  20                 	db	32
  2633  00FDD6  20                 	db	32
  2634  00FDD7  00                 	db	0
  2635  00FDD8                     STR_39:
  2636                           
  2637                           ; BSR set to: 57
  2638  00FDD8  52                 	db	82	;'R'
  2639  00FDD9  32                 	db	50	;'2'
  2640  00FDDA  20                 	db	32
  2641  00FDDB  25                 	db	37
  2642  00FDDC  32                 	db	50	;'2'
  2643  00FDDD  2E                 	db	46
  2644  00FDDE  33                 	db	51	;'3'
  2645  00FDDF  66                 	db	102	;'f'
  2646  00FDE0  20                 	db	32
  2647  00FDE1  25                 	db	37
  2648  00FDE2  33                 	db	51	;'3'
  2649  00FDE3  2E                 	db	46
  2650  00FDE4  34                 	db	52	;'4'
  2651  00FDE5  66                 	db	102	;'f'
  2652  00FDE6  20                 	db	32
  2653  00FDE7  20                 	db	32
  2654  00FDE8  20                 	db	32
  2655  00FDE9  20                 	db	32
  2656  00FDEA  20                 	db	32
  2657  00FDEB  00                 	db	0
  2658  00FDEC                     STR_22:
  2659                           
  2660                           ; BSR set to: 57
  2661  00FDEC  50                 	db	80	;'P'
  2662  00FDED  56                 	db	86	;'V'
  2663  00FDEE  20                 	db	32
  2664  00FDEF  25                 	db	37
  2665  00FDF0  63                 	db	99	;'c'
  2666  00FDF1  20                 	db	32
  2667  00FDF2  50                 	db	80	;'P'
  2668  00FDF3  57                 	db	87	;'W'
  2669  00FDF4  52                 	db	82	;'R'
  2670  00FDF5  20                 	db	32
  2671  00FDF6  25                 	db	37
  2672  00FDF7  33                 	db	51	;'3'
  2673  00FDF8  2E                 	db	46
  2674  00FDF9  32                 	db	50	;'2'
  2675  00FDFA  66                 	db	102	;'f'
  2676  00FDFB  20                 	db	32
  2677  00FDFC  20                 	db	32
  2678  00FDFD  20                 	db	32
  2679  00FDFE  20                 	db	32
  2680  00FDFF  00                 	db	0
  2681  00FE00                     STR_35:
  2682                           
  2683                           ; BSR set to: 57
  2684  00FE00  42                 	db	66	;'B'
  2685  00FE01  41                 	db	65	;'A'
  2686  00FE02  48                 	db	72	;'H'
  2687  00FE03  20                 	db	32
  2688  00FE04  25                 	db	37
  2689  00FE05  33                 	db	51	;'3'
  2690  00FE06  2E                 	db	46
  2691  00FE07  32                 	db	50	;'2'
  2692  00FE08  66                 	db	102	;'f'
  2693  00FE09  20                 	db	32
  2694  00FE0A  50                 	db	80	;'P'
  2695  00FE0B  25                 	db	37
  2696  00FE0C  33                 	db	51	;'3'
  2697  00FE0D  2E                 	db	46
  2698  00FE0E  32                 	db	50	;'2'
  2699  00FE0F  66                 	db	102	;'f'
  2700  00FE10  20                 	db	32
  2701  00FE11  20                 	db	32
  2702  00FE12  20                 	db	32
  2703  00FE13  00                 	db	0
  2704  00FE14                     STR_58:
  2705                           
  2706                           ; BSR set to: 57
  2707  00FE14  20                 	db	32
  2708  00FE15  20                 	db	32
  2709  00FE16  20                 	db	32
  2710  00FE17  20                 	db	32
  2711  00FE18  20                 	db	32
  2712  00FE19  20                 	db	32
  2713  00FE1A  20                 	db	32
  2714  00FE1B  20                 	db	32
  2715  00FE1C  20                 	db	32
  2716  00FE1D  20                 	db	32
  2717  00FE1E  20                 	db	32
  2718  00FE1F  20                 	db	32
  2719  00FE20  20                 	db	32
  2720  00FE21  20                 	db	32
  2721  00FE22  20                 	db	32
  2722  00FE23  20                 	db	32
  2723  00FE24  20                 	db	32
  2724  00FE25  20                 	db	32
  2725  00FE26  00                 	db	0
  2726  00FE27                     STR_48:
  2727                           
  2728                           ; BSR set to: 57
  2729  00FE27  48                 	db	72	;'H'
  2730  00FE28  45                 	db	69	;'E'
  2731  00FE29  4C                 	db	76	;'L'
  2732  00FE2A  50                 	db	80	;'P'
  2733  00FE2B  20                 	db	32
  2734  00FE2C  25                 	db	37
  2735  00FE2D  73                 	db	115	;'s'
  2736  00FE2E  20                 	db	32
  2737  00FE2F  20                 	db	32
  2738  00FE30  20                 	db	32
  2739  00FE31  20                 	db	32
  2740  00FE32  20                 	db	32
  2741  00FE33  20                 	db	32
  2742  00FE34  20                 	db	32
  2743  00FE35  20                 	db	32
  2744  00FE36  20                 	db	32
  2745  00FE37  20                 	db	32
  2746  00FE38  20                 	db	32
  2747  00FE39  00                 	db	0
  2748  00FE3A                     
  2749                           ; BSR set to: 57
  2750  00FE3A  44                 	db	68	;'D'
  2751  00FE3B  49                 	db	73	;'I'
  2752  00FE3C  53                 	db	83	;'S'
  2753  00FE3D  50                 	db	80	;'P'
  2754  00FE3E  4C                 	db	76	;'L'
  2755  00FE3F  41                 	db	65	;'A'
  2756  00FE40  59                 	db	89	;'Y'
  2757  00FE41  20                 	db	32
  2758  00FE42  25                 	db	37
  2759  00FE43  73                 	db	115	;'s'
  2760  00FE44  20                 	db	32
  2761  00FE45  20                 	db	32
  2762  00FE46  20                 	db	32
  2763  00FE47  20                 	db	32
  2764  00FE48  20                 	db	32
  2765  00FE49  20                 	db	32
  2766  00FE4A  20                 	db	32
  2767  00FE4B  20                 	db	32
  2768  00FE4C  00                 	db	0
  2769  00FE4D                     STR_31:
  2770                           
  2771                           ; BSR set to: 57
  2772  00FE4D  42                 	db	66	;'B'
  2773  00FE4E  41                 	db	65	;'A'
  2774  00FE4F  54                 	db	84	;'T'
  2775  00FE50  20                 	db	32
  2776  00FE51  49                 	db	73	;'I'
  2777  00FE52  57                 	db	87	;'W'
  2778  00FE53  48                 	db	72	;'H'
  2779  00FE54  20                 	db	32
  2780  00FE55  25                 	db	37
  2781  00FE56  34                 	db	52	;'4'
  2782  00FE57  2E                 	db	46
  2783  00FE58  31                 	db	49	;'1'
  2784  00FE59  66                 	db	102	;'f'
  2785  00FE5A  20                 	db	32
  2786  00FE5B  20                 	db	32
  2787  00FE5C  20                 	db	32
  2788  00FE5D  20                 	db	32
  2789  00FE5E  20                 	db	32
  2790  00FE5F  00                 	db	0
  2791  00FE60                     STR_32:
  2792                           
  2793                           ; BSR set to: 57
  2794  00FE60  42                 	db	66	;'B'
  2795  00FE61  41                 	db	65	;'A'
  2796  00FE62  54                 	db	84	;'T'
  2797  00FE63  20                 	db	32
  2798  00FE64  4F                 	db	79	;'O'
  2799  00FE65  57                 	db	87	;'W'
  2800  00FE66  48                 	db	72	;'H'
  2801  00FE67  20                 	db	32
  2802  00FE68  25                 	db	37
  2803  00FE69  34                 	db	52	;'4'
  2804  00FE6A  2E                 	db	46
  2805  00FE6B  31                 	db	49	;'1'
  2806  00FE6C  66                 	db	102	;'f'
  2807  00FE6D  20                 	db	32
  2808  00FE6E  20                 	db	32
  2809  00FE6F  20                 	db	32
  2810  00FE70  20                 	db	32
  2811  00FE71  20                 	db	32
  2812  00FE72  00                 	db	0
  2813  00FE73                     STR_33:
  2814                           
  2815                           ; BSR set to: 57
  2816  00FE73  42                 	db	66	;'B'
  2817  00FE74  41                 	db	65	;'A'
  2818  00FE75  54                 	db	84	;'T'
  2819  00FE76  20                 	db	32
  2820  00FE77  54                 	db	84	;'T'
  2821  00FE78  57                 	db	87	;'W'
  2822  00FE79  48                 	db	72	;'H'
  2823  00FE7A  20                 	db	32
  2824  00FE7B  25                 	db	37
  2825  00FE7C  34                 	db	52	;'4'
  2826  00FE7D  2E                 	db	46
  2827  00FE7E  31                 	db	49	;'1'
  2828  00FE7F  66                 	db	102	;'f'
  2829  00FE80  20                 	db	32
  2830  00FE81  20                 	db	32
  2831  00FE82  20                 	db	32
  2832  00FE83  20                 	db	32
  2833  00FE84  20                 	db	32
  2834  00FE85  00                 	db	0
  2835  00FE86                     STR_27:
  2836                           
  2837                           ; BSR set to: 57
  2838  00FE86  49                 	db	73	;'I'
  2839  00FE87  4E                 	db	78	;'N'
  2840  00FE88  56                 	db	86	;'V'
  2841  00FE89  20                 	db	32
  2842  00FE8A  20                 	db	32
  2843  00FE8B  57                 	db	87	;'W'
  2844  00FE8C  48                 	db	72	;'H'
  2845  00FE8D  20                 	db	32
  2846  00FE8E  25                 	db	37
  2847  00FE8F  33                 	db	51	;'3'
  2848  00FE90  2E                 	db	46
  2849  00FE91  32                 	db	50	;'2'
  2850  00FE92  66                 	db	102	;'f'
  2851  00FE93  20                 	db	32
  2852  00FE94  20                 	db	32
  2853  00FE95  20                 	db	32
  2854  00FE96  20                 	db	32
  2855  00FE97  20                 	db	32
  2856  00FE98  00                 	db	0
  2857  00FE99                     STR_26:
  2858                           
  2859                           ; BSR set to: 57
  2860  00FE99  4C                 	db	76	;'L'
  2861  00FE9A  4F                 	db	79	;'O'
  2862  00FE9B  41                 	db	65	;'A'
  2863  00FE9C  44                 	db	68	;'D'
  2864  00FE9D  20                 	db	32
  2865  00FE9E  57                 	db	87	;'W'
  2866  00FE9F  48                 	db	72	;'H'
  2867  00FEA0  20                 	db	32
  2868  00FEA1  25                 	db	37
  2869  00FEA2  33                 	db	51	;'3'
  2870  00FEA3  2E                 	db	46
  2871  00FEA4  32                 	db	50	;'2'
  2872  00FEA5  66                 	db	102	;'f'
  2873  00FEA6  20                 	db	32
  2874  00FEA7  20                 	db	32
  2875  00FEA8  20                 	db	32
  2876  00FEA9  20                 	db	32
  2877  00FEAA  20                 	db	32
  2878  00FEAB  00                 	db	0
  2879  00FEAC                     STR_24:
  2880                           
  2881                           ; BSR set to: 57
  2882  00FEAC  49                 	db	73	;'I'
  2883  00FEAD  4E                 	db	78	;'N'
  2884  00FEAE  56                 	db	86	;'V'
  2885  00FEAF  20                 	db	32
  2886  00FEB0  20                 	db	32
  2887  00FEB1  50                 	db	80	;'P'
  2888  00FEB2  57                 	db	87	;'W'
  2889  00FEB3  52                 	db	82	;'R'
  2890  00FEB4  20                 	db	32
  2891  00FEB5  25                 	db	37
  2892  00FEB6  33                 	db	51	;'3'
  2893  00FEB7  2E                 	db	46
  2894  00FEB8  32                 	db	50	;'2'
  2895  00FEB9  66                 	db	102	;'f'
  2896  00FEBA  20                 	db	32
  2897  00FEBB  20                 	db	32
  2898  00FEBC  20                 	db	32
  2899  00FEBD  20                 	db	32
  2900  00FEBE  00                 	db	0
  2901  00FEBF                     STR_23:
  2902                           
  2903                           ; BSR set to: 57
  2904  00FEBF  4C                 	db	76	;'L'
  2905  00FEC0  4F                 	db	79	;'O'
  2906  00FEC1  41                 	db	65	;'A'
  2907  00FEC2  44                 	db	68	;'D'
  2908  00FEC3  20                 	db	32
  2909  00FEC4  50                 	db	80	;'P'
  2910  00FEC5  57                 	db	87	;'W'
  2911  00FEC6  52                 	db	82	;'R'
  2912  00FEC7  20                 	db	32
  2913  00FEC8  25                 	db	37
  2914  00FEC9  33                 	db	51	;'3'
  2915  00FECA  2E                 	db	46
  2916  00FECB  32                 	db	50	;'2'
  2917  00FECC  66                 	db	102	;'f'
  2918  00FECD  20                 	db	32
  2919  00FECE  20                 	db	32
  2920  00FECF  20                 	db	32
  2921  00FED0  20                 	db	32
  2922  00FED1  00                 	db	0
  2923  00FED2                     STR_29:
  2924                           
  2925                           ; BSR set to: 57
  2926  00FED2  42                 	db	66	;'B'
  2927  00FED3  56                 	db	86	;'V'
  2928  00FED4  20                 	db	32
  2929  00FED5  25                 	db	37
  2930  00FED6  32                 	db	50	;'2'
  2931  00FED7  2E                 	db	46
  2932  00FED8  32                 	db	50	;'2'
  2933  00FED9  66                 	db	102	;'f'
  2934  00FEDA  20                 	db	32
  2935  00FEDB  42                 	db	66	;'B'
  2936  00FEDC  41                 	db	65	;'A'
  2937  00FEDD  20                 	db	32
  2938  00FEDE  25                 	db	37
  2939  00FEDF  32                 	db	50	;'2'
  2940  00FEE0  2E                 	db	46
  2941  00FEE1  32                 	db	50	;'2'
  2942  00FEE2  66                 	db	102	;'f'
  2943  00FEE3  20                 	db	32
  2944  00FEE4  00                 	db	0
  2945  00FEE5                     STR_30:
  2946                           
  2947                           ; BSR set to: 57
  2948  00FEE5  43                 	db	67	;'C'
  2949  00FEE6  56                 	db	86	;'V'
  2950  00FEE7  20                 	db	32
  2951  00FEE8  25                 	db	37
  2952  00FEE9  32                 	db	50	;'2'
  2953  00FEEA  2E                 	db	46
  2954  00FEEB  32                 	db	50	;'2'
  2955  00FEEC  66                 	db	102	;'f'
  2956  00FEED  20                 	db	32
  2957  00FEEE  4C                 	db	76	;'L'
  2958  00FEEF  41                 	db	65	;'A'
  2959  00FEF0  20                 	db	32
  2960  00FEF1  25                 	db	37
  2961  00FEF2  32                 	db	50	;'2'
  2962  00FEF3  2E                 	db	46
  2963  00FEF4  32                 	db	50	;'2'
  2964  00FEF5  66                 	db	102	;'f'
  2965  00FEF6  20                 	db	32
  2966  00FEF7  00                 	db	0
  2967  00FEF8                     STR_28:
  2968                           
  2969                           ; BSR set to: 57
  2970  00FEF8  50                 	db	80	;'P'
  2971  00FEF9  56                 	db	86	;'V'
  2972  00FEFA  20                 	db	32
  2973  00FEFB  25                 	db	37
  2974  00FEFC  32                 	db	50	;'2'
  2975  00FEFD  2E                 	db	46
  2976  00FEFE  32                 	db	50	;'2'
  2977  00FEFF  66                 	db	102	;'f'
  2978  00FF00  20                 	db	32
  2979  00FF01  50                 	db	80	;'P'
  2980  00FF02  41                 	db	65	;'A'
  2981  00FF03  20                 	db	32
  2982  00FF04  25                 	db	37
  2983  00FF05  32                 	db	50	;'2'
  2984  00FF06  2E                 	db	46
  2985  00FF07  32                 	db	50	;'2'
  2986  00FF08  66                 	db	102	;'f'
  2987  00FF09  20                 	db	32
  2988  00FF0A  00                 	db	0
  2989  00FF0B                     STR_8:
  2990                           
  2991                           ; BSR set to: 57
  2992  00FF0B  42                 	db	66	;'B'
  2993  00FF0C  56                 	db	86	;'V'
  2994  00FF0D  20                 	db	32
  2995  00FF0E  25                 	db	37
  2996  00FF0F  32                 	db	50	;'2'
  2997  00FF10  2E                 	db	46
  2998  00FF11  34                 	db	52	;'4'
  2999  00FF12  66                 	db	102	;'f'
  3000  00FF13  20                 	db	32
  3001  00FF14  20                 	db	32
  3002  00FF15  20                 	db	32
  3003  00FF16  20                 	db	32
  3004  00FF17  20                 	db	32
  3005  00FF18  20                 	db	32
  3006  00FF19  20                 	db	32
  3007  00FF1A  20                 	db	32
  3008  00FF1B  20                 	db	32
  3009  00FF1C  00                 	db	0
  3010  00FF1D                     STR_4:
  3011                           
  3012                           ; BSR set to: 57
  3013  00FF1D  20                 	db	32
  3014  00FF1E  4E                 	db	78	;'N'
  3015  00FF1F  53                 	db	83	;'S'
  3016  00FF20  41                 	db	65	;'A'
  3017  00FF21  53                 	db	83	;'S'
  3018  00FF22  50                 	db	80	;'P'
  3019  00FF23  4F                 	db	79	;'O'
  3020  00FF24  4F                 	db	79	;'O'
  3021  00FF25  4B                 	db	75	;'K'
  3022  00FF26  20                 	db	32
  3023  00FF27  20                 	db	32
  3024  00FF28  20                 	db	32
  3025  00FF29  20                 	db	32
  3026  00FF2A  20                 	db	32
  3027  00FF2B  20                 	db	32
  3028  00FF2C  20                 	db	32
  3029  00FF2D  00                 	db	0
  3030  00FF2E                     STR_12:
  3031                           
  3032                           ; BSR set to: 57
  3033  00FF2E  42                 	db	66	;'B'
  3034  00FF2F  61                 	db	97	;'a'
  3035  00FF30  74                 	db	116	;'t'
  3036  00FF31  74                 	db	116	;'t'
  3037  00FF32  65                 	db	101	;'e'
  3038  00FF33  72                 	db	114	;'r'
  3039  00FF34  79                 	db	121	;'y'
  3040  00FF35  20                 	db	32
  3041  00FF36  45                 	db	69	;'E'
  3042  00FF37  53                 	db	83	;'S'
  3043  00FF38  52                 	db	82	;'R'
  3044  00FF39  20                 	db	32
  3045  00FF3A  20                 	db	32
  3046  00FF3B  20                 	db	32
  3047  00FF3C  20                 	db	32
  3048  00FF3D  20                 	db	32
  3049  00FF3E  00                 	db	0
  3050  00FF3F                     STR_13:
  3051                           
  3052                           ; BSR set to: 57
  3053  00FF3F  43                 	db	67	;'C'
  3054  00FF40  61                 	db	97	;'a'
  3055  00FF41  6C                 	db	108	;'l'
  3056  00FF42  63                 	db	99	;'c'
  3057  00FF43  75                 	db	117	;'u'
  3058  00FF44  6C                 	db	108	;'l'
  3059  00FF45  61                 	db	97	;'a'
  3060  00FF46  74                 	db	116	;'t'
  3061  00FF47  69                 	db	105	;'i'
  3062  00FF48  6F                 	db	111	;'o'
  3063  00FF49  6E                 	db	110	;'n'
  3064  00FF4A  20                 	db	32
  3065  00FF4B  20                 	db	32
  3066  00FF4C  20                 	db	32
  3067  00FF4D  20                 	db	32
  3068  00FF4E  20                 	db	32
  3069  00FF4F  00                 	db	0
  3070  00FF50                     STR_1:
  3071                           
  3072                           ; BSR set to: 57
  3073  00FF50  20                 	db	32
  3074  00FF51  4D                 	db	77	;'M'
  3075  00FF52  42                 	db	66	;'B'
  3076  00FF53  4D                 	db	77	;'M'
  3077  00FF54  43                 	db	67	;'C'
  3078  00FF55  20                 	db	32
  3079  00FF56  53                 	db	83	;'S'
  3080  00FF57  4F                 	db	79	;'O'
  3081  00FF58  4C                 	db	76	;'L'
  3082  00FF59  41                 	db	65	;'A'
  3083  00FF5A  52                 	db	82	;'R'
  3084  00FF5B  4D                 	db	77	;'M'
  3085  00FF5C  4F                 	db	79	;'O'
  3086  00FF5D  4E                 	db	78	;'N'
  3087  00FF5E  20                 	db	32
  3088  00FF5F  20                 	db	32
  3089  00FF60  00                 	db	0
  3090  00FF61                     STR_21:
  3091                           
  3092                           ; BSR set to: 57
  3093  00FF61  25                 	db	37
  3094  00FF62  64                 	db	100	;'d'
  3095  00FF63  20                 	db	32
  3096  00FF64  25                 	db	37
  3097  00FF65  32                 	db	50	;'2'
  3098  00FF66  2E                 	db	46
  3099  00FF67  34                 	db	52	;'4'
  3100  00FF68  66                 	db	102	;'f'
  3101  00FF69  2C                 	db	44
  3102  00FF6A  20                 	db	32
  3103  00FF6B  25                 	db	37
  3104  00FF6C  64                 	db	100	;'d'
  3105  00FF6D  20                 	db	32
  3106  00FF6E  20                 	db	32
  3107  00FF6F  20                 	db	32
  3108  00FF70  23                 	db	35
  3109  00FF71  00                 	db	0
  3110  00FF72                     STR_14:
  3111                           
  3112                           ; BSR set to: 57
  3113  00FF72  43                 	db	67	;'C'
  3114  00FF73  68                 	db	104	;'h'
  3115  00FF74  65                 	db	101	;'e'
  3116  00FF75  63                 	db	99	;'c'
  3117  00FF76  6B                 	db	107	;'k'
  3118  00FF77  20                 	db	32
  3119  00FF78  33                 	db	51	;'3'
  3120  00FF79  30                 	db	48	;'0'
  3121  00FF7A  20                 	db	32
  3122  00FF7B  73                 	db	115	;'s'
  3123  00FF7C  65                 	db	101	;'e'
  3124  00FF7D  63                 	db	99	;'c'
  3125  00FF7E  6F                 	db	111	;'o'
  3126  00FF7F  6E                 	db	110	;'n'
  3127  00FF80  64                 	db	100	;'d'
  3128  00FF81  73                 	db	115	;'s'
  3129  00FF82  00                 	db	0
  3130  00FF83                     STR_19:
  3131                           
  3132                           ; BSR set to: 57
  3133  00FF83  25                 	db	37
  3134  00FF84  64                 	db	100	;'d'
  3135  00FF85  20                 	db	32
  3136  00FF86  25                 	db	37
  3137  00FF87  32                 	db	50	;'2'
  3138  00FF88  2E                 	db	46
  3139  00FF89  34                 	db	52	;'4'
  3140  00FF8A  66                 	db	102	;'f'
  3141  00FF8B  20                 	db	32
  3142  00FF8C  20                 	db	32
  3143  00FF8D  20                 	db	32
  3144  00FF8E  25                 	db	37
  3145  00FF8F  64                 	db	100	;'d'
  3146  00FF90  20                 	db	32
  3147  00FF91  20                 	db	32
  3148  00FF92  00                 	db	0
  3149  00FF93                     STR_52:
  3150                           
  3151                           ; BSR set to: 57
  3152  00FF93  76                 	db	118	;'v'
  3153  00FF94  74                 	db	116	;'t'
  3154  00FF95  65                 	db	101	;'e'
  3155  00FF96  72                 	db	114	;'r'
  3156  00FF97  6D                 	db	109	;'m'
  3157  00FF98  20                 	db	32
  3158  00FF99  25                 	db	37
  3159  00FF9A  78                 	db	120	;'x'
  3160  00FF9B  3A                 	db	58	;':'
  3161  00FF9C  25                 	db	37
  3162  00FF9D  78                 	db	120	;'x'
  3163  00FF9E  20                 	db	32
  3164  00FF9F  20                 	db	32
  3165  00FFA0  20                 	db	32
  3166  00FFA1  00                 	db	0
  3167  00FFA2                     STR_2:
  3168                           
  3169                           ; BSR set to: 57
  3170  00FFA2  20                 	db	32
  3171  00FFA3  56                 	db	86	;'V'
  3172  00FFA4  65                 	db	101	;'e'
  3173  00FFA5  72                 	db	114	;'r'
  3174  00FFA6  73                 	db	115	;'s'
  3175  00FFA7  69                 	db	105	;'i'
  3176  00FFA8  6F                 	db	111	;'o'
  3177  00FFA9  6E                 	db	110	;'n'
  3178  00FFAA  20                 	db	32
  3179  00FFAB  25                 	db	37
  3180  00FFAC  73                 	db	115	;'s'
  3181  00FFAD  20                 	db	32
  3182  00FFAE  20                 	db	32
  3183  00FFAF  20                 	db	32
  3184  00FFB0  00                 	db	0
  3185  00FFB1                     STR_46:
  3186                           
  3187                           ; BSR set to: 57
  3188  00FFB1  44                 	db	68	;'D'
  3189  00FFB2  65                 	db	101	;'e'
  3190  00FFB3  63                 	db	99	;'c'
  3191  00FFB4  20                 	db	32
  3192  00FFB5  32                 	db	50	;'2'
  3193  00FFB6  31                 	db	49	;'1'
  3194  00FFB7  20                 	db	32
  3195  00FFB8  32                 	db	50	;'2'
  3196  00FFB9  30                 	db	48	;'0'
  3197  00FFBA  31                 	db	49	;'1'
  3198  00FFBB  39                 	db	57	;'9'
  3199  00FFBC  00                 	db	0
  3200  00FFBD                     STR_50:
  3201                           
  3202                           ; BSR set to: 57
  3203  00FFBD  25                 	db	37
  3204  00FFBE  73                 	db	115	;'s'
  3205  00FFBF  20                 	db	32
  3206  00FFC0  20                 	db	32
  3207  00FFC1  20                 	db	32
  3208  00FFC2  20                 	db	32
  3209  00FFC3  20                 	db	32
  3210  00FFC4  20                 	db	32
  3211  00FFC5  20                 	db	32
  3212  00FFC6  00                 	db	0
  3213  00FFC7                     STR_47:
  3214                           
  3215                           ; BSR set to: 57
  3216  00FFC7  31                 	db	49	;'1'
  3217  00FFC8  30                 	db	48	;'0'
  3218  00FFC9  3A                 	db	58	;':'
  3219  00FFCA  33                 	db	51	;'3'
  3220  00FFCB  32                 	db	50	;'2'
  3221  00FFCC  3A                 	db	58	;':'
  3222  00FFCD  30                 	db	48	;'0'
  3223  00FFCE  36                 	db	54	;'6'
  3224  00FFCF  00                 	db	0
  3225  00FFD0                     STR_3:
  3226                           
  3227                           ; BSR set to: 57
  3228  00FFD0  31                 	db	49	;'1'
  3229  00FFD1  2E                 	db	46
  3230  00FFD2  30                 	db	48	;'0'
  3231  00FFD3  30                 	db	48	;'0'
  3232  00FFD4  37                 	db	55	;'7'
  3233  00FFD5  30                 	db	48	;'0'
  3234  00FFD6  00                 	db	0
  3235  00FFD7                     STR_66:
  3236                           
  3237                           ; BSR set to: 57
  3238  00FFD7  49                 	db	73	;'I'
  3239  00FFD8  4E                 	db	78	;'N'
  3240  00FFD9  46                 	db	70	;'F'
  3241  00FFDA  00                 	db	0
  3242  00FFDB                     STR_70:
  3243                           
  3244                           ; BSR set to: 57
  3245  00FFDB  4E                 	db	78	;'N'
  3246  00FFDC  41                 	db	65	;'A'
  3247  00FFDD  4E                 	db	78	;'N'
  3248  00FFDE  00                 	db	0
  3249  00FFDF                     STR_67:
  3250                           
  3251                           ; BSR set to: 57
  3252  00FFDF  69                 	db	105	;'i'
  3253  00FFE0  6E                 	db	110	;'n'
  3254  00FFE1  66                 	db	102	;'f'
  3255  00FFE2  00                 	db	0
  3256  00FFE3                     STR_71:
  3257                           
  3258                           ; BSR set to: 57
  3259  00FFE3  6E                 	db	110	;'n'
  3260  00FFE4  61                 	db	97	;'a'
  3261  00FFE5  6E                 	db	110	;'n'
  3262  00FFE6  00                 	db	0
  3263  00FFE7                     STR_97:
  3264                           
  3265                           ; BSR set to: 57
  3266  00FFE7  6C                 	db	108	;'l'
  3267  00FFE8  58                 	db	88	;'X'
  3268  00FFE9  00                 	db	0
  3269  00FFEA                     STR_74:
  3270                           
  3271                           ; BSR set to: 57
  3272  00FFEA  6C                 	db	108	;'l'
  3273  00FFEB  64                 	db	100	;'d'
  3274  00FFEC  00                 	db	0
  3275  00FFED                     STR_83:
  3276                           
  3277                           ; BSR set to: 57
  3278  00FFED  6C                 	db	108	;'l'
  3279  00FFEE  66                 	db	102	;'f'
  3280  00FFEF  00                 	db	0
  3281  00FFF0                     STR_78:
  3282                           
  3283                           ; BSR set to: 57
  3284  00FFF0  6C                 	db	108	;'l'
  3285  00FFF1  69                 	db	105	;'i'
  3286  00FFF2  00                 	db	0
  3287  00FFF3                     STR_88:
  3288                           
  3289                           ; BSR set to: 57
  3290  00FFF3  6C                 	db	108	;'l'
  3291  00FFF4  75                 	db	117	;'u'
  3292  00FFF5  00                 	db	0
  3293  00FFF6                     STR_93:
  3294                           
  3295                           ; BSR set to: 57
  3296  00FFF6  6C                 	db	108	;'l'
  3297  00FFF7  78                 	db	120	;'x'
  3298  00FFF8  00                 	db	0
  3299  00FFF9                     STR_44:
  3300                           
  3301                           ; BSR set to: 57
  3302  00FFF9  25                 	db	37
  3303  00FFFA  63                 	db	99	;'c'
  3304  00FFFB  00                 	db	0
  3305  00FFFC                     STR_43:
  3306                           
  3307                           ; BSR set to: 57
  3308  00FFFC  25                 	db	37
  3309  00FFFD  73                 	db	115	;'s'
  3310  00FFFE  00                 	db	0
  3311  0000                     
  3312                           ; #config settings
  3313  00FFFF  00                 	db	0	; dummy byte at the end
  3314  0000                     
  3315                           	psect	cinit
  3316  019480                     __pcinit:
  3317                           	opt callstack 0
  3318  019480                     start_initialization:
  3319                           	opt callstack 0
  3320  019480                     __initialization:
  3321                           	opt callstack 0
  3322                           
  3323                           ; Initialize objects allocated to BIGRAM (512 bytes)
  3324                           ; load TBLPTR registers with __pidataBIGRAM
  3325  019480  0E32               	movlw	low __pidataBIGRAM
  3326  019482  6EF6               	movwf	tblptrl,c
  3327  019484  0E7C               	movlw	high __pidataBIGRAM
  3328  019486  6EF7               	movwf	tblptrh,c
  3329  019488  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  3330  01948A  6EF8               	movwf	tblptru,c
  3331  01948C  EE01  F1FF         	lfsr	0,__pdataBIGRAM
  3332  019490  EE20 F200          	lfsr	2,512
  3333  019494                     copy_data0:
  3334  019494  0009               	tblrd		*+
  3335  019496  006F FFD7 FFEE     	movff	tablat,postinc0
  3336  01949C  50DD               	movf	postdec2,w,c
  3337  01949E  50D9               	movf	fsr2l,w,c
  3338  0194A0  E1F9               	bnz	copy_data0
  3339  0194A2  50DA               	movf	fsr2h,w,c
  3340  0194A4  E1F7               	bnz	copy_data0
  3341                           
  3342                           ; Initialize objects allocated to BANK2 (198 bytes)
  3343                           ; load TBLPTR registers with __pidataBANK2
  3344  0194A6  0E0E               	movlw	low __pidataBANK2
  3345  0194A8  6EF6               	movwf	tblptrl,c
  3346  0194AA  0E9C               	movlw	high __pidataBANK2
  3347  0194AC  6EF7               	movwf	tblptrh,c
  3348  0194AE  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  3349  0194B0  6EF8               	movwf	tblptru,c
  3350  0194B2  EE00  F200         	lfsr	0,__pdataBANK2
  3351  0194B6  EE20 F0C6          	lfsr	2,198
  3352  0194BA                     copy_data1:
  3353  0194BA  0009               	tblrd		*+
  3354  0194BC  006F FFD7 FFEE     	movff	tablat,postinc0
  3355  0194C2  50DD               	movf	postdec2,w,c
  3356  0194C4  50D9               	movf	fsr2l,w,c
  3357  0194C6  E1F9               	bnz	copy_data1
  3358                           
  3359                           ; Initialize objects allocated to BANK1 (256 bytes)
  3360                           ; load TBLPTR registers with __pidataBANK1
  3361  0194C8  0E8A               	movlw	low __pidataBANK1
  3362  0194CA  6EF6               	movwf	tblptrl,c
  3363  0194CC  0E97               	movlw	high __pidataBANK1
  3364  0194CE  6EF7               	movwf	tblptrh,c
  3365  0194D0  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  3366  0194D2  6EF8               	movwf	tblptru,c
  3367  0194D4  EE00  F100         	lfsr	0,__pdataBANK1
  3368  0194D8  EE20 F100          	lfsr	2,256
  3369  0194DC                     copy_data2:
  3370  0194DC  0009               	tblrd		*+
  3371  0194DE  006F FFD7 FFEE     	movff	tablat,postinc0
  3372  0194E4  50DD               	movf	postdec2,w,c
  3373  0194E6  50D9               	movf	fsr2l,w,c
  3374  0194E8  E1F9               	bnz	copy_data2
  3375  0194EA  50DA               	movf	fsr2h,w,c
  3376  0194EC  E1F7               	bnz	copy_data2
  3377                           
  3378                           ; Initialize objects allocated to BANK0 (47 bytes)
  3379                           ; load TBLPTR registers with __pidataBANK0
  3380  0194EE  0EA0               	movlw	low __pidataBANK0
  3381  0194F0  6EF6               	movwf	tblptrl,c
  3382  0194F2  0EB1               	movlw	high __pidataBANK0
  3383  0194F4  6EF7               	movwf	tblptrh,c
  3384  0194F6  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3385  0194F8  6EF8               	movwf	tblptru,c
  3386  0194FA  EE00  F0B1         	lfsr	0,__pdataBANK0
  3387  0194FE  EE20 F02F          	lfsr	2,47
  3388  019502                     copy_data3:
  3389  019502  0009               	tblrd		*+
  3390  019504  006F FFD7 FFEE     	movff	tablat,postinc0
  3391  01950A  50DD               	movf	postdec2,w,c
  3392  01950C  50D9               	movf	fsr2l,w,c
  3393  01950E  E1F9               	bnz	copy_data3
  3394                           
  3395                           ; Clear objects allocated to BIGRAM (482 bytes)
  3396  019510  EE01  F3FF         	lfsr	0,__pbssBIGRAM
  3397  019514  EE20 F1E2          	lfsr	2,482
  3398  019518                     clear_0:
  3399  019518  6AEE               	clrf	postinc0,c
  3400  01951A  50DD               	movf	postdec2,w,c
  3401  01951C  50D9               	movf	fsr2l,w,c
  3402  01951E  E1FC               	bnz	clear_0
  3403  019520  50DA               	movf	fsr2h,w,c
  3404  019522  E1FA               	bnz	clear_0
  3405                           
  3406                           ; Clear objects allocated to BANK5 (255 bytes)
  3407  019524  EE01  F100         	lfsr	0,__pbssBANK5
  3408  019528  EE20 F0FF          	lfsr	2,255
  3409  01952C                     clear_1:
  3410  01952C  6AEE               	clrf	postinc0,c
  3411  01952E  50DD               	movf	postdec2,w,c
  3412  019530  50D9               	movf	fsr2l,w,c
  3413  019532  E1FC               	bnz	clear_1
  3414  019534  50DA               	movf	fsr2h,w,c
  3415  019536  E1FA               	bnz	clear_1
  3416                           
  3417                           ; Clear objects allocated to BANK4 (134 bytes)
  3418  019538  EE01  F000         	lfsr	0,__pbssBANK4
  3419  01953C  0E86               	movlw	134
  3420  01953E                     clear_2:
  3421  01953E  6AEE               	clrf	postinc0,c
  3422  019540  06E8               	decf	wreg,f,c
  3423  019542  E1FD               	bnz	clear_2
  3424                           
  3425                           ; Clear objects allocated to BANK3 (254 bytes)
  3426  019544  EE00  F300         	lfsr	0,__pbssBANK3
  3427  019548  0EFE               	movlw	254
  3428  01954A                     clear_3:
  3429  01954A  6AEE               	clrf	postinc0,c
  3430  01954C  06E8               	decf	wreg,f,c
  3431  01954E  E1FD               	bnz	clear_3
  3432                           
  3433                           ; Clear objects allocated to BANK2 (57 bytes)
  3434  019550  EE00  F2C6         	lfsr	0,__pbssBANK2
  3435  019554  0E39               	movlw	57
  3436  019556                     clear_4:
  3437  019556  6AEE               	clrf	postinc0,c
  3438  019558  06E8               	decf	wreg,f,c
  3439  01955A  E1FD               	bnz	clear_4
  3440                           
  3441                           ; Clear objects allocated to BANK0 (81 bytes)
  3442  01955C  EE00  F060         	lfsr	0,__pbssBANK0
  3443  019560  0E51               	movlw	81
  3444  019562                     clear_5:
  3445  019562  6AEE               	clrf	postinc0,c
  3446  019564  06E8               	decf	wreg,f,c
  3447  019566  E1FD               	bnz	clear_5
  3448                           
  3449                           ; Clear objects allocated to COMRAM (37 bytes)
  3450  019568  EE00  F001         	lfsr	0,__pbssCOMRAM
  3451  01956C  0E25               	movlw	37
  3452  01956E                     clear_6:
  3453  01956E  6AEE               	clrf	postinc0,c
  3454  019570  06E8               	decf	wreg,f,c
  3455  019572  E1FD               	bnz	clear_6
  3456                           
  3457                           ;
  3458                           ; Setup IVTBASE
  3459                           ;
  3460  019574  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  3461  019576  6ED5               	movwf	213,c
  3462  019578  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  3463  01957A  6ED6               	movwf	214,c
  3464  01957C  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  3465  01957E  6ED7               	movwf	215,c
  3466  019580                     end_of_initialization:
  3467                           	opt callstack 0
  3468  019580                     __end_of__initialization:
  3469                           	opt callstack 0
  3470  019580  0100               	movlb	0
  3471  019582  EF22  F089         	goto	_main	;jump to C main() function
  3472                           
  3473                           	psect	bssCOMRAM
  3474  000001                     __pbssCOMRAM:
  3475                           	opt callstack 0
  3476  000001                     _UART2_RxInterruptHandler:
  3477                           	opt callstack 0
  3478  000001                     	ds	3
  3479  000004                     _INT1_InterruptHandler:
  3480                           	opt callstack 0
  3481  000004                     	ds	3
  3482  000007                     _INT0_InterruptHandler:
  3483                           	opt callstack 0
  3484  000007                     	ds	3
  3485  00000A                     _width:
  3486                           	opt callstack 0
  3487  00000A                     	ds	2
  3488  00000C                     _prec:
  3489                           	opt callstack 0
  3490  00000C                     	ds	2
  3491  00000E                     _flags:
  3492                           	opt callstack 0
  3493  00000E                     	ds	2
  3494  000010                     TMR3_ISR@CountCallBack:
  3495                           	opt callstack 0
  3496  000010                     	ds	2
  3497  000012                     _timer3ReloadVal:
  3498                           	opt callstack 0
  3499  000012                     	ds	2
  3500  000014                     TMR5_ISR@CountCallBack:
  3501                           	opt callstack 0
  3502  000014                     	ds	2
  3503  000016                     _timer5ReloadVal:
  3504                           	opt callstack 0
  3505  000016                     	ds	2
  3506  000018                     esr_check@esr_state:
  3507                           	opt callstack 0
  3508  000018                     	ds	1
  3509  000019                     Volts_to_SOC@slot:
  3510                           	opt callstack 0
  3511  000019                     	ds	1
  3512  00001A                     calc_bsoc@log_update_wait:
  3513                           	opt callstack 0
  3514  00001A                     	ds	1
  3515  00001B                     check_day_time@day_delay:
  3516                           	opt callstack 0
  3517  00001B                     	ds	1
  3518  00001C                     _mode_sw:
  3519                           	opt callstack 0
  3520  00001C                     	ds	1
  3521  00001D                     _uart2RxCount:
  3522                           	opt callstack 0
  3523  00001D                     	ds	1
  3524  00001E                     _uart2RxTail:
  3525                           	opt callstack 0
  3526  00001E                     	ds	1
  3527  00001F                     _uart2RxHead:
  3528                           	opt callstack 0
  3529  00001F                     	ds	1
  3530  000020                     _uart2TxBufferRemaining:
  3531                           	opt callstack 0
  3532  000020                     	ds	1
  3533  000021                     _uart2TxTail:
  3534                           	opt callstack 0
  3535  000021                     	ds	1
  3536  000022                     _uart2TxHead:
  3537                           	opt callstack 0
  3538  000022                     	ds	1
  3539  000023                     _uart1RxCount:
  3540                           	opt callstack 0
  3541  000023                     	ds	1
  3542  000024                     _uart1RxTail:
  3543                           	opt callstack 0
  3544  000024                     	ds	1
  3545  000025                     _uart1RxHead:
  3546                           	opt callstack 0
  3547  000025                     	ds	1
  3548                           
  3549                           	psect	bssBANK0
  3550  000060                     __pbssBANK0:
  3551                           	opt callstack 0
  3552  000060                     _spi_link:
  3553                           	opt callstack 0
  3554  000060                     	ds	12
  3555  00006C                     spinners@s:
  3556                           	opt callstack 0
  3557  00006C                     	ds	6
  3558  000072                     floorf@F524:
  3559                           	opt callstack 0
  3560  000072                     	ds	4
  3561  000076                     fabsf@F463:
  3562                           	opt callstack 0
  3563  000076                     	ds	4
  3564  00007A                     ___fpclassifyf@F463:
  3565                           	opt callstack 0
  3566  00007A                     	ds	4
  3567  00007E                     calc_ror_data@bcror:
  3568                           	opt callstack 0
  3569  00007E                     	ds	4
  3570  000082                     calc_ror_data@bvror:
  3571                           	opt callstack 0
  3572  000082                     	ds	4
  3573  000086                     calc_model_data@bcror:
  3574                           	opt callstack 0
  3575  000086                     	ds	4
  3576  00008A                     calc_model_data@bvror:
  3577                           	opt callstack 0
  3578  00008A                     	ds	4
  3579  00008E                     _utctime:
  3580                           	opt callstack 0
  3581  00008E                     	ds	4
  3582  000092                     wdtdelay@dcount:
  3583                           	opt callstack 0
  3584  000092                     	ds	4
  3585  000096                     _P:
  3586                           	opt callstack 0
  3587  000096                     	ds	4
  3588  00009A                     _TMR3_InterruptHandler:
  3589                           	opt callstack 0
  3590  00009A                     	ds	3
  3591  00009D                     _TMR5_InterruptHandler:
  3592                           	opt callstack 0
  3593  00009D                     	ds	3
  3594  0000A0                     _TMR6_InterruptHandler:
  3595                           	opt callstack 0
  3596  0000A0                     	ds	3
  3597  0000A3                     _ADCC_ADTI_InterruptHandler:
  3598                           	opt callstack 0
  3599  0000A3                     	ds	3
  3600  0000A6                     _ADCC_ADI_InterruptHandler:
  3601                           	opt callstack 0
  3602  0000A6                     	ds	3
  3603  0000A9                     _UART1_RxInterruptHandler:
  3604                           	opt callstack 0
  3605  0000A9                     	ds	3
  3606  0000AC                     _UART2_TxInterruptHandler:
  3607                           	opt callstack 0
  3608  0000AC                     	ds	3
  3609  0000AF                     _nout:
  3610                           	opt callstack 0
  3611  0000AF                     	ds	2
  3612                           
  3613                           	psect	dataBANK0
  3614  0000B1                     __pdataBANK0:
  3615                           	opt callstack 0
  3616  0000B1                     _R:
  3617                           	opt callstack 0
  3618  0000B1                     	ds	40
  3619  0000D9                     _H:
  3620                           	opt callstack 0
  3621  0000D9                     	ds	7
  3622                           
  3623                           	psect	dataBANK1
  3624  000100                     __pdataBANK1:
  3625                           	opt callstack 0
  3626  000100                     _C:
  3627                           	opt callstack 0
  3628  000100                     	ds	256
  3629                           
  3630                           	psect	bssBANK2
  3631  0002C6                     __pbssBANK2:
  3632                           	opt callstack 0
  3633  0002C6                     _S:
  3634                           	opt callstack 0
  3635  0002C6                     	ds	41
  3636  0002EF                     _uart1RxBuffer:
  3637                           	opt callstack 0
  3638  0002EF                     	ds	8
  3639  0002F7                     _seed:
  3640                           	opt callstack 0
  3641  0002F7                     	ds	8
  3642                           
  3643                           	psect	dataBANK2
  3644  000200                     __pdataBANK2:
  3645                           	opt callstack 0
  3646  000200                     stoa@F1166:
  3647                           	opt callstack 0
  3648  000200                     	ds	7
  3649  000207                     _V:
  3650                           	opt callstack 0
  3651  000207                     	ds	191
  3652                           
  3653                           	psect	bssBANK3
  3654  000300                     __pbssBANK3:
  3655                           	opt callstack 0
  3656  000300                     lp_filter@smooth:
  3657                           	opt callstack 0
  3658  000300                     	ds	84
  3659  000354                     _uart2TxBuffer:
  3660                           	opt callstack 0
  3661  000354                     	ds	64
  3662  000394                     _tickCount:
  3663                           	opt callstack 0
  3664  000394                     	ds	26
  3665  0003AE                     _dbuf:
  3666                           	opt callstack 0
  3667  0003AE                     	ds	80
  3668                           
  3669                           	psect	bssBANK4
  3670  000400                     __pbssBANK4:
  3671                           	opt callstack 0
  3672  000400                     _ring_buf2:
  3673                           	opt callstack 0
  3674  000400                     	ds	67
  3675  000443                     _ring_buf1:
  3676                           	opt callstack 0
  3677  000443                     	ds	67
  3678                           
  3679                           	psect	bssBANK5
  3680  000500                     __pbssBANK5:
  3681                           	opt callstack 0
  3682  000500                     _uart2RxBuffer:
  3683                           	opt callstack 0
  3684  000500                     	ds	255
  3685                           
  3686                           	psect	bssBIGRAM
  3687  0007FF                     __pbssBIGRAM:
  3688                           	opt callstack 0
  3689  0007FF                     _D:
  3690                           	opt callstack 0
  3691  0007FF                     	ds	482
  3692                           
  3693                           	psect	dataBIGRAM
  3694  0005FF                     __pdataBIGRAM:
  3695                           	opt callstack 0
  3696  0005FF                     _port_data:
  3697                           	opt callstack 0
  3698  0005FF                     	ds	512
  3699                           
  3700                           	psect	cstackBANK0
  3701  0000E0                     __pcstackBANK0:
  3702                           	opt callstack 0
  3703  0000E0                     ??_TMR3_ISR:
  3704                           
  3705                           ; 1 bytes @ 0x0
  3706  0000E0                     	ds	25
  3707                           
  3708                           	psect	cstackCOMRAM
  3709  000046                     __pcstackCOMRAM:
  3710                           	opt callstack 0
  3711  000046                     ??_ADCC_ThresholdISR:
  3712  000046                     
  3713                           ; 1 bytes @ 0x0
  3714  000046                     	ds	5
  3715  00004B                     ??_TMR6_ISR:
  3716                           
  3717                           ; 1 bytes @ 0x5
  3718  00004B                     	ds	1
  3719  00004C                     ??_INT1_ISR:
  3720  00004C                     
  3721                           ; 1 bytes @ 0x6
  3722  00004C                     	ds	4
  3723  000050                     ??_TMR5_ISR:
  3724                           
  3725                           ; 1 bytes @ 0xA
  3726  000050                     	ds	15
  3727                           
  3728 ;;
  3729 ;;Main: autosize = 17, tempsize = 0, incstack = 0, save=0
  3730 ;;
  3731 ;; *************** function _main *****************
  3732 ;; Defined at:
  3733 ;;		line 184 in file "main.c"
  3734 ;; Parameters:    Size  Location     Type
  3735 ;;		None
  3736 ;; Auto vars:     Size  Location     Type
  3737 ;;  esr_temp        4  [STACK] float 
  3738 ;;  i_esr           2  [STACK] unsigned short 
  3739 ;;  shape           1  [STACK] unsigned char 
  3740 ;;  k               1  [STACK] unsigned char 
  3741 ;;  j               1  [STACK] unsigned char 
  3742 ;;  i               1  [STACK] unsigned char 
  3743 ;;  inp_index       1  [STACK] unsigned char 
  3744 ;;  mode            1  [STACK] enum E17013
  3745 ;;  i_ror           1  [STACK] unsigned char 
  3746 ;; Return value:  Size  Location     Type
  3747 ;;                  1  [STACK] void 
  3748 ;; Registers used:
  3749 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3750 ;; Tracked objects:
  3751 ;;		On entry : 0/0
  3752 ;;		On exit  : 0/0
  3753 ;;		Unchanged: 0/0
  3754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3759 ;;Total ram usage:        0 bytes
  3760 ;; Hardware stack levels required when called:   28
  3761 ;; This function calls:
  3762 ;;		_SYSTEM_Initialize
  3763 ;;		_StartTimer
  3764 ;;		_TimerDone
  3765 ;;		_WaitMs
  3766 ;;		___fladd
  3767 ;;		___flge
  3768 ;;		___fltol
  3769 ;;		_calc_model_data
  3770 ;;		_calc_ror_data
  3771 ;;		_check_adc_scan
  3772 ;;		_check_enter_button
  3773 ;;		_check_help
  3774 ;;		_clear_adc_scan
  3775 ;;		_clear_hid_pflags
  3776 ;;		_conv_raw_result
  3777 ;;		_convert_adc_data
  3778 ;;		_eaDogM_WriteCommand
  3779 ;;		_esr_check
  3780 ;;		_fabsf
  3781 ;;		_get_raw_result
  3782 ;;		_get_switch
  3783 ;;		_get_vterm_ptr
  3784 ;;		_hid_display
  3785 ;;		_init_bsoc
  3786 ;;		_init_display
  3787 ;;		_init_port_dma
  3788 ;;		_lp_filter
  3789 ;;		_mode_lamp_dim
  3790 ;;		_set_display_info
  3791 ;;		_set_load_relay_one
  3792 ;;		_set_load_relay_two
  3793 ;;		_set_vterm
  3794 ;;		_spinners
  3795 ;;		_sprintf
  3796 ;;		_srand
  3797 ;;		_start_adc_scan
  3798 ;;		_start_switch_handler
  3799 ;;		_static_soc
  3800 ;;		_update_lcd
  3801 ;; This function is called by:
  3802 ;;		Startup code after reset
  3803 ;; This function uses a reentrant model
  3804 ;;
  3805                           
  3806                           	psect	text0
  3807  011244                     __ptext0:
  3808                           	opt callstack 0
  3809  011244                     _main:
  3810                           	opt callstack 0
  3811                           
  3812                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  3813  011244  0E11               	movlw	17
  3814  011246  26E1               	addwf	fsr1l,f,c
  3815  011248  0E00               	movlw	0
  3816  01124A  22E2               	addwfc	fsr1h,f,c
  3817                           
  3818                           ;main.c: 186:  UI_STATES mode;;main.c: 187:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  3819                           ;stkvar	_inp_index @ sp[(-17)+14]
  3820                           
  3821                           ;incstack = 0
  3822  01124C  0EFD               	movlw	-3
  3823  01124E  6AE3               	clrf	plusw1,c
  3824                           
  3825                           ;stkvar	_i @ sp[(-17)+13]
  3826  011250  0EFC               	movlw	-4
  3827  011252  6AE3               	clrf	plusw1,c
  3828                           
  3829                           ;stkvar	_j @ sp[(-17)+12]
  3830  011254  0EFB               	movlw	-5
  3831  011256  6AE3               	clrf	plusw1,c
  3832  011258  2AE3               	incf	plusw1,f,c
  3833                           
  3834                           ;stkvar	_k @ sp[(-17)+11]
  3835  01125A  0EFA               	movlw	-6
  3836  01125C  6AE3               	clrf	plusw1,c
  3837  01125E  82E3               	bsf	plusw1,1,c
  3838                           
  3839                           ;main.c: 190:  SYSTEM_Initialize();
  3840  011260  ECD7  F0D5         	call	_SYSTEM_Initialize	;wreg free
  3841                           
  3842                           ; BSR set to: 60
  3843                           ;main.c: 193:  (INTCON0bits.GIEH = 1);
  3844  011264  8ED2               	bsf	210,7,c	;volatile
  3845                           
  3846                           ; BSR set to: 60
  3847                           ;main.c: 196:  (INTCON0bits.GIEL = 1);
  3848  011266  8CD2               	bsf	210,6,c	;volatile
  3849                           
  3850                           ; BSR set to: 60
  3851                           ;main.c: 198:  V.ui_state = UI_STATE_INIT;
  3852  011268  0102               	movlb	2	; () banked
  3853  01126A  6B07               	clrf	_V& (0+255),b	;volatile
  3854                           
  3855                           ; BSR set to: 2
  3856                           ;main.c: 203:  WaitMs(300);
  3857  01126C  0E2C               	movlw	44
  3858  01126E  6EE6               	movwf	postinc1,c
  3859  011270  0E01               	movlw	1
  3860  011272  6EE6               	movwf	postinc1,c
  3861  011274  EC06  F0D8         	call	_WaitMs	;wreg free
  3862                           
  3863                           ;main.c: 204:  if (PORTBbits.RB0) {
  3864  011278  A0CB               	btfss	203,0,c	;volatile
  3865  01127A  D004               	goto	l12851
  3866                           
  3867                           ;main.c: 205:   mode = UI_STATE_HOST;
  3868                           ;stkvar	_mode @ sp[(-17)+15]
  3869  01127C  0EFE               	movlw	-2
  3870  01127E  6AE3               	clrf	plusw1,c
  3871  011280  2AE3               	incf	plusw1,f,c
  3872                           
  3873                           ;main.c: 206:  } else {
  3874  011282  D004               	goto	l12853
  3875  011284                     l12851:
  3876                           
  3877                           ;main.c: 207:   mode = UI_STATE_LOG;
  3878                           ;stkvar	_mode @ sp[(-17)+15]
  3879  011284  0EFE               	movlw	-2
  3880  011286  6AE3               	clrf	plusw1,c
  3881  011288  80E3               	bsf	plusw1,0,c
  3882  01128A  82E3               	bsf	plusw1,1,c	;indir
  3883  01128C                     l12853:
  3884                           
  3885                           ;main.c: 210:  if (mode == UI_STATE_HOST) {
  3886                           ;stkvar	_mode @ sp[(-17)+15]
  3887  01128C  0EFE               	movlw	-2
  3888  01128E  04E3               	decf	plusw1,w,c
  3889  011290  A4D8               	btfss	status,2,c
  3890  011292  D007               	goto	l1324
  3891                           
  3892                           ;main.c: 211:   do { LATDbits.LATD0 = 1; } while(0);
  3893  011294  80BD               	bsf	189,0,c	;volatile
  3894                           
  3895                           ;main.c: 212:   V.mode_pwm = 70;
  3896  011296  0E00               	movlw	0
  3897  011298  0102               	movlb	2	; () banked
  3898  01129A  6F9D               	movwf	(_V+150)& (0+255),b	;volatile
  3899  01129C  0E46               	movlw	70
  3900  01129E  6F9C               	movwf	(_V+149)& (0+255),b	;volatile
  3901                           
  3902                           ;main.c: 213:  } else {
  3903  0112A0  D004               	goto	l12857
  3904  0112A2                     l1324:
  3905  0112A2  90BD               	bcf	189,0,c	;volatile
  3906                           
  3907                           ;main.c: 215:   V.mode_pwm = 0;
  3908  0112A4  0102               	movlb	2	; () banked
  3909  0112A6  6B9C               	clrf	(_V+149)& (0+255),b	;volatile
  3910  0112A8  6B9D               	clrf	(_V+150)& (0+255),b	;volatile
  3911  0112AA                     l12857:
  3912                           
  3913                           ; BSR set to: 2
  3914                           ;main.c: 217:  mode_lamp_dim(V.mode_pwm);
  3915  0112AA  0060  FA73  FFE6   	movff	_V+149,postinc1
  3916  0112B0  0060  FA77  FFE6   	movff	_V+150,postinc1
  3917  0112B6  ECCB  F0DB         	call	_mode_lamp_dim	;wreg free
  3918  0112BA  D314               	goto	l12979
  3919  0112BC                     l12859:
  3920                           
  3921                           ; BSR set to: 2
  3922                           ;main.c: 225:    init_port_dma();
  3923  0112BC  EC70  F0D8         	call	_init_port_dma	;wreg free
  3924                           
  3925                           ; BSR set to: 59
  3926                           ;main.c: 227:    init_display();
  3927  0112C0  EC45  F0CC         	call	_init_display	;wreg free
  3928                           
  3929                           ; BSR set to: 61
  3930                           ;main.c: 228:    eaDogM_WriteCommand(0b00001100);
  3931  0112C4  0E0C               	movlw	12
  3932  0112C6  6EE6               	movwf	postinc1,c
  3933  0112C8  EC37  F0DC         	call	_eaDogM_WriteCommand	;wreg free
  3934                           
  3935                           ; BSR set to: 0
  3936                           ;main.c: 232:    set_load_relay_one(1);
  3937  0112CC  0E01               	movlw	1
  3938  0112CE  6EE6               	movwf	postinc1,c
  3939  0112D0  EC1F  F0DC         	call	_set_load_relay_one	;wreg free
  3940                           
  3941                           ;main.c: 233:    set_load_relay_two(1);
  3942  0112D4  0E01               	movlw	1
  3943  0112D6  6EE6               	movwf	postinc1,c
  3944  0112D8  EC17  F0DC         	call	_set_load_relay_two	;wreg free
  3945                           
  3946                           ;main.c: 235:    V.ui_state = mode;
  3947                           ;stkvar	_mode @ sp[(-17)+15]
  3948  0112DC  0EFE               	movlw	-2
  3949  0112DE  006F FF8C  F207    	movff	plusw1,_V	;volatile
  3950                           
  3951                           ;main.c: 236:    srand(1957);
  3952  0112E4  0EA5               	movlw	165
  3953  0112E6  6EE6               	movwf	postinc1,c
  3954  0112E8  0E07               	movlw	7
  3955  0112EA  6EE6               	movwf	postinc1,c
  3956  0112EC  EC3C  F0D8         	call	_srand	;wreg free
  3957                           
  3958                           ; BSR set to: 2
  3959                           ;main.c: 237:    set_vterm(0);
  3960  0112F0  0E00               	movlw	0
  3961  0112F2  6EE6               	movwf	postinc1,c
  3962  0112F4  EC67  F0DB         	call	_set_vterm	;wreg free
  3963                           
  3964                           ;main.c: 238:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  3965  0112F8  0E50               	movlw	low STR_1
  3966  0112FA  6EE6               	movwf	postinc1,c
  3967  0112FC  0EFF               	movlw	high STR_1
  3968  0112FE  6EE6               	movwf	postinc1,c
  3969  011300  0E00               	movlw	0
  3970  011302  6EE6               	movwf	postinc1,c
  3971  011304  0E00               	movlw	0
  3972  011306  6EE6               	movwf	postinc1,c
  3973  011308  ECE8  F0D8         	call	_get_vterm_ptr	;wreg free
  3974  01130C  0060  F09B  FFE6   	movff	btemp,postinc1
  3975  011312  0060  F09F  FFE6   	movff	btemp+1,postinc1
  3976  011318  0E04               	movlw	4
  3977  01131A  6EE6               	movwf	postinc1,c
  3978  01131C  ECBB  F0C9         	call	_sprintf	;wreg free
  3979                           
  3980                           ; BSR set to: 0
  3981                           ;main.c: 239:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "1.0070");
  3982  011320  0ED0               	movlw	low STR_3
  3983  011322  6EE6               	movwf	postinc1,c
  3984  011324  0EFF               	movlw	high STR_3
  3985  011326  6EE6               	movwf	postinc1,c
  3986  011328  0EA2               	movlw	low STR_2
  3987  01132A  6EE6               	movwf	postinc1,c
  3988  01132C  0EFF               	movlw	high STR_2
  3989  01132E  6EE6               	movwf	postinc1,c
  3990  011330  0E00               	movlw	0
  3991  011332  6EE6               	movwf	postinc1,c
  3992  011334  0E01               	movlw	1
  3993  011336  6EE6               	movwf	postinc1,c
  3994  011338  ECE8  F0D8         	call	_get_vterm_ptr	;wreg free
  3995  01133C  0060  F09B  FFE6   	movff	btemp,postinc1
  3996  011342  0060  F09F  FFE6   	movff	btemp+1,postinc1
  3997  011348  0E06               	movlw	6
  3998  01134A  6EE6               	movwf	postinc1,c
  3999  01134C  ECBB  F0C9         	call	_sprintf	;wreg free
  4000                           
  4001                           ; BSR set to: 0
  4002                           ;main.c: 240:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  4003  011350  0E1D               	movlw	low STR_4
  4004  011352  6EE6               	movwf	postinc1,c
  4005  011354  0EFF               	movlw	high STR_4
  4006  011356  6EE6               	movwf	postinc1,c
  4007  011358  0E00               	movlw	0
  4008  01135A  6EE6               	movwf	postinc1,c
  4009  01135C  0E02               	movlw	2
  4010  01135E  6EE6               	movwf	postinc1,c
  4011  011360  ECE8  F0D8         	call	_get_vterm_ptr	;wreg free
  4012  011364  0060  F09B  FFE6   	movff	btemp,postinc1
  4013  01136A  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4014  011370  0E04               	movlw	4
  4015  011372  6EE6               	movwf	postinc1,c
  4016  011374  ECBB  F0C9         	call	_sprintf	;wreg free
  4017                           
  4018                           ; BSR set to: 0
  4019                           ;main.c: 241:    sprintf(get_vterm_ptr(0, 2), "                ");
  4020  011378  0E16               	movlw	low (STR_58+2)
  4021  01137A  6EE6               	movwf	postinc1,c
  4022  01137C  0EFE               	movlw	high (STR_58+2)
  4023  01137E  6EE6               	movwf	postinc1,c
  4024  011380  0E02               	movlw	2
  4025  011382  6EE6               	movwf	postinc1,c
  4026  011384  0E00               	movlw	0
  4027  011386  6EE6               	movwf	postinc1,c
  4028  011388  ECE8  F0D8         	call	_get_vterm_ptr	;wreg free
  4029  01138C  0060  F09B  FFE6   	movff	btemp,postinc1
  4030  011392  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4031  011398  0E04               	movlw	4
  4032  01139A  6EE6               	movwf	postinc1,c
  4033  01139C  ECBB  F0C9         	call	_sprintf	;wreg free
  4034                           
  4035                           ; BSR set to: 0
  4036                           ;main.c: 242:    sprintf(get_vterm_ptr(1, 2), "                ");
  4037  0113A0  0E16               	movlw	low (STR_58+2)
  4038  0113A2  6EE6               	movwf	postinc1,c
  4039  0113A4  0EFE               	movlw	high (STR_58+2)
  4040  0113A6  6EE6               	movwf	postinc1,c
  4041  0113A8  0E02               	movlw	2
  4042  0113AA  6EE6               	movwf	postinc1,c
  4043  0113AC  0E01               	movlw	1
  4044  0113AE  6EE6               	movwf	postinc1,c
  4045  0113B0  ECE8  F0D8         	call	_get_vterm_ptr	;wreg free
  4046  0113B4  0060  F09B  FFE6   	movff	btemp,postinc1
  4047  0113BA  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4048  0113C0  0E04               	movlw	4
  4049  0113C2  6EE6               	movwf	postinc1,c
  4050  0113C4  ECBB  F0C9         	call	_sprintf	;wreg free
  4051                           
  4052                           ; BSR set to: 0
  4053                           ;main.c: 243:    sprintf(get_vterm_ptr(2, 2), "                ");
  4054  0113C8  0E16               	movlw	low (STR_58+2)
  4055  0113CA  6EE6               	movwf	postinc1,c
  4056  0113CC  0EFE               	movlw	high (STR_58+2)
  4057  0113CE  6EE6               	movwf	postinc1,c
  4058  0113D0  0E02               	movlw	2
  4059  0113D2  6EE6               	movwf	postinc1,c
  4060  0113D4  0E02               	movlw	2
  4061  0113D6  6EE6               	movwf	postinc1,c
  4062  0113D8  ECE8  F0D8         	call	_get_vterm_ptr	;wreg free
  4063  0113DC  0060  F09B  FFE6   	movff	btemp,postinc1
  4064  0113E2  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4065  0113E8  0E04               	movlw	4
  4066  0113EA  6EE6               	movwf	postinc1,c
  4067  0113EC  ECBB  F0C9         	call	_sprintf	;wreg free
  4068                           
  4069                           ; BSR set to: 0
  4070                           ;main.c: 244:    update_lcd(0);
  4071  0113F0  0E00               	movlw	0
  4072  0113F2  6EE6               	movwf	postinc1,c
  4073  0113F4  EC33  F0C9         	call	_update_lcd	;wreg free
  4074                           
  4075                           ;main.c: 245:    WaitMs(1000);
  4076  0113F8  0EE8               	movlw	232
  4077  0113FA  6EE6               	movwf	postinc1,c
  4078  0113FC  0E03               	movlw	3
  4079  0113FE  6EE6               	movwf	postinc1,c
  4080  011400  EC06  F0D8         	call	_WaitMs	;wreg free
  4081                           
  4082                           ;main.c: 246:    StartTimer(TMR_DISPLAY, 250);
  4083  011404  0EFA               	movlw	250
  4084  011406  6EE6               	movwf	postinc1,c
  4085  011408  0E00               	movlw	0
  4086  01140A  6EE6               	movwf	postinc1,c
  4087  01140C  0E0A               	movlw	10
  4088  01140E  6EE6               	movwf	postinc1,c
  4089  011410  EC12  F0D7         	call	_StartTimer	;wreg free
  4090                           
  4091                           ;main.c: 247:    StartTimer(TMR_ADC, 200);
  4092  011414  0EC8               	movlw	200
  4093  011416  6EE6               	movwf	postinc1,c
  4094  011418  0E00               	movlw	0
  4095  01141A  6EE6               	movwf	postinc1,c
  4096  01141C  0E01               	movlw	1
  4097  01141E  6EE6               	movwf	postinc1,c
  4098  011420  EC12  F0D7         	call	_StartTimer	;wreg free
  4099                           
  4100                           ;main.c: 248:    StartTimer(TMR_INFO, 3000);
  4101  011424  0EB8               	movlw	184
  4102  011426  6EE6               	movwf	postinc1,c
  4103  011428  0E0B               	movlw	11
  4104  01142A  6EE6               	movwf	postinc1,c
  4105  01142C  0E07               	movlw	7
  4106  01142E  6EE6               	movwf	postinc1,c
  4107  011430  EC12  F0D7         	call	_StartTimer	;wreg free
  4108                           
  4109                           ;main.c: 249:    StartTimer(TMR_FLIPPER, 1500);
  4110  011434  0EDC               	movlw	220
  4111  011436  6EE6               	movwf	postinc1,c
  4112  011438  0E05               	movlw	5
  4113  01143A  6EE6               	movwf	postinc1,c
  4114  01143C  0E0B               	movlw	11
  4115  01143E  6EE6               	movwf	postinc1,c
  4116  011440  EC12  F0D7         	call	_StartTimer	;wreg free
  4117                           
  4118                           ;main.c: 250:    StartTimer(TMR_HELPDIS, 3000);
  4119  011444  0EB8               	movlw	184
  4120  011446  6EE6               	movwf	postinc1,c
  4121  011448  0E0B               	movlw	11
  4122  01144A  6EE6               	movwf	postinc1,c
  4123  01144C  0E09               	movlw	9
  4124  01144E  6EE6               	movwf	postinc1,c
  4125  011450  EC12  F0D7         	call	_StartTimer	;wreg free
  4126                           
  4127                           ;main.c: 252:    start_adc_scan();
  4128  011454  EC18  F0D4         	call	_start_adc_scan	;wreg free
  4129                           
  4130                           ;main.c: 253:    start_switch_handler();
  4131  011458  EC38  F0DB         	call	_start_switch_handler	;wreg free
  4132                           
  4133                           ; BSR set to: 57
  4134                           ;main.c: 254:    WaitMs(1000);
  4135  01145C  0EE8               	movlw	232
  4136  01145E  6EE6               	movwf	postinc1,c
  4137  011460  0E03               	movlw	3
  4138  011462  6EE6               	movwf	postinc1,c
  4139  011464  EC06  F0D8         	call	_WaitMs	;wreg free
  4140                           
  4141                           ;main.c: 259:    i_ror = 1;
  4142                           ;stkvar	_i_ror @ sp[(-17)+16]
  4143  011468  0EFF               	movlw	-1
  4144  01146A  6AE3               	clrf	plusw1,c
  4145  01146C  2AE3               	incf	plusw1,f,c
  4146  01146E                     l12909:
  4147                           
  4148                           ;main.c: 261:     calc_ror_data();
  4149  01146E  EC82  F0C1         	call	_calc_ror_data	;wreg free
  4150                           
  4151                           ;main.c: 262:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f         ", conv_raw_result(V_BA
      +                          T, CONV));
  4152  011472  0E00               	movlw	0
  4153  011474  6EE6               	movwf	postinc1,c
  4154  011476  0E04               	movlw	4
  4155  011478  6EE6               	movwf	postinc1,c
  4156  01147A  EC95  F0A7         	call	_conv_raw_result	;wreg free
  4157  01147E  0060  F09B  FFE6   	movff	btemp,postinc1
  4158  011484  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4159  01148A  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  4160  011490  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  4161  011496  0E0B               	movlw	low STR_8
  4162  011498  6EE6               	movwf	postinc1,c
  4163  01149A  0EFF               	movlw	high STR_8
  4164  01149C  6EE6               	movwf	postinc1,c
  4165  01149E  0E00               	movlw	0
  4166  0114A0  6EE6               	movwf	postinc1,c
  4167  0114A2  0E01               	movlw	1
  4168  0114A4  6EE6               	movwf	postinc1,c
  4169  0114A6  ECE8  F0D8         	call	_get_vterm_ptr	;wreg free
  4170  0114AA  0060  F09B  FFE6   	movff	btemp,postinc1
  4171  0114B0  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4172  0114B6  0E08               	movlw	8
  4173  0114B8  6EE6               	movwf	postinc1,c
  4174  0114BA  ECBB  F0C9         	call	_sprintf	;wreg free
  4175                           
  4176                           ; BSR set to: 0
  4177                           ;main.c: 263:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f       ", spinners(5, 0),
      +                           i_ror, C.bv_ror);
  4178  0114BE  0060  F5A3  FFE6   	movff	_C+104,postinc1
  4179  0114C4  0060  F5A7  FFE6   	movff	_C+105,postinc1
  4180  0114CA  0060  F5AB  FFE6   	movff	_C+106,postinc1
  4181  0114D0  0060  F5AF  FFE6   	movff	_C+107,postinc1
  4182                           
  4183                           ;stkvar	_i_ror @ sp[(-21)+16]
  4184  0114D6  0EFB               	movlw	-5
  4185  0114D8  50E3               	movf	plusw1,w,c
  4186  0114DA  6EE6               	movwf	postinc1,c
  4187  0114DC  0E00               	movlw	0
  4188  0114DE  6EE6               	movwf	postinc1,c
  4189  0114E0  0E00               	movlw	0
  4190  0114E2  6EE6               	movwf	postinc1,c
  4191  0114E4  0E05               	movlw	5
  4192  0114E6  6EE6               	movwf	postinc1,c
  4193  0114E8  ECBA  F0CC         	call	_spinners	;wreg free
  4194  0114EC  5026               	movf	btemp^0,w,c
  4195  0114EE  6EE6               	movwf	postinc1,c
  4196  0114F0  0E00               	movlw	0
  4197  0114F2  6EE6               	movwf	postinc1,c
  4198  0114F4  0E06               	movlw	low STR_9
  4199  0114F6  6EE6               	movwf	postinc1,c
  4200  0114F8  0EFD               	movlw	high STR_9
  4201  0114FA  6EE6               	movwf	postinc1,c
  4202  0114FC  0E00               	movlw	0
  4203  0114FE  6EE6               	movwf	postinc1,c
  4204  011500  0E02               	movlw	2
  4205  011502  6EE6               	movwf	postinc1,c
  4206  011504  ECE8  F0D8         	call	_get_vterm_ptr	;wreg free
  4207  011508  0060  F09B  FFE6   	movff	btemp,postinc1
  4208  01150E  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4209  011514  0E0C               	movlw	12
  4210  011516  6EE6               	movwf	postinc1,c
  4211  011518  ECBB  F0C9         	call	_sprintf	;wreg free
  4212                           
  4213                           ; BSR set to: 0
  4214                           ;main.c: 264:     update_lcd(0);
  4215  01151C  0E00               	movlw	0
  4216  01151E  6EE6               	movwf	postinc1,c
  4217  011520  EC33  F0C9         	call	_update_lcd	;wreg free
  4218                           
  4219                           ;main.c: 265:     WaitMs(2000);
  4220  011524  0ED0               	movlw	208
  4221  011526  6EE6               	movwf	postinc1,c
  4222  011528  0E07               	movlw	7
  4223  01152A  6EE6               	movwf	postinc1,c
  4224  01152C  EC06  F0D8         	call	_WaitMs	;wreg free
  4225                           
  4226                           ;main.c: 266:     clear_adc_scan();
  4227  011530  EC8B  F0DC         	call	_clear_adc_scan	;wreg free
  4228                           
  4229                           ; BSR set to: 0
  4230                           ;main.c: 267:     start_adc_scan();
  4231  011534  EC18  F0D4         	call	_start_adc_scan	;wreg free
  4232                           
  4233                           ;main.c: 268:     WaitMs(500);
  4234  011538  0EF4               	movlw	244
  4235  01153A  6EE6               	movwf	postinc1,c
  4236  01153C  0E01               	movlw	1
  4237  01153E  6EE6               	movwf	postinc1,c
  4238  011540  EC06  F0D8         	call	_WaitMs	;wreg free
  4239                           
  4240                           ;main.c: 269:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  4241                           ;stkvar	_i_ror @ sp[(-17)+16]
  4242  011544  0EFF               	movlw	-1
  4243  011546  006F FF8C  F031    	movff	plusw1,btemp+11
  4244  01154C  2A31               	incf	(btemp+11)^0,f,c
  4245  01154E  0060  F0C7  FFE3   	movff	btemp+11,plusw1
  4246  011554  0631               	decf	(btemp+11)^0,f,c
  4247  011556  0E1E               	movlw	30
  4248  011558  6031               	cpfslt	(btemp+11)^0,c
  4249  01155A  D018               	goto	u12430
  4250  01155C  0060  F5A3  FFE6   	movff	_C+104,postinc1
  4251  011562  0060  F5A7  FFE6   	movff	_C+105,postinc1
  4252  011568  0060  F5AB  FFE6   	movff	_C+106,postinc1
  4253  01156E  0060  F5AF  FFE6   	movff	_C+107,postinc1
  4254  011574  0E42               	movlw	66
  4255  011576  6EE6               	movwf	postinc1,c
  4256  011578  0E60               	movlw	96
  4257  01157A  6EE6               	movwf	postinc1,c
  4258  01157C  0E65               	movlw	101
  4259  01157E  6EE6               	movwf	postinc1,c
  4260  011580  0E3C               	movlw	60
  4261  011582  6EE6               	movwf	postinc1,c
  4262  011584  ECAD  F0C3         	call	___flge	;wreg free
  4263  011588  A026               	btfss	btemp& (0+255),0,c
  4264  01158A  D771               	goto	l12909
  4265  01158C                     u12430:
  4266                           
  4267                           ;main.c: 271:    static_soc();
  4268  01158C  ECAB  F0DA         	call	_static_soc	;wreg free
  4269                           
  4270                           ; BSR set to: 1
  4271                           ;main.c: 272:    init_bsoc();
  4272  011590  ECF5  F0C2         	call	_init_bsoc	;wreg free
  4273                           
  4274                           ;main.c: 273:    set_load_relay_one(0);
  4275  011594  0E00               	movlw	0
  4276  011596  6EE6               	movwf	postinc1,c
  4277  011598  EC1F  F0DC         	call	_set_load_relay_one	;wreg free
  4278                           
  4279                           ;main.c: 274:    set_load_relay_two(0);
  4280  01159C  0E00               	movlw	0
  4281  01159E  6EE6               	movwf	postinc1,c
  4282  0115A0  EC17  F0DC         	call	_set_load_relay_two	;wreg free
  4283                           
  4284                           ;main.c: 275:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  4285  0115A4  0060  F6BB  FFE6   	movff	_C+174,postinc1
  4286  0115AA  0060  F6BF  FFE6   	movff	_C+175,postinc1
  4287  0115B0  0E33               	movlw	low STR_10
  4288  0115B2  6EE6               	movwf	postinc1,c
  4289  0115B4  0EFD               	movlw	high STR_10
  4290  0115B6  6EE6               	movwf	postinc1,c
  4291  0115B8  0E00               	movlw	0
  4292  0115BA  6EE6               	movwf	postinc1,c
  4293  0115BC  0E00               	movlw	0
  4294  0115BE  6EE6               	movwf	postinc1,c
  4295  0115C0  ECE8  F0D8         	call	_get_vterm_ptr	;wreg free
  4296  0115C4  0060  F09B  FFE6   	movff	btemp,postinc1
  4297  0115CA  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4298  0115D0  0E06               	movlw	6
  4299  0115D2  6EE6               	movwf	postinc1,c
  4300  0115D4  ECBB  F0C9         	call	_sprintf	;wreg free
  4301                           
  4302                           ; BSR set to: 0
  4303                           ;main.c: 276:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  4304  0115D8  0060  F633  FFE6   	movff	_C+140,postinc1
  4305  0115DE  0060  F637  FFE6   	movff	_C+141,postinc1
  4306  0115E4  0060  F63B  FFE6   	movff	_C+142,postinc1
  4307  0115EA  0060  F63F  FFE6   	movff	_C+143,postinc1
  4308  0115F0  0E49               	movlw	low STR_11
  4309  0115F2  6EE6               	movwf	postinc1,c
  4310  0115F4  0EFD               	movlw	high STR_11
  4311  0115F6  6EE6               	movwf	postinc1,c
  4312  0115F8  0E00               	movlw	0
  4313  0115FA  6EE6               	movwf	postinc1,c
  4314  0115FC  0E01               	movlw	1
  4315  0115FE  6EE6               	movwf	postinc1,c
  4316  011600  ECE8  F0D8         	call	_get_vterm_ptr	;wreg free
  4317  011604  0060  F09B  FFE6   	movff	btemp,postinc1
  4318  01160A  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4319  011610  0E08               	movlw	8
  4320  011612  6EE6               	movwf	postinc1,c
  4321  011614  ECBB  F0C9         	call	_sprintf	;wreg free
  4322                           
  4323                           ; BSR set to: 0
  4324                           ;main.c: 277:    update_lcd(0);
  4325  011618  0E00               	movlw	0
  4326  01161A  6EE6               	movwf	postinc1,c
  4327  01161C  EC33  F0C9         	call	_update_lcd	;wreg free
  4328                           
  4329                           ;main.c: 278:    WaitMs(2000);
  4330  011620  0ED0               	movlw	208
  4331  011622  6EE6               	movwf	postinc1,c
  4332  011624  0E07               	movlw	7
  4333  011626  6EE6               	movwf	postinc1,c
  4334  011628  EC06  F0D8         	call	_WaitMs	;wreg free
  4335                           
  4336                           ;main.c: 279:    sprintf(get_vterm_ptr(0, 0), "Battery ESR     ");
  4337  01162C  0E2E               	movlw	low STR_12
  4338  01162E  6EE6               	movwf	postinc1,c
  4339  011630  0EFF               	movlw	high STR_12
  4340  011632  6EE6               	movwf	postinc1,c
  4341  011634  0E00               	movlw	0
  4342  011636  6EE6               	movwf	postinc1,c
  4343  011638  0E00               	movlw	0
  4344  01163A  6EE6               	movwf	postinc1,c
  4345  01163C  ECE8  F0D8         	call	_get_vterm_ptr	;wreg free
  4346  011640  0060  F09B  FFE6   	movff	btemp,postinc1
  4347  011646  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4348  01164C  0E04               	movlw	4
  4349  01164E  6EE6               	movwf	postinc1,c
  4350  011650  ECBB  F0C9         	call	_sprintf	;wreg free
  4351                           
  4352                           ; BSR set to: 0
  4353                           ;main.c: 280:    sprintf(get_vterm_ptr(1, 0), "Calculation     ");
  4354  011654  0E3F               	movlw	low STR_13
  4355  011656  6EE6               	movwf	postinc1,c
  4356  011658  0EFF               	movlw	high STR_13
  4357  01165A  6EE6               	movwf	postinc1,c
  4358  01165C  0E00               	movlw	0
  4359  01165E  6EE6               	movwf	postinc1,c
  4360  011660  0E01               	movlw	1
  4361  011662  6EE6               	movwf	postinc1,c
  4362  011664  ECE8  F0D8         	call	_get_vterm_ptr	;wreg free
  4363  011668  0060  F09B  FFE6   	movff	btemp,postinc1
  4364  01166E  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4365  011674  0E04               	movlw	4
  4366  011676  6EE6               	movwf	postinc1,c
  4367  011678  ECBB  F0C9         	call	_sprintf	;wreg free
  4368                           
  4369                           ; BSR set to: 0
  4370                           ;main.c: 281:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds");
  4371  01167C  0E72               	movlw	low STR_14
  4372  01167E  6EE6               	movwf	postinc1,c
  4373  011680  0EFF               	movlw	high STR_14
  4374  011682  6EE6               	movwf	postinc1,c
  4375  011684  0E00               	movlw	0
  4376  011686  6EE6               	movwf	postinc1,c
  4377  011688  0E02               	movlw	2
  4378  01168A  6EE6               	movwf	postinc1,c
  4379  01168C  ECE8  F0D8         	call	_get_vterm_ptr	;wreg free
  4380  011690  0060  F09B  FFE6   	movff	btemp,postinc1
  4381  011696  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4382  01169C  0E04               	movlw	4
  4383  01169E  6EE6               	movwf	postinc1,c
  4384  0116A0  ECBB  F0C9         	call	_sprintf	;wreg free
  4385                           
  4386                           ; BSR set to: 0
  4387                           ;main.c: 282:    update_lcd(0);
  4388  0116A4  0E00               	movlw	0
  4389  0116A6  6EE6               	movwf	postinc1,c
  4390  0116A8  EC33  F0C9         	call	_update_lcd	;wreg free
  4391                           
  4392                           ;main.c: 283:    uint16_t i_esr = 1;
  4393  0116AC  0E01               	movlw	1
  4394  0116AE  6E30               	movwf	(btemp+10)^0,c
  4395  0116B0  0E00               	movlw	0
  4396  0116B2  6E31               	movwf	(btemp+11)^0,c
  4397                           
  4398                           ;stkvar	_i_esr @ sp[(-17)+8]
  4399  0116B4  0EF7               	movlw	-9
  4400  0116B6  0060  F0C3  FFE3   	movff	btemp+10,plusw1
  4401  0116BC  0EF8               	movlw	-8
  4402  0116BE  0060  F0C7  FFE3   	movff	btemp+11,plusw1
  4403                           
  4404                           ;main.c: 285:    float esr_temp;;main.c: 286:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  4405  0116C4  D06D               	goto	l12969
  4406  0116C6                     l12957:
  4407                           
  4408                           ;main.c: 287:     WaitMs(110);
  4409  0116C6  0E6E               	movlw	110
  4410  0116C8  6EE6               	movwf	postinc1,c
  4411  0116CA  0E00               	movlw	0
  4412  0116CC  6EE6               	movwf	postinc1,c
  4413  0116CE  EC06  F0D8         	call	_WaitMs	;wreg free
  4414                           
  4415                           ;main.c: 288:     shape = (uint8_t) fabsf(esr_temp);
  4416                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4417  0116D2  0EF3               	movlw	-13
  4418  0116D4  006F FF8F FFE6     	movff	plusw1,postinc1
  4419  0116DA  006F FF8F FFE6     	movff	plusw1,postinc1
  4420  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  4421  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  4422  0116EC  EC28  F0CF         	call	_fabsf	;wreg free
  4423  0116F0  0060  F09B  FFE6   	movff	btemp,postinc1
  4424  0116F6  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4425  0116FC  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  4426  011702  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  4427  011708  EC3C  F0C2         	call	___fltol	;wreg free
  4428  01170C  0060  F098  F031   	movff	btemp,btemp+11
  4429                           
  4430                           ;stkvar	_shape @ sp[(-17)+10]
  4431  011712  0EF9               	movlw	-7
  4432  011714  0060  F0C7  FFE3   	movff	btemp+11,plusw1
  4433                           
  4434                           ;main.c: 289:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c      ", spinners(0, 0), s
      +                          pinners(shape, 0));
  4435  01171A  0E00               	movlw	0
  4436  01171C  6EE6               	movwf	postinc1,c
  4437                           
  4438                           ;stkvar	_shape @ sp[(-18)+10]
  4439  01171E  0EF8               	movlw	-8
  4440  011720  50E3               	movf	plusw1,w,c
  4441  011722  6EE6               	movwf	postinc1,c
  4442  011724  ECBA  F0CC         	call	_spinners	;wreg free
  4443  011728  5026               	movf	btemp^0,w,c
  4444  01172A  6EE6               	movwf	postinc1,c
  4445  01172C  0E00               	movlw	0
  4446  01172E  6EE6               	movwf	postinc1,c
  4447  011730  0E00               	movlw	0
  4448  011732  6EE6               	movwf	postinc1,c
  4449  011734  0E00               	movlw	0
  4450  011736  6EE6               	movwf	postinc1,c
  4451  011738  ECBA  F0CC         	call	_spinners	;wreg free
  4452  01173C  5026               	movf	btemp^0,w,c
  4453  01173E  6EE6               	movwf	postinc1,c
  4454  011740  0E00               	movlw	0
  4455  011742  6EE6               	movwf	postinc1,c
  4456  011744  0E5F               	movlw	low STR_15
  4457  011746  6EE6               	movwf	postinc1,c
  4458  011748  0EFD               	movlw	high STR_15
  4459  01174A  6EE6               	movwf	postinc1,c
  4460  01174C  0E00               	movlw	0
  4461  01174E  6EE6               	movwf	postinc1,c
  4462  011750  0E02               	movlw	2
  4463  011752  6EE6               	movwf	postinc1,c
  4464  011754  ECE8  F0D8         	call	_get_vterm_ptr	;wreg free
  4465  011758  0060  F09B  FFE6   	movff	btemp,postinc1
  4466  01175E  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4467  011764  0E08               	movlw	8
  4468  011766  6EE6               	movwf	postinc1,c
  4469  011768  ECBB  F0C9         	call	_sprintf	;wreg free
  4470                           
  4471                           ; BSR set to: 0
  4472                           ;main.c: 290:     update_lcd(0);
  4473  01176C  0E00               	movlw	0
  4474  01176E  6EE6               	movwf	postinc1,c
  4475  011770  EC33  F0C9         	call	_update_lcd	;wreg free
  4476                           
  4477                           ;main.c: 292:     if (i_esr++ > 512)
  4478                           ;stkvar	_i_esr @ sp[(-17)+8]
  4479  011774  50E1               	movf	fsr1l,w,c
  4480  011776  0FF7               	addlw	-9
  4481  011778  6ED9               	movwf	fsr2l,c
  4482  01177A  50E2               	movf	fsr1h,w,c
  4483  01177C  6EDA               	movwf	fsr2h,c
  4484  01177E  0EFF               	movlw	255
  4485  011780  22DA               	addwfc	fsr2h,f,c
  4486  011782  006F FF7C  F030    	movff	indf2,btemp+10
  4487  011788  0E01               	movlw	1
  4488  01178A  26DE               	addwf	postinc2,f,c
  4489  01178C  006F FF7C  F031    	movff	indf2,btemp+11
  4490  011792  0E00               	movlw	0
  4491  011794  22DD               	addwfc	postdec2,f,c
  4492  011796  0430               	decf	(btemp+10)^0,w,c
  4493  011798  0E02               	movlw	2
  4494  01179A  5831               	subwfb	(btemp+11)^0,w,c
  4495  01179C  B0D8               	btfsc	status,0,c
  4496  01179E  D017               	goto	u12450
  4497  0117A0                     l12969:
  4498                           
  4499                           ;main.c: 286:    while ((esr_temp = esr_check(0)) < 0.0) {
  4500  0117A0  0E00               	movlw	0
  4501  0117A2  6EE6               	movwf	postinc1,c
  4502  0117A4  ECA5  F0B4         	call	_esr_check	;wreg free
  4503                           
  4504                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4505  0117A8  0EF3               	movlw	-13
  4506  0117AA  0060  F09B  FFE3   	movff	btemp,plusw1
  4507  0117B0  0EF4               	movlw	-12
  4508  0117B2  0060  F09F  FFE3   	movff	btemp+1,plusw1
  4509  0117B8  0EF5               	movlw	-11
  4510  0117BA  0060  F0A3  FFE3   	movff	btemp+2,plusw1
  4511  0117C0  0EF6               	movlw	-10
  4512  0117C2  0060  F0A7  FFE3   	movff	btemp+3,plusw1
  4513  0117C8  0EF6               	movlw	-10
  4514  0117CA  BEE3               	btfsc	plusw1,7,c
  4515  0117CC  D77C               	goto	l12957
  4516  0117CE                     u12450:
  4517                           
  4518                           ;main.c: 295:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  4519  0117CE  0060  F613  FFE6   	movff	_C+132,postinc1
  4520  0117D4  0060  F617  FFE6   	movff	_C+133,postinc1
  4521  0117DA  0060  F61B  FFE6   	movff	_C+134,postinc1
  4522  0117E0  0060  F61F  FFE6   	movff	_C+135,postinc1
  4523  0117E6  0E1D               	movlw	low STR_16
  4524  0117E8  6EE6               	movwf	postinc1,c
  4525  0117EA  0EFD               	movlw	high STR_16
  4526  0117EC  6EE6               	movwf	postinc1,c
  4527  0117EE  0E00               	movlw	0
  4528  0117F0  6EE6               	movwf	postinc1,c
  4529  0117F2  0E00               	movlw	0
  4530  0117F4  6EE6               	movwf	postinc1,c
  4531  0117F6  ECE8  F0D8         	call	_get_vterm_ptr	;wreg free
  4532  0117FA  0060  F09B  FFE6   	movff	btemp,postinc1
  4533  011800  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4534  011806  0E08               	movlw	8
  4535  011808  6EE6               	movwf	postinc1,c
  4536  01180A  ECBB  F0C9         	call	_sprintf	;wreg free
  4537                           
  4538                           ;main.c: 296:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  4539  01180E  0060  F78F  FFE6   	movff	_C+227,postinc1
  4540  011814  0060  F793  FFE6   	movff	_C+228,postinc1
  4541  01181A  0060  F797  FFE6   	movff	_C+229,postinc1
  4542  011820  0060  F79B  FFE6   	movff	_C+230,postinc1
  4543  011826  0060  F7BF  FFE6   	movff	_C+239,postinc1
  4544  01182C  0060  F7C3  FFE6   	movff	_C+240,postinc1
  4545  011832  0060  F7C7  FFE6   	movff	_C+241,postinc1
  4546  011838  0060  F7CB  FFE6   	movff	_C+242,postinc1
  4547  01183E  0EBA               	movlw	low STR_17
  4548  011840  6EE6               	movwf	postinc1,c
  4549  011842  0EFC               	movlw	high STR_17
  4550  011844  6EE6               	movwf	postinc1,c
  4551  011846  0E00               	movlw	0
  4552  011848  6EE6               	movwf	postinc1,c
  4553  01184A  0E01               	movlw	1
  4554  01184C  6EE6               	movwf	postinc1,c
  4555  01184E  ECE8  F0D8         	call	_get_vterm_ptr	;wreg free
  4556  011852  0060  F09B  FFE6   	movff	btemp,postinc1
  4557  011858  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4558  01185E  0E0C               	movlw	12
  4559  011860  6EE6               	movwf	postinc1,c
  4560  011862  ECBB  F0C9         	call	_sprintf	;wreg free
  4561                           
  4562                           ;main.c: 297:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  4563  011866  0060  F79F  FFE6   	movff	_C+231,postinc1
  4564  01186C  0060  F7A3  FFE6   	movff	_C+232,postinc1
  4565  011872  0060  F7A7  FFE6   	movff	_C+233,postinc1
  4566  011878  0060  F7AB  FFE6   	movff	_C+234,postinc1
  4567  01187E  0060  F7CF  FFE6   	movff	_C+243,postinc1
  4568  011884  0060  F7D3  FFE6   	movff	_C+244,postinc1
  4569  01188A  0060  F7D7  FFE6   	movff	_C+245,postinc1
  4570  011890  0060  F7DB  FFE6   	movff	_C+246,postinc1
  4571  011896  0ED4               	movlw	low STR_18
  4572  011898  6EE6               	movwf	postinc1,c
  4573  01189A  0EFC               	movlw	high STR_18
  4574  01189C  6EE6               	movwf	postinc1,c
  4575  01189E  0E00               	movlw	0
  4576  0118A0  6EE6               	movwf	postinc1,c
  4577  0118A2  0E02               	movlw	2
  4578  0118A4  6EE6               	movwf	postinc1,c
  4579  0118A6  ECE8  F0D8         	call	_get_vterm_ptr	;wreg free
  4580  0118AA  0060  F09B  FFE6   	movff	btemp,postinc1
  4581  0118B0  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4582  0118B6  0E0C               	movlw	12
  4583  0118B8  6EE6               	movwf	postinc1,c
  4584  0118BA  ECBB  F0C9         	call	_sprintf	;wreg free
  4585                           
  4586                           ;main.c: 298:    update_lcd(0);
  4587  0118BE  0E00               	movlw	0
  4588  0118C0  6EE6               	movwf	postinc1,c
  4589  0118C2  EC33  F0C9         	call	_update_lcd	;wreg free
  4590                           
  4591                           ;main.c: 299:    WaitMs(5000);
  4592  0118C6  0E88               	movlw	136
  4593  0118C8  6EE6               	movwf	postinc1,c
  4594  0118CA  0E13               	movlw	19
  4595  0118CC  6EE6               	movwf	postinc1,c
  4596  0118CE  EC06  F0D8         	call	_WaitMs	;wreg free
  4597                           
  4598                           ;main.c: 300:    V.system_stable=1;
  4599  0118D2  0E01               	movlw	1
  4600  0118D4  0102               	movlb	2	; () banked
  4601  0118D6  6FB5               	movwf	(_V+174)& (0+255),b	;volatile
  4602                           
  4603                           ;main.c: 301:    break;
  4604  0118D8  D01C               	goto	l12981
  4605  0118DA                     l1340:
  4606                           
  4607                           ; BSR set to: 2
  4608                           ;main.c: 307:    P.SYSTEM_STABLE = 1;
  4609  0118DA  0100               	movlb	0	; () banked
  4610  0118DC  8197               	bsf	(_P+1)& (0+255),0,b	;volatile
  4611                           
  4612                           ;main.c: 308:    break;
  4613  0118DE  D019               	goto	l12981
  4614  0118E0                     l1342:
  4615                           
  4616                           ; BSR set to: 2
  4617                           ;main.c: 311:    V.ui_state = UI_STATE_INIT;
  4618  0118E0  6B07               	clrf	_V& (0+255),b	;volatile
  4619                           
  4620                           ;main.c: 312:    break;
  4621  0118E2  D017               	goto	l12981
  4622  0118E4                     l12979:
  4623  0118E4  0102               	movlb	2	; () banked
  4624  0118E6  5107               	movf	_V& (0+255),w,b	;volatile
  4625  0118E8  6E30               	movwf	(btemp+10)^0,c
  4626  0118EA  6A31               	clrf	(btemp+11)^0,c
  4627                           
  4628                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4629                           ; Switch size 1, requested type "simple"
  4630                           ; Number of cases is 1, Range of values is 0 to 0
  4631                           ; switch strategies available:
  4632                           ; Name         Instructions Cycles
  4633                           ; simple_byte            4     3 (average)
  4634                           ;	Chosen strategy is simple_byte
  4635  0118EC  5031               	movf	(btemp+11)^0,w,c
  4636  0118EE  0A00               	xorlw	0	; case 0
  4637  0118F0  A4D8               	btfss	status,2,c
  4638  0118F2  D7F6               	goto	l1342
  4639                           
  4640                           ; BSR set to: 2
  4641                           ; Switch size 1, requested type "simple"
  4642                           ; Number of cases is 5, Range of values is 0 to 5
  4643                           ; switch strategies available:
  4644                           ; Name         Instructions Cycles
  4645                           ; simple_byte           16     9 (average)
  4646                           ;	Chosen strategy is simple_byte
  4647  0118F4  5030               	movf	(btemp+10)^0,w,c
  4648  0118F6  0A00               	xorlw	0	; case 0
  4649  0118F8  B4D8               	btfsc	status,2,c
  4650  0118FA  D4E0               	goto	l12859
  4651  0118FC  0A01               	xorlw	1	; case 1
  4652  0118FE  B4D8               	btfsc	status,2,c
  4653  011900  D008               	goto	l12981
  4654  011902  0A02               	xorlw	2	; case 3
  4655  011904  B4D8               	btfsc	status,2,c
  4656  011906  D005               	goto	l12981
  4657  011908  0A07               	xorlw	7	; case 4
  4658  01190A  B4D8               	btfsc	status,2,c
  4659  01190C  D7E6               	goto	l1340
  4660  01190E  0A01               	xorlw	1	; case 5
  4661  011910  D7E7               	goto	l1342
  4662  011912                     l12981:
  4663                           
  4664                           ;main.c: 315:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  4665  011912  0E01               	movlw	1
  4666  011914  6EE6               	movwf	postinc1,c
  4667  011916  EC93  F0D9         	call	_TimerDone	;wreg free
  4668  01191A  5026               	movf	btemp^0,w,c
  4669  01191C  B4D8               	btfsc	status,2,c
  4670  01191E  D013               	goto	l12993
  4671  011920  EC7B  F0DC         	call	_check_adc_scan	;wreg free
  4672  011924  5026               	movf	btemp^0,w,c
  4673  011926  B4D8               	btfsc	status,2,c
  4674  011928  D00E               	goto	l12993
  4675                           
  4676                           ;main.c: 319:    convert_adc_data();
  4677  01192A  ECCC  F0CE         	call	_convert_adc_data	;wreg free
  4678                           
  4679                           ;main.c: 323:    clear_adc_scan();
  4680  01192E  EC8B  F0DC         	call	_clear_adc_scan	;wreg free
  4681                           
  4682                           ; BSR set to: 0
  4683                           ;main.c: 324:    start_adc_scan();
  4684  011932  EC18  F0D4         	call	_start_adc_scan	;wreg free
  4685                           
  4686                           ;main.c: 325:    StartTimer(TMR_ADC, 200);
  4687  011936  0EC8               	movlw	200
  4688  011938  6EE6               	movwf	postinc1,c
  4689  01193A  0E00               	movlw	0
  4690  01193C  6EE6               	movwf	postinc1,c
  4691  01193E  0E01               	movlw	1
  4692  011940  6EE6               	movwf	postinc1,c
  4693  011942  EC12  F0D7         	call	_StartTimer	;wreg free
  4694  011946                     l12993:
  4695                           
  4696                           ;main.c: 332:   if (TimerDone(TMR_DISPLAY)) {
  4697                           
  4698                           ;main.c: 328:   if (V.ticks) {
  4699  011946  0E0A               	movlw	10
  4700  011948  6EE6               	movwf	postinc1,c
  4701  01194A  EC93  F0D9         	call	_TimerDone	;wreg free
  4702  01194E  5026               	movf	btemp^0,w,c
  4703  011950  B4D8               	btfsc	status,2,c
  4704  011952  EFE3  F090         	goto	l13069
  4705                           
  4706                           ;main.c: 333:    if (TimerDone(TMR_HELPDIS)) {
  4707  011956  0E09               	movlw	9
  4708  011958  6EE6               	movwf	postinc1,c
  4709  01195A  EC93  F0D9         	call	_TimerDone	;wreg free
  4710  01195E  5026               	movf	btemp^0,w,c
  4711  011960  B4D8               	btfsc	status,2,c
  4712  011962  D004               	goto	l13001
  4713                           
  4714                           ;main.c: 334:     set_display_info(DIS_STR);
  4715  011964  0E00               	movlw	0
  4716  011966  6EE6               	movwf	postinc1,c
  4717  011968  EC76  F0DB         	call	_set_display_info	;wreg free
  4718  01196C                     l13001:
  4719                           
  4720                           ;main.c: 336:    calc_model_data();
  4721  01196C  EC08  F0AE         	call	_calc_model_data	;wreg free
  4722                           
  4723                           ; BSR set to: 1
  4724                           ;main.c: 343:     hid_display(&H);
  4725                           
  4726                           ;main.c: 338:    if (0) {
  4727  011970  0ED9               	movlw	_H& (0+255)
  4728  011972  6EE6               	movwf	postinc1,c
  4729  011974  ECC3  F0CA         	call	_hid_display	;wreg free
  4730                           
  4731                           ;main.c: 344:     switch (H.hid_display) {
  4732  011978  D3D6               	goto	l13049
  4733  01197A                     l1350:
  4734                           
  4735                           ; BSR set to: 0
  4736                           ;main.c: 346:      V.calib = 0;
  4737  01197A  0102               	movlb	2	; () banked
  4738  01197C  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  4739                           
  4740                           ; BSR set to: 2
  4741                           ;main.c: 347:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f    ", (C.day) ? 'D' : '
      +                           ', C.p_pv);
  4742  01197E  0101               	movlb	1	; () banked
  4743  011980  51F7               	movf	(_C+247)& (0+255),w,b	;volatile
  4744  011982  A4D8               	btfss	status,2,c
  4745  011984  D002               	goto	l13011
  4746                           
  4747                           ; BSR set to: 1
  4748  011986  0E20               	movlw	32
  4749  011988  D001               	goto	L1
  4750  01198A                     l13011:
  4751                           
  4752                           ; BSR set to: 1
  4753  01198A  0E44               	movlw	68
  4754  01198C                     L1:
  4755  01198C  6E30               	movwf	(btemp+10)^0,c
  4756  01198E  0E00               	movlw	0
  4757  011990  6E31               	movwf	(btemp+11)^0,c
  4758                           
  4759                           ;stkvar	_main$3716 @ sp[(-17)+2]
  4760  011992  0EF1               	movlw	-15
  4761  011994  0060  F0C3  FFE3   	movff	btemp+10,plusw1
  4762  01199A  0EF2               	movlw	-14
  4763  01199C  0060  F0C7  FFE3   	movff	btemp+11,plusw1
  4764                           
  4765                           ; BSR set to: 1
  4766  0119A2  0060  F5E3  FFE6   	movff	_C+120,postinc1
  4767  0119A8  0060  F5E7  FFE6   	movff	_C+121,postinc1
  4768  0119AE  0060  F5EB  FFE6   	movff	_C+122,postinc1
  4769  0119B4  0060  F5EF  FFE6   	movff	_C+123,postinc1
  4770                           
  4771                           ;stkvar	_main$3716 @ sp[(-21)+2]
  4772  0119BA  0EED               	movlw	-19
  4773  0119BC  006F FF8F FFE6     	movff	plusw1,postinc1
  4774  0119C2  006F FF8F FFE6     	movff	plusw1,postinc1
  4775  0119C8  0EEC               	movlw	low STR_22
  4776  0119CA  6EE6               	movwf	postinc1,c
  4777  0119CC  0EFD               	movlw	high STR_22
  4778  0119CE  6EE6               	movwf	postinc1,c
  4779  0119D0  0E00               	movlw	0
  4780  0119D2  6EE6               	movwf	postinc1,c
  4781  0119D4  0E00               	movlw	0
  4782  0119D6  6EE6               	movwf	postinc1,c
  4783  0119D8  ECE8  F0D8         	call	_get_vterm_ptr	;wreg free
  4784  0119DC  0060  F09B  FFE6   	movff	btemp,postinc1
  4785  0119E2  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4786  0119E8  0E0A               	movlw	10
  4787  0119EA  6EE6               	movwf	postinc1,c
  4788  0119EC  ECBB  F0C9         	call	_sprintf	;wreg free
  4789                           
  4790                           ; BSR set to: 0
  4791                           ;main.c: 348:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  4792  0119F0  0060  F5C3  FFE6   	movff	_C+112,postinc1
  4793  0119F6  0060  F5C7  FFE6   	movff	_C+113,postinc1
  4794  0119FC  0060  F5CB  FFE6   	movff	_C+114,postinc1
  4795  011A02  0060  F5CF  FFE6   	movff	_C+115,postinc1
  4796  011A08  0EBF               	movlw	low STR_23
  4797  011A0A  6EE6               	movwf	postinc1,c
  4798  011A0C  0EFE               	movlw	high STR_23
  4799  011A0E  6EE6               	movwf	postinc1,c
  4800  011A10  0E00               	movlw	0
  4801  011A12  6EE6               	movwf	postinc1,c
  4802  011A14  0E01               	movlw	1
  4803  011A16  6EE6               	movwf	postinc1,c
  4804  011A18  ECE8  F0D8         	call	_get_vterm_ptr	;wreg free
  4805  011A1C  0060  F09B  FFE6   	movff	btemp,postinc1
  4806  011A22  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4807  011A28  0E08               	movlw	8
  4808  011A2A  6EE6               	movwf	postinc1,c
  4809  011A2C  ECBB  F0C9         	call	_sprintf	;wreg free
  4810                           
  4811                           ; BSR set to: 0
  4812                           ;main.c: 349:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  4813  011A30  0060  F5D3  FFE6   	movff	_C+116,postinc1
  4814  011A36  0060  F5D7  FFE6   	movff	_C+117,postinc1
  4815  011A3C  0060  F5DB  FFE6   	movff	_C+118,postinc1
  4816  011A42  0060  F5DF  FFE6   	movff	_C+119,postinc1
  4817  011A48  0EAC               	movlw	low STR_24
  4818  011A4A  6EE6               	movwf	postinc1,c
  4819  011A4C  0EFE               	movlw	high STR_24
  4820  011A4E  6EE6               	movwf	postinc1,c
  4821  011A50  0E00               	movlw	0
  4822  011A52  6EE6               	movwf	postinc1,c
  4823  011A54  0E02               	movlw	2
  4824  011A56  6EE6               	movwf	postinc1,c
  4825  011A58  ECE8  F0D8         	call	_get_vterm_ptr	;wreg free
  4826  011A5C  0060  F09B  FFE6   	movff	btemp,postinc1
  4827  011A62  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4828  011A68  0E08               	movlw	8
  4829  011A6A  6EE6               	movwf	postinc1,c
  4830  011A6C  ECBB  F0C9         	call	_sprintf	;wreg free
  4831                           
  4832                           ; BSR set to: 0
  4833                           ;main.c: 351:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f     ", (C.day) ? 'D' : '
      +                           ', C.pvkw);
  4834  011A70  0101               	movlb	1	; () banked
  4835  011A72  51F7               	movf	(_C+247)& (0+255),w,b	;volatile
  4836  011A74  A4D8               	btfss	status,2,c
  4837  011A76  D002               	goto	l13023
  4838                           
  4839                           ; BSR set to: 1
  4840  011A78  0E20               	movlw	32
  4841  011A7A  D001               	goto	L2
  4842  011A7C                     l13023:
  4843                           
  4844                           ; BSR set to: 1
  4845  011A7C  0E44               	movlw	68
  4846  011A7E                     L2:
  4847  011A7E  6E30               	movwf	(btemp+10)^0,c
  4848  011A80  0E00               	movlw	0
  4849  011A82  6E31               	movwf	(btemp+11)^0,c
  4850                           
  4851                           ;stkvar	_main$3720 @ sp[(-17)+0]
  4852  011A84  0EEF               	movlw	-17
  4853  011A86  0060  F0C3  FFE3   	movff	btemp+10,plusw1
  4854  011A8C  0EF0               	movlw	-16
  4855  011A8E  0060  F0C7  FFE3   	movff	btemp+11,plusw1
  4856                           
  4857                           ; BSR set to: 1
  4858  011A94  0060  F683  FFE6   	movff	_C+160,postinc1
  4859  011A9A  0060  F687  FFE6   	movff	_C+161,postinc1
  4860  011AA0  0060  F68B  FFE6   	movff	_C+162,postinc1
  4861  011AA6  0060  F68F  FFE6   	movff	_C+163,postinc1
  4862                           
  4863                           ;stkvar	_main$3720 @ sp[(-21)+0]
  4864  011AAC  0EEB               	movlw	-21
  4865  011AAE  006F FF8F FFE6     	movff	plusw1,postinc1
  4866  011AB4  006F FF8F FFE6     	movff	plusw1,postinc1
  4867  011ABA  0E9C               	movlw	low STR_25
  4868  011ABC  6EE6               	movwf	postinc1,c
  4869  011ABE  0EFD               	movlw	high STR_25
  4870  011AC0  6EE6               	movwf	postinc1,c
  4871  011AC2  0E01               	movlw	1
  4872  011AC4  6EE6               	movwf	postinc1,c
  4873  011AC6  0E00               	movlw	0
  4874  011AC8  6EE6               	movwf	postinc1,c
  4875  011ACA  ECE8  F0D8         	call	_get_vterm_ptr	;wreg free
  4876  011ACE  0060  F09B  FFE6   	movff	btemp,postinc1
  4877  011AD4  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4878  011ADA  0E0A               	movlw	10
  4879  011ADC  6EE6               	movwf	postinc1,c
  4880  011ADE  ECBB  F0C9         	call	_sprintf	;wreg free
  4881                           
  4882                           ; BSR set to: 0
  4883                           ;main.c: 352:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f     ", C.loadkw);
  4884  011AE2  0060  F6A3  FFE6   	movff	_C+168,postinc1
  4885  011AE8  0060  F6A7  FFE6   	movff	_C+169,postinc1
  4886  011AEE  0060  F6AB  FFE6   	movff	_C+170,postinc1
  4887  011AF4  0060  F6AF  FFE6   	movff	_C+171,postinc1
  4888  011AFA  0E99               	movlw	low STR_26
  4889  011AFC  6EE6               	movwf	postinc1,c
  4890  011AFE  0EFE               	movlw	high STR_26
  4891  011B00  6EE6               	movwf	postinc1,c
  4892  011B02  0E01               	movlw	1
  4893  011B04  6EE6               	movwf	postinc1,c
  4894  011B06  0E01               	movlw	1
  4895  011B08  6EE6               	movwf	postinc1,c
  4896  011B0A  ECE8  F0D8         	call	_get_vterm_ptr	;wreg free
  4897  011B0E  0060  F09B  FFE6   	movff	btemp,postinc1
  4898  011B14  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4899  011B1A  0E08               	movlw	8
  4900  011B1C  6EE6               	movwf	postinc1,c
  4901  011B1E  ECBB  F0C9         	call	_sprintf	;wreg free
  4902                           
  4903                           ; BSR set to: 0
  4904                           ;main.c: 353:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f     ", C.invkw);
  4905  011B22  0060  F693  FFE6   	movff	_C+164,postinc1
  4906  011B28  0060  F697  FFE6   	movff	_C+165,postinc1
  4907  011B2E  0060  F69B  FFE6   	movff	_C+166,postinc1
  4908  011B34  0060  F69F  FFE6   	movff	_C+167,postinc1
  4909  011B3A  0E86               	movlw	low STR_27
  4910  011B3C  6EE6               	movwf	postinc1,c
  4911  011B3E  0EFE               	movlw	high STR_27
  4912  011B40  6EE6               	movwf	postinc1,c
  4913  011B42  0E01               	movlw	1
  4914  011B44  6EE6               	movwf	postinc1,c
  4915  011B46  0E02               	movlw	2
  4916  011B48  6EE6               	movwf	postinc1,c
  4917  011B4A  ECE8  F0D8         	call	_get_vterm_ptr	;wreg free
  4918  011B4E  0060  F09B  FFE6   	movff	btemp,postinc1
  4919  011B54  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4920  011B5A  0E08               	movlw	8
  4921  011B5C  6EE6               	movwf	postinc1,c
  4922  011B5E  ECBB  F0C9         	call	_sprintf	;wreg free
  4923                           
  4924                           ;main.c: 354:      break;
  4925  011B62  D2F6               	goto	l13051
  4926  011B64                     l1360:
  4927                           
  4928                           ; BSR set to: 0
  4929                           ;main.c: 356:      V.calib = 0;
  4930  011B64  0102               	movlb	2	; () banked
  4931  011B66  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  4932                           
  4933                           ; BSR set to: 2
  4934                           ;main.c: 357:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.ca
      +                          lc[C_PV]);
  4935  011B68  0060  F413  FFE6   	movff	_C+4,postinc1
  4936  011B6E  0060  F417  FFE6   	movff	_C+5,postinc1
  4937  011B74  0060  F41B  FFE6   	movff	_C+6,postinc1
  4938  011B7A  0060  F41F  FFE6   	movff	_C+7,postinc1
  4939  011B80  0060  F453  FFE6   	movff	_C+20,postinc1
  4940  011B86  0060  F457  FFE6   	movff	_C+21,postinc1
  4941  011B8C  0060  F45B  FFE6   	movff	_C+22,postinc1
  4942  011B92  0060  F45F  FFE6   	movff	_C+23,postinc1
  4943  011B98  0EF8               	movlw	low STR_28
  4944  011B9A  6EE6               	movwf	postinc1,c
  4945  011B9C  0EFE               	movlw	high STR_28
  4946  011B9E  6EE6               	movwf	postinc1,c
  4947  011BA0  0E00               	movlw	0
  4948  011BA2  6EE6               	movwf	postinc1,c
  4949  011BA4  0E00               	movlw	0
  4950  011BA6  6EE6               	movwf	postinc1,c
  4951  011BA8  ECE8  F0D8         	call	_get_vterm_ptr	;wreg free
  4952  011BAC  0060  F09B  FFE6   	movff	btemp,postinc1
  4953  011BB2  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4954  011BB8  0E0C               	movlw	12
  4955  011BBA  6EE6               	movwf	postinc1,c
  4956  011BBC  ECBB  F0C9         	call	_sprintf	;wreg free
  4957                           
  4958                           ;main.c: 358:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.c
      +                          alc[C_BATT]);
  4959  011BC0  0060  F403  FFE6   	movff	_C,postinc1
  4960  011BC6  0060  F407  FFE6   	movff	_C+1,postinc1
  4961  011BCC  0060  F40B  FFE6   	movff	_C+2,postinc1
  4962  011BD2  0060  F40F  FFE6   	movff	_C+3,postinc1
  4963  011BD8  0060  F443  FFE6   	movff	_C+16,postinc1
  4964  011BDE  0060  F447  FFE6   	movff	_C+17,postinc1
  4965  011BE4  0060  F44B  FFE6   	movff	_C+18,postinc1
  4966  011BEA  0060  F44F  FFE6   	movff	_C+19,postinc1
  4967  011BF0  0ED2               	movlw	low STR_29
  4968  011BF2  6EE6               	movwf	postinc1,c
  4969  011BF4  0EFE               	movlw	high STR_29
  4970  011BF6  6EE6               	movwf	postinc1,c
  4971  011BF8  0E00               	movlw	0
  4972  011BFA  6EE6               	movwf	postinc1,c
  4973  011BFC  0E01               	movlw	1
  4974  011BFE  6EE6               	movwf	postinc1,c
  4975  011C00  ECE8  F0D8         	call	_get_vterm_ptr	;wreg free
  4976  011C04  0060  F09B  FFE6   	movff	btemp,postinc1
  4977  011C0A  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4978  011C10  0E0C               	movlw	12
  4979  011C12  6EE6               	movwf	postinc1,c
  4980  011C14  ECBB  F0C9         	call	_sprintf	;wreg free
  4981                           
  4982                           ;main.c: 359:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_
      +                          load);
  4983  011C18  0060  F503  FFE6   	movff	_C+64,postinc1
  4984  011C1E  0060  F507  FFE6   	movff	_C+65,postinc1
  4985  011C24  0060  F50B  FFE6   	movff	_C+66,postinc1
  4986  011C2A  0060  F50F  FFE6   	movff	_C+67,postinc1
  4987  011C30  0060  F423  FFE6   	movff	_C+8,postinc1
  4988  011C36  0060  F427  FFE6   	movff	_C+9,postinc1
  4989  011C3C  0060  F42B  FFE6   	movff	_C+10,postinc1
  4990  011C42  0060  F42F  FFE6   	movff	_C+11,postinc1
  4991  011C48  0EE5               	movlw	low STR_30
  4992  011C4A  6EE6               	movwf	postinc1,c
  4993  011C4C  0EFE               	movlw	high STR_30
  4994  011C4E  6EE6               	movwf	postinc1,c
  4995  011C50  0E00               	movlw	0
  4996  011C52  6EE6               	movwf	postinc1,c
  4997  011C54  0E02               	movlw	2
  4998  011C56  6EE6               	movwf	postinc1,c
  4999  011C58  ECE8  F0D8         	call	_get_vterm_ptr	;wreg free
  5000  011C5C  0060  F09B  FFE6   	movff	btemp,postinc1
  5001  011C62  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5002  011C68  0E0C               	movlw	12
  5003  011C6A  6EE6               	movwf	postinc1,c
  5004  011C6C  ECBB  F0C9         	call	_sprintf	;wreg free
  5005                           
  5006                           ;main.c: 361:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f     ", C.bkwi);
  5007  011C70  0060  F663  FFE6   	movff	_C+152,postinc1
  5008  011C76  0060  F667  FFE6   	movff	_C+153,postinc1
  5009  011C7C  0060  F66B  FFE6   	movff	_C+154,postinc1
  5010  011C82  0060  F66F  FFE6   	movff	_C+155,postinc1
  5011  011C88  0E4D               	movlw	low STR_31
  5012  011C8A  6EE6               	movwf	postinc1,c
  5013  011C8C  0EFE               	movlw	high STR_31
  5014  011C8E  6EE6               	movwf	postinc1,c
  5015  011C90  0E01               	movlw	1
  5016  011C92  6EE6               	movwf	postinc1,c
  5017  011C94  0E00               	movlw	0
  5018  011C96  6EE6               	movwf	postinc1,c
  5019  011C98  ECE8  F0D8         	call	_get_vterm_ptr	;wreg free
  5020  011C9C  0060  F09B  FFE6   	movff	btemp,postinc1
  5021  011CA2  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5022  011CA8  0E08               	movlw	8
  5023  011CAA  6EE6               	movwf	postinc1,c
  5024  011CAC  ECBB  F0C9         	call	_sprintf	;wreg free
  5025                           
  5026                           ;main.c: 362:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f     ", C.bkwo);
  5027  011CB0  0060  F673  FFE6   	movff	_C+156,postinc1
  5028  011CB6  0060  F677  FFE6   	movff	_C+157,postinc1
  5029  011CBC  0060  F67B  FFE6   	movff	_C+158,postinc1
  5030  011CC2  0060  F67F  FFE6   	movff	_C+159,postinc1
  5031  011CC8  0E60               	movlw	low STR_32
  5032  011CCA  6EE6               	movwf	postinc1,c
  5033  011CCC  0EFE               	movlw	high STR_32
  5034  011CCE  6EE6               	movwf	postinc1,c
  5035  011CD0  0E01               	movlw	1
  5036  011CD2  6EE6               	movwf	postinc1,c
  5037  011CD4  0E01               	movlw	1
  5038  011CD6  6EE6               	movwf	postinc1,c
  5039  011CD8  ECE8  F0D8         	call	_get_vterm_ptr	;wreg free
  5040  011CDC  0060  F09B  FFE6   	movff	btemp,postinc1
  5041  011CE2  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5042  011CE8  0E08               	movlw	8
  5043  011CEA  6EE6               	movwf	postinc1,c
  5044  011CEC  ECBB  F0C9         	call	_sprintf	;wreg free
  5045                           
  5046                           ;main.c: 363:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f     ", C.bkwi + C.bkwo);
  5047  011CF0  0060  F673  FFE6   	movff	_C+156,postinc1
  5048  011CF6  0060  F677  FFE6   	movff	_C+157,postinc1
  5049  011CFC  0060  F67B  FFE6   	movff	_C+158,postinc1
  5050  011D02  0060  F67F  FFE6   	movff	_C+159,postinc1
  5051  011D08  0060  F663  FFE6   	movff	_C+152,postinc1
  5052  011D0E  0060  F667  FFE6   	movff	_C+153,postinc1
  5053  011D14  0060  F66B  FFE6   	movff	_C+154,postinc1
  5054  011D1A  0060  F66F  FFE6   	movff	_C+155,postinc1
  5055  011D20  EC59  F09D         	call	___fladd	;wreg free
  5056  011D24  0060  F09B  FFE6   	movff	btemp,postinc1
  5057  011D2A  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5058  011D30  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  5059  011D36  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  5060  011D3C  0E73               	movlw	low STR_33
  5061  011D3E  6EE6               	movwf	postinc1,c
  5062  011D40  0EFE               	movlw	high STR_33
  5063  011D42  6EE6               	movwf	postinc1,c
  5064  011D44  0E01               	movlw	1
  5065  011D46  6EE6               	movwf	postinc1,c
  5066  011D48  0E02               	movlw	2
  5067  011D4A  6EE6               	movwf	postinc1,c
  5068  011D4C  ECE8  F0D8         	call	_get_vterm_ptr	;wreg free
  5069  011D50  0060  F09B  FFE6   	movff	btemp,postinc1
  5070  011D56  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5071  011D5C  0E08               	movlw	8
  5072  011D5E  6EE6               	movwf	postinc1,c
  5073  011D60  ECBB  F0C9         	call	_sprintf	;wreg free
  5074                           
  5075                           ;main.c: 364:      break;
  5076  011D64  D1F5               	goto	l13051
  5077  011D66                     l1361:
  5078                           
  5079                           ; BSR set to: 0
  5080                           ;main.c: 366:      V.calib = 0;
  5081  011D66  0102               	movlb	2	; () banked
  5082  011D68  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5083                           
  5084                           ; BSR set to: 2
  5085                           ;main.c: 367:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f     ", C.p_bat);
  5086  011D6A  0060  F5F3  FFE6   	movff	_C+124,postinc1
  5087  011D70  0060  F5F7  FFE6   	movff	_C+125,postinc1
  5088  011D76  0060  F5FB  FFE6   	movff	_C+126,postinc1
  5089  011D7C  0060  F5FF  FFE6   	movff	_C+127,postinc1
  5090  011D82  0EB0               	movlw	low STR_34
  5091  011D84  6EE6               	movwf	postinc1,c
  5092  011D86  0EFD               	movlw	high STR_34
  5093  011D88  6EE6               	movwf	postinc1,c
  5094  011D8A  0E00               	movlw	0
  5095  011D8C  6EE6               	movwf	postinc1,c
  5096  011D8E  0E00               	movlw	0
  5097  011D90  6EE6               	movwf	postinc1,c
  5098  011D92  ECE8  F0D8         	call	_get_vterm_ptr	;wreg free
  5099  011D96  0060  F09B  FFE6   	movff	btemp,postinc1
  5100  011D9C  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5101  011DA2  0E08               	movlw	8
  5102  011DA4  6EE6               	movwf	postinc1,c
  5103  011DA6  ECBB  F0C9         	call	_sprintf	;wreg free
  5104                           
  5105                           ;main.c: 368:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f   ", C.dynamic_ah, C.p
      +                          v_ah);
  5106  011DAA  0060  F643  FFE6   	movff	_C+144,postinc1
  5107  011DB0  0060  F647  FFE6   	movff	_C+145,postinc1
  5108  011DB6  0060  F64B  FFE6   	movff	_C+146,postinc1
  5109  011DBC  0060  F64F  FFE6   	movff	_C+147,postinc1
  5110  011DC2  0060  F633  FFE6   	movff	_C+140,postinc1
  5111  011DC8  0060  F637  FFE6   	movff	_C+141,postinc1
  5112  011DCE  0060  F63B  FFE6   	movff	_C+142,postinc1
  5113  011DD4  0060  F63F  FFE6   	movff	_C+143,postinc1
  5114  011DDA  0E00               	movlw	low STR_35
  5115  011DDC  6EE6               	movwf	postinc1,c
  5116  011DDE  0EFE               	movlw	high STR_35
  5117  011DE0  6EE6               	movwf	postinc1,c
  5118  011DE2  0E00               	movlw	0
  5119  011DE4  6EE6               	movwf	postinc1,c
  5120  011DE6  0E01               	movlw	1
  5121  011DE8  6EE6               	movwf	postinc1,c
  5122  011DEA  ECE8  F0D8         	call	_get_vterm_ptr	;wreg free
  5123  011DEE  0060  F09B  FFE6   	movff	btemp,postinc1
  5124  011DF4  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5125  011DFA  0E0C               	movlw	12
  5126  011DFC  6EE6               	movwf	postinc1,c
  5127  011DFE  ECBB  F0C9         	call	_sprintf	;wreg free
  5128                           
  5129                           ;main.c: 369:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d     ", spinners(5, 0), C
      +                          .soc, C.runtime);
  5130  011E02  0060  F6B3  FFE6   	movff	_C+172,postinc1
  5131  011E08  0060  F6B7  FFE6   	movff	_C+173,postinc1
  5132  011E0E  0060  F6BB  FFE6   	movff	_C+174,postinc1
  5133  011E14  0060  F6BF  FFE6   	movff	_C+175,postinc1
  5134  011E1A  0E00               	movlw	0
  5135  011E1C  6EE6               	movwf	postinc1,c
  5136  011E1E  0E05               	movlw	5
  5137  011E20  6EE6               	movwf	postinc1,c
  5138  011E22  ECBA  F0CC         	call	_spinners	;wreg free
  5139  011E26  5026               	movf	btemp^0,w,c
  5140  011E28  6EE6               	movwf	postinc1,c
  5141  011E2A  0E00               	movlw	0
  5142  011E2C  6EE6               	movwf	postinc1,c
  5143  011E2E  0E88               	movlw	low STR_36
  5144  011E30  6EE6               	movwf	postinc1,c
  5145  011E32  0EFD               	movlw	high STR_36
  5146  011E34  6EE6               	movwf	postinc1,c
  5147  011E36  0E00               	movlw	0
  5148  011E38  6EE6               	movwf	postinc1,c
  5149  011E3A  0E02               	movlw	2
  5150  011E3C  6EE6               	movwf	postinc1,c
  5151  011E3E  ECE8  F0D8         	call	_get_vterm_ptr	;wreg free
  5152  011E42  0060  F09B  FFE6   	movff	btemp,postinc1
  5153  011E48  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5154  011E4E  0E0A               	movlw	10
  5155  011E50  6EE6               	movwf	postinc1,c
  5156  011E52  ECBB  F0C9         	call	_sprintf	;wreg free
  5157                           
  5158                           ;main.c: 371:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f         ", C.esr);
  5159  011E56  0060  F613  FFE6   	movff	_C+132,postinc1
  5160  011E5C  0060  F617  FFE6   	movff	_C+133,postinc1
  5161  011E62  0060  F61B  FFE6   	movff	_C+134,postinc1
  5162  011E68  0060  F61F  FFE6   	movff	_C+135,postinc1
  5163  011E6E  0E74               	movlw	low STR_37
  5164  011E70  6EE6               	movwf	postinc1,c
  5165  011E72  0EFD               	movlw	high STR_37
  5166  011E74  6EE6               	movwf	postinc1,c
  5167  011E76  0E01               	movlw	1
  5168  011E78  6EE6               	movwf	postinc1,c
  5169  011E7A  0E00               	movlw	0
  5170  011E7C  6EE6               	movwf	postinc1,c
  5171  011E7E  ECE8  F0D8         	call	_get_vterm_ptr	;wreg free
  5172  011E82  0060  F09B  FFE6   	movff	btemp,postinc1
  5173  011E88  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5174  011E8E  0E08               	movlw	8
  5175  011E90  6EE6               	movwf	postinc1,c
  5176  011E92  ECBB  F0C9         	call	_sprintf	;wreg free
  5177                           
  5178                           ;main.c: 372:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f     ", C.bv_one_load, C.
      +                          load_i1);
  5179  011E96  0060  F78F  FFE6   	movff	_C+227,postinc1
  5180  011E9C  0060  F793  FFE6   	movff	_C+228,postinc1
  5181  011EA2  0060  F797  FFE6   	movff	_C+229,postinc1
  5182  011EA8  0060  F79B  FFE6   	movff	_C+230,postinc1
  5183  011EAE  0060  F7BF  FFE6   	movff	_C+239,postinc1
  5184  011EB4  0060  F7C3  FFE6   	movff	_C+240,postinc1
  5185  011EBA  0060  F7C7  FFE6   	movff	_C+241,postinc1
  5186  011EC0  0060  F7CB  FFE6   	movff	_C+242,postinc1
  5187  011EC6  0EC4               	movlw	low STR_38
  5188  011EC8  6EE6               	movwf	postinc1,c
  5189  011ECA  0EFD               	movlw	high STR_38
  5190  011ECC  6EE6               	movwf	postinc1,c
  5191  011ECE  0E01               	movlw	1
  5192  011ED0  6EE6               	movwf	postinc1,c
  5193  011ED2  0E01               	movlw	1
  5194  011ED4  6EE6               	movwf	postinc1,c
  5195  011ED6  ECE8  F0D8         	call	_get_vterm_ptr	;wreg free
  5196  011EDA  0060  F09B  FFE6   	movff	btemp,postinc1
  5197  011EE0  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5198  011EE6  0E0C               	movlw	12
  5199  011EE8  6EE6               	movwf	postinc1,c
  5200  011EEA  ECBB  F0C9         	call	_sprintf	;wreg free
  5201                           
  5202                           ;main.c: 373:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f     ", C.bv_full_load, C
      +                          .load_i2);
  5203  011EEE  0060  F79F  FFE6   	movff	_C+231,postinc1
  5204  011EF4  0060  F7A3  FFE6   	movff	_C+232,postinc1
  5205  011EFA  0060  F7A7  FFE6   	movff	_C+233,postinc1
  5206  011F00  0060  F7AB  FFE6   	movff	_C+234,postinc1
  5207  011F06  0060  F7CF  FFE6   	movff	_C+243,postinc1
  5208  011F0C  0060  F7D3  FFE6   	movff	_C+244,postinc1
  5209  011F12  0060  F7D7  FFE6   	movff	_C+245,postinc1
  5210  011F18  0060  F7DB  FFE6   	movff	_C+246,postinc1
  5211  011F1E  0ED8               	movlw	low STR_39
  5212  011F20  6EE6               	movwf	postinc1,c
  5213  011F22  0EFD               	movlw	high STR_39
  5214  011F24  6EE6               	movwf	postinc1,c
  5215  011F26  0E01               	movlw	1
  5216  011F28  6EE6               	movwf	postinc1,c
  5217  011F2A  0E02               	movlw	2
  5218  011F2C  6EE6               	movwf	postinc1,c
  5219  011F2E  ECE8  F0D8         	call	_get_vterm_ptr	;wreg free
  5220  011F32  0060  F09B  FFE6   	movff	btemp,postinc1
  5221  011F38  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5222  011F3E  0E0C               	movlw	12
  5223  011F40  6EE6               	movwf	postinc1,c
  5224  011F42  ECBB  F0C9         	call	_sprintf	;wreg free
  5225                           
  5226                           ;main.c: 374:      break;
  5227  011F46  D104               	goto	l13051
  5228  011F48                     l13035:
  5229                           
  5230                           ; BSR set to: 0
  5231                           ;main.c: 376:      if (!V.calib) {
  5232  011F48  0102               	movlb	2	; () banked
  5233  011F4A  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
  5234  011F4C  A4D8               	btfss	status,2,c
  5235  011F4E  D02D               	goto	l13039
  5236                           
  5237                           ; BSR set to: 2
  5238                           ;main.c: 377:       lp_filter(0.0, i, -1);
  5239  011F50  0EFF               	movlw	255
  5240  011F52  6EE6               	movwf	postinc1,c
  5241                           
  5242                           ;stkvar	_i @ sp[(-18)+13]
  5243  011F54  0EFB               	movlw	-5
  5244  011F56  50E3               	movf	plusw1,w,c
  5245  011F58  6EE6               	movwf	postinc1,c
  5246  011F5A  0E00               	movlw	0
  5247  011F5C  6EE6               	movwf	postinc1,c
  5248  011F5E  0E00               	movlw	0
  5249  011F60  6EE6               	movwf	postinc1,c
  5250  011F62  0E00               	movlw	0
  5251  011F64  6EE6               	movwf	postinc1,c
  5252  011F66  0E00               	movlw	0
  5253  011F68  6EE6               	movwf	postinc1,c
  5254  011F6A  EC19  F0BF         	call	_lp_filter	;wreg free
  5255                           
  5256                           ;main.c: 378:       lp_filter(0.0, j, -1);
  5257  011F6E  0EFF               	movlw	255
  5258  011F70  6EE6               	movwf	postinc1,c
  5259                           
  5260                           ;stkvar	_j @ sp[(-18)+12]
  5261  011F72  0EFA               	movlw	-6
  5262  011F74  50E3               	movf	plusw1,w,c
  5263  011F76  6EE6               	movwf	postinc1,c
  5264  011F78  0E00               	movlw	0
  5265  011F7A  6EE6               	movwf	postinc1,c
  5266  011F7C  0E00               	movlw	0
  5267  011F7E  6EE6               	movwf	postinc1,c
  5268  011F80  0E00               	movlw	0
  5269  011F82  6EE6               	movwf	postinc1,c
  5270  011F84  0E00               	movlw	0
  5271  011F86  6EE6               	movwf	postinc1,c
  5272  011F88  EC19  F0BF         	call	_lp_filter	;wreg free
  5273                           
  5274                           ;main.c: 379:       lp_filter(0.0, k, -1);
  5275  011F8C  0EFF               	movlw	255
  5276  011F8E  6EE6               	movwf	postinc1,c
  5277                           
  5278                           ;stkvar	_k @ sp[(-18)+11]
  5279  011F90  0EF9               	movlw	-7
  5280  011F92  50E3               	movf	plusw1,w,c
  5281  011F94  6EE6               	movwf	postinc1,c
  5282  011F96  0E00               	movlw	0
  5283  011F98  6EE6               	movwf	postinc1,c
  5284  011F9A  0E00               	movlw	0
  5285  011F9C  6EE6               	movwf	postinc1,c
  5286  011F9E  0E00               	movlw	0
  5287  011FA0  6EE6               	movwf	postinc1,c
  5288  011FA2  0E00               	movlw	0
  5289  011FA4  6EE6               	movwf	postinc1,c
  5290  011FA6  EC19  F0BF         	call	_lp_filter	;wreg free
  5291  011FAA                     l13039:
  5292                           
  5293                           ;main.c: 381:      V.calib = 1;
  5294  011FAA  0E01               	movlw	1
  5295  011FAC  0102               	movlb	2	; () banked
  5296  011FAE  6FB3               	movwf	(_V+172)& (0+255),b	;volatile
  5297                           
  5298                           ; BSR set to: 2
  5299                           ;main.c: 382:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d  ", get_raw_result(i), C.
      +                          calc[i], get_switch(SSELECT));
  5300  011FB0  0E02               	movlw	2
  5301  011FB2  6EE6               	movwf	postinc1,c
  5302  011FB4  ECFF  F0D8         	call	_get_switch	;wreg free
  5303  011FB8  5026               	movf	btemp^0,w,c
  5304  011FBA  6EE6               	movwf	postinc1,c
  5305  011FBC  0E00               	movlw	0
  5306  011FBE  6EE6               	movwf	postinc1,c
  5307                           
  5308                           ;stkvar	_i @ sp[(-19)+13]
  5309  011FC0  0EFA               	movlw	-6
  5310  011FC2  50E3               	movf	plusw1,w,c
  5311  011FC4  0D04               	mullw	4
  5312  011FC6  0E00               	movlw	low _C
  5313  011FC8  24F3               	addwf	243,w,c
  5314  011FCA  6ED9               	movwf	fsr2l,c
  5315  011FCC  0E01               	movlw	high _C
  5316  011FCE  20F4               	addwfc	prodh,w,c
  5317  011FD0  6EDA               	movwf	fsr2h,c
  5318  011FD2  006F FF7B FFE6     	movff	postinc2,postinc1
  5319  011FD8  006F FF7B FFE6     	movff	postinc2,postinc1
  5320  011FDE  006F FF7B FFE6     	movff	postinc2,postinc1
  5321  011FE4  006F FF7B FFE6     	movff	postinc2,postinc1
  5322                           
  5323                           ;stkvar	_i @ sp[(-23)+13]
  5324  011FEA  0EF6               	movlw	-10
  5325  011FEC  50E3               	movf	plusw1,w,c
  5326  011FEE  6EE6               	movwf	postinc1,c
  5327  011FF0  EC85  F0DB         	call	_get_raw_result	;wreg free
  5328  011FF4  0060  F09B  FFE6   	movff	btemp,postinc1
  5329  011FFA  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5330  012000  0E83               	movlw	low STR_19
  5331  012002  6EE6               	movwf	postinc1,c
  5332  012004  0EFF               	movlw	high STR_19
  5333  012006  6EE6               	movwf	postinc1,c
  5334  012008  0E00               	movlw	0
  5335  01200A  6EE6               	movwf	postinc1,c
  5336  01200C  0E00               	movlw	0
  5337  01200E  6EE6               	movwf	postinc1,c
  5338  012010  ECE8  F0D8         	call	_get_vterm_ptr	;wreg free
  5339  012014  0060  F09B  FFE6   	movff	btemp,postinc1
  5340  01201A  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5341  012020  0E0C               	movlw	12
  5342  012022  6EE6               	movwf	postinc1,c
  5343  012024  ECBB  F0C9         	call	_sprintf	;wreg free
  5344                           
  5345                           ; BSR set to: 0
  5346                           ;main.c: 383:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d  ", get_raw_result(j), C.
      +                          calc[j], get_switch(SENTER));
  5347  012028  0E03               	movlw	3
  5348  01202A  6EE6               	movwf	postinc1,c
  5349  01202C  ECFF  F0D8         	call	_get_switch	;wreg free
  5350  012030  5026               	movf	btemp^0,w,c
  5351  012032  6EE6               	movwf	postinc1,c
  5352  012034  0E00               	movlw	0
  5353  012036  6EE6               	movwf	postinc1,c
  5354                           
  5355                           ;stkvar	_j @ sp[(-19)+12]
  5356  012038  0EF9               	movlw	-7
  5357  01203A  50E3               	movf	plusw1,w,c
  5358  01203C  0D04               	mullw	4
  5359  01203E  0E00               	movlw	low _C
  5360  012040  24F3               	addwf	243,w,c
  5361  012042  6ED9               	movwf	fsr2l,c
  5362  012044  0E01               	movlw	high _C
  5363  012046  20F4               	addwfc	prodh,w,c
  5364  012048  6EDA               	movwf	fsr2h,c
  5365  01204A  006F FF7B FFE6     	movff	postinc2,postinc1
  5366  012050  006F FF7B FFE6     	movff	postinc2,postinc1
  5367  012056  006F FF7B FFE6     	movff	postinc2,postinc1
  5368  01205C  006F FF7B FFE6     	movff	postinc2,postinc1
  5369                           
  5370                           ;stkvar	_j @ sp[(-23)+12]
  5371  012062  0EF5               	movlw	-11
  5372  012064  50E3               	movf	plusw1,w,c
  5373  012066  6EE6               	movwf	postinc1,c
  5374  012068  EC85  F0DB         	call	_get_raw_result	;wreg free
  5375  01206C  0060  F09B  FFE6   	movff	btemp,postinc1
  5376  012072  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5377  012078  0E83               	movlw	low STR_19
  5378  01207A  6EE6               	movwf	postinc1,c
  5379  01207C  0EFF               	movlw	high STR_19
  5380  01207E  6EE6               	movwf	postinc1,c
  5381  012080  0E00               	movlw	0
  5382  012082  6EE6               	movwf	postinc1,c
  5383  012084  0E01               	movlw	1
  5384  012086  6EE6               	movwf	postinc1,c
  5385  012088  ECE8  F0D8         	call	_get_vterm_ptr	;wreg free
  5386  01208C  0060  F09B  FFE6   	movff	btemp,postinc1
  5387  012092  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5388  012098  0E0C               	movlw	12
  5389  01209A  6EE6               	movwf	postinc1,c
  5390  01209C  ECBB  F0C9         	call	_sprintf	;wreg free
  5391                           
  5392                           ; BSR set to: 0
  5393                           ;main.c: 384:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(k), C
      +                          .calc[k], inp_index + 1);
  5394                           ;stkvar	_inp_index @ sp[(-17)+14]
  5395  0120A0  0EFD               	movlw	-3
  5396  0120A2  50E3               	movf	plusw1,w,c
  5397  0120A4  6E30               	movwf	(btemp+10)^0,c
  5398  0120A6  6A31               	clrf	(btemp+11)^0,c
  5399  0120A8  0E01               	movlw	1
  5400  0120AA  2630               	addwf	(btemp+10)^0,f,c
  5401  0120AC  0E00               	movlw	0
  5402  0120AE  2231               	addwfc	(btemp+11)^0,f,c
  5403  0120B0  0060  F0C3  FFE6   	movff	btemp+10,postinc1
  5404  0120B6  0060  F0C7  FFE6   	movff	btemp+11,postinc1
  5405                           
  5406                           ;stkvar	_k @ sp[(-19)+11]
  5407  0120BC  0EF8               	movlw	-8
  5408  0120BE  50E3               	movf	plusw1,w,c
  5409  0120C0  0D04               	mullw	4
  5410  0120C2  0E00               	movlw	low _C
  5411  0120C4  24F3               	addwf	243,w,c
  5412  0120C6  6ED9               	movwf	fsr2l,c
  5413  0120C8  0E01               	movlw	high _C
  5414  0120CA  20F4               	addwfc	prodh,w,c
  5415  0120CC  6EDA               	movwf	fsr2h,c
  5416  0120CE  006F FF7B FFE6     	movff	postinc2,postinc1
  5417  0120D4  006F FF7B FFE6     	movff	postinc2,postinc1
  5418  0120DA  006F FF7B FFE6     	movff	postinc2,postinc1
  5419  0120E0  006F FF7B FFE6     	movff	postinc2,postinc1
  5420                           
  5421                           ;stkvar	_k @ sp[(-23)+11]
  5422  0120E6  0EF4               	movlw	-12
  5423  0120E8  50E3               	movf	plusw1,w,c
  5424  0120EA  6EE6               	movwf	postinc1,c
  5425  0120EC  EC85  F0DB         	call	_get_raw_result	;wreg free
  5426  0120F0  0060  F09B  FFE6   	movff	btemp,postinc1
  5427  0120F6  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5428  0120FC  0E61               	movlw	low STR_21
  5429  0120FE  6EE6               	movwf	postinc1,c
  5430  012100  0EFF               	movlw	high STR_21
  5431  012102  6EE6               	movwf	postinc1,c
  5432  012104  0E00               	movlw	0
  5433  012106  6EE6               	movwf	postinc1,c
  5434  012108  0E02               	movlw	2
  5435  01210A  6EE6               	movwf	postinc1,c
  5436  01210C  ECE8  F0D8         	call	_get_vterm_ptr	;wreg free
  5437  012110  0060  F09B  FFE6   	movff	btemp,postinc1
  5438  012116  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5439  01211C  0E0C               	movlw	12
  5440  01211E  6EE6               	movwf	postinc1,c
  5441  012120  ECBB  F0C9         	call	_sprintf	;wreg free
  5442                           
  5443                           ;main.c: 385:      break;
  5444  012124  D015               	goto	l13051
  5445  012126                     l13049:
  5446  012126  0100               	movlb	0	; () banked
  5447  012128  51D9               	movf	_H& (0+255),w,b
  5448  01212A  6E30               	movwf	(btemp+10)^0,c
  5449  01212C  6A31               	clrf	(btemp+11)^0,c
  5450                           
  5451                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5452                           ; Switch size 1, requested type "simple"
  5453                           ; Number of cases is 1, Range of values is 0 to 0
  5454                           ; switch strategies available:
  5455                           ; Name         Instructions Cycles
  5456                           ; simple_byte            4     3 (average)
  5457                           ;	Chosen strategy is simple_byte
  5458  01212E  5031               	movf	(btemp+11)^0,w,c
  5459  012130  0A00               	xorlw	0	; case 0
  5460  012132  A4D8               	btfss	status,2,c
  5461  012134  D00D               	goto	l13051
  5462                           
  5463                           ; BSR set to: 0
  5464                           ; Switch size 1, requested type "simple"
  5465                           ; Number of cases is 4, Range of values is 0 to 3
  5466                           ; switch strategies available:
  5467                           ; Name         Instructions Cycles
  5468                           ; simple_byte           13     7 (average)
  5469                           ;	Chosen strategy is simple_byte
  5470  012136  5030               	movf	(btemp+10)^0,w,c
  5471  012138  0A00               	xorlw	0	; case 0
  5472  01213A  B4D8               	btfsc	status,2,c
  5473  01213C  D513               	goto	l1360
  5474  01213E  0A01               	xorlw	1	; case 1
  5475  012140  B4D8               	btfsc	status,2,c
  5476  012142  D41B               	goto	l1350
  5477  012144  0A03               	xorlw	3	; case 2
  5478  012146  B4D8               	btfsc	status,2,c
  5479  012148  D60E               	goto	l1361
  5480  01214A  0A01               	xorlw	1	; case 3
  5481  01214C  B4D8               	btfsc	status,2,c
  5482  01214E  D6FC               	goto	l13035
  5483  012150                     l13051:
  5484                           
  5485                           ; BSR set to: 0
  5486                           ;main.c: 389:     clear_hid_pflags(&H);
  5487  012150  0ED9               	movlw	_H& (0+255)
  5488  012152  6EE6               	movwf	postinc1,c
  5489  012154  ECBD  F0DA         	call	_clear_hid_pflags	;wreg free
  5490                           
  5491                           ;main.c: 391:    StartTimer(TMR_DISPLAY, 250);
  5492  012158  0EFA               	movlw	250
  5493  01215A  6EE6               	movwf	postinc1,c
  5494  01215C  0E00               	movlw	0
  5495  01215E  6EE6               	movwf	postinc1,c
  5496  012160  0E0A               	movlw	10
  5497  012162  6EE6               	movwf	postinc1,c
  5498  012164  EC12  F0D7         	call	_StartTimer	;wreg free
  5499                           
  5500                           ;main.c: 392:    V.enter = check_enter_button(&H);
  5501  012168  0ED9               	movlw	_H& (0+255)
  5502  01216A  6EE6               	movwf	postinc1,c
  5503  01216C  EC32  F0D7         	call	_check_enter_button	;wreg free
  5504  012170  5026               	movf	btemp^0,w,c
  5505  012172  0102               	movlb	2	; () banked
  5506  012174  6FB4               	movwf	(_V+173)& (0+255),b	;volatile
  5507                           
  5508                           ; BSR set to: 2
  5509                           ;main.c: 393:    if (V.enter && (H.hid_display != HID_AUX)) {
  5510  012176  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  5511  012178  B4D8               	btfsc	status,2,c
  5512  01217A  D013               	goto	l13065
  5513                           
  5514                           ; BSR set to: 2
  5515  01217C  0E03               	movlw	3
  5516  01217E  0100               	movlb	0	; () banked
  5517  012180  19D9               	xorwf	_H& (0+255),w,b
  5518  012182  B4D8               	btfsc	status,2,c
  5519  012184  D00E               	goto	l13065
  5520                           
  5521                           ; BSR set to: 0
  5522                           ;main.c: 394:     V.enter = 0;
  5523  012186  0102               	movlb	2	; () banked
  5524  012188  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  5525                           
  5526                           ; BSR set to: 2
  5527                           ;main.c: 395:     V.screen = ~V.screen;
  5528  01218A  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  5529  01218C  D002               	goto	u12550
  5530  01218E  0E01               	movlw	1
  5531  012190  D001               	goto	u12556
  5532  012192                     u12550:
  5533  012192  0E00               	movlw	0
  5534  012194                     u12556:
  5535  012194  0AFF               	xorlw	255
  5536  012196  6E31               	movwf	(btemp+11)^0,c
  5537  012198  51A3               	movf	(_V+156)& (0+255),w,b	;volatile
  5538  01219A  1831               	xorwf	(btemp+11)^0,w,c
  5539  01219C  0BFE               	andlw	-2
  5540  01219E  1831               	xorwf	(btemp+11)^0,w,c
  5541  0121A0  6FA3               	movwf	(_V+156)& (0+255),b	;volatile
  5542  0121A2                     l13065:
  5543                           
  5544                           ;main.c: 397:    set_vterm(V.screen);
  5545  0121A2  0102               	movlb	2	; () banked
  5546  0121A4  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  5547  0121A6  D002               	goto	u12560
  5548  0121A8  0E01               	movlw	1
  5549  0121AA  D001               	goto	u12566
  5550  0121AC                     u12560:
  5551  0121AC  0E00               	movlw	0
  5552  0121AE                     u12566:
  5553  0121AE  6EE6               	movwf	postinc1,c
  5554  0121B0  EC67  F0DB         	call	_set_vterm	;wreg free
  5555                           
  5556                           ;main.c: 398:    update_lcd(V.screen);
  5557  0121B4  0102               	movlb	2	; () banked
  5558  0121B6  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  5559  0121B8  D002               	goto	u12570
  5560  0121BA  0E01               	movlw	1
  5561  0121BC  D001               	goto	u12576
  5562  0121BE                     u12570:
  5563  0121BE  0E00               	movlw	0
  5564  0121C0                     u12576:
  5565  0121C0  6EE6               	movwf	postinc1,c
  5566  0121C2  EC33  F0C9         	call	_update_lcd	;wreg free
  5567  0121C6                     l13069:
  5568                           
  5569                           ;main.c: 404:   check_help(V.flipper);
  5570  0121C6  0102               	movlb	2	; () banked
  5571  0121C8  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
  5572  0121CA  6EE6               	movwf	postinc1,c
  5573  0121CC  EC0E  F0BC         	call	_check_help	;wreg free
  5574                           
  5575                           ;main.c: 406:   if (V.enter) {
  5576  0121D0  0102               	movlb	2	; () banked
  5577  0121D2  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  5578  0121D4  B4D8               	btfsc	status,2,c
  5579  0121D6  D062               	goto	l1366
  5580                           
  5581                           ; BSR set to: 2
  5582                           ;main.c: 407:    V.enter = 0;
  5583  0121D8  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  5584                           
  5585                           ;main.c: 408:    V.calib = 0;
  5586  0121DA  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5587                           
  5588                           ; BSR set to: 2
  5589                           ;main.c: 409:    inp_index += 3;
  5590                           ;stkvar	_inp_index @ sp[(-17)+14]
  5591  0121DC  0EFD               	movlw	-3
  5592  0121DE  006F FF8C  F026    	movff	plusw1,btemp
  5593  0121E4  0E03               	movlw	3
  5594  0121E6  2626               	addwf	btemp^0,f,c
  5595  0121E8  0EFD               	movlw	-3
  5596  0121EA  0060  F09B  FFE3   	movff	btemp,plusw1
  5597                           
  5598                           ;main.c: 410:    if (inp_index > 9)
  5599                           ;stkvar	_inp_index @ sp[(-17)+14]
  5600  0121F0  0EFD               	movlw	-3
  5601  0121F2  006F FF8C  F026    	movff	plusw1,btemp
  5602  0121F8  0E09               	movlw	9
  5603  0121FA  6426               	cpfsgt	btemp^0,c
  5604  0121FC  D03A               	goto	l13097
  5605                           
  5606                           ; BSR set to: 2
  5607                           ;main.c: 411:     inp_index = 0;
  5608                           ;stkvar	_inp_index @ sp[(-17)+14]
  5609  0121FE  0EFD               	movlw	-3
  5610  012200  6AE3               	clrf	plusw1,c
  5611  012202  D037               	goto	l13097
  5612  012204                     l13079:
  5613                           
  5614                           ; BSR set to: 2
  5615                           ;main.c: 414:     i = C_BATT;
  5616                           ;stkvar	_i @ sp[(-17)+13]
  5617  012204  0EFC               	movlw	-4
  5618  012206  6AE3               	clrf	plusw1,c
  5619                           
  5620                           ; BSR set to: 2
  5621                           ;main.c: 415:     j = C_PV;
  5622                           ;stkvar	_j @ sp[(-17)+12]
  5623  012208  0EFB               	movlw	-5
  5624  01220A  6AE3               	clrf	plusw1,c
  5625  01220C  2AE3               	incf	plusw1,f,c
  5626                           
  5627                           ; BSR set to: 2
  5628                           ;main.c: 416:     k = V_CC;
  5629                           ;stkvar	_k @ sp[(-17)+11]
  5630  01220E  0EFA               	movlw	-6
  5631  012210  6AE3               	clrf	plusw1,c
  5632  012212  82E3               	bsf	plusw1,1,c
  5633                           
  5634                           ;main.c: 417:     break;
  5635  012214  D043               	goto	l1366
  5636  012216                     l13085:
  5637                           
  5638                           ; BSR set to: 2
  5639                           ;main.c: 419:     i = V_BAT;
  5640                           ;stkvar	_i @ sp[(-17)+13]
  5641  012216  0EFC               	movlw	-4
  5642  012218  6AE3               	clrf	plusw1,c
  5643  01221A  84E3               	bsf	plusw1,2,c
  5644                           
  5645                           ;main.c: 420:     j = V_PV;
  5646                           ;stkvar	_j @ sp[(-17)+12]
  5647  01221C  0EFB               	movlw	-5
  5648  01221E  6AE3               	clrf	plusw1,c
  5649  012220  80E3               	bsf	plusw1,0,c
  5650  012222  84E3               	bsf	plusw1,2,c	;indir
  5651                           
  5652                           ;main.c: 421:     k = V_CBUS;
  5653                           ;stkvar	_k @ sp[(-17)+11]
  5654  012224  0EFA               	movlw	-6
  5655  012226  6AE3               	clrf	plusw1,c
  5656  012228  82E3               	bsf	plusw1,1,c
  5657  01222A  84E3               	bsf	plusw1,2,c	;indir
  5658                           
  5659                           ;main.c: 422:     break;
  5660  01222C  D037               	goto	l1366
  5661  01222E                     l13087:
  5662                           
  5663                           ; BSR set to: 2
  5664                           ;main.c: 424:     i = V_BBAT;
  5665                           ;stkvar	_i @ sp[(-17)+13]
  5666  01222E  0EFC               	movlw	-4
  5667  012230  6AE3               	clrf	plusw1,c
  5668  012232  82E3               	bsf	plusw1,1,c
  5669  012234  86E3               	bsf	plusw1,3,c	;indir
  5670                           
  5671                           ; BSR set to: 2
  5672                           ;main.c: 425:     j = V_TEMP;
  5673  012236  0E0B               	movlw	11
  5674  012238  6E31               	movwf	(btemp+11)^0,c
  5675                           
  5676                           ;stkvar	_j @ sp[(-17)+12]
  5677  01223A  0EFB               	movlw	-5
  5678  01223C  0060  F0C7  FFE3   	movff	btemp+11,plusw1
  5679                           
  5680                           ; BSR set to: 2
  5681                           ;main.c: 426:     k = V_INVERTER;
  5682                           ;stkvar	_k @ sp[(-17)+11]
  5683  012242  0EFA               	movlw	-6
  5684  012244  6AE3               	clrf	plusw1,c
  5685  012246  84E3               	bsf	plusw1,2,c
  5686  012248  86E3               	bsf	plusw1,3,c	;indir
  5687                           
  5688                           ;main.c: 427:     break;
  5689  01224A  D028               	goto	l1366
  5690  01224C                     l13093:
  5691                           
  5692                           ; BSR set to: 2
  5693                           ;main.c: 429:     i = V_LIGHT_SENSOR;
  5694  01224C  0E0D               	movlw	13
  5695  01224E  6E31               	movwf	(btemp+11)^0,c
  5696                           
  5697                           ;stkvar	_i @ sp[(-17)+13]
  5698  012250  0EFC               	movlw	-4
  5699  012252  0060  F0C7  FFE3   	movff	btemp+11,plusw1
  5700                           
  5701                           ;main.c: 430:     j = V_LIGHT_SENSOR;
  5702  012258  0E0D               	movlw	13
  5703  01225A  6E31               	movwf	(btemp+11)^0,c
  5704                           
  5705                           ;stkvar	_j @ sp[(-17)+12]
  5706  01225C  0EFB               	movlw	-5
  5707  01225E  0060  F0C7  FFE3   	movff	btemp+11,plusw1
  5708                           
  5709                           ;main.c: 431:     k = V_LIGHT_SENSOR;
  5710  012264  0E0D               	movlw	13
  5711  012266  6E31               	movwf	(btemp+11)^0,c
  5712                           
  5713                           ;stkvar	_k @ sp[(-17)+11]
  5714  012268  0EFA               	movlw	-6
  5715  01226A  0060  F0C7  FFE3   	movff	btemp+11,plusw1
  5716                           
  5717                           ;main.c: 432:     break;
  5718  012270  D015               	goto	l1366
  5719  012272                     l13097:
  5720                           
  5721                           ; BSR set to: 2
  5722                           ;stkvar	_inp_index @ sp[(-17)+14]
  5723  012272  0EFD               	movlw	-3
  5724  012274  50E3               	movf	plusw1,w,c
  5725  012276  6E30               	movwf	(btemp+10)^0,c
  5726  012278  6A31               	clrf	(btemp+11)^0,c
  5727                           
  5728                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5729                           ; Switch size 1, requested type "simple"
  5730                           ; Number of cases is 1, Range of values is 0 to 0
  5731                           ; switch strategies available:
  5732                           ; Name         Instructions Cycles
  5733                           ; simple_byte            4     3 (average)
  5734                           ;	Chosen strategy is simple_byte
  5735  01227A  5031               	movf	(btemp+11)^0,w,c
  5736  01227C  0A00               	xorlw	0	; case 0
  5737  01227E  A4D8               	btfss	status,2,c
  5738  012280  D00D               	goto	l1366
  5739                           
  5740                           ; BSR set to: 2
  5741                           ; Switch size 1, requested type "simple"
  5742                           ; Number of cases is 4, Range of values is 0 to 9
  5743                           ; switch strategies available:
  5744                           ; Name         Instructions Cycles
  5745                           ; simple_byte           13     7 (average)
  5746                           ;	Chosen strategy is simple_byte
  5747  012282  5030               	movf	(btemp+10)^0,w,c
  5748  012284  0A00               	xorlw	0	; case 0
  5749  012286  B4D8               	btfsc	status,2,c
  5750  012288  D7BD               	goto	l13079
  5751  01228A  0A03               	xorlw	3	; case 3
  5752  01228C  B4D8               	btfsc	status,2,c
  5753  01228E  D7C3               	goto	l13085
  5754  012290  0A05               	xorlw	5	; case 6
  5755  012292  B4D8               	btfsc	status,2,c
  5756  012294  D7CC               	goto	l13087
  5757  012296  0A0F               	xorlw	15	; case 9
  5758  012298  B4D8               	btfsc	status,2,c
  5759  01229A  D7D8               	goto	l13093
  5760  01229C                     l1366:
  5761                           
  5762                           ; BSR set to: 2
  5763                           ;main.c: 441:   if (V.set_sequ) {
  5764  01229C  A1A2               	btfss	(_V+155)& (0+255),0,b	;volatile
  5765  01229E  EF72  F08C         	goto	l12979
  5766                           
  5767                           ; BSR set to: 2
  5768                           ;main.c: 442:    if (TimerDone(TMR_INFO)) {
  5769  0122A2  0E07               	movlw	7
  5770  0122A4  6EE6               	movwf	postinc1,c
  5771  0122A6  EC93  F0D9         	call	_TimerDone	;wreg free
  5772  0122AA  5026               	movf	btemp^0,w,c
  5773  0122AC  B4D8               	btfsc	status,2,c
  5774  0122AE  D00C               	goto	l13107
  5775                           
  5776                           ;main.c: 443:     V.set_sequ = 0;
  5777  0122B0  0102               	movlb	2	; () banked
  5778  0122B2  91A2               	bcf	(_V+155)& (0+255),0,b	;volatile
  5779                           
  5780                           ; BSR set to: 2
  5781                           ;main.c: 444:     set_vterm(0);
  5782  0122B4  0E00               	movlw	0
  5783  0122B6  6EE6               	movwf	postinc1,c
  5784  0122B8  EC67  F0DB         	call	_set_vterm	;wreg free
  5785                           
  5786                           ;main.c: 445:     update_lcd(0);
  5787  0122BC  0E00               	movlw	0
  5788  0122BE  6EE6               	movwf	postinc1,c
  5789  0122C0  EC33  F0C9         	call	_update_lcd	;wreg free
  5790                           
  5791                           ;main.c: 446:    } else {
  5792  0122C4  EF72  F08C         	goto	l12979
  5793  0122C8                     l13107:
  5794                           
  5795                           ;main.c: 447:     set_vterm(2);
  5796  0122C8  0E02               	movlw	2
  5797  0122CA  6EE6               	movwf	postinc1,c
  5798  0122CC  EC67  F0DB         	call	_set_vterm	;wreg free
  5799                           
  5800                           ;main.c: 448:     update_lcd(2);
  5801  0122D0  0E02               	movlw	2
  5802  0122D2  6EE6               	movwf	postinc1,c
  5803  0122D4  EC33  F0C9         	call	_update_lcd	;wreg free
  5804  0122D8  EF72  F08C         	goto	l12979
  5805  0122DC                     __end_of_main:
  5806                           	opt callstack 0
  5807                           
  5808 ;; *************** function _static_soc *****************
  5809 ;; Defined at:
  5810 ;;		line 116 in file "mbmc.c"
  5811 ;; Parameters:    Size  Location     Type
  5812 ;;		None
  5813 ;; Auto vars:     Size  Location     Type
  5814 ;;		None
  5815 ;; Return value:  Size  Location     Type
  5816 ;;                  1  [STACK] void 
  5817 ;; Registers used:
  5818 ;;		wreg, status,2
  5819 ;; Tracked objects:
  5820 ;;		On entry : 0/0
  5821 ;;		On exit  : 3F/1
  5822 ;;		Unchanged: 0/0
  5823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5828 ;;Total ram usage:        0 bytes
  5829 ;; Hardware stack levels used:    1
  5830 ;; Hardware stack levels required when called:   15
  5831 ;; This function calls:
  5832 ;;		Nothing
  5833 ;; This function is called by:
  5834 ;;		_main
  5835 ;; This function uses a reentrant model
  5836 ;;
  5837                           
  5838                           	psect	text1
  5839  01B556                     __ptext1:
  5840                           	opt callstack 0
  5841  01B556                     _static_soc:
  5842                           	opt callstack 15
  5843                           
  5844                           ;mbmc.c: 118:  C.runtime = 120;
  5845                           
  5846                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5847                           ;incstack = 0
  5848  01B556  0E00               	movlw	0
  5849  01B558  0101               	movlb	1	; () banked
  5850  01B55A  6FAD               	movwf	(_C+173)& (0+255),b	;volatile
  5851  01B55C  0E78               	movlw	120
  5852  01B55E  6FAC               	movwf	(_C+172)& (0+255),b	;volatile
  5853                           
  5854                           ;mbmc.c: 119:  C.soc = 100;
  5855  01B560  0E00               	movlw	0
  5856  01B562  6FAF               	movwf	(_C+175)& (0+255),b	;volatile
  5857  01B564  0E64               	movlw	100
  5858  01B566  6FAE               	movwf	(_C+174)& (0+255),b	;volatile
  5859                           
  5860                           ; BSR set to: 1
  5861                           ;mbmc.c: 120:  C.dynamic_ah = C.bank_ah;
  5862  01B568  C188  F18C         	movff	_C+136,_C+140	;volatile
  5863  01B56C  C189  F18D         	movff	_C+137,_C+141	;volatile
  5864  01B570  C18A  F18E         	movff	_C+138,_C+142	;volatile
  5865  01B574  C18B  F18F         	movff	_C+139,_C+143	;volatile
  5866                           
  5867                           ; BSR set to: 1
  5868                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  5869  01B578  0012               	return		;funcret
  5870  01B57A                     __end_of_static_soc:
  5871                           	opt callstack 0
  5872                           
  5873 ;; *************** function _start_switch_handler *****************
  5874 ;; Defined at:
  5875 ;;		line 121 in file "dio.c"
  5876 ;; Parameters:    Size  Location     Type
  5877 ;;		None
  5878 ;; Auto vars:     Size  Location     Type
  5879 ;;		None
  5880 ;; Return value:  Size  Location     Type
  5881 ;;                  1  [STACK] void 
  5882 ;; Registers used:
  5883 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  5884 ;; Tracked objects:
  5885 ;;		On entry : 1/0
  5886 ;;		On exit  : 3F/39
  5887 ;;		Unchanged: 0/0
  5888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5893 ;;Total ram usage:        0 bytes
  5894 ;; Hardware stack levels used:    1
  5895 ;; Hardware stack levels required when called:   16
  5896 ;; This function calls:
  5897 ;;		_INT1_SetInterruptHandler
  5898 ;; This function is called by:
  5899 ;;		_main
  5900 ;; This function uses a reentrant model
  5901 ;;
  5902                           
  5903                           	psect	text2
  5904  01B670                     __ptext2:
  5905                           	opt callstack 0
  5906  01B670                     _start_switch_handler:
  5907                           	opt callstack 14
  5908                           
  5909                           ;dio.c: 123:  (PIE5bits.INT1IE = 0);
  5910                           
  5911                           ; BSR set to: 1
  5912                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5913                           ;incstack = 0
  5914  01B670  0139               	movlb	57	; () banked
  5915  01B672  9195               	bcf	149,0,b	;volatile
  5916                           
  5917                           ; BSR set to: 57
  5918                           ;dio.c: 124:  INT1_SetInterruptHandler(switch_handler);
  5919  01B674  0EA8               	movlw	low _switch_handler
  5920  01B676  6EE6               	movwf	postinc1,c
  5921  01B678  0E8C               	movlw	high _switch_handler
  5922  01B67A  6EE6               	movwf	postinc1,c
  5923  01B67C  0E01               	movlw	low (_switch_handler shr (0+16))
  5924  01B67E  6EE6               	movwf	postinc1,c
  5925  01B680  EC1F  F0DA         	call	_INT1_SetInterruptHandler	;wreg free
  5926                           
  5927                           ;dio.c: 125:  S.button[SNULL].sw = SW_INVALID;
  5928  01B684  0E02               	movlw	2
  5929  01B686  0102               	movlb	2	; () banked
  5930  01B688  6FE9               	movwf	(_S+35)& (0+255),b	;volatile
  5931                           
  5932                           ; BSR set to: 2
  5933                           ;dio.c: 126:  (PIE5bits.INT1IE = 1);
  5934  01B68A  0139               	movlb	57	; () banked
  5935  01B68C  8195               	bsf	149,0,b	;volatile
  5936                           
  5937                           ; BSR set to: 57
  5938                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  5939  01B68E  0012               	return		;funcret
  5940  01B690                     __end_of_start_switch_handler:
  5941                           	opt callstack 0
  5942                           
  5943 ;; *************** function _srand *****************
  5944 ;; Defined at:
  5945 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  5946 ;; Parameters:    Size  Location     Type
  5947 ;;  s               2  [STACK] unsigned int 
  5948 ;; Auto vars:     Size  Location     Type
  5949 ;;		None
  5950 ;; Return value:  Size  Location     Type
  5951 ;;                  1  [STACK] void 
  5952 ;; Registers used:
  5953 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  5954 ;; Tracked objects:
  5955 ;;		On entry : 0/0
  5956 ;;		On exit  : 3F/2
  5957 ;;		Unchanged: 0/0
  5958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5963 ;;Total ram usage:        0 bytes
  5964 ;; Hardware stack levels used:    1
  5965 ;; Hardware stack levels required when called:   15
  5966 ;; This function calls:
  5967 ;;		Nothing
  5968 ;; This function is called by:
  5969 ;;		_main
  5970 ;; This function uses a reentrant model
  5971 ;;
  5972                           
  5973                           	psect	text3
  5974  01B078                     __ptext3:
  5975                           	opt callstack 0
  5976  01B078                     _srand:
  5977                           	opt callstack 15
  5978                           
  5979                           ;stkvar	_s @ sp[(0)+-2]
  5980                           
  5981                           ; BSR set to: 57
  5982                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5983                           ;incstack = 0
  5984  01B078  0EFE               	movlw	-2
  5985  01B07A  50E3               	movf	plusw1,w,c
  5986  01B07C  0FFF               	addlw	255
  5987  01B07E  6E30               	movwf	(btemp+10)^0,c
  5988  01B080  0EFF               	movlw	-1
  5989  01B082  006F FF8C  F031    	movff	plusw1,btemp+11
  5990  01B088  0EFF               	movlw	255
  5991  01B08A  2231               	addwfc	(btemp+11)^0,f,c
  5992  01B08C  0060  F0C0  F2F7   	movff	btemp+10,_seed
  5993  01B092  0060  F0C4  F2F8   	movff	btemp+11,_seed+1
  5994  01B098  0102               	movlb	2	; () banked
  5995  01B09A  6BF9               	clrf	(_seed+2)& (0+255),b
  5996  01B09C  6BFA               	clrf	(_seed+3)& (0+255),b
  5997  01B09E  6BFB               	clrf	(_seed+4)& (0+255),b
  5998  01B0A0  6BFC               	clrf	(_seed+5)& (0+255),b
  5999  01B0A2  6BFD               	clrf	(_seed+6)& (0+255),b
  6000  01B0A4  6BFE               	clrf	(_seed+7)& (0+255),b
  6001                           
  6002                           ; BSR set to: 2
  6003                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  6004  01B0A6  52E5               	movf	postdec1,f,c
  6005  01B0A8  52E5               	movf	postdec1,f,c
  6006  01B0AA  0012               	return		;funcret
  6007  01B0AC                     __end_of_srand:
  6008                           	opt callstack 0
  6009                           
  6010 ;; *************** function _spinners *****************
  6011 ;; Defined at:
  6012 ;;		line 144 in file "mbmc.c"
  6013 ;; Parameters:    Size  Location     Type
  6014 ;;  shape           1  [STACK] unsigned char 
  6015 ;;  reset           1  [STACK] unsigned char 
  6016 ;; Auto vars:     Size  Location     Type
  6017 ;;  c               1  [STACK] unsigned char 
  6018 ;; Return value:  Size  Location     Type
  6019 ;;                  1  [STACK] unsigned char 
  6020 ;; Registers used:
  6021 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+9, btemp+10, btemp+11, tbl
      +ptrl, tblptrh, tblptru, prodl, prodh
  6022 ;; Tracked objects:
  6023 ;;		On entry : 0/0
  6024 ;;		On exit  : 0/0
  6025 ;;		Unchanged: 0/0
  6026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6031 ;;Total ram usage:        0 bytes
  6032 ;; Hardware stack levels used:    1
  6033 ;; Hardware stack levels required when called:   16
  6034 ;; This function calls:
  6035 ;;		_strlen
  6036 ;; This function is called by:
  6037 ;;		_main
  6038 ;; This function uses a reentrant model
  6039 ;;
  6040                           
  6041                           	psect	text4
  6042  019974                     __ptext4:
  6043                           	opt callstack 0
  6044  019974                     _spinners:
  6045                           	opt callstack 0
  6046                           
  6047                           ; BSR set to: 2
  6048                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6049  019974  52E6               	movf	postinc1,f,c
  6050                           
  6051                           ;mbmc.c: 144: char spinners(uint8_t shape, uint8_t reset);mbmc.c: 145: {;mbmc.c: 146:  s
      +                          tatic uint8_t s[6];;mbmc.c: 147:  char c;;mbmc.c: 149:  if (shape > (6 - 1))
  6052                           ;stkvar	_shape @ sp[(-1)+-1]
  6053                           
  6054                           ;incstack = 0
  6055  019976  0EFE               	movlw	-2
  6056  019978  006F FF8C  F026    	movff	plusw1,btemp
  6057  01997E  0E05               	movlw	5
  6058  019980  6426               	cpfsgt	btemp^0,c
  6059  019982  D002               	goto	l1882
  6060                           
  6061                           ;mbmc.c: 150:   shape = 0;
  6062                           ;stkvar	_shape @ sp[(-1)+-1]
  6063  019984  0EFE               	movlw	-2
  6064  019986  6AE3               	clrf	plusw1,c
  6065  019988                     l1882:
  6066                           
  6067                           ;mbmc.c: 151:  if (reset)
  6068                           ;stkvar	_reset @ sp[(-1)+-2]
  6069  019988  0EFD               	movlw	-3
  6070  01998A  50E3               	movf	plusw1,w,c
  6071  01998C  B4D8               	btfsc	status,2,c
  6072  01998E  D00A               	goto	l10711
  6073                           
  6074                           ;mbmc.c: 152:   s[shape] = 0;
  6075                           ;stkvar	_shape @ sp[(-1)+-1]
  6076  019990  0EFE               	movlw	-2
  6077  019992  006F FF8C  F031    	movff	plusw1,btemp+11
  6078  019998  5031               	movf	(btemp+11)^0,w,c
  6079  01999A  0F6C               	addlw	low spinners@s
  6080  01999C  6ED9               	movwf	fsr2l,c
  6081  01999E  6ADA               	clrf	fsr2h,c
  6082  0199A0  0E00               	movlw	0
  6083  0199A2  6EDF               	movwf	indf2,c
  6084  0199A4                     l10711:
  6085                           
  6086                           ;mbmc.c: 153:  c = spin[shape][s[shape]];
  6087                           ;stkvar	_shape @ sp[(-1)+-1]
  6088  0199A4  0EFE               	movlw	-2
  6089  0199A6  50E3               	movf	plusw1,w,c
  6090  0199A8  0D14               	mullw	20
  6091  0199AA  0ED9               	movlw	low _spin
  6092  0199AC  6E30               	movwf	(btemp+10)^0,c
  6093  0199AE  0EFB               	movlw	high _spin
  6094  0199B0  6E31               	movwf	(btemp+11)^0,c
  6095  0199B2  50F3               	movf	243,w,c
  6096  0199B4  2630               	addwf	(btemp+10)^0,f,c
  6097  0199B6  50F4               	movf	244,w,c
  6098  0199B8  2231               	addwfc	(btemp+11)^0,f,c
  6099                           
  6100                           ;stkvar	_shape @ sp[(-1)+-1]
  6101  0199BA  0EFE               	movlw	-2
  6102  0199BC  006F FF8C  F02F    	movff	plusw1,btemp+9
  6103  0199C2  502F               	movf	(btemp+9)^0,w,c
  6104  0199C4  0F6C               	addlw	low spinners@s
  6105  0199C6  6ED9               	movwf	fsr2l,c
  6106  0199C8  6ADA               	clrf	fsr2h,c
  6107  0199CA  50DF               	movf	indf2,w,c
  6108  0199CC  2630               	addwf	(btemp+10)^0,f,c
  6109  0199CE  0E00               	movlw	0
  6110  0199D0  2231               	addwfc	(btemp+11)^0,f,c
  6111  0199D2  0060  F0C3  FFF6   	movff	btemp+10,tblptrl
  6112  0199D8  0060  F0C7  FFF7   	movff	btemp+11,tblptrh
  6113  0199DE                     	if	0	;tblptru may be non-zero
  6114  0199DE                     	endif
  6115  0199DE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6116  0199DE  0E00               	movlw	low (__mediumconst shr (0+16))
  6117  0199E0  6EF8               	movwf	tblptru,c
  6118  0199E2                     	endif
  6119                           
  6120                           ;stkvar	_c @ sp[(-1)+0]
  6121  0199E2  0008               	tblrd		*
  6122  0199E4  0EFF               	movlw	-1
  6123  0199E6  006F FFD7 FFE3     	movff	tablat,plusw1
  6124                           
  6125                           ;mbmc.c: 154:  if (++s[shape] >= strlen(spin[shape]))
  6126                           ;stkvar	_shape @ sp[(-1)+-1]
  6127  0199EC  0EFE               	movlw	-2
  6128  0199EE  50E3               	movf	plusw1,w,c
  6129  0199F0  0D14               	mullw	20
  6130  0199F2  0ED9               	movlw	low _spin
  6131  0199F4  6E30               	movwf	(btemp+10)^0,c
  6132  0199F6  0EFB               	movlw	high _spin
  6133  0199F8  6E31               	movwf	(btemp+11)^0,c
  6134  0199FA  50F3               	movf	243,w,c
  6135  0199FC  2630               	addwf	(btemp+10)^0,f,c
  6136  0199FE  50F4               	movf	244,w,c
  6137  019A00  2231               	addwfc	(btemp+11)^0,f,c
  6138  019A02  0060  F0C3  FFE6   	movff	btemp+10,postinc1
  6139  019A08  0060  F0C7  FFE6   	movff	btemp+11,postinc1
  6140  019A0E  EC7D  F0D0         	call	_strlen	;wreg free
  6141                           
  6142                           ;stkvar	_shape @ sp[(-1)+-1]
  6143  019A12  0EFE               	movlw	-2
  6144  019A14  006F FF8C  F031    	movff	plusw1,btemp+11
  6145  019A1A  5031               	movf	(btemp+11)^0,w,c
  6146  019A1C  0F6C               	addlw	low spinners@s
  6147  019A1E  6ED9               	movwf	fsr2l,c
  6148  019A20  6ADA               	clrf	fsr2h,c
  6149  019A22  2ADF               	incf	indf2,f,c
  6150  019A24  50DF               	movf	indf2,w,c
  6151  019A26  6E30               	movwf	(btemp+10)^0,c
  6152  019A28  6A31               	clrf	(btemp+11)^0,c
  6153  019A2A  5026               	movf	btemp^0,w,c
  6154  019A2C  5C30               	subwf	(btemp+10)^0,w,c
  6155  019A2E  5027               	movf	(btemp+1)^0,w,c
  6156  019A30  5831               	subwfb	(btemp+11)^0,w,c
  6157  019A32  A0D8               	btfss	status,0,c
  6158  019A34  D00A               	goto	l10717
  6159                           
  6160                           ;mbmc.c: 155:   s[shape] = 0;
  6161                           ;stkvar	_shape @ sp[(-1)+-1]
  6162  019A36  0EFE               	movlw	-2
  6163  019A38  006F FF8C  F031    	movff	plusw1,btemp+11
  6164  019A3E  5031               	movf	(btemp+11)^0,w,c
  6165  019A40  0F6C               	addlw	low spinners@s
  6166  019A42  6ED9               	movwf	fsr2l,c
  6167  019A44  6ADA               	clrf	fsr2h,c
  6168  019A46  0E00               	movlw	0
  6169  019A48  6EDF               	movwf	indf2,c
  6170  019A4A                     l10717:
  6171                           
  6172                           ;mbmc.c: 156:  return c;
  6173                           ;stkvar	_c @ sp[(-1)+0]
  6174  019A4A  0EFF               	movlw	-1
  6175  019A4C  006F FF8C  F026    	movff	plusw1,btemp
  6176                           
  6177                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  6178  019A52  52E5               	movf	postdec1,f,c
  6179  019A54  52E5               	movf	postdec1,f,c
  6180  019A56  52E5               	movf	postdec1,f,c
  6181  019A58  0012               	return		;funcret
  6182  019A5A                     __end_of_spinners:
  6183                           	opt callstack 0
  6184                           
  6185 ;; *************** function _init_port_dma *****************
  6186 ;; Defined at:
  6187 ;;		line 90 in file "eadog.c"
  6188 ;; Parameters:    Size  Location     Type
  6189 ;;		None
  6190 ;; Auto vars:     Size  Location     Type
  6191 ;;		None
  6192 ;; Return value:  Size  Location     Type
  6193 ;;                  1  [STACK] void 
  6194 ;; Registers used:
  6195 ;;		wreg, status,2
  6196 ;; Tracked objects:
  6197 ;;		On entry : 0/2
  6198 ;;		On exit  : 3F/3B
  6199 ;;		Unchanged: 0/0
  6200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6205 ;;Total ram usage:        0 bytes
  6206 ;; Hardware stack levels used:    1
  6207 ;; Hardware stack levels required when called:   15
  6208 ;; This function calls:
  6209 ;;		Nothing
  6210 ;; This function is called by:
  6211 ;;		_main
  6212 ;; This function uses a reentrant model
  6213 ;;
  6214                           
  6215                           	psect	text5
  6216  01B0E0                     __ptext5:
  6217                           	opt callstack 0
  6218  01B0E0                     _init_port_dma:
  6219                           	opt callstack 15
  6220                           
  6221                           ;eadog.c: 92:  DMA2CON1bits.DMODE = 0;
  6222                           
  6223                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6224                           ;incstack = 0
  6225  01B0E0  0E3F               	movlw	-193
  6226  01B0E2  013B               	movlb	59	; () banked
  6227  01B0E4  17DD               	andwf	221,f,b	;volatile
  6228                           
  6229                           ; BSR set to: 59
  6230                           ;eadog.c: 93:  DMA2CON1bits.DSTP = 0;
  6231  01B0E6  9BDD               	bcf	221,5,b	;volatile
  6232                           
  6233                           ;eadog.c: 94:  DMA2CON1bits.SMODE = 1;
  6234  01B0E8  51DD               	movf	221,w,b	;volatile
  6235  01B0EA  0BF9               	andlw	-7
  6236  01B0EC  0902               	iorlw	2
  6237  01B0EE  6FDD               	movwf	221,b	;volatile
  6238                           
  6239                           ;eadog.c: 95:  DMA2CON1bits.SMR = 0;
  6240  01B0F0  0EE7               	movlw	-25
  6241  01B0F2  17DD               	andwf	221,f,b	;volatile
  6242                           
  6243                           ; BSR set to: 59
  6244                           ;eadog.c: 96:  DMA2CON1bits.SSTP = 1;
  6245  01B0F4  81DD               	bsf	221,0,b	;volatile
  6246                           
  6247                           ; BSR set to: 59
  6248                           ;eadog.c: 97:  DMA2CON0bits.SIRQEN = 0;
  6249  01B0F6  9DDC               	bcf	220,6,b	;volatile
  6250                           
  6251                           ;eadog.c: 98:  DMA2DSA = 0x3DEA;
  6252  01B0F8  0E3D               	movlw	61
  6253  01B0FA  6FD1               	movwf	209,b	;volatile
  6254  01B0FC  0EEA               	movlw	234
  6255  01B0FE  6FD0               	movwf	208,b	;volatile
  6256                           
  6257                           ;eadog.c: 99:  DMA2SSA = (uint32_t) port_data;
  6258  01B100  0EFF               	movlw	low _port_data
  6259  01B102  6FD9               	movwf	217,b	;volatile
  6260  01B104  0E05               	movlw	high _port_data
  6261  01B106  6FDA               	movwf	218,b	;volatile
  6262  01B108  0E00               	movlw	low (_port_data shr (0+16))
  6263  01B10A  6FDB               	movwf	219,b	;volatile
  6264                           
  6265                           ; BSR set to: 59
  6266                           ;eadog.c: 100:  DMA2CON0bits.DGO = 0;
  6267  01B10C  9BDC               	bcf	220,5,b	;volatile
  6268                           
  6269                           ; BSR set to: 59
  6270                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  6271  01B10E  0012               	return		;funcret
  6272  01B110                     __end_of_init_port_dma:
  6273                           	opt callstack 0
  6274                           
  6275 ;; *************** function _init_display *****************
  6276 ;; Defined at:
  6277 ;;		line 38 in file "eadog.c"
  6278 ;; Parameters:    Size  Location     Type
  6279 ;;		None
  6280 ;; Auto vars:     Size  Location     Type
  6281 ;;		None
  6282 ;; Return value:  Size  Location     Type
  6283 ;;                  1  [STACK] void 
  6284 ;; Registers used:
  6285 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6286 ;; Tracked objects:
  6287 ;;		On entry : 3F/3B
  6288 ;;		On exit  : 3F/3D
  6289 ;;		Unchanged: 0/0
  6290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6295 ;;Total ram usage:        0 bytes
  6296 ;; Hardware stack levels used:    1
  6297 ;; Hardware stack levels required when called:   17
  6298 ;; This function calls:
  6299 ;;		_ringBufS_init
  6300 ;;		_send_lcd_cmd
  6301 ;;		_send_lcd_cmd_long
  6302 ;;		_wdtdelay
  6303 ;; This function is called by:
  6304 ;;		_main
  6305 ;; This function uses a reentrant model
  6306 ;;
  6307                           
  6308                           	psect	text6
  6309  01988A                     __ptext6:
  6310                           	opt callstack 0
  6311  01988A                     _init_display:
  6312                           	opt callstack 13
  6313                           
  6314                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  6315                           
  6316                           ; BSR set to: 59
  6317                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6318                           ;incstack = 0
  6319  01988A  0E43               	movlw	low _ring_buf1
  6320  01988C  0100               	movlb	0	; () banked
  6321  01988E  6F66               	movwf	(_spi_link+6)& (0+255),b	;volatile
  6322  019890  0E04               	movlw	high _ring_buf1
  6323  019892  6F67               	movwf	(_spi_link+7)& (0+255),b	;volatile
  6324                           
  6325                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  6326  019894  0E00               	movlw	low _ring_buf2
  6327  019896  6F64               	movwf	(_spi_link+4)& (0+255),b	;volatile
  6328  019898  0E04               	movlw	high _ring_buf2
  6329  01989A  6F65               	movwf	(_spi_link+5)& (0+255),b	;volatile
  6330                           
  6331                           ; BSR set to: 0
  6332                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  6333  01989C  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  6334  0198A2  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  6335  0198A8  EC7F  F0D9         	call	_ringBufS_init	;wreg free
  6336                           
  6337                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  6338  0198AC  0060  F193  FFE6   	movff	_spi_link+4,postinc1
  6339  0198B2  0060  F197  FFE6   	movff	_spi_link+5,postinc1
  6340  0198B8  EC7F  F0D9         	call	_ringBufS_init	;wreg free
  6341                           
  6342                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  6343  0198BC  84BE               	bsf	190,2,c	;volatile
  6344  0198BE  84BC               	bsf	188,2,c	;volatile
  6345                           
  6346                           ;eadog.c: 59:  wdtdelay(350000);
  6347  0198C0  0E30               	movlw	48
  6348  0198C2  6EE6               	movwf	postinc1,c
  6349  0198C4  0E57               	movlw	87
  6350  0198C6  6EE6               	movwf	postinc1,c
  6351  0198C8  0E05               	movlw	5
  6352  0198CA  6EE6               	movwf	postinc1,c
  6353  0198CC  0E00               	movlw	0
  6354  0198CE  6EE6               	movwf	postinc1,c
  6355  0198D0  ECDB  F0D4         	call	_wdtdelay	;wreg free
  6356                           
  6357                           ; BSR set to: 0
  6358                           ;eadog.c: 60:  send_lcd_cmd(0x39);
  6359  0198D4  0E39               	movlw	57
  6360  0198D6  6EE6               	movwf	postinc1,c
  6361  0198D8  EC6B  F0D9         	call	_send_lcd_cmd	;wreg free
  6362                           
  6363                           ; BSR set to: 0
  6364                           ;eadog.c: 61:  send_lcd_cmd(0x1d);
  6365  0198DC  0E1D               	movlw	29
  6366  0198DE  6EE6               	movwf	postinc1,c
  6367  0198E0  EC6B  F0D9         	call	_send_lcd_cmd	;wreg free
  6368                           
  6369                           ; BSR set to: 0
  6370                           ;eadog.c: 62:  send_lcd_cmd(0x50);
  6371  0198E4  0E50               	movlw	80
  6372  0198E6  6EE6               	movwf	postinc1,c
  6373  0198E8  EC6B  F0D9         	call	_send_lcd_cmd	;wreg free
  6374                           
  6375                           ; BSR set to: 0
  6376                           ;eadog.c: 63:  send_lcd_cmd(0x6c);
  6377  0198EC  0E6C               	movlw	108
  6378  0198EE  6EE6               	movwf	postinc1,c
  6379  0198F0  EC6B  F0D9         	call	_send_lcd_cmd	;wreg free
  6380                           
  6381                           ; BSR set to: 0
  6382                           ;eadog.c: 64:  send_lcd_cmd(0x76);
  6383  0198F4  0E76               	movlw	118
  6384  0198F6  6EE6               	movwf	postinc1,c
  6385  0198F8  EC6B  F0D9         	call	_send_lcd_cmd	;wreg free
  6386                           
  6387                           ; BSR set to: 0
  6388                           ;eadog.c: 65:  send_lcd_cmd_long(0x38);
  6389  0198FC  0E38               	movlw	56
  6390  0198FE  6EE6               	movwf	postinc1,c
  6391  019900  EC57  F0D9         	call	_send_lcd_cmd_long	;wreg free
  6392                           
  6393                           ; BSR set to: 0
  6394                           ;eadog.c: 66:  send_lcd_cmd(0x0f);
  6395  019904  0E0F               	movlw	15
  6396  019906  6EE6               	movwf	postinc1,c
  6397  019908  EC6B  F0D9         	call	_send_lcd_cmd	;wreg free
  6398                           
  6399                           ; BSR set to: 0
  6400                           ;eadog.c: 67:  send_lcd_cmd_long(0x01);
  6401  01990C  0E01               	movlw	1
  6402  01990E  6EE6               	movwf	postinc1,c
  6403  019910  EC57  F0D9         	call	_send_lcd_cmd_long	;wreg free
  6404                           
  6405                           ; BSR set to: 0
  6406                           ;eadog.c: 68:  send_lcd_cmd(0x02);
  6407  019914  0E02               	movlw	2
  6408  019916  6EE6               	movwf	postinc1,c
  6409  019918  EC6B  F0D9         	call	_send_lcd_cmd	;wreg free
  6410                           
  6411                           ; BSR set to: 0
  6412                           ;eadog.c: 69:  send_lcd_cmd(0x06);
  6413  01991C  0E06               	movlw	6
  6414  01991E  6EE6               	movwf	postinc1,c
  6415  019920  EC6B  F0D9         	call	_send_lcd_cmd	;wreg free
  6416                           
  6417                           ; BSR set to: 0
  6418                           ;eadog.c: 70:  wdtdelay(30);
  6419  019924  0E1E               	movlw	30
  6420  019926  6EE6               	movwf	postinc1,c
  6421  019928  0E00               	movlw	0
  6422  01992A  6EE6               	movwf	postinc1,c
  6423  01992C  0E00               	movlw	0
  6424  01992E  6EE6               	movwf	postinc1,c
  6425  019930  0E00               	movlw	0
  6426  019932  6EE6               	movwf	postinc1,c
  6427  019934  ECDB  F0D4         	call	_wdtdelay	;wreg free
  6428                           
  6429                           ; BSR set to: 0
  6430                           ;eadog.c: 71:  SPI1CON2 = 0x02;
  6431  019938  0E02               	movlw	2
  6432  01993A  013D               	movlb	61	; () banked
  6433  01993C  6F16               	movwf	22,b	;volatile
  6434                           
  6435                           ; BSR set to: 61
  6436                           ;eadog.c: 72:  SPI1CON1 = 0x40;
  6437  01993E  0E40               	movlw	64
  6438  019940  6F15               	movwf	21,b	;volatile
  6439                           
  6440                           ; BSR set to: 61
  6441                           ;eadog.c: 73:  SPI1CON0 = 0x83;
  6442  019942  0E83               	movlw	131
  6443  019944  6F14               	movwf	20,b	;volatile
  6444                           
  6445                           ; BSR set to: 61
  6446                           ;eadog.c: 75:  SPI1INTFbits.SPI1TXUIF = 0;
  6447  019946  931A               	bcf	26,1,b	;volatile
  6448                           
  6449                           ; BSR set to: 61
  6450                           ;eadog.c: 76:  DMA1CON1bits.DMODE = 0;
  6451  019948  0E3F               	movlw	-193
  6452  01994A  013B               	movlb	59	; () banked
  6453  01994C  17FD               	andwf	253,f,b	;volatile
  6454                           
  6455                           ; BSR set to: 59
  6456                           ;eadog.c: 77:  DMA1CON1bits.DSTP = 0;
  6457  01994E  9BFD               	bcf	253,5,b	;volatile
  6458                           
  6459                           ; BSR set to: 59
  6460                           ;eadog.c: 78:  DMA1CON1bits.SMODE = 1;
  6461  019950  51FD               	movf	253,w,b	;volatile
  6462  019952  0BF9               	andlw	-7
  6463  019954  0902               	iorlw	2
  6464  019956  6FFD               	movwf	253,b	;volatile
  6465                           
  6466                           ; BSR set to: 59
  6467                           ;eadog.c: 79:  DMA1CON1bits.SMR = 0;
  6468  019958  0EE7               	movlw	-25
  6469  01995A  17FD               	andwf	253,f,b	;volatile
  6470                           
  6471                           ; BSR set to: 59
  6472                           ;eadog.c: 80:  DMA1CON1bits.SSTP = 1;
  6473  01995C  81FD               	bsf	253,0,b	;volatile
  6474                           
  6475                           ; BSR set to: 59
  6476                           ;eadog.c: 81:  DMA1SSA = (uint32_t) & ring_buf1;
  6477  01995E  0E43               	movlw	low _ring_buf1
  6478  019960  6FF9               	movwf	249,b	;volatile
  6479  019962  0E04               	movlw	high _ring_buf1
  6480  019964  6FFA               	movwf	250,b	;volatile
  6481  019966  0E00               	movlw	low (_ring_buf1 shr (0+16))
  6482  019968  6FFB               	movwf	251,b	;volatile
  6483                           
  6484                           ; BSR set to: 59
  6485                           ;eadog.c: 82:  DMA1CON0bits.DGO = 0;
  6486  01996A  9BFC               	bcf	252,5,b	;volatile
  6487                           
  6488                           ; BSR set to: 59
  6489                           ;eadog.c: 83:  SPI1INTFbits.SPI1TXUIF = 1;
  6490  01996C  013D               	movlb	61	; () banked
  6491  01996E  831A               	bsf	26,1,b	;volatile
  6492                           
  6493                           ; BSR set to: 61
  6494                           ;eadog.c: 84:  LATEbits.LATE2 = 0;
  6495  019970  94BE               	bcf	190,2,c	;volatile
  6496                           
  6497                           ; BSR set to: 61
  6498                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  6499  019972  0012               	return		;funcret
  6500  019974                     __end_of_init_display:
  6501                           	opt callstack 0
  6502                           
  6503 ;; *************** function _send_lcd_cmd_long *****************
  6504 ;; Defined at:
  6505 ;;		line 129 in file "eadog.c"
  6506 ;; Parameters:    Size  Location     Type
  6507 ;;  cmd             1  [STACK] const unsigned char 
  6508 ;; Auto vars:     Size  Location     Type
  6509 ;;		None
  6510 ;; Return value:  Size  Location     Type
  6511 ;;                  1  [STACK] void 
  6512 ;; Registers used:
  6513 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6514 ;; Tracked objects:
  6515 ;;		On entry : 3F/0
  6516 ;;		On exit  : 3F/0
  6517 ;;		Unchanged: 0/0
  6518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6523 ;;Total ram usage:        0 bytes
  6524 ;; Hardware stack levels used:    1
  6525 ;; Hardware stack levels required when called:   16
  6526 ;; This function calls:
  6527 ;;		_SPI1_Exchange8bit
  6528 ;;		_wdtdelay
  6529 ;; This function is called by:
  6530 ;;		_init_display
  6531 ;; This function uses a reentrant model
  6532 ;;
  6533                           
  6534                           	psect	text7
  6535  01B2AE                     __ptext7:
  6536                           	opt callstack 0
  6537  01B2AE                     _send_lcd_cmd_long:
  6538                           	opt callstack 13
  6539                           
  6540                           ; BSR set to: 61
  6541                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6542                           ;incstack = 0
  6543                           ;eadog.c: 129: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 130: {;eadog.c:
      +                           131:  do { LATCbits.LATC1 = 0; } while(0);
  6544  01B2AE  92BC               	bcf	188,1,c	;volatile
  6545                           
  6546                           ;eadog.c: 132:  do { LATCbits.LATC2 = 0; } while(0);
  6547  01B2B0  94BC               	bcf	188,2,c	;volatile
  6548                           
  6549                           ;eadog.c: 133:  SPI1_Exchange8bit(cmd);
  6550                           ;stkvar	_cmd @ sp[(0)+-1]
  6551  01B2B2  0EFF               	movlw	-1
  6552  01B2B4  50E3               	movf	plusw1,w,c
  6553  01B2B6  6EE6               	movwf	postinc1,c
  6554  01B2B8  EC58  F0DB         	call	_SPI1_Exchange8bit	;wreg free
  6555                           
  6556                           ; BSR set to: 57
  6557                           ;eadog.c: 134:  wdtdelay(800);
  6558  01B2BC  0E20               	movlw	32
  6559  01B2BE  6EE6               	movwf	postinc1,c
  6560  01B2C0  0E03               	movlw	3
  6561  01B2C2  6EE6               	movwf	postinc1,c
  6562  01B2C4  0E00               	movlw	0
  6563  01B2C6  6EE6               	movwf	postinc1,c
  6564  01B2C8  0E00               	movlw	0
  6565  01B2CA  6EE6               	movwf	postinc1,c
  6566  01B2CC  ECDB  F0D4         	call	_wdtdelay	;wreg free
  6567                           
  6568                           ; BSR set to: 0
  6569  01B2D0  82BC               	bsf	188,1,c	;volatile
  6570                           
  6571                           ; BSR set to: 0
  6572                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6573  01B2D2  52E5               	movf	postdec1,f,c
  6574  01B2D4  0012               	return		;funcret
  6575  01B2D6                     __end_of_send_lcd_cmd_long:
  6576                           	opt callstack 0
  6577                           
  6578 ;; *************** function _send_lcd_cmd *****************
  6579 ;; Defined at:
  6580 ;;		line 117 in file "eadog.c"
  6581 ;; Parameters:    Size  Location     Type
  6582 ;;  cmd             1  [STACK] const unsigned char 
  6583 ;; Auto vars:     Size  Location     Type
  6584 ;;		None
  6585 ;; Return value:  Size  Location     Type
  6586 ;;                  1  [STACK] void 
  6587 ;; Registers used:
  6588 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6589 ;; Tracked objects:
  6590 ;;		On entry : 3F/0
  6591 ;;		On exit  : 3F/0
  6592 ;;		Unchanged: 0/0
  6593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6598 ;;Total ram usage:        0 bytes
  6599 ;; Hardware stack levels used:    1
  6600 ;; Hardware stack levels required when called:   16
  6601 ;; This function calls:
  6602 ;;		_SPI1_Exchange8bit
  6603 ;;		_wdtdelay
  6604 ;; This function is called by:
  6605 ;;		_init_display
  6606 ;; This function uses a reentrant model
  6607 ;;
  6608                           
  6609                           	psect	text8
  6610  01B2D6                     __ptext8:
  6611                           	opt callstack 0
  6612  01B2D6                     _send_lcd_cmd:
  6613                           	opt callstack 13
  6614                           
  6615                           ; BSR set to: 0
  6616                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6617                           ;incstack = 0
  6618                           ;eadog.c: 117: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 118: {;eadog.c: 119:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  6619  01B2D6  92BC               	bcf	188,1,c	;volatile
  6620                           
  6621                           ;eadog.c: 120:  do { LATCbits.LATC2 = 0; } while(0);
  6622  01B2D8  94BC               	bcf	188,2,c	;volatile
  6623                           
  6624                           ;eadog.c: 121:  SPI1_Exchange8bit(cmd);
  6625                           ;stkvar	_cmd @ sp[(0)+-1]
  6626  01B2DA  0EFF               	movlw	-1
  6627  01B2DC  50E3               	movf	plusw1,w,c
  6628  01B2DE  6EE6               	movwf	postinc1,c
  6629  01B2E0  EC58  F0DB         	call	_SPI1_Exchange8bit	;wreg free
  6630                           
  6631                           ; BSR set to: 57
  6632                           ;eadog.c: 122:  wdtdelay(30);
  6633  01B2E4  0E1E               	movlw	30
  6634  01B2E6  6EE6               	movwf	postinc1,c
  6635  01B2E8  0E00               	movlw	0
  6636  01B2EA  6EE6               	movwf	postinc1,c
  6637  01B2EC  0E00               	movlw	0
  6638  01B2EE  6EE6               	movwf	postinc1,c
  6639  01B2F0  0E00               	movlw	0
  6640  01B2F2  6EE6               	movwf	postinc1,c
  6641  01B2F4  ECDB  F0D4         	call	_wdtdelay	;wreg free
  6642                           
  6643                           ; BSR set to: 0
  6644  01B2F8  82BC               	bsf	188,1,c	;volatile
  6645                           
  6646                           ; BSR set to: 0
  6647                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  6648  01B2FA  52E5               	movf	postdec1,f,c
  6649  01B2FC  0012               	return		;funcret
  6650  01B2FE                     __end_of_send_lcd_cmd:
  6651                           	opt callstack 0
  6652                           
  6653 ;; *************** function _SPI1_Exchange8bit *****************
  6654 ;; Defined at:
  6655 ;;		line 79 in file "mcc_generated_files/spi1.c"
  6656 ;; Parameters:    Size  Location     Type
  6657 ;;  data            1  [STACK] unsigned char 
  6658 ;; Auto vars:     Size  Location     Type
  6659 ;;		None
  6660 ;; Return value:  Size  Location     Type
  6661 ;;                  1  [STACK] unsigned char 
  6662 ;; Registers used:
  6663 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  6664 ;; Tracked objects:
  6665 ;;		On entry : 0/0
  6666 ;;		On exit  : 3F/39
  6667 ;;		Unchanged: 0/0
  6668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6673 ;;Total ram usage:        0 bytes
  6674 ;; Hardware stack levels used:    1
  6675 ;; Hardware stack levels required when called:   15
  6676 ;; This function calls:
  6677 ;;		Nothing
  6678 ;; This function is called by:
  6679 ;;		_send_lcd_cmd
  6680 ;;		_send_lcd_cmd_long
  6681 ;; This function uses a reentrant model
  6682 ;;
  6683                           
  6684                           	psect	text9
  6685  01B6B0                     __ptext9:
  6686                           	opt callstack 0
  6687  01B6B0                     _SPI1_Exchange8bit:
  6688                           	opt callstack 13
  6689                           
  6690                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  6691                           
  6692                           ; BSR set to: 0
  6693                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6694                           ;incstack = 0
  6695  01B6B0  0E01               	movlw	1
  6696  01B6B2  013D               	movlb	61	; () banked
  6697  01B6B4  6F12               	movwf	18,b	;volatile
  6698                           
  6699                           ; BSR set to: 61
  6700                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  6701                           ;stkvar	_data @ sp[(0)+-1]
  6702  01B6B6  0EFF               	movlw	-1
  6703  01B6B8  006F FF8F FD11     	movff	plusw1,15633	;volatile
  6704  01B6BE                     l807:
  6705                           
  6706                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  6707  01B6BE  0139               	movlb	57	; () banked
  6708  01B6C0  A9A2               	btfss	162,4,b	;volatile
  6709  01B6C2  D7FD               	goto	l807
  6710                           
  6711                           ; BSR set to: 57
  6712                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  6713  01B6C4  006F F440  F026    	movff	15632,btemp	;volatile
  6714                           
  6715                           ; BSR set to: 57
  6716                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6717  01B6CA  52E5               	movf	postdec1,f,c
  6718  01B6CC  0012               	return		;funcret
  6719  01B6CE                     __end_of_SPI1_Exchange8bit:
  6720                           	opt callstack 0
  6721                           
  6722 ;; *************** function _ringBufS_init *****************
  6723 ;; Defined at:
  6724 ;;		line 22 in file "ringbufs.c"
  6725 ;; Parameters:    Size  Location     Type
  6726 ;;  _this           2  [STACK] PTR volatile struct ring
  6727 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6728 ;; Auto vars:     Size  Location     Type
  6729 ;;		None
  6730 ;; Return value:  Size  Location     Type
  6731 ;;                  1  [STACK] void 
  6732 ;; Registers used:
  6733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6734 ;; Tracked objects:
  6735 ;;		On entry : 0/0
  6736 ;;		On exit  : 0/0
  6737 ;;		Unchanged: 0/0
  6738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6743 ;;Total ram usage:        0 bytes
  6744 ;; Hardware stack levels used:    1
  6745 ;; Hardware stack levels required when called:   16
  6746 ;; This function calls:
  6747 ;;		_memset
  6748 ;; This function is called by:
  6749 ;;		_init_display
  6750 ;; This function uses a reentrant model
  6751 ;;
  6752                           
  6753                           	psect	text10
  6754  01B2FE                     __ptext10:
  6755                           	opt callstack 0
  6756  01B2FE                     _ringBufS_init:
  6757                           	opt callstack 13
  6758                           
  6759                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  6760                           
  6761                           ; BSR set to: 57
  6762                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6763                           ;incstack = 0
  6764  01B2FE  0E43               	movlw	67
  6765  01B300  6EE6               	movwf	postinc1,c
  6766  01B302  0E00               	movlw	0
  6767  01B304  6EE6               	movwf	postinc1,c
  6768  01B306  0E00               	movlw	0
  6769  01B308  6EE6               	movwf	postinc1,c
  6770  01B30A  0E00               	movlw	0
  6771  01B30C  6EE6               	movwf	postinc1,c
  6772                           
  6773                           ;stkvar	__this @ sp[(-4)+-2]
  6774  01B30E  0EFA               	movlw	-6
  6775  01B310  006F FF8F FFE6     	movff	plusw1,postinc1
  6776  01B316  006F FF8F FFE6     	movff	plusw1,postinc1
  6777  01B31C  EC2F  F0B3         	call	_memset	;wreg free
  6778                           
  6779                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  6780  01B320  52E5               	movf	postdec1,f,c
  6781  01B322  52E5               	movf	postdec1,f,c
  6782  01B324  0012               	return		;funcret
  6783  01B326                     __end_of_ringBufS_init:
  6784                           	opt callstack 0
  6785                           
  6786 ;; *************** function _init_bsoc *****************
  6787 ;; Defined at:
  6788 ;;		line 95 in file "bsoc.c"
  6789 ;; Parameters:    Size  Location     Type
  6790 ;;		None
  6791 ;; Auto vars:     Size  Location     Type
  6792 ;;		None
  6793 ;; Return value:  Size  Location     Type
  6794 ;;                  1  [STACK] void 
  6795 ;; Registers used:
  6796 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  6797 ;; Tracked objects:
  6798 ;;		On entry : 3F/1
  6799 ;;		On exit  : 0/0
  6800 ;;		Unchanged: 0/0
  6801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6806 ;;Total ram usage:        0 bytes
  6807 ;; Hardware stack levels used:    1
  6808 ;; Hardware stack levels required when called:   18
  6809 ;; This function calls:
  6810 ;;		_TMR3_SetInterruptHandler
  6811 ;;		_Volts_to_SOC
  6812 ;;		___fldiv
  6813 ;;		___flmul
  6814 ;;		___fltol
  6815 ;;		___xxtofl
  6816 ;;		_conv_raw_result
  6817 ;; This function is called by:
  6818 ;;		_main
  6819 ;; This function uses a reentrant model
  6820 ;;
  6821                           
  6822                           	psect	text11
  6823  0185EA                     __ptext11:
  6824                           	opt callstack 0
  6825  0185EA                     _init_bsoc:
  6826                           	opt callstack 12
  6827                           
  6828                           ;bsoc.c: 100:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  6829                           
  6830                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6831                           ;incstack = 0
  6832  0185EA  0E00               	movlw	0
  6833  0185EC  6EE6               	movwf	postinc1,c
  6834  0185EE  0E00               	movlw	0
  6835  0185F0  6EE6               	movwf	postinc1,c
  6836  0185F2  0E7A               	movlw	122
  6837  0185F4  6EE6               	movwf	postinc1,c
  6838  0185F6  0E44               	movlw	68
  6839  0185F8  6EE6               	movwf	postinc1,c
  6840  0185FA  0E00               	movlw	0
  6841  0185FC  6EE6               	movwf	postinc1,c
  6842  0185FE  0E04               	movlw	4
  6843  018600  6EE6               	movwf	postinc1,c
  6844  018602  EC95  F0A7         	call	_conv_raw_result	;wreg free
  6845  018606  0060  F09B  FFE6   	movff	btemp,postinc1
  6846  01860C  0060  F09F  FFE6   	movff	btemp+1,postinc1
  6847  018612  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  6848  018618  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  6849  01861E  EC3C  F0C2         	call	___fltol	;wreg free
  6850  018622  0060  F09B  FFE6   	movff	btemp,postinc1
  6851  018628  0060  F09F  FFE6   	movff	btemp+1,postinc1
  6852  01862E  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  6853  018634  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  6854  01863A  0E00               	movlw	0
  6855  01863C  6EE6               	movwf	postinc1,c
  6856  01863E  EC17  F0BD         	call	___xxtofl	;wreg free
  6857  018642  0060  F09B  FFE6   	movff	btemp,postinc1
  6858  018648  0060  F09F  FFE6   	movff	btemp+1,postinc1
  6859  01864E  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  6860  018654  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  6861  01865A  EC44  F099         	call	___flmul	;wreg free
  6862  01865E  0060  F09B  FFE6   	movff	btemp,postinc1
  6863  018664  0060  F09F  FFE6   	movff	btemp+1,postinc1
  6864  01866A  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  6865  018670  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  6866  018676  EC3C  F0C2         	call	___fltol	;wreg free
  6867  01867A  0060  F09B  FFE6   	movff	btemp,postinc1
  6868  018680  0060  F09F  FFE6   	movff	btemp+1,postinc1
  6869  018686  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  6870  01868C  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  6871  018692  EC64  F0D1         	call	_Volts_to_SOC	;wreg free
  6872  018696  0060  F098  F1AE   	movff	btemp,_C+174	;volatile
  6873  01869C  0060  F09C  F1AF   	movff	btemp+1,_C+175	;volatile
  6874                           
  6875                           ;bsoc.c: 101:  C.dynamic_ah = C.bank_ah * (C.soc / 100.0);
  6876  0186A2  0060  F623  FFE6   	movff	_C+136,postinc1
  6877  0186A8  0060  F627  FFE6   	movff	_C+137,postinc1
  6878  0186AE  0060  F62B  FFE6   	movff	_C+138,postinc1
  6879  0186B4  0060  F62F  FFE6   	movff	_C+139,postinc1
  6880  0186BA  0E00               	movlw	0
  6881  0186BC  6EE6               	movwf	postinc1,c
  6882  0186BE  0E00               	movlw	0
  6883  0186C0  6EE6               	movwf	postinc1,c
  6884  0186C2  0EC8               	movlw	200
  6885  0186C4  6EE6               	movwf	postinc1,c
  6886  0186C6  0E42               	movlw	66
  6887  0186C8  6EE6               	movwf	postinc1,c
  6888  0186CA  0101               	movlb	1	; () banked
  6889  0186CC  51AE               	movf	(_C+174)& (0+255),w,b	;volatile
  6890  0186CE  6E2E               	movwf	(btemp+8)^0,c
  6891  0186D0  51AF               	movf	(_C+175)& (0+255),w,b	;volatile
  6892  0186D2  6E2F               	movwf	(btemp+9)^0,c
  6893  0186D4  6A30               	clrf	(btemp+10)^0,c
  6894  0186D6  6A31               	clrf	(btemp+11)^0,c
  6895  0186D8  0060  F0BB  FFE6   	movff	btemp+8,postinc1
  6896  0186DE  0060  F0BF  FFE6   	movff	btemp+9,postinc1
  6897  0186E4  0060  F0C3  FFE6   	movff	btemp+10,postinc1
  6898  0186EA  0060  F0C7  FFE6   	movff	btemp+11,postinc1
  6899  0186F0  0E00               	movlw	0
  6900  0186F2  6EE6               	movwf	postinc1,c
  6901  0186F4  EC17  F0BD         	call	___xxtofl	;wreg free
  6902  0186F8  0060  F09B  FFE6   	movff	btemp,postinc1
  6903  0186FE  0060  F09F  FFE6   	movff	btemp+1,postinc1
  6904  018704  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  6905  01870A  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  6906  018710  ECD8  F0A4         	call	___fldiv	;wreg free
  6907  018714  0060  F09B  FFE6   	movff	btemp,postinc1
  6908  01871A  0060  F09F  FFE6   	movff	btemp+1,postinc1
  6909  018720  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  6910  018726  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  6911  01872C  EC44  F099         	call	___flmul	;wreg free
  6912  018730  0060  F098  F18C   	movff	btemp,_C+140	;volatile
  6913  018736  0060  F09C  F18D   	movff	btemp+1,_C+141	;volatile
  6914  01873C  0060  F0A0  F18E   	movff	btemp+2,_C+142	;volatile
  6915  018742  0060  F0A4  F18F   	movff	btemp+3,_C+143	;volatile
  6916                           
  6917                           ;bsoc.c: 102:  TMR3_SetInterruptHandler(calc_bsoc);
  6918  018748  0E6E               	movlw	low _calc_bsoc
  6919  01874A  6EE6               	movwf	postinc1,c
  6920  01874C  0E42               	movlw	high _calc_bsoc
  6921  01874E  6EE6               	movwf	postinc1,c
  6922  018750  0E01               	movlw	low (_calc_bsoc shr (0+16))
  6923  018752  6EE6               	movwf	postinc1,c
  6924  018754  EC0B  F0DA         	call	_TMR3_SetInterruptHandler	;wreg free
  6925                           
  6926                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  6927  018758  0012               	return		;funcret
  6928  01875A                     __end_of_init_bsoc:
  6929                           	opt callstack 0
  6930                           
  6931 ;; *************** function _Volts_to_SOC *****************
  6932 ;; Defined at:
  6933 ;;		line 159 in file "bsoc.c"
  6934 ;; Parameters:    Size  Location     Type
  6935 ;;  cvoltage        4  [STACK] unsigned long 
  6936 ;; Auto vars:     Size  Location     Type
  6937 ;;		None
  6938 ;; Return value:  Size  Location     Type
  6939 ;;                  2  [STACK] unsigned short 
  6940 ;; Registers used:
  6941 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, tblptrl, tblptrh, tblptru, prodl, prodh
  6942 ;; Tracked objects:
  6943 ;;		On entry : 0/1
  6944 ;;		On exit  : 0/0
  6945 ;;		Unchanged: 0/0
  6946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6951 ;;Total ram usage:        0 bytes
  6952 ;; Hardware stack levels used:    1
  6953 ;; Hardware stack levels required when called:   15
  6954 ;; This function calls:
  6955 ;;		Nothing
  6956 ;; This function is called by:
  6957 ;;		_init_bsoc
  6958 ;; This function uses a reentrant model
  6959 ;;
  6960                           
  6961                           	psect	text12
  6962  01A2C8                     __ptext12:
  6963                           	opt callstack 0
  6964  01A2C8                     _Volts_to_SOC:
  6965                           	opt callstack 14
  6966                           
  6967                           ;bsoc.c: 159: uint16_t Volts_to_SOC(uint32_t cvoltage);bsoc.c: 160: {;bsoc.c: 161:  stat
      +                          ic uint8_t slot;;bsoc.c: 163:  C.soc = 0;
  6968                           
  6969                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6970                           ;incstack = 0
  6971  01A2C8  0101               	movlb	1	; () banked
  6972  01A2CA  6BAE               	clrf	(_C+174)& (0+255),b	;volatile
  6973  01A2CC  6BAF               	clrf	(_C+175)& (0+255),b	;volatile
  6974                           
  6975                           ;bsoc.c: 164:  for (slot = 0; slot < 26; slot++) {
  6976  01A2CE  6A19               	clrf	Volts_to_SOC@slot^0,c
  6977  01A2D0                     l10505:
  6978                           
  6979                           ;bsoc.c: 165:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  6980                           ;stkvar	_cvoltage @ sp[(0)+-4]
  6981  01A2D0  5019               	movf	Volts_to_SOC@slot^0,w,c
  6982  01A2D2  0D08               	mullw	8
  6983  01A2D4  0E79               	movlw	low _BVSOC_TABLE
  6984  01A2D6  24F3               	addwf	243,w,c
  6985  01A2D8  6EF6               	movwf	tblptrl,c
  6986  01A2DA  0EFA               	movlw	high _BVSOC_TABLE
  6987  01A2DC  20F4               	addwfc	244,w,c
  6988  01A2DE  6EF7               	movwf	tblptrh,c
  6989  01A2E0                     	if	1	;There are 3 active tblptr bytes
  6990  01A2E0  6AF8               	clrf	tblptru,c
  6991  01A2E2  0E00               	movlw	low (__mediumconst shr (0+16))
  6992  01A2E4  22F8               	addwfc	tblptru,f,c
  6993  01A2E6                     	endif
  6994  01A2E6  0EFC               	movlw	-4
  6995  01A2E8  50E3               	movf	plusw1,w,c
  6996  01A2EA  0009               	tblrd		*+
  6997  01A2EC  5CF5               	subwf	tablat,w,c
  6998  01A2EE  0EFD               	movlw	-3
  6999  01A2F0  50E3               	movf	plusw1,w,c
  7000  01A2F2  0009               	tblrd		*+
  7001  01A2F4  58F5               	subwfb	tablat,w,c
  7002  01A2F6  0EFE               	movlw	-2
  7003  01A2F8  50E3               	movf	plusw1,w,c
  7004  01A2FA  0009               	tblrd		*+
  7005  01A2FC  58F5               	subwfb	tablat,w,c
  7006  01A2FE  0EFF               	movlw	-1
  7007  01A300  50E3               	movf	plusw1,w,c
  7008  01A302  0009               	tblrd		*+
  7009  01A304  58F5               	subwfb	tablat,w,c
  7010  01A306  B0D8               	btfsc	status,0,c
  7011  01A308  D017               	goto	l10509
  7012                           
  7013                           ;bsoc.c: 166:    C.soc = BVSOC_TABLE[slot][1];
  7014  01A30A  5019               	movf	Volts_to_SOC@slot^0,w,c
  7015  01A30C  0D08               	mullw	8
  7016  01A30E  0E04               	movlw	4
  7017  01A310  26F3               	addwf	243,f,c
  7018  01A312  0E00               	movlw	0
  7019  01A314  22F4               	addwfc	244,f,c
  7020  01A316  0E79               	movlw	low _BVSOC_TABLE
  7021  01A318  24F3               	addwf	243,w,c
  7022  01A31A  6EF6               	movwf	tblptrl,c
  7023  01A31C  0EFA               	movlw	high _BVSOC_TABLE
  7024  01A31E  20F4               	addwfc	244,w,c
  7025  01A320  6EF7               	movwf	tblptrh,c
  7026  01A322                     	if	1	;There are 3 active tblptr bytes
  7027  01A322  6AF8               	clrf	tblptru,c
  7028  01A324  0E00               	movlw	low (__mediumconst shr (0+16))
  7029  01A326  22F8               	addwfc	tblptru,f,c
  7030  01A328                     	endif
  7031  01A328  0009               	tblrd		*+
  7032  01A32A  006F FFD4  F1AE    	movff	tablat,_C+174	;volatile
  7033  01A330  000A               	tblrd		*-
  7034  01A332  006F FFD4  F1AF    	movff	tablat,_C+175	;volatile
  7035  01A338                     l10509:
  7036                           
  7037                           ;bsoc.c: 168:  }
  7038  01A338  2A19               	incf	Volts_to_SOC@slot^0,f,c
  7039  01A33A  0E19               	movlw	25
  7040  01A33C  6419               	cpfsgt	Volts_to_SOC@slot^0,c
  7041  01A33E  D7C8               	goto	l10505
  7042                           
  7043                           ;bsoc.c: 170:  return C.soc;
  7044  01A340  EE20  F1AE         	lfsr	2,_C+174	;volatile
  7045  01A344  006F FF78  F026    	movff	postinc2,btemp
  7046  01A34A  006F FF74  F027    	movff	postdec2,btemp+1
  7047                           
  7048                           ; _Volts_to_SOC: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  7049  01A350  52E5               	movf	postdec1,f,c
  7050  01A352  52E5               	movf	postdec1,f,c
  7051  01A354  52E5               	movf	postdec1,f,c
  7052  01A356  52E5               	movf	postdec1,f,c
  7053  01A358  0012               	return		;funcret
  7054  01A35A                     __end_of_Volts_to_SOC:
  7055                           	opt callstack 0
  7056                           
  7057 ;; *************** function _hid_display *****************
  7058 ;; Defined at:
  7059 ;;		line 17 in file "hid.c"
  7060 ;; Parameters:    Size  Location     Type
  7061 ;;  h               1  [STACK] PTR struct H_data
  7062 ;;		 -> H(7), 
  7063 ;; Auto vars:     Size  Location     Type
  7064 ;;		None
  7065 ;; Return value:  Size  Location     Type
  7066 ;;                  1  [STACK] PTR struct H_data
  7067 ;; Registers used:
  7068 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  7069 ;; Tracked objects:
  7070 ;;		On entry : 3F/1
  7071 ;;		On exit  : 0/0
  7072 ;;		Unchanged: 0/0
  7073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7078 ;;Total ram usage:        0 bytes
  7079 ;; Hardware stack levels used:    1
  7080 ;; Hardware stack levels required when called:   17
  7081 ;; This function calls:
  7082 ;;		_hid_input
  7083 ;; This function is called by:
  7084 ;;		_main
  7085 ;; This function uses a reentrant model
  7086 ;;
  7087                           
  7088                           	psect	text13
  7089  019586                     __ptext13:
  7090                           	opt callstack 0
  7091  019586                     _hid_display:
  7092                           	opt callstack 13
  7093                           
  7094                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  7095                           ;stkvar	_h @ sp[(0)+-1]
  7096                           
  7097                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7098                           ;incstack = 0
  7099  019586  0EFF               	movlw	-1
  7100  019588  50E3               	movf	plusw1,w,c
  7101  01958A  6EE6               	movwf	postinc1,c
  7102  01958C  ECF6  F0D1         	call	_hid_input	;wreg free
  7103                           
  7104                           ;hid.c: 21:  switch (h->h_state) {
  7105  019590  D066               	goto	l10891
  7106  019592                     l10869:
  7107                           
  7108                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  7109                           ;stkvar	_h @ sp[(0)+-1]
  7110  019592  0EFF               	movlw	-1
  7111  019594  50E3               	movf	plusw1,w,c
  7112  019596  6ED9               	movwf	fsr2l,c
  7113  019598  6ADA               	clrf	fsr2h,c
  7114  01959A  0E01               	movlw	1
  7115  01959C  26D9               	addwf	fsr2l,f,c
  7116  01959E  0E01               	movlw	1
  7117  0195A0  6EDF               	movwf	indf2,c
  7118                           
  7119                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  7120                           ;stkvar	_h @ sp[(0)+-1]
  7121  0195A2  0EFF               	movlw	-1
  7122  0195A4  50E3               	movf	plusw1,w,c
  7123  0195A6  6ED9               	movwf	fsr2l,c
  7124  0195A8  6ADA               	clrf	fsr2h,c
  7125  0195AA  0E00               	movlw	0
  7126  0195AC  6EDF               	movwf	indf2,c
  7127                           
  7128                           ;hid.c: 25:   h->wait_enter = 1;
  7129                           ;stkvar	_h @ sp[(0)+-1]
  7130  0195AE  0EFF               	movlw	-1
  7131  0195B0  50E3               	movf	plusw1,w,c
  7132  0195B2  6ED9               	movwf	fsr2l,c
  7133  0195B4  6ADA               	clrf	fsr2h,c
  7134  0195B6  0E04               	movlw	4
  7135  0195B8  26D9               	addwf	fsr2l,f,c
  7136  0195BA  0E01               	movlw	1
  7137  0195BC  6EDF               	movwf	indf2,c
  7138                           
  7139                           ;hid.c: 26:   h->wait_select = 1;
  7140                           ;stkvar	_h @ sp[(0)+-1]
  7141  0195BE  0EFF               	movlw	-1
  7142  0195C0  50E3               	movf	plusw1,w,c
  7143  0195C2  6ED9               	movwf	fsr2l,c
  7144  0195C4  6ADA               	clrf	fsr2h,c
  7145  0195C6  0E02               	movlw	2
  7146  0195C8  26D9               	addwf	fsr2l,f,c
  7147  0195CA  0E01               	movlw	1
  7148  0195CC  6EDF               	movwf	indf2,c
  7149                           
  7150                           ;hid.c: 27:   h->select_p = SW_OFF;
  7151                           ;stkvar	_h @ sp[(0)+-1]
  7152  0195CE  0EFF               	movlw	-1
  7153  0195D0  50E3               	movf	plusw1,w,c
  7154  0195D2  6ED9               	movwf	fsr2l,c
  7155  0195D4  6ADA               	clrf	fsr2h,c
  7156  0195D6  0E03               	movlw	3
  7157  0195D8  26D9               	addwf	fsr2l,f,c
  7158  0195DA  0E00               	movlw	0
  7159  0195DC  6EDF               	movwf	indf2,c
  7160                           
  7161                           ;hid.c: 28:   h->enter_p = SW_OFF;
  7162                           ;stkvar	_h @ sp[(0)+-1]
  7163  0195DE  0EFF               	movlw	-1
  7164  0195E0  50E3               	movf	plusw1,w,c
  7165  0195E2  6ED9               	movwf	fsr2l,c
  7166  0195E4  6ADA               	clrf	fsr2h,c
  7167  0195E6  0E05               	movlw	5
  7168  0195E8  26D9               	addwf	fsr2l,f,c
  7169  0195EA  0E00               	movlw	0
  7170  0195EC  D036               	goto	L3
  7171  0195EE                     l10881:
  7172                           
  7173                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  7174                           ;stkvar	_h @ sp[(0)+-1]
  7175  0195EE  0EFF               	movlw	-1
  7176  0195F0  50E3               	movf	plusw1,w,c
  7177  0195F2  6ED9               	movwf	fsr2l,c
  7178  0195F4  6ADA               	clrf	fsr2h,c
  7179  0195F6  0E02               	movlw	2
  7180  0195F8  26D9               	addwf	fsr2l,f,c
  7181  0195FA  50DF               	movf	indf2,w,c
  7182  0195FC  A4D8               	btfss	status,2,c
  7183  0195FE  D042               	goto	l1972
  7184                           
  7185                           ;stkvar	_h @ sp[(0)+-1]
  7186  019600  0EFF               	movlw	-1
  7187  019602  50E3               	movf	plusw1,w,c
  7188  019604  6ED9               	movwf	fsr2l,c
  7189  019606  6ADA               	clrf	fsr2h,c
  7190  019608  0E03               	movlw	3
  7191  01960A  26D9               	addwf	fsr2l,f,c
  7192  01960C  50DF               	movf	indf2,w,c
  7193  01960E  A4D8               	btfss	status,2,c
  7194  019610  D039               	goto	l1972
  7195                           
  7196                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  7197                           ;stkvar	_h @ sp[(0)+-1]
  7198  019612  0EFF               	movlw	-1
  7199  019614  50E3               	movf	plusw1,w,c
  7200  019616  6ED9               	movwf	fsr2l,c
  7201  019618  6ADA               	clrf	fsr2h,c
  7202  01961A  0E06               	movlw	6
  7203  01961C  26D9               	addwf	fsr2l,f,c
  7204                           
  7205                           ;stkvar	_h @ sp[(0)+-1]
  7206  01961E  0EFF               	movlw	-1
  7207  019620  50E3               	movf	plusw1,w,c
  7208  019622  6EE9               	movwf	fsr0l,c
  7209  019624  6AEA               	clrf	fsr0h,c
  7210  019626  0E06               	movlw	6
  7211  019628  26E9               	addwf	fsr0l,f,c
  7212  01962A  2AEF               	incf	indf0,f,c
  7213  01962C  50EF               	movf	indf0,w,c
  7214  01962E  0B03               	andlw	3
  7215  019630  6EDF               	movwf	indf2,c
  7216                           
  7217                           ;hid.c: 34:    h->hid_display = h->sequence;
  7218                           ;stkvar	_h @ sp[(0)+-1]
  7219  019632  0EFF               	movlw	-1
  7220  019634  50E3               	movf	plusw1,w,c
  7221  019636  6ED9               	movwf	fsr2l,c
  7222  019638  6ADA               	clrf	fsr2h,c
  7223  01963A  0E06               	movlw	6
  7224  01963C  26D9               	addwf	fsr2l,f,c
  7225                           
  7226                           ;stkvar	_h @ sp[(0)+-1]
  7227  01963E  0EFF               	movlw	-1
  7228  019640  50E3               	movf	plusw1,w,c
  7229  019642  6EE9               	movwf	fsr0l,c
  7230  019644  6AEA               	clrf	fsr0h,c
  7231  019646  006F FF7F FFEF     	movff	indf2,indf0
  7232                           
  7233                           ;hid.c: 35:    h->wait_select = 1;
  7234                           ;stkvar	_h @ sp[(0)+-1]
  7235  01964C  0EFF               	movlw	-1
  7236  01964E  50E3               	movf	plusw1,w,c
  7237  019650  6ED9               	movwf	fsr2l,c
  7238  019652  6ADA               	clrf	fsr2h,c
  7239  019654  0E02               	movlw	2
  7240  019656  26D9               	addwf	fsr2l,f,c
  7241  019658  0E01               	movlw	1
  7242  01965A                     L3:
  7243  01965A  6EDF               	movwf	indf2,c
  7244  01965C  D013               	goto	l1972
  7245  01965E                     l10891:
  7246                           
  7247                           ;stkvar	_h @ sp[(0)+-1]
  7248  01965E  0EFF               	movlw	-1
  7249  019660  50E3               	movf	plusw1,w,c
  7250  019662  6ED9               	movwf	fsr2l,c
  7251  019664  6ADA               	clrf	fsr2h,c
  7252  019666  0E01               	movlw	1
  7253  019668  26D9               	addwf	fsr2l,f,c
  7254  01966A  50DF               	movf	indf2,w,c
  7255  01966C  6E30               	movwf	(btemp+10)^0,c
  7256  01966E  6A31               	clrf	(btemp+11)^0,c
  7257                           
  7258                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7259                           ; Switch size 1, requested type "simple"
  7260                           ; Number of cases is 1, Range of values is 0 to 0
  7261                           ; switch strategies available:
  7262                           ; Name         Instructions Cycles
  7263                           ; simple_byte            4     3 (average)
  7264                           ;	Chosen strategy is simple_byte
  7265  019670  5031               	movf	(btemp+11)^0,w,c
  7266  019672  0A00               	xorlw	0	; case 0
  7267  019674  A4D8               	btfss	status,2,c
  7268  019676  D7BB               	goto	l10881
  7269                           
  7270                           ; Switch size 1, requested type "simple"
  7271                           ; Number of cases is 2, Range of values is 0 to 1
  7272                           ; switch strategies available:
  7273                           ; Name         Instructions Cycles
  7274                           ; simple_byte            7     4 (average)
  7275                           ;	Chosen strategy is simple_byte
  7276  019678  5030               	movf	(btemp+10)^0,w,c
  7277  01967A  0A00               	xorlw	0	; case 0
  7278  01967C  B4D8               	btfsc	status,2,c
  7279  01967E  D789               	goto	l10869
  7280  019680  0A01               	xorlw	1	; case 1
  7281  019682  D7B5               	goto	l10881
  7282  019684                     l1972:
  7283                           
  7284                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  7285  019684  52E5               	movf	postdec1,f,c
  7286  019686  0012               	return		;funcret
  7287  019688                     __end_of_hid_display:
  7288                           	opt callstack 0
  7289                           
  7290 ;; *************** function _hid_input *****************
  7291 ;; Defined at:
  7292 ;;		line 3 in file "hid.c"
  7293 ;; Parameters:    Size  Location     Type
  7294 ;;  h               1  [STACK] PTR struct H_data
  7295 ;;		 -> H(7), 
  7296 ;; Auto vars:     Size  Location     Type
  7297 ;;		None
  7298 ;; Return value:  Size  Location     Type
  7299 ;;                  1  [STACK] PTR struct H_data
  7300 ;; Registers used:
  7301 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  7302 ;; Tracked objects:
  7303 ;;		On entry : 0/1
  7304 ;;		On exit  : 0/0
  7305 ;;		Unchanged: 0/0
  7306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7311 ;;Total ram usage:        0 bytes
  7312 ;; Hardware stack levels used:    1
  7313 ;; Hardware stack levels required when called:   16
  7314 ;; This function calls:
  7315 ;;		_get_switch
  7316 ;; This function is called by:
  7317 ;;		_hid_display
  7318 ;; This function uses a reentrant model
  7319 ;;
  7320                           
  7321                           	psect	text14
  7322  01A3EC                     __ptext14:
  7323                           	opt callstack 0
  7324  01A3EC                     _hid_input:
  7325                           	opt callstack 13
  7326                           
  7327                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  7328                           
  7329                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7330                           ;incstack = 0
  7331  01A3EC  0E02               	movlw	2
  7332  01A3EE  6EE6               	movwf	postinc1,c
  7333  01A3F0  ECFF  F0D8         	call	_get_switch	;wreg free
  7334  01A3F4  5026               	movf	btemp^0,w,c
  7335  01A3F6  B4D8               	btfsc	status,2,c
  7336  01A3F8  D01C               	goto	l10433
  7337                           
  7338                           ;hid.c: 6:   h->wait_select = 0;
  7339                           ;stkvar	_h @ sp[(0)+-1]
  7340  01A3FA  0EFF               	movlw	-1
  7341  01A3FC  50E3               	movf	plusw1,w,c
  7342  01A3FE  6ED9               	movwf	fsr2l,c
  7343  01A400  6ADA               	clrf	fsr2h,c
  7344  01A402  0E02               	movlw	2
  7345  01A404  26D9               	addwf	fsr2l,f,c
  7346  01A406  0E00               	movlw	0
  7347  01A408  6EDF               	movwf	indf2,c
  7348                           
  7349                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  7350  01A40A  0E02               	movlw	2
  7351  01A40C  6EE6               	movwf	postinc1,c
  7352  01A40E  ECFF  F0D8         	call	_get_switch	;wreg free
  7353  01A412  5026               	movf	btemp^0,w,c
  7354  01A414  B4D8               	btfsc	status,2,c
  7355  01A416  D003               	goto	u9680
  7356  01A418  6A31               	clrf	(btemp+11)^0,c
  7357  01A41A  2A31               	incf	(btemp+11)^0,f,c
  7358  01A41C  D001               	goto	u9698
  7359  01A41E                     u9680:
  7360  01A41E  6A31               	clrf	(btemp+11)^0,c
  7361  01A420                     u9698:
  7362                           
  7363                           ;stkvar	_h @ sp[(0)+-1]
  7364  01A420  0EFF               	movlw	-1
  7365  01A422  50E3               	movf	plusw1,w,c
  7366  01A424  6ED9               	movwf	fsr2l,c
  7367  01A426  6ADA               	clrf	fsr2h,c
  7368  01A428  0E03               	movlw	3
  7369  01A42A  26D9               	addwf	fsr2l,f,c
  7370  01A42C  0060  F0C7  FFDF   	movff	btemp+11,indf2
  7371  01A432                     l10433:
  7372                           
  7373                           ;hid.c: 10:  if (get_switch(SENTER)) {
  7374  01A432  0E03               	movlw	3
  7375  01A434  6EE6               	movwf	postinc1,c
  7376  01A436  ECFF  F0D8         	call	_get_switch	;wreg free
  7377  01A43A  5026               	movf	btemp^0,w,c
  7378  01A43C  B4D8               	btfsc	status,2,c
  7379  01A43E  D01C               	goto	l1963
  7380                           
  7381                           ;hid.c: 11:   h->wait_enter = 0;
  7382                           ;stkvar	_h @ sp[(0)+-1]
  7383  01A440  0EFF               	movlw	-1
  7384  01A442  50E3               	movf	plusw1,w,c
  7385  01A444  6ED9               	movwf	fsr2l,c
  7386  01A446  6ADA               	clrf	fsr2h,c
  7387  01A448  0E04               	movlw	4
  7388  01A44A  26D9               	addwf	fsr2l,f,c
  7389  01A44C  0E00               	movlw	0
  7390  01A44E  6EDF               	movwf	indf2,c
  7391                           
  7392                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  7393  01A450  0E03               	movlw	3
  7394  01A452  6EE6               	movwf	postinc1,c
  7395  01A454  ECFF  F0D8         	call	_get_switch	;wreg free
  7396  01A458  5026               	movf	btemp^0,w,c
  7397  01A45A  B4D8               	btfsc	status,2,c
  7398  01A45C  D003               	goto	u9710
  7399  01A45E  6A31               	clrf	(btemp+11)^0,c
  7400  01A460  2A31               	incf	(btemp+11)^0,f,c
  7401  01A462  D001               	goto	u9728
  7402  01A464                     u9710:
  7403  01A464  6A31               	clrf	(btemp+11)^0,c
  7404  01A466                     u9728:
  7405                           
  7406                           ;stkvar	_h @ sp[(0)+-1]
  7407  01A466  0EFF               	movlw	-1
  7408  01A468  50E3               	movf	plusw1,w,c
  7409  01A46A  6ED9               	movwf	fsr2l,c
  7410  01A46C  6ADA               	clrf	fsr2h,c
  7411  01A46E  0E05               	movlw	5
  7412  01A470  26D9               	addwf	fsr2l,f,c
  7413  01A472  0060  F0C7  FFDF   	movff	btemp+11,indf2
  7414  01A478                     l1963:
  7415                           
  7416                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  7417  01A478  52E5               	movf	postdec1,f,c
  7418  01A47A  0012               	return		;funcret
  7419  01A47C                     __end_of_hid_input:
  7420                           	opt callstack 0
  7421                           
  7422 ;; *************** function _get_switch *****************
  7423 ;; Defined at:
  7424 ;;		line 18 in file "dio.c"
  7425 ;; Parameters:    Size  Location     Type
  7426 ;;  i               1  [STACK] unsigned char 
  7427 ;; Auto vars:     Size  Location     Type
  7428 ;;		None
  7429 ;; Return value:  Size  Location     Type
  7430 ;;                  1  [STACK] enum E17021
  7431 ;; Registers used:
  7432 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  7433 ;; Tracked objects:
  7434 ;;		On entry : 0/2
  7435 ;;		On exit  : 0/0
  7436 ;;		Unchanged: 0/0
  7437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7442 ;;Total ram usage:        0 bytes
  7443 ;; Hardware stack levels used:    1
  7444 ;; Hardware stack levels required when called:   15
  7445 ;; This function calls:
  7446 ;;		Nothing
  7447 ;; This function is called by:
  7448 ;;		_main
  7449 ;;		_hid_input
  7450 ;; This function uses a reentrant model
  7451 ;;
  7452                           
  7453                           	psect	text15
  7454  01B1FE                     __ptext15:
  7455                           	opt callstack 0
  7456  01B1FE                     _get_switch:
  7457                           	opt callstack 13
  7458                           
  7459                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  7460                           ;stkvar	_i @ sp[(0)+-1]
  7461                           
  7462                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7463                           ;incstack = 0
  7464  01B1FE  0EFF               	movlw	-1
  7465  01B200  006F FF8C  F026    	movff	plusw1,btemp
  7466  01B206  0E03               	movlw	3
  7467  01B208  6426               	cpfsgt	btemp^0,c
  7468  01B20A  D002               	goto	l9827
  7469                           
  7470                           ;dio.c: 21:   return SW_OFF;
  7471  01B20C  0E00               	movlw	0
  7472  01B20E  D00A               	goto	L4
  7473  01B210                     l9827:
  7474                           
  7475                           ;dio.c: 23:  return S.button[i].sw;
  7476                           ;stkvar	_i @ sp[(0)+-1]
  7477  01B210  0EFF               	movlw	-1
  7478  01B212  50E3               	movf	plusw1,w,c
  7479  01B214  0D05               	mullw	5
  7480  01B216  0EC6               	movlw	low _S
  7481  01B218  24F3               	addwf	243,w,c
  7482  01B21A  6ED9               	movwf	fsr2l,c
  7483  01B21C  0E02               	movlw	high _S
  7484  01B21E  20F4               	addwfc	prodh,w,c
  7485  01B220  6EDA               	movwf	fsr2h,c
  7486  01B222  50DF               	movf	indf2,w,c
  7487  01B224                     L4:
  7488  01B224  6E26               	movwf	btemp^0,c
  7489                           
  7490                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  7491  01B226  52E5               	movf	postdec1,f,c
  7492  01B228  0012               	return		;funcret
  7493  01B22A                     __end_of_get_switch:
  7494                           	opt callstack 0
  7495                           
  7496 ;; *************** function _esr_check *****************
  7497 ;; Defined at:
  7498 ;;		line 179 in file "bsoc.c"
  7499 ;; Parameters:    Size  Location     Type
  7500 ;;  fsm             1  [STACK] unsigned char 
  7501 ;; Auto vars:     Size  Location     Type
  7502 ;;		None
  7503 ;; Return value:  Size  Location     Type
  7504 ;;                  4  [STACK] float 
  7505 ;; Registers used:
  7506 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7507 ;; Tracked objects:
  7508 ;;		On entry : 0/0
  7509 ;;		On exit  : 0/0
  7510 ;;		Unchanged: 0/0
  7511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7516 ;;Total ram usage:        0 bytes
  7517 ;; Hardware stack levels used:    1
  7518 ;; Hardware stack levels required when called:   18
  7519 ;; This function calls:
  7520 ;;		_StartTimer
  7521 ;;		_TimerDone
  7522 ;;		___fldiv
  7523 ;;		___flsub
  7524 ;;		_conv_raw_result
  7525 ;;		_fabsf
  7526 ;;		_set_load_relay_one
  7527 ;;		_set_load_relay_two
  7528 ;;		_update_adc_result
  7529 ;; This function is called by:
  7530 ;;		_main
  7531 ;; This function uses a reentrant model
  7532 ;;
  7533                           
  7534                           	psect	text16
  7535  01694A                     __ptext16:
  7536                           	opt callstack 0
  7537  01694A                     _esr_check:
  7538                           	opt callstack 12
  7539                           
  7540                           ;bsoc.c: 179: float esr_check(uint8_t fsm);bsoc.c: 180: {;bsoc.c: 181:  static uint8_t e
      +                          sr_state = 0;;bsoc.c: 183:  if (fsm) {
  7541                           ;stkvar	_fsm @ sp[(0)+-1]
  7542                           
  7543                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7544                           ;incstack = 0
  7545  01694A  0EFF               	movlw	-1
  7546  01694C  50E3               	movf	plusw1,w,c
  7547  01694E  B4D8               	btfsc	status,2,c
  7548  016950  D13E               	goto	l10807
  7549                           
  7550                           ;bsoc.c: 184:   esr_state = 0;
  7551  016952  6A18               	clrf	esr_check@esr_state^0,c
  7552                           
  7553                           ;bsoc.c: 185:   return -10.0;
  7554  016954  0E00               	movlw	0
  7555  016956  6E26               	movwf	btemp^0,c
  7556  016958  0E00               	movlw	0
  7557  01695A  6E27               	movwf	(btemp+1)^0,c
  7558  01695C  0E20               	movlw	32
  7559  01695E  6E28               	movwf	(btemp+2)^0,c
  7560  016960  0EC1               	movlw	193
  7561  016962  D150               	goto	L5
  7562  016964                     l10739:
  7563                           
  7564                           ;bsoc.c: 190:   StartTimer(TMR_ESR, 10000);
  7565  016964  0E10               	movlw	16
  7566  016966  6EE6               	movwf	postinc1,c
  7567  016968  0E27               	movlw	39
  7568  01696A  6EE6               	movwf	postinc1,c
  7569  01696C  0E0C               	movlw	12
  7570  01696E  6EE6               	movwf	postinc1,c
  7571  016970  EC12  F0D7         	call	_StartTimer	;wreg free
  7572  016974                     l10741:
  7573                           
  7574                           ;bsoc.c: 191:   esr_state++;
  7575  016974  2A18               	incf	esr_check@esr_state^0,f,c
  7576                           
  7577                           ;bsoc.c: 192:   break;
  7578  016976  D13F               	goto	l10809
  7579  016978                     l10743:
  7580                           
  7581                           ;bsoc.c: 197:   set_load_relay_one(0);
  7582  016978  0E00               	movlw	0
  7583  01697A  6EE6               	movwf	postinc1,c
  7584  01697C  EC1F  F0DC         	call	_set_load_relay_one	;wreg free
  7585                           
  7586                           ;bsoc.c: 198:   set_load_relay_two(0);
  7587  016980  0E00               	movlw	0
  7588  016982  6EE6               	movwf	postinc1,c
  7589  016984  EC17  F0DC         	call	_set_load_relay_two	;wreg free
  7590                           
  7591                           ;bsoc.c: 199:   if (TimerDone(TMR_ESR)) {
  7592  016988  0E0C               	movlw	12
  7593  01698A  6EE6               	movwf	postinc1,c
  7594  01698C  EC93  F0D9         	call	_TimerDone	;wreg free
  7595  016990  5026               	movf	btemp^0,w,c
  7596  016992  B4D8               	btfsc	status,2,c
  7597  016994  D009               	goto	l10749
  7598                           
  7599                           ;bsoc.c: 200:    StartTimer(TMR_ESR, 10000);
  7600  016996  0E10               	movlw	16
  7601  016998  6EE6               	movwf	postinc1,c
  7602  01699A  0E27               	movlw	39
  7603  01699C  6EE6               	movwf	postinc1,c
  7604  01699E  0E0C               	movlw	12
  7605  0169A0  6EE6               	movwf	postinc1,c
  7606  0169A2  EC12  F0D7         	call	_StartTimer	;wreg free
  7607                           
  7608                           ;bsoc.c: 201:   } else {
  7609  0169A6  D006               	goto	l10753
  7610  0169A8                     l10749:
  7611                           
  7612                           ;bsoc.c: 202:    return -2.0;
  7613  0169A8  0E00               	movlw	0
  7614  0169AA  6E26               	movwf	btemp^0,c
  7615  0169AC  0E00               	movlw	0
  7616  0169AE  6E27               	movwf	(btemp+1)^0,c
  7617  0169B0  0E00               	movlw	0
  7618  0169B2  D066               	goto	L7
  7619  0169B4                     l10753:
  7620                           
  7621                           ;bsoc.c: 207:   update_adc_result();
  7622  0169B4  ECB1  F0D7         	call	_update_adc_result	;wreg free
  7623                           
  7624                           ;bsoc.c: 208:   C.bv_noload = conv_raw_result(V_BAT, CONV);
  7625  0169B8  0E00               	movlw	0
  7626  0169BA  6EE6               	movwf	postinc1,c
  7627  0169BC  0E04               	movlw	4
  7628  0169BE  6EE6               	movwf	postinc1,c
  7629  0169C0  EC95  F0A7         	call	_conv_raw_result	;wreg free
  7630  0169C4  0060  F098  F1EB   	movff	btemp,_C+235	;volatile
  7631  0169CA  0060  F09C  F1EC   	movff	btemp+1,_C+236	;volatile
  7632  0169D0  0060  F0A0  F1ED   	movff	btemp+2,_C+237	;volatile
  7633  0169D6  0060  F0A4  F1EE   	movff	btemp+3,_C+238	;volatile
  7634  0169DC  D7CB               	goto	l10741
  7635  0169DE                     l10759:
  7636                           
  7637                           ;bsoc.c: 212:   set_load_relay_one(1);
  7638  0169DE  0E01               	movlw	1
  7639  0169E0  6EE6               	movwf	postinc1,c
  7640  0169E2  EC1F  F0DC         	call	_set_load_relay_one	;wreg free
  7641                           
  7642                           ;bsoc.c: 213:   if (TimerDone(TMR_ESR)) {
  7643  0169E6  0E0C               	movlw	12
  7644  0169E8  6EE6               	movwf	postinc1,c
  7645  0169EA  EC93  F0D9         	call	_TimerDone	;wreg free
  7646  0169EE  5026               	movf	btemp^0,w,c
  7647  0169F0  B4D8               	btfsc	status,2,c
  7648  0169F2  D009               	goto	l10765
  7649                           
  7650                           ;bsoc.c: 214:    StartTimer(TMR_ESR, 10000);
  7651  0169F4  0E10               	movlw	16
  7652  0169F6  6EE6               	movwf	postinc1,c
  7653  0169F8  0E27               	movlw	39
  7654  0169FA  6EE6               	movwf	postinc1,c
  7655  0169FC  0E0C               	movlw	12
  7656  0169FE  6EE6               	movwf	postinc1,c
  7657  016A00  EC12  F0D7         	call	_StartTimer	;wreg free
  7658                           
  7659                           ;bsoc.c: 215:   } else {
  7660  016A04  D006               	goto	l10769
  7661  016A06                     l10765:
  7662                           
  7663                           ;bsoc.c: 216:    return -3.0;
  7664  016A06  0E00               	movlw	0
  7665  016A08  6E26               	movwf	btemp^0,c
  7666  016A0A  0E00               	movlw	0
  7667  016A0C  6E27               	movwf	(btemp+1)^0,c
  7668  016A0E  0E40               	movlw	64
  7669  016A10  D037               	goto	L7
  7670  016A12                     l10769:
  7671                           
  7672                           ;bsoc.c: 219:   update_adc_result();
  7673  016A12  ECB1  F0D7         	call	_update_adc_result	;wreg free
  7674                           
  7675                           ;bsoc.c: 220:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
  7676  016A16  0E00               	movlw	0
  7677  016A18  6EE6               	movwf	postinc1,c
  7678  016A1A  0E04               	movlw	4
  7679  016A1C  6EE6               	movwf	postinc1,c
  7680  016A1E  EC95  F0A7         	call	_conv_raw_result	;wreg free
  7681  016A22  0060  F098  F1EF   	movff	btemp,_C+239	;volatile
  7682  016A28  0060  F09C  F1F0   	movff	btemp+1,_C+240	;volatile
  7683  016A2E  0060  F0A0  F1F1   	movff	btemp+2,_C+241	;volatile
  7684  016A34  0060  F0A4  F1F2   	movff	btemp+3,_C+242	;volatile
  7685                           
  7686                           ;bsoc.c: 221:   C.load_i1 = conv_raw_result(C_BATT, CONV);
  7687  016A3A  0E00               	movlw	0
  7688  016A3C  6EE6               	movwf	postinc1,c
  7689  016A3E  0E00               	movlw	0
  7690  016A40  6EE6               	movwf	postinc1,c
  7691  016A42  EC95  F0A7         	call	_conv_raw_result	;wreg free
  7692  016A46  0060  F098  F1E3   	movff	btemp,_C+227	;volatile
  7693  016A4C  0060  F09C  F1E4   	movff	btemp+1,_C+228	;volatile
  7694  016A52  0060  F0A0  F1E5   	movff	btemp+2,_C+229	;volatile
  7695  016A58  0060  F0A4  F1E6   	movff	btemp+3,_C+230	;volatile
  7696  016A5E  D78A               	goto	l10741
  7697  016A60                     l10777:
  7698                           
  7699                           ;bsoc.c: 225:   set_load_relay_two(1);
  7700  016A60  0E01               	movlw	1
  7701  016A62  6EE6               	movwf	postinc1,c
  7702  016A64  EC17  F0DC         	call	_set_load_relay_two	;wreg free
  7703                           
  7704                           ;bsoc.c: 226:   if (!TimerDone(TMR_ESR))
  7705  016A68  0E0C               	movlw	12
  7706  016A6A  6EE6               	movwf	postinc1,c
  7707  016A6C  EC93  F0D9         	call	_TimerDone	;wreg free
  7708  016A70  5026               	movf	btemp^0,w,c
  7709  016A72  A4D8               	btfss	status,2,c
  7710  016A74  D008               	goto	l10785
  7711                           
  7712                           ;bsoc.c: 227:    return -4.0;
  7713  016A76  0E00               	movlw	0
  7714  016A78  6E26               	movwf	btemp^0,c
  7715  016A7A  0E00               	movlw	0
  7716  016A7C  6E27               	movwf	(btemp+1)^0,c
  7717  016A7E  0E80               	movlw	128
  7718  016A80                     L7:
  7719  016A80  6E28               	movwf	(btemp+2)^0,c
  7720  016A82  0EC0               	movlw	192
  7721  016A84  D0BF               	goto	L5
  7722  016A86                     l10785:
  7723                           
  7724                           ;bsoc.c: 229:   update_adc_result();
  7725  016A86  ECB1  F0D7         	call	_update_adc_result	;wreg free
  7726                           
  7727                           ;bsoc.c: 230:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
  7728  016A8A  0E00               	movlw	0
  7729  016A8C  6EE6               	movwf	postinc1,c
  7730  016A8E  0E04               	movlw	4
  7731  016A90  6EE6               	movwf	postinc1,c
  7732  016A92  EC95  F0A7         	call	_conv_raw_result	;wreg free
  7733  016A96  0060  F098  F1F3   	movff	btemp,_C+243	;volatile
  7734  016A9C  0060  F09C  F1F4   	movff	btemp+1,_C+244	;volatile
  7735  016AA2  0060  F0A0  F1F5   	movff	btemp+2,_C+245	;volatile
  7736  016AA8  0060  F0A4  F1F6   	movff	btemp+3,_C+246	;volatile
  7737                           
  7738                           ;bsoc.c: 231:   C.load_i2 = conv_raw_result(C_BATT, CONV);
  7739  016AAE  0E00               	movlw	0
  7740  016AB0  6EE6               	movwf	postinc1,c
  7741  016AB2  0E00               	movlw	0
  7742  016AB4  6EE6               	movwf	postinc1,c
  7743  016AB6  EC95  F0A7         	call	_conv_raw_result	;wreg free
  7744  016ABA  0060  F098  F1E7   	movff	btemp,_C+231	;volatile
  7745  016AC0  0060  F09C  F1E8   	movff	btemp+1,_C+232	;volatile
  7746  016AC6  0060  F0A0  F1E9   	movff	btemp+2,_C+233	;volatile
  7747  016ACC  0060  F0A4  F1EA   	movff	btemp+3,_C+234	;volatile
  7748                           
  7749                           ;bsoc.c: 233:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
  7750  016AD2  0060  F79F  FFE6   	movff	_C+231,postinc1
  7751  016AD8  0060  F7A3  FFE6   	movff	_C+232,postinc1
  7752  016ADE  0060  F7A7  FFE6   	movff	_C+233,postinc1
  7753  016AE4  0060  F7AB  FFE6   	movff	_C+234,postinc1
  7754  016AEA  0060  F78F  FFE6   	movff	_C+227,postinc1
  7755  016AF0  0060  F793  FFE6   	movff	_C+228,postinc1
  7756  016AF6  0060  F797  FFE6   	movff	_C+229,postinc1
  7757  016AFC  0060  F79B  FFE6   	movff	_C+230,postinc1
  7758  016B02  EC43  F0D6         	call	___flsub	;wreg free
  7759  016B06  0060  F09B  FFE6   	movff	btemp,postinc1
  7760  016B0C  0060  F09F  FFE6   	movff	btemp+1,postinc1
  7761  016B12  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  7762  016B18  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  7763  016B1E  0060  F7CF  FFE6   	movff	_C+243,postinc1
  7764  016B24  0060  F7D3  FFE6   	movff	_C+244,postinc1
  7765  016B2A  0060  F7D7  FFE6   	movff	_C+245,postinc1
  7766  016B30  0060  F7DB  FFE6   	movff	_C+246,postinc1
  7767  016B36  0060  F7BF  FFE6   	movff	_C+239,postinc1
  7768  016B3C  0060  F7C3  FFE6   	movff	_C+240,postinc1
  7769  016B42  0060  F7C7  FFE6   	movff	_C+241,postinc1
  7770  016B48  0060  F7CB  FFE6   	movff	_C+242,postinc1
  7771  016B4E  EC43  F0D6         	call	___flsub	;wreg free
  7772  016B52  0060  F09B  FFE6   	movff	btemp,postinc1
  7773  016B58  0060  F09F  FFE6   	movff	btemp+1,postinc1
  7774  016B5E  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  7775  016B64  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  7776  016B6A  ECD8  F0A4         	call	___fldiv	;wreg free
  7777  016B6E  0060  F09B  FFE6   	movff	btemp,postinc1
  7778  016B74  0060  F09F  FFE6   	movff	btemp+1,postinc1
  7779  016B7A  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  7780  016B80  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  7781  016B86  EC28  F0CF         	call	_fabsf	;wreg free
  7782  016B8A  0060  F098  F184   	movff	btemp,_C+132	;volatile
  7783  016B90  0060  F09C  F185   	movff	btemp+1,_C+133	;volatile
  7784  016B96  0060  F0A0  F186   	movff	btemp+2,_C+134	;volatile
  7785  016B9C  0060  F0A4  F187   	movff	btemp+3,_C+135	;volatile
  7786                           
  7787                           ;bsoc.c: 234:   set_load_relay_one(0);
  7788  016BA2  0E00               	movlw	0
  7789  016BA4  6EE6               	movwf	postinc1,c
  7790  016BA6  EC1F  F0DC         	call	_set_load_relay_one	;wreg free
  7791                           
  7792                           ;bsoc.c: 235:   set_load_relay_two(0);
  7793  016BAA  0E00               	movlw	0
  7794  016BAC  6EE6               	movwf	postinc1,c
  7795  016BAE  EC17  F0DC         	call	_set_load_relay_two	;wreg free
  7796                           
  7797                           ;bsoc.c: 236:   esr_state = 0;
  7798  016BB2  6A18               	clrf	esr_check@esr_state^0,c
  7799                           
  7800                           ;bsoc.c: 237:   return C.esr;
  7801  016BB4  0060  F610  F026   	movff	_C+132,btemp	;volatile
  7802  016BBA  0060  F614  F027   	movff	_C+133,btemp+1	;volatile
  7803  016BC0  0060  F618  F028   	movff	_C+134,btemp+2	;volatile
  7804  016BC6  0060  F61C  F029   	movff	_C+135,btemp+3	;volatile
  7805  016BCC  D01C               	goto	l2080
  7806  016BCE                     l10807:
  7807  016BCE  5018               	movf	esr_check@esr_state^0,w,c
  7808  016BD0  6E30               	movwf	(btemp+10)^0,c
  7809  016BD2  6A31               	clrf	(btemp+11)^0,c
  7810                           
  7811                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7812                           ; Switch size 1, requested type "simple"
  7813                           ; Number of cases is 1, Range of values is 0 to 0
  7814                           ; switch strategies available:
  7815                           ; Name         Instructions Cycles
  7816                           ; simple_byte            4     3 (average)
  7817                           ;	Chosen strategy is simple_byte
  7818  016BD4  5031               	movf	(btemp+11)^0,w,c
  7819  016BD6  0A00               	xorlw	0	; case 0
  7820  016BD8  A4D8               	btfss	status,2,c
  7821  016BDA  D00D               	goto	l10809
  7822                           
  7823                           ; Switch size 1, requested type "simple"
  7824                           ; Number of cases is 4, Range of values is 0 to 3
  7825                           ; switch strategies available:
  7826                           ; Name         Instructions Cycles
  7827                           ; simple_byte           13     7 (average)
  7828                           ;	Chosen strategy is simple_byte
  7829  016BDC  5030               	movf	(btemp+10)^0,w,c
  7830  016BDE  0A00               	xorlw	0	; case 0
  7831  016BE0  B4D8               	btfsc	status,2,c
  7832  016BE2  D6C0               	goto	l10739
  7833  016BE4  0A01               	xorlw	1	; case 1
  7834  016BE6  B4D8               	btfsc	status,2,c
  7835  016BE8  D6C7               	goto	l10743
  7836  016BEA  0A03               	xorlw	3	; case 2
  7837  016BEC  B4D8               	btfsc	status,2,c
  7838  016BEE  D6F7               	goto	l10759
  7839  016BF0  0A01               	xorlw	1	; case 3
  7840  016BF2  B4D8               	btfsc	status,2,c
  7841  016BF4  D735               	goto	l10777
  7842  016BF6                     l10809:
  7843                           
  7844                           ;bsoc.c: 242:  return -1.0;
  7845  016BF6  0E00               	movlw	0
  7846  016BF8  6E26               	movwf	btemp^0,c
  7847  016BFA  0E00               	movlw	0
  7848  016BFC  6E27               	movwf	(btemp+1)^0,c
  7849  016BFE  0E80               	movlw	128
  7850  016C00  6E28               	movwf	(btemp+2)^0,c
  7851  016C02  0EBF               	movlw	191
  7852  016C04                     L5:
  7853  016C04  6E29               	movwf	(btemp+3)^0,c
  7854  016C06                     l2080:
  7855                           
  7856                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  7857  016C06  52E5               	movf	postdec1,f,c
  7858  016C08  0012               	return		;funcret
  7859  016C0A                     __end_of_esr_check:
  7860                           	opt callstack 0
  7861                           
  7862 ;; *************** function _update_adc_result *****************
  7863 ;; Defined at:
  7864 ;;		line 71 in file "daq.c"
  7865 ;; Parameters:    Size  Location     Type
  7866 ;;		None
  7867 ;; Auto vars:     Size  Location     Type
  7868 ;;		None
  7869 ;; Return value:  Size  Location     Type
  7870 ;;                  1  [STACK] _Bool 
  7871 ;; Registers used:
  7872 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  7873 ;; Tracked objects:
  7874 ;;		On entry : 0/0
  7875 ;;		On exit  : 0/0
  7876 ;;		Unchanged: 0/0
  7877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7882 ;;Total ram usage:        0 bytes
  7883 ;; Hardware stack levels used:    1
  7884 ;; Hardware stack levels required when called:   17
  7885 ;; This function calls:
  7886 ;;		_StartTimer
  7887 ;;		_TimerDone
  7888 ;;		_check_adc_scan
  7889 ;;		_clear_adc_scan
  7890 ;;		_start_adc_scan
  7891 ;; This function is called by:
  7892 ;;		_esr_check
  7893 ;; This function uses a reentrant model
  7894 ;;
  7895                           
  7896                           	psect	text17
  7897  01AF62                     __ptext17:
  7898                           	opt callstack 0
  7899  01AF62                     _update_adc_result:
  7900                           	opt callstack 12
  7901                           
  7902                           ;daq.c: 73:  if (R.done) {
  7903                           
  7904                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7905                           ;incstack = 0
  7906  01AF62  0100               	movlb	0	; () banked
  7907  01AF64  51D8               	movf	(_R+39)& (0+255),w,b	;volatile
  7908  01AF66  B4D8               	btfsc	status,2,c
  7909  01AF68  0012               	return	
  7910                           
  7911                           ; BSR set to: 0
  7912                           ;daq.c: 74:   clear_adc_scan();
  7913  01AF6A  EC8B  F0DC         	call	_clear_adc_scan	;wreg free
  7914                           
  7915                           ; BSR set to: 0
  7916                           ;daq.c: 75:   start_adc_scan();
  7917  01AF6E  EC18  F0D4         	call	_start_adc_scan	;wreg free
  7918                           
  7919                           ;daq.c: 76:   StartTimer(TMR_ADC, 200);
  7920  01AF72  0EC8               	movlw	200
  7921  01AF74  6EE6               	movwf	postinc1,c
  7922  01AF76  0E00               	movlw	0
  7923  01AF78  6EE6               	movwf	postinc1,c
  7924  01AF7A  0E01               	movlw	1
  7925  01AF7C  6EE6               	movwf	postinc1,c
  7926  01AF7E  EC12  F0D7         	call	_StartTimer	;wreg free
  7927  01AF82                     l10369:
  7928  01AF82  0E01               	movlw	1
  7929  01AF84  6EE6               	movwf	postinc1,c
  7930  01AF86  EC93  F0D9         	call	_TimerDone	;wreg free
  7931  01AF8A  5026               	movf	btemp^0,w,c
  7932  01AF8C  A4D8               	btfss	status,2,c
  7933  01AF8E  0012               	return	
  7934  01AF90  EC7B  F0DC         	call	_check_adc_scan	;wreg free
  7935  01AF94  5026               	movf	btemp^0,w,c
  7936  01AF96  A4D8               	btfss	status,2,c
  7937  01AF98  0012               	return	
  7938  01AF9A  D7F3               	goto	l10369
  7939  01AF9C                     __end_of_update_adc_result:
  7940                           	opt callstack 0
  7941                           
  7942 ;; *************** function _start_adc_scan *****************
  7943 ;; Defined at:
  7944 ;;		line 32 in file "daq.c"
  7945 ;; Parameters:    Size  Location     Type
  7946 ;;		None
  7947 ;; Auto vars:     Size  Location     Type
  7948 ;;		None
  7949 ;; Return value:  Size  Location     Type
  7950 ;;                  1  [STACK] _Bool 
  7951 ;; Registers used:
  7952 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  7953 ;; Tracked objects:
  7954 ;;		On entry : 0/0
  7955 ;;		On exit  : 1/0
  7956 ;;		Unchanged: 0/0
  7957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7962 ;;Total ram usage:        0 bytes
  7963 ;; Hardware stack levels used:    1
  7964 ;; Hardware stack levels required when called:   16
  7965 ;; This function calls:
  7966 ;;		_ADCC_DischargeSampleCapacitor
  7967 ;;		_ADCC_SetADIInterruptHandler
  7968 ;;		_ADCC_SetADTIInterruptHandler
  7969 ;;		_ADCC_StartConversion
  7970 ;; This function is called by:
  7971 ;;		_main
  7972 ;;		_update_adc_result
  7973 ;; This function uses a reentrant model
  7974 ;;
  7975                           
  7976                           	psect	text18
  7977  01A830                     __ptext18:
  7978                           	opt callstack 0
  7979  01A830                     _start_adc_scan:
  7980                           	opt callstack 14
  7981                           
  7982                           ;daq.c: 34:  if (R.done)
  7983                           
  7984                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7985                           ;incstack = 0
  7986  01A830  0100               	movlb	0	; () banked
  7987  01A832  51D8               	movf	(_R+39)& (0+255),w,b	;volatile
  7988  01A834  A4D8               	btfss	status,2,c
  7989  01A836  0012               	return	
  7990                           
  7991                           ; BSR set to: 0
  7992                           ;daq.c: 37:  R.scan_index = 0;
  7993  01A838  6BD5               	clrf	(_R+36)& (0+255),b	;volatile
  7994                           
  7995                           ; BSR set to: 0
  7996                           ;daq.c: 38:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  7997  01A83A  013A               	movlb	58	; () banked
  7998  01A83C  5140               	movf	64,w,b	;volatile
  7999  01A83E  006E F940  F026    	movff	14928,btemp	;volatile
  8000  01A844  6A27               	clrf	(btemp+1)^0,c
  8001  01A846  0060  F098  F027   	movff	btemp,btemp+1
  8002  01A84C  6A26               	clrf	btemp^0,c
  8003  01A84E  2626               	addwf	btemp^0,f,c
  8004  01A850  0E00               	movlw	0
  8005  01A852  2227               	addwfc	(btemp+1)^0,f,c
  8006  01A854  0E77               	movlw	119
  8007  01A856  1426               	andwf	btemp^0,w,c
  8008  01A858  0100               	movlb	0	; () banked
  8009  01A85A  6FD6               	movwf	(_R+37)& (0+255),b	;volatile
  8010  01A85C  0E3C               	movlw	60
  8011  01A85E  1427               	andwf	(btemp+1)^0,w,c
  8012  01A860  6FD7               	movwf	(_R+38)& (0+255),b	;volatile
  8013                           
  8014                           ; BSR set to: 0
  8015                           ;daq.c: 39:  ADCC_SetADIInterruptHandler(adc_int_handler);
  8016  01A862  0E3E               	movlw	low _adc_int_handler
  8017  01A864  6EE6               	movwf	postinc1,c
  8018  01A866  0EB9               	movlw	high _adc_int_handler
  8019  01A868  6EE6               	movwf	postinc1,c
  8020  01A86A  0E01               	movlw	low (_adc_int_handler shr (0+16))
  8021  01A86C  6EE6               	movwf	postinc1,c
  8022  01A86E  EC5B  F0DA         	call	_ADCC_SetADIInterruptHandler	;wreg free
  8023                           
  8024                           ;daq.c: 40:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  8025  01A872  0E0C               	movlw	low _adc_int_t_handler
  8026  01A874  6EE6               	movwf	postinc1,c
  8027  01A876  0EA6               	movlw	high _adc_int_t_handler
  8028  01A878  6EE6               	movwf	postinc1,c
  8029  01A87A  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  8030  01A87C  6EE6               	movwf	postinc1,c
  8031  01A87E  EC47  F0DA         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  8032                           
  8033                           ;daq.c: 41:  ADCC_DischargeSampleCapacitor();
  8034  01A882  EC77  F0DC         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  8035                           
  8036                           ; BSR set to: 62
  8037                           ;daq.c: 42:  ADCC_StartConversion(R.scan_index & 0xf);
  8038  01A886  0100               	movlb	0	; () banked
  8039  01A888  51D5               	movf	(_R+36)& (0+255),w,b	;volatile
  8040  01A88A  0B0F               	andlw	15
  8041  01A88C  6EE6               	movwf	postinc1,c
  8042  01A88E  EC0E  F0DC         	call	_ADCC_StartConversion	;wreg free
  8043                           
  8044                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8045  01A892  0012               	return		;funcret
  8046  01A894                     __end_of_start_adc_scan:
  8047                           	opt callstack 0
  8048                           
  8049 ;; *************** function _ADCC_StartConversion *****************
  8050 ;; Defined at:
  8051 ;;		line 128 in file "mcc_generated_files/adcc.c"
  8052 ;; Parameters:    Size  Location     Type
  8053 ;;  channel         1  [STACK] enum E16136
  8054 ;; Auto vars:     Size  Location     Type
  8055 ;;		None
  8056 ;; Return value:  Size  Location     Type
  8057 ;;                  1  [STACK] void 
  8058 ;; Registers used:
  8059 ;;		fsr1l, fsr1h
  8060 ;; Tracked objects:
  8061 ;;		On entry : 3F/0
  8062 ;;		On exit  : 3F/3E
  8063 ;;		Unchanged: 0/0
  8064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8069 ;;Total ram usage:        0 bytes
  8070 ;; Hardware stack levels used:    1
  8071 ;; Hardware stack levels required when called:   15
  8072 ;; This function calls:
  8073 ;;		Nothing
  8074 ;; This function is called by:
  8075 ;;		_start_adc_scan
  8076 ;;		_adc_int_t_handler
  8077 ;; This function uses a reentrant model
  8078 ;;
  8079                           
  8080                           	psect	text19
  8081  01B81C                     __ptext19:
  8082                           	opt callstack 0
  8083  01B81C                     _ADCC_StartConversion:
  8084                           	opt callstack 0
  8085                           
  8086                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  8087                           ;stkvar	_channel @ sp[(0)+-1]
  8088                           
  8089                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8090                           ;incstack = 0
  8091 ;; hardware stack exceeded
  8092  01B81C  0EFF               	movlw	-1
  8093  01B81E  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  8094                           
  8095                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  8096  01B824  013E               	movlb	62	; () banked
  8097  01B826  8FF8               	bsf	248,7,b	;volatile
  8098                           
  8099                           ; BSR set to: 62
  8100                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  8101  01B828  81F8               	bsf	248,0,b	;volatile
  8102                           
  8103                           ; BSR set to: 62
  8104                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  8105  01B82A  52E5               	movf	postdec1,f,c
  8106  01B82C  0012               	return		;funcret
  8107  01B82E                     __end_of_ADCC_StartConversion:
  8108                           	opt callstack 0
  8109                           
  8110 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  8111 ;; Defined at:
  8112 ;;		line 189 in file "mcc_generated_files/adcc.c"
  8113 ;; Parameters:    Size  Location     Type
  8114 ;;		None
  8115 ;; Auto vars:     Size  Location     Type
  8116 ;;		None
  8117 ;; Return value:  Size  Location     Type
  8118 ;;                  1  [STACK] void 
  8119 ;; Registers used:
  8120 ;;		wreg, status,2
  8121 ;; Tracked objects:
  8122 ;;		On entry : 0/0
  8123 ;;		On exit  : 3F/3E
  8124 ;;		Unchanged: 0/0
  8125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8130 ;;Total ram usage:        0 bytes
  8131 ;; Hardware stack levels used:    1
  8132 ;; Hardware stack levels required when called:   15
  8133 ;; This function calls:
  8134 ;;		Nothing
  8135 ;; This function is called by:
  8136 ;;		_start_adc_scan
  8137 ;;		_adc_int_t_handler
  8138 ;; This function uses a reentrant model
  8139 ;;
  8140                           
  8141                           	psect	text20
  8142  01B8EE                     __ptext20:
  8143                           	opt callstack 0
  8144  01B8EE                     _ADCC_DischargeSampleCapacitor:
  8145                           	opt callstack 0
  8146                           
  8147                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  8148                           
  8149                           ; BSR set to: 62
  8150                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8151                           ;incstack = 0
  8152 ;; hardware stack exceeded
  8153  01B8EE  0E3B               	movlw	59
  8154  01B8F0  013E               	movlb	62	; () banked
  8155  01B8F2  6FF1               	movwf	241,b	;volatile
  8156                           
  8157                           ; BSR set to: 62
  8158                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  8159  01B8F4  0012               	return		;funcret
  8160  01B8F6                     __end_of_ADCC_DischargeSampleCapacitor:
  8161                           	opt callstack 0
  8162                           
  8163 ;; *************** function _clear_adc_scan *****************
  8164 ;; Defined at:
  8165 ;;		line 63 in file "daq.c"
  8166 ;; Parameters:    Size  Location     Type
  8167 ;;		None
  8168 ;; Auto vars:     Size  Location     Type
  8169 ;;		None
  8170 ;; Return value:  Size  Location     Type
  8171 ;;                  1  [STACK] void 
  8172 ;; Registers used:
  8173 ;;		None
  8174 ;; Tracked objects:
  8175 ;;		On entry : 0/0
  8176 ;;		On exit  : 3F/0
  8177 ;;		Unchanged: 0/0
  8178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8183 ;;Total ram usage:        0 bytes
  8184 ;; Hardware stack levels used:    1
  8185 ;; Hardware stack levels required when called:   15
  8186 ;; This function calls:
  8187 ;;		Nothing
  8188 ;; This function is called by:
  8189 ;;		_main
  8190 ;;		_update_adc_result
  8191 ;; This function uses a reentrant model
  8192 ;;
  8193                           
  8194                           	psect	text21
  8195  01B916                     __ptext21:
  8196                           	opt callstack 0
  8197  01B916                     _clear_adc_scan:
  8198                           	opt callstack 13
  8199                           
  8200                           ;daq.c: 65:  R.done = 0;
  8201                           
  8202                           ; BSR set to: 62
  8203                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8204                           ;incstack = 0
  8205  01B916  0100               	movlb	0	; () banked
  8206  01B918  6BD8               	clrf	(_R+39)& (0+255),b	;volatile
  8207                           
  8208                           ; BSR set to: 0
  8209                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8210  01B91A  0012               	return		;funcret
  8211  01B91C                     __end_of_clear_adc_scan:
  8212                           	opt callstack 0
  8213                           
  8214 ;; *************** function _check_adc_scan *****************
  8215 ;; Defined at:
  8216 ;;		line 55 in file "daq.c"
  8217 ;; Parameters:    Size  Location     Type
  8218 ;;		None
  8219 ;; Auto vars:     Size  Location     Type
  8220 ;;		None
  8221 ;; Return value:  Size  Location     Type
  8222 ;;                  1  [STACK] _Bool 
  8223 ;; Registers used:
  8224 ;;		btemp
  8225 ;; Tracked objects:
  8226 ;;		On entry : 0/2
  8227 ;;		On exit  : 0/0
  8228 ;;		Unchanged: 0/0
  8229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8234 ;;Total ram usage:        0 bytes
  8235 ;; Hardware stack levels used:    1
  8236 ;; Hardware stack levels required when called:   15
  8237 ;; This function calls:
  8238 ;;		Nothing
  8239 ;; This function is called by:
  8240 ;;		_main
  8241 ;;		_update_adc_result
  8242 ;; This function uses a reentrant model
  8243 ;;
  8244                           
  8245                           	psect	text22
  8246  01B8F6                     __ptext22:
  8247                           	opt callstack 0
  8248  01B8F6                     _check_adc_scan:
  8249                           	opt callstack 13
  8250                           
  8251                           ;daq.c: 57:  return R.done;
  8252                           
  8253                           ; BSR set to: 0
  8254                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8255                           ;incstack = 0
  8256  01B8F6  0060  F360  F026   	movff	_R+39,btemp	;volatile
  8257                           
  8258                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8259  01B8FC  0012               	return		;funcret
  8260  01B8FE                     __end_of_check_adc_scan:
  8261                           	opt callstack 0
  8262                           
  8263 ;; *************** function _set_load_relay_two *****************
  8264 ;; Defined at:
  8265 ;;		line 128 in file "mbmc.c"
  8266 ;; Parameters:    Size  Location     Type
  8267 ;;  mode            1  [STACK] _Bool 
  8268 ;; Auto vars:     Size  Location     Type
  8269 ;;		None
  8270 ;; Return value:  Size  Location     Type
  8271 ;;                  1  [STACK] void 
  8272 ;; Registers used:
  8273 ;;		wreg, fsr1l, fsr1h
  8274 ;; Tracked objects:
  8275 ;;		On entry : 0/0
  8276 ;;		On exit  : 0/0
  8277 ;;		Unchanged: 0/0
  8278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8283 ;;Total ram usage:        0 bytes
  8284 ;; Hardware stack levels used:    1
  8285 ;; Hardware stack levels required when called:   15
  8286 ;; This function calls:
  8287 ;;		Nothing
  8288 ;; This function is called by:
  8289 ;;		_main
  8290 ;;		_esr_check
  8291 ;; This function uses a reentrant model
  8292 ;;
  8293                           
  8294                           	psect	text23
  8295  01B82E                     __ptext23:
  8296                           	opt callstack 0
  8297  01B82E                     _set_load_relay_two:
  8298                           	opt callstack 15
  8299                           
  8300                           ;mbmc.c: 128: void set_load_relay_two(_Bool mode);mbmc.c: 129: {;mbmc.c: 130:  LATDbits.
      +                          LATD5 = mode;
  8301                           ;stkvar	_mode @ sp[(0)+-1]
  8302                           
  8303                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8304                           ;incstack = 0
  8305  01B82E  0EFF               	movlw	-1
  8306  01B830  B0E3               	btfsc	plusw1,0,c
  8307  01B832  D002               	bra	u9445
  8308  01B834  9ABD               	bcf	189,5,c	;volatile
  8309  01B836  D001               	bra	u9446
  8310  01B838                     u9445:
  8311  01B838  8ABD               	bsf	189,5,c	;volatile
  8312  01B83A                     u9446:
  8313                           
  8314                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8315  01B83A  52E5               	movf	postdec1,f,c
  8316  01B83C  0012               	return		;funcret
  8317  01B83E                     __end_of_set_load_relay_two:
  8318                           	opt callstack 0
  8319                           
  8320 ;; *************** function _set_load_relay_one *****************
  8321 ;; Defined at:
  8322 ;;		line 123 in file "mbmc.c"
  8323 ;; Parameters:    Size  Location     Type
  8324 ;;  mode            1  [STACK] _Bool 
  8325 ;; Auto vars:     Size  Location     Type
  8326 ;;		None
  8327 ;; Return value:  Size  Location     Type
  8328 ;;                  1  [STACK] void 
  8329 ;; Registers used:
  8330 ;;		wreg, fsr1l, fsr1h
  8331 ;; Tracked objects:
  8332 ;;		On entry : 0/0
  8333 ;;		On exit  : 0/0
  8334 ;;		Unchanged: 0/0
  8335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8340 ;;Total ram usage:        0 bytes
  8341 ;; Hardware stack levels used:    1
  8342 ;; Hardware stack levels required when called:   15
  8343 ;; This function calls:
  8344 ;;		Nothing
  8345 ;; This function is called by:
  8346 ;;		_main
  8347 ;;		_esr_check
  8348 ;; This function uses a reentrant model
  8349 ;;
  8350                           
  8351                           	psect	text24
  8352  01B83E                     __ptext24:
  8353                           	opt callstack 0
  8354  01B83E                     _set_load_relay_one:
  8355                           	opt callstack 15
  8356                           
  8357                           ;mbmc.c: 123: void set_load_relay_one(_Bool mode);mbmc.c: 124: {;mbmc.c: 125:  LATDbits.
      +                          LATD4 = mode;
  8358                           ;stkvar	_mode @ sp[(0)+-1]
  8359                           
  8360                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8361                           ;incstack = 0
  8362  01B83E  0EFF               	movlw	-1
  8363  01B840  B0E3               	btfsc	plusw1,0,c
  8364  01B842  D002               	bra	u9435
  8365  01B844  98BD               	bcf	189,4,c	;volatile
  8366  01B846  D001               	bra	u9436
  8367  01B848                     u9435:
  8368  01B848  88BD               	bsf	189,4,c	;volatile
  8369  01B84A                     u9436:
  8370                           
  8371                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8372  01B84A  52E5               	movf	postdec1,f,c
  8373  01B84C  0012               	return		;funcret
  8374  01B84E                     __end_of_set_load_relay_one:
  8375                           	opt callstack 0
  8376                           
  8377 ;; *************** function _eaDogM_WriteCommand *****************
  8378 ;; Defined at:
  8379 ;;		line 175 in file "eadog.c"
  8380 ;; Parameters:    Size  Location     Type
  8381 ;;  cmd             1  [STACK] const unsigned char 
  8382 ;; Auto vars:     Size  Location     Type
  8383 ;;		None
  8384 ;; Return value:  Size  Location     Type
  8385 ;;                  1  [STACK] void 
  8386 ;; Registers used:
  8387 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8388 ;; Tracked objects:
  8389 ;;		On entry : 3F/3D
  8390 ;;		On exit  : 3F/0
  8391 ;;		Unchanged: 0/0
  8392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8397 ;;Total ram usage:        0 bytes
  8398 ;; Hardware stack levels used:    1
  8399 ;; Hardware stack levels required when called:   25
  8400 ;; This function calls:
  8401 ;;		_send_lcd_cmd_dma
  8402 ;; This function is called by:
  8403 ;;		_main
  8404 ;; This function uses a reentrant model
  8405 ;;
  8406                           
  8407                           	psect	text25
  8408  01B86E                     __ptext25:
  8409                           	opt callstack 0
  8410  01B86E                     _eaDogM_WriteCommand:
  8411                           	opt callstack 5
  8412                           
  8413                           ;eadog.c: 175: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 176: {;eadog.c: 177:
      +                            send_lcd_cmd_dma(cmd);
  8414                           ;stkvar	_cmd @ sp[(0)+-1]
  8415                           
  8416                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8417                           ;incstack = 0
  8418  01B86E  0EFF               	movlw	-1
  8419  01B870  50E3               	movf	plusw1,w,c
  8420  01B872  6EE6               	movwf	postinc1,c
  8421  01B874  EC35  F0D5         	call	_send_lcd_cmd_dma	;wreg free
  8422                           
  8423                           ; BSR set to: 0
  8424                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  8425  01B878  52E5               	movf	postdec1,f,c
  8426  01B87A  0012               	return		;funcret
  8427  01B87C                     __end_of_eaDogM_WriteCommand:
  8428                           	opt callstack 0
  8429                           
  8430 ;; *************** function _convert_adc_data *****************
  8431 ;; Defined at:
  8432 ;;		line 51 in file "mbmc.c"
  8433 ;; Parameters:    Size  Location     Type
  8434 ;;		None
  8435 ;; Auto vars:     Size  Location     Type
  8436 ;;  i               1  [STACK] unsigned char 
  8437 ;; Return value:  Size  Location     Type
  8438 ;;                  1  [STACK] void 
  8439 ;; Registers used:
  8440 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8441 ;; Tracked objects:
  8442 ;;		On entry : 0/2
  8443 ;;		On exit  : 0/0
  8444 ;;		Unchanged: 0/0
  8445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8450 ;;Total ram usage:        0 bytes
  8451 ;; Hardware stack levels used:    1
  8452 ;; Hardware stack levels required when called:   18
  8453 ;; This function calls:
  8454 ;;		_conv_raw_result
  8455 ;;		_lp_filter
  8456 ;; This function is called by:
  8457 ;;		_main
  8458 ;; This function uses a reentrant model
  8459 ;;
  8460                           
  8461                           	psect	text26
  8462  019D98                     __ptext26:
  8463                           	opt callstack 0
  8464  019D98                     _convert_adc_data:
  8465                           	opt callstack 0
  8466                           
  8467                           ; BSR set to: 0
  8468                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8469  019D98  52E6               	movf	postinc1,f,c
  8470                           
  8471                           ;mbmc.c: 53:  uint8_t i = 0;
  8472                           ;stkvar	_i @ sp[(-1)+0]
  8473                           
  8474                           ;incstack = 0
  8475  019D9A  0EFF               	movlw	-1
  8476  019D9C  6AE3               	clrf	plusw1,c
  8477  019D9E                     l10819:
  8478                           
  8479                           ;mbmc.c: 56:   if (V.calib) {
  8480  019D9E  0102               	movlb	2	; () banked
  8481  019DA0  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
  8482  019DA2  B4D8               	btfsc	status,2,c
  8483  019DA4  D01B               	goto	l10823
  8484                           
  8485                           ; BSR set to: 2
  8486                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  8487  019DA6  0E01               	movlw	1
  8488  019DA8  6EE6               	movwf	postinc1,c
  8489                           
  8490                           ;stkvar	_i @ sp[(-2)+0]
  8491  019DAA  0EFE               	movlw	-2
  8492  019DAC  50E3               	movf	plusw1,w,c
  8493  019DAE  6EE6               	movwf	postinc1,c
  8494  019DB0  0E01               	movlw	1
  8495  019DB2  6EE6               	movwf	postinc1,c
  8496                           
  8497                           ;stkvar	_i @ sp[(-4)+0]
  8498  019DB4  0EFC               	movlw	-4
  8499  019DB6  50E3               	movf	plusw1,w,c
  8500  019DB8  6EE6               	movwf	postinc1,c
  8501  019DBA  EC95  F0A7         	call	_conv_raw_result	;wreg free
  8502  019DBE  0060  F09B  FFE6   	movff	btemp,postinc1
  8503  019DC4  0060  F09F  FFE6   	movff	btemp+1,postinc1
  8504  019DCA  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  8505  019DD0  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  8506  019DD6  EC19  F0BF         	call	_lp_filter	;wreg free
  8507  019DDA  D01A               	goto	L8
  8508  019DDC                     l10823:
  8509                           
  8510                           ; BSR set to: 2
  8511                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  8512  019DDC  0E00               	movlw	0
  8513  019DDE  6EE6               	movwf	postinc1,c
  8514                           
  8515                           ;stkvar	_i @ sp[(-2)+0]
  8516  019DE0  0EFE               	movlw	-2
  8517  019DE2  50E3               	movf	plusw1,w,c
  8518  019DE4  6EE6               	movwf	postinc1,c
  8519  019DE6  0E00               	movlw	0
  8520  019DE8  6EE6               	movwf	postinc1,c
  8521                           
  8522                           ;stkvar	_i @ sp[(-4)+0]
  8523  019DEA  0EFC               	movlw	-4
  8524  019DEC  50E3               	movf	plusw1,w,c
  8525  019DEE  6EE6               	movwf	postinc1,c
  8526  019DF0  EC95  F0A7         	call	_conv_raw_result	;wreg free
  8527  019DF4  0060  F09B  FFE6   	movff	btemp,postinc1
  8528  019DFA  0060  F09F  FFE6   	movff	btemp+1,postinc1
  8529  019E00  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  8530  019E06  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  8531  019E0C  EC19  F0BF         	call	_lp_filter	;wreg free
  8532  019E10                     L8:
  8533                           
  8534                           ;stkvar	_i @ sp[(-1)+0]
  8535  019E10  0EFF               	movlw	-1
  8536  019E12  50E3               	movf	plusw1,w,c
  8537  019E14  0D04               	mullw	4
  8538  019E16  0E00               	movlw	low _C
  8539  019E18  24F3               	addwf	243,w,c
  8540  019E1A  6ED9               	movwf	fsr2l,c
  8541  019E1C  0E01               	movlw	high _C
  8542  019E1E  20F4               	addwfc	prodh,w,c
  8543  019E20  6EDA               	movwf	fsr2h,c
  8544  019E22  0060  F09B  FFDE   	movff	btemp,postinc2
  8545  019E28  0060  F09F  FFDE   	movff	btemp+1,postinc2
  8546  019E2E  0060  F0A3  FFDE   	movff	btemp+2,postinc2
  8547  019E34  0060  F0A7  FFDE   	movff	btemp+3,postinc2
  8548                           
  8549                           ;mbmc.c: 61:  } while (++i < 16);
  8550                           ;stkvar	_i @ sp[(-1)+0]
  8551  019E3A  0EFF               	movlw	-1
  8552  019E3C  2AE3               	incf	plusw1,f,c
  8553  019E3E  0EFF               	movlw	-1
  8554  019E40  006F FF8C  F026    	movff	plusw1,btemp
  8555  019E46  0E0F               	movlw	15
  8556  019E48  6426               	cpfsgt	btemp^0,c
  8557  019E4A  D7A9               	goto	l10819
  8558                           
  8559                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  8560  019E4C  52E5               	movf	postdec1,f,c
  8561  019E4E  0012               	return		;funcret
  8562  019E50                     __end_of_convert_adc_data:
  8563                           	opt callstack 0
  8564                           
  8565 ;; *************** function _clear_hid_pflags *****************
  8566 ;; Defined at:
  8567 ;;		line 51 in file "hid.c"
  8568 ;; Parameters:    Size  Location     Type
  8569 ;;  h               1  [STACK] PTR struct H_data
  8570 ;;		 -> H(7), 
  8571 ;; Auto vars:     Size  Location     Type
  8572 ;;		None
  8573 ;; Return value:  Size  Location     Type
  8574 ;;                  1  [STACK] void 
  8575 ;; Registers used:
  8576 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8577 ;; Tracked objects:
  8578 ;;		On entry : 3F/0
  8579 ;;		On exit  : 0/0
  8580 ;;		Unchanged: 0/0
  8581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8586 ;;Total ram usage:        0 bytes
  8587 ;; Hardware stack levels used:    1
  8588 ;; Hardware stack levels required when called:   15
  8589 ;; This function calls:
  8590 ;;		Nothing
  8591 ;; This function is called by:
  8592 ;;		_main
  8593 ;; This function uses a reentrant model
  8594 ;;
  8595                           
  8596                           	psect	text27
  8597  01B57A                     __ptext27:
  8598                           	opt callstack 0
  8599  01B57A                     _clear_hid_pflags:
  8600                           	opt callstack 15
  8601                           
  8602                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  8603                           ;stkvar	_h @ sp[(0)+-1]
  8604                           
  8605                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8606                           ;incstack = 0
  8607  01B57A  0EFF               	movlw	-1
  8608  01B57C  50E3               	movf	plusw1,w,c
  8609  01B57E  6ED9               	movwf	fsr2l,c
  8610  01B580  6ADA               	clrf	fsr2h,c
  8611  01B582  0E03               	movlw	3
  8612  01B584  26D9               	addwf	fsr2l,f,c
  8613  01B586  0E00               	movlw	0
  8614  01B588  6EDF               	movwf	indf2,c
  8615                           
  8616                           ;hid.c: 54:  h->enter_p = SW_OFF;
  8617                           ;stkvar	_h @ sp[(0)+-1]
  8618  01B58A  0EFF               	movlw	-1
  8619  01B58C  50E3               	movf	plusw1,w,c
  8620  01B58E  6ED9               	movwf	fsr2l,c
  8621  01B590  6ADA               	clrf	fsr2h,c
  8622  01B592  0E05               	movlw	5
  8623  01B594  26D9               	addwf	fsr2l,f,c
  8624  01B596  0E00               	movlw	0
  8625  01B598  6EDF               	movwf	indf2,c
  8626                           
  8627                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  8628  01B59A  52E5               	movf	postdec1,f,c
  8629  01B59C  0012               	return		;funcret
  8630  01B59E                     __end_of_clear_hid_pflags:
  8631                           	opt callstack 0
  8632                           
  8633 ;; *************** function _check_help *****************
  8634 ;; Defined at:
  8635 ;;		line 40 in file "mconfig.c"
  8636 ;; Parameters:    Size  Location     Type
  8637 ;;  flipper         1  [STACK] const _Bool 
  8638 ;; Auto vars:     Size  Location     Type
  8639 ;;  estatus         1    0        _Bool 
  8640 ;; Return value:  Size  Location     Type
  8641 ;;                  1  [STACK] _Bool 
  8642 ;; Registers used:
  8643 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8644 ;; Tracked objects:
  8645 ;;		On entry : 3F/2
  8646 ;;		On exit  : 0/0
  8647 ;;		Unchanged: 0/0
  8648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8653 ;;Total ram usage:        0 bytes
  8654 ;; Hardware stack levels used:    1
  8655 ;; Hardware stack levels required when called:   27
  8656 ;; This function calls:
  8657 ;;		_StartTimer
  8658 ;;		_TimerDone
  8659 ;;		_display_help
  8660 ;;		_display_info
  8661 ;;		_get_vterm_ptr
  8662 ;;		_help_button
  8663 ;;		_mode_lamp_bright
  8664 ;;		_mode_lamp_dim
  8665 ;;		_set_display_info
  8666 ;;		_set_temp_display_help
  8667 ;;		_set_vterm
  8668 ;;		_sprintf
  8669 ;;		_update_lcd
  8670 ;;		_vterm_dump
  8671 ;; This function is called by:
  8672 ;;		_main
  8673 ;; This function uses a reentrant model
  8674 ;;
  8675                           
  8676                           	psect	text28
  8677  01781C                     __ptext28:
  8678                           	opt callstack 0
  8679  01781C                     _check_help:
  8680                           	opt callstack 3
  8681                           
  8682                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  8683                           
  8684                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8685                           ;incstack = 0
  8686  01781C  ECCE  F0D7         	call	_help_button	;wreg free
  8687  017820  5026               	movf	btemp^0,w,c
  8688  017822  B4D8               	btfsc	status,2,c
  8689  017824  D0D0               	goto	l12799
  8690  017826  EC7F  F0DC         	call	_display_info	;wreg free
  8691  01782A  0426               	decf	btemp^0,w,c
  8692  01782C  B4D8               	btfsc	status,2,c
  8693  01782E  D0CB               	goto	l12799
  8694                           
  8695                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  8696  017830  0EDC               	movlw	220
  8697  017832  6EE6               	movwf	postinc1,c
  8698  017834  0E05               	movlw	5
  8699  017836  6EE6               	movwf	postinc1,c
  8700  017838  0E0B               	movlw	11
  8701  01783A  6EE6               	movwf	postinc1,c
  8702  01783C  EC12  F0D7         	call	_StartTimer	;wreg free
  8703                           
  8704                           ;mconfig.c: 48:   if (V.debug)
  8705  017840  0102               	movlb	2	; () banked
  8706  017842  B3A2               	btfsc	(_V+155)& (0+255),1,b	;volatile
  8707                           
  8708                           ; BSR set to: 2
  8709                           ;mconfig.c: 49:    vterm_dump();
  8710  017844  ECF4  F0C6         	call	_vterm_dump	;wreg free
  8711                           
  8712                           ;mconfig.c: 51:   set_vterm(1);
  8713  017848  0E01               	movlw	1
  8714  01784A  6EE6               	movwf	postinc1,c
  8715  01784C  EC67  F0DB         	call	_set_vterm	;wreg free
  8716                           
  8717                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  8718  017850  EC7F  F0DC         	call	_display_info	;wreg free
  8719  017854  5026               	movf	btemp^0,w,c
  8720  017856  6EE6               	movwf	postinc1,c
  8721  017858  EC27  F0DC         	call	_set_temp_display_help	;wreg free
  8722                           
  8723                           ; BSR set to: 2
  8724                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  8725  01785C  0E01               	movlw	1
  8726  01785E  6EE6               	movwf	postinc1,c
  8727  017860  EC76  F0DB         	call	_set_display_info	;wreg free
  8728                           
  8729                           ;mconfig.c: 54:   if (flipper) {
  8730                           ;stkvar	_flipper @ sp[(0)+-1]
  8731  017864  0EFF               	movlw	-1
  8732  017866  50E3               	movf	plusw1,w,c
  8733  017868  B4D8               	btfsc	status,2,c
  8734  01786A  D019               	goto	l12785
  8735                           
  8736                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  8737  01786C  0EB1               	movlw	low STR_46
  8738  01786E  6EE6               	movwf	postinc1,c
  8739  017870  0EFF               	movlw	high STR_46
  8740  017872  6EE6               	movwf	postinc1,c
  8741  017874  0E27               	movlw	low STR_48
  8742  017876  6EE6               	movwf	postinc1,c
  8743  017878  0EFE               	movlw	high STR_48
  8744  01787A  6EE6               	movwf	postinc1,c
  8745  01787C  0E01               	movlw	1
  8746  01787E  6EE6               	movwf	postinc1,c
  8747  017880  0E00               	movlw	0
  8748  017882  6EE6               	movwf	postinc1,c
  8749  017884  ECE8  F0D8         	call	_get_vterm_ptr	;wreg free
  8750  017888  0060  F09B  FFE6   	movff	btemp,postinc1
  8751  01788E  0060  F09F  FFE6   	movff	btemp+1,postinc1
  8752  017894  0E06               	movlw	6
  8753  017896  6EE6               	movwf	postinc1,c
  8754  017898  ECBB  F0C9         	call	_sprintf	;wreg free
  8755                           
  8756                           ;mconfig.c: 56:   } else {
  8757  01789C  D018               	goto	l1674
  8758  01789E                     l12785:
  8759                           
  8760                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  8761  01789E  0EC7               	movlw	low STR_47
  8762  0178A0  6EE6               	movwf	postinc1,c
  8763  0178A2  0EFF               	movlw	high STR_47
  8764  0178A4  6EE6               	movwf	postinc1,c
  8765  0178A6  0E27               	movlw	low STR_48
  8766  0178A8  6EE6               	movwf	postinc1,c
  8767  0178AA  0EFE               	movlw	high STR_48
  8768  0178AC  6EE6               	movwf	postinc1,c
  8769  0178AE  0E01               	movlw	1
  8770  0178B0  6EE6               	movwf	postinc1,c
  8771  0178B2  0E00               	movlw	0
  8772  0178B4  6EE6               	movwf	postinc1,c
  8773  0178B6  ECE8  F0D8         	call	_get_vterm_ptr	;wreg free
  8774  0178BA  0060  F09B  FFE6   	movff	btemp,postinc1
  8775  0178C0  0060  F09F  FFE6   	movff	btemp+1,postinc1
  8776  0178C6  0E06               	movlw	6
  8777  0178C8  6EE6               	movwf	postinc1,c
  8778  0178CA  ECBB  F0C9         	call	_sprintf	;wreg free
  8779  0178CE                     l1674:
  8780                           
  8781                           ; BSR set to: 0
  8782                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  8783  0178CE  0102               	movlb	2	; () banked
  8784  0178D0  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
  8785  0178D2  32E8               	rrcf	wreg,f,c
  8786  0178D4  32E8               	rrcf	wreg,f,c
  8787  0178D6  0B03               	andlw	3
  8788  0178D8  0D24               	mullw	36
  8789  0178DA  0E12               	movlw	18
  8790  0178DC  26F3               	addwf	243,f,c
  8791  0178DE  0E00               	movlw	0
  8792  0178E0  22F4               	addwfc	244,f,c
  8793  0178E2  0E49               	movlw	low _T
  8794  0178E4  6E30               	movwf	(btemp+10)^0,c
  8795  0178E6  0EFB               	movlw	high _T
  8796  0178E8  6E31               	movwf	(btemp+11)^0,c
  8797  0178EA  50F3               	movf	243,w,c
  8798  0178EC  2630               	addwf	(btemp+10)^0,f,c
  8799  0178EE  50F4               	movf	244,w,c
  8800  0178F0  2231               	addwfc	(btemp+11)^0,f,c
  8801  0178F2  0060  F0C3  FFE6   	movff	btemp+10,postinc1
  8802  0178F8  0060  F0C7  FFE6   	movff	btemp+11,postinc1
  8803  0178FE  0EBD               	movlw	low STR_50
  8804  017900  6EE6               	movwf	postinc1,c
  8805  017902  0EFF               	movlw	high STR_50
  8806  017904  6EE6               	movwf	postinc1,c
  8807  017906  0E01               	movlw	1
  8808  017908  6EE6               	movwf	postinc1,c
  8809  01790A  0E01               	movlw	1
  8810  01790C  6EE6               	movwf	postinc1,c
  8811  01790E  ECE8  F0D8         	call	_get_vterm_ptr	;wreg free
  8812  017912  0060  F09B  FFE6   	movff	btemp,postinc1
  8813  017918  0060  F09F  FFE6   	movff	btemp+1,postinc1
  8814  01791E  0E06               	movlw	6
  8815  017920  6EE6               	movwf	postinc1,c
  8816  017922  ECBB  F0C9         	call	_sprintf	;wreg free
  8817                           
  8818                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  8819  017926  0102               	movlb	2	; () banked
  8820  017928  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
  8821  01792A  32E8               	rrcf	wreg,f,c
  8822  01792C  32E8               	rrcf	wreg,f,c
  8823  01792E  0B03               	andlw	3
  8824  017930  0D24               	mullw	36
  8825  017932  0E49               	movlw	low _T
  8826  017934  6E30               	movwf	(btemp+10)^0,c
  8827  017936  0EFB               	movlw	high _T
  8828  017938  6E31               	movwf	(btemp+11)^0,c
  8829  01793A  50F3               	movf	243,w,c
  8830  01793C  2630               	addwf	(btemp+10)^0,f,c
  8831  01793E  50F4               	movf	244,w,c
  8832  017940  2231               	addwfc	(btemp+11)^0,f,c
  8833  017942  0060  F0C3  FFE6   	movff	btemp+10,postinc1
  8834  017948  0060  F0C7  FFE6   	movff	btemp+11,postinc1
  8835  01794E  0EBD               	movlw	low STR_50
  8836  017950  6EE6               	movwf	postinc1,c
  8837  017952  0EFF               	movlw	high STR_50
  8838  017954  6EE6               	movwf	postinc1,c
  8839  017956  0E01               	movlw	1
  8840  017958  6EE6               	movwf	postinc1,c
  8841  01795A  0E02               	movlw	2
  8842  01795C  6EE6               	movwf	postinc1,c
  8843  01795E  ECE8  F0D8         	call	_get_vterm_ptr	;wreg free
  8844  017962  0060  F09B  FFE6   	movff	btemp,postinc1
  8845  017968  0060  F09F  FFE6   	movff	btemp+1,postinc1
  8846  01796E  0E06               	movlw	6
  8847  017970  6EE6               	movwf	postinc1,c
  8848  017972  ECBB  F0C9         	call	_sprintf	;wreg free
  8849                           
  8850                           ; BSR set to: 0
  8851                           ;mconfig.c: 61:   V.help_id++;
  8852  017976  EE20  F2A2         	lfsr	2,_V+155	;volatile
  8853  01797A  38DF               	swapf	223,w,c
  8854  01797C  6E31               	movwf	(btemp+11)^0,c
  8855  01797E  3231               	rrcf	(btemp+11)^0,f,c
  8856  017980  3031               	rrcf	(btemp+11)^0,w,c
  8857  017982  0B03               	andlw	3
  8858  017984  6E31               	movwf	(btemp+11)^0,c
  8859  017986  2A31               	incf	(btemp+11)^0,f,c
  8860  017988  3A31               	swapf	(btemp+11)^0,f,c
  8861  01798A  3631               	rlcf	(btemp+11)^0,f,c
  8862  01798C  3631               	rlcf	(btemp+11)^0,f,c
  8863  01798E  50DF               	movf	223,w,c
  8864  017990  1831               	xorwf	(btemp+11)^0,w,c
  8865  017992  0B3F               	andlw	-193
  8866  017994  1831               	xorwf	(btemp+11)^0,w,c
  8867  017996  6EDF               	movwf	223,c
  8868                           
  8869                           ; BSR set to: 0
  8870                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  8871  017998  0EB8               	movlw	184
  8872  01799A  6EE6               	movwf	postinc1,c
  8873  01799C  0E0B               	movlw	11
  8874  01799E  6EE6               	movwf	postinc1,c
  8875  0179A0  0E09               	movlw	9
  8876  0179A2  6EE6               	movwf	postinc1,c
  8877  0179A4  EC12  F0D7         	call	_StartTimer	;wreg free
  8878                           
  8879                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  8880  0179A8  0EB8               	movlw	184
  8881  0179AA  6EE6               	movwf	postinc1,c
  8882  0179AC  0E0B               	movlw	11
  8883  0179AE  6EE6               	movwf	postinc1,c
  8884  0179B0  0E07               	movlw	7
  8885  0179B2  6EE6               	movwf	postinc1,c
  8886  0179B4  EC12  F0D7         	call	_StartTimer	;wreg free
  8887                           
  8888                           ;mconfig.c: 64:   mode_lamp_bright();
  8889  0179B8  EC3E  F0DC         	call	_mode_lamp_bright	;wreg free
  8890                           
  8891                           ;mconfig.c: 65:   update_lcd(1);
  8892  0179BC  0E01               	movlw	1
  8893  0179BE  6EE6               	movwf	postinc1,c
  8894  0179C0  EC33  F0C9         	call	_update_lcd	;wreg free
  8895                           
  8896                           ;mconfig.c: 67:  } else {
  8897  0179C4  D032               	goto	l1675
  8898  0179C6                     l12799:
  8899                           
  8900                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  8901  0179C6  0E09               	movlw	9
  8902  0179C8  6EE6               	movwf	postinc1,c
  8903  0179CA  EC93  F0D9         	call	_TimerDone	;wreg free
  8904  0179CE  5026               	movf	btemp^0,w,c
  8905  0179D0  B4D8               	btfsc	status,2,c
  8906  0179D2  D02B               	goto	l1675
  8907                           
  8908                           ;mconfig.c: 69:    set_vterm(0);
  8909  0179D4  0E00               	movlw	0
  8910  0179D6  6EE6               	movwf	postinc1,c
  8911  0179D8  EC67  F0DB         	call	_set_vterm	;wreg free
  8912                           
  8913                           ;mconfig.c: 70:    V.help = 0;
  8914  0179DC  0102               	movlb	2	; () banked
  8915  0179DE  95A2               	bcf	(_V+155)& (0+255),2,b	;volatile
  8916                           
  8917                           ; BSR set to: 2
  8918                           ;mconfig.c: 71:    set_display_info(display_help());
  8919  0179E0  EC83  F0DC         	call	_display_help	;wreg free
  8920  0179E4  5026               	movf	btemp^0,w,c
  8921  0179E6  6EE6               	movwf	postinc1,c
  8922  0179E8  EC76  F0DB         	call	_set_display_info	;wreg free
  8923                           
  8924                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  8925  0179EC  0060  FA73  FFE6   	movff	_V+149,postinc1
  8926  0179F2  0060  FA77  FFE6   	movff	_V+150,postinc1
  8927  0179F8  ECCB  F0DB         	call	_mode_lamp_dim	;wreg free
  8928                           
  8929                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  8930  0179FC  0E0B               	movlw	11
  8931  0179FE  6EE6               	movwf	postinc1,c
  8932  017A00  EC93  F0D9         	call	_TimerDone	;wreg free
  8933  017A04  5026               	movf	btemp^0,w,c
  8934  017A06  B4D8               	btfsc	status,2,c
  8935  017A08  D010               	goto	l1675
  8936                           
  8937                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  8938  017A0A  0102               	movlb	2	; () banked
  8939  017A0C  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
  8940  017A0E  A4D8               	btfss	status,2,c
  8941  017A10  D002               	goto	u12350
  8942  017A12  0E01               	movlw	1
  8943  017A14  D001               	goto	u12360
  8944  017A16                     u12350:
  8945  017A16  0E00               	movlw	0
  8946  017A18                     u12360:
  8947  017A18  6FB2               	movwf	(_V+171)& (0+255),b	;volatile
  8948                           
  8949                           ; BSR set to: 2
  8950                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  8951  017A1A  0EDC               	movlw	220
  8952  017A1C  6EE6               	movwf	postinc1,c
  8953  017A1E  0E05               	movlw	5
  8954  017A20  6EE6               	movwf	postinc1,c
  8955  017A22  0E0B               	movlw	11
  8956  017A24  6EE6               	movwf	postinc1,c
  8957  017A26  EC12  F0D7         	call	_StartTimer	;wreg free
  8958  017A2A                     l1675:
  8959                           
  8960                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  8961  017A2A  52E5               	movf	postdec1,f,c
  8962  017A2C  0012               	return		;funcret
  8963  017A2E                     __end_of_check_help:
  8964                           	opt callstack 0
  8965                           
  8966 ;; *************** function _vterm_dump *****************
  8967 ;; Defined at:
  8968 ;;		line 121 in file "mconfig.c"
  8969 ;; Parameters:    Size  Location     Type
  8970 ;;		None
  8971 ;; Auto vars:     Size  Location     Type
  8972 ;;		None
  8973 ;; Return value:  Size  Location     Type
  8974 ;;                  1  [STACK] void 
  8975 ;; Registers used:
  8976 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8977 ;; Tracked objects:
  8978 ;;		On entry : 3F/2
  8979 ;;		On exit  : 0/0
  8980 ;;		Unchanged: 0/0
  8981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8986 ;;Total ram usage:        0 bytes
  8987 ;; Hardware stack levels used:    1
  8988 ;; Hardware stack levels required when called:   26
  8989 ;; This function calls:
  8990 ;;		_WaitMs
  8991 ;;		_eaDogM_WriteStringAtPos
  8992 ;;		_get_vterm_ptr
  8993 ;;		_sprintf
  8994 ;;		_wait_lcd_done
  8995 ;; This function is called by:
  8996 ;;		_check_help
  8997 ;; This function uses a reentrant model
  8998 ;;
  8999                           
  9000                           	psect	text29
  9001  018DE8                     __ptext29:
  9002                           	opt callstack 0
  9003  018DE8                     _vterm_dump:
  9004                           	opt callstack 3
  9005                           
  9006                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  9007                           
  9008                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9009                           ;incstack = 0
  9010  018DE8  0E01               	movlw	1
  9011  018DEA  6EE6               	movwf	postinc1,c
  9012  018DEC  0E00               	movlw	0
  9013  018DEE  6EE6               	movwf	postinc1,c
  9014  018DF0  ECE8  F0D8         	call	_get_vterm_ptr	;wreg free
  9015  018DF4  0060  F09B  FFE6   	movff	btemp,postinc1
  9016  018DFA  0060  F09F  FFE6   	movff	btemp+1,postinc1
  9017  018E00  0E00               	movlw	0
  9018  018E02  6EE6               	movwf	postinc1,c
  9019  018E04  0E00               	movlw	0
  9020  018E06  6EE6               	movwf	postinc1,c
  9021  018E08  ECE8  F0D8         	call	_get_vterm_ptr	;wreg free
  9022  018E0C  0060  F09B  FFE6   	movff	btemp,postinc1
  9023  018E12  0060  F09F  FFE6   	movff	btemp+1,postinc1
  9024  018E18  0E93               	movlw	low STR_52
  9025  018E1A  6EE6               	movwf	postinc1,c
  9026  018E1C  0EFF               	movlw	high STR_52
  9027  018E1E  6EE6               	movwf	postinc1,c
  9028  018E20  0E08               	movlw	low (_V+1)
  9029  018E22  6EE6               	movwf	postinc1,c
  9030  018E24  0E02               	movlw	high (_V+1)
  9031  018E26  6EE6               	movwf	postinc1,c
  9032  018E28  0E08               	movlw	8
  9033  018E2A  6EE6               	movwf	postinc1,c
  9034  018E2C  ECBB  F0C9         	call	_sprintf	;wreg free
  9035                           
  9036                           ; BSR set to: 0
  9037                           ;mconfig.c: 124:  wait_lcd_done();
  9038  018E30  ECA3  F0DB         	call	_wait_lcd_done	;wreg free
  9039                           
  9040                           ; BSR set to: 0
  9041                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  9042  018E34  0E08               	movlw	low (_V+1)
  9043  018E36  6EE6               	movwf	postinc1,c
  9044  018E38  0E02               	movlw	high (_V+1)
  9045  018E3A  6EE6               	movwf	postinc1,c
  9046  018E3C  0E00               	movlw	0
  9047  018E3E  6EE6               	movwf	postinc1,c
  9048  018E40  0E00               	movlw	0
  9049  018E42  6EE6               	movwf	postinc1,c
  9050  018E44  EC21  F0D8         	call	_eaDogM_WriteStringAtPos	;wreg free
  9051                           
  9052                           ; BSR set to: 59
  9053                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  9054  018E48  0E01               	movlw	1
  9055  018E4A  6EE6               	movwf	postinc1,c
  9056  018E4C  0E01               	movlw	1
  9057  018E4E  6EE6               	movwf	postinc1,c
  9058  018E50  ECE8  F0D8         	call	_get_vterm_ptr	;wreg free
  9059  018E54  0060  F09B  FFE6   	movff	btemp,postinc1
  9060  018E5A  0060  F09F  FFE6   	movff	btemp+1,postinc1
  9061  018E60  0E00               	movlw	0
  9062  018E62  6EE6               	movwf	postinc1,c
  9063  018E64  0E01               	movlw	1
  9064  018E66  6EE6               	movwf	postinc1,c
  9065  018E68  ECE8  F0D8         	call	_get_vterm_ptr	;wreg free
  9066  018E6C  0060  F09B  FFE6   	movff	btemp,postinc1
  9067  018E72  0060  F09F  FFE6   	movff	btemp+1,postinc1
  9068  018E78  0E93               	movlw	low STR_52
  9069  018E7A  6EE6               	movwf	postinc1,c
  9070  018E7C  0EFF               	movlw	high STR_52
  9071  018E7E  6EE6               	movwf	postinc1,c
  9072  018E80  0E08               	movlw	low (_V+1)
  9073  018E82  6EE6               	movwf	postinc1,c
  9074  018E84  0E02               	movlw	high (_V+1)
  9075  018E86  6EE6               	movwf	postinc1,c
  9076  018E88  0E08               	movlw	8
  9077  018E8A  6EE6               	movwf	postinc1,c
  9078  018E8C  ECBB  F0C9         	call	_sprintf	;wreg free
  9079                           
  9080                           ; BSR set to: 0
  9081                           ;mconfig.c: 127:  wait_lcd_done();
  9082  018E90  ECA3  F0DB         	call	_wait_lcd_done	;wreg free
  9083                           
  9084                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  9085  018E94  0E08               	movlw	low (_V+1)
  9086  018E96  6EE6               	movwf	postinc1,c
  9087  018E98  0E02               	movlw	high (_V+1)
  9088  018E9A  6EE6               	movwf	postinc1,c
  9089  018E9C  0E00               	movlw	0
  9090  018E9E  6EE6               	movwf	postinc1,c
  9091  018EA0  0E01               	movlw	1
  9092  018EA2  6EE6               	movwf	postinc1,c
  9093  018EA4  EC21  F0D8         	call	_eaDogM_WriteStringAtPos	;wreg free
  9094                           
  9095                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  9096  018EA8  0E01               	movlw	1
  9097  018EAA  6EE6               	movwf	postinc1,c
  9098  018EAC  0E02               	movlw	2
  9099  018EAE  6EE6               	movwf	postinc1,c
  9100  018EB0  ECE8  F0D8         	call	_get_vterm_ptr	;wreg free
  9101  018EB4  0060  F09B  FFE6   	movff	btemp,postinc1
  9102  018EBA  0060  F09F  FFE6   	movff	btemp+1,postinc1
  9103  018EC0  0E00               	movlw	0
  9104  018EC2  6EE6               	movwf	postinc1,c
  9105  018EC4  0E02               	movlw	2
  9106  018EC6  6EE6               	movwf	postinc1,c
  9107  018EC8  ECE8  F0D8         	call	_get_vterm_ptr	;wreg free
  9108  018ECC  0060  F09B  FFE6   	movff	btemp,postinc1
  9109  018ED2  0060  F09F  FFE6   	movff	btemp+1,postinc1
  9110  018ED8  0E93               	movlw	low STR_52
  9111  018EDA  6EE6               	movwf	postinc1,c
  9112  018EDC  0EFF               	movlw	high STR_52
  9113  018EDE  6EE6               	movwf	postinc1,c
  9114  018EE0  0E08               	movlw	low (_V+1)
  9115  018EE2  6EE6               	movwf	postinc1,c
  9116  018EE4  0E02               	movlw	high (_V+1)
  9117  018EE6  6EE6               	movwf	postinc1,c
  9118  018EE8  0E08               	movlw	8
  9119  018EEA  6EE6               	movwf	postinc1,c
  9120  018EEC  ECBB  F0C9         	call	_sprintf	;wreg free
  9121                           
  9122                           ; BSR set to: 0
  9123                           ;mconfig.c: 130:  wait_lcd_done();
  9124  018EF0  ECA3  F0DB         	call	_wait_lcd_done	;wreg free
  9125                           
  9126                           ; BSR set to: 0
  9127                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  9128  018EF4  0E08               	movlw	low (_V+1)
  9129  018EF6  6EE6               	movwf	postinc1,c
  9130  018EF8  0E02               	movlw	high (_V+1)
  9131  018EFA  6EE6               	movwf	postinc1,c
  9132  018EFC  0E00               	movlw	0
  9133  018EFE  6EE6               	movwf	postinc1,c
  9134  018F00  0E02               	movlw	2
  9135  018F02  6EE6               	movwf	postinc1,c
  9136  018F04  EC21  F0D8         	call	_eaDogM_WriteStringAtPos	;wreg free
  9137                           
  9138                           ; BSR set to: 59
  9139                           ;mconfig.c: 132:  WaitMs(3000);
  9140  018F08  0EB8               	movlw	184
  9141  018F0A  6EE6               	movwf	postinc1,c
  9142  018F0C  0E0B               	movlw	11
  9143  018F0E  6EE6               	movwf	postinc1,c
  9144  018F10  EC06  F0D8         	call	_WaitMs	;wreg free
  9145                           
  9146                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  9147  018F14  0012               	return		;funcret
  9148  018F16                     __end_of_vterm_dump:
  9149                           	opt callstack 0
  9150                           
  9151 ;; *************** function _sprintf *****************
  9152 ;; Defined at:
  9153 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  9154 ;; Parameters:    Size  Location     Type
  9155 ;;  s               2  [STACK] PTR unsigned char 
  9156 ;;		 -> D.lcd(480), D(482), port_data(512), V(191), 
  9157 ;;  fmt             2  [STACK] PTR const unsigned char 
  9158 ;;		 -> STR_65(85), STR_63(3), STR_62(3), STR_61(19), 
  9159 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
  9160 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
  9161 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
  9162 ;;		 -> STR_48(19), STR_42(17), STR_41(16), STR_40(16), 
  9163 ;;		 -> STR_39(20), STR_38(20), STR_37(20), STR_36(20), 
  9164 ;;		 -> STR_35(20), STR_34(20), STR_33(19), STR_32(19), 
  9165 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
  9166 ;;		 -> STR_27(19), STR_26(19), STR_25(20), STR_24(19), 
  9167 ;;		 -> STR_23(19), STR_22(20), STR_21(17), STR_20(16), 
  9168 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
  9169 ;;		 -> STR_15(21), STR_14(17), STR_13(17), STR_12(17), 
  9170 ;;		 -> STR_11(22), STR_10(22), STR_9(23), STR_8(18), 
  9171 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
  9172 ;;		 -> STR_2(15), STR_1(17), 
  9173 ;; Auto vars:     Size  Location     Type
  9174 ;;  f               6  [STACK] struct _IO_FILE
  9175 ;;  ap              2  [STACK] PTR void [1]
  9176 ;;		 -> ?_printf(2), ?_sprintf(2), 
  9177 ;;  ret             2    0        int 
  9178 ;; Return value:  Size  Location     Type
  9179 ;;                  2  [STACK] int 
  9180 ;; Registers used:
  9181 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9182 ;; Tracked objects:
  9183 ;;		On entry : 0/2
  9184 ;;		On exit  : 3F/0
  9185 ;;		Unchanged: 0/0
  9186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9191 ;;Total ram usage:        0 bytes
  9192 ;; Hardware stack levels used:    1
  9193 ;; Hardware stack levels required when called:   23
  9194 ;; This function calls:
  9195 ;;		_vfprintf
  9196 ;; This function is called by:
  9197 ;;		_main
  9198 ;;		_check_help
  9199 ;;		_vterm_dump
  9200 ;;		_calc_bsoc
  9201 ;; This function uses a reentrant model
  9202 ;;
  9203                           
  9204                           	psect	text30
  9205  019376                     __ptext30:
  9206                           	opt callstack 0
  9207  019376                     _sprintf:
  9208                           	opt callstack 0
  9209                           
  9210                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 56, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9211  019376  0E08               	movlw	8
  9212  019378  26E1               	addwf	fsr1l,f,c
  9213  01937A  0E00               	movlw	0
  9214  01937C  22E2               	addwfc	fsr1h,f,c
  9215                           
  9216                           ;incstack = 0
  9217 ;; hardware stack exceeded
  9218  01937E  0EFE               	movlw	254
  9219  019380  6E30               	movwf	(btemp+10)^0,c
  9220  019382  0EFF               	movlw	255
  9221  019384  6E31               	movwf	(btemp+11)^0,c
  9222                           
  9223                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  9224  019386  0EF5               	movlw	245
  9225  019388  24E1               	addwf	fsr1l,w,c
  9226  01938A  6E2E               	movwf	(btemp+8)^0,c
  9227  01938C  0EFF               	movlw	255
  9228  01938E  20E2               	addwfc	fsr1h,w,c
  9229  019390  6E2F               	movwf	(btemp+9)^0,c
  9230  019392  5030               	movf	(btemp+10)^0,w,c
  9231  019394  262E               	addwf	(btemp+8)^0,f,c
  9232  019396  5031               	movf	(btemp+11)^0,w,c
  9233  019398  222F               	addwfc	(btemp+9)^0,f,c
  9234                           
  9235                           ;stkvar	_ap @ sp[(-8)+6]
  9236  01939A  0EFF               	movlw	-1
  9237  01939C  0060  F0BF  FFE3   	movff	btemp+9,plusw1
  9238  0193A2  0EFE               	movlw	-2
  9239  0193A4  0060  F0BB  FFE3   	movff	btemp+8,plusw1
  9240                           
  9241                           ;stkvar	_s @ sp[(-8)+-3]
  9242  0193AA  0EF5               	movlw	-11
  9243  0193AC  006F FF8C  F030    	movff	plusw1,btemp+10
  9244  0193B2  0EF6               	movlw	-10
  9245  0193B4  006F FF8C  F031    	movff	plusw1,btemp+11
  9246                           
  9247                           ;stkvar	_f @ sp[(-8)+0]
  9248  0193BA  0EF9               	movlw	-7
  9249  0193BC  0060  F0C7  FFE3   	movff	btemp+11,plusw1
  9250  0193C2  0EF8               	movlw	-8
  9251  0193C4  0060  F0C3  FFE3   	movff	btemp+10,plusw1
  9252                           
  9253                           ;stkvar	_f @ sp[(-8)+0]
  9254  0193CA  0EFA               	movlw	250
  9255  0193CC  24E1               	addwf	fsr1l,w,c
  9256  0193CE  6ED9               	movwf	fsr2l,c
  9257  0193D0  0EFF               	movlw	255
  9258  0193D2  20E2               	addwfc	fsr1h,w,c
  9259  0193D4  6EDA               	movwf	fsr2h,c
  9260  0193D6  0E00               	movlw	0
  9261  0193D8  6EDE               	movwf	postinc2,c
  9262  0193DA  0E00               	movlw	0
  9263  0193DC  6EDD               	movwf	postdec2,c
  9264                           
  9265                           ;stkvar	_f @ sp[(-8)+0]
  9266  0193DE  0EFC               	movlw	252
  9267  0193E0  24E1               	addwf	fsr1l,w,c
  9268  0193E2  6ED9               	movwf	fsr2l,c
  9269  0193E4  0EFF               	movlw	255
  9270  0193E6  20E2               	addwfc	fsr1h,w,c
  9271  0193E8  6EDA               	movwf	fsr2h,c
  9272  0193EA  0E00               	movlw	0
  9273  0193EC  6EDE               	movwf	postinc2,c
  9274  0193EE  0E00               	movlw	0
  9275  0193F0  6EDD               	movwf	postdec2,c
  9276                           
  9277                           ;stkvar	_ap @ sp[(-8)+6]
  9278  0193F2  0EFE               	movlw	254
  9279  0193F4  24E1               	addwf	fsr1l,w,c
  9280  0193F6  6E26               	movwf	btemp^0,c
  9281  0193F8  0EFF               	movlw	255
  9282  0193FA  20E2               	addwfc	fsr1h,w,c
  9283  0193FC  6E27               	movwf	(btemp+1)^0,c
  9284  0193FE  0060  F09B  FFE6   	movff	btemp,postinc1
  9285  019404  0060  F09F  FFE6   	movff	btemp+1,postinc1
  9286                           
  9287                           ;stkvar	_fmt @ sp[(-10)+-5]
  9288  01940A  0EF1               	movlw	-15
  9289  01940C  006F FF8F FFE6     	movff	plusw1,postinc1
  9290  019412  006F FF8F FFE6     	movff	plusw1,postinc1
  9291                           
  9292                           ;stkvar	_f @ sp[(-12)+0]
  9293  019418  0EF4               	movlw	244
  9294  01941A  24E1               	addwf	fsr1l,w,c
  9295  01941C  6E26               	movwf	btemp^0,c
  9296  01941E  0EFF               	movlw	255
  9297  019420  20E2               	addwfc	fsr1h,w,c
  9298  019422  6E27               	movwf	(btemp+1)^0,c
  9299  019424  0060  F09B  FFE6   	movff	btemp,postinc1
  9300  01942A  0060  F09F  FFE6   	movff	btemp+1,postinc1
  9301  019430  EC7F  F0CF         	call	_vfprintf	;wreg free
  9302                           
  9303                           ; BSR set to: 0
  9304                           ;stkvar	_f @ sp[(-8)+0]
  9305  019434  0EFA               	movlw	250
  9306  019436  24E1               	addwf	fsr1l,w,c
  9307  019438  6ED9               	movwf	fsr2l,c
  9308  01943A  0EFF               	movlw	255
  9309  01943C  20E2               	addwfc	fsr1h,w,c
  9310  01943E  6EDA               	movwf	fsr2h,c
  9311  019440  006F FF78  F030    	movff	postinc2,btemp+10
  9312  019446  006F FF74  F031    	movff	postdec2,btemp+11
  9313                           
  9314                           ;stkvar	_s @ sp[(-8)+-3]
  9315  01944C  0EF5               	movlw	-11
  9316  01944E  006F FF8C  F02E    	movff	plusw1,btemp+8
  9317  019454  0EF6               	movlw	-10
  9318  019456  006F FF8C  F02F    	movff	plusw1,btemp+9
  9319  01945C  5030               	movf	(btemp+10)^0,w,c
  9320  01945E  242E               	addwf	(btemp+8)^0,w,c
  9321  019460  6ED9               	movwf	fsr2l,c
  9322  019462  5031               	movf	(btemp+11)^0,w,c
  9323  019464  202F               	addwfc	(btemp+9)^0,w,c
  9324  019466  6EDA               	movwf	fsr2h,c
  9325  019468  0E00               	movlw	0
  9326  01946A  6EDF               	movwf	indf2,c
  9327                           
  9328                           ; BSR set to: 0
  9329                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 56, args
      +                          ize = 4, vargsize = 0
  9330  01946C  0EF8               	movlw	248
  9331  01946E  26E1               	addwf	fsr1l,f,c
  9332  019470  0EFF               	movlw	255
  9333  019472  22E2               	addwfc	fsr1h,f,c
  9334  019474  52E5               	movf	postdec1,f,c
  9335  019476  50E7               	movf	indf1,w,c
  9336  019478  5EE1               	subwf	fsr1l,f,c
  9337  01947A  0E00               	movlw	0
  9338  01947C  5AE2               	subwfb	fsr1h,f,c
  9339  01947E  0012               	return		;funcret
  9340  019480                     __end_of_sprintf:
  9341                           	opt callstack 0
  9342                           
  9343 ;; *************** function _get_vterm_ptr *****************
  9344 ;; Defined at:
  9345 ;;		line 116 in file "mconfig.c"
  9346 ;; Parameters:    Size  Location     Type
  9347 ;;  line            1  [STACK] const unsigned char 
  9348 ;;  vterm           1  [STACK] const unsigned char 
  9349 ;; Auto vars:     Size  Location     Type
  9350 ;;		None
  9351 ;; Return value:  Size  Location     Type
  9352 ;;                  2  [STACK] PTR unsigned char 
  9353 ;; Registers used:
  9354 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  9355 ;; Tracked objects:
  9356 ;;		On entry : 0/2
  9357 ;;		On exit  : 0/0
  9358 ;;		Unchanged: 0/0
  9359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9364 ;;Total ram usage:        0 bytes
  9365 ;; Hardware stack levels used:    1
  9366 ;; Hardware stack levels required when called:   15
  9367 ;; This function calls:
  9368 ;;		Nothing
  9369 ;; This function is called by:
  9370 ;;		_main
  9371 ;;		_check_help
  9372 ;;		_vterm_dump
  9373 ;; This function uses a reentrant model
  9374 ;;
  9375                           
  9376                           	psect	text31
  9377  01B1D0                     __ptext31:
  9378                           	opt callstack 0
  9379  01B1D0                     _get_vterm_ptr:
  9380                           	opt callstack 15
  9381                           
  9382                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  9383                           ;stkvar	_vterm @ sp[(0)+-2]
  9384                           
  9385                           ; BSR set to: 0
  9386                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9387                           ;incstack = 0
  9388  01B1D0  0EFE               	movlw	-2
  9389  01B1D2  50E3               	movf	plusw1,w,c
  9390  01B1D4  0B03               	andlw	3
  9391  01B1D6  0D78               	mullw	120
  9392  01B1D8  0EFF               	movlw	low _D
  9393  01B1DA  6E26               	movwf	btemp^0,c
  9394  01B1DC  0E07               	movlw	high _D
  9395  01B1DE  6E27               	movwf	(btemp+1)^0,c
  9396  01B1E0  50F3               	movf	243,w,c
  9397  01B1E2  2626               	addwf	btemp^0,f,c
  9398  01B1E4  50F4               	movf	244,w,c
  9399  01B1E6  2227               	addwfc	(btemp+1)^0,f,c
  9400                           
  9401                           ;stkvar	_line @ sp[(0)+-1]
  9402  01B1E8  0EFF               	movlw	-1
  9403  01B1EA  50E3               	movf	plusw1,w,c
  9404  01B1EC  0B03               	andlw	3
  9405  01B1EE  0D28               	mullw	40
  9406  01B1F0  50F3               	movf	243,w,c
  9407  01B1F2  2626               	addwf	btemp^0,f,c
  9408  01B1F4  50F4               	movf	244,w,c
  9409  01B1F6  2227               	addwfc	(btemp+1)^0,f,c
  9410                           
  9411                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  9412  01B1F8  52E5               	movf	postdec1,f,c
  9413  01B1FA  52E5               	movf	postdec1,f,c
  9414  01B1FC  0012               	return		;funcret
  9415  01B1FE                     __end_of_get_vterm_ptr:
  9416                           	opt callstack 0
  9417                           
  9418 ;; *************** function _WaitMs *****************
  9419 ;; Defined at:
  9420 ;;		line 32 in file "timers.c"
  9421 ;; Parameters:    Size  Location     Type
  9422 ;;  numMilliseco    2  [STACK] const unsigned short 
  9423 ;; Auto vars:     Size  Location     Type
  9424 ;;		None
  9425 ;; Return value:  Size  Location     Type
  9426 ;;                  1  [STACK] void 
  9427 ;; Registers used:
  9428 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9429 ;; Tracked objects:
  9430 ;;		On entry : 0/2
  9431 ;;		On exit  : 0/0
  9432 ;;		Unchanged: 0/0
  9433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9438 ;;Total ram usage:        0 bytes
  9439 ;; Hardware stack levels used:    1
  9440 ;; Hardware stack levels required when called:   16
  9441 ;; This function calls:
  9442 ;;		_StartTimer
  9443 ;;		_TimerDone
  9444 ;; This function is called by:
  9445 ;;		_main
  9446 ;;		_vterm_dump
  9447 ;; This function uses a reentrant model
  9448 ;;
  9449                           
  9450                           	psect	text32
  9451  01B00C                     __ptext32:
  9452                           	opt callstack 0
  9453  01B00C                     _WaitMs:
  9454                           	opt callstack 12
  9455                           
  9456                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  9457                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  9458                           
  9459                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9460                           ;incstack = 0
  9461  01B00C  0EFE               	movlw	-2
  9462  01B00E  006F FF8F FFE6     	movff	plusw1,postinc1
  9463  01B014  006F FF8F FFE6     	movff	plusw1,postinc1
  9464  01B01A  0E00               	movlw	0
  9465  01B01C  6EE6               	movwf	postinc1,c
  9466  01B01E  EC12  F0D7         	call	_StartTimer	;wreg free
  9467                           
  9468                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  9469  01B022  D005               	goto	l9769
  9470  01B024                     l1606:
  9471                           
  9472                           ;timers.c: 36:   __nop();
  9473  01B024  F000               	nop	
  9474                           
  9475                           ;timers.c: 37:   __nop();
  9476  01B026  F000               	nop	
  9477                           
  9478                           ;timers.c: 38:   __nop();
  9479  01B028  F000               	nop	
  9480                           
  9481                           ;timers.c: 39:   __nop();
  9482  01B02A  F000               	nop	
  9483  01B02C  0004               	clrwdt		;# 
  9484  01B02E                     l9769:
  9485                           
  9486                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  9487  01B02E  0E00               	movlw	0
  9488  01B030  6EE6               	movwf	postinc1,c
  9489  01B032  EC93  F0D9         	call	_TimerDone	;wreg free
  9490  01B036  5026               	movf	btemp^0,w,c
  9491  01B038  B4D8               	btfsc	status,2,c
  9492  01B03A  D7F4               	goto	l1606
  9493                           
  9494                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  9495  01B03C  52E5               	movf	postdec1,f,c
  9496  01B03E  52E5               	movf	postdec1,f,c
  9497  01B040  0012               	return		;funcret
  9498  01B042                     __end_of_WaitMs:
  9499                           	opt callstack 0
  9500                           
  9501 ;; *************** function _update_lcd *****************
  9502 ;; Defined at:
  9503 ;;		line 85 in file "mconfig.c"
  9504 ;; Parameters:    Size  Location     Type
  9505 ;;  vterm           1  [STACK] unsigned char 
  9506 ;; Auto vars:     Size  Location     Type
  9507 ;;		None
  9508 ;; Return value:  Size  Location     Type
  9509 ;;                  1  [STACK] unsigned char 
  9510 ;; Registers used:
  9511 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9512 ;; Tracked objects:
  9513 ;;		On entry : 0/0
  9514 ;;		On exit  : 0/0
  9515 ;;		Unchanged: 0/0
  9516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9521 ;;Total ram usage:        0 bytes
  9522 ;; Hardware stack levels used:    1
  9523 ;; Hardware stack levels required when called:   26
  9524 ;; This function calls:
  9525 ;;		_eaDogM_WriteStringAtPos
  9526 ;;		_wait_lcd_done
  9527 ;; This function is called by:
  9528 ;;		_main
  9529 ;;		_check_help
  9530 ;; This function uses a reentrant model
  9531 ;;
  9532                           
  9533                           	psect	text33
  9534  019266                     __ptext33:
  9535                           	opt callstack 0
  9536  019266                     _update_lcd:
  9537                           	opt callstack 4
  9538                           
  9539                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  9540                           ;stkvar	_vterm @ sp[(0)+-1]
  9541                           
  9542                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9543                           ;incstack = 0
  9544  019266  0EFF               	movlw	-1
  9545  019268  006F FF8C  F026    	movff	plusw1,btemp
  9546  01926E  0E03               	movlw	3
  9547  019270  1626               	andwf	btemp^0,f,c
  9548  019272  0EFF               	movlw	-1
  9549  019274  0060  F09B  FFE3   	movff	btemp,plusw1
  9550                           
  9551                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  9552  01927A  EE22  F1DF         	lfsr	2,_D+480
  9553  01927E  A0DF               	btfss	indf2,0,c
  9554  019280  D004               	goto	l12553
  9555                           
  9556                           ;stkvar	_vterm @ sp[(0)+-1]
  9557  019282  0EFF               	movlw	-1
  9558  019284  50E3               	movf	plusw1,w,c
  9559  019286  B4D8               	btfsc	status,2,c
  9560  019288  D074               	goto	l1682
  9561  01928A                     l12553:
  9562                           
  9563                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  9564                           ;stkvar	_vterm @ sp[(0)+-1]
  9565  01928A  0EFF               	movlw	-1
  9566  01928C  50E3               	movf	plusw1,w,c
  9567  01928E  0D78               	mullw	120
  9568  019290  0E0F               	movlw	low (_D+16)
  9569  019292  24F3               	addwf	243,w,c
  9570  019294  6ED9               	movwf	fsr2l,c
  9571  019296  0E08               	movlw	high (_D+16)
  9572  019298  20F4               	addwfc	prodh,w,c
  9573  01929A  6EDA               	movwf	fsr2h,c
  9574  01929C  0E00               	movlw	0
  9575  01929E  6EDF               	movwf	indf2,c
  9576                           
  9577                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  9578                           ;stkvar	_vterm @ sp[(0)+-1]
  9579  0192A0  0EFF               	movlw	-1
  9580  0192A2  50E3               	movf	plusw1,w,c
  9581  0192A4  0D78               	mullw	120
  9582  0192A6  0E37               	movlw	low (_D+56)
  9583  0192A8  24F3               	addwf	243,w,c
  9584  0192AA  6ED9               	movwf	fsr2l,c
  9585  0192AC  0E08               	movlw	high (_D+56)
  9586  0192AE  20F4               	addwfc	prodh,w,c
  9587  0192B0  6EDA               	movwf	fsr2h,c
  9588  0192B2  0E00               	movlw	0
  9589  0192B4  6EDF               	movwf	indf2,c
  9590                           
  9591                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  9592                           ;stkvar	_vterm @ sp[(0)+-1]
  9593  0192B6  0EFF               	movlw	-1
  9594  0192B8  50E3               	movf	plusw1,w,c
  9595  0192BA  0D78               	mullw	120
  9596  0192BC  0E5F               	movlw	low (_D+96)
  9597  0192BE  24F3               	addwf	243,w,c
  9598  0192C0  6ED9               	movwf	fsr2l,c
  9599  0192C2  0E08               	movlw	high (_D+96)
  9600  0192C4  20F4               	addwfc	prodh,w,c
  9601  0192C6  6EDA               	movwf	fsr2h,c
  9602  0192C8  0E00               	movlw	0
  9603  0192CA  6EDF               	movwf	indf2,c
  9604                           
  9605                           ;mconfig.c: 95:  wait_lcd_done();
  9606  0192CC  ECA3  F0DB         	call	_wait_lcd_done	;wreg free
  9607                           
  9608                           ; BSR set to: 0
  9609                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  9610                           ;stkvar	_vterm @ sp[(0)+-1]
  9611  0192D0  0EFF               	movlw	-1
  9612  0192D2  50E3               	movf	plusw1,w,c
  9613  0192D4  0D78               	mullw	120
  9614  0192D6  0EFF               	movlw	low _D
  9615  0192D8  6E30               	movwf	(btemp+10)^0,c
  9616  0192DA  0E07               	movlw	high _D
  9617  0192DC  6E31               	movwf	(btemp+11)^0,c
  9618  0192DE  50F3               	movf	243,w,c
  9619  0192E0  2630               	addwf	(btemp+10)^0,f,c
  9620  0192E2  50F4               	movf	244,w,c
  9621  0192E4  2231               	addwfc	(btemp+11)^0,f,c
  9622  0192E6  0060  F0C3  FFE6   	movff	btemp+10,postinc1
  9623  0192EC  0060  F0C7  FFE6   	movff	btemp+11,postinc1
  9624  0192F2  0E00               	movlw	0
  9625  0192F4  6EE6               	movwf	postinc1,c
  9626  0192F6  0E00               	movlw	0
  9627  0192F8  6EE6               	movwf	postinc1,c
  9628  0192FA  EC21  F0D8         	call	_eaDogM_WriteStringAtPos	;wreg free
  9629                           
  9630                           ; BSR set to: 59
  9631                           ;mconfig.c: 97:  wait_lcd_done();
  9632  0192FE  ECA3  F0DB         	call	_wait_lcd_done	;wreg free
  9633                           
  9634                           ; BSR set to: 0
  9635                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  9636                           ;stkvar	_vterm @ sp[(0)+-1]
  9637  019302  0EFF               	movlw	-1
  9638  019304  50E3               	movf	plusw1,w,c
  9639  019306  0D78               	mullw	120
  9640  019308  0EFF               	movlw	low _D
  9641  01930A  6E30               	movwf	(btemp+10)^0,c
  9642  01930C  0E07               	movlw	high _D
  9643  01930E  6E31               	movwf	(btemp+11)^0,c
  9644  019310  0E28               	movlw	40
  9645  019312  2630               	addwf	(btemp+10)^0,f,c
  9646  019314  0E00               	movlw	0
  9647  019316  2231               	addwfc	(btemp+11)^0,f,c
  9648  019318  50F3               	movf	243,w,c
  9649  01931A  2630               	addwf	(btemp+10)^0,f,c
  9650  01931C  50F4               	movf	244,w,c
  9651  01931E  2231               	addwfc	(btemp+11)^0,f,c
  9652  019320  0060  F0C3  FFE6   	movff	btemp+10,postinc1
  9653  019326  0060  F0C7  FFE6   	movff	btemp+11,postinc1
  9654  01932C  0E00               	movlw	0
  9655  01932E  6EE6               	movwf	postinc1,c
  9656  019330  0E01               	movlw	1
  9657  019332  6EE6               	movwf	postinc1,c
  9658  019334  EC21  F0D8         	call	_eaDogM_WriteStringAtPos	;wreg free
  9659                           
  9660                           ; BSR set to: 59
  9661                           ;mconfig.c: 99:  wait_lcd_done();
  9662  019338  ECA3  F0DB         	call	_wait_lcd_done	;wreg free
  9663                           
  9664                           ; BSR set to: 0
  9665                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  9666                           ;stkvar	_vterm @ sp[(0)+-1]
  9667  01933C  0EFF               	movlw	-1
  9668  01933E  50E3               	movf	plusw1,w,c
  9669  019340  0D78               	mullw	120
  9670  019342  0EFF               	movlw	low _D
  9671  019344  6E30               	movwf	(btemp+10)^0,c
  9672  019346  0E07               	movlw	high _D
  9673  019348  6E31               	movwf	(btemp+11)^0,c
  9674  01934A  0E50               	movlw	80
  9675  01934C  2630               	addwf	(btemp+10)^0,f,c
  9676  01934E  0E00               	movlw	0
  9677  019350  2231               	addwfc	(btemp+11)^0,f,c
  9678  019352  50F3               	movf	243,w,c
  9679  019354  2630               	addwf	(btemp+10)^0,f,c
  9680  019356  50F4               	movf	244,w,c
  9681  019358  2231               	addwfc	(btemp+11)^0,f,c
  9682  01935A  0060  F0C3  FFE6   	movff	btemp+10,postinc1
  9683  019360  0060  F0C7  FFE6   	movff	btemp+11,postinc1
  9684  019366  0E00               	movlw	0
  9685  019368  6EE6               	movwf	postinc1,c
  9686  01936A  0E02               	movlw	2
  9687  01936C  6EE6               	movwf	postinc1,c
  9688  01936E  EC21  F0D8         	call	_eaDogM_WriteStringAtPos	;wreg free
  9689  019372                     l1682:
  9690                           
  9691                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  9692  019372  52E5               	movf	postdec1,f,c
  9693  019374  0012               	return		;funcret
  9694  019376                     __end_of_update_lcd:
  9695                           	opt callstack 0
  9696                           
  9697 ;; *************** function _eaDogM_WriteStringAtPos *****************
  9698 ;; Defined at:
  9699 ;;		line 278 in file "eadog.c"
  9700 ;; Parameters:    Size  Location     Type
  9701 ;;  r               1  [STACK] const unsigned char 
  9702 ;;  c               1  [STACK] const unsigned char 
  9703 ;;  strPtr          2  [STACK] PTR unsigned char 
  9704 ;;		 -> D.lcd(480), D(482), V(191), 
  9705 ;; Auto vars:     Size  Location     Type
  9706 ;;		None
  9707 ;; Return value:  Size  Location     Type
  9708 ;;                  1  [STACK] void 
  9709 ;; Registers used:
  9710 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9711 ;; Tracked objects:
  9712 ;;		On entry : 3F/0
  9713 ;;		On exit  : 3F/3B
  9714 ;;		Unchanged: 0/0
  9715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9720 ;;Total ram usage:        0 bytes
  9721 ;; Hardware stack levels used:    1
  9722 ;; Hardware stack levels required when called:   25
  9723 ;; This function calls:
  9724 ;;		_eaDogM_WriteString
  9725 ;;		_send_lcd_cmd_dma
  9726 ;; This function is called by:
  9727 ;;		_update_lcd
  9728 ;;		_vterm_dump
  9729 ;; This function uses a reentrant model
  9730 ;;
  9731                           
  9732                           	psect	text34
  9733  01B042                     __ptext34:
  9734                           	opt callstack 0
  9735  01B042                     _eaDogM_WriteStringAtPos:
  9736                           	opt callstack 4
  9737                           
  9738                           ;eadog.c: 278: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 279: {;eadog.c: 280:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  9739                           ;stkvar	_c @ sp[(0)+-2]
  9740                           
  9741                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9742                           ;incstack = 0
  9743  01B042  0EFE               	movlw	-2
  9744  01B044  006F FF8C  F031    	movff	plusw1,btemp+11
  9745                           
  9746                           ;stkvar	_r @ sp[(0)+-1]
  9747  01B04A  0EFF               	movlw	-1
  9748  01B04C  50E3               	movf	plusw1,w,c
  9749  01B04E  0D10               	mullw	16
  9750  01B050  50F3               	movf	243,w,c
  9751  01B052  2431               	addwf	(btemp+11)^0,w,c
  9752  01B054  0F80               	addlw	128
  9753  01B056  6EE6               	movwf	postinc1,c
  9754  01B058  EC35  F0D5         	call	_send_lcd_cmd_dma	;wreg free
  9755                           
  9756                           ;eadog.c: 281:  eaDogM_WriteString(strPtr);
  9757                           ;stkvar	_strPtr @ sp[(0)+-4]
  9758  01B05C  0EFC               	movlw	-4
  9759  01B05E  006F FF8F FFE6     	movff	plusw1,postinc1
  9760  01B064  006F FF8F FFE6     	movff	plusw1,postinc1
  9761  01B06A  EC2A  F0D0         	call	_eaDogM_WriteString	;wreg free
  9762                           
  9763                           ; BSR set to: 59
  9764                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  9765  01B06E  52E5               	movf	postdec1,f,c
  9766  01B070  52E5               	movf	postdec1,f,c
  9767  01B072  52E5               	movf	postdec1,f,c
  9768  01B074  52E5               	movf	postdec1,f,c
  9769  01B076  0012               	return		;funcret
  9770  01B078                     __end_of_eaDogM_WriteStringAtPos:
  9771                           	opt callstack 0
  9772                           
  9773 ;; *************** function _send_lcd_cmd_dma *****************
  9774 ;; Defined at:
  9775 ;;		line 220 in file "eadog.c"
  9776 ;; Parameters:    Size  Location     Type
  9777 ;;  strPtr          1  [STACK] unsigned char 
  9778 ;; Auto vars:     Size  Location     Type
  9779 ;;		None
  9780 ;; Return value:  Size  Location     Type
  9781 ;;                  1  [STACK] void 
  9782 ;; Registers used:
  9783 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9784 ;; Tracked objects:
  9785 ;;		On entry : 0/3D
  9786 ;;		On exit  : 3F/0
  9787 ;;		Unchanged: 0/0
  9788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9793 ;;Total ram usage:        0 bytes
  9794 ;; Hardware stack levels used:    1
  9795 ;; Hardware stack levels required when called:   24
  9796 ;; This function calls:
  9797 ;;		_printf
  9798 ;;		_ringBufS_flush
  9799 ;;		_start_lcd
  9800 ;;		_wait_lcd_done
  9801 ;;		_wait_lcd_set
  9802 ;; This function is called by:
  9803 ;;		_eaDogM_WriteCommand
  9804 ;;		_eaDogM_WriteStringAtPos
  9805 ;; This function uses a reentrant model
  9806 ;;
  9807                           
  9808                           	psect	text35
  9809  01AA6A                     __ptext35:
  9810                           	opt callstack 0
  9811  01AA6A                     _send_lcd_cmd_dma:
  9812                           	opt callstack 4
  9813                           
  9814                           ;eadog.c: 220: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 221: {;eadog.c: 223:  wait
      +                          _lcd_set();
  9815                           
  9816                           ; BSR set to: 59
  9817                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9818                           ;incstack = 0
  9819  01AA6A  EC8E  F0DC         	call	_wait_lcd_set	;wreg free
  9820                           
  9821                           ; BSR set to: 0
  9822                           ;eadog.c: 225:  ringBufS_flush(spi_link.tx1a, 0);
  9823  01AA6E  0E00               	movlw	0
  9824  01AA70  6EE6               	movwf	postinc1,c
  9825  01AA72  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  9826  01AA78  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  9827  01AA7E  ECAD  F0D1         	call	_ringBufS_flush	;wreg free
  9828  01AA82  92BC               	bcf	188,1,c	;volatile
  9829  01AA84  94BC               	bcf	188,2,c	;volatile
  9830                           
  9831                           ;eadog.c: 228:  DMA1CON0bits.EN = 0;
  9832  01AA86  013B               	movlb	59	; () banked
  9833  01AA88  9FFC               	bcf	252,7,b	;volatile
  9834                           
  9835                           ; BSR set to: 59
  9836                           ;eadog.c: 229:  DMA1SSZ = 1;
  9837  01AA8A  0E00               	movlw	0
  9838  01AA8C  6FF8               	movwf	248,b	;volatile
  9839  01AA8E  0E01               	movlw	1
  9840  01AA90  6FF7               	movwf	247,b	;volatile
  9841                           
  9842                           ; BSR set to: 59
  9843                           ;eadog.c: 230:  DMA1CON0bits.EN = 1;
  9844  01AA92  8FFC               	bsf	252,7,b	;volatile
  9845                           
  9846                           ; BSR set to: 59
  9847                           ;eadog.c: 231:  printf("%c", strPtr);
  9848                           ;stkvar	_strPtr @ sp[(0)+-1]
  9849  01AA94  0EFF               	movlw	-1
  9850  01AA96  50E3               	movf	plusw1,w,c
  9851  01AA98  6EE6               	movwf	postinc1,c
  9852  01AA9A  0E00               	movlw	0
  9853  01AA9C  6EE6               	movwf	postinc1,c
  9854  01AA9E  0EF9               	movlw	low STR_44
  9855  01AAA0  6EE6               	movwf	postinc1,c
  9856  01AAA2  0EFF               	movlw	high STR_44
  9857  01AAA4  6EE6               	movwf	postinc1,c
  9858  01AAA6  0E04               	movlw	4
  9859  01AAA8  6EE6               	movwf	postinc1,c
  9860  01AAAA  EC4A  F0D4         	call	_printf	;wreg free
  9861                           
  9862                           ; BSR set to: 0
  9863                           ;eadog.c: 232:  start_lcd();
  9864  01AAAE  EC91  F0DC         	call	_start_lcd	;wreg free
  9865                           
  9866                           ; BSR set to: 59
  9867                           ;eadog.c: 233:  wait_lcd_done();
  9868  01AAB2  ECA3  F0DB         	call	_wait_lcd_done	;wreg free
  9869                           
  9870                           ; BSR set to: 0
  9871  01AAB6  82BC               	bsf	188,1,c	;volatile
  9872                           
  9873                           ; BSR set to: 0
  9874                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  9875  01AAB8  52E5               	movf	postdec1,f,c
  9876  01AABA  0012               	return		;funcret
  9877  01AABC                     __end_of_send_lcd_cmd_dma:
  9878                           	opt callstack 0
  9879                           
  9880 ;; *************** function _wait_lcd_done *****************
  9881 ;; Defined at:
  9882 ;;		line 156 in file "eadog.c"
  9883 ;; Parameters:    Size  Location     Type
  9884 ;;		None
  9885 ;; Auto vars:     Size  Location     Type
  9886 ;;		None
  9887 ;; Return value:  Size  Location     Type
  9888 ;;                  1  [STACK] void 
  9889 ;; Registers used:
  9890 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9891 ;; Tracked objects:
  9892 ;;		On entry : 0/0
  9893 ;;		On exit  : 3F/0
  9894 ;;		Unchanged: 0/0
  9895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9900 ;;Total ram usage:        0 bytes
  9901 ;; Hardware stack levels used:    1
  9902 ;; Hardware stack levels required when called:   16
  9903 ;; This function calls:
  9904 ;;		_wdtdelay
  9905 ;; This function is called by:
  9906 ;;		_send_lcd_cmd_dma
  9907 ;;		_update_lcd
  9908 ;;		_vterm_dump
  9909 ;; This function uses a reentrant model
  9910 ;;
  9911                           
  9912                           	psect	text36
  9913  01B746                     __ptext36:
  9914                           	opt callstack 0
  9915  01B746                     _wait_lcd_done:
  9916                           	opt callstack 13
  9917                           
  9918                           ;eadog.c: 158:  while (spi_link.LCD_DATA);
  9919                           
  9920                           ; BSR set to: 0
  9921                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9922                           ;incstack = 0
  9923  01B746  0100               	movlb	0	; () banked
  9924  01B748  B760               	btfsc	_spi_link& (0+255),3,b	;volatile
  9925  01B74A  D7FD               	goto	_wait_lcd_done
  9926                           
  9927                           ; BSR set to: 0
  9928                           ;eadog.c: 159:  wdtdelay(50);
  9929  01B74C  0E32               	movlw	50
  9930  01B74E  6EE6               	movwf	postinc1,c
  9931  01B750  0E00               	movlw	0
  9932  01B752  6EE6               	movwf	postinc1,c
  9933  01B754  0E00               	movlw	0
  9934  01B756  6EE6               	movwf	postinc1,c
  9935  01B758  0E00               	movlw	0
  9936  01B75A  6EE6               	movwf	postinc1,c
  9937  01B75C  ECDB  F0D4         	call	_wdtdelay	;wreg free
  9938                           
  9939                           ; BSR set to: 0
  9940                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  9941  01B760  0012               	return		;funcret
  9942  01B762                     __end_of_wait_lcd_done:
  9943                           	opt callstack 0
  9944                           
  9945 ;; *************** function _wdtdelay *****************
  9946 ;; Defined at:
  9947 ;;		line 23 in file "eadog.c"
  9948 ;; Parameters:    Size  Location     Type
  9949 ;;  delay           4  [STACK] const unsigned long 
  9950 ;; Auto vars:     Size  Location     Type
  9951 ;;		None
  9952 ;; Return value:  Size  Location     Type
  9953 ;;                  1  [STACK] void 
  9954 ;; Registers used:
  9955 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9956 ;; Tracked objects:
  9957 ;;		On entry : 0/0
  9958 ;;		On exit  : 3F/0
  9959 ;;		Unchanged: 0/0
  9960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9965 ;;Total ram usage:        0 bytes
  9966 ;; Hardware stack levels used:    1
  9967 ;; Hardware stack levels required when called:   15
  9968 ;; This function calls:
  9969 ;;		Nothing
  9970 ;; This function is called by:
  9971 ;;		_init_display
  9972 ;;		_send_lcd_cmd
  9973 ;;		_send_lcd_cmd_long
  9974 ;;		_wait_lcd_done
  9975 ;; This function uses a reentrant model
  9976 ;;
  9977                           
  9978                           	psect	text37
  9979  01A9B6                     __ptext37:
  9980                           	opt callstack 0
  9981  01A9B6                     _wdtdelay:
  9982                           	opt callstack 13
  9983                           
  9984                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
  9985                           
  9986                           ; BSR set to: 0
  9987                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9988                           ;incstack = 0
  9989  01A9B6  0100               	movlb	0	; () banked
  9990  01A9B8  6B92               	clrf	wdtdelay@dcount& (0+255),b
  9991  01A9BA  6B93               	clrf	(wdtdelay@dcount+1)& (0+255),b
  9992  01A9BC  6B94               	clrf	(wdtdelay@dcount+2)& (0+255),b
  9993  01A9BE  6B95               	clrf	(wdtdelay@dcount+3)& (0+255),b
  9994  01A9C0                     l1447:
  9995                           
  9996                           ; BSR set to: 0
  9997                           ;eadog.c: 28:   __nop();
  9998  01A9C0  F000               	nop	
  9999  01A9C2  0004               	clrwdt		;# 
 10000                           
 10001                           ;eadog.c: 30:  };
 10002  01A9C4  0E01               	movlw	1
 10003  01A9C6  0100               	movlb	0	; () banked
 10004  01A9C8  2792               	addwf	wdtdelay@dcount& (0+255),f,b
 10005  01A9CA  0E00               	movlw	0
 10006  01A9CC  2393               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 10007  01A9CE  2394               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 10008  01A9D0  2395               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 10009                           
 10010                           ; BSR set to: 0
 10011                           ;stkvar	_delay @ sp[(0)+-4]
 10012  01A9D2  0EFC               	movlw	-4
 10013  01A9D4  006F FF8C  F026    	movff	plusw1,btemp
 10014  01A9DA  5192               	movf	wdtdelay@dcount& (0+255),w,b
 10015  01A9DC  5C26               	subwf	btemp^0,w,c
 10016  01A9DE  0EFD               	movlw	-3
 10017  01A9E0  006F FF8C  F026    	movff	plusw1,btemp
 10018  01A9E6  5193               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 10019  01A9E8  5826               	subwfb	btemp^0,w,c
 10020  01A9EA  0EFE               	movlw	-2
 10021  01A9EC  006F FF8C  F026    	movff	plusw1,btemp
 10022  01A9F2  5194               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 10023  01A9F4  5826               	subwfb	btemp^0,w,c
 10024  01A9F6  0EFF               	movlw	-1
 10025  01A9F8  006F FF8C  F026    	movff	plusw1,btemp
 10026  01A9FE  5195               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 10027  01AA00  5826               	subwfb	btemp^0,w,c
 10028  01AA02  B0D8               	btfsc	status,0,c
 10029  01AA04  D7DD               	goto	l1447
 10030                           
 10031                           ; BSR set to: 0
 10032                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 10033  01AA06  52E5               	movf	postdec1,f,c
 10034  01AA08  52E5               	movf	postdec1,f,c
 10035  01AA0A  52E5               	movf	postdec1,f,c
 10036  01AA0C  52E5               	movf	postdec1,f,c
 10037  01AA0E  0012               	return		;funcret
 10038  01AA10                     __end_of_wdtdelay:
 10039                           	opt callstack 0
 10040                           
 10041 ;; *************** function _eaDogM_WriteString *****************
 10042 ;; Defined at:
 10043 ;;		line 199 in file "eadog.c"
 10044 ;; Parameters:    Size  Location     Type
 10045 ;;  strPtr          2  [STACK] PTR unsigned char 
 10046 ;;		 -> D.lcd(480), D(482), V(191), 
 10047 ;; Auto vars:     Size  Location     Type
 10048 ;;		None
 10049 ;; Return value:  Size  Location     Type
 10050 ;;                  1  [STACK] void 
 10051 ;; Registers used:
 10052 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10053 ;; Tracked objects:
 10054 ;;		On entry : 3F/0
 10055 ;;		On exit  : 3F/3B
 10056 ;;		Unchanged: 0/0
 10057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10062 ;;Total ram usage:        0 bytes
 10063 ;; Hardware stack levels used:    1
 10064 ;; Hardware stack levels required when called:   24
 10065 ;; This function calls:
 10066 ;;		_printf
 10067 ;;		_ringBufS_flush
 10068 ;;		_start_lcd
 10069 ;;		_strlen
 10070 ;;		_wait_lcd_set
 10071 ;; This function is called by:
 10072 ;;		_eaDogM_WriteStringAtPos
 10073 ;; This function uses a reentrant model
 10074 ;;
 10075                           
 10076                           	psect	text38
 10077  01A054                     __ptext38:
 10078                           	opt callstack 0
 10079  01A054                     _eaDogM_WriteString:
 10080                           	opt callstack 4
 10081                           
 10082                           ;eadog.c: 199: void eaDogM_WriteString(char *strPtr);eadog.c: 200: {;eadog.c: 202:  wait
      +                          _lcd_set();
 10083                           
 10084                           ; BSR set to: 0
 10085                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10086                           ;incstack = 0
 10087  01A054  EC8E  F0DC         	call	_wait_lcd_set	;wreg free
 10088                           
 10089                           ; BSR set to: 0
 10090                           ;eadog.c: 204:  ringBufS_flush(spi_link.tx1a, 0);
 10091  01A058  0E00               	movlw	0
 10092  01A05A  6EE6               	movwf	postinc1,c
 10093  01A05C  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 10094  01A062  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 10095  01A068  ECAD  F0D1         	call	_ringBufS_flush	;wreg free
 10096  01A06C  94BC               	bcf	188,2,c	;volatile
 10097                           
 10098                           ;eadog.c: 206:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 10099                           ;stkvar	_strPtr @ sp[(0)+-2]
 10100  01A06E  0EFE               	movlw	-2
 10101  01A070  006F FF8F FFE6     	movff	plusw1,postinc1
 10102  01A076  006F FF8F FFE6     	movff	plusw1,postinc1
 10103  01A07C  EC7D  F0D0         	call	_strlen	;wreg free
 10104  01A080  5027               	movf	(btemp+1)^0,w,c
 10105  01A082  E104               	bnz	u12130
 10106  01A084  0E41               	movlw	65
 10107  01A086  5C26               	subwf	btemp^0,w,c
 10108  01A088  A0D8               	btfss	status,0,c
 10109  01A08A  D010               	goto	l12465
 10110  01A08C                     u12130:
 10111                           
 10112                           ;stkvar	_strPtr @ sp[(0)+-2]
 10113  01A08C  0EFE               	movlw	-2
 10114  01A08E  006F FF8C  F030    	movff	plusw1,btemp+10
 10115  01A094  0EFF               	movlw	-1
 10116  01A096  006F FF8C  F031    	movff	plusw1,btemp+11
 10117  01A09C  0E40               	movlw	64
 10118  01A09E  2430               	addwf	(btemp+10)^0,w,c
 10119  01A0A0  6ED9               	movwf	fsr2l,c
 10120  01A0A2  0E00               	movlw	0
 10121  01A0A4  2031               	addwfc	(btemp+11)^0,w,c
 10122  01A0A6  6EDA               	movwf	fsr2h,c
 10123  01A0A8  0E00               	movlw	0
 10124  01A0AA  6EDF               	movwf	indf2,c
 10125  01A0AC                     l12465:
 10126                           
 10127                           ;eadog.c: 207:  DMA1CON0bits.EN = 0;
 10128  01A0AC  013B               	movlb	59	; () banked
 10129  01A0AE  9FFC               	bcf	252,7,b	;volatile
 10130                           
 10131                           ; BSR set to: 59
 10132                           ;eadog.c: 208:  DMA1SSZ = strlen(strPtr);
 10133                           ;stkvar	_strPtr @ sp[(0)+-2]
 10134  01A0B0  0EFE               	movlw	-2
 10135  01A0B2  006F FF8F FFE6     	movff	plusw1,postinc1
 10136  01A0B8  006F FF8F FFE6     	movff	plusw1,postinc1
 10137  01A0BE  EC7D  F0D0         	call	_strlen	;wreg free
 10138  01A0C2  0060  F09B  FBF7   	movff	btemp,15351	;volatile
 10139  01A0C8  0060  F09F  FBF8   	movff	btemp+1,15352	;volatile
 10140                           
 10141                           ;eadog.c: 209:  DMA1CON0bits.EN = 1;
 10142  01A0CE  013B               	movlb	59	; () banked
 10143  01A0D0  8FFC               	bsf	252,7,b	;volatile
 10144                           
 10145                           ; BSR set to: 59
 10146                           ;eadog.c: 210:  printf("%s", strPtr);
 10147                           ;stkvar	_strPtr @ sp[(0)+-2]
 10148  01A0D2  0EFE               	movlw	-2
 10149  01A0D4  006F FF8F FFE6     	movff	plusw1,postinc1
 10150  01A0DA  006F FF8F FFE6     	movff	plusw1,postinc1
 10151  01A0E0  0EFC               	movlw	low STR_43
 10152  01A0E2  6EE6               	movwf	postinc1,c
 10153  01A0E4  0EFF               	movlw	high STR_43
 10154  01A0E6  6EE6               	movwf	postinc1,c
 10155  01A0E8  0E04               	movlw	4
 10156  01A0EA  6EE6               	movwf	postinc1,c
 10157  01A0EC  EC4A  F0D4         	call	_printf	;wreg free
 10158                           
 10159                           ; BSR set to: 0
 10160                           ;eadog.c: 211:  start_lcd();
 10161  01A0F0  EC91  F0DC         	call	_start_lcd	;wreg free
 10162                           
 10163                           ; BSR set to: 59
 10164                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 10165  01A0F4  52E5               	movf	postdec1,f,c
 10166  01A0F6  52E5               	movf	postdec1,f,c
 10167  01A0F8  0012               	return		;funcret
 10168  01A0FA                     __end_of_eaDogM_WriteString:
 10169                           	opt callstack 0
 10170                           
 10171 ;; *************** function _wait_lcd_set *****************
 10172 ;; Defined at:
 10173 ;;		line 146 in file "eadog.c"
 10174 ;; Parameters:    Size  Location     Type
 10175 ;;		None
 10176 ;; Auto vars:     Size  Location     Type
 10177 ;;		None
 10178 ;; Return value:  Size  Location     Type
 10179 ;;                  1  [STACK] void 
 10180 ;; Registers used:
 10181 ;;		None
 10182 ;; Tracked objects:
 10183 ;;		On entry : 0/3D
 10184 ;;		On exit  : 3F/0
 10185 ;;		Unchanged: 0/0
 10186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10191 ;;Total ram usage:        0 bytes
 10192 ;; Hardware stack levels used:    1
 10193 ;; Hardware stack levels required when called:   15
 10194 ;; This function calls:
 10195 ;;		Nothing
 10196 ;; This function is called by:
 10197 ;;		_eaDogM_WriteString
 10198 ;;		_send_lcd_cmd_dma
 10199 ;; This function uses a reentrant model
 10200 ;;
 10201                           
 10202                           	psect	text39
 10203  01B91C                     __ptext39:
 10204                           	opt callstack 0
 10205  01B91C                     _wait_lcd_set:
 10206                           	opt callstack 12
 10207                           
 10208                           ;eadog.c: 148:  spi_link.LCD_DATA = 1;
 10209                           
 10210                           ; BSR set to: 59
 10211                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10212                           ;incstack = 0
 10213  01B91C  0100               	movlb	0	; () banked
 10214  01B91E  8760               	bsf	_spi_link& (0+255),3,b	;volatile
 10215                           
 10216                           ; BSR set to: 0
 10217                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 10218  01B920  0012               	return		;funcret
 10219  01B922                     __end_of_wait_lcd_set:
 10220                           	opt callstack 0
 10221                           
 10222 ;; *************** function _start_lcd *****************
 10223 ;; Defined at:
 10224 ;;		line 141 in file "eadog.c"
 10225 ;; Parameters:    Size  Location     Type
 10226 ;;		None
 10227 ;; Auto vars:     Size  Location     Type
 10228 ;;		None
 10229 ;; Return value:  Size  Location     Type
 10230 ;;                  1  [STACK] void 
 10231 ;; Registers used:
 10232 ;;		None
 10233 ;; Tracked objects:
 10234 ;;		On entry : 3F/0
 10235 ;;		On exit  : 3F/3B
 10236 ;;		Unchanged: 0/0
 10237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10242 ;;Total ram usage:        0 bytes
 10243 ;; Hardware stack levels used:    1
 10244 ;; Hardware stack levels required when called:   15
 10245 ;; This function calls:
 10246 ;;		Nothing
 10247 ;; This function is called by:
 10248 ;;		_eaDogM_WriteString
 10249 ;;		_send_lcd_cmd_dma
 10250 ;; This function uses a reentrant model
 10251 ;;
 10252                           
 10253                           	psect	text40
 10254  01B922                     __ptext40:
 10255                           	opt callstack 0
 10256  01B922                     _start_lcd:
 10257                           	opt callstack 12
 10258                           
 10259                           ;eadog.c: 143:  DMA1CON0bits.DMA1SIRQEN = 1;
 10260                           
 10261                           ; BSR set to: 0
 10262                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10263                           ;incstack = 0
 10264  01B922  013B               	movlb	59	; () banked
 10265  01B924  8DFC               	bsf	252,6,b	;volatile
 10266                           
 10267                           ; BSR set to: 59
 10268                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 10269  01B926  0012               	return		;funcret
 10270  01B928                     __end_of_start_lcd:
 10271                           	opt callstack 0
 10272                           
 10273 ;; *************** function _ringBufS_flush *****************
 10274 ;; Defined at:
 10275 ;;		line 76 in file "ringbufs.c"
 10276 ;; Parameters:    Size  Location     Type
 10277 ;;  _this           2  [STACK] PTR struct ringBufS_t
 10278 ;;		 -> ring_buf1(67), 
 10279 ;;  clearBuffer     1  [STACK] const char 
 10280 ;; Auto vars:     Size  Location     Type
 10281 ;;		None
 10282 ;; Return value:  Size  Location     Type
 10283 ;;                  1  [STACK] void 
 10284 ;; Registers used:
 10285 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10286 ;; Tracked objects:
 10287 ;;		On entry : 3F/0
 10288 ;;		On exit  : 0/0
 10289 ;;		Unchanged: 0/0
 10290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10295 ;;Total ram usage:        0 bytes
 10296 ;; Hardware stack levels used:    1
 10297 ;; Hardware stack levels required when called:   16
 10298 ;; This function calls:
 10299 ;;		_memset
 10300 ;; This function is called by:
 10301 ;;		_eaDogM_WriteString
 10302 ;;		_send_lcd_cmd_dma
 10303 ;; This function uses a reentrant model
 10304 ;;
 10305                           
 10306                           	psect	text41
 10307  01A35A                     __ptext41:
 10308                           	opt callstack 0
 10309  01A35A                     _ringBufS_flush:
 10310                           	opt callstack 11
 10311                           
 10312                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 10313                           ;stkvar	__this @ sp[(0)+-2]
 10314                           
 10315                           ; BSR set to: 59
 10316                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10317                           ;incstack = 0
 10318  01A35A  0EFE               	movlw	-2
 10319  01A35C  006F FF8C  F030    	movff	plusw1,btemp+10
 10320  01A362  0EFF               	movlw	-1
 10321  01A364  006F FF8C  F031    	movff	plusw1,btemp+11
 10322  01A36A  0E42               	movlw	66
 10323  01A36C  2430               	addwf	(btemp+10)^0,w,c
 10324  01A36E  6ED9               	movwf	fsr2l,c
 10325  01A370  0E00               	movlw	0
 10326  01A372  2031               	addwfc	(btemp+11)^0,w,c
 10327  01A374  6EDA               	movwf	fsr2h,c
 10328  01A376  0E00               	movlw	0
 10329  01A378  6EDF               	movwf	indf2,c
 10330                           
 10331                           ;ringbufs.c: 79:  _this->head = 0;
 10332                           ;stkvar	__this @ sp[(0)+-2]
 10333  01A37A  0EFE               	movlw	-2
 10334  01A37C  006F FF8C  F030    	movff	plusw1,btemp+10
 10335  01A382  0EFF               	movlw	-1
 10336  01A384  006F FF8C  F031    	movff	plusw1,btemp+11
 10337  01A38A  0E40               	movlw	64
 10338  01A38C  2430               	addwf	(btemp+10)^0,w,c
 10339  01A38E  6ED9               	movwf	fsr2l,c
 10340  01A390  0E00               	movlw	0
 10341  01A392  2031               	addwfc	(btemp+11)^0,w,c
 10342  01A394  6EDA               	movwf	fsr2h,c
 10343  01A396  0E00               	movlw	0
 10344  01A398  6EDF               	movwf	indf2,c
 10345                           
 10346                           ;ringbufs.c: 80:  _this->tail = 0;
 10347                           ;stkvar	__this @ sp[(0)+-2]
 10348  01A39A  0EFE               	movlw	-2
 10349  01A39C  006F FF8C  F030    	movff	plusw1,btemp+10
 10350  01A3A2  0EFF               	movlw	-1
 10351  01A3A4  006F FF8C  F031    	movff	plusw1,btemp+11
 10352  01A3AA  0E41               	movlw	65
 10353  01A3AC  2430               	addwf	(btemp+10)^0,w,c
 10354  01A3AE  6ED9               	movwf	fsr2l,c
 10355  01A3B0  0E00               	movlw	0
 10356  01A3B2  2031               	addwfc	(btemp+11)^0,w,c
 10357  01A3B4  6EDA               	movwf	fsr2h,c
 10358  01A3B6  0E00               	movlw	0
 10359  01A3B8  6EDF               	movwf	indf2,c
 10360                           
 10361                           ;ringbufs.c: 81:  if (clearBuffer) {
 10362                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 10363  01A3BA  0EFD               	movlw	-3
 10364  01A3BC  50E3               	movf	plusw1,w,c
 10365  01A3BE  B4D8               	btfsc	status,2,c
 10366  01A3C0  D011               	goto	l1591
 10367                           
 10368                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 10369  01A3C2  0E40               	movlw	64
 10370  01A3C4  6EE6               	movwf	postinc1,c
 10371  01A3C6  0E00               	movlw	0
 10372  01A3C8  6EE6               	movwf	postinc1,c
 10373  01A3CA  0E00               	movlw	0
 10374  01A3CC  6EE6               	movwf	postinc1,c
 10375  01A3CE  0E00               	movlw	0
 10376  01A3D0  6EE6               	movwf	postinc1,c
 10377                           
 10378                           ;stkvar	__this @ sp[(-4)+-2]
 10379  01A3D2  0EFA               	movlw	-6
 10380  01A3D4  006F FF8F FFE6     	movff	plusw1,postinc1
 10381  01A3DA  006F FF8F FFE6     	movff	plusw1,postinc1
 10382  01A3E0  EC2F  F0B3         	call	_memset	;wreg free
 10383  01A3E4                     l1591:
 10384                           
 10385                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 10386  01A3E4  52E5               	movf	postdec1,f,c
 10387  01A3E6  52E5               	movf	postdec1,f,c
 10388  01A3E8  52E5               	movf	postdec1,f,c
 10389  01A3EA  0012               	return		;funcret
 10390  01A3EC                     __end_of_ringBufS_flush:
 10391                           	opt callstack 0
 10392                           
 10393 ;; *************** function _memset *****************
 10394 ;; Defined at:
 10395 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 10396 ;; Parameters:    Size  Location     Type
 10397 ;;  dest            2  [STACK] PTR void 
 10398 ;;		 -> ring_buf2(67), ring_buf1(67), 
 10399 ;;  c               2  [STACK] int 
 10400 ;;  n               2  [STACK] unsigned int 
 10401 ;; Auto vars:     Size  Location     Type
 10402 ;;  s               2  [STACK] PTR unsigned char 
 10403 ;;		 -> ring_buf2(67), ring_buf1(67), 
 10404 ;;  k               2  [STACK] unsigned int 
 10405 ;; Return value:  Size  Location     Type
 10406 ;;                  2  [STACK] PTR void 
 10407 ;; Registers used:
 10408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10409 ;; Tracked objects:
 10410 ;;		On entry : 0/0
 10411 ;;		On exit  : 0/0
 10412 ;;		Unchanged: 0/0
 10413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10418 ;;Total ram usage:        0 bytes
 10419 ;; Hardware stack levels used:    1
 10420 ;; Hardware stack levels required when called:   15
 10421 ;; This function calls:
 10422 ;;		Nothing
 10423 ;; This function is called by:
 10424 ;;		_ringBufS_init
 10425 ;;		_ringBufS_flush
 10426 ;; This function uses a reentrant model
 10427 ;;
 10428                           
 10429                           	psect	text42
 10430  01665E                     __ptext42:
 10431                           	opt callstack 0
 10432  01665E                     _memset:
 10433                           	opt callstack 0
 10434                           
 10435                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10436  01665E  52E6               	movf	postinc1,f,c
 10437  016660  52E6               	movf	postinc1,f,c
 10438  016662  52E6               	movf	postinc1,f,c
 10439  016664  52E6               	movf	postinc1,f,c
 10440                           
 10441                           ;stkvar	_dest @ sp[(-4)+-2]
 10442                           
 10443                           ;incstack = 0
 10444  016666  0EFA               	movlw	-6
 10445  016668  006F FF8C  F030    	movff	plusw1,btemp+10
 10446  01666E  0EFB               	movlw	-5
 10447  016670  006F FF8C  F031    	movff	plusw1,btemp+11
 10448                           
 10449                           ;stkvar	_s @ sp[(-4)+0]
 10450  016676  0EFD               	movlw	-3
 10451  016678  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 10452  01667E  0EFC               	movlw	-4
 10453  016680  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 10454                           
 10455                           ;stkvar	_n @ sp[(-4)+-6]
 10456  016686  0EF6               	movlw	-10
 10457  016688  006F FF8C  F026    	movff	plusw1,btemp
 10458  01668E  0EF7               	movlw	-9
 10459  016690  50E3               	movf	plusw1,w,c
 10460  016692  1026               	iorwf	btemp^0,w,c
 10461  016694  B4D8               	btfsc	status,2,c
 10462  016696  D154               	goto	u10740
 10463                           
 10464                           ;stkvar	_c @ sp[(-4)+-4]
 10465                           ;stkvar	_s @ sp[(-4)+0]
 10466  016698  0EFC               	movlw	-4
 10467  01669A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10468  0166A0  0EFD               	movlw	-3
 10469  0166A2  006F FF8F FFDA     	movff	plusw1,fsr2h
 10470  0166A8  0EF8               	movlw	-8
 10471  0166AA  006F FF8F FFDF     	movff	plusw1,indf2
 10472                           
 10473                           ;stkvar	_c @ sp[(-4)+-4]
 10474                           ;stkvar	_n @ sp[(-4)+-6]
 10475                           ;stkvar	_s @ sp[(-4)+0]
 10476  0166B0  0EFC               	movlw	-4
 10477  0166B2  006F FF8C  F030    	movff	plusw1,btemp+10
 10478  0166B8  0EFD               	movlw	-3
 10479  0166BA  006F FF8C  F031    	movff	plusw1,btemp+11
 10480  0166C0  0EF6               	movlw	-10
 10481  0166C2  50E3               	movf	plusw1,w,c
 10482  0166C4  2630               	addwf	(btemp+10)^0,f,c
 10483  0166C6  0EF7               	movlw	-9
 10484  0166C8  50E3               	movf	plusw1,w,c
 10485  0166CA  2231               	addwfc	(btemp+11)^0,f,c
 10486  0166CC  0EFF               	movlw	255
 10487  0166CE  2430               	addwf	(btemp+10)^0,w,c
 10488  0166D0  6ED9               	movwf	fsr2l,c
 10489  0166D2  0EFF               	movlw	255
 10490  0166D4  2031               	addwfc	(btemp+11)^0,w,c
 10491  0166D6  6EDA               	movwf	fsr2h,c
 10492  0166D8  0EF8               	movlw	-8
 10493  0166DA  006F FF8F FFDF     	movff	plusw1,indf2
 10494                           
 10495                           ;stkvar	_n @ sp[(-4)+-6]
 10496  0166E0  0EF7               	movlw	-9
 10497  0166E2  50E3               	movf	plusw1,w,c
 10498  0166E4  E108               	bnz	l11637
 10499  0166E6  0EF6               	movlw	-10
 10500  0166E8  006F FF8C  F026    	movff	plusw1,btemp
 10501  0166EE  0E03               	movlw	3
 10502  0166F0  5E26               	subwf	btemp^0,f,c
 10503  0166F2  A0D8               	btfss	status,0,c
 10504  0166F4  D125               	goto	u10740
 10505  0166F6                     l11637:
 10506                           
 10507                           ;stkvar	_c @ sp[(-4)+-4]
 10508                           ;stkvar	_s @ sp[(-4)+0]
 10509  0166F6  0EFC               	movlw	-4
 10510  0166F8  006F FF8C  F030    	movff	plusw1,btemp+10
 10511  0166FE  0EFD               	movlw	-3
 10512  016700  006F FF8C  F031    	movff	plusw1,btemp+11
 10513  016706  0E01               	movlw	1
 10514  016708  2430               	addwf	(btemp+10)^0,w,c
 10515  01670A  6ED9               	movwf	fsr2l,c
 10516  01670C  0E00               	movlw	0
 10517  01670E  2031               	addwfc	(btemp+11)^0,w,c
 10518  016710  6EDA               	movwf	fsr2h,c
 10519  016712  0EF8               	movlw	-8
 10520  016714  006F FF8F FFDF     	movff	plusw1,indf2
 10521                           
 10522                           ;stkvar	_c @ sp[(-4)+-4]
 10523                           ;stkvar	_s @ sp[(-4)+0]
 10524  01671A  0EFC               	movlw	-4
 10525  01671C  006F FF8C  F030    	movff	plusw1,btemp+10
 10526  016722  0EFD               	movlw	-3
 10527  016724  006F FF8C  F031    	movff	plusw1,btemp+11
 10528  01672A  0E02               	movlw	2
 10529  01672C  2430               	addwf	(btemp+10)^0,w,c
 10530  01672E  6ED9               	movwf	fsr2l,c
 10531  016730  0E00               	movlw	0
 10532  016732  2031               	addwfc	(btemp+11)^0,w,c
 10533  016734  6EDA               	movwf	fsr2h,c
 10534  016736  0EF8               	movlw	-8
 10535  016738  006F FF8F FFDF     	movff	plusw1,indf2
 10536                           
 10537                           ;stkvar	_c @ sp[(-4)+-4]
 10538                           ;stkvar	_n @ sp[(-4)+-6]
 10539                           ;stkvar	_s @ sp[(-4)+0]
 10540  01673E  0EFC               	movlw	-4
 10541  016740  006F FF8C  F030    	movff	plusw1,btemp+10
 10542  016746  0EFD               	movlw	-3
 10543  016748  006F FF8C  F031    	movff	plusw1,btemp+11
 10544  01674E  0EF6               	movlw	-10
 10545  016750  50E3               	movf	plusw1,w,c
 10546  016752  2630               	addwf	(btemp+10)^0,f,c
 10547  016754  0EF7               	movlw	-9
 10548  016756  50E3               	movf	plusw1,w,c
 10549  016758  2231               	addwfc	(btemp+11)^0,f,c
 10550  01675A  0EFE               	movlw	254
 10551  01675C  2430               	addwf	(btemp+10)^0,w,c
 10552  01675E  6ED9               	movwf	fsr2l,c
 10553  016760  0EFF               	movlw	255
 10554  016762  2031               	addwfc	(btemp+11)^0,w,c
 10555  016764  6EDA               	movwf	fsr2h,c
 10556  016766  0EF8               	movlw	-8
 10557  016768  006F FF8F FFDF     	movff	plusw1,indf2
 10558                           
 10559                           ;stkvar	_c @ sp[(-4)+-4]
 10560                           ;stkvar	_n @ sp[(-4)+-6]
 10561                           ;stkvar	_s @ sp[(-4)+0]
 10562  01676E  0EFC               	movlw	-4
 10563  016770  006F FF8C  F030    	movff	plusw1,btemp+10
 10564  016776  0EFD               	movlw	-3
 10565  016778  006F FF8C  F031    	movff	plusw1,btemp+11
 10566  01677E  0EF6               	movlw	-10
 10567  016780  50E3               	movf	plusw1,w,c
 10568  016782  2630               	addwf	(btemp+10)^0,f,c
 10569  016784  0EF7               	movlw	-9
 10570  016786  50E3               	movf	plusw1,w,c
 10571  016788  2231               	addwfc	(btemp+11)^0,f,c
 10572  01678A  0EFD               	movlw	253
 10573  01678C  2430               	addwf	(btemp+10)^0,w,c
 10574  01678E  6ED9               	movwf	fsr2l,c
 10575  016790  0EFF               	movlw	255
 10576  016792  2031               	addwfc	(btemp+11)^0,w,c
 10577  016794  6EDA               	movwf	fsr2h,c
 10578  016796  0EF8               	movlw	-8
 10579  016798  006F FF8F FFDF     	movff	plusw1,indf2
 10580                           
 10581                           ;stkvar	_n @ sp[(-4)+-6]
 10582  01679E  0EF7               	movlw	-9
 10583  0167A0  50E3               	movf	plusw1,w,c
 10584  0167A2  E108               	bnz	l11643
 10585  0167A4  0EF6               	movlw	-10
 10586  0167A6  006F FF8C  F026    	movff	plusw1,btemp
 10587  0167AC  0E07               	movlw	7
 10588  0167AE  5E26               	subwf	btemp^0,f,c
 10589  0167B0  A0D8               	btfss	status,0,c
 10590  0167B2  D0C6               	goto	u10740
 10591  0167B4                     l11643:
 10592                           
 10593                           ;stkvar	_c @ sp[(-4)+-4]
 10594                           ;stkvar	_s @ sp[(-4)+0]
 10595  0167B4  0EFC               	movlw	-4
 10596  0167B6  006F FF8C  F030    	movff	plusw1,btemp+10
 10597  0167BC  0EFD               	movlw	-3
 10598  0167BE  006F FF8C  F031    	movff	plusw1,btemp+11
 10599  0167C4  0E03               	movlw	3
 10600  0167C6  2430               	addwf	(btemp+10)^0,w,c
 10601  0167C8  6ED9               	movwf	fsr2l,c
 10602  0167CA  0E00               	movlw	0
 10603  0167CC  2031               	addwfc	(btemp+11)^0,w,c
 10604  0167CE  6EDA               	movwf	fsr2h,c
 10605  0167D0  0EF8               	movlw	-8
 10606  0167D2  006F FF8F FFDF     	movff	plusw1,indf2
 10607                           
 10608                           ;stkvar	_c @ sp[(-4)+-4]
 10609                           ;stkvar	_n @ sp[(-4)+-6]
 10610                           ;stkvar	_s @ sp[(-4)+0]
 10611  0167D8  0EFC               	movlw	-4
 10612  0167DA  006F FF8C  F030    	movff	plusw1,btemp+10
 10613  0167E0  0EFD               	movlw	-3
 10614  0167E2  006F FF8C  F031    	movff	plusw1,btemp+11
 10615  0167E8  0EF6               	movlw	-10
 10616  0167EA  50E3               	movf	plusw1,w,c
 10617  0167EC  2630               	addwf	(btemp+10)^0,f,c
 10618  0167EE  0EF7               	movlw	-9
 10619  0167F0  50E3               	movf	plusw1,w,c
 10620  0167F2  2231               	addwfc	(btemp+11)^0,f,c
 10621  0167F4  0EFC               	movlw	252
 10622  0167F6  2430               	addwf	(btemp+10)^0,w,c
 10623  0167F8  6ED9               	movwf	fsr2l,c
 10624  0167FA  0EFF               	movlw	255
 10625  0167FC  2031               	addwfc	(btemp+11)^0,w,c
 10626  0167FE  6EDA               	movwf	fsr2h,c
 10627  016800  0EF8               	movlw	-8
 10628  016802  006F FF8F FFDF     	movff	plusw1,indf2
 10629                           
 10630                           ;stkvar	_n @ sp[(-4)+-6]
 10631  016808  0EF7               	movlw	-9
 10632  01680A  50E3               	movf	plusw1,w,c
 10633  01680C  E108               	bnz	l11649
 10634  01680E  0EF6               	movlw	-10
 10635  016810  006F FF8C  F026    	movff	plusw1,btemp
 10636  016816  0E09               	movlw	9
 10637  016818  5E26               	subwf	btemp^0,f,c
 10638  01681A  A0D8               	btfss	status,0,c
 10639  01681C  D091               	goto	u10740
 10640  01681E                     l11649:
 10641                           
 10642                           ;stkvar	_s @ sp[(-4)+0]
 10643  01681E  0EFC               	movlw	-4
 10644  016820  006F FF8C  F030    	movff	plusw1,btemp+10
 10645  016826  1E30               	comf	(btemp+10)^0,f,c
 10646  016828  0EFD               	movlw	-3
 10647  01682A  006F FF8C  F031    	movff	plusw1,btemp+11
 10648  016830  1E31               	comf	(btemp+11)^0,f,c
 10649  016832  2A30               	incf	(btemp+10)^0,f,c
 10650  016834  B4D8               	btfsc	status,2,c
 10651  016836  2A31               	incf	(btemp+11)^0,f,c
 10652  016838  0E03               	movlw	3
 10653  01683A  1630               	andwf	(btemp+10)^0,f,c
 10654  01683C  0E00               	movlw	0
 10655  01683E  1631               	andwf	(btemp+11)^0,f,c
 10656                           
 10657                           ;stkvar	_k @ sp[(-4)+2]
 10658  016840  0EFE               	movlw	-2
 10659  016842  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 10660  016848  0EFF               	movlw	-1
 10661  01684A  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 10662                           
 10663                           ;stkvar	_k @ sp[(-4)+2]
 10664                           ;stkvar	_s @ sp[(-4)+0]
 10665  016850  0EFC               	movlw	-4
 10666  016852  50E3               	movf	plusw1,w,c
 10667  016854  6E26               	movwf	btemp^0,c
 10668  016856  0EFE               	movlw	-2
 10669  016858  50E3               	movf	plusw1,w,c
 10670  01685A  2626               	addwf	btemp^0,f,c
 10671  01685C  0EFC               	movlw	-4
 10672  01685E  0060  F09B  FFE3   	movff	btemp,plusw1
 10673  016864  0EFD               	movlw	-3
 10674  016866  50E3               	movf	plusw1,w,c
 10675  016868  6E26               	movwf	btemp^0,c
 10676  01686A  0EFF               	movlw	-1
 10677  01686C  50E3               	movf	plusw1,w,c
 10678  01686E  2226               	addwfc	btemp^0,f,c
 10679  016870  0EFD               	movlw	-3
 10680  016872  0060  F09B  FFE3   	movff	btemp,plusw1
 10681                           
 10682                           ;stkvar	_k @ sp[(-4)+2]
 10683                           ;stkvar	_n @ sp[(-4)+-6]
 10684  016878  0EF6               	movlw	-10
 10685  01687A  50E3               	movf	plusw1,w,c
 10686  01687C  6E26               	movwf	btemp^0,c
 10687  01687E  0EFE               	movlw	-2
 10688  016880  50E3               	movf	plusw1,w,c
 10689  016882  5E26               	subwf	btemp^0,f,c
 10690  016884  0EF6               	movlw	-10
 10691  016886  0060  F09B  FFE3   	movff	btemp,plusw1
 10692  01688C  0EF7               	movlw	-9
 10693  01688E  50E3               	movf	plusw1,w,c
 10694  016890  6E26               	movwf	btemp^0,c
 10695  016892  0EFF               	movlw	-1
 10696  016894  50E3               	movf	plusw1,w,c
 10697  016896  5A26               	subwfb	btemp^0,f,c
 10698  016898  0EF7               	movlw	-9
 10699  01689A  0060  F09B  FFE3   	movff	btemp,plusw1
 10700  0168A0  0EFC               	movlw	252
 10701  0168A2  6E30               	movwf	(btemp+10)^0,c
 10702  0168A4  0EFF               	movlw	255
 10703  0168A6  6E31               	movwf	(btemp+11)^0,c
 10704                           
 10705                           ;stkvar	_n @ sp[(-4)+-6]
 10706  0168A8  0EF6               	movlw	-10
 10707  0168AA  006F FF8C  F026    	movff	plusw1,btemp
 10708  0168B0  5030               	movf	(btemp+10)^0,w,c
 10709  0168B2  1626               	andwf	btemp^0,f,c
 10710  0168B4  0EF6               	movlw	-10
 10711  0168B6  0060  F09B  FFE3   	movff	btemp,plusw1
 10712  0168BC  0EF7               	movlw	-9
 10713  0168BE  006F FF8C  F026    	movff	plusw1,btemp
 10714  0168C4  5031               	movf	(btemp+11)^0,w,c
 10715  0168C6  1626               	andwf	btemp^0,f,c
 10716  0168C8  0EF7               	movlw	-9
 10717  0168CA  D02E               	goto	L9
 10718  0168CC                     l11657:
 10719                           
 10720                           ;stkvar	_c @ sp[(-4)+-4]
 10721                           ;stkvar	_s @ sp[(-4)+0]
 10722  0168CC  0EFC               	movlw	-4
 10723  0168CE  006F FF8F FFD9     	movff	plusw1,fsr2l
 10724  0168D4  0EFD               	movlw	-3
 10725  0168D6  006F FF8F FFDA     	movff	plusw1,fsr2h
 10726  0168DC  0EF8               	movlw	-8
 10727  0168DE  006F FF8F FFDF     	movff	plusw1,indf2
 10728                           
 10729                           ;stkvar	_n @ sp[(-4)+-6]
 10730  0168E4  0EF6               	movlw	-10
 10731  0168E6  006F FF8C  F026    	movff	plusw1,btemp
 10732  0168EC  0E01               	movlw	1
 10733  0168EE  5E26               	subwf	btemp^0,f,c
 10734  0168F0  0EF6               	movlw	-10
 10735  0168F2  0060  F09B  FFE3   	movff	btemp,plusw1
 10736  0168F8  0EF7               	movlw	-9
 10737  0168FA  006F FF8C  F026    	movff	plusw1,btemp
 10738  016900  0E00               	movlw	0
 10739  016902  5A26               	subwfb	btemp^0,f,c
 10740  016904  0EF7               	movlw	-9
 10741  016906  0060  F09B  FFE3   	movff	btemp,plusw1
 10742                           
 10743                           ;stkvar	_s @ sp[(-4)+0]
 10744  01690C  0EFC               	movlw	-4
 10745  01690E  50E3               	movf	plusw1,w,c
 10746  016910  0F01               	addlw	1
 10747  016912  6E26               	movwf	btemp^0,c
 10748  016914  0EFC               	movlw	-4
 10749  016916  0060  F09B  FFE3   	movff	btemp,plusw1
 10750  01691C  6A26               	clrf	btemp^0,c
 10751  01691E  0EFD               	movlw	-3
 10752  016920  50E3               	movf	plusw1,w,c
 10753  016922  2026               	addwfc	btemp^0,w,c
 10754  016924  6E26               	movwf	btemp^0,c
 10755  016926  0EFD               	movlw	-3
 10756  016928                     L9:
 10757  016928  0060  F09B  FFE3   	movff	btemp,plusw1
 10758                           
 10759                           ;stkvar	_n @ sp[(-4)+-6]
 10760  01692E  0EF6               	movlw	-10
 10761  016930  006F FF8C  F026    	movff	plusw1,btemp
 10762  016936  0EF7               	movlw	-9
 10763  016938  50E3               	movf	plusw1,w,c
 10764  01693A  1026               	iorwf	btemp^0,w,c
 10765  01693C  A4D8               	btfss	status,2,c
 10766  01693E  D7C6               	goto	l11657
 10767  016940                     u10740:
 10768                           
 10769                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 10770  016940  0EF6               	movlw	246
 10771  016942  26E1               	addwf	fsr1l,f,c
 10772  016944  0EFF               	movlw	255
 10773  016946  22E2               	addwfc	fsr1h,f,c
 10774  016948  0012               	return		;funcret
 10775  01694A                     __end_of_memset:
 10776                           	opt callstack 0
 10777                           
 10778 ;; *************** function _printf *****************
 10779 ;; Defined at:
 10780 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 10781 ;; Parameters:    Size  Location     Type
 10782 ;;  fmt             2  [STACK] PTR const unsigned char 
 10783 ;;		 -> STR_45(3), STR_44(3), STR_43(3), 
 10784 ;; Auto vars:     Size  Location     Type
 10785 ;;  ap              2  [STACK] PTR void [1]
 10786 ;;		 -> ?_printf(2), ?_sprintf(2), 
 10787 ;;  ret             2    0        int 
 10788 ;; Return value:  Size  Location     Type
 10789 ;;                  2  [STACK] int 
 10790 ;; Registers used:
 10791 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10792 ;; Tracked objects:
 10793 ;;		On entry : 3F/3B
 10794 ;;		On exit  : 3F/0
 10795 ;;		Unchanged: 0/0
 10796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10801 ;;Total ram usage:        0 bytes
 10802 ;; Hardware stack levels used:    1
 10803 ;; Hardware stack levels required when called:   23
 10804 ;; This function calls:
 10805 ;;		_vfprintf
 10806 ;; This function is called by:
 10807 ;;		_eaDogM_WriteString
 10808 ;;		_send_lcd_cmd_dma
 10809 ;; This function uses a reentrant model
 10810 ;;
 10811                           
 10812                           	psect	text43
 10813  01A894                     __ptext43:
 10814                           	opt callstack 0
 10815  01A894                     _printf:
 10816                           	opt callstack 0
 10817                           
 10818                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10819  01A894  52E6               	movf	postinc1,f,c
 10820  01A896  52E6               	movf	postinc1,f,c
 10821                           
 10822                           ;stkvar	?_printf @ sp[(-2)+-3]
 10823                           
 10824                           ;incstack = 0
 10825  01A898  0EFB               	movlw	251
 10826  01A89A  24E1               	addwf	fsr1l,w,c
 10827  01A89C  6E30               	movwf	(btemp+10)^0,c
 10828  01A89E  0EFF               	movlw	255
 10829  01A8A0  20E2               	addwfc	fsr1h,w,c
 10830  01A8A2  6E31               	movwf	(btemp+11)^0,c
 10831                           
 10832                           ;stkvar	_ap @ sp[(-2)+0]
 10833  01A8A4  0EFF               	movlw	-1
 10834  01A8A6  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 10835  01A8AC  0EFE               	movlw	-2
 10836  01A8AE  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 10837                           
 10838                           ;stkvar	_ap @ sp[(-2)+0]
 10839  01A8B4  0EFE               	movlw	254
 10840  01A8B6  24E1               	addwf	fsr1l,w,c
 10841  01A8B8  6E26               	movwf	btemp^0,c
 10842  01A8BA  0EFF               	movlw	255
 10843  01A8BC  20E2               	addwfc	fsr1h,w,c
 10844  01A8BE  6E27               	movwf	(btemp+1)^0,c
 10845  01A8C0  0060  F09B  FFE6   	movff	btemp,postinc1
 10846  01A8C6  0060  F09F  FFE6   	movff	btemp+1,postinc1
 10847                           
 10848                           ;stkvar	_fmt @ sp[(-4)+-3]
 10849  01A8CC  0EF9               	movlw	-7
 10850  01A8CE  006F FF8F FFE6     	movff	plusw1,postinc1
 10851  01A8D4  006F FF8F FFE6     	movff	plusw1,postinc1
 10852  01A8DA  0E00               	movlw	0
 10853  01A8DC  6EE6               	movwf	postinc1,c
 10854  01A8DE  0E00               	movlw	0
 10855  01A8E0  6EE6               	movwf	postinc1,c
 10856  01A8E2  EC7F  F0CF         	call	_vfprintf	;wreg free
 10857                           
 10858                           ; BSR set to: 0
 10859                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 10860  01A8E6  52E5               	movf	postdec1,f,c
 10861  01A8E8  52E5               	movf	postdec1,f,c
 10862  01A8EA  52E5               	movf	postdec1,f,c
 10863  01A8EC  50E7               	movf	indf1,w,c
 10864  01A8EE  5EE1               	subwf	fsr1l,f,c
 10865  01A8F0  0E00               	movlw	0
 10866  01A8F2  5AE2               	subwfb	fsr1h,f,c
 10867  01A8F4  0012               	return		;funcret
 10868  01A8F6                     __end_of_printf:
 10869                           	opt callstack 0
 10870                           
 10871 ;; *************** function _vfprintf *****************
 10872 ;; Defined at:
 10873 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10874 ;; Parameters:    Size  Location     Type
 10875 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10876 ;;		 -> f(6), NULL(0), 
 10877 ;;  fmt             2  [STACK] PTR const unsigned char 
 10878 ;;		 -> STR_65(85), STR_63(3), STR_62(3), STR_61(19), 
 10879 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 10880 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
 10881 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
 10882 ;;		 -> STR_48(19), STR_45(3), STR_44(3), STR_43(3), 
 10883 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 10884 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 10885 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 10886 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 10887 ;;		 -> STR_26(19), STR_25(20), STR_24(19), STR_23(19), 
 10888 ;;		 -> STR_22(20), STR_21(17), STR_20(16), STR_19(16), 
 10889 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 10890 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 10891 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 10892 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 10893 ;;		 -> STR_1(17), 
 10894 ;;  ap              2  [STACK] PTR PTR void 
 10895 ;;		 -> ap(2), ap(2), 
 10896 ;; Auto vars:     Size  Location     Type
 10897 ;;  cfmt            2  [STACK] PTR unsigned char 
 10898 ;;		 -> STR_65(85), STR_63(3), STR_62(3), STR_61(19), 
 10899 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 10900 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
 10901 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
 10902 ;;		 -> STR_48(19), STR_45(3), STR_44(3), STR_43(3), 
 10903 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 10904 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 10905 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 10906 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 10907 ;;		 -> STR_26(19), STR_25(20), STR_24(19), STR_23(19), 
 10908 ;;		 -> STR_22(20), STR_21(17), STR_20(16), STR_19(16), 
 10909 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 10910 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 10911 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 10912 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 10913 ;;		 -> STR_1(17), 
 10914 ;; Return value:  Size  Location     Type
 10915 ;;                  2  [STACK] int 
 10916 ;; Registers used:
 10917 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10918 ;; Tracked objects:
 10919 ;;		On entry : 0/2
 10920 ;;		On exit  : 3F/0
 10921 ;;		Unchanged: 0/0
 10922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10927 ;;Total ram usage:        0 bytes
 10928 ;; Hardware stack levels used:    1
 10929 ;; Hardware stack levels required when called:   22
 10930 ;; This function calls:
 10931 ;;		_vfpfcnvrt
 10932 ;; This function is called by:
 10933 ;;		_sprintf
 10934 ;;		_printf
 10935 ;; This function uses a reentrant model
 10936 ;;
 10937                           
 10938                           	psect	text44
 10939  019EFE                     __ptext44:
 10940                           	opt callstack 0
 10941  019EFE                     _vfprintf:
 10942                           	opt callstack 0
 10943                           
 10944                           ; BSR set to: 0
 10945                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10946  019EFE  52E6               	movf	postinc1,f,c
 10947  019F00  52E6               	movf	postinc1,f,c
 10948                           
 10949                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 10950                           ;stkvar	_fmt @ sp[(-2)+-4]
 10951                           
 10952                           ;incstack = 0
 10953 ;; hardware stack exceeded
 10954  019F02  0EFA               	movlw	-6
 10955  019F04  006F FF8C  F030    	movff	plusw1,btemp+10
 10956  019F0A  0EFB               	movlw	-5
 10957  019F0C  006F FF8C  F031    	movff	plusw1,btemp+11
 10958                           
 10959                           ;stkvar	_cfmt @ sp[(-2)+0]
 10960  019F12  0EFF               	movlw	-1
 10961  019F14  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 10962  019F1A  0EFE               	movlw	-2
 10963  019F1C  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 10964                           
 10965                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 10966  019F22  0100               	movlb	0	; () banked
 10967  019F24  6BAF               	clrf	_nout& (0+255),b
 10968  019F26  6BB0               	clrf	(_nout+1)& (0+255),b
 10969                           
 10970                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 10971  019F28  D021               	goto	l12481
 10972  019F2A                     l12479:
 10973                           
 10974                           ; BSR set to: 0
 10975                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 10976                           ;stkvar	_ap @ sp[(-2)+-6]
 10977  019F2A  0EF8               	movlw	-8
 10978  019F2C  006F FF8F FFE6     	movff	plusw1,postinc1
 10979  019F32  006F FF8F FFE6     	movff	plusw1,postinc1
 10980                           
 10981                           ;stkvar	_cfmt @ sp[(-4)+0]
 10982  019F38  0EFC               	movlw	252
 10983  019F3A  24E1               	addwf	fsr1l,w,c
 10984  019F3C  6E26               	movwf	btemp^0,c
 10985  019F3E  0EFF               	movlw	255
 10986  019F40  20E2               	addwfc	fsr1h,w,c
 10987  019F42  6E27               	movwf	(btemp+1)^0,c
 10988  019F44  0060  F09B  FFE6   	movff	btemp,postinc1
 10989  019F4A  0060  F09F  FFE6   	movff	btemp+1,postinc1
 10990                           
 10991                           ;stkvar	_fp @ sp[(-6)+-2]
 10992  019F50  0EF8               	movlw	-8
 10993  019F52  006F FF8F FFE6     	movff	plusw1,postinc1
 10994  019F58  006F FF8F FFE6     	movff	plusw1,postinc1
 10995  019F5E  EC6E  F091         	call	_vfpfcnvrt	;wreg free
 10996  019F62  5026               	movf	btemp^0,w,c
 10997  019F64  0100               	movlb	0	; () banked
 10998  019F66  27AF               	addwf	_nout& (0+255),f,b
 10999  019F68  5027               	movf	(btemp+1)^0,w,c
 11000  019F6A  23B0               	addwfc	(_nout+1)& (0+255),f,b
 11001  019F6C                     l12481:
 11002                           
 11003                           ; BSR set to: 0
 11004                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 11005                           ;stkvar	_cfmt @ sp[(-2)+0]
 11006  019F6C  50E1               	movf	fsr1l,w,c
 11007  019F6E  0FFE               	addlw	-2
 11008  019F70  6ED9               	movwf	fsr2l,c
 11009  019F72  50E2               	movf	fsr1h,w,c
 11010  019F74  6EDA               	movwf	fsr2h,c
 11011  019F76  0EFF               	movlw	255
 11012  019F78  22DA               	addwfc	fsr2h,f,c
 11013  019F7A  006F FF7B FFF6     	movff	postinc2,tblptrl
 11014  019F80  006F FF77 FFF7     	movff	postdec2,tblptrh
 11015  019F86                     	if	0	;tblptru may be non-zero
 11016  019F86                     	endif
 11017  019F86                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11018  019F86  0E00               	movlw	low (__mediumconst shr (0+16))
 11019  019F88  6EF8               	movwf	tblptru,c
 11020  019F8A                     	endif
 11021  019F8A  0008               	tblrd		*
 11022  019F8C  50F5               	movf	tablat,w,c
 11023  019F8E  0900               	iorlw	0
 11024  019F90  A4D8               	btfss	status,2,c
 11025  019F92  D7CB               	goto	l12479
 11026                           
 11027                           ; BSR set to: 0
 11028                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 11029  019F94  0060  F2BC  F026   	movff	_nout,btemp
 11030  019F9A  0060  F2C0  F027   	movff	_nout+1,btemp+1
 11031                           
 11032                           ; BSR set to: 0
 11033                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 11034  019FA0  0EF8               	movlw	248
 11035  019FA2  26E1               	addwf	fsr1l,f,c
 11036  019FA4  0EFF               	movlw	255
 11037  019FA6  22E2               	addwfc	fsr1h,f,c
 11038  019FA8  0012               	return		;funcret
 11039  019FAA                     __end_of_vfprintf:
 11040                           	opt callstack 0
 11041                           
 11042 ;; *************** function _vfpfcnvrt *****************
 11043 ;; Defined at:
 11044 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11045 ;; Parameters:    Size  Location     Type
 11046 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11047 ;;		 -> f(6), NULL(0), 
 11048 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 11049 ;;		 -> cfmt(2), 
 11050 ;;  ap              2  [STACK] PTR PTR void 
 11051 ;;		 -> ap(2), ap(2), 
 11052 ;; Auto vars:     Size  Location     Type
 11053 ;;  llu             8  [STACK] unsigned long long 
 11054 ;;  ll              8  [STACK] long long 
 11055 ;;  f               4  [STACK] long long 
 11056 ;;  ct              3  [STACK] unsigned char [3]
 11057 ;;  vp              3    0        PTR void 
 11058 ;;  cp              2  [STACK] PTR unsigned char 
 11059 ;;		 -> ?_printf(2), ?_sprintf(2), STR_47(9), STR_46(12), 
 11060 ;;		 -> D.lcd(480), D(482), T(144), STR_3(7), 
 11061 ;;		 -> V(191), 
 11062 ;;  i               2    0        int 
 11063 ;;  done            2    0        int 
 11064 ;;  c               1  [STACK] unsigned char 
 11065 ;; Return value:  Size  Location     Type
 11066 ;;                  2  [STACK] int 
 11067 ;; Registers used:
 11068 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11069 ;; Tracked objects:
 11070 ;;		On entry : 0/0
 11071 ;;		On exit  : 0/0
 11072 ;;		Unchanged: 0/0
 11073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11078 ;;Total ram usage:        0 bytes
 11079 ;; Hardware stack levels used:    1
 11080 ;; Hardware stack levels required when called:   21
 11081 ;; This function calls:
 11082 ;;		_atoi
 11083 ;;		_ctoa
 11084 ;;		_dtoa
 11085 ;;		_efgtoa
 11086 ;;		_fputc
 11087 ;;		_isdigit
 11088 ;;		_isupper
 11089 ;;		_stoa
 11090 ;;		_strncmp
 11091 ;;		_tolower
 11092 ;;		_utoa
 11093 ;;		_xtoa
 11094 ;; This function is called by:
 11095 ;;		_vfprintf
 11096 ;; This function uses a reentrant model
 11097 ;;
 11098                           
 11099                           	psect	text45
 11100  0122DC                     __ptext45:
 11101                           	opt callstack 0
 11102  0122DC                     _vfpfcnvrt:
 11103                           	opt callstack 0
 11104                           
 11105                           ; BSR set to: 0
 11106                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11107  0122DC  0E20               	movlw	32
 11108  0122DE  26E1               	addwf	fsr1l,f,c
 11109  0122E0  0E00               	movlw	0
 11110  0122E2  22E2               	addwfc	fsr1h,f,c
 11111                           
 11112                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 11113                           ;stkvar	_fmt @ sp[(-32)+-4]
 11114                           
 11115                           ;incstack = 0
 11116 ;; hardware stack exceeded
 11117  0122E4  0EDC               	movlw	-36
 11118  0122E6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11119  0122EC  0EDD               	movlw	-35
 11120  0122EE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11121  0122F4  006F FF7B FFF6     	movff	postinc2,tblptrl
 11122  0122FA  006F FF77 FFF7     	movff	postdec2,tblptrh
 11123  012300                     	if	0	;tblptru may be non-zero
 11124  012300                     	endif
 11125  012300                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11126  012300  0E00               	movlw	low (__mediumconst shr (0+16))
 11127  012302  6EF8               	movwf	tblptru,c
 11128  012304                     	endif
 11129  012304  0008               	tblrd		*
 11130  012306  50F5               	movf	tablat,w,c
 11131  012308  0A25               	xorlw	37
 11132  01230A  A4D8               	btfss	status,2,c
 11133  01230C  EF15  F099         	goto	l12425
 11134                           
 11135                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 11136                           ;stkvar	_fmt @ sp[(-32)+-4]
 11137  012310  0EDC               	movlw	-36
 11138  012312  006F FF8F FFD9     	movff	plusw1,fsr2l
 11139  012318  0EDD               	movlw	-35
 11140  01231A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11141  012320  2ADE               	incf	postinc2,f,c
 11142  012322  0E00               	movlw	0
 11143  012324  22DD               	addwfc	postdec2,f,c
 11144                           
 11145                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 11146  012326  6A0A               	clrf	_width^0,c
 11147  012328  6A0B               	clrf	(_width+1)^0,c
 11148  01232A  6A0E               	clrf	_flags^0,c
 11149  01232C  6A0F               	clrf	(_flags+1)^0,c
 11150                           
 11151                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 11152  01232E  680C               	setf	_prec^0,c
 11153  012330  680D               	setf	(_prec+1)^0,c
 11154                           
 11155                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 11156                           ;stkvar	_fmt @ sp[(-32)+-4]
 11157  012332  0EDC               	movlw	-36
 11158  012334  006F FF8F FFD9     	movff	plusw1,fsr2l
 11159  01233A  0EDD               	movlw	-35
 11160  01233C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11161  012342  006F FF7B FFF6     	movff	postinc2,tblptrl
 11162  012348  006F FF77 FFF7     	movff	postdec2,tblptrh
 11163  01234E                     	if	0	;tblptru may be non-zero
 11164  01234E                     	endif
 11165  01234E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11166  01234E  0E00               	movlw	low (__mediumconst shr (0+16))
 11167  012350  6EF8               	movwf	tblptru,c
 11168  012352                     	endif
 11169  012352  0008               	tblrd		*
 11170  012354  50F5               	movf	tablat,w,c
 11171  012356  0A2A               	xorlw	42
 11172  012358  A4D8               	btfss	status,2,c
 11173  01235A  D031               	goto	l12243
 11174                           
 11175                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 11176                           ;stkvar	_fmt @ sp[(-32)+-4]
 11177  01235C  0EDC               	movlw	-36
 11178  01235E  006F FF8F FFD9     	movff	plusw1,fsr2l
 11179  012364  0EDD               	movlw	-35
 11180  012366  006F FF8F FFDA     	movff	plusw1,fsr2h
 11181  01236C  2ADE               	incf	postinc2,f,c
 11182  01236E  0E00               	movlw	0
 11183  012370  22DD               	addwfc	postdec2,f,c
 11184                           
 11185                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 11186                           ;stkvar	_ap @ sp[(-32)+-6]
 11187  012372  0EDA               	movlw	-38
 11188  012374  006F FF8F FFD9     	movff	plusw1,fsr2l
 11189  01237A  0EDB               	movlw	-37
 11190  01237C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11191  012382  0E02               	movlw	2
 11192  012384  5EDE               	subwf	postinc2,f,c
 11193  012386  0E00               	movlw	0
 11194  012388  5ADD               	subwfb	postdec2,f,c
 11195  01238A  006F FF78  F030    	movff	postinc2,btemp+10
 11196  012390  006F FF74  F031    	movff	postdec2,btemp+11
 11197  012396  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 11198  01239C  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 11199  0123A2  006F FF78  F00A    	movff	postinc2,_width
 11200  0123A8  006F FF74  F00B    	movff	postdec2,_width+1
 11201                           
 11202                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 11203  0123AE  AE0B               	btfss	(_width+1)^0,7,c
 11204  0123B0  D066               	goto	u11870
 11205                           
 11206                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 11207  0123B2  800E               	bsf	_flags^0,0,c
 11208                           
 11209                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 11210  0123B4  6C0A               	negf	_width^0,c
 11211  0123B6  1E0B               	comf	(_width+1)^0,f,c
 11212  0123B8  B0D8               	btfsc	status,0,c
 11213  0123BA  2A0B               	incf	(_width+1)^0,f,c
 11214  0123BC  D060               	goto	u11870
 11215  0123BE                     l12243:
 11216                           
 11217                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 11218                           ;stkvar	_fmt @ sp[(-32)+-4]
 11219  0123BE  0EDC               	movlw	-36
 11220  0123C0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11221  0123C6  0EDD               	movlw	-35
 11222  0123C8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11223  0123CE  006F FF78  F030    	movff	postinc2,btemp+10
 11224  0123D4  006F FF74  F031    	movff	postdec2,btemp+11
 11225  0123DA  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 11226  0123E0  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 11227  0123E6  ECA4  F0B8         	call	_atoi	;wreg free
 11228  0123EA  0060  F098  F00A   	movff	btemp,_width
 11229  0123F0  0060  F09C  F00B   	movff	btemp+1,_width+1
 11230                           
 11231                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11232  0123F6  D00B               	goto	l12247
 11233  0123F8                     l12245:
 11234                           
 11235                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 11236                           ;stkvar	_fmt @ sp[(-32)+-4]
 11237  0123F8  0EDC               	movlw	-36
 11238  0123FA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11239  012400  0EDD               	movlw	-35
 11240  012402  006F FF8F FFDA     	movff	plusw1,fsr2h
 11241  012408  2ADE               	incf	postinc2,f,c
 11242  01240A  0E00               	movlw	0
 11243  01240C  22DD               	addwfc	postdec2,f,c
 11244  01240E                     l12247:
 11245  01240E  0ED0               	movlw	208
 11246  012410  6E30               	movwf	(btemp+10)^0,c
 11247  012412  0EFF               	movlw	255
 11248  012414  6E31               	movwf	(btemp+11)^0,c
 11249                           
 11250                           ;stkvar	_fmt @ sp[(-32)+-4]
 11251  012416  0EDC               	movlw	-36
 11252  012418  006F FF8F FFD9     	movff	plusw1,fsr2l
 11253  01241E  0EDD               	movlw	-35
 11254  012420  006F FF8F FFDA     	movff	plusw1,fsr2h
 11255  012426  006F FF7B FFF6     	movff	postinc2,tblptrl
 11256  01242C  006F FF77 FFF7     	movff	postdec2,tblptrh
 11257  012432                     	if	0	;tblptru may be non-zero
 11258  012432                     	endif
 11259  012432                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11260  012432  0E00               	movlw	low (__mediumconst shr (0+16))
 11261  012434  6EF8               	movwf	tblptru,c
 11262  012436                     	endif
 11263  012436  0008               	tblrd		*
 11264  012438  50F5               	movf	tablat,w,c
 11265  01243A  6E2E               	movwf	(btemp+8)^0,c
 11266  01243C  6A2F               	clrf	(btemp+9)^0,c
 11267  01243E  5030               	movf	(btemp+10)^0,w,c
 11268  012440  262E               	addwf	(btemp+8)^0,f,c
 11269  012442  5031               	movf	(btemp+11)^0,w,c
 11270  012444  222F               	addwfc	(btemp+9)^0,f,c
 11271  012446  502F               	movf	(btemp+9)^0,w,c
 11272  012448  E106               	bnz	u11850
 11273  01244A  0E0A               	movlw	10
 11274  01244C  5C2E               	subwf	(btemp+8)^0,w,c
 11275  01244E  B0D8               	btfsc	status,0,c
 11276  012450  D002               	goto	u11850
 11277  012452  0E01               	movlw	1
 11278  012454  D001               	goto	u11860
 11279  012456                     u11850:
 11280  012456  0E00               	movlw	0
 11281  012458                     u11860:
 11282  012458  6E30               	movwf	(btemp+10)^0,c
 11283  01245A  6A31               	clrf	(btemp+11)^0,c
 11284                           
 11285                           ;stkvar	_vfpfcnvrt$5474 @ sp[(-32)+4]
 11286  01245C  0EE4               	movlw	-28
 11287  01245E  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 11288  012464  0EE5               	movlw	-27
 11289  012466  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 11290                           
 11291                           ;stkvar	_vfpfcnvrt$5474 @ sp[(-32)+4]
 11292  01246C  0EE4               	movlw	-28
 11293  01246E  006F FF8C  F026    	movff	plusw1,btemp
 11294  012474  0EE5               	movlw	-27
 11295  012476  50E3               	movf	plusw1,w,c
 11296  012478  1026               	iorwf	btemp^0,w,c
 11297  01247A  A4D8               	btfss	status,2,c
 11298  01247C  D7BD               	goto	l12245
 11299  01247E                     u11870:
 11300                           
 11301                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 11302                           ;stkvar	_fmt @ sp[(-32)+-4]
 11303  01247E  0EDC               	movlw	-36
 11304  012480  006F FF8F FFD9     	movff	plusw1,fsr2l
 11305  012486  0EDD               	movlw	-35
 11306  012488  006F FF8F FFDA     	movff	plusw1,fsr2h
 11307  01248E  006F FF7B FFF6     	movff	postinc2,tblptrl
 11308  012494  006F FF77 FFF7     	movff	postdec2,tblptrh
 11309  01249A                     	if	0	;tblptru may be non-zero
 11310  01249A                     	endif
 11311  01249A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11312  01249A  0E00               	movlw	low (__mediumconst shr (0+16))
 11313  01249C  6EF8               	movwf	tblptru,c
 11314  01249E                     	endif
 11315  01249E  0008               	tblrd		*
 11316  0124A0  50F5               	movf	tablat,w,c
 11317  0124A2  0A2E               	xorlw	46
 11318  0124A4  A4D8               	btfss	status,2,c
 11319  0124A6  D0AC               	goto	u11920
 11320                           
 11321                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 11322  0124A8  6A0C               	clrf	_prec^0,c
 11323  0124AA  6A0D               	clrf	(_prec+1)^0,c
 11324                           
 11325                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 11326                           ;stkvar	_fmt @ sp[(-32)+-4]
 11327  0124AC  0EDC               	movlw	-36
 11328  0124AE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11329  0124B4  0EDD               	movlw	-35
 11330  0124B6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11331  0124BC  2ADE               	incf	postinc2,f,c
 11332  0124BE  0E00               	movlw	0
 11333  0124C0  22DD               	addwfc	postdec2,f,c
 11334                           
 11335                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 11336                           ;stkvar	_fmt @ sp[(-32)+-4]
 11337  0124C2  0EDC               	movlw	-36
 11338  0124C4  006F FF8F FFD9     	movff	plusw1,fsr2l
 11339  0124CA  0EDD               	movlw	-35
 11340  0124CC  006F FF8F FFDA     	movff	plusw1,fsr2h
 11341  0124D2  006F FF7B FFF6     	movff	postinc2,tblptrl
 11342  0124D8  006F FF77 FFF7     	movff	postdec2,tblptrh
 11343  0124DE                     	if	0	;tblptru may be non-zero
 11344  0124DE                     	endif
 11345  0124DE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11346  0124DE  0E00               	movlw	low (__mediumconst shr (0+16))
 11347  0124E0  6EF8               	movwf	tblptru,c
 11348  0124E2                     	endif
 11349  0124E2  0008               	tblrd		*
 11350  0124E4  50F5               	movf	tablat,w,c
 11351  0124E6  0A2A               	xorlw	42
 11352  0124E8  A4D8               	btfss	status,2,c
 11353  0124EA  D02A               	goto	l12265
 11354                           
 11355                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 11356                           ;stkvar	_fmt @ sp[(-32)+-4]
 11357  0124EC  0EDC               	movlw	-36
 11358  0124EE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11359  0124F4  0EDD               	movlw	-35
 11360  0124F6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11361  0124FC  2ADE               	incf	postinc2,f,c
 11362  0124FE  0E00               	movlw	0
 11363  012500  22DD               	addwfc	postdec2,f,c
 11364                           
 11365                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 11366                           ;stkvar	_ap @ sp[(-32)+-6]
 11367  012502  0EDA               	movlw	-38
 11368  012504  006F FF8F FFD9     	movff	plusw1,fsr2l
 11369  01250A  0EDB               	movlw	-37
 11370  01250C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11371  012512  0E02               	movlw	2
 11372  012514  5EDE               	subwf	postinc2,f,c
 11373  012516  0E00               	movlw	0
 11374  012518  5ADD               	subwfb	postdec2,f,c
 11375  01251A  006F FF78  F030    	movff	postinc2,btemp+10
 11376  012520  006F FF74  F031    	movff	postdec2,btemp+11
 11377  012526  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 11378  01252C  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 11379  012532  006F FF78  F00C    	movff	postinc2,_prec
 11380  012538  006F FF74  F00D    	movff	postdec2,_prec+1
 11381                           
 11382                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 11383  01253E  D060               	goto	u11920
 11384  012540                     l12265:
 11385                           
 11386                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 11387                           ;stkvar	_fmt @ sp[(-32)+-4]
 11388  012540  0EDC               	movlw	-36
 11389  012542  006F FF8F FFD9     	movff	plusw1,fsr2l
 11390  012548  0EDD               	movlw	-35
 11391  01254A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11392  012550  006F FF78  F030    	movff	postinc2,btemp+10
 11393  012556  006F FF74  F031    	movff	postdec2,btemp+11
 11394  01255C  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 11395  012562  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 11396  012568  ECA4  F0B8         	call	_atoi	;wreg free
 11397  01256C  0060  F098  F00C   	movff	btemp,_prec
 11398  012572  0060  F09C  F00D   	movff	btemp+1,_prec+1
 11399                           
 11400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11401  012578  D00B               	goto	l12269
 11402  01257A                     l12267:
 11403                           
 11404                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 11405                           ;stkvar	_fmt @ sp[(-32)+-4]
 11406  01257A  0EDC               	movlw	-36
 11407  01257C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11408  012582  0EDD               	movlw	-35
 11409  012584  006F FF8F FFDA     	movff	plusw1,fsr2h
 11410  01258A  2ADE               	incf	postinc2,f,c
 11411  01258C  0E00               	movlw	0
 11412  01258E  22DD               	addwfc	postdec2,f,c
 11413  012590                     l12269:
 11414  012590  0ED0               	movlw	208
 11415  012592  6E30               	movwf	(btemp+10)^0,c
 11416  012594  0EFF               	movlw	255
 11417  012596  6E31               	movwf	(btemp+11)^0,c
 11418                           
 11419                           ;stkvar	_fmt @ sp[(-32)+-4]
 11420  012598  0EDC               	movlw	-36
 11421  01259A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11422  0125A0  0EDD               	movlw	-35
 11423  0125A2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11424  0125A8  006F FF7B FFF6     	movff	postinc2,tblptrl
 11425  0125AE  006F FF77 FFF7     	movff	postdec2,tblptrh
 11426  0125B4                     	if	0	;tblptru may be non-zero
 11427  0125B4                     	endif
 11428  0125B4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11429  0125B4  0E00               	movlw	low (__mediumconst shr (0+16))
 11430  0125B6  6EF8               	movwf	tblptru,c
 11431  0125B8                     	endif
 11432  0125B8  0008               	tblrd		*
 11433  0125BA  50F5               	movf	tablat,w,c
 11434  0125BC  6E2E               	movwf	(btemp+8)^0,c
 11435  0125BE  6A2F               	clrf	(btemp+9)^0,c
 11436  0125C0  5030               	movf	(btemp+10)^0,w,c
 11437  0125C2  262E               	addwf	(btemp+8)^0,f,c
 11438  0125C4  5031               	movf	(btemp+11)^0,w,c
 11439  0125C6  222F               	addwfc	(btemp+9)^0,f,c
 11440  0125C8  502F               	movf	(btemp+9)^0,w,c
 11441  0125CA  E106               	bnz	u11900
 11442  0125CC  0E0A               	movlw	10
 11443  0125CE  5C2E               	subwf	(btemp+8)^0,w,c
 11444  0125D0  B0D8               	btfsc	status,0,c
 11445  0125D2  D002               	goto	u11900
 11446  0125D4  0E01               	movlw	1
 11447  0125D6  D001               	goto	u11910
 11448  0125D8                     u11900:
 11449  0125D8  0E00               	movlw	0
 11450  0125DA                     u11910:
 11451  0125DA  6E30               	movwf	(btemp+10)^0,c
 11452  0125DC  6A31               	clrf	(btemp+11)^0,c
 11453                           
 11454                           ;stkvar	_vfpfcnvrt$5475 @ sp[(-32)+0]
 11455  0125DE  0EE0               	movlw	-32
 11456  0125E0  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 11457  0125E6  0EE1               	movlw	-31
 11458  0125E8  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 11459                           
 11460                           ;stkvar	_vfpfcnvrt$5475 @ sp[(-32)+0]
 11461  0125EE  0EE0               	movlw	-32
 11462  0125F0  006F FF8C  F026    	movff	plusw1,btemp
 11463  0125F6  0EE1               	movlw	-31
 11464  0125F8  50E3               	movf	plusw1,w,c
 11465  0125FA  1026               	iorwf	btemp^0,w,c
 11466  0125FC  A4D8               	btfss	status,2,c
 11467  0125FE  D7BD               	goto	l12267
 11468  012600                     u11920:
 11469                           
 11470                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 11471                           ;stkvar	_fmt @ sp[(-32)+-4]
 11472  012600  0EDC               	movlw	-36
 11473  012602  006F FF8F FFD9     	movff	plusw1,fsr2l
 11474  012608  0EDD               	movlw	-35
 11475  01260A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11476  012610  006F FF7B FFF6     	movff	postinc2,tblptrl
 11477  012616  006F FF77 FFF7     	movff	postdec2,tblptrh
 11478  01261C                     	if	0	;tblptru may be non-zero
 11479  01261C                     	endif
 11480  01261C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11481  01261C  0E00               	movlw	low (__mediumconst shr (0+16))
 11482  01261E  6EF8               	movwf	tblptru,c
 11483  012620                     	endif
 11484  012620  0008               	tblrd		*
 11485  012622  50F5               	movf	tablat,w,c
 11486  012624  6EE6               	movwf	postinc1,c
 11487  012626  0E00               	movlw	0
 11488  012628  6EE6               	movwf	postinc1,c
 11489  01262A  ECC4  F0D2         	call	_tolower	;wreg free
 11490                           
 11491                           ;stkvar	_ct @ sp[(-32)+26]
 11492  01262E  0EFA               	movlw	-6
 11493  012630  0060  F09B  FFE3   	movff	btemp,plusw1
 11494                           
 11495                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 11496                           ;stkvar	_ct @ sp[(-32)+26]
 11497  012636  0EFA               	movlw	-6
 11498  012638  50E3               	movf	plusw1,w,c
 11499  01263A  B4D8               	btfsc	status,2,c
 11500  01263C  D05B               	goto	l12285
 11501                           
 11502                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 11503                           ;stkvar	_ct @ sp[(-32)+26]
 11504  01263E  0EFB               	movlw	251
 11505  012640  24E1               	addwf	fsr1l,w,c
 11506  012642  6ED9               	movwf	fsr2l,c
 11507  012644  0EFF               	movlw	255
 11508  012646  20E2               	addwfc	fsr1h,w,c
 11509  012648  6EDA               	movwf	fsr2h,c
 11510                           
 11511                           ;stkvar	_fmt @ sp[(-32)+-4]
 11512  01264A  0EDC               	movlw	-36
 11513  01264C  006F FF8F FFE9     	movff	plusw1,fsr0l
 11514  012652  0EDD               	movlw	-35
 11515  012654  006F FF8F FFEA     	movff	plusw1,fsr0h
 11516  01265A  006F FFB8  F030    	movff	postinc0,btemp+10
 11517  012660  006F FFB4  F031    	movff	postdec0,btemp+11
 11518  012666  0E01               	movlw	1
 11519  012668  2630               	addwf	(btemp+10)^0,f,c
 11520  01266A  0E00               	movlw	0
 11521  01266C  2231               	addwfc	(btemp+11)^0,f,c
 11522  01266E  0060  F0C3  FFF6   	movff	btemp+10,tblptrl
 11523  012674  0060  F0C7  FFF7   	movff	btemp+11,tblptrh
 11524  01267A                     	if	0	;tblptru may be non-zero
 11525  01267A                     	endif
 11526  01267A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11527  01267A  0E00               	movlw	low (__mediumconst shr (0+16))
 11528  01267C  6EF8               	movwf	tblptru,c
 11529  01267E                     	endif
 11530  01267E  0008               	tblrd		*
 11531  012680  50F5               	movf	tablat,w,c
 11532  012682  6EE6               	movwf	postinc1,c
 11533  012684  0E00               	movlw	0
 11534  012686  6EE6               	movwf	postinc1,c
 11535  012688  ECC4  F0D2         	call	_tolower	;wreg free
 11536  01268C  5026               	movf	btemp^0,w,c
 11537  01268E  6EDF               	movwf	indf2,c
 11538                           
 11539                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 11540                           ;stkvar	_ct @ sp[(-32)+26]
 11541  012690  0EFB               	movlw	251
 11542  012692  24E1               	addwf	fsr1l,w,c
 11543  012694  6ED9               	movwf	fsr2l,c
 11544  012696  0EFF               	movlw	255
 11545  012698  20E2               	addwfc	fsr1h,w,c
 11546  01269A  6EDA               	movwf	fsr2h,c
 11547  01269C  50DF               	movf	indf2,w,c
 11548  01269E  B4D8               	btfsc	status,2,c
 11549  0126A0  D029               	goto	l12285
 11550                           
 11551                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 11552                           ;stkvar	_ct @ sp[(-32)+26]
 11553  0126A2  0EFC               	movlw	252
 11554  0126A4  24E1               	addwf	fsr1l,w,c
 11555  0126A6  6ED9               	movwf	fsr2l,c
 11556  0126A8  0EFF               	movlw	255
 11557  0126AA  20E2               	addwfc	fsr1h,w,c
 11558  0126AC  6EDA               	movwf	fsr2h,c
 11559                           
 11560                           ;stkvar	_fmt @ sp[(-32)+-4]
 11561  0126AE  0EDC               	movlw	-36
 11562  0126B0  006F FF8F FFE9     	movff	plusw1,fsr0l
 11563  0126B6  0EDD               	movlw	-35
 11564  0126B8  006F FF8F FFEA     	movff	plusw1,fsr0h
 11565  0126BE  006F FFB8  F030    	movff	postinc0,btemp+10
 11566  0126C4  006F FFB4  F031    	movff	postdec0,btemp+11
 11567  0126CA  0E02               	movlw	2
 11568  0126CC  2630               	addwf	(btemp+10)^0,f,c
 11569  0126CE  0E00               	movlw	0
 11570  0126D0  2231               	addwfc	(btemp+11)^0,f,c
 11571  0126D2  0060  F0C3  FFF6   	movff	btemp+10,tblptrl
 11572  0126D8  0060  F0C7  FFF7   	movff	btemp+11,tblptrh
 11573  0126DE                     	if	0	;tblptru may be non-zero
 11574  0126DE                     	endif
 11575  0126DE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11576  0126DE  0E00               	movlw	low (__mediumconst shr (0+16))
 11577  0126E0  6EF8               	movwf	tblptru,c
 11578  0126E2                     	endif
 11579  0126E2  0008               	tblrd		*
 11580  0126E4  50F5               	movf	tablat,w,c
 11581  0126E6  6EE6               	movwf	postinc1,c
 11582  0126E8  0E00               	movlw	0
 11583  0126EA  6EE6               	movwf	postinc1,c
 11584  0126EC  ECC4  F0D2         	call	_tolower	;wreg free
 11585  0126F0  5026               	movf	btemp^0,w,c
 11586  0126F2  6EDF               	movwf	indf2,c
 11587  0126F4                     l12285:
 11588                           
 11589                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 11590                           ;stkvar	_fmt @ sp[(-32)+-4]
 11591  0126F4  0EDC               	movlw	-36
 11592  0126F6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11593  0126FC  0EDD               	movlw	-35
 11594  0126FE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11595  012704  006F FF7B FFF6     	movff	postinc2,tblptrl
 11596  01270A  006F FF77 FFF7     	movff	postdec2,tblptrh
 11597  012710                     	if	0	;tblptru may be non-zero
 11598  012710                     	endif
 11599  012710                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11600  012710  0E00               	movlw	low (__mediumconst shr (0+16))
 11601  012712  6EF8               	movwf	tblptru,c
 11602  012714                     	endif
 11603  012714  0008               	tblrd		*
 11604  012716  50F5               	movf	tablat,w,c
 11605  012718  0A63               	xorlw	99
 11606  01271A  A4D8               	btfss	status,2,c
 11607  01271C  D037               	goto	l12295
 11608                           
 11609                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 11610                           ;stkvar	_fmt @ sp[(-32)+-4]
 11611  01271E  0EDC               	movlw	-36
 11612  012720  006F FF8F FFD9     	movff	plusw1,fsr2l
 11613  012726  0EDD               	movlw	-35
 11614  012728  006F FF8F FFDA     	movff	plusw1,fsr2h
 11615  01272E  2ADE               	incf	postinc2,f,c
 11616  012730  0E00               	movlw	0
 11617  012732  22DD               	addwfc	postdec2,f,c
 11618                           
 11619                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 11620                           ;stkvar	_ap @ sp[(-32)+-6]
 11621  012734  0EDA               	movlw	-38
 11622  012736  006F FF8F FFD9     	movff	plusw1,fsr2l
 11623  01273C  0EDB               	movlw	-37
 11624  01273E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11625  012744  0E02               	movlw	2
 11626  012746  5EDE               	subwf	postinc2,f,c
 11627  012748  0E00               	movlw	0
 11628  01274A  5ADD               	subwfb	postdec2,f,c
 11629  01274C  006F FF78  F030    	movff	postinc2,btemp+10
 11630  012752  006F FF74  F031    	movff	postdec2,btemp+11
 11631  012758  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 11632  01275E  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 11633  012764  50DF               	movf	indf2,w,c
 11634  012766  6E31               	movwf	(btemp+11)^0,c
 11635                           
 11636                           ;stkvar	_c @ sp[(-32)+31]
 11637  012768  0EFF               	movlw	-1
 11638  01276A  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 11639                           
 11640                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 11641                           ;stkvar	_c @ sp[(-32)+31]
 11642  012770  0EFF               	movlw	-1
 11643  012772  50E3               	movf	plusw1,w,c
 11644  012774  6EE6               	movwf	postinc1,c
 11645                           
 11646                           ;stkvar	_fp @ sp[(-33)+-2]
 11647  012776  0EDD               	movlw	-35
 11648  012778  006F FF8F FFE6     	movff	plusw1,postinc1
 11649  01277E  006F FF8F FFE6     	movff	plusw1,postinc1
 11650  012784  EC3E  F0D2         	call	_ctoa	;wreg free
 11651  012788  EF3F  F099         	goto	l2363
 11652  01278C                     l12295:
 11653                           
 11654                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 11655                           ;stkvar	_fmt @ sp[(-32)+-4]
 11656  01278C  0EDC               	movlw	-36
 11657  01278E  006F FF8F FFD9     	movff	plusw1,fsr2l
 11658  012794  0EDD               	movlw	-35
 11659  012796  006F FF8F FFDA     	movff	plusw1,fsr2h
 11660  01279C  006F FF7B FFF6     	movff	postinc2,tblptrl
 11661  0127A2  006F FF77 FFF7     	movff	postdec2,tblptrh
 11662  0127A8                     	if	0	;tblptru may be non-zero
 11663  0127A8                     	endif
 11664  0127A8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11665  0127A8  0E00               	movlw	low (__mediumconst shr (0+16))
 11666  0127AA  6EF8               	movwf	tblptru,c
 11667  0127AC                     	endif
 11668  0127AC  0008               	tblrd		*
 11669  0127AE  50F5               	movf	tablat,w,c
 11670  0127B0  0A64               	xorlw	100
 11671  0127B2  B4D8               	btfsc	status,2,c
 11672  0127B4  D015               	goto	u11970
 11673                           
 11674                           ;stkvar	_fmt @ sp[(-32)+-4]
 11675  0127B6  0EDC               	movlw	-36
 11676  0127B8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11677  0127BE  0EDD               	movlw	-35
 11678  0127C0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11679  0127C6  006F FF7B FFF6     	movff	postinc2,tblptrl
 11680  0127CC  006F FF77 FFF7     	movff	postdec2,tblptrh
 11681  0127D2                     	if	0	;tblptru may be non-zero
 11682  0127D2                     	endif
 11683  0127D2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11684  0127D2  0E00               	movlw	low (__mediumconst shr (0+16))
 11685  0127D4  6EF8               	movwf	tblptru,c
 11686  0127D6                     	endif
 11687  0127D6  0008               	tblrd		*
 11688  0127D8  50F5               	movf	tablat,w,c
 11689  0127DA  0A69               	xorlw	105
 11690  0127DC  A4D8               	btfss	status,2,c
 11691  0127DE  D076               	goto	l12307
 11692  0127E0                     u11970:
 11693                           
 11694                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 11695                           ;stkvar	_fmt @ sp[(-32)+-4]
 11696  0127E0  0EDC               	movlw	-36
 11697  0127E2  006F FF8F FFD9     	movff	plusw1,fsr2l
 11698  0127E8  0EDD               	movlw	-35
 11699  0127EA  006F FF8F FFDA     	movff	plusw1,fsr2h
 11700  0127F0  2ADE               	incf	postinc2,f,c
 11701  0127F2  0E00               	movlw	0
 11702  0127F4  22DD               	addwfc	postdec2,f,c
 11703                           
 11704                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 11705                           ;stkvar	_ap @ sp[(-32)+-6]
 11706  0127F6  0EDA               	movlw	-38
 11707  0127F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11708  0127FE  0EDB               	movlw	-37
 11709  012800  006F FF8F FFDA     	movff	plusw1,fsr2h
 11710  012806  0E02               	movlw	2
 11711  012808  5EDE               	subwf	postinc2,f,c
 11712  01280A  0E00               	movlw	0
 11713  01280C  5ADD               	subwfb	postdec2,f,c
 11714  01280E  006F FF78  F030    	movff	postinc2,btemp+10
 11715  012814  006F FF74  F031    	movff	postdec2,btemp+11
 11716  01281A  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 11717  012820  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 11718  012826  006F FF78  F030    	movff	postinc2,btemp+10
 11719  01282C  006F FF74  F031    	movff	postdec2,btemp+11
 11720                           
 11721                           ;stkvar	_ll @ sp[(-32)+14]
 11722  012832  0EEE               	movlw	-18
 11723  012834  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 11724  01283A  0EEF               	movlw	-17
 11725  01283C  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 11726  012842  6A26               	clrf	btemp^0,c
 11727  012844  BEE3               	btfsc	plusw1,7,c
 11728  012846  6826               	setf	btemp^0,c
 11729  012848  0EF0               	movlw	-16
 11730  01284A  0060  F09B  FFE3   	movff	btemp,plusw1
 11731  012850  0EF1               	movlw	-15
 11732  012852  0060  F09B  FFE3   	movff	btemp,plusw1
 11733  012858  0EF2               	movlw	-14
 11734  01285A  0060  F09B  FFE3   	movff	btemp,plusw1
 11735  012860  0EF3               	movlw	-13
 11736  012862  0060  F09B  FFE3   	movff	btemp,plusw1
 11737  012868  0EF4               	movlw	-12
 11738  01286A  0060  F09B  FFE3   	movff	btemp,plusw1
 11739  012870  0EF5               	movlw	-11
 11740  012872  0060  F09B  FFE3   	movff	btemp,plusw1
 11741  012878                     l12303:
 11742                           
 11743                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 11744                           ;stkvar	_ll @ sp[(-32)+14]
 11745  012878  50E1               	movf	fsr1l,w,c
 11746  01287A  0FEE               	addlw	-18
 11747  01287C  6ED9               	movwf	fsr2l,c
 11748  01287E  50E2               	movf	fsr1h,w,c
 11749  012880  6EDA               	movwf	fsr2h,c
 11750  012882  0EFF               	movlw	255
 11751  012884  22DA               	addwfc	fsr2h,f,c
 11752  012886  006F FF7B FFE6     	movff	postinc2,postinc1
 11753  01288C  006F FF7B FFE6     	movff	postinc2,postinc1
 11754  012892  006F FF7B FFE6     	movff	postinc2,postinc1
 11755  012898  006F FF7B FFE6     	movff	postinc2,postinc1
 11756  01289E  006F FF7B FFE6     	movff	postinc2,postinc1
 11757  0128A4  006F FF7B FFE6     	movff	postinc2,postinc1
 11758  0128AA  006F FF7B FFE6     	movff	postinc2,postinc1
 11759  0128B0  006F FF7B FFE6     	movff	postinc2,postinc1
 11760                           
 11761                           ;stkvar	_fp @ sp[(-40)+-2]
 11762  0128B6  0ED6               	movlw	-42
 11763  0128B8  006F FF8F FFE6     	movff	plusw1,postinc1
 11764  0128BE  006F FF8F FFE6     	movff	plusw1,postinc1
 11765  0128C4  ECEB  F0A9         	call	_dtoa	;wreg free
 11766  0128C8  EF3F  F099         	goto	l2363
 11767  0128CC                     l12307:
 11768                           
 11769                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 11770  0128CC  0E02               	movlw	2
 11771  0128CE  6EE6               	movwf	postinc1,c
 11772  0128D0  0E00               	movlw	0
 11773  0128D2  6EE6               	movwf	postinc1,c
 11774  0128D4  0EEA               	movlw	low STR_74
 11775  0128D6  6EE6               	movwf	postinc1,c
 11776  0128D8  0EFF               	movlw	high STR_74
 11777  0128DA  6EE6               	movwf	postinc1,c
 11778                           
 11779                           ;stkvar	_fmt @ sp[(-36)+-4]
 11780  0128DC  0ED8               	movlw	-40
 11781  0128DE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11782  0128E4  0ED9               	movlw	-39
 11783  0128E6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11784  0128EC  006F FF78  F030    	movff	postinc2,btemp+10
 11785  0128F2  006F FF74  F031    	movff	postdec2,btemp+11
 11786  0128F8  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 11787  0128FE  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 11788  012904  ECFE  F0BA         	call	_strncmp	;wreg free
 11789  012908  5026               	movf	btemp^0,w,c
 11790  01290A  1027               	iorwf	(btemp+1)^0,w,c
 11791  01290C  B4D8               	btfsc	status,2,c
 11792  01290E  D022               	goto	u11990
 11793  012910  0E02               	movlw	2
 11794  012912  6EE6               	movwf	postinc1,c
 11795  012914  0E00               	movlw	0
 11796  012916  6EE6               	movwf	postinc1,c
 11797  012918  0EF0               	movlw	low STR_78
 11798  01291A  6EE6               	movwf	postinc1,c
 11799  01291C  0EFF               	movlw	high STR_78
 11800  01291E  6EE6               	movwf	postinc1,c
 11801                           
 11802                           ;stkvar	_fmt @ sp[(-36)+-4]
 11803  012920  0ED8               	movlw	-40
 11804  012922  006F FF8F FFD9     	movff	plusw1,fsr2l
 11805  012928  0ED9               	movlw	-39
 11806  01292A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11807  012930  006F FF78  F030    	movff	postinc2,btemp+10
 11808  012936  006F FF74  F031    	movff	postdec2,btemp+11
 11809  01293C  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 11810  012942  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 11811  012948  ECFE  F0BA         	call	_strncmp	;wreg free
 11812  01294C  5026               	movf	btemp^0,w,c
 11813  01294E  1027               	iorwf	(btemp+1)^0,w,c
 11814  012950  A4D8               	btfss	status,2,c
 11815  012952  D069               	goto	l12319
 11816  012954                     u11990:
 11817                           
 11818                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 11819                           ;stkvar	_fmt @ sp[(-32)+-4]
 11820  012954  0EDC               	movlw	-36
 11821  012956  006F FF8F FFD9     	movff	plusw1,fsr2l
 11822  01295C  0EDD               	movlw	-35
 11823  01295E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11824  012964  0E02               	movlw	2
 11825  012966  26DE               	addwf	postinc2,f,c
 11826  012968  0E00               	movlw	0
 11827  01296A  22DD               	addwfc	postdec2,f,c
 11828                           
 11829                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 11830                           ;stkvar	_ap @ sp[(-32)+-6]
 11831  01296C  0EDA               	movlw	-38
 11832  01296E  006F FF8F FFD9     	movff	plusw1,fsr2l
 11833  012974  0EDB               	movlw	-37
 11834  012976  006F FF8F FFDA     	movff	plusw1,fsr2h
 11835  01297C  0E04               	movlw	4
 11836  01297E  5EDE               	subwf	postinc2,f,c
 11837  012980  0E00               	movlw	0
 11838  012982  5ADD               	subwfb	postdec2,f,c
 11839  012984  006F FF78  F030    	movff	postinc2,btemp+10
 11840  01298A  006F FF74  F031    	movff	postdec2,btemp+11
 11841  012990  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 11842  012996  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 11843  01299C  006F FF78  F02E    	movff	postinc2,btemp+8
 11844  0129A2  006F FF78  F02F    	movff	postinc2,btemp+9
 11845  0129A8  006F FF78  F030    	movff	postinc2,btemp+10
 11846  0129AE  006F FF78  F031    	movff	postinc2,btemp+11
 11847  0129B4  0060  F0B8  F036   	movff	btemp+8,btemp+16
 11848  0129BA  0060  F0BC  F037   	movff	btemp+9,btemp+17
 11849  0129C0  0060  F0C0  F038   	movff	btemp+10,btemp+18
 11850  0129C6  0060  F0C4  F039   	movff	btemp+11,btemp+19
 11851  0129CC  6A3A               	clrf	(btemp+20)^0,c
 11852  0129CE  BE39               	btfsc	(btemp+19)^0,7,c
 11853  0129D0  683A               	setf	(btemp+20)^0,c
 11854  0129D2  0060  F0E8  F03B   	movff	btemp+20,btemp+21
 11855  0129D8  0060  F0E8  F03C   	movff	btemp+20,btemp+22
 11856  0129DE  0060  F0E8  F03D   	movff	btemp+20,btemp+23
 11857                           
 11858                           ;stkvar	_ll @ sp[(-32)+14]
 11859  0129E4  0EEE               	movlw	-18
 11860  0129E6  0060  F0DB  FFE3   	movff	btemp+16,plusw1
 11861  0129EC  0EEF               	movlw	-17
 11862  0129EE  0060  F0DF  FFE3   	movff	btemp+17,plusw1
 11863  0129F4  0EF0               	movlw	-16
 11864  0129F6  0060  F0E3  FFE3   	movff	btemp+18,plusw1
 11865  0129FC  0EF1               	movlw	-15
 11866  0129FE  0060  F0E7  FFE3   	movff	btemp+19,plusw1
 11867  012A04  0EF2               	movlw	-14
 11868  012A06  0060  F0EB  FFE3   	movff	btemp+20,plusw1
 11869  012A0C  0EF3               	movlw	-13
 11870  012A0E  0060  F0EF  FFE3   	movff	btemp+21,plusw1
 11871  012A14  0EF4               	movlw	-12
 11872  012A16  0060  F0F3  FFE3   	movff	btemp+22,plusw1
 11873  012A1C  0EF5               	movlw	-11
 11874  012A1E  0060  F0F7  FFE3   	movff	btemp+23,plusw1
 11875  012A24  D729               	goto	l12303
 11876  012A26                     l12319:
 11877                           
 11878                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 11879                           ;stkvar	_ct @ sp[(-32)+26]
 11880  012A26  0EFA               	movlw	-6
 11881  012A28  006F FF8C  F026    	movff	plusw1,btemp
 11882  012A2E  0E66               	movlw	102
 11883  012A30  1826               	xorwf	btemp^0,w,c
 11884  012A32  A4D8               	btfss	status,2,c
 11885  012A34  D06E               	goto	l12331
 11886                           
 11887                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 11888                           ;stkvar	_fmt @ sp[(-32)+-4]
 11889  012A36  0EDC               	movlw	-36
 11890  012A38  006F FF8F FFD9     	movff	plusw1,fsr2l
 11891  012A3E  0EDD               	movlw	-35
 11892  012A40  006F FF8F FFDA     	movff	plusw1,fsr2h
 11893  012A46  006F FF7B FFF6     	movff	postinc2,tblptrl
 11894  012A4C  006F FF77 FFF7     	movff	postdec2,tblptrh
 11895  012A52                     	if	0	;tblptru may be non-zero
 11896  012A52                     	endif
 11897  012A52                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11898  012A52  0E00               	movlw	low (__mediumconst shr (0+16))
 11899  012A54  6EF8               	movwf	tblptru,c
 11900  012A56                     	endif
 11901                           
 11902                           ;stkvar	_c @ sp[(-32)+31]
 11903  012A56  0008               	tblrd		*
 11904  012A58  0EFF               	movlw	-1
 11905  012A5A  006F FFD7 FFE3     	movff	tablat,plusw1
 11906                           
 11907                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 11908                           ;stkvar	_fmt @ sp[(-32)+-4]
 11909  012A60  0EDC               	movlw	-36
 11910  012A62  006F FF8F FFD9     	movff	plusw1,fsr2l
 11911  012A68  0EDD               	movlw	-35
 11912  012A6A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11913  012A70  2ADE               	incf	postinc2,f,c
 11914  012A72  0E00               	movlw	0
 11915  012A74  22DD               	addwfc	postdec2,f,c
 11916                           
 11917                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 11918                           ;stkvar	_ap @ sp[(-32)+-6]
 11919  012A76  0EDA               	movlw	-38
 11920  012A78  006F FF8F FFD9     	movff	plusw1,fsr2l
 11921  012A7E  0EDB               	movlw	-37
 11922  012A80  006F FF8F FFDA     	movff	plusw1,fsr2h
 11923  012A86  0E04               	movlw	4
 11924  012A88  5EDE               	subwf	postinc2,f,c
 11925  012A8A  0E00               	movlw	0
 11926  012A8C  5ADD               	subwfb	postdec2,f,c
 11927  012A8E  006F FF78  F030    	movff	postinc2,btemp+10
 11928  012A94  006F FF74  F031    	movff	postdec2,btemp+11
 11929  012A9A  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 11930  012AA0  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 11931  012AA6  006F FF78  F02E    	movff	postinc2,btemp+8
 11932  012AAC  006F FF78  F02F    	movff	postinc2,btemp+9
 11933  012AB2  006F FF78  F030    	movff	postinc2,btemp+10
 11934  012AB8  006F FF78  F031    	movff	postinc2,btemp+11
 11935                           
 11936                           ;stkvar	_f @ sp[(-32)+22]
 11937  012ABE  0EF6               	movlw	-10
 11938  012AC0  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 11939  012AC6  0EF7               	movlw	-9
 11940  012AC8  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 11941  012ACE  0EF8               	movlw	-8
 11942  012AD0  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 11943  012AD6  0EF9               	movlw	-7
 11944  012AD8  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 11945  012ADE                     l12327:
 11946                           
 11947                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 11948                           ;stkvar	_c @ sp[(-32)+31]
 11949  012ADE  0EFF               	movlw	-1
 11950  012AE0  50E3               	movf	plusw1,w,c
 11951  012AE2  6EE6               	movwf	postinc1,c
 11952                           
 11953                           ;stkvar	_f @ sp[(-33)+22]
 11954  012AE4  0EF5               	movlw	-11
 11955  012AE6  006F FF8F FFE6     	movff	plusw1,postinc1
 11956  012AEC  006F FF8F FFE6     	movff	plusw1,postinc1
 11957  012AF2  006F FF8F FFE6     	movff	plusw1,postinc1
 11958  012AF8  006F FF8F FFE6     	movff	plusw1,postinc1
 11959                           
 11960                           ;stkvar	_fp @ sp[(-37)+-2]
 11961  012AFE  0ED9               	movlw	-39
 11962  012B00  006F FF8F FFE6     	movff	plusw1,postinc1
 11963  012B06  006F FF8F FFE6     	movff	plusw1,postinc1
 11964  012B0C  EC00  F080         	call	_efgtoa	;wreg free
 11965  012B10  D3B6               	goto	l2363
 11966  012B12                     l12331:
 11967                           
 11968                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 11969  012B12  0E02               	movlw	2
 11970  012B14  6EE6               	movwf	postinc1,c
 11971  012B16  0E00               	movlw	0
 11972  012B18  6EE6               	movwf	postinc1,c
 11973  012B1A  0EED               	movlw	low STR_83
 11974  012B1C  6EE6               	movwf	postinc1,c
 11975  012B1E  0EFF               	movlw	high STR_83
 11976  012B20  6EE6               	movwf	postinc1,c
 11977                           
 11978                           ;stkvar	_ct @ sp[(-36)+26]
 11979  012B22  0EF6               	movlw	246
 11980  012B24  24E1               	addwf	fsr1l,w,c
 11981  012B26  6E26               	movwf	btemp^0,c
 11982  012B28  0EFF               	movlw	255
 11983  012B2A  20E2               	addwfc	fsr1h,w,c
 11984  012B2C  6E27               	movwf	(btemp+1)^0,c
 11985  012B2E  0060  F09B  FFE6   	movff	btemp,postinc1
 11986  012B34  0060  F09F  FFE6   	movff	btemp+1,postinc1
 11987  012B3A  ECFE  F0BA         	call	_strncmp	;wreg free
 11988  012B3E  5026               	movf	btemp^0,w,c
 11989  012B40  1027               	iorwf	(btemp+1)^0,w,c
 11990  012B42  A4D8               	btfss	status,2,c
 11991  012B44  D096               	goto	l12351
 11992                           
 11993                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 11994                           ;stkvar	_fmt @ sp[(-32)+-4]
 11995  012B46  0EDC               	movlw	-36
 11996  012B48  006F FF8F FFD9     	movff	plusw1,fsr2l
 11997  012B4E  0EDD               	movlw	-35
 11998  012B50  006F FF8F FFDA     	movff	plusw1,fsr2h
 11999  012B56  006F FF78  F030    	movff	postinc2,btemp+10
 12000  012B5C  006F FF74  F031    	movff	postdec2,btemp+11
 12001  012B62  0E01               	movlw	1
 12002  012B64  2630               	addwf	(btemp+10)^0,f,c
 12003  012B66  0E00               	movlw	0
 12004  012B68  2231               	addwfc	(btemp+11)^0,f,c
 12005  012B6A  0060  F0C3  FFF6   	movff	btemp+10,tblptrl
 12006  012B70  0060  F0C7  FFF7   	movff	btemp+11,tblptrh
 12007  012B76                     	if	0	;tblptru may be non-zero
 12008  012B76                     	endif
 12009  012B76                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12010  012B76  0E00               	movlw	low (__mediumconst shr (0+16))
 12011  012B78  6EF8               	movwf	tblptru,c
 12012  012B7A                     	endif
 12013                           
 12014                           ;stkvar	_c @ sp[(-32)+31]
 12015  012B7A  0008               	tblrd		*
 12016  012B7C  0EFF               	movlw	-1
 12017  012B7E  006F FFD7 FFE3     	movff	tablat,plusw1
 12018  012B84  0EBF               	movlw	191
 12019  012B86  6E30               	movwf	(btemp+10)^0,c
 12020  012B88  0EFF               	movlw	255
 12021  012B8A  6E31               	movwf	(btemp+11)^0,c
 12022                           
 12023                           ;stkvar	_fmt @ sp[(-32)+-4]
 12024  012B8C  0EDC               	movlw	-36
 12025  012B8E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12026  012B94  0EDD               	movlw	-35
 12027  012B96  006F FF8F FFDA     	movff	plusw1,fsr2h
 12028  012B9C  006F FF7B FFF6     	movff	postinc2,tblptrl
 12029  012BA2  006F FF77 FFF7     	movff	postdec2,tblptrh
 12030  012BA8                     	if	0	;tblptru may be non-zero
 12031  012BA8                     	endif
 12032  012BA8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12033  012BA8  0E00               	movlw	low (__mediumconst shr (0+16))
 12034  012BAA  6EF8               	movwf	tblptru,c
 12035  012BAC                     	endif
 12036  012BAC  0008               	tblrd		*
 12037  012BAE  50F5               	movf	tablat,w,c
 12038  012BB0  6E2E               	movwf	(btemp+8)^0,c
 12039  012BB2  6A2F               	clrf	(btemp+9)^0,c
 12040  012BB4  5030               	movf	(btemp+10)^0,w,c
 12041  012BB6  262E               	addwf	(btemp+8)^0,f,c
 12042  012BB8  5031               	movf	(btemp+11)^0,w,c
 12043  012BBA  222F               	addwfc	(btemp+9)^0,f,c
 12044  012BBC  502F               	movf	(btemp+9)^0,w,c
 12045  012BBE  E106               	bnz	u12020
 12046  012BC0  0E1A               	movlw	26
 12047  012BC2  5C2E               	subwf	(btemp+8)^0,w,c
 12048  012BC4  B0D8               	btfsc	status,0,c
 12049  012BC6  D002               	goto	u12020
 12050  012BC8  0E01               	movlw	1
 12051  012BCA  D001               	goto	u12030
 12052  012BCC                     u12020:
 12053  012BCC  0E00               	movlw	0
 12054  012BCE                     u12030:
 12055  012BCE  6E30               	movwf	(btemp+10)^0,c
 12056  012BD0  6A31               	clrf	(btemp+11)^0,c
 12057                           
 12058                           ;stkvar	_vfpfcnvrt$5486 @ sp[(-32)+2]
 12059  012BD2  0EE2               	movlw	-30
 12060  012BD4  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 12061  012BDA  0EE3               	movlw	-29
 12062  012BDC  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 12063                           
 12064                           ;stkvar	_vfpfcnvrt$5486 @ sp[(-32)+2]
 12065  012BE2  0EE2               	movlw	-30
 12066  012BE4  006F FF8C  F026    	movff	plusw1,btemp
 12067  012BEA  0EE3               	movlw	-29
 12068  012BEC  50E3               	movf	plusw1,w,c
 12069  012BEE  1026               	iorwf	btemp^0,w,c
 12070                           
 12071                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 12072                           ;stkvar	_ap @ sp[(-32)+-6]
 12073                           
 12074                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 12075                           
 12076                           ;stkvar	_f @ sp[(-32)+22]
 12077                           
 12078                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 12079                           ;stkvar	_ap @ sp[(-32)+-6]
 12080  012BF0  0EDA               	movlw	-38
 12081  012BF2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12082  012BF8  0EDB               	movlw	-37
 12083  012BFA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12084  012C00  0E04               	movlw	4
 12085  012C02  5EDE               	subwf	postinc2,f,c
 12086  012C04  0E00               	movlw	0
 12087  012C06  5ADD               	subwfb	postdec2,f,c
 12088  012C08  006F FF78  F030    	movff	postinc2,btemp+10
 12089  012C0E  006F FF74  F031    	movff	postdec2,btemp+11
 12090  012C14  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 12091  012C1A  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 12092  012C20  006F FF78  F02E    	movff	postinc2,btemp+8
 12093  012C26  006F FF78  F02F    	movff	postinc2,btemp+9
 12094  012C2C  006F FF78  F030    	movff	postinc2,btemp+10
 12095  012C32  006F FF78  F031    	movff	postinc2,btemp+11
 12096                           
 12097                           ;stkvar	_f @ sp[(-32)+22]
 12098  012C38  0EF6               	movlw	-10
 12099  012C3A  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 12100  012C40  0EF7               	movlw	-9
 12101  012C42  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 12102  012C48  0EF8               	movlw	-8
 12103  012C4A  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 12104  012C50  0EF9               	movlw	-7
 12105  012C52  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 12106                           
 12107                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 12108                           ;stkvar	_fmt @ sp[(-32)+-4]
 12109  012C58  0EDC               	movlw	-36
 12110  012C5A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12111  012C60  0EDD               	movlw	-35
 12112  012C62  006F FF8F FFDA     	movff	plusw1,fsr2h
 12113  012C68  0E02               	movlw	2
 12114  012C6A  26DE               	addwf	postinc2,f,c
 12115  012C6C  0E00               	movlw	0
 12116  012C6E  22DD               	addwfc	postdec2,f,c
 12117  012C70  D736               	goto	l12327
 12118  012C72                     l12351:
 12119                           
 12120                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 12121                           ;stkvar	_fmt @ sp[(-32)+-4]
 12122  012C72  0EDC               	movlw	-36
 12123  012C74  006F FF8F FFD9     	movff	plusw1,fsr2l
 12124  012C7A  0EDD               	movlw	-35
 12125  012C7C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12126  012C82  006F FF7B FFF6     	movff	postinc2,tblptrl
 12127  012C88  006F FF77 FFF7     	movff	postdec2,tblptrh
 12128  012C8E                     	if	0	;tblptru may be non-zero
 12129  012C8E                     	endif
 12130  012C8E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12131  012C8E  0E00               	movlw	low (__mediumconst shr (0+16))
 12132  012C90  6EF8               	movwf	tblptru,c
 12133  012C92                     	endif
 12134  012C92  0008               	tblrd		*
 12135  012C94  50F5               	movf	tablat,w,c
 12136  012C96  0A73               	xorlw	115
 12137  012C98  A4D8               	btfss	status,2,c
 12138  012C9A  D042               	goto	l12361
 12139                           
 12140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 12141                           ;stkvar	_fmt @ sp[(-32)+-4]
 12142  012C9C  0EDC               	movlw	-36
 12143  012C9E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12144  012CA4  0EDD               	movlw	-35
 12145  012CA6  006F FF8F FFDA     	movff	plusw1,fsr2h
 12146  012CAC  2ADE               	incf	postinc2,f,c
 12147  012CAE  0E00               	movlw	0
 12148  012CB0  22DD               	addwfc	postdec2,f,c
 12149                           
 12150                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 12151                           ;stkvar	_ap @ sp[(-32)+-6]
 12152  012CB2  0EDA               	movlw	-38
 12153  012CB4  006F FF8F FFD9     	movff	plusw1,fsr2l
 12154  012CBA  0EDB               	movlw	-37
 12155  012CBC  006F FF8F FFDA     	movff	plusw1,fsr2h
 12156  012CC2  0E02               	movlw	2
 12157  012CC4  5EDE               	subwf	postinc2,f,c
 12158  012CC6  0E00               	movlw	0
 12159  012CC8  5ADD               	subwfb	postdec2,f,c
 12160  012CCA  006F FF78  F030    	movff	postinc2,btemp+10
 12161  012CD0  006F FF74  F031    	movff	postdec2,btemp+11
 12162  012CD6  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 12163  012CDC  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 12164  012CE2  006F FF78  F030    	movff	postinc2,btemp+10
 12165  012CE8  006F FF74  F031    	movff	postdec2,btemp+11
 12166                           
 12167                           ;stkvar	_cp @ sp[(-32)+29]
 12168  012CEE  0EFE               	movlw	-2
 12169  012CF0  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 12170  012CF6  0EFD               	movlw	-3
 12171  012CF8  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 12172                           
 12173                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 12174                           ;stkvar	_cp @ sp[(-32)+29]
 12175  012CFE  0EFD               	movlw	-3
 12176  012D00  006F FF8F FFE6     	movff	plusw1,postinc1
 12177  012D06  006F FF8F FFE6     	movff	plusw1,postinc1
 12178                           
 12179                           ;stkvar	_fp @ sp[(-34)+-2]
 12180  012D0C  0EDC               	movlw	-36
 12181  012D0E  006F FF8F FFE6     	movff	plusw1,postinc1
 12182  012D14  006F FF8F FFE6     	movff	plusw1,postinc1
 12183  012D1A  EC05  F0B6         	call	_stoa	;wreg free
 12184  012D1E  D2AF               	goto	l2363
 12185  012D20                     l12361:
 12186                           
 12187                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 12188                           ;stkvar	_fmt @ sp[(-32)+-4]
 12189  012D20  0EDC               	movlw	-36
 12190  012D22  006F FF8F FFD9     	movff	plusw1,fsr2l
 12191  012D28  0EDD               	movlw	-35
 12192  012D2A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12193  012D30  006F FF7B FFF6     	movff	postinc2,tblptrl
 12194  012D36  006F FF77 FFF7     	movff	postdec2,tblptrh
 12195  012D3C                     	if	0	;tblptru may be non-zero
 12196  012D3C                     	endif
 12197  012D3C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12198  012D3C  0E00               	movlw	low (__mediumconst shr (0+16))
 12199  012D3E  6EF8               	movwf	tblptru,c
 12200  012D40                     	endif
 12201  012D40  0008               	tblrd		*
 12202  012D42  50F5               	movf	tablat,w,c
 12203  012D44  0A75               	xorlw	117
 12204  012D46  A4D8               	btfss	status,2,c
 12205  012D48  D07C               	goto	l12371
 12206                           
 12207                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 12208                           ;stkvar	_fmt @ sp[(-32)+-4]
 12209  012D4A  0EDC               	movlw	-36
 12210  012D4C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12211  012D52  0EDD               	movlw	-35
 12212  012D54  006F FF8F FFDA     	movff	plusw1,fsr2h
 12213  012D5A  2ADE               	incf	postinc2,f,c
 12214  012D5C  0E00               	movlw	0
 12215  012D5E  22DD               	addwfc	postdec2,f,c
 12216                           
 12217                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 12218                           ;stkvar	_ap @ sp[(-32)+-6]
 12219  012D60  0EDA               	movlw	-38
 12220  012D62  006F FF8F FFD9     	movff	plusw1,fsr2l
 12221  012D68  0EDB               	movlw	-37
 12222  012D6A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12223  012D70  0E02               	movlw	2
 12224  012D72  5EDE               	subwf	postinc2,f,c
 12225  012D74  0E00               	movlw	0
 12226  012D76  5ADD               	subwfb	postdec2,f,c
 12227  012D78  006F FF78  F030    	movff	postinc2,btemp+10
 12228  012D7E  006F FF74  F031    	movff	postdec2,btemp+11
 12229  012D84  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 12230  012D8A  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 12231  012D90  006F FF78  F030    	movff	postinc2,btemp+10
 12232  012D96  006F FF74  F031    	movff	postdec2,btemp+11
 12233  012D9C  5030               	movf	(btemp+10)^0,w,c
 12234  012D9E  6E36               	movwf	(btemp+16)^0,c
 12235  012DA0  5031               	movf	(btemp+11)^0,w,c
 12236  012DA2  6E37               	movwf	(btemp+17)^0,c
 12237  012DA4  6A38               	clrf	(btemp+18)^0,c
 12238  012DA6  6A39               	clrf	(btemp+19)^0,c
 12239  012DA8  6A3A               	clrf	(btemp+20)^0,c
 12240  012DAA  6A3B               	clrf	(btemp+21)^0,c
 12241  012DAC  6A3C               	clrf	(btemp+22)^0,c
 12242  012DAE  6A3D               	clrf	(btemp+23)^0,c
 12243                           
 12244                           ;stkvar	_llu @ sp[(-32)+6]
 12245  012DB0  0EE6               	movlw	-26
 12246  012DB2  0060  F0DB  FFE3   	movff	btemp+16,plusw1
 12247  012DB8  0EE7               	movlw	-25
 12248  012DBA  0060  F0DF  FFE3   	movff	btemp+17,plusw1
 12249  012DC0  0EE8               	movlw	-24
 12250  012DC2  0060  F0E3  FFE3   	movff	btemp+18,plusw1
 12251  012DC8  0EE9               	movlw	-23
 12252  012DCA  0060  F0E7  FFE3   	movff	btemp+19,plusw1
 12253  012DD0  0EEA               	movlw	-22
 12254  012DD2  0060  F0EB  FFE3   	movff	btemp+20,plusw1
 12255  012DD8  0EEB               	movlw	-21
 12256  012DDA  0060  F0EF  FFE3   	movff	btemp+21,plusw1
 12257  012DE0  0EEC               	movlw	-20
 12258  012DE2  0060  F0F3  FFE3   	movff	btemp+22,plusw1
 12259  012DE8  0EED               	movlw	-19
 12260  012DEA  0060  F0F7  FFE3   	movff	btemp+23,plusw1
 12261                           
 12262                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 12263                           ;stkvar	_llu @ sp[(-32)+6]
 12264  012DF0  50E1               	movf	fsr1l,w,c
 12265  012DF2  0FE6               	addlw	-26
 12266  012DF4  6ED9               	movwf	fsr2l,c
 12267  012DF6  50E2               	movf	fsr1h,w,c
 12268  012DF8  6EDA               	movwf	fsr2h,c
 12269  012DFA  0EFF               	movlw	255
 12270  012DFC  22DA               	addwfc	fsr2h,f,c
 12271  012DFE  006F FF7B FFE6     	movff	postinc2,postinc1
 12272  012E04  006F FF7B FFE6     	movff	postinc2,postinc1
 12273  012E0A  006F FF7B FFE6     	movff	postinc2,postinc1
 12274  012E10  006F FF7B FFE6     	movff	postinc2,postinc1
 12275  012E16  006F FF7B FFE6     	movff	postinc2,postinc1
 12276  012E1C  006F FF7B FFE6     	movff	postinc2,postinc1
 12277  012E22  006F FF7B FFE6     	movff	postinc2,postinc1
 12278  012E28  006F FF7B FFE6     	movff	postinc2,postinc1
 12279                           
 12280                           ;stkvar	_fp @ sp[(-40)+-2]
 12281  012E2E  0ED6               	movlw	-42
 12282  012E30  006F FF8F FFE6     	movff	plusw1,postinc1
 12283  012E36  006F FF8F FFE6     	movff	plusw1,postinc1
 12284  012E3C  EC8F  F0B1         	call	_utoa	;wreg free
 12285  012E40  D21E               	goto	l2363
 12286  012E42                     l12371:
 12287                           
 12288                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 12289  012E42  0E02               	movlw	2
 12290  012E44  6EE6               	movwf	postinc1,c
 12291  012E46  0E00               	movlw	0
 12292  012E48  6EE6               	movwf	postinc1,c
 12293  012E4A  0EF3               	movlw	low STR_88
 12294  012E4C  6EE6               	movwf	postinc1,c
 12295  012E4E  0EFF               	movlw	high STR_88
 12296  012E50  6EE6               	movwf	postinc1,c
 12297                           
 12298                           ;stkvar	_fmt @ sp[(-36)+-4]
 12299  012E52  0ED8               	movlw	-40
 12300  012E54  006F FF8F FFD9     	movff	plusw1,fsr2l
 12301  012E5A  0ED9               	movlw	-39
 12302  012E5C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12303  012E62  006F FF78  F030    	movff	postinc2,btemp+10
 12304  012E68  006F FF74  F031    	movff	postdec2,btemp+11
 12305  012E6E  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 12306  012E74  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 12307  012E7A  ECFE  F0BA         	call	_strncmp	;wreg free
 12308  012E7E  5026               	movf	btemp^0,w,c
 12309  012E80  1027               	iorwf	(btemp+1)^0,w,c
 12310  012E82  A4D8               	btfss	status,2,c
 12311  012E84  D039               	goto	l12381
 12312                           
 12313                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 12314                           ;stkvar	_fmt @ sp[(-32)+-4]
 12315  012E86  0EDC               	movlw	-36
 12316  012E88  006F FF8F FFD9     	movff	plusw1,fsr2l
 12317  012E8E  0EDD               	movlw	-35
 12318  012E90  006F FF8F FFDA     	movff	plusw1,fsr2h
 12319  012E96  0E02               	movlw	2
 12320  012E98  26DE               	addwf	postinc2,f,c
 12321  012E9A  0E00               	movlw	0
 12322  012E9C  22DD               	addwfc	postdec2,f,c
 12323                           
 12324                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 12325                           ;stkvar	_ap @ sp[(-32)+-6]
 12326  012E9E  0EDA               	movlw	-38
 12327  012EA0  006F FF8F FFD9     	movff	plusw1,fsr2l
 12328  012EA6  0EDB               	movlw	-37
 12329  012EA8  006F FF8F FFDA     	movff	plusw1,fsr2h
 12330  012EAE  0E04               	movlw	4
 12331  012EB0  5EDE               	subwf	postinc2,f,c
 12332  012EB2  0E00               	movlw	0
 12333  012EB4  5ADD               	subwfb	postdec2,f,c
 12334  012EB6  006F FF78  F030    	movff	postinc2,btemp+10
 12335  012EBC  006F FF74  F031    	movff	postdec2,btemp+11
 12336  012EC2  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 12337  012EC8  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 12338  012ECE  006F FF78  F02E    	movff	postinc2,btemp+8
 12339  012ED4  006F FF78  F02F    	movff	postinc2,btemp+9
 12340  012EDA  006F FF78  F030    	movff	postinc2,btemp+10
 12341  012EE0  006F FF78  F031    	movff	postinc2,btemp+11
 12342  012EE6  502E               	movf	(btemp+8)^0,w,c
 12343  012EE8  6E36               	movwf	(btemp+16)^0,c
 12344  012EEA  502F               	movf	(btemp+9)^0,w,c
 12345  012EEC  6E37               	movwf	(btemp+17)^0,c
 12346  012EEE  5030               	movf	(btemp+10)^0,w,c
 12347  012EF0  6E38               	movwf	(btemp+18)^0,c
 12348  012EF2  5031               	movf	(btemp+11)^0,w,c
 12349  012EF4  6E39               	movwf	(btemp+19)^0,c
 12350  012EF6  D758               	goto	L10
 12351  012EF8                     l12381:
 12352                           
 12353                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 12354                           ;stkvar	_fmt @ sp[(-32)+-4]
 12355  012EF8  0EDC               	movlw	-36
 12356  012EFA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12357  012F00  0EDD               	movlw	-35
 12358  012F02  006F FF8F FFDA     	movff	plusw1,fsr2h
 12359  012F08  006F FF7B FFF6     	movff	postinc2,tblptrl
 12360  012F0E  006F FF77 FFF7     	movff	postdec2,tblptrh
 12361  012F14                     	if	0	;tblptru may be non-zero
 12362  012F14                     	endif
 12363  012F14                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12364  012F14  0E00               	movlw	low (__mediumconst shr (0+16))
 12365  012F16  6EF8               	movwf	tblptru,c
 12366  012F18                     	endif
 12367  012F18  0008               	tblrd		*
 12368  012F1A  50F5               	movf	tablat,w,c
 12369  012F1C  0A78               	xorlw	120
 12370  012F1E  B4D8               	btfsc	status,2,c
 12371  012F20  D015               	goto	u12090
 12372                           
 12373                           ;stkvar	_fmt @ sp[(-32)+-4]
 12374  012F22  0EDC               	movlw	-36
 12375  012F24  006F FF8F FFD9     	movff	plusw1,fsr2l
 12376  012F2A  0EDD               	movlw	-35
 12377  012F2C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12378  012F32  006F FF7B FFF6     	movff	postinc2,tblptrl
 12379  012F38  006F FF77 FFF7     	movff	postdec2,tblptrh
 12380  012F3E                     	if	0	;tblptru may be non-zero
 12381  012F3E                     	endif
 12382  012F3E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12383  012F3E  0E00               	movlw	low (__mediumconst shr (0+16))
 12384  012F40  6EF8               	movwf	tblptru,c
 12385  012F42                     	endif
 12386  012F42  0008               	tblrd		*
 12387  012F44  50F5               	movf	tablat,w,c
 12388  012F46  0A58               	xorlw	88
 12389  012F48  A4D8               	btfss	status,2,c
 12390  012F4A  D094               	goto	l12395
 12391  012F4C                     u12090:
 12392                           
 12393                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 12394                           ;stkvar	_fmt @ sp[(-32)+-4]
 12395  012F4C  0EDC               	movlw	-36
 12396  012F4E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12397  012F54  0EDD               	movlw	-35
 12398  012F56  006F FF8F FFDA     	movff	plusw1,fsr2h
 12399  012F5C  006F FF7B FFF6     	movff	postinc2,tblptrl
 12400  012F62  006F FF77 FFF7     	movff	postdec2,tblptrh
 12401  012F68                     	if	0	;tblptru may be non-zero
 12402  012F68                     	endif
 12403  012F68                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12404  012F68  0E00               	movlw	low (__mediumconst shr (0+16))
 12405  012F6A  6EF8               	movwf	tblptru,c
 12406  012F6C                     	endif
 12407                           
 12408                           ;stkvar	_c @ sp[(-32)+31]
 12409  012F6C  0008               	tblrd		*
 12410  012F6E  0EFF               	movlw	-1
 12411  012F70  006F FFD7 FFE3     	movff	tablat,plusw1
 12412                           
 12413                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 12414                           ;stkvar	_fmt @ sp[(-32)+-4]
 12415  012F76  0EDC               	movlw	-36
 12416  012F78  006F FF8F FFD9     	movff	plusw1,fsr2l
 12417  012F7E  0EDD               	movlw	-35
 12418  012F80  006F FF8F FFDA     	movff	plusw1,fsr2h
 12419  012F86  2ADE               	incf	postinc2,f,c
 12420  012F88  0E00               	movlw	0
 12421  012F8A  22DD               	addwfc	postdec2,f,c
 12422                           
 12423                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 12424                           ;stkvar	_ap @ sp[(-32)+-6]
 12425  012F8C  0EDA               	movlw	-38
 12426  012F8E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12427  012F94  0EDB               	movlw	-37
 12428  012F96  006F FF8F FFDA     	movff	plusw1,fsr2h
 12429  012F9C  0E02               	movlw	2
 12430  012F9E  5EDE               	subwf	postinc2,f,c
 12431  012FA0  0E00               	movlw	0
 12432  012FA2  5ADD               	subwfb	postdec2,f,c
 12433  012FA4  006F FF78  F030    	movff	postinc2,btemp+10
 12434  012FAA  006F FF74  F031    	movff	postdec2,btemp+11
 12435  012FB0  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 12436  012FB6  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 12437  012FBC  006F FF78  F030    	movff	postinc2,btemp+10
 12438  012FC2  006F FF74  F031    	movff	postdec2,btemp+11
 12439  012FC8  5030               	movf	(btemp+10)^0,w,c
 12440  012FCA  6E36               	movwf	(btemp+16)^0,c
 12441  012FCC  5031               	movf	(btemp+11)^0,w,c
 12442  012FCE  6E37               	movwf	(btemp+17)^0,c
 12443  012FD0  6A38               	clrf	(btemp+18)^0,c
 12444  012FD2  6A39               	clrf	(btemp+19)^0,c
 12445  012FD4  6A3A               	clrf	(btemp+20)^0,c
 12446  012FD6  6A3B               	clrf	(btemp+21)^0,c
 12447  012FD8  6A3C               	clrf	(btemp+22)^0,c
 12448  012FDA  6A3D               	clrf	(btemp+23)^0,c
 12449                           
 12450                           ;stkvar	_llu @ sp[(-32)+6]
 12451  012FDC  0EE6               	movlw	-26
 12452  012FDE  0060  F0DB  FFE3   	movff	btemp+16,plusw1
 12453  012FE4  0EE7               	movlw	-25
 12454  012FE6  0060  F0DF  FFE3   	movff	btemp+17,plusw1
 12455  012FEC  0EE8               	movlw	-24
 12456  012FEE  0060  F0E3  FFE3   	movff	btemp+18,plusw1
 12457  012FF4  0EE9               	movlw	-23
 12458  012FF6  0060  F0E7  FFE3   	movff	btemp+19,plusw1
 12459  012FFC  0EEA               	movlw	-22
 12460  012FFE  0060  F0EB  FFE3   	movff	btemp+20,plusw1
 12461  013004  0EEB               	movlw	-21
 12462  013006  0060  F0EF  FFE3   	movff	btemp+21,plusw1
 12463  01300C  0EEC               	movlw	-20
 12464  01300E  0060  F0F3  FFE3   	movff	btemp+22,plusw1
 12465  013014  0EED               	movlw	-19
 12466  013016  0060  F0F7  FFE3   	movff	btemp+23,plusw1
 12467                           
 12468                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 12469                           ;stkvar	_c @ sp[(-32)+31]
 12470  01301C  0EFF               	movlw	-1
 12471  01301E  50E3               	movf	plusw1,w,c
 12472  013020  6EE6               	movwf	postinc1,c
 12473                           
 12474                           ;stkvar	_llu @ sp[(-33)+6]
 12475  013022  50E1               	movf	fsr1l,w,c
 12476  013024  0FE5               	addlw	-27
 12477  013026  6ED9               	movwf	fsr2l,c
 12478  013028  50E2               	movf	fsr1h,w,c
 12479  01302A  6EDA               	movwf	fsr2h,c
 12480  01302C  0EFF               	movlw	255
 12481  01302E  22DA               	addwfc	fsr2h,f,c
 12482  013030  006F FF7B FFE6     	movff	postinc2,postinc1
 12483  013036  006F FF7B FFE6     	movff	postinc2,postinc1
 12484  01303C  006F FF7B FFE6     	movff	postinc2,postinc1
 12485  013042  006F FF7B FFE6     	movff	postinc2,postinc1
 12486  013048  006F FF7B FFE6     	movff	postinc2,postinc1
 12487  01304E  006F FF7B FFE6     	movff	postinc2,postinc1
 12488  013054  006F FF7B FFE6     	movff	postinc2,postinc1
 12489  01305A  006F FF7B FFE6     	movff	postinc2,postinc1
 12490                           
 12491                           ;stkvar	_fp @ sp[(-41)+-2]
 12492  013060  0ED5               	movlw	-43
 12493  013062  006F FF8F FFE6     	movff	plusw1,postinc1
 12494  013068  006F FF8F FFE6     	movff	plusw1,postinc1
 12495  01306E  EC2B  F0AC         	call	_xtoa	;wreg free
 12496  013072  D105               	goto	l2363
 12497  013074                     l12395:
 12498                           
 12499                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 12500  013074  0E02               	movlw	2
 12501  013076  6EE6               	movwf	postinc1,c
 12502  013078  0E00               	movlw	0
 12503  01307A  6EE6               	movwf	postinc1,c
 12504  01307C  0EF6               	movlw	low STR_93
 12505  01307E  6EE6               	movwf	postinc1,c
 12506  013080  0EFF               	movlw	high STR_93
 12507  013082  6EE6               	movwf	postinc1,c
 12508                           
 12509                           ;stkvar	_fmt @ sp[(-36)+-4]
 12510  013084  0ED8               	movlw	-40
 12511  013086  006F FF8F FFD9     	movff	plusw1,fsr2l
 12512  01308C  0ED9               	movlw	-39
 12513  01308E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12514  013094  006F FF78  F030    	movff	postinc2,btemp+10
 12515  01309A  006F FF74  F031    	movff	postdec2,btemp+11
 12516  0130A0  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 12517  0130A6  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 12518  0130AC  ECFE  F0BA         	call	_strncmp	;wreg free
 12519  0130B0  5026               	movf	btemp^0,w,c
 12520  0130B2  1027               	iorwf	(btemp+1)^0,w,c
 12521  0130B4  B4D8               	btfsc	status,2,c
 12522  0130B6  D022               	goto	u12110
 12523  0130B8  0E02               	movlw	2
 12524  0130BA  6EE6               	movwf	postinc1,c
 12525  0130BC  0E00               	movlw	0
 12526  0130BE  6EE6               	movwf	postinc1,c
 12527  0130C0  0EE7               	movlw	low STR_97
 12528  0130C2  6EE6               	movwf	postinc1,c
 12529  0130C4  0EFF               	movlw	high STR_97
 12530  0130C6  6EE6               	movwf	postinc1,c
 12531                           
 12532                           ;stkvar	_fmt @ sp[(-36)+-4]
 12533  0130C8  0ED8               	movlw	-40
 12534  0130CA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12535  0130D0  0ED9               	movlw	-39
 12536  0130D2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12537  0130D8  006F FF78  F030    	movff	postinc2,btemp+10
 12538  0130DE  006F FF74  F031    	movff	postdec2,btemp+11
 12539  0130E4  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 12540  0130EA  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 12541  0130F0  ECFE  F0BA         	call	_strncmp	;wreg free
 12542  0130F4  5026               	movf	btemp^0,w,c
 12543  0130F6  1027               	iorwf	(btemp+1)^0,w,c
 12544  0130F8  A4D8               	btfss	status,2,c
 12545  0130FA  D058               	goto	l12409
 12546  0130FC                     u12110:
 12547                           
 12548                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 12549                           ;stkvar	_fmt @ sp[(-32)+-4]
 12550  0130FC  0EDC               	movlw	-36
 12551  0130FE  006F FF8F FFD9     	movff	plusw1,fsr2l
 12552  013104  0EDD               	movlw	-35
 12553  013106  006F FF8F FFDA     	movff	plusw1,fsr2h
 12554  01310C  006F FF78  F030    	movff	postinc2,btemp+10
 12555  013112  006F FF74  F031    	movff	postdec2,btemp+11
 12556  013118  0E01               	movlw	1
 12557  01311A  2630               	addwf	(btemp+10)^0,f,c
 12558  01311C  0E00               	movlw	0
 12559  01311E  2231               	addwfc	(btemp+11)^0,f,c
 12560  013120  0060  F0C3  FFF6   	movff	btemp+10,tblptrl
 12561  013126  0060  F0C7  FFF7   	movff	btemp+11,tblptrh
 12562  01312C                     	if	0	;tblptru may be non-zero
 12563  01312C                     	endif
 12564  01312C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12565  01312C  0E00               	movlw	low (__mediumconst shr (0+16))
 12566  01312E  6EF8               	movwf	tblptru,c
 12567  013130                     	endif
 12568                           
 12569                           ;stkvar	_c @ sp[(-32)+31]
 12570  013130  0008               	tblrd		*
 12571  013132  0EFF               	movlw	-1
 12572  013134  006F FFD7 FFE3     	movff	tablat,plusw1
 12573                           
 12574                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 12575                           ;stkvar	_fmt @ sp[(-32)+-4]
 12576  01313A  0EDC               	movlw	-36
 12577  01313C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12578  013142  0EDD               	movlw	-35
 12579  013144  006F FF8F FFDA     	movff	plusw1,fsr2h
 12580  01314A  0E02               	movlw	2
 12581  01314C  26DE               	addwf	postinc2,f,c
 12582  01314E  0E00               	movlw	0
 12583  013150  22DD               	addwfc	postdec2,f,c
 12584                           
 12585                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 12586                           ;stkvar	_ap @ sp[(-32)+-6]
 12587  013152  0EDA               	movlw	-38
 12588  013154  006F FF8F FFD9     	movff	plusw1,fsr2l
 12589  01315A  0EDB               	movlw	-37
 12590  01315C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12591  013162  0E04               	movlw	4
 12592  013164  5EDE               	subwf	postinc2,f,c
 12593  013166  0E00               	movlw	0
 12594  013168  5ADD               	subwfb	postdec2,f,c
 12595  01316A  006F FF78  F030    	movff	postinc2,btemp+10
 12596  013170  006F FF74  F031    	movff	postdec2,btemp+11
 12597  013176  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 12598  01317C  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 12599  013182  006F FF78  F02E    	movff	postinc2,btemp+8
 12600  013188  006F FF78  F02F    	movff	postinc2,btemp+9
 12601  01318E  006F FF78  F030    	movff	postinc2,btemp+10
 12602  013194  006F FF78  F031    	movff	postinc2,btemp+11
 12603  01319A  502E               	movf	(btemp+8)^0,w,c
 12604  01319C  6E36               	movwf	(btemp+16)^0,c
 12605  01319E  502F               	movf	(btemp+9)^0,w,c
 12606  0131A0  6E37               	movwf	(btemp+17)^0,c
 12607  0131A2  5030               	movf	(btemp+10)^0,w,c
 12608  0131A4  6E38               	movwf	(btemp+18)^0,c
 12609  0131A6  5031               	movf	(btemp+11)^0,w,c
 12610  0131A8  6E39               	movwf	(btemp+19)^0,c
 12611  0131AA  D714               	goto	L11
 12612  0131AC                     l12409:
 12613                           
 12614                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 12615                           ;stkvar	_fmt @ sp[(-32)+-4]
 12616  0131AC  0EDC               	movlw	-36
 12617  0131AE  006F FF8F FFD9     	movff	plusw1,fsr2l
 12618  0131B4  0EDD               	movlw	-35
 12619  0131B6  006F FF8F FFDA     	movff	plusw1,fsr2h
 12620  0131BC  006F FF7B FFF6     	movff	postinc2,tblptrl
 12621  0131C2  006F FF77 FFF7     	movff	postdec2,tblptrh
 12622  0131C8                     	if	0	;tblptru may be non-zero
 12623  0131C8                     	endif
 12624  0131C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12625  0131C8  0E00               	movlw	low (__mediumconst shr (0+16))
 12626  0131CA  6EF8               	movwf	tblptru,c
 12627  0131CC                     	endif
 12628  0131CC  0008               	tblrd		*
 12629  0131CE  50F5               	movf	tablat,w,c
 12630  0131D0  0A25               	xorlw	37
 12631  0131D2  A4D8               	btfss	status,2,c
 12632  0131D4  D01A               	goto	l12419
 12633                           
 12634                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 12635                           ;stkvar	_fmt @ sp[(-32)+-4]
 12636  0131D6  0EDC               	movlw	-36
 12637  0131D8  006F FF8F FFD9     	movff	plusw1,fsr2l
 12638  0131DE  0EDD               	movlw	-35
 12639  0131E0  006F FF8F FFDA     	movff	plusw1,fsr2h
 12640  0131E6  2ADE               	incf	postinc2,f,c
 12641  0131E8  0E00               	movlw	0
 12642  0131EA  22DD               	addwfc	postdec2,f,c
 12643                           
 12644                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 12645                           ;stkvar	_fp @ sp[(-32)+-2]
 12646  0131EC  0EDE               	movlw	-34
 12647  0131EE  006F FF8F FFE6     	movff	plusw1,postinc1
 12648  0131F4  006F FF8F FFE6     	movff	plusw1,postinc1
 12649  0131FA  0E25               	movlw	37
 12650  0131FC  6EE6               	movwf	postinc1,c
 12651  0131FE  0E00               	movlw	0
 12652  013200  6EE6               	movwf	postinc1,c
 12653  013202  EC8B  F0C7         	call	_fputc	;wreg free
 12654  013206                     l12415:
 12655                           
 12656                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 12657  013206  0E01               	movlw	1
 12658  013208  D00C               	goto	L12
 12659  01320A                     l12419:
 12660                           
 12661                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 12662                           ;stkvar	_fmt @ sp[(-32)+-4]
 12663  01320A  0EDC               	movlw	-36
 12664  01320C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12665  013212  0EDD               	movlw	-35
 12666  013214  006F FF8F FFDA     	movff	plusw1,fsr2h
 12667  01321A  2ADE               	incf	postinc2,f,c
 12668  01321C  0E00               	movlw	0
 12669  01321E  22DD               	addwfc	postdec2,f,c
 12670                           
 12671                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 12672  013220  0E00               	movlw	0
 12673  013222                     L12:
 12674  013222  6E26               	movwf	btemp^0,c
 12675  013224  0E00               	movlw	0
 12676  013226  6E27               	movwf	(btemp+1)^0,c
 12677  013228  D02A               	goto	l2363
 12678  01322A                     l12425:
 12679                           
 12680                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 12681                           ;stkvar	_fp @ sp[(-32)+-2]
 12682  01322A  0EDE               	movlw	-34
 12683  01322C  006F FF8F FFE6     	movff	plusw1,postinc1
 12684  013232  006F FF8F FFE6     	movff	plusw1,postinc1
 12685                           
 12686                           ;stkvar	_fmt @ sp[(-34)+-4]
 12687  013238  0EDA               	movlw	-38
 12688  01323A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12689  013240  0EDB               	movlw	-37
 12690  013242  006F FF8F FFDA     	movff	plusw1,fsr2h
 12691  013248  006F FF7B FFF6     	movff	postinc2,tblptrl
 12692  01324E  006F FF77 FFF7     	movff	postdec2,tblptrh
 12693  013254                     	if	0	;tblptru may be non-zero
 12694  013254                     	endif
 12695  013254                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12696  013254  0E00               	movlw	low (__mediumconst shr (0+16))
 12697  013256  6EF8               	movwf	tblptru,c
 12698  013258                     	endif
 12699  013258  0008               	tblrd		*
 12700  01325A  50F5               	movf	tablat,w,c
 12701  01325C  6EE6               	movwf	postinc1,c
 12702  01325E  0E00               	movlw	0
 12703  013260  6EE6               	movwf	postinc1,c
 12704  013262  EC8B  F0C7         	call	_fputc	;wreg free
 12705                           
 12706                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 12707                           ;stkvar	_fmt @ sp[(-32)+-4]
 12708  013266  0EDC               	movlw	-36
 12709  013268  006F FF8F FFD9     	movff	plusw1,fsr2l
 12710  01326E  0EDD               	movlw	-35
 12711  013270  006F FF8F FFDA     	movff	plusw1,fsr2h
 12712  013276  2ADE               	incf	postinc2,f,c
 12713  013278  0E00               	movlw	0
 12714  01327A  22DD               	addwfc	postdec2,f,c
 12715  01327C  D7C4               	goto	l12415
 12716  01327E                     l2363:
 12717                           
 12718                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 12719  01327E  0EDA               	movlw	218
 12720  013280  26E1               	addwf	fsr1l,f,c
 12721  013282  0EFF               	movlw	255
 12722  013284  22E2               	addwfc	fsr1h,f,c
 12723  013286  0012               	return		;funcret
 12724  013288                     __end_of_vfpfcnvrt:
 12725                           	opt callstack 0
 12726                           
 12727 ;; *************** function _xtoa *****************
 12728 ;; Defined at:
 12729 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 12730 ;; Parameters:    Size  Location     Type
 12731 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12732 ;;		 -> f(6), NULL(0), 
 12733 ;;  d               8  [STACK] unsigned long long 
 12734 ;;  x               1  [STACK] unsigned char 
 12735 ;; Auto vars:     Size  Location     Type
 12736 ;;  n               8  [STACK] unsigned long long 
 12737 ;;  c               2  [STACK] int 
 12738 ;;  i               2  [STACK] int 
 12739 ;;  w               2  [STACK] int 
 12740 ;;  p               2  [STACK] int 
 12741 ;; Return value:  Size  Location     Type
 12742 ;;                  2  [STACK] int 
 12743 ;; Registers used:
 12744 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 12745 ;; Tracked objects:
 12746 ;;		On entry : 0/0
 12747 ;;		On exit  : 0/0
 12748 ;;		Unchanged: 0/0
 12749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12754 ;;Total ram usage:        0 bytes
 12755 ;; Hardware stack levels used:    1
 12756 ;; Hardware stack levels required when called:   20
 12757 ;; This function calls:
 12758 ;;		_isalpha
 12759 ;;		_isupper
 12760 ;;		_pad
 12761 ;;		_toupper
 12762 ;; This function is called by:
 12763 ;;		_vfpfcnvrt
 12764 ;; This function uses a reentrant model
 12765 ;;
 12766                           
 12767                           	psect	text46
 12768  015856                     __ptext46:
 12769                           	opt callstack 0
 12770  015856                     _xtoa:
 12771                           	opt callstack 0
 12772                           
 12773                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 12774  015856  0E14               	movlw	20
 12775  015858  26E1               	addwf	fsr1l,f,c
 12776  01585A  0E00               	movlw	0
 12777  01585C  22E2               	addwfc	fsr1h,f,c
 12778                           
 12779                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 12780                           
 12781                           ;incstack = 0
 12782 ;; hardware stack exceeded
 12783  01585E  AE0D               	btfss	(_prec+1)^0,7,c
 12784                           
 12785                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 12786  015860  920E               	bcf	_flags^0,1,c
 12787                           
 12788                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 12789  015862  BE0D               	btfsc	(_prec+1)^0,7,c
 12790  015864  D005               	goto	u11640
 12791  015866  500D               	movf	(_prec+1)^0,w,c
 12792  015868  E110               	bnz	l12149
 12793  01586A  040C               	decf	_prec^0,w,c
 12794  01586C  B0D8               	btfsc	status,0,c
 12795  01586E  D00D               	goto	l12149
 12796  015870                     u11640:
 12797  015870  0E01               	movlw	1
 12798  015872  6E30               	movwf	(btemp+10)^0,c
 12799  015874  0E00               	movlw	0
 12800  015876  6E31               	movwf	(btemp+11)^0,c
 12801                           
 12802                           ;stkvar	_p @ sp[(-20)+18]
 12803  015878  0EFE               	movlw	-2
 12804  01587A  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 12805  015880  0EFF               	movlw	-1
 12806  015882  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 12807  015888  D008               	goto	l2313
 12808  01588A                     l12149:
 12809                           
 12810                           ;stkvar	_p @ sp[(-20)+18]
 12811  01588A  0EFE               	movlw	-2
 12812  01588C  0060  F033  FFE3   	movff	_prec,plusw1
 12813  015892  0EFF               	movlw	-1
 12814  015894  0060  F037  FFE3   	movff	_prec+1,plusw1
 12815  01589A                     l2313:
 12816                           
 12817                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 12818                           ;stkvar	_w @ sp[(-20)+16]
 12819  01589A  0EFC               	movlw	-4
 12820  01589C  0060  F02B  FFE3   	movff	_width,plusw1
 12821  0158A2  0EFD               	movlw	-3
 12822  0158A4  0060  F02F  FFE3   	movff	_width+1,plusw1
 12823                           
 12824                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 12825  0158AA  A80E               	btfss	_flags^0,4,c
 12826  0158AC  D00B               	goto	l12155
 12827                           
 12828                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 12829                           ;stkvar	_w @ sp[(-20)+16]
 12830  0158AE  50E1               	movf	fsr1l,w,c
 12831  0158B0  0FFC               	addlw	-4
 12832  0158B2  6ED9               	movwf	fsr2l,c
 12833  0158B4  50E2               	movf	fsr1h,w,c
 12834  0158B6  6EDA               	movwf	fsr2h,c
 12835  0158B8  0EFF               	movlw	255
 12836  0158BA  22DA               	addwfc	fsr2h,f,c
 12837  0158BC  0EFE               	movlw	254
 12838  0158BE  26DE               	addwf	postinc2,f,c
 12839  0158C0  0EFF               	movlw	255
 12840  0158C2  22DD               	addwfc	postdec2,f,c
 12841  0158C4                     l12155:
 12842                           
 12843                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 12844                           ;stkvar	_d @ sp[(-20)+-10]
 12845  0158C4  0EE2               	movlw	226
 12846  0158C6  24E1               	addwf	fsr1l,w,c
 12847  0158C8  6ED9               	movwf	fsr2l,c
 12848  0158CA  0EFF               	movlw	255
 12849  0158CC  20E2               	addwfc	fsr1h,w,c
 12850  0158CE  6EDA               	movwf	fsr2h,c
 12851                           
 12852                           ;stkvar	_n @ sp[(-20)+4]
 12853  0158D0  0E08               	movlw	8
 12854  0158D2  6E26               	movwf	btemp^0,c
 12855  0158D4  0EF0               	movlw	-16
 12856  0158D6                     us1166999:
 12857  0158D6  006F FF7B FFE3     	movff	postinc2,plusw1
 12858  0158DC  28E8               	incf	wreg,w,c
 12859  0158DE  2E26               	decfsz	btemp^0,f,c
 12860  0158E0  D7FA               	bra	us1166999
 12861                           
 12862                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 12863  0158E2  0E4F               	movlw	79
 12864  0158E4  6E30               	movwf	(btemp+10)^0,c
 12865  0158E6  0E00               	movlw	0
 12866  0158E8  6E31               	movwf	(btemp+11)^0,c
 12867                           
 12868                           ;stkvar	_i @ sp[(-20)+14]
 12869  0158EA  0EFA               	movlw	-6
 12870  0158EC  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 12871  0158F2  0EFB               	movlw	-5
 12872  0158F4  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 12873                           
 12874                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 12875  0158FA  0103               	movlb	3	; () banked
 12876  0158FC  6BFD               	clrf	(_dbuf+79)& (0+255),b
 12877                           
 12878                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12879  0158FE  D0EE               	goto	l12193
 12880  015900                     l12161:
 12881                           
 12882                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 12883                           ;stkvar	_i @ sp[(-20)+14]
 12884  015900  50E1               	movf	fsr1l,w,c
 12885  015902  0FFA               	addlw	-6
 12886  015904  6ED9               	movwf	fsr2l,c
 12887  015906  50E2               	movf	fsr1h,w,c
 12888  015908  6EDA               	movwf	fsr2h,c
 12889  01590A  0EFF               	movlw	255
 12890  01590C  22DA               	addwfc	fsr2h,f,c
 12891  01590E  06DE               	decf	postinc2,f,c
 12892  015910  0E00               	movlw	0
 12893  015912  5ADD               	subwfb	postdec2,f,c
 12894                           
 12895                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 12896                           ;stkvar	_n @ sp[(-20)+4]
 12897  015914  0EF0               	movlw	-16
 12898  015916  006F FF8C  F030    	movff	plusw1,btemp+10
 12899  01591C  0EF1               	movlw	-15
 12900  01591E  006F FF8C  F031    	movff	plusw1,btemp+11
 12901  015924  0E0F               	movlw	15
 12902  015926  1630               	andwf	(btemp+10)^0,f,c
 12903  015928  0E00               	movlw	0
 12904  01592A  1631               	andwf	(btemp+11)^0,f,c
 12905                           
 12906                           ;stkvar	_c @ sp[(-20)+12]
 12907  01592C  0EF8               	movlw	-8
 12908  01592E  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 12909  015934  0EF9               	movlw	-7
 12910  015936  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 12911                           
 12912                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 12913                           ;stkvar	_c @ sp[(-20)+12]
 12914  01593C  0EF9               	movlw	-7
 12915  01593E  BEE3               	btfsc	plusw1,7,c
 12916  015940  D00F               	goto	l12169
 12917  015942  0EF9               	movlw	-7
 12918  015944  50E3               	movf	plusw1,w,c
 12919  015946  E108               	bnz	u11670
 12920  015948  0EF8               	movlw	-8
 12921  01594A  006F FF8C  F026    	movff	plusw1,btemp
 12922  015950  0E0A               	movlw	10
 12923  015952  5E26               	subwf	btemp^0,f,c
 12924  015954  A0D8               	btfss	status,0,c
 12925  015956  D004               	goto	l12169
 12926  015958                     u11670:
 12927                           
 12928                           ;stkvar	_c @ sp[(-20)+12]
 12929  015958  0EF8               	movlw	-8
 12930  01595A  50E3               	movf	plusw1,w,c
 12931  01595C  0F57               	addlw	87
 12932  01595E  D003               	goto	L13
 12933  015960                     l12169:
 12934                           
 12935                           ;stkvar	_c @ sp[(-20)+12]
 12936  015960  0EF8               	movlw	-8
 12937  015962  50E3               	movf	plusw1,w,c
 12938  015964  0F30               	addlw	48
 12939  015966                     L13:
 12940  015966  6E30               	movwf	(btemp+10)^0,c
 12941  015968  0EF9               	movlw	-7
 12942  01596A  006F FF8C  F031    	movff	plusw1,btemp+11
 12943  015970  0E00               	movlw	0
 12944  015972  2231               	addwfc	(btemp+11)^0,f,c
 12945                           
 12946                           ;stkvar	_c @ sp[(-20)+12]
 12947  015974  0EF8               	movlw	-8
 12948  015976  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 12949  01597C  0EF9               	movlw	-7
 12950  01597E  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 12951  015984  0EBF               	movlw	191
 12952  015986  6E30               	movwf	(btemp+10)^0,c
 12953  015988  0EFF               	movlw	255
 12954  01598A  6E31               	movwf	(btemp+11)^0,c
 12955                           
 12956                           ;stkvar	_x @ sp[(-20)+-11]
 12957  01598C  0EE1               	movlw	-31
 12958  01598E  50E3               	movf	plusw1,w,c
 12959  015990  6E2E               	movwf	(btemp+8)^0,c
 12960  015992  6A2F               	clrf	(btemp+9)^0,c
 12961  015994  5030               	movf	(btemp+10)^0,w,c
 12962  015996  262E               	addwf	(btemp+8)^0,f,c
 12963  015998  5031               	movf	(btemp+11)^0,w,c
 12964  01599A  222F               	addwfc	(btemp+9)^0,f,c
 12965  01599C  502F               	movf	(btemp+9)^0,w,c
 12966  01599E  E106               	bnz	u11680
 12967  0159A0  0E1A               	movlw	26
 12968  0159A2  5C2E               	subwf	(btemp+8)^0,w,c
 12969  0159A4  B0D8               	btfsc	status,0,c
 12970  0159A6  D002               	goto	u11680
 12971  0159A8  0E01               	movlw	1
 12972  0159AA  D001               	goto	u11690
 12973  0159AC                     u11680:
 12974  0159AC  0E00               	movlw	0
 12975  0159AE                     u11690:
 12976  0159AE  6E30               	movwf	(btemp+10)^0,c
 12977  0159B0  6A31               	clrf	(btemp+11)^0,c
 12978                           
 12979                           ;stkvar	_xtoa$5459 @ sp[(-20)+2]
 12980  0159B2  0EEE               	movlw	-18
 12981  0159B4  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 12982  0159BA  0EEF               	movlw	-17
 12983  0159BC  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 12984                           
 12985                           ;stkvar	_xtoa$5459 @ sp[(-20)+2]
 12986  0159C2  0EEE               	movlw	-18
 12987  0159C4  006F FF8C  F026    	movff	plusw1,btemp
 12988  0159CA  0EEF               	movlw	-17
 12989  0159CC  50E3               	movf	plusw1,w,c
 12990  0159CE  1026               	iorwf	btemp^0,w,c
 12991  0159D0  B4D8               	btfsc	status,2,c
 12992  0159D2  D041               	goto	l12185
 12993  0159D4  0E9F               	movlw	159
 12994  0159D6  6E30               	movwf	(btemp+10)^0,c
 12995  0159D8  0EFF               	movlw	255
 12996  0159DA  6E31               	movwf	(btemp+11)^0,c
 12997                           
 12998                           ;stkvar	_c @ sp[(-20)+12]
 12999  0159DC  0EF8               	movlw	-8
 13000  0159DE  006F FF8C  F02E    	movff	plusw1,btemp+8
 13001  0159E4  0EF9               	movlw	-7
 13002  0159E6  006F FF8C  F02F    	movff	plusw1,btemp+9
 13003  0159EC  0E20               	movlw	32
 13004  0159EE  122E               	iorwf	(btemp+8)^0,f,c
 13005  0159F0  0E00               	movlw	0
 13006  0159F2  122F               	iorwf	(btemp+9)^0,f,c
 13007  0159F4  5030               	movf	(btemp+10)^0,w,c
 13008  0159F6  262E               	addwf	(btemp+8)^0,f,c
 13009  0159F8  5031               	movf	(btemp+11)^0,w,c
 13010  0159FA  222F               	addwfc	(btemp+9)^0,f,c
 13011  0159FC  502F               	movf	(btemp+9)^0,w,c
 13012  0159FE  E106               	bnz	u11710
 13013  015A00  0E1A               	movlw	26
 13014  015A02  5C2E               	subwf	(btemp+8)^0,w,c
 13015  015A04  B0D8               	btfsc	status,0,c
 13016  015A06  D002               	goto	u11710
 13017  015A08  0E01               	movlw	1
 13018  015A0A  D001               	goto	u11720
 13019  015A0C                     u11710:
 13020  015A0C  0E00               	movlw	0
 13021  015A0E                     u11720:
 13022  015A0E  6E30               	movwf	(btemp+10)^0,c
 13023  015A10  6A31               	clrf	(btemp+11)^0,c
 13024                           
 13025                           ;stkvar	_xtoa$5460 @ sp[(-20)+0]
 13026  015A12  0EEC               	movlw	-20
 13027  015A14  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 13028  015A1A  0EED               	movlw	-19
 13029  015A1C  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 13030                           
 13031                           ;stkvar	_xtoa$5460 @ sp[(-20)+0]
 13032  015A22  0EEC               	movlw	-20
 13033  015A24  006F FF8C  F026    	movff	plusw1,btemp
 13034  015A2A  0EED               	movlw	-19
 13035  015A2C  50E3               	movf	plusw1,w,c
 13036  015A2E  1026               	iorwf	btemp^0,w,c
 13037  015A30  B4D8               	btfsc	status,2,c
 13038  015A32  D011               	goto	l12185
 13039                           
 13040                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 13041                           ;stkvar	_c @ sp[(-20)+12]
 13042  015A34  0EF8               	movlw	-8
 13043  015A36  006F FF8F FFE6     	movff	plusw1,postinc1
 13044  015A3C  006F FF8F FFE6     	movff	plusw1,postinc1
 13045  015A42  EC82  F0D2         	call	_toupper	;wreg free
 13046                           
 13047                           ;stkvar	_c @ sp[(-20)+12]
 13048  015A46  0EF8               	movlw	-8
 13049  015A48  0060  F09B  FFE3   	movff	btemp,plusw1
 13050  015A4E  0EF9               	movlw	-7
 13051  015A50  0060  F09F  FFE3   	movff	btemp+1,plusw1
 13052  015A56                     l12185:
 13053                           
 13054                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 13055                           ;stkvar	_c @ sp[(-20)+12]
 13056                           ;stkvar	_i @ sp[(-20)+14]
 13057  015A56  0EFA               	movlw	-6
 13058  015A58  006F FF8C  F030    	movff	plusw1,btemp+10
 13059  015A5E  0EFB               	movlw	-5
 13060  015A60  006F FF8C  F031    	movff	plusw1,btemp+11
 13061  015A66  0EAE               	movlw	low _dbuf
 13062  015A68  2430               	addwf	(btemp+10)^0,w,c
 13063  015A6A  6ED9               	movwf	fsr2l,c
 13064  015A6C  0E03               	movlw	high _dbuf
 13065  015A6E  2031               	addwfc	(btemp+11)^0,w,c
 13066  015A70  6EDA               	movwf	fsr2h,c
 13067  015A72  0EF8               	movlw	-8
 13068  015A74  006F FF8F FFDF     	movff	plusw1,indf2
 13069                           
 13070                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 13071                           ;stkvar	_p @ sp[(-20)+18]
 13072  015A7A  50E1               	movf	fsr1l,w,c
 13073  015A7C  0FFE               	addlw	-2
 13074  015A7E  6ED9               	movwf	fsr2l,c
 13075  015A80  50E2               	movf	fsr1h,w,c
 13076  015A82  6EDA               	movwf	fsr2h,c
 13077  015A84  0EFF               	movlw	255
 13078  015A86  22DA               	addwfc	fsr2h,f,c
 13079  015A88  06DE               	decf	postinc2,f,c
 13080  015A8A  0E00               	movlw	0
 13081  015A8C  5ADD               	subwfb	postdec2,f,c
 13082                           
 13083                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 13084                           ;stkvar	_w @ sp[(-20)+16]
 13085  015A8E  50E1               	movf	fsr1l,w,c
 13086  015A90  0FFC               	addlw	-4
 13087  015A92  6ED9               	movwf	fsr2l,c
 13088  015A94  50E2               	movf	fsr1h,w,c
 13089  015A96  6EDA               	movwf	fsr2h,c
 13090  015A98  0EFF               	movlw	255
 13091  015A9A  22DA               	addwfc	fsr2h,f,c
 13092  015A9C  06DE               	decf	postinc2,f,c
 13093  015A9E  0E00               	movlw	0
 13094  015AA0  5ADD               	subwfb	postdec2,f,c
 13095                           
 13096                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 13097  015AA2  0E04               	movlw	4
 13098  015AA4  6E31               	movwf	(btemp+11)^0,c
 13099                           
 13100                           ;stkvar	_n @ sp[(-20)+4]
 13101  015AA6  50E1               	movf	fsr1l,w,c
 13102  015AA8  0FF0               	addlw	-16
 13103  015AAA  6ED9               	movwf	fsr2l,c
 13104  015AAC  50E2               	movf	fsr1h,w,c
 13105  015AAE  6EDA               	movwf	fsr2h,c
 13106  015AB0  0EFF               	movlw	255
 13107  015AB2  22DA               	addwfc	fsr2h,f,c
 13108  015AB4  2831               	incf	(btemp+11)^0,w,c
 13109  015AB6  52DE               	movf	postinc2,f,c
 13110  015AB8  D00F               	goto	u11740
 13111  015ABA                     u11745:
 13112  015ABA  52DE               	movf	postinc2,f,c
 13113  015ABC  52DE               	movf	postinc2,f,c
 13114  015ABE  52DE               	movf	postinc2,f,c
 13115  015AC0  52DE               	movf	postinc2,f,c
 13116  015AC2  52DE               	movf	postinc2,f,c
 13117  015AC4  52DE               	movf	postinc2,f,c
 13118  015AC6  90D8               	bcf	status,0,c
 13119  015AC8  32DD               	rrcf	postdec2,f,c
 13120  015ACA  32DD               	rrcf	postdec2,f,c
 13121  015ACC  32DD               	rrcf	postdec2,f,c
 13122  015ACE  32DD               	rrcf	postdec2,f,c
 13123  015AD0  32DD               	rrcf	postdec2,f,c
 13124  015AD2  32DD               	rrcf	postdec2,f,c
 13125  015AD4  32DD               	rrcf	postdec2,f,c
 13126  015AD6  32DE               	rrcf	postinc2,f,c
 13127  015AD8                     u11740:
 13128  015AD8  2EE8               	decfsz	wreg,f,c
 13129  015ADA  D7EF               	goto	u11745
 13130  015ADC                     l12193:
 13131                           
 13132                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13133                           ;stkvar	_i @ sp[(-20)+14]
 13134  015ADC  0EFB               	movlw	-5
 13135  015ADE  BEE3               	btfsc	plusw1,7,c
 13136  015AE0  D03A               	goto	u11790
 13137  015AE2  0EFB               	movlw	-5
 13138  015AE4  50E3               	movf	plusw1,w,c
 13139  015AE6  E108               	bnz	u11750
 13140  015AE8  0EFA               	movlw	-6
 13141  015AEA  006F FF8C  F026    	movff	plusw1,btemp
 13142  015AF0  0E02               	movlw	2
 13143  015AF2  5E26               	subwf	btemp^0,f,c
 13144  015AF4  A0D8               	btfss	status,0,c
 13145  015AF6  D02F               	goto	u11790
 13146  015AF8                     u11750:
 13147                           
 13148                           ;stkvar	_n @ sp[(-20)+4]
 13149  015AF8  0EF0               	movlw	-16
 13150  015AFA  50E3               	movf	plusw1,w,c
 13151  015AFC  E115               	bnz	u11761
 13152  015AFE  0EF1               	movlw	-15
 13153  015B00  50E3               	movf	plusw1,w,c
 13154  015B02  E112               	bnz	u11761
 13155  015B04  0EF2               	movlw	-14
 13156  015B06  50E3               	movf	plusw1,w,c
 13157  015B08  E10F               	bnz	u11761
 13158  015B0A  0EF3               	movlw	-13
 13159  015B0C  50E3               	movf	plusw1,w,c
 13160  015B0E  E10C               	bnz	u11761
 13161  015B10  0EF4               	movlw	-12
 13162  015B12  50E3               	movf	plusw1,w,c
 13163  015B14  E109               	bnz	u11761
 13164  015B16  0EF5               	movlw	-11
 13165  015B18  50E3               	movf	plusw1,w,c
 13166  015B1A  E106               	bnz	u11761
 13167  015B1C  0EF6               	movlw	-10
 13168  015B1E  50E3               	movf	plusw1,w,c
 13169  015B20  E103               	bnz	u11761
 13170  015B22  0EF7               	movlw	-9
 13171  015B24  50E3               	movf	plusw1,w,c
 13172  015B26  A4D8               	btfss	status,2,c
 13173  015B28                     u11761:
 13174  015B28  D6EB               	goto	l12161
 13175                           
 13176                           ;stkvar	_p @ sp[(-20)+18]
 13177  015B2A  0EFF               	movlw	-1
 13178  015B2C  BEE3               	btfsc	plusw1,7,c
 13179  015B2E  D007               	goto	u11770
 13180  015B30  0EFF               	movlw	-1
 13181  015B32  50E3               	movf	plusw1,w,c
 13182  015B34  E103               	bnz	u11771
 13183  015B36  0EFE               	movlw	-2
 13184  015B38  04E3               	decf	plusw1,w,c
 13185  015B3A  B0D8               	btfsc	status,0,c
 13186  015B3C                     u11771:
 13187  015B3C  D6E1               	goto	l12161
 13188  015B3E                     u11770:
 13189                           
 13190                           ;stkvar	_w @ sp[(-20)+16]
 13191  015B3E  0EFD               	movlw	-3
 13192  015B40  BEE3               	btfsc	plusw1,7,c
 13193  015B42  D009               	goto	u11790
 13194  015B44  0EFD               	movlw	-3
 13195  015B46  50E3               	movf	plusw1,w,c
 13196  015B48  E104               	bnz	u11780
 13197  015B4A  0EFC               	movlw	-4
 13198  015B4C  04E3               	decf	plusw1,w,c
 13199  015B4E  A0D8               	btfss	status,0,c
 13200  015B50  D002               	goto	u11790
 13201  015B52                     u11780:
 13202  015B52  B20E               	btfsc	_flags^0,1,c
 13203  015B54  D6D5               	goto	l12161
 13204  015B56                     u11790:
 13205                           
 13206                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 13207  015B56  A80E               	btfss	_flags^0,4,c
 13208  015B58  D036               	goto	l12209
 13209                           
 13210                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 13211                           ;stkvar	_i @ sp[(-20)+14]
 13212  015B5A  50E1               	movf	fsr1l,w,c
 13213  015B5C  0FFA               	addlw	-6
 13214  015B5E  6ED9               	movwf	fsr2l,c
 13215  015B60  50E2               	movf	fsr1h,w,c
 13216  015B62  6EDA               	movwf	fsr2h,c
 13217  015B64  0EFF               	movlw	255
 13218  015B66  22DA               	addwfc	fsr2h,f,c
 13219  015B68  06DE               	decf	postinc2,f,c
 13220  015B6A  0E00               	movlw	0
 13221  015B6C  5ADD               	subwfb	postdec2,f,c
 13222                           
 13223                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 13224                           ;stkvar	_x @ sp[(-20)+-11]
 13225                           ;stkvar	_i @ sp[(-20)+14]
 13226  015B6E  0EFA               	movlw	-6
 13227  015B70  006F FF8C  F030    	movff	plusw1,btemp+10
 13228  015B76  0EFB               	movlw	-5
 13229  015B78  006F FF8C  F031    	movff	plusw1,btemp+11
 13230  015B7E  0EAE               	movlw	low _dbuf
 13231  015B80  2430               	addwf	(btemp+10)^0,w,c
 13232  015B82  6ED9               	movwf	fsr2l,c
 13233  015B84  0E03               	movlw	high _dbuf
 13234  015B86  2031               	addwfc	(btemp+11)^0,w,c
 13235  015B88  6EDA               	movwf	fsr2h,c
 13236  015B8A  0EE1               	movlw	-31
 13237  015B8C  006F FF8F FFDF     	movff	plusw1,indf2
 13238                           
 13239                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 13240                           ;stkvar	_i @ sp[(-20)+14]
 13241  015B92  50E1               	movf	fsr1l,w,c
 13242  015B94  0FFA               	addlw	-6
 13243  015B96  6ED9               	movwf	fsr2l,c
 13244  015B98  50E2               	movf	fsr1h,w,c
 13245  015B9A  6EDA               	movwf	fsr2h,c
 13246  015B9C  0EFF               	movlw	255
 13247  015B9E  22DA               	addwfc	fsr2h,f,c
 13248  015BA0  06DE               	decf	postinc2,f,c
 13249  015BA2  0E00               	movlw	0
 13250  015BA4  5ADD               	subwfb	postdec2,f,c
 13251                           
 13252                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 13253                           ;stkvar	_i @ sp[(-20)+14]
 13254  015BA6  0EFA               	movlw	-6
 13255  015BA8  006F FF8C  F030    	movff	plusw1,btemp+10
 13256  015BAE  0EFB               	movlw	-5
 13257  015BB0  006F FF8C  F031    	movff	plusw1,btemp+11
 13258  015BB6  0EAE               	movlw	low _dbuf
 13259  015BB8  2430               	addwf	(btemp+10)^0,w,c
 13260  015BBA  6ED9               	movwf	fsr2l,c
 13261  015BBC  0E03               	movlw	high _dbuf
 13262  015BBE  2031               	addwfc	(btemp+11)^0,w,c
 13263  015BC0  6EDA               	movwf	fsr2h,c
 13264  015BC2  0E30               	movlw	48
 13265  015BC4  6EDF               	movwf	indf2,c
 13266  015BC6                     l12209:
 13267                           
 13268                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 13269                           ;stkvar	_w @ sp[(-20)+16]
 13270  015BC6  0EFC               	movlw	-4
 13271  015BC8  006F FF8F FFE6     	movff	plusw1,postinc1
 13272  015BCE  006F FF8F FFE6     	movff	plusw1,postinc1
 13273                           
 13274                           ;stkvar	_i @ sp[(-22)+14]
 13275  015BD4  0EAE               	movlw	low _dbuf
 13276  015BD6  6E30               	movwf	(btemp+10)^0,c
 13277  015BD8  0E03               	movlw	high _dbuf
 13278  015BDA  6E31               	movwf	(btemp+11)^0,c
 13279  015BDC  0EF8               	movlw	-8
 13280  015BDE  50E3               	movf	plusw1,w,c
 13281  015BE0  2630               	addwf	(btemp+10)^0,f,c
 13282  015BE2  0EF9               	movlw	-7
 13283  015BE4  50E3               	movf	plusw1,w,c
 13284  015BE6  2231               	addwfc	(btemp+11)^0,f,c
 13285  015BE8  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 13286  015BEE  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 13287                           
 13288                           ;stkvar	_fp @ sp[(-24)+-2]
 13289  015BF4  0EE6               	movlw	-26
 13290  015BF6  006F FF8F FFE6     	movff	plusw1,postinc1
 13291  015BFC  006F FF8F FFE6     	movff	plusw1,postinc1
 13292  015C02  ECA9  F0C8         	call	_pad	;wreg free
 13293                           
 13294                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 13295  015C06  0EE1               	movlw	225
 13296  015C08  26E1               	addwf	fsr1l,f,c
 13297  015C0A  0EFF               	movlw	255
 13298  015C0C  22E2               	addwfc	fsr1h,f,c
 13299  015C0E  0012               	return		;funcret
 13300  015C10                     __end_of_xtoa:
 13301                           	opt callstack 0
 13302                           
 13303 ;; *************** function _toupper *****************
 13304 ;; Defined at:
 13305 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 13306 ;; Parameters:    Size  Location     Type
 13307 ;;  c               2  [STACK] int 
 13308 ;; Auto vars:     Size  Location     Type
 13309 ;;		None
 13310 ;; Return value:  Size  Location     Type
 13311 ;;                  2  [STACK] int 
 13312 ;; Registers used:
 13313 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 13314 ;; Tracked objects:
 13315 ;;		On entry : 0/3
 13316 ;;		On exit  : 0/0
 13317 ;;		Unchanged: 0/0
 13318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13323 ;;Total ram usage:        0 bytes
 13324 ;; Hardware stack levels used:    1
 13325 ;; Hardware stack levels required when called:   16
 13326 ;; This function calls:
 13327 ;;		_islower
 13328 ;; This function is called by:
 13329 ;;		_xtoa
 13330 ;; This function uses a reentrant model
 13331 ;;
 13332                           
 13333                           	psect	text47
 13334  01A504                     __ptext47:
 13335                           	opt callstack 0
 13336  01A504                     _toupper:
 13337                           	opt callstack 0
 13338                           
 13339                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13340  01A504  52E6               	movf	postinc1,f,c
 13341  01A506  52E6               	movf	postinc1,f,c
 13342                           
 13343                           ;stkvar	_c @ sp[(-2)+-2]
 13344                           
 13345                           ;incstack = 0
 13346 ;; hardware stack exceeded
 13347  01A508  0EFC               	movlw	-4
 13348  01A50A  50E3               	movf	plusw1,w,c
 13349  01A50C  0F9F               	addlw	159
 13350  01A50E  6E30               	movwf	(btemp+10)^0,c
 13351  01A510  0EFD               	movlw	-3
 13352  01A512  006F FF8C  F031    	movff	plusw1,btemp+11
 13353  01A518  0EFF               	movlw	255
 13354  01A51A  2231               	addwfc	(btemp+11)^0,f,c
 13355  01A51C  5031               	movf	(btemp+11)^0,w,c
 13356  01A51E  E106               	bnz	u6140
 13357  01A520  0E1A               	movlw	26
 13358  01A522  5C30               	subwf	(btemp+10)^0,w,c
 13359  01A524  B0D8               	btfsc	status,0,c
 13360  01A526  D002               	goto	u6140
 13361  01A528  0E01               	movlw	1
 13362  01A52A  D001               	goto	u6150
 13363  01A52C                     u6140:
 13364  01A52C  0E00               	movlw	0
 13365  01A52E                     u6150:
 13366  01A52E  6E30               	movwf	(btemp+10)^0,c
 13367  01A530  6A31               	clrf	(btemp+11)^0,c
 13368                           
 13369                           ;stkvar	_toupper$6266 @ sp[(-2)+0]
 13370  01A532  0EFE               	movlw	-2
 13371  01A534  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 13372  01A53A  0EFF               	movlw	-1
 13373  01A53C  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 13374                           
 13375                           ;stkvar	_toupper$6266 @ sp[(-2)+0]
 13376  01A542  0EFE               	movlw	-2
 13377  01A544  006F FF8C  F026    	movff	plusw1,btemp
 13378  01A54A  0EFF               	movlw	-1
 13379  01A54C  50E3               	movf	plusw1,w,c
 13380  01A54E  1026               	iorwf	btemp^0,w,c
 13381  01A550  B4D8               	btfsc	status,2,c
 13382  01A552  D00D               	goto	l7965
 13383                           
 13384                           ;stkvar	_c @ sp[(-2)+-2]
 13385  01A554  0EFC               	movlw	-4
 13386  01A556  006F FF8C  F026    	movff	plusw1,btemp
 13387  01A55C  0EFD               	movlw	-3
 13388  01A55E  006F FF8C  F027    	movff	plusw1,btemp+1
 13389  01A564  0E5F               	movlw	95
 13390  01A566  1626               	andwf	btemp^0,f,c
 13391  01A568  0E00               	movlw	0
 13392  01A56A  1627               	andwf	(btemp+1)^0,f,c
 13393  01A56C  D008               	goto	l3480
 13394  01A56E                     l7965:
 13395                           
 13396                           ;stkvar	_c @ sp[(-2)+-2]
 13397  01A56E  0EFC               	movlw	-4
 13398  01A570  006F FF8C  F026    	movff	plusw1,btemp
 13399  01A576  0EFD               	movlw	-3
 13400  01A578  006F FF8C  F027    	movff	plusw1,btemp+1
 13401  01A57E                     l3480:
 13402                           
 13403                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13404  01A57E  52E5               	movf	postdec1,f,c
 13405  01A580  52E5               	movf	postdec1,f,c
 13406  01A582  52E5               	movf	postdec1,f,c
 13407  01A584  52E5               	movf	postdec1,f,c
 13408  01A586  0012               	return		;funcret
 13409  01A588                     __end_of_toupper:
 13410                           	opt callstack 0
 13411                           
 13412 ;; *************** function _islower *****************
 13413 ;; Defined at:
 13414 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 13415 ;; Parameters:    Size  Location     Type
 13416 ;;  c               2  [STACK] int 
 13417 ;; Auto vars:     Size  Location     Type
 13418 ;;		None
 13419 ;; Return value:  Size  Location     Type
 13420 ;;                  2  [STACK] int 
 13421 ;; Registers used:
 13422 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 13423 ;; Tracked objects:
 13424 ;;		On entry : 0/0
 13425 ;;		On exit  : 0/0
 13426 ;;		Unchanged: 0/0
 13427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13432 ;;Total ram usage:        0 bytes
 13433 ;; Hardware stack levels used:    1
 13434 ;; Hardware stack levels required when called:   15
 13435 ;; This function calls:
 13436 ;;		Nothing
 13437 ;; This function is called by:
 13438 ;;		_toupper
 13439 ;; This function uses a reentrant model
 13440 ;;
 13441                           
 13442                           	psect	text48
 13443  01B110                     __ptext48:
 13444                           	opt callstack 0
 13445  01B110                     _islower:
 13446                           	opt callstack 0
 13447                           
 13448                           ;stkvar	_c @ sp[(0)+-2]
 13449                           
 13450                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13451                           ;incstack = 0
 13452 ;; hardware stack exceeded
 13453  01B110  0EFE               	movlw	-2
 13454  01B112  50E3               	movf	plusw1,w,c
 13455  01B114  0F9F               	addlw	159
 13456  01B116  6E30               	movwf	(btemp+10)^0,c
 13457  01B118  0EFF               	movlw	-1
 13458  01B11A  006F FF8C  F031    	movff	plusw1,btemp+11
 13459  01B120  0EFF               	movlw	255
 13460  01B122  2231               	addwfc	(btemp+11)^0,f,c
 13461  01B124  5031               	movf	(btemp+11)^0,w,c
 13462  01B126  E106               	bnz	u5830
 13463  01B128  0E1A               	movlw	26
 13464  01B12A  5C30               	subwf	(btemp+10)^0,w,c
 13465  01B12C  B0D8               	btfsc	status,0,c
 13466  01B12E  D002               	goto	u5830
 13467  01B130  0E01               	movlw	1
 13468  01B132  D001               	goto	u5840
 13469  01B134                     u5830:
 13470  01B134  0E00               	movlw	0
 13471  01B136                     u5840:
 13472  01B136  6E26               	movwf	btemp^0,c
 13473  01B138  6A27               	clrf	(btemp+1)^0,c
 13474                           
 13475                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13476  01B13A  52E5               	movf	postdec1,f,c
 13477  01B13C  52E5               	movf	postdec1,f,c
 13478  01B13E  0012               	return		;funcret
 13479  01B140                     __end_of_islower:
 13480                           	opt callstack 0
 13481                           
 13482 ;; *************** function _isalpha *****************
 13483 ;; Defined at:
 13484 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 13485 ;; Parameters:    Size  Location     Type
 13486 ;;  c               2  [STACK] int 
 13487 ;; Auto vars:     Size  Location     Type
 13488 ;;		None
 13489 ;; Return value:  Size  Location     Type
 13490 ;;                  2  [STACK] int 
 13491 ;; Registers used:
 13492 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 13493 ;; Tracked objects:
 13494 ;;		On entry : 0/0
 13495 ;;		On exit  : 0/0
 13496 ;;		Unchanged: 0/0
 13497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13502 ;;Total ram usage:        0 bytes
 13503 ;; Hardware stack levels used:    1
 13504 ;; Hardware stack levels required when called:   15
 13505 ;; This function calls:
 13506 ;;		Nothing
 13507 ;; This function is called by:
 13508 ;;		_xtoa
 13509 ;; This function uses a reentrant model
 13510 ;;
 13511                           
 13512                           	psect	text49
 13513  01AD9E                     __ptext49:
 13514                           	opt callstack 0
 13515  01AD9E                     _isalpha:
 13516                           	opt callstack 0
 13517                           
 13518                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13519                           ;incstack = 0
 13520 ;; hardware stack exceeded
 13521  01AD9E  0E9F               	movlw	159
 13522  01ADA0  6E30               	movwf	(btemp+10)^0,c
 13523  01ADA2  0EFF               	movlw	255
 13524  01ADA4  6E31               	movwf	(btemp+11)^0,c
 13525                           
 13526                           ;stkvar	_c @ sp[(0)+-2]
 13527  01ADA6  0EFE               	movlw	-2
 13528  01ADA8  006F FF8C  F02E    	movff	plusw1,btemp+8
 13529  01ADAE  0EFF               	movlw	-1
 13530  01ADB0  006F FF8C  F02F    	movff	plusw1,btemp+9
 13531  01ADB6  0E20               	movlw	32
 13532  01ADB8  122E               	iorwf	(btemp+8)^0,f,c
 13533  01ADBA  0E00               	movlw	0
 13534  01ADBC  122F               	iorwf	(btemp+9)^0,f,c
 13535  01ADBE  5030               	movf	(btemp+10)^0,w,c
 13536  01ADC0  262E               	addwf	(btemp+8)^0,f,c
 13537  01ADC2  5031               	movf	(btemp+11)^0,w,c
 13538  01ADC4  222F               	addwfc	(btemp+9)^0,f,c
 13539  01ADC6  502F               	movf	(btemp+9)^0,w,c
 13540  01ADC8  E106               	bnz	u6120
 13541  01ADCA  0E1A               	movlw	26
 13542  01ADCC  5C2E               	subwf	(btemp+8)^0,w,c
 13543  01ADCE  B0D8               	btfsc	status,0,c
 13544  01ADD0  D002               	goto	u6120
 13545  01ADD2  0E01               	movlw	1
 13546  01ADD4  D001               	goto	u6130
 13547  01ADD6                     u6120:
 13548  01ADD6  0E00               	movlw	0
 13549  01ADD8                     u6130:
 13550  01ADD8  6E26               	movwf	btemp^0,c
 13551  01ADDA  6A27               	clrf	(btemp+1)^0,c
 13552                           
 13553                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13554  01ADDC  52E5               	movf	postdec1,f,c
 13555  01ADDE  52E5               	movf	postdec1,f,c
 13556  01ADE0  0012               	return		;funcret
 13557  01ADE2                     __end_of_isalpha:
 13558                           	opt callstack 0
 13559                           
 13560 ;; *************** function _utoa *****************
 13561 ;; Defined at:
 13562 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 13563 ;; Parameters:    Size  Location     Type
 13564 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13565 ;;		 -> f(6), NULL(0), 
 13566 ;;  d               8  [STACK] unsigned long long 
 13567 ;; Auto vars:     Size  Location     Type
 13568 ;;  n               8  [STACK] unsigned long long 
 13569 ;;  i               2  [STACK] int 
 13570 ;;  w               2  [STACK] int 
 13571 ;;  p               2  [STACK] int 
 13572 ;; Return value:  Size  Location     Type
 13573 ;;                  2  [STACK] int 
 13574 ;; Registers used:
 13575 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 13576 ;; Tracked objects:
 13577 ;;		On entry : 0/0
 13578 ;;		On exit  : 0/0
 13579 ;;		Unchanged: 0/0
 13580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13585 ;;Total ram usage:        0 bytes
 13586 ;; Hardware stack levels used:    1
 13587 ;; Hardware stack levels required when called:   20
 13588 ;; This function calls:
 13589 ;;		___lodiv
 13590 ;;		___lomod
 13591 ;;		_pad
 13592 ;; This function is called by:
 13593 ;;		_vfpfcnvrt
 13594 ;; This function uses a reentrant model
 13595 ;;
 13596                           
 13597                           	psect	text50
 13598  01631E                     __ptext50:
 13599                           	opt callstack 0
 13600  01631E                     _utoa:
 13601                           	opt callstack 0
 13602                           
 13603                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 13604  01631E  0E0E               	movlw	14
 13605  016320  26E1               	addwf	fsr1l,f,c
 13606  016322  0E00               	movlw	0
 13607  016324  22E2               	addwfc	fsr1h,f,c
 13608                           
 13609                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 13610                           
 13611                           ;incstack = 0
 13612 ;; hardware stack exceeded
 13613  016326  AE0D               	btfss	(_prec+1)^0,7,c
 13614                           
 13615                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 13616  016328  920E               	bcf	_flags^0,1,c
 13617                           
 13618                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 13619  01632A  BE0D               	btfsc	(_prec+1)^0,7,c
 13620  01632C  D005               	goto	u11560
 13621  01632E  500D               	movf	(_prec+1)^0,w,c
 13622  016330  E110               	bnz	l12109
 13623  016332  040C               	decf	_prec^0,w,c
 13624  016334  B0D8               	btfsc	status,0,c
 13625  016336  D00D               	goto	l12109
 13626  016338                     u11560:
 13627  016338  0E01               	movlw	1
 13628  01633A  6E30               	movwf	(btemp+10)^0,c
 13629  01633C  0E00               	movlw	0
 13630  01633E  6E31               	movwf	(btemp+11)^0,c
 13631                           
 13632                           ;stkvar	_p @ sp[(-14)+12]
 13633  016340  0EFE               	movlw	-2
 13634  016342  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 13635  016348  0EFF               	movlw	-1
 13636  01634A  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 13637  016350  D008               	goto	l2298
 13638  016352                     l12109:
 13639                           
 13640                           ;stkvar	_p @ sp[(-14)+12]
 13641  016352  0EFE               	movlw	-2
 13642  016354  0060  F033  FFE3   	movff	_prec,plusw1
 13643  01635A  0EFF               	movlw	-1
 13644  01635C  0060  F037  FFE3   	movff	_prec+1,plusw1
 13645  016362                     l2298:
 13646                           
 13647                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 13648                           ;stkvar	_w @ sp[(-14)+10]
 13649  016362  0EFC               	movlw	-4
 13650  016364  0060  F02B  FFE3   	movff	_width,plusw1
 13651  01636A  0EFD               	movlw	-3
 13652  01636C  0060  F02F  FFE3   	movff	_width+1,plusw1
 13653                           
 13654                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 13655                           ;stkvar	_d @ sp[(-14)+-10]
 13656  016372  0EE8               	movlw	232
 13657  016374  24E1               	addwf	fsr1l,w,c
 13658  016376  6ED9               	movwf	fsr2l,c
 13659  016378  0EFF               	movlw	255
 13660  01637A  20E2               	addwfc	fsr1h,w,c
 13661  01637C  6EDA               	movwf	fsr2h,c
 13662                           
 13663                           ;stkvar	_n @ sp[(-14)+0]
 13664  01637E  0E08               	movlw	8
 13665  016380  6E26               	movwf	btemp^0,c
 13666  016382  0EF2               	movlw	-14
 13667  016384                     us1157999:
 13668  016384  006F FF7B FFE3     	movff	postinc2,plusw1
 13669  01638A  28E8               	incf	wreg,w,c
 13670  01638C  2E26               	decfsz	btemp^0,f,c
 13671  01638E  D7FA               	bra	us1157999
 13672                           
 13673                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 13674  016390  0E4F               	movlw	79
 13675  016392  6E30               	movwf	(btemp+10)^0,c
 13676  016394  0E00               	movlw	0
 13677  016396  6E31               	movwf	(btemp+11)^0,c
 13678                           
 13679                           ;stkvar	_i @ sp[(-14)+8]
 13680  016398  0EFA               	movlw	-6
 13681  01639A  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 13682  0163A0  0EFB               	movlw	-5
 13683  0163A2  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 13684                           
 13685                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 13686  0163A8  0103               	movlb	3	; () banked
 13687  0163AA  6BFD               	clrf	(_dbuf+79)& (0+255),b
 13688                           
 13689                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 13690  0163AC  D0FB               	goto	l12127
 13691  0163AE                     l12117:
 13692                           
 13693                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 13694                           ;stkvar	_i @ sp[(-14)+8]
 13695  0163AE  50E1               	movf	fsr1l,w,c
 13696  0163B0  0FFA               	addlw	-6
 13697  0163B2  6ED9               	movwf	fsr2l,c
 13698  0163B4  50E2               	movf	fsr1h,w,c
 13699  0163B6  6EDA               	movwf	fsr2h,c
 13700  0163B8  0EFF               	movlw	255
 13701  0163BA  22DA               	addwfc	fsr2h,f,c
 13702  0163BC  06DE               	decf	postinc2,f,c
 13703  0163BE  0E00               	movlw	0
 13704  0163C0  5ADD               	subwfb	postdec2,f,c
 13705                           
 13706                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 13707  0163C2  0E0A               	movlw	10
 13708  0163C4  6EE6               	movwf	postinc1,c
 13709  0163C6  0E00               	movlw	0
 13710  0163C8  6EE6               	movwf	postinc1,c
 13711  0163CA  0E00               	movlw	0
 13712  0163CC  6EE6               	movwf	postinc1,c
 13713  0163CE  0E00               	movlw	0
 13714  0163D0  6EE6               	movwf	postinc1,c
 13715  0163D2  0E00               	movlw	0
 13716  0163D4  6EE6               	movwf	postinc1,c
 13717  0163D6  0E00               	movlw	0
 13718  0163D8  6EE6               	movwf	postinc1,c
 13719  0163DA  0E00               	movlw	0
 13720  0163DC  6EE6               	movwf	postinc1,c
 13721  0163DE  0E00               	movlw	0
 13722  0163E0  6EE6               	movwf	postinc1,c
 13723                           
 13724                           ;stkvar	_n @ sp[(-22)+0]
 13725  0163E2  50E1               	movf	fsr1l,w,c
 13726  0163E4  0FEA               	addlw	-22
 13727  0163E6  6ED9               	movwf	fsr2l,c
 13728  0163E8  50E2               	movf	fsr1h,w,c
 13729  0163EA  6EDA               	movwf	fsr2h,c
 13730  0163EC  0EFF               	movlw	255
 13731  0163EE  22DA               	addwfc	fsr2h,f,c
 13732  0163F0  006F FF7B FFE6     	movff	postinc2,postinc1
 13733  0163F6  006F FF7B FFE6     	movff	postinc2,postinc1
 13734  0163FC  006F FF7B FFE6     	movff	postinc2,postinc1
 13735  016402  006F FF7B FFE6     	movff	postinc2,postinc1
 13736  016408  006F FF7B FFE6     	movff	postinc2,postinc1
 13737  01640E  006F FF7B FFE6     	movff	postinc2,postinc1
 13738  016414  006F FF7B FFE6     	movff	postinc2,postinc1
 13739  01641A  006F FF7B FFE6     	movff	postinc2,postinc1
 13740  016420  ECB4  F0C5         	call	___lomod	;wreg free
 13741  016424  52E5               	movf	postdec1,f,c
 13742  016426  006F FF9C  F03D    	movff	indf1,btemp+23
 13743  01642C  52E5               	movf	postdec1,f,c
 13744  01642E  006F FF9C  F03C    	movff	indf1,btemp+22
 13745  016434  52E5               	movf	postdec1,f,c
 13746  016436  006F FF9C  F03B    	movff	indf1,btemp+21
 13747  01643C  52E5               	movf	postdec1,f,c
 13748  01643E  006F FF9C  F03A    	movff	indf1,btemp+20
 13749  016444  52E5               	movf	postdec1,f,c
 13750  016446  006F FF9C  F039    	movff	indf1,btemp+19
 13751  01644C  52E5               	movf	postdec1,f,c
 13752  01644E  006F FF9C  F038    	movff	indf1,btemp+18
 13753  016454  52E5               	movf	postdec1,f,c
 13754  016456  006F FF9C  F037    	movff	indf1,btemp+17
 13755  01645C  52E5               	movf	postdec1,f,c
 13756  01645E  006F FF9C  F036    	movff	indf1,btemp+16
 13757  016464  0EF8               	movlw	248
 13758  016466  26E1               	addwf	fsr1l,f,c
 13759  016468  0EFF               	movlw	255
 13760  01646A  22E2               	addwfc	fsr1h,f,c
 13761  01646C  0E30               	movlw	48
 13762  01646E  2636               	addwf	(btemp+16)^0,f,c
 13763                           
 13764                           ;stkvar	_i @ sp[(-14)+8]
 13765  016470  0EFA               	movlw	-6
 13766  016472  006F FF8C  F030    	movff	plusw1,btemp+10
 13767  016478  0EFB               	movlw	-5
 13768  01647A  006F FF8C  F031    	movff	plusw1,btemp+11
 13769  016480  0EAE               	movlw	low _dbuf
 13770  016482  2430               	addwf	(btemp+10)^0,w,c
 13771  016484  6ED9               	movwf	fsr2l,c
 13772  016486  0E03               	movlw	high _dbuf
 13773  016488  2031               	addwfc	(btemp+11)^0,w,c
 13774  01648A  6EDA               	movwf	fsr2h,c
 13775  01648C  0060  F0DB  FFDF   	movff	btemp+16,indf2
 13776                           
 13777                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 13778                           ;stkvar	_p @ sp[(-14)+12]
 13779  016492  50E1               	movf	fsr1l,w,c
 13780  016494  0FFE               	addlw	-2
 13781  016496  6ED9               	movwf	fsr2l,c
 13782  016498  50E2               	movf	fsr1h,w,c
 13783  01649A  6EDA               	movwf	fsr2h,c
 13784  01649C  0EFF               	movlw	255
 13785  01649E  22DA               	addwfc	fsr2h,f,c
 13786  0164A0  06DE               	decf	postinc2,f,c
 13787  0164A2  0E00               	movlw	0
 13788  0164A4  5ADD               	subwfb	postdec2,f,c
 13789                           
 13790                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 13791                           ;stkvar	_w @ sp[(-14)+10]
 13792  0164A6  50E1               	movf	fsr1l,w,c
 13793  0164A8  0FFC               	addlw	-4
 13794  0164AA  6ED9               	movwf	fsr2l,c
 13795  0164AC  50E2               	movf	fsr1h,w,c
 13796  0164AE  6EDA               	movwf	fsr2h,c
 13797  0164B0  0EFF               	movlw	255
 13798  0164B2  22DA               	addwfc	fsr2h,f,c
 13799  0164B4  06DE               	decf	postinc2,f,c
 13800  0164B6  0E00               	movlw	0
 13801  0164B8  5ADD               	subwfb	postdec2,f,c
 13802                           
 13803                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 13804  0164BA  0E0A               	movlw	10
 13805  0164BC  6EE6               	movwf	postinc1,c
 13806  0164BE  0E00               	movlw	0
 13807  0164C0  6EE6               	movwf	postinc1,c
 13808  0164C2  0E00               	movlw	0
 13809  0164C4  6EE6               	movwf	postinc1,c
 13810  0164C6  0E00               	movlw	0
 13811  0164C8  6EE6               	movwf	postinc1,c
 13812  0164CA  0E00               	movlw	0
 13813  0164CC  6EE6               	movwf	postinc1,c
 13814  0164CE  0E00               	movlw	0
 13815  0164D0  6EE6               	movwf	postinc1,c
 13816  0164D2  0E00               	movlw	0
 13817  0164D4  6EE6               	movwf	postinc1,c
 13818  0164D6  0E00               	movlw	0
 13819  0164D8  6EE6               	movwf	postinc1,c
 13820                           
 13821                           ;stkvar	_n @ sp[(-22)+0]
 13822  0164DA  50E1               	movf	fsr1l,w,c
 13823  0164DC  0FEA               	addlw	-22
 13824  0164DE  6ED9               	movwf	fsr2l,c
 13825  0164E0  50E2               	movf	fsr1h,w,c
 13826  0164E2  6EDA               	movwf	fsr2h,c
 13827  0164E4  0EFF               	movlw	255
 13828  0164E6  22DA               	addwfc	fsr2h,f,c
 13829  0164E8  006F FF7B FFE6     	movff	postinc2,postinc1
 13830  0164EE  006F FF7B FFE6     	movff	postinc2,postinc1
 13831  0164F4  006F FF7B FFE6     	movff	postinc2,postinc1
 13832  0164FA  006F FF7B FFE6     	movff	postinc2,postinc1
 13833  016500  006F FF7B FFE6     	movff	postinc2,postinc1
 13834  016506  006F FF7B FFE6     	movff	postinc2,postinc1
 13835  01650C  006F FF7B FFE6     	movff	postinc2,postinc1
 13836  016512  006F FF7B FFE6     	movff	postinc2,postinc1
 13837  016518  ECC2  F0C0         	call	___lodiv	;wreg free
 13838  01651C  52E5               	movf	postdec1,f,c
 13839  01651E  006F FF9C  F03D    	movff	indf1,btemp+23
 13840  016524  52E5               	movf	postdec1,f,c
 13841  016526  006F FF9C  F03C    	movff	indf1,btemp+22
 13842  01652C  52E5               	movf	postdec1,f,c
 13843  01652E  006F FF9C  F03B    	movff	indf1,btemp+21
 13844  016534  52E5               	movf	postdec1,f,c
 13845  016536  006F FF9C  F03A    	movff	indf1,btemp+20
 13846  01653C  52E5               	movf	postdec1,f,c
 13847  01653E  006F FF9C  F039    	movff	indf1,btemp+19
 13848  016544  52E5               	movf	postdec1,f,c
 13849  016546  006F FF9C  F038    	movff	indf1,btemp+18
 13850  01654C  52E5               	movf	postdec1,f,c
 13851  01654E  006F FF9C  F037    	movff	indf1,btemp+17
 13852  016554  52E5               	movf	postdec1,f,c
 13853  016556  006F FF9C  F036    	movff	indf1,btemp+16
 13854  01655C  0EF8               	movlw	248
 13855  01655E  26E1               	addwf	fsr1l,f,c
 13856  016560  0EFF               	movlw	255
 13857  016562  22E2               	addwfc	fsr1h,f,c
 13858                           
 13859                           ;stkvar	_n @ sp[(-14)+0]
 13860  016564  0EF2               	movlw	-14
 13861  016566  0060  F0DB  FFE3   	movff	btemp+16,plusw1
 13862  01656C  0EF3               	movlw	-13
 13863  01656E  0060  F0DF  FFE3   	movff	btemp+17,plusw1
 13864  016574  0EF4               	movlw	-12
 13865  016576  0060  F0E3  FFE3   	movff	btemp+18,plusw1
 13866  01657C  0EF5               	movlw	-11
 13867  01657E  0060  F0E7  FFE3   	movff	btemp+19,plusw1
 13868  016584  0EF6               	movlw	-10
 13869  016586  0060  F0EB  FFE3   	movff	btemp+20,plusw1
 13870  01658C  0EF7               	movlw	-9
 13871  01658E  0060  F0EF  FFE3   	movff	btemp+21,plusw1
 13872  016594  0EF8               	movlw	-8
 13873  016596  0060  F0F3  FFE3   	movff	btemp+22,plusw1
 13874  01659C  0EF9               	movlw	-7
 13875  01659E  0060  F0F7  FFE3   	movff	btemp+23,plusw1
 13876  0165A4                     l12127:
 13877                           
 13878                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 13879                           ;stkvar	_i @ sp[(-14)+8]
 13880  0165A4  0EFA               	movlw	-6
 13881  0165A6  006F FF8C  F026    	movff	plusw1,btemp
 13882  0165AC  0EFB               	movlw	-5
 13883  0165AE  50E3               	movf	plusw1,w,c
 13884  0165B0  1026               	iorwf	btemp^0,w,c
 13885  0165B2  B4D8               	btfsc	status,2,c
 13886  0165B4  D02F               	goto	u11620
 13887                           
 13888                           ;stkvar	_n @ sp[(-14)+0]
 13889  0165B6  0EF2               	movlw	-14
 13890  0165B8  50E3               	movf	plusw1,w,c
 13891  0165BA  E115               	bnz	u11591
 13892  0165BC  0EF3               	movlw	-13
 13893  0165BE  50E3               	movf	plusw1,w,c
 13894  0165C0  E112               	bnz	u11591
 13895  0165C2  0EF4               	movlw	-12
 13896  0165C4  50E3               	movf	plusw1,w,c
 13897  0165C6  E10F               	bnz	u11591
 13898  0165C8  0EF5               	movlw	-11
 13899  0165CA  50E3               	movf	plusw1,w,c
 13900  0165CC  E10C               	bnz	u11591
 13901  0165CE  0EF6               	movlw	-10
 13902  0165D0  50E3               	movf	plusw1,w,c
 13903  0165D2  E109               	bnz	u11591
 13904  0165D4  0EF7               	movlw	-9
 13905  0165D6  50E3               	movf	plusw1,w,c
 13906  0165D8  E106               	bnz	u11591
 13907  0165DA  0EF8               	movlw	-8
 13908  0165DC  50E3               	movf	plusw1,w,c
 13909  0165DE  E103               	bnz	u11591
 13910  0165E0  0EF9               	movlw	-7
 13911  0165E2  50E3               	movf	plusw1,w,c
 13912  0165E4  A4D8               	btfss	status,2,c
 13913  0165E6                     u11591:
 13914  0165E6  D6E3               	goto	l12117
 13915                           
 13916                           ;stkvar	_p @ sp[(-14)+12]
 13917  0165E8  0EFF               	movlw	-1
 13918  0165EA  BEE3               	btfsc	plusw1,7,c
 13919  0165EC  D007               	goto	u11600
 13920  0165EE  0EFF               	movlw	-1
 13921  0165F0  50E3               	movf	plusw1,w,c
 13922  0165F2  E103               	bnz	u11601
 13923  0165F4  0EFE               	movlw	-2
 13924  0165F6  04E3               	decf	plusw1,w,c
 13925  0165F8  B0D8               	btfsc	status,0,c
 13926  0165FA                     u11601:
 13927  0165FA  D6D9               	goto	l12117
 13928  0165FC                     u11600:
 13929                           
 13930                           ;stkvar	_w @ sp[(-14)+10]
 13931  0165FC  0EFD               	movlw	-3
 13932  0165FE  BEE3               	btfsc	plusw1,7,c
 13933  016600  D009               	goto	u11620
 13934  016602  0EFD               	movlw	-3
 13935  016604  50E3               	movf	plusw1,w,c
 13936  016606  E104               	bnz	u11610
 13937  016608  0EFC               	movlw	-4
 13938  01660A  04E3               	decf	plusw1,w,c
 13939  01660C  A0D8               	btfss	status,0,c
 13940  01660E  D002               	goto	u11620
 13941  016610                     u11610:
 13942  016610  B20E               	btfsc	_flags^0,1,c
 13943  016612  D6CD               	goto	l12117
 13944  016614                     u11620:
 13945                           
 13946                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 13947                           ;stkvar	_w @ sp[(-14)+10]
 13948  016614  0EFC               	movlw	-4
 13949  016616  006F FF8F FFE6     	movff	plusw1,postinc1
 13950  01661C  006F FF8F FFE6     	movff	plusw1,postinc1
 13951                           
 13952                           ;stkvar	_i @ sp[(-16)+8]
 13953  016622  0EAE               	movlw	low _dbuf
 13954  016624  6E30               	movwf	(btemp+10)^0,c
 13955  016626  0E03               	movlw	high _dbuf
 13956  016628  6E31               	movwf	(btemp+11)^0,c
 13957  01662A  0EF8               	movlw	-8
 13958  01662C  50E3               	movf	plusw1,w,c
 13959  01662E  2630               	addwf	(btemp+10)^0,f,c
 13960  016630  0EF9               	movlw	-7
 13961  016632  50E3               	movf	plusw1,w,c
 13962  016634  2231               	addwfc	(btemp+11)^0,f,c
 13963  016636  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 13964  01663C  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 13965                           
 13966                           ;stkvar	_fp @ sp[(-18)+-2]
 13967  016642  0EEC               	movlw	-20
 13968  016644  006F FF8F FFE6     	movff	plusw1,postinc1
 13969  01664A  006F FF8F FFE6     	movff	plusw1,postinc1
 13970  016650  ECA9  F0C8         	call	_pad	;wreg free
 13971                           
 13972                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 13973  016654  0EE8               	movlw	232
 13974  016656  26E1               	addwf	fsr1l,f,c
 13975  016658  0EFF               	movlw	255
 13976  01665A  22E2               	addwfc	fsr1h,f,c
 13977  01665C  0012               	return		;funcret
 13978  01665E                     __end_of_utoa:
 13979                           	opt callstack 0
 13980                           
 13981 ;; *************** function ___lomod *****************
 13982 ;; Defined at:
 13983 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 13984 ;; Parameters:    Size  Location     Type
 13985 ;;  dividend        8  [STACK] unsigned long long 
 13986 ;;  divisor         8  [STACK] unsigned long long 
 13987 ;; Auto vars:     Size  Location     Type
 13988 ;;  counter         1  [STACK] unsigned char 
 13989 ;; Return value:  Size  Location     Type
 13990 ;;                  8  [STACK] unsigned long long 
 13991 ;; Registers used:
 13992 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 13993 ;; Tracked objects:
 13994 ;;		On entry : 0/3
 13995 ;;		On exit  : 0/0
 13996 ;;		Unchanged: 0/0
 13997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14002 ;;Total ram usage:        0 bytes
 14003 ;; Hardware stack levels used:    1
 14004 ;; Hardware stack levels required when called:   15
 14005 ;; This function calls:
 14006 ;;		Nothing
 14007 ;; This function is called by:
 14008 ;;		_utoa
 14009 ;; This function uses a reentrant model
 14010 ;;
 14011                           
 14012                           	psect	text51
 14013  018B68                     __ptext51:
 14014                           	opt callstack 0
 14015  018B68                     ___lomod:
 14016                           	opt callstack 0
 14017                           
 14018                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 14019  018B68  52E6               	movf	postinc1,f,c
 14020                           
 14021                           ;stkvar	_divisor @ sp[(-1)+-16]
 14022                           
 14023                           ;incstack = 0
 14024 ;; hardware stack exceeded
 14025  018B6A  0EEF               	movlw	-17
 14026  018B6C  50E3               	movf	plusw1,w,c
 14027  018B6E  E116               	bnz	u7270
 14028  018B70  0EF0               	movlw	-16
 14029  018B72  50E3               	movf	plusw1,w,c
 14030  018B74  E113               	bnz	u7270
 14031  018B76  0EF1               	movlw	-15
 14032  018B78  50E3               	movf	plusw1,w,c
 14033  018B7A  E110               	bnz	u7270
 14034  018B7C  0EF2               	movlw	-14
 14035  018B7E  50E3               	movf	plusw1,w,c
 14036  018B80  E10D               	bnz	u7270
 14037  018B82  0EF3               	movlw	-13
 14038  018B84  50E3               	movf	plusw1,w,c
 14039  018B86  E10A               	bnz	u7270
 14040  018B88  0EF4               	movlw	-12
 14041  018B8A  50E3               	movf	plusw1,w,c
 14042  018B8C  E107               	bnz	u7270
 14043  018B8E  0EF5               	movlw	-11
 14044  018B90  50E3               	movf	plusw1,w,c
 14045  018B92  E104               	bnz	u7270
 14046  018B94  0EF6               	movlw	-10
 14047  018B96  50E3               	movf	plusw1,w,c
 14048  018B98  B4D8               	btfsc	status,2,c
 14049  018B9A  D075               	goto	u7300
 14050  018B9C                     u7270:
 14051                           
 14052                           ;stkvar	_counter @ sp[(-1)+0]
 14053  018B9C  0EFF               	movlw	-1
 14054  018B9E  6AE3               	clrf	plusw1,c
 14055  018BA0  D012               	goto	L14
 14056  018BA2                     l8575:
 14057                           
 14058                           ;stkvar	_divisor @ sp[(-1)+-16]
 14059  018BA2  90D8               	bcf	status,0,c
 14060  018BA4  0EEF               	movlw	-17
 14061  018BA6  36E3               	rlcf	plusw1,f,c
 14062  018BA8  0EF0               	movlw	-16
 14063  018BAA  36E3               	rlcf	plusw1,f,c
 14064  018BAC  0EF1               	movlw	-15
 14065  018BAE  36E3               	rlcf	plusw1,f,c
 14066  018BB0  0EF2               	movlw	-14
 14067  018BB2  36E3               	rlcf	plusw1,f,c
 14068  018BB4  0EF3               	movlw	-13
 14069  018BB6  36E3               	rlcf	plusw1,f,c
 14070  018BB8  0EF4               	movlw	-12
 14071  018BBA  36E3               	rlcf	plusw1,f,c
 14072  018BBC  0EF5               	movlw	-11
 14073  018BBE  36E3               	rlcf	plusw1,f,c
 14074  018BC0  0EF6               	movlw	-10
 14075  018BC2  36E3               	rlcf	plusw1,f,c
 14076                           
 14077                           ;stkvar	_counter @ sp[(-1)+0]
 14078  018BC4  0EFF               	movlw	-1
 14079  018BC6                     L14:
 14080  018BC6  2AE3               	incf	plusw1,f,c
 14081                           
 14082                           ;stkvar	_divisor @ sp[(-1)+-16]
 14083  018BC8  0EF6               	movlw	-10
 14084  018BCA  AEE3               	btfss	plusw1,7,c
 14085  018BCC  D7EA               	goto	l8575
 14086  018BCE                     u7280:
 14087                           
 14088                           ;stkvar	_divisor @ sp[(-1)+-16]
 14089                           ;stkvar	_dividend @ sp[(-1)+-8]
 14090  018BCE  50E1               	movf	fsr1l,w,c
 14091  018BD0  0FF7               	addlw	-9
 14092  018BD2  6ED9               	movwf	fsr2l,c
 14093  018BD4  50E2               	movf	fsr1h,w,c
 14094  018BD6  6EDA               	movwf	fsr2h,c
 14095  018BD8  0EFF               	movlw	255
 14096  018BDA  22DA               	addwfc	fsr2h,f,c
 14097  018BDC  0EEF               	movlw	-17
 14098  018BDE  50E3               	movf	plusw1,w,c
 14099  018BE0  5CDE               	subwf	postinc2,w,c
 14100  018BE2  0EF0               	movlw	-16
 14101  018BE4  50E3               	movf	plusw1,w,c
 14102  018BE6  58DE               	subwfb	postinc2,w,c
 14103  018BE8  0EF1               	movlw	-15
 14104  018BEA  50E3               	movf	plusw1,w,c
 14105  018BEC  58DE               	subwfb	postinc2,w,c
 14106  018BEE  0EF2               	movlw	-14
 14107  018BF0  50E3               	movf	plusw1,w,c
 14108  018BF2  58DE               	subwfb	postinc2,w,c
 14109  018BF4  0EF3               	movlw	-13
 14110  018BF6  50E3               	movf	plusw1,w,c
 14111  018BF8  58DE               	subwfb	postinc2,w,c
 14112  018BFA  0EF4               	movlw	-12
 14113  018BFC  50E3               	movf	plusw1,w,c
 14114  018BFE  58DE               	subwfb	postinc2,w,c
 14115  018C00  0EF5               	movlw	-11
 14116  018C02  50E3               	movf	plusw1,w,c
 14117  018C04  58DE               	subwfb	postinc2,w,c
 14118  018C06  0EF6               	movlw	-10
 14119  018C08  50E3               	movf	plusw1,w,c
 14120  018C0A  58DE               	subwfb	postinc2,w,c
 14121  018C0C  A0D8               	btfss	status,0,c
 14122  018C0E  D01F               	goto	l8583
 14123                           
 14124                           ;stkvar	_divisor @ sp[(-1)+-16]
 14125                           ;stkvar	_dividend @ sp[(-1)+-8]
 14126  018C10  50E1               	movf	fsr1l,w,c
 14127  018C12  0FF7               	addlw	-9
 14128  018C14  6ED9               	movwf	fsr2l,c
 14129  018C16  50E2               	movf	fsr1h,w,c
 14130  018C18  6EDA               	movwf	fsr2h,c
 14131  018C1A  0EFF               	movlw	255
 14132  018C1C  22DA               	addwfc	fsr2h,f,c
 14133  018C1E  0EEF               	movlw	-17
 14134  018C20  50E3               	movf	plusw1,w,c
 14135  018C22  5EDE               	subwf	postinc2,f,c
 14136  018C24  0EF0               	movlw	-16
 14137  018C26  50E3               	movf	plusw1,w,c
 14138  018C28  5ADE               	subwfb	postinc2,f,c
 14139  018C2A  0EF1               	movlw	-15
 14140  018C2C  50E3               	movf	plusw1,w,c
 14141  018C2E  5ADE               	subwfb	postinc2,f,c
 14142  018C30  0EF2               	movlw	-14
 14143  018C32  50E3               	movf	plusw1,w,c
 14144  018C34  5ADE               	subwfb	postinc2,f,c
 14145  018C36  0EF3               	movlw	-13
 14146  018C38  50E3               	movf	plusw1,w,c
 14147  018C3A  5ADE               	subwfb	postinc2,f,c
 14148  018C3C  0EF4               	movlw	-12
 14149  018C3E  50E3               	movf	plusw1,w,c
 14150  018C40  5ADE               	subwfb	postinc2,f,c
 14151  018C42  0EF5               	movlw	-11
 14152  018C44  50E3               	movf	plusw1,w,c
 14153  018C46  5ADE               	subwfb	postinc2,f,c
 14154  018C48  0EF6               	movlw	-10
 14155  018C4A  50E3               	movf	plusw1,w,c
 14156  018C4C  5ADE               	subwfb	postinc2,f,c
 14157  018C4E                     l8583:
 14158                           
 14159                           ;stkvar	_divisor @ sp[(-1)+-16]
 14160  018C4E  90D8               	bcf	status,0,c
 14161  018C50  0EF6               	movlw	-10
 14162  018C52  32E3               	rrcf	plusw1,f,c
 14163  018C54  0EF5               	movlw	-11
 14164  018C56  32E3               	rrcf	plusw1,f,c
 14165  018C58  0EF4               	movlw	-12
 14166  018C5A  32E3               	rrcf	plusw1,f,c
 14167  018C5C  0EF3               	movlw	-13
 14168  018C5E  32E3               	rrcf	plusw1,f,c
 14169  018C60  0EF2               	movlw	-14
 14170  018C62  32E3               	rrcf	plusw1,f,c
 14171  018C64  0EF1               	movlw	-15
 14172  018C66  32E3               	rrcf	plusw1,f,c
 14173  018C68  0EF0               	movlw	-16
 14174  018C6A  32E3               	rrcf	plusw1,f,c
 14175  018C6C  0EEF               	movlw	-17
 14176  018C6E  32E3               	rrcf	plusw1,f,c
 14177                           
 14178                           ;stkvar	_counter @ sp[(-1)+0]
 14179  018C70  0EFF               	movlw	-1
 14180  018C72  50E3               	movf	plusw1,w,c
 14181  018C74  6E26               	movwf	btemp^0,c
 14182  018C76  0E01               	movlw	1
 14183  018C78  5E26               	subwf	btemp^0,f,c
 14184  018C7A  0EFF               	movlw	-1
 14185  018C7C  0060  F09B  FFE3   	movff	btemp,plusw1
 14186  018C82  A4D8               	btfss	status,2,c
 14187  018C84  D7A4               	goto	u7280
 14188  018C86                     u7300:
 14189                           
 14190                           ;stkvar	_dividend @ sp[(-1)+-8]
 14191  018C86  0EF7               	movlw	247
 14192  018C88  24E1               	addwf	fsr1l,w,c
 14193  018C8A  6ED9               	movwf	fsr2l,c
 14194  018C8C  0EFF               	movlw	255
 14195  018C8E  20E2               	addwfc	fsr1h,w,c
 14196  018C90  6EDA               	movwf	fsr2h,c
 14197                           
 14198                           ;stkvar	?___lomod @ sp[(-1)+-8]
 14199  018C92  0E08               	movlw	8
 14200  018C94  6E26               	movwf	btemp^0,c
 14201  018C96  0EF7               	movlw	-9
 14202  018C98                     us731999:
 14203  018C98  006F FF7B FFE3     	movff	postinc2,plusw1
 14204  018C9E  28E8               	incf	wreg,w,c
 14205  018CA0  2E26               	decfsz	btemp^0,f,c
 14206  018CA2  D7FA               	bra	us731999
 14207                           
 14208                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 14209  018CA4  52E5               	movf	postdec1,f,c
 14210  018CA6  0012               	return		;funcret
 14211  018CA8                     __end_of___lomod:
 14212                           	opt callstack 0
 14213                           
 14214 ;; *************** function ___lodiv *****************
 14215 ;; Defined at:
 14216 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 14217 ;; Parameters:    Size  Location     Type
 14218 ;;  dividend        8  [STACK] unsigned long long 
 14219 ;;  divisor         8  [STACK] unsigned long long 
 14220 ;; Auto vars:     Size  Location     Type
 14221 ;;  quotient        8  [STACK] unsigned long long 
 14222 ;;  counter         1  [STACK] unsigned char 
 14223 ;; Return value:  Size  Location     Type
 14224 ;;                  8  [STACK] unsigned long long 
 14225 ;; Registers used:
 14226 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 14227 ;; Tracked objects:
 14228 ;;		On entry : 0/3
 14229 ;;		On exit  : 0/0
 14230 ;;		Unchanged: 0/0
 14231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14236 ;;Total ram usage:        0 bytes
 14237 ;; Hardware stack levels used:    1
 14238 ;; Hardware stack levels required when called:   15
 14239 ;; This function calls:
 14240 ;;		Nothing
 14241 ;; This function is called by:
 14242 ;;		_utoa
 14243 ;; This function uses a reentrant model
 14244 ;;
 14245                           
 14246                           	psect	text52
 14247  018184                     __ptext52:
 14248                           	opt callstack 0
 14249  018184                     ___lodiv:
 14250                           	opt callstack 0
 14251                           
 14252                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 14253  018184  0E09               	movlw	9
 14254  018186  26E1               	addwf	fsr1l,f,c
 14255  018188  0E00               	movlw	0
 14256  01818A  22E2               	addwfc	fsr1h,f,c
 14257                           
 14258                           ;stkvar	_quotient @ sp[(-9)+0]
 14259                           
 14260                           ;incstack = 0
 14261 ;; hardware stack exceeded
 14262  01818C  0E07               	movlw	7
 14263  01818E  6E26               	movwf	btemp^0,c
 14264  018190  0EF7               	movlw	-9
 14265  018192                     u7211:
 14266  018192  6AE3               	clrf	plusw1,c
 14267  018194  2AE8               	incf	wreg,f,c
 14268  018196  0626               	decf	btemp^0,f,c
 14269  018198  E2FC               	bc	u7211
 14270                           
 14271                           ;stkvar	_divisor @ sp[(-9)+-16]
 14272  01819A  0EE7               	movlw	-25
 14273  01819C  50E3               	movf	plusw1,w,c
 14274  01819E  E116               	bnz	u7220
 14275  0181A0  0EE8               	movlw	-24
 14276  0181A2  50E3               	movf	plusw1,w,c
 14277  0181A4  E113               	bnz	u7220
 14278  0181A6  0EE9               	movlw	-23
 14279  0181A8  50E3               	movf	plusw1,w,c
 14280  0181AA  E110               	bnz	u7220
 14281  0181AC  0EEA               	movlw	-22
 14282  0181AE  50E3               	movf	plusw1,w,c
 14283  0181B0  E10D               	bnz	u7220
 14284  0181B2  0EEB               	movlw	-21
 14285  0181B4  50E3               	movf	plusw1,w,c
 14286  0181B6  E10A               	bnz	u7220
 14287  0181B8  0EEC               	movlw	-20
 14288  0181BA  50E3               	movf	plusw1,w,c
 14289  0181BC  E107               	bnz	u7220
 14290  0181BE  0EED               	movlw	-19
 14291  0181C0  50E3               	movf	plusw1,w,c
 14292  0181C2  E104               	bnz	u7220
 14293  0181C4  0EEE               	movlw	-18
 14294  0181C6  50E3               	movf	plusw1,w,c
 14295  0181C8  B4D8               	btfsc	status,2,c
 14296  0181CA  D088               	goto	u7250
 14297  0181CC                     u7220:
 14298                           
 14299                           ;stkvar	_counter @ sp[(-9)+8]
 14300  0181CC  0EFF               	movlw	-1
 14301  0181CE  6AE3               	clrf	plusw1,c
 14302  0181D0  D012               	goto	L15
 14303  0181D2                     l8551:
 14304                           
 14305                           ;stkvar	_divisor @ sp[(-9)+-16]
 14306  0181D2  90D8               	bcf	status,0,c
 14307  0181D4  0EE7               	movlw	-25
 14308  0181D6  36E3               	rlcf	plusw1,f,c
 14309  0181D8  0EE8               	movlw	-24
 14310  0181DA  36E3               	rlcf	plusw1,f,c
 14311  0181DC  0EE9               	movlw	-23
 14312  0181DE  36E3               	rlcf	plusw1,f,c
 14313  0181E0  0EEA               	movlw	-22
 14314  0181E2  36E3               	rlcf	plusw1,f,c
 14315  0181E4  0EEB               	movlw	-21
 14316  0181E6  36E3               	rlcf	plusw1,f,c
 14317  0181E8  0EEC               	movlw	-20
 14318  0181EA  36E3               	rlcf	plusw1,f,c
 14319  0181EC  0EED               	movlw	-19
 14320  0181EE  36E3               	rlcf	plusw1,f,c
 14321  0181F0  0EEE               	movlw	-18
 14322  0181F2  36E3               	rlcf	plusw1,f,c
 14323                           
 14324                           ;stkvar	_counter @ sp[(-9)+8]
 14325  0181F4  0EFF               	movlw	-1
 14326  0181F6                     L15:
 14327  0181F6  2AE3               	incf	plusw1,f,c
 14328                           
 14329                           ;stkvar	_divisor @ sp[(-9)+-16]
 14330  0181F8  0EEE               	movlw	-18
 14331  0181FA  AEE3               	btfss	plusw1,7,c
 14332  0181FC  D7EA               	goto	l8551
 14333  0181FE                     u7230:
 14334                           
 14335                           ;stkvar	_quotient @ sp[(-9)+0]
 14336  0181FE  90D8               	bcf	status,0,c
 14337  018200  0EF7               	movlw	-9
 14338  018202  36E3               	rlcf	plusw1,f,c
 14339  018204  0EF8               	movlw	-8
 14340  018206  36E3               	rlcf	plusw1,f,c
 14341  018208  0EF9               	movlw	-7
 14342  01820A  36E3               	rlcf	plusw1,f,c
 14343  01820C  0EFA               	movlw	-6
 14344  01820E  36E3               	rlcf	plusw1,f,c
 14345  018210  0EFB               	movlw	-5
 14346  018212  36E3               	rlcf	plusw1,f,c
 14347  018214  0EFC               	movlw	-4
 14348  018216  36E3               	rlcf	plusw1,f,c
 14349  018218  0EFD               	movlw	-3
 14350  01821A  36E3               	rlcf	plusw1,f,c
 14351  01821C  0EFE               	movlw	-2
 14352  01821E  36E3               	rlcf	plusw1,f,c
 14353                           
 14354                           ;stkvar	_divisor @ sp[(-9)+-16]
 14355                           ;stkvar	_dividend @ sp[(-9)+-8]
 14356  018220  50E1               	movf	fsr1l,w,c
 14357  018222  0FEF               	addlw	-17
 14358  018224  6ED9               	movwf	fsr2l,c
 14359  018226  50E2               	movf	fsr1h,w,c
 14360  018228  6EDA               	movwf	fsr2h,c
 14361  01822A  0EFF               	movlw	255
 14362  01822C  22DA               	addwfc	fsr2h,f,c
 14363  01822E  0EE7               	movlw	-25
 14364  018230  50E3               	movf	plusw1,w,c
 14365  018232  5CDE               	subwf	postinc2,w,c
 14366  018234  0EE8               	movlw	-24
 14367  018236  50E3               	movf	plusw1,w,c
 14368  018238  58DE               	subwfb	postinc2,w,c
 14369  01823A  0EE9               	movlw	-23
 14370  01823C  50E3               	movf	plusw1,w,c
 14371  01823E  58DE               	subwfb	postinc2,w,c
 14372  018240  0EEA               	movlw	-22
 14373  018242  50E3               	movf	plusw1,w,c
 14374  018244  58DE               	subwfb	postinc2,w,c
 14375  018246  0EEB               	movlw	-21
 14376  018248  50E3               	movf	plusw1,w,c
 14377  01824A  58DE               	subwfb	postinc2,w,c
 14378  01824C  0EEC               	movlw	-20
 14379  01824E  50E3               	movf	plusw1,w,c
 14380  018250  58DE               	subwfb	postinc2,w,c
 14381  018252  0EED               	movlw	-19
 14382  018254  50E3               	movf	plusw1,w,c
 14383  018256  58DE               	subwfb	postinc2,w,c
 14384  018258  0EEE               	movlw	-18
 14385  01825A  50E3               	movf	plusw1,w,c
 14386  01825C  58DE               	subwfb	postinc2,w,c
 14387  01825E  A0D8               	btfss	status,0,c
 14388  018260  D021               	goto	l8563
 14389                           
 14390                           ;stkvar	_divisor @ sp[(-9)+-16]
 14391                           ;stkvar	_dividend @ sp[(-9)+-8]
 14392  018262  50E1               	movf	fsr1l,w,c
 14393  018264  0FEF               	addlw	-17
 14394  018266  6ED9               	movwf	fsr2l,c
 14395  018268  50E2               	movf	fsr1h,w,c
 14396  01826A  6EDA               	movwf	fsr2h,c
 14397  01826C  0EFF               	movlw	255
 14398  01826E  22DA               	addwfc	fsr2h,f,c
 14399  018270  0EE7               	movlw	-25
 14400  018272  50E3               	movf	plusw1,w,c
 14401  018274  5EDE               	subwf	postinc2,f,c
 14402  018276  0EE8               	movlw	-24
 14403  018278  50E3               	movf	plusw1,w,c
 14404  01827A  5ADE               	subwfb	postinc2,f,c
 14405  01827C  0EE9               	movlw	-23
 14406  01827E  50E3               	movf	plusw1,w,c
 14407  018280  5ADE               	subwfb	postinc2,f,c
 14408  018282  0EEA               	movlw	-22
 14409  018284  50E3               	movf	plusw1,w,c
 14410  018286  5ADE               	subwfb	postinc2,f,c
 14411  018288  0EEB               	movlw	-21
 14412  01828A  50E3               	movf	plusw1,w,c
 14413  01828C  5ADE               	subwfb	postinc2,f,c
 14414  01828E  0EEC               	movlw	-20
 14415  018290  50E3               	movf	plusw1,w,c
 14416  018292  5ADE               	subwfb	postinc2,f,c
 14417  018294  0EED               	movlw	-19
 14418  018296  50E3               	movf	plusw1,w,c
 14419  018298  5ADE               	subwfb	postinc2,f,c
 14420  01829A  0EEE               	movlw	-18
 14421  01829C  50E3               	movf	plusw1,w,c
 14422  01829E  5ADE               	subwfb	postinc2,f,c
 14423                           
 14424                           ;stkvar	_quotient @ sp[(-9)+0]
 14425  0182A0  0EF7               	movlw	-9
 14426  0182A2  80E3               	bsf	plusw1,0,c
 14427  0182A4                     l8563:
 14428                           
 14429                           ;stkvar	_divisor @ sp[(-9)+-16]
 14430  0182A4  90D8               	bcf	status,0,c
 14431  0182A6  0EEE               	movlw	-18
 14432  0182A8  32E3               	rrcf	plusw1,f,c
 14433  0182AA  0EED               	movlw	-19
 14434  0182AC  32E3               	rrcf	plusw1,f,c
 14435  0182AE  0EEC               	movlw	-20
 14436  0182B0  32E3               	rrcf	plusw1,f,c
 14437  0182B2  0EEB               	movlw	-21
 14438  0182B4  32E3               	rrcf	plusw1,f,c
 14439  0182B6  0EEA               	movlw	-22
 14440  0182B8  32E3               	rrcf	plusw1,f,c
 14441  0182BA  0EE9               	movlw	-23
 14442  0182BC  32E3               	rrcf	plusw1,f,c
 14443  0182BE  0EE8               	movlw	-24
 14444  0182C0  32E3               	rrcf	plusw1,f,c
 14445  0182C2  0EE7               	movlw	-25
 14446  0182C4  32E3               	rrcf	plusw1,f,c
 14447                           
 14448                           ;stkvar	_counter @ sp[(-9)+8]
 14449  0182C6  0EFF               	movlw	-1
 14450  0182C8  50E3               	movf	plusw1,w,c
 14451  0182CA  6E26               	movwf	btemp^0,c
 14452  0182CC  0E01               	movlw	1
 14453  0182CE  5E26               	subwf	btemp^0,f,c
 14454  0182D0  0EFF               	movlw	-1
 14455  0182D2  0060  F09B  FFE3   	movff	btemp,plusw1
 14456  0182D8  A4D8               	btfss	status,2,c
 14457  0182DA  D791               	goto	u7230
 14458  0182DC                     u7250:
 14459                           
 14460                           ;stkvar	_quotient @ sp[(-9)+0]
 14461  0182DC  0EF7               	movlw	247
 14462  0182DE  24E1               	addwf	fsr1l,w,c
 14463  0182E0  6ED9               	movwf	fsr2l,c
 14464  0182E2  0EFF               	movlw	255
 14465  0182E4  20E2               	addwfc	fsr1h,w,c
 14466  0182E6  6EDA               	movwf	fsr2h,c
 14467                           
 14468                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 14469  0182E8  0E08               	movlw	8
 14470  0182EA  6E26               	movwf	btemp^0,c
 14471  0182EC  0EEF               	movlw	-17
 14472  0182EE                     us726999:
 14473  0182EE  006F FF7B FFE3     	movff	postinc2,plusw1
 14474  0182F4  28E8               	incf	wreg,w,c
 14475  0182F6  2E26               	decfsz	btemp^0,f,c
 14476  0182F8  D7FA               	bra	us726999
 14477                           
 14478                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 14479  0182FA  0EF7               	movlw	247
 14480  0182FC  26E1               	addwf	fsr1l,f,c
 14481  0182FE  0EFF               	movlw	255
 14482  018300  22E2               	addwfc	fsr1h,f,c
 14483  018302  0012               	return		;funcret
 14484  018304                     __end_of___lodiv:
 14485                           	opt callstack 0
 14486                           
 14487 ;; *************** function _strncmp *****************
 14488 ;; Defined at:
 14489 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 14490 ;; Parameters:    Size  Location     Type
 14491 ;;  _l              2  [STACK] PTR const unsigned char 
 14492 ;;		 -> ct(3), STR_65(85), STR_63(3), STR_62(3), 
 14493 ;;		 -> STR_61(19), STR_60(19), STR_59(19), STR_58(19), 
 14494 ;;		 -> STR_57(19), STR_56(19), STR_55(24), STR_54(15), 
 14495 ;;		 -> STR_53(15), STR_52(15), STR_51(10), STR_50(10), 
 14496 ;;		 -> STR_49(19), STR_48(19), STR_45(3), STR_44(3), 
 14497 ;;		 -> STR_43(3), STR_42(17), STR_41(16), STR_40(16), 
 14498 ;;		 -> STR_39(20), STR_38(20), STR_37(20), STR_36(20), 
 14499 ;;		 -> STR_35(20), STR_34(20), STR_33(19), STR_32(19), 
 14500 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
 14501 ;;		 -> STR_27(19), STR_26(19), STR_25(20), STR_24(19), 
 14502 ;;		 -> STR_23(19), STR_22(20), STR_21(17), STR_20(16), 
 14503 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
 14504 ;;		 -> STR_15(21), STR_14(17), STR_13(17), STR_12(17), 
 14505 ;;		 -> STR_11(22), STR_10(22), STR_9(23), STR_8(18), 
 14506 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
 14507 ;;		 -> STR_2(15), STR_1(17), 
 14508 ;;  _r              2  [STACK] PTR const unsigned char 
 14509 ;;		 -> STR_99(3), STR_95(3), STR_90(3), STR_85(3), 
 14510 ;;		 -> STR_80(3), STR_76(3), 
 14511 ;;  n               2  [STACK] unsigned int 
 14512 ;; Auto vars:     Size  Location     Type
 14513 ;;  r               2  [STACK] PTR const unsigned char 
 14514 ;;		 -> STR_99(3), STR_95(3), STR_90(3), STR_85(3), 
 14515 ;;		 -> STR_80(3), STR_76(3), 
 14516 ;;  l               2  [STACK] PTR const unsigned char 
 14517 ;;		 -> ct(3), STR_65(85), STR_63(3), STR_62(3), 
 14518 ;;		 -> STR_61(19), STR_60(19), STR_59(19), STR_58(19), 
 14519 ;;		 -> STR_57(19), STR_56(19), STR_55(24), STR_54(15), 
 14520 ;;		 -> STR_53(15), STR_52(15), STR_51(10), STR_50(10), 
 14521 ;;		 -> STR_49(19), STR_48(19), STR_45(3), STR_44(3), 
 14522 ;;		 -> STR_43(3), STR_42(17), STR_41(16), STR_40(16), 
 14523 ;;		 -> STR_39(20), STR_38(20), STR_37(20), STR_36(20), 
 14524 ;;		 -> STR_35(20), STR_34(20), STR_33(19), STR_32(19), 
 14525 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
 14526 ;;		 -> STR_27(19), STR_26(19), STR_25(20), STR_24(19), 
 14527 ;;		 -> STR_23(19), STR_22(20), STR_21(17), STR_20(16), 
 14528 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
 14529 ;;		 -> STR_15(21), STR_14(17), STR_13(17), STR_12(17), 
 14530 ;;		 -> STR_11(22), STR_10(22), STR_9(23), STR_8(18), 
 14531 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
 14532 ;;		 -> STR_2(15), STR_1(17), 
 14533 ;; Return value:  Size  Location     Type
 14534 ;;                  2  [STACK] int 
 14535 ;; Registers used:
 14536 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 14537 ;; Tracked objects:
 14538 ;;		On entry : 0/0
 14539 ;;		On exit  : 0/0
 14540 ;;		Unchanged: 0/0
 14541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14546 ;;Total ram usage:        0 bytes
 14547 ;; Hardware stack levels used:    1
 14548 ;; Hardware stack levels required when called:   15
 14549 ;; This function calls:
 14550 ;;		Nothing
 14551 ;; This function is called by:
 14552 ;;		_vfpfcnvrt
 14553 ;; This function uses a reentrant model
 14554 ;;
 14555                           
 14556                           	psect	text53
 14557  0175FC                     __ptext53:
 14558                           	opt callstack 0
 14559  0175FC                     _strncmp:
 14560                           	opt callstack 0
 14561                           
 14562                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14563  0175FC  52E6               	movf	postinc1,f,c
 14564  0175FE  52E6               	movf	postinc1,f,c
 14565  017600  52E6               	movf	postinc1,f,c
 14566  017602  52E6               	movf	postinc1,f,c
 14567                           
 14568                           ;stkvar	__l @ sp[(-4)+-2]
 14569                           
 14570                           ;incstack = 0
 14571 ;; hardware stack exceeded
 14572  017604  0EFA               	movlw	-6
 14573  017606  006F FF8C  F030    	movff	plusw1,btemp+10
 14574  01760C  0EFB               	movlw	-5
 14575  01760E  006F FF8C  F031    	movff	plusw1,btemp+11
 14576                           
 14577                           ;stkvar	_l @ sp[(-4)+2]
 14578  017614  0EFF               	movlw	-1
 14579  017616  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 14580  01761C  0EFE               	movlw	-2
 14581  01761E  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 14582                           
 14583                           ;stkvar	__r @ sp[(-4)+-4]
 14584  017624  0EF8               	movlw	-8
 14585  017626  006F FF8C  F030    	movff	plusw1,btemp+10
 14586  01762C  0EF9               	movlw	-7
 14587  01762E  006F FF8C  F031    	movff	plusw1,btemp+11
 14588                           
 14589                           ;stkvar	_r @ sp[(-4)+0]
 14590  017634  0EFD               	movlw	-3
 14591  017636  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 14592  01763C  0EFC               	movlw	-4
 14593  01763E  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 14594                           
 14595                           ;stkvar	_n @ sp[(-4)+-6]
 14596  017644  0EF6               	movlw	-10
 14597  017646  006F FF8C  F026    	movff	plusw1,btemp
 14598  01764C  0E01               	movlw	1
 14599  01764E  5E26               	subwf	btemp^0,f,c
 14600  017650  0EF6               	movlw	-10
 14601  017652  0060  F09B  FFE3   	movff	btemp,plusw1
 14602  017658  0EF7               	movlw	-9
 14603  01765A  006F FF8C  F026    	movff	plusw1,btemp
 14604  017660  0E00               	movlw	0
 14605  017662  5A26               	subwfb	btemp^0,f,c
 14606  017664  0EF7               	movlw	-9
 14607  017666  0060  F09B  FFE3   	movff	btemp,plusw1
 14608  01766C  0EF6               	movlw	-10
 14609  01766E  28E3               	incf	plusw1,w,c
 14610  017670  E13F               	bnz	l9259
 14611  017672  0EF7               	movlw	-9
 14612  017674  28E3               	incf	plusw1,w,c
 14613  017676  A4D8               	btfss	status,2,c
 14614  017678  D03B               	goto	l9259
 14615  01767A  0E00               	movlw	0
 14616  01767C  6E26               	movwf	btemp^0,c
 14617  01767E  0E00               	movlw	0
 14618  017680  6E27               	movwf	(btemp+1)^0,c
 14619  017682  D0C7               	goto	l3452
 14620  017684                     l9257:
 14621                           
 14622                           ;stkvar	_l @ sp[(-4)+2]
 14623  017684  0EFE               	movlw	-2
 14624  017686  50E3               	movf	plusw1,w,c
 14625  017688  0F01               	addlw	1
 14626  01768A  6E26               	movwf	btemp^0,c
 14627  01768C  0EFE               	movlw	-2
 14628  01768E  0060  F09B  FFE3   	movff	btemp,plusw1
 14629  017694  6A26               	clrf	btemp^0,c
 14630  017696  0EFF               	movlw	-1
 14631  017698  50E3               	movf	plusw1,w,c
 14632  01769A  2026               	addwfc	btemp^0,w,c
 14633  01769C  6E26               	movwf	btemp^0,c
 14634  01769E  0EFF               	movlw	-1
 14635  0176A0  0060  F09B  FFE3   	movff	btemp,plusw1
 14636                           
 14637                           ;stkvar	_r @ sp[(-4)+0]
 14638  0176A6  0EFC               	movlw	-4
 14639  0176A8  50E3               	movf	plusw1,w,c
 14640  0176AA  0F01               	addlw	1
 14641  0176AC  6E26               	movwf	btemp^0,c
 14642  0176AE  0EFC               	movlw	-4
 14643  0176B0  0060  F09B  FFE3   	movff	btemp,plusw1
 14644  0176B6  6A26               	clrf	btemp^0,c
 14645  0176B8  0EFD               	movlw	-3
 14646  0176BA  50E3               	movf	plusw1,w,c
 14647  0176BC  2026               	addwfc	btemp^0,w,c
 14648  0176BE  6E26               	movwf	btemp^0,c
 14649  0176C0  0EFD               	movlw	-3
 14650  0176C2  0060  F09B  FFE3   	movff	btemp,plusw1
 14651                           
 14652                           ;stkvar	_n @ sp[(-4)+-6]
 14653  0176C8  0EF6               	movlw	-10
 14654  0176CA  006F FF8C  F026    	movff	plusw1,btemp
 14655  0176D0  0E01               	movlw	1
 14656  0176D2  5E26               	subwf	btemp^0,f,c
 14657  0176D4  0EF6               	movlw	-10
 14658  0176D6  0060  F09B  FFE3   	movff	btemp,plusw1
 14659  0176DC  0EF7               	movlw	-9
 14660  0176DE  006F FF8C  F026    	movff	plusw1,btemp
 14661  0176E4  0E00               	movlw	0
 14662  0176E6  5A26               	subwfb	btemp^0,f,c
 14663  0176E8  0EF7               	movlw	-9
 14664  0176EA  0060  F09B  FFE3   	movff	btemp,plusw1
 14665  0176F0                     l9259:
 14666                           
 14667                           ;stkvar	_l @ sp[(-4)+2]
 14668  0176F0  0EFE               	movlw	-2
 14669  0176F2  006F FF8F FFF6     	movff	plusw1,tblptrl
 14670  0176F8  0EFF               	movlw	-1
 14671  0176FA  006F FF8F FFF7     	movff	plusw1,tblptrh
 14672  017700  0E00               	movlw	low (__mediumconst shr (0+16))
 14673  017702  6EF8               	movwf	tblptru,c
 14674  017704  0E1F               	movlw	(high __ramtop+-1)
 14675  017706  64F7               	cpfsgt	tblptrh,c
 14676  017708  D003               	bra	u8547
 14677  01770A  0008               	tblrd		*
 14678  01770C  50F5               	movf	tablat,w,c
 14679  01770E  D007               	bra	u8540
 14680  017710                     u8547:
 14681  017710  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14682  017716  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14683  01771C  50EF               	movf	indf0,w,c
 14684  01771E                     u8540:
 14685  01771E  0900               	iorlw	0
 14686  017720  B4D8               	btfsc	status,2,c
 14687  017722  D04A               	goto	u8580
 14688                           
 14689                           ;stkvar	_r @ sp[(-4)+0]
 14690  017724  50E1               	movf	fsr1l,w,c
 14691  017726  0FFC               	addlw	-4
 14692  017728  6ED9               	movwf	fsr2l,c
 14693  01772A  50E2               	movf	fsr1h,w,c
 14694  01772C  6EDA               	movwf	fsr2h,c
 14695  01772E  0EFF               	movlw	255
 14696  017730  22DA               	addwfc	fsr2h,f,c
 14697  017732  006F FF7B FFF6     	movff	postinc2,tblptrl
 14698  017738  006F FF77 FFF7     	movff	postdec2,tblptrh
 14699  01773E                     	if	0	;tblptru may be non-zero
 14700  01773E                     	endif
 14701  01773E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14702  01773E  0E00               	movlw	low (__mediumconst shr (0+16))
 14703  017740  6EF8               	movwf	tblptru,c
 14704  017742                     	endif
 14705  017742  0008               	tblrd		*
 14706  017744  50F5               	movf	tablat,w,c
 14707  017746  0900               	iorlw	0
 14708  017748  B4D8               	btfsc	status,2,c
 14709  01774A  D036               	goto	u8580
 14710                           
 14711                           ;stkvar	_n @ sp[(-4)+-6]
 14712  01774C  0EF6               	movlw	-10
 14713  01774E  006F FF8C  F026    	movff	plusw1,btemp
 14714  017754  0EF7               	movlw	-9
 14715  017756  50E3               	movf	plusw1,w,c
 14716  017758  1026               	iorwf	btemp^0,w,c
 14717  01775A  B4D8               	btfsc	status,2,c
 14718  01775C  D02D               	goto	u8580
 14719                           
 14720                           ;stkvar	_r @ sp[(-4)+0]
 14721  01775E  50E1               	movf	fsr1l,w,c
 14722  017760  0FFC               	addlw	-4
 14723  017762  6ED9               	movwf	fsr2l,c
 14724  017764  50E2               	movf	fsr1h,w,c
 14725  017766  6EDA               	movwf	fsr2h,c
 14726  017768  0EFF               	movlw	255
 14727  01776A  22DA               	addwfc	fsr2h,f,c
 14728  01776C  006F FF7B FFF6     	movff	postinc2,tblptrl
 14729  017772  006F FF77 FFF7     	movff	postdec2,tblptrh
 14730  017778                     	if	0	;tblptru may be non-zero
 14731  017778                     	endif
 14732  017778                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14733  017778  0E00               	movlw	low (__mediumconst shr (0+16))
 14734  01777A  6EF8               	movwf	tblptru,c
 14735  01777C                     	endif
 14736  01777C  0008               	tblrd		*
 14737  01777E  006F FFD4  F031    	movff	tablat,btemp+11
 14738                           
 14739                           ;stkvar	_l @ sp[(-4)+2]
 14740  017784  0EFE               	movlw	-2
 14741  017786  006F FF8F FFF6     	movff	plusw1,tblptrl
 14742  01778C  0EFF               	movlw	-1
 14743  01778E  006F FF8F FFF7     	movff	plusw1,tblptrh
 14744  017794  0E00               	movlw	low (__mediumconst shr (0+16))
 14745  017796  6EF8               	movwf	tblptru,c
 14746  017798  0E1F               	movlw	(high __ramtop+-1)
 14747  01779A  64F7               	cpfsgt	tblptrh,c
 14748  01779C  D003               	bra	u8587
 14749  01779E  0008               	tblrd		*
 14750  0177A0  50F5               	movf	tablat,w,c
 14751  0177A2  D007               	bra	u8585
 14752  0177A4                     u8587:
 14753  0177A4  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14754  0177AA  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14755  0177B0  50EF               	movf	indf0,w,c
 14756  0177B2                     u8585:
 14757  0177B2  1831               	xorwf	(btemp+11)^0,w,c
 14758  0177B4  B4D8               	btfsc	status,2,c
 14759  0177B6  D766               	goto	l9257
 14760  0177B8                     u8580:
 14761                           
 14762                           ;stkvar	_l @ sp[(-4)+2]
 14763  0177B8  0EFE               	movlw	-2
 14764  0177BA  006F FF8F FFF6     	movff	plusw1,tblptrl
 14765  0177C0  0EFF               	movlw	-1
 14766  0177C2  006F FF8F FFF7     	movff	plusw1,tblptrh
 14767  0177C8  0E00               	movlw	low (__mediumconst shr (0+16))
 14768  0177CA  6EF8               	movwf	tblptru,c
 14769  0177CC  0E1F               	movlw	(high __ramtop+-1)
 14770  0177CE  64F7               	cpfsgt	tblptrh,c
 14771  0177D0  D003               	bra	u8597
 14772  0177D2  0008               	tblrd		*
 14773  0177D4  50F5               	movf	tablat,w,c
 14774  0177D6  D007               	bra	u8590
 14775  0177D8                     u8597:
 14776  0177D8  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14777  0177DE  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14778  0177E4  50EF               	movf	indf0,w,c
 14779  0177E6                     u8590:
 14780  0177E6  6E26               	movwf	btemp^0,c
 14781  0177E8  6A27               	clrf	(btemp+1)^0,c
 14782                           
 14783                           ;stkvar	_r @ sp[(-4)+0]
 14784  0177EA  50E1               	movf	fsr1l,w,c
 14785  0177EC  0FFC               	addlw	-4
 14786  0177EE  6ED9               	movwf	fsr2l,c
 14787  0177F0  50E2               	movf	fsr1h,w,c
 14788  0177F2  6EDA               	movwf	fsr2h,c
 14789  0177F4  0EFF               	movlw	255
 14790  0177F6  22DA               	addwfc	fsr2h,f,c
 14791  0177F8  006F FF7B FFF6     	movff	postinc2,tblptrl
 14792  0177FE  006F FF77 FFF7     	movff	postdec2,tblptrh
 14793  017804                     	if	0	;tblptru may be non-zero
 14794  017804                     	endif
 14795  017804                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14796  017804  0E00               	movlw	low (__mediumconst shr (0+16))
 14797  017806  6EF8               	movwf	tblptru,c
 14798  017808                     	endif
 14799  017808  0008               	tblrd		*
 14800  01780A  50F5               	movf	tablat,w,c
 14801  01780C  5E26               	subwf	btemp^0,f,c
 14802  01780E  0E00               	movlw	0
 14803  017810  5A27               	subwfb	(btemp+1)^0,f,c
 14804  017812                     l3452:
 14805                           
 14806                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 14807  017812  0EF6               	movlw	246
 14808  017814  26E1               	addwf	fsr1l,f,c
 14809  017816  0EFF               	movlw	255
 14810  017818  22E2               	addwfc	fsr1h,f,c
 14811  01781A  0012               	return		;funcret
 14812  01781C                     __end_of_strncmp:
 14813                           	opt callstack 0
 14814                           
 14815 ;; *************** function _stoa *****************
 14816 ;; Defined at:
 14817 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 14818 ;; Parameters:    Size  Location     Type
 14819 ;;  fp              2  [STACK] PTR struct _IO_FILE
 14820 ;;		 -> f(6), NULL(0), 
 14821 ;;  s               2  [STACK] PTR unsigned char 
 14822 ;;		 -> ?_printf(2), ?_sprintf(2), STR_47(9), STR_46(12), 
 14823 ;;		 -> D.lcd(480), D(482), T(144), STR_3(7), 
 14824 ;;		 -> V(191), 
 14825 ;; Auto vars:     Size  Location     Type
 14826 ;;  nuls            7  [STACK] unsigned char [7]
 14827 ;;  l               2  [STACK] int 
 14828 ;;  p               2  [STACK] int 
 14829 ;;  cp              2  [STACK] PTR unsigned char 
 14830 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_47(9), 
 14831 ;;		 -> STR_46(12), D.lcd(480), D(482), T(144), 
 14832 ;;		 -> STR_3(7), V(191), 
 14833 ;;  w               2  [STACK] int 
 14834 ;;  i               2  [STACK] int 
 14835 ;; Return value:  Size  Location     Type
 14836 ;;                  2  [STACK] int 
 14837 ;; Registers used:
 14838 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 14839 ;; Tracked objects:
 14840 ;;		On entry : 0/0
 14841 ;;		On exit  : 0/0
 14842 ;;		Unchanged: 0/0
 14843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14848 ;;Total ram usage:        0 bytes
 14849 ;; Hardware stack levels used:    1
 14850 ;; Hardware stack levels required when called:   18
 14851 ;; This function calls:
 14852 ;;		_fputc
 14853 ;;		_strlen
 14854 ;; This function is called by:
 14855 ;;		_vfpfcnvrt
 14856 ;; This function uses a reentrant model
 14857 ;;
 14858                           
 14859                           	psect	text54
 14860  016C0A                     __ptext54:
 14861                           	opt callstack 0
 14862  016C0A                     _stoa:
 14863                           	opt callstack 0
 14864                           
 14865                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14866  016C0A  0E11               	movlw	17
 14867  016C0C  26E1               	addwf	fsr1l,f,c
 14868  016C0E  0E00               	movlw	0
 14869  016C10  22E2               	addwfc	fsr1h,f,c
 14870                           
 14871                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 14872                           
 14873                           ;incstack = 0
 14874 ;; hardware stack exceeded
 14875  016C12  EE20  F200         	lfsr	2,stoa@F1166
 14876                           
 14877                           ;stkvar	_nuls @ sp[(-17)+0]
 14878  016C16  0E07               	movlw	7
 14879  016C18  6E26               	movwf	btemp^0,c
 14880  016C1A  0EEF               	movlw	-17
 14881  016C1C                     us1145999:
 14882  016C1C  006F FF7B FFE3     	movff	postinc2,plusw1
 14883  016C22  28E8               	incf	wreg,w,c
 14884  016C24  2E26               	decfsz	btemp^0,f,c
 14885  016C26  D7FA               	bra	us1145999
 14886                           
 14887                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 14888                           ;stkvar	_s @ sp[(-17)+-4]
 14889  016C28  0EEB               	movlw	-21
 14890  016C2A  006F FF8C  F030    	movff	plusw1,btemp+10
 14891  016C30  0EEC               	movlw	-20
 14892  016C32  006F FF8C  F031    	movff	plusw1,btemp+11
 14893                           
 14894                           ;stkvar	_cp @ sp[(-17)+11]
 14895  016C38  0EFB               	movlw	-5
 14896  016C3A  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 14897  016C40  0EFA               	movlw	-6
 14898  016C42  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 14899                           
 14900                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 14901                           ;stkvar	_cp @ sp[(-17)+11]
 14902  016C48  0EFA               	movlw	-6
 14903  016C4A  006F FF8C  F026    	movff	plusw1,btemp
 14904  016C50  0EFB               	movlw	-5
 14905  016C52  50E3               	movf	plusw1,w,c
 14906  016C54  1026               	iorwf	btemp^0,w,c
 14907  016C56  A4D8               	btfss	status,2,c
 14908  016C58  D00E               	goto	l12057
 14909                           
 14910                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 14911                           ;stkvar	_nuls @ sp[(-17)+0]
 14912  016C5A  0EEF               	movlw	239
 14913  016C5C  24E1               	addwf	fsr1l,w,c
 14914  016C5E  6E30               	movwf	(btemp+10)^0,c
 14915  016C60  0EFF               	movlw	255
 14916  016C62  20E2               	addwfc	fsr1h,w,c
 14917  016C64  6E31               	movwf	(btemp+11)^0,c
 14918                           
 14919                           ;stkvar	_cp @ sp[(-17)+11]
 14920  016C66  0EFB               	movlw	-5
 14921  016C68  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 14922  016C6E  0EFA               	movlw	-6
 14923  016C70  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 14924  016C76                     l12057:
 14925                           
 14926                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 14927                           ;stkvar	_cp @ sp[(-17)+11]
 14928  016C76  0EFA               	movlw	-6
 14929  016C78  006F FF8F FFE6     	movff	plusw1,postinc1
 14930  016C7E  006F FF8F FFE6     	movff	plusw1,postinc1
 14931  016C84  EC7D  F0D0         	call	_strlen	;wreg free
 14932                           
 14933                           ;stkvar	_l @ sp[(-17)+7]
 14934  016C88  0EF6               	movlw	-10
 14935  016C8A  0060  F09B  FFE3   	movff	btemp,plusw1
 14936  016C90  0EF7               	movlw	-9
 14937  016C92  0060  F09F  FFE3   	movff	btemp+1,plusw1
 14938                           
 14939                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 14940                           ;stkvar	_p @ sp[(-17)+9]
 14941  016C98  0EF8               	movlw	-8
 14942  016C9A  0060  F033  FFE3   	movff	_prec,plusw1
 14943  016CA0  0EF9               	movlw	-7
 14944  016CA2  0060  F037  FFE3   	movff	_prec+1,plusw1
 14945                           
 14946                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 14947                           ;stkvar	_p @ sp[(-17)+9]
 14948  016CA8  0EF9               	movlw	-7
 14949  016CAA  BEE3               	btfsc	plusw1,7,c
 14950  016CAC  D023               	goto	l2277
 14951                           
 14952                           ;stkvar	_l @ sp[(-17)+7]
 14953                           ;stkvar	_p @ sp[(-17)+9]
 14954  016CAE  50E1               	movf	fsr1l,w,c
 14955  016CB0  0FF8               	addlw	-8
 14956  016CB2  6ED9               	movwf	fsr2l,c
 14957  016CB4  50E2               	movf	fsr1h,w,c
 14958  016CB6  6EDA               	movwf	fsr2h,c
 14959  016CB8  0EFF               	movlw	255
 14960  016CBA  22DA               	addwfc	fsr2h,f,c
 14961  016CBC  0EF6               	movlw	-10
 14962  016CBE  50E3               	movf	plusw1,w,c
 14963  016CC0  5CDE               	subwf	postinc2,w,c
 14964  016CC2  50DE               	movf	postinc2,w,c
 14965  016CC4  0A80               	xorlw	128
 14966  016CC6  6E26               	movwf	btemp^0,c
 14967  016CC8  0EF7               	movlw	-9
 14968  016CCA  50E3               	movf	plusw1,w,c
 14969  016CCC  0A80               	xorlw	128
 14970  016CCE  5826               	subwfb	btemp^0,w,c
 14971  016CD0  B0D8               	btfsc	status,0,c
 14972  016CD2  D010               	goto	l2277
 14973                           
 14974                           ;stkvar	_p @ sp[(-17)+9]
 14975                           ;stkvar	_l @ sp[(-17)+7]
 14976  016CD4  0EF8               	movlw	-8
 14977  016CD6  006F FF8C  F026    	movff	plusw1,btemp
 14978  016CDC  0EF6               	movlw	-10
 14979  016CDE  0060  F09B  FFE3   	movff	btemp,plusw1
 14980  016CE4  0EF9               	movlw	-7
 14981  016CE6  006F FF8C  F026    	movff	plusw1,btemp
 14982  016CEC  0EF7               	movlw	-9
 14983  016CEE  0060  F09B  FFE3   	movff	btemp,plusw1
 14984  016CF4                     l2277:
 14985                           
 14986                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 14987                           ;stkvar	_l @ sp[(-17)+7]
 14988                           ;stkvar	_p @ sp[(-17)+9]
 14989  016CF4  0EF6               	movlw	-10
 14990  016CF6  006F FF8C  F026    	movff	plusw1,btemp
 14991  016CFC  0EF8               	movlw	-8
 14992  016CFE  0060  F09B  FFE3   	movff	btemp,plusw1
 14993  016D04  0EF7               	movlw	-9
 14994  016D06  006F FF8C  F026    	movff	plusw1,btemp
 14995  016D0C  0EF9               	movlw	-7
 14996  016D0E  0060  F09B  FFE3   	movff	btemp,plusw1
 14997                           
 14998                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 14999                           ;stkvar	_w @ sp[(-17)+13]
 15000  016D14  0EFC               	movlw	-4
 15001  016D16  0060  F02B  FFE3   	movff	_width,plusw1
 15002  016D1C  0EFD               	movlw	-3
 15003  016D1E  0060  F02F  FFE3   	movff	_width+1,plusw1
 15004                           
 15005                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 15006  016D24  A00E               	btfss	_flags^0,0,c
 15007  016D26  D01F               	goto	l12077
 15008  016D28  D031               	goto	u11500
 15009  016D2A                     l12073:
 15010                           
 15011                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 15012                           ;stkvar	_fp @ sp[(-17)+-2]
 15013  016D2A  0EED               	movlw	-19
 15014  016D2C  006F FF8F FFE6     	movff	plusw1,postinc1
 15015  016D32  006F FF8F FFE6     	movff	plusw1,postinc1
 15016  016D38  0E20               	movlw	32
 15017  016D3A  6EE6               	movwf	postinc1,c
 15018  016D3C  0E00               	movlw	0
 15019  016D3E  6EE6               	movwf	postinc1,c
 15020  016D40  EC8B  F0C7         	call	_fputc	;wreg free
 15021                           
 15022                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 15023                           ;stkvar	_l @ sp[(-17)+7]
 15024  016D44  0EF6               	movlw	-10
 15025  016D46  50E3               	movf	plusw1,w,c
 15026  016D48  0F01               	addlw	1
 15027  016D4A  6E26               	movwf	btemp^0,c
 15028  016D4C  0EF6               	movlw	-10
 15029  016D4E  0060  F09B  FFE3   	movff	btemp,plusw1
 15030  016D54  6A26               	clrf	btemp^0,c
 15031  016D56  0EF7               	movlw	-9
 15032  016D58  50E3               	movf	plusw1,w,c
 15033  016D5A  2026               	addwfc	btemp^0,w,c
 15034  016D5C  6E26               	movwf	btemp^0,c
 15035  016D5E  0EF7               	movlw	-9
 15036  016D60  0060  F09B  FFE3   	movff	btemp,plusw1
 15037  016D66                     l12077:
 15038                           
 15039                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 15040                           ;stkvar	_w @ sp[(-17)+13]
 15041                           ;stkvar	_l @ sp[(-17)+7]
 15042  016D66  50E1               	movf	fsr1l,w,c
 15043  016D68  0FF6               	addlw	-10
 15044  016D6A  6ED9               	movwf	fsr2l,c
 15045  016D6C  50E2               	movf	fsr1h,w,c
 15046  016D6E  6EDA               	movwf	fsr2h,c
 15047  016D70  0EFF               	movlw	255
 15048  016D72  22DA               	addwfc	fsr2h,f,c
 15049  016D74  0EFC               	movlw	-4
 15050  016D76  50E3               	movf	plusw1,w,c
 15051  016D78  5CDE               	subwf	postinc2,w,c
 15052  016D7A  50DE               	movf	postinc2,w,c
 15053  016D7C  0A80               	xorlw	128
 15054  016D7E  6E26               	movwf	btemp^0,c
 15055  016D80  0EFD               	movlw	-3
 15056  016D82  50E3               	movf	plusw1,w,c
 15057  016D84  0A80               	xorlw	128
 15058  016D86  5826               	subwfb	btemp^0,w,c
 15059  016D88  A0D8               	btfss	status,0,c
 15060  016D8A  D7CF               	goto	l12073
 15061  016D8C                     u11500:
 15062                           
 15063                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 15064                           ;stkvar	_i @ sp[(-17)+15]
 15065  016D8C  0EFE               	movlw	-2
 15066  016D8E  6AE3               	clrf	plusw1,c
 15067  016D90  0EFF               	movlw	-1
 15068  016D92  6AE3               	clrf	plusw1,c
 15069                           
 15070                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 15071  016D94  D045               	goto	l12087
 15072  016D96                     l12081:
 15073                           
 15074                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 15075                           ;stkvar	_fp @ sp[(-17)+-2]
 15076  016D96  0EED               	movlw	-19
 15077  016D98  006F FF8F FFE6     	movff	plusw1,postinc1
 15078  016D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 15079                           
 15080                           ;stkvar	_cp @ sp[(-19)+11]
 15081  016DA4  0EF8               	movlw	-8
 15082  016DA6  006F FF8F FFF6     	movff	plusw1,tblptrl
 15083  016DAC  0EF9               	movlw	-7
 15084  016DAE  006F FF8F FFF7     	movff	plusw1,tblptrh
 15085  016DB4  0E00               	movlw	low (__mediumconst shr (0+16))
 15086  016DB6  6EF8               	movwf	tblptru,c
 15087  016DB8  0E1F               	movlw	(high __ramtop+-1)
 15088  016DBA  64F7               	cpfsgt	tblptrh,c
 15089  016DBC  D003               	bra	u11517
 15090  016DBE  0008               	tblrd		*
 15091  016DC0  50F5               	movf	tablat,w,c
 15092  016DC2  D007               	bra	u11510
 15093  016DC4                     u11517:
 15094  016DC4  006F FFDB FFE9     	movff	tblptrl,fsr0l
 15095  016DCA  006F FFDF FFEA     	movff	tblptrh,fsr0h
 15096  016DD0  50EF               	movf	indf0,w,c
 15097  016DD2                     u11510:
 15098  016DD2  6EE6               	movwf	postinc1,c
 15099  016DD4  0E00               	movlw	0
 15100  016DD6  6EE6               	movwf	postinc1,c
 15101  016DD8  EC8B  F0C7         	call	_fputc	;wreg free
 15102                           
 15103                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 15104                           ;stkvar	_cp @ sp[(-17)+11]
 15105  016DDC  0EFA               	movlw	-6
 15106  016DDE  50E3               	movf	plusw1,w,c
 15107  016DE0  0F01               	addlw	1
 15108  016DE2  6E26               	movwf	btemp^0,c
 15109  016DE4  0EFA               	movlw	-6
 15110  016DE6  0060  F09B  FFE3   	movff	btemp,plusw1
 15111  016DEC  6A26               	clrf	btemp^0,c
 15112  016DEE  0EFB               	movlw	-5
 15113  016DF0  50E3               	movf	plusw1,w,c
 15114  016DF2  2026               	addwfc	btemp^0,w,c
 15115  016DF4  6E26               	movwf	btemp^0,c
 15116  016DF6  0EFB               	movlw	-5
 15117  016DF8  0060  F09B  FFE3   	movff	btemp,plusw1
 15118                           
 15119                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 15120                           ;stkvar	_i @ sp[(-17)+15]
 15121  016DFE  0EFE               	movlw	-2
 15122  016E00  50E3               	movf	plusw1,w,c
 15123  016E02  0F01               	addlw	1
 15124  016E04  6E26               	movwf	btemp^0,c
 15125  016E06  0EFE               	movlw	-2
 15126  016E08  0060  F09B  FFE3   	movff	btemp,plusw1
 15127  016E0E  6A26               	clrf	btemp^0,c
 15128  016E10  0EFF               	movlw	-1
 15129  016E12  50E3               	movf	plusw1,w,c
 15130  016E14  2026               	addwfc	btemp^0,w,c
 15131  016E16  6E26               	movwf	btemp^0,c
 15132  016E18  0EFF               	movlw	-1
 15133  016E1A  0060  F09B  FFE3   	movff	btemp,plusw1
 15134  016E20                     l12087:
 15135                           
 15136                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 15137                           ;stkvar	_p @ sp[(-17)+9]
 15138                           ;stkvar	_i @ sp[(-17)+15]
 15139  016E20  50E1               	movf	fsr1l,w,c
 15140  016E22  0FFE               	addlw	-2
 15141  016E24  6ED9               	movwf	fsr2l,c
 15142  016E26  50E2               	movf	fsr1h,w,c
 15143  016E28  6EDA               	movwf	fsr2h,c
 15144  016E2A  0EFF               	movlw	255
 15145  016E2C  22DA               	addwfc	fsr2h,f,c
 15146  016E2E  0EF8               	movlw	-8
 15147  016E30  50E3               	movf	plusw1,w,c
 15148  016E32  5CDE               	subwf	postinc2,w,c
 15149  016E34  50DE               	movf	postinc2,w,c
 15150  016E36  0A80               	xorlw	128
 15151  016E38  6E26               	movwf	btemp^0,c
 15152  016E3A  0EF9               	movlw	-7
 15153  016E3C  50E3               	movf	plusw1,w,c
 15154  016E3E  0A80               	xorlw	128
 15155  016E40  5826               	subwfb	btemp^0,w,c
 15156  016E42  A0D8               	btfss	status,0,c
 15157  016E44  D7A8               	goto	l12081
 15158                           
 15159                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 15160  016E46  B00E               	btfsc	_flags^0,0,c
 15161  016E48  D01F               	goto	l12095
 15162  016E4A  D031               	goto	u11540
 15163  016E4C                     l12091:
 15164                           
 15165                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 15166                           ;stkvar	_fp @ sp[(-17)+-2]
 15167  016E4C  0EED               	movlw	-19
 15168  016E4E  006F FF8F FFE6     	movff	plusw1,postinc1
 15169  016E54  006F FF8F FFE6     	movff	plusw1,postinc1
 15170  016E5A  0E20               	movlw	32
 15171  016E5C  6EE6               	movwf	postinc1,c
 15172  016E5E  0E00               	movlw	0
 15173  016E60  6EE6               	movwf	postinc1,c
 15174  016E62  EC8B  F0C7         	call	_fputc	;wreg free
 15175                           
 15176                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 15177                           ;stkvar	_l @ sp[(-17)+7]
 15178  016E66  0EF6               	movlw	-10
 15179  016E68  50E3               	movf	plusw1,w,c
 15180  016E6A  0F01               	addlw	1
 15181  016E6C  6E26               	movwf	btemp^0,c
 15182  016E6E  0EF6               	movlw	-10
 15183  016E70  0060  F09B  FFE3   	movff	btemp,plusw1
 15184  016E76  6A26               	clrf	btemp^0,c
 15185  016E78  0EF7               	movlw	-9
 15186  016E7A  50E3               	movf	plusw1,w,c
 15187  016E7C  2026               	addwfc	btemp^0,w,c
 15188  016E7E  6E26               	movwf	btemp^0,c
 15189  016E80  0EF7               	movlw	-9
 15190  016E82  0060  F09B  FFE3   	movff	btemp,plusw1
 15191  016E88                     l12095:
 15192                           
 15193                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 15194                           ;stkvar	_w @ sp[(-17)+13]
 15195                           ;stkvar	_l @ sp[(-17)+7]
 15196  016E88  50E1               	movf	fsr1l,w,c
 15197  016E8A  0FF6               	addlw	-10
 15198  016E8C  6ED9               	movwf	fsr2l,c
 15199  016E8E  50E2               	movf	fsr1h,w,c
 15200  016E90  6EDA               	movwf	fsr2h,c
 15201  016E92  0EFF               	movlw	255
 15202  016E94  22DA               	addwfc	fsr2h,f,c
 15203  016E96  0EFC               	movlw	-4
 15204  016E98  50E3               	movf	plusw1,w,c
 15205  016E9A  5CDE               	subwf	postinc2,w,c
 15206  016E9C  50DE               	movf	postinc2,w,c
 15207  016E9E  0A80               	xorlw	128
 15208  016EA0  6E26               	movwf	btemp^0,c
 15209  016EA2  0EFD               	movlw	-3
 15210  016EA4  50E3               	movf	plusw1,w,c
 15211  016EA6  0A80               	xorlw	128
 15212  016EA8  5826               	subwfb	btemp^0,w,c
 15213  016EAA  A0D8               	btfss	status,0,c
 15214  016EAC  D7CF               	goto	l12091
 15215  016EAE                     u11540:
 15216                           
 15217                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 15218                           ;stkvar	_l @ sp[(-17)+7]
 15219  016EAE  0EF6               	movlw	-10
 15220  016EB0  006F FF8C  F026    	movff	plusw1,btemp
 15221  016EB6  0EF7               	movlw	-9
 15222  016EB8  006F FF8C  F027    	movff	plusw1,btemp+1
 15223                           
 15224                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 15225  016EBE  0EEB               	movlw	235
 15226  016EC0  26E1               	addwf	fsr1l,f,c
 15227  016EC2  0EFF               	movlw	255
 15228  016EC4  22E2               	addwfc	fsr1h,f,c
 15229  016EC6  0012               	return		;funcret
 15230  016EC8                     __end_of_stoa:
 15231                           	opt callstack 0
 15232                           
 15233 ;; *************** function _efgtoa *****************
 15234 ;; Defined at:
 15235 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15236 ;; Parameters:    Size  Location     Type
 15237 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15238 ;;		 -> f(6), NULL(0), 
 15239 ;;  f               4  [STACK] PTR struct _IO_FILE
 15240 ;;  c               1  [STACK] unsigned char 
 15241 ;; Auto vars:     Size  Location     Type
 15242 ;;  u               4  [STACK] unsigned char 
 15243 ;;  g               4  [STACK] unsigned char 
 15244 ;;  l               4  [STACK] unsigned char 
 15245 ;;  h               4  [STACK] unsigned char 
 15246 ;;  ou              4  [STACK] unsigned char 
 15247 ;;  n               2  [STACK] int 
 15248 ;;  e               2  [STACK] int 
 15249 ;;  i               2  [STACK] int 
 15250 ;;  w               2  [STACK] int 
 15251 ;;  p               2  [STACK] int 
 15252 ;;  sign            2  [STACK] int 
 15253 ;;  d               2  [STACK] int 
 15254 ;;  ne              2  [STACK] int 
 15255 ;;  m               2  [STACK] int 
 15256 ;;  pp              2  [STACK] int 
 15257 ;;  t               2  [STACK] int 
 15258 ;;  mode            1  [STACK] unsigned char 
 15259 ;;  nmode           1  [STACK] unsigned char 
 15260 ;; Return value:  Size  Location     Type
 15261 ;;                  2  [STACK] int 
 15262 ;; Registers used:
 15263 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15264 ;; Tracked objects:
 15265 ;;		On entry : 0/0
 15266 ;;		On exit  : 0/0
 15267 ;;		Unchanged: 0/0
 15268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15273 ;;Total ram usage:        0 bytes
 15274 ;; Hardware stack levels used:    1
 15275 ;; Hardware stack levels required when called:   20
 15276 ;; This function calls:
 15277 ;;		___awdiv
 15278 ;;		___awmod
 15279 ;;		___fladd
 15280 ;;		___fldiv
 15281 ;;		___fleq
 15282 ;;		___flge
 15283 ;;		___flmul
 15284 ;;		___flneg
 15285 ;;		___flsub
 15286 ;;		___fltol
 15287 ;;		___fpclassifyf
 15288 ;;		_floorf
 15289 ;;		_isupper
 15290 ;;		_pad
 15291 ;;		_strcpy
 15292 ;;		_tolower
 15293 ;; This function is called by:
 15294 ;;		_vfpfcnvrt
 15295 ;; This function uses a reentrant model
 15296 ;;
 15297                           
 15298                           	psect	text55
 15299  010000                     __ptext55:
 15300                           	opt callstack 0
 15301  010000                     _efgtoa:
 15302                           	opt callstack 0
 15303                           
 15304                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15305  010000  0E38               	movlw	56
 15306  010002  26E1               	addwf	fsr1l,f,c
 15307  010004  0E00               	movlw	0
 15308  010006  22E2               	addwfc	fsr1h,f,c
 15309                           
 15310                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 15311                           ;stkvar	_sign @ sp[(-56)+42]
 15312                           
 15313                           ;incstack = 0
 15314 ;; hardware stack exceeded
 15315  010008  0EF2               	movlw	-14
 15316  01000A  6AE3               	clrf	plusw1,c
 15317  01000C  0EF3               	movlw	-13
 15318  01000E  6AE3               	clrf	plusw1,c
 15319                           
 15320                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 15321                           ;stkvar	_f @ sp[(-56)+-6]
 15322  010010  0EC2               	movlw	-62
 15323  010012  006F FF8C  F02E    	movff	plusw1,btemp+8
 15324  010018  0EC3               	movlw	-61
 15325  01001A  006F FF8C  F02F    	movff	plusw1,btemp+9
 15326  010020  0EC4               	movlw	-60
 15327  010022  006F FF8C  F030    	movff	plusw1,btemp+10
 15328  010028  0EC5               	movlw	-59
 15329  01002A  006F FF8C  F031    	movff	plusw1,btemp+11
 15330                           
 15331                           ;stkvar	_g @ sp[(-56)+16]
 15332  010030  0ED8               	movlw	-40
 15333  010032  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 15334  010038  0ED9               	movlw	-39
 15335  01003A  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 15336  010040  0EDA               	movlw	-38
 15337  010042  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 15338  010048  0EDB               	movlw	-37
 15339  01004A  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 15340                           
 15341                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 15342                           ;stkvar	_g @ sp[(-56)+16]
 15343  010050  0EDB               	movlw	-37
 15344  010052  AEE3               	btfss	plusw1,7,c
 15345  010054  D02B               	goto	l11755
 15346                           
 15347                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 15348  010056  0E01               	movlw	1
 15349  010058  6E30               	movwf	(btemp+10)^0,c
 15350  01005A  0E00               	movlw	0
 15351  01005C  6E31               	movwf	(btemp+11)^0,c
 15352                           
 15353                           ;stkvar	_sign @ sp[(-56)+42]
 15354  01005E  0EF2               	movlw	-14
 15355  010060  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 15356  010066  0EF3               	movlw	-13
 15357  010068  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 15358                           
 15359                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 15360                           ;stkvar	_g @ sp[(-56)+16]
 15361  01006E  0ED8               	movlw	-40
 15362  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 15363  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 15364  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 15365  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 15366  010088  ECFC  F0D5         	call	___flneg	;wreg free
 15367                           
 15368                           ;stkvar	_g @ sp[(-56)+16]
 15369  01008C  0ED8               	movlw	-40
 15370  01008E  0060  F09B  FFE3   	movff	btemp,plusw1
 15371  010094  0ED9               	movlw	-39
 15372  010096  0060  F09F  FFE3   	movff	btemp+1,plusw1
 15373  01009C  0EDA               	movlw	-38
 15374  01009E  0060  F0A3  FFE3   	movff	btemp+2,plusw1
 15375  0100A4  0EDB               	movlw	-37
 15376  0100A6  0060  F0A7  FFE3   	movff	btemp+3,plusw1
 15377  0100AC                     l11755:
 15378                           
 15379                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 15380                           ;stkvar	_n @ sp[(-56)+32]
 15381  0100AC  0EE8               	movlw	-24
 15382  0100AE  6AE3               	clrf	plusw1,c
 15383  0100B0  0EE9               	movlw	-23
 15384  0100B2  6AE3               	clrf	plusw1,c
 15385                           
 15386                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 15387                           ;stkvar	_w @ sp[(-56)+38]
 15388  0100B4  0EEE               	movlw	-18
 15389  0100B6  0060  F02B  FFE3   	movff	_width,plusw1
 15390  0100BC  0EEF               	movlw	-17
 15391  0100BE  0060  F02F  FFE3   	movff	_width+1,plusw1
 15392                           
 15393                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 15394                           ;stkvar	_sign @ sp[(-56)+42]
 15395  0100C4  0EF2               	movlw	-14
 15396  0100C6  006F FF8C  F026    	movff	plusw1,btemp
 15397  0100CC  0EF3               	movlw	-13
 15398  0100CE  50E3               	movf	plusw1,w,c
 15399  0100D0  1026               	iorwf	btemp^0,w,c
 15400  0100D2  A4D8               	btfss	status,2,c
 15401  0100D4  D002               	goto	u10950
 15402  0100D6  A40E               	btfss	_flags^0,2,c
 15403  0100D8  D036               	goto	l11775
 15404  0100DA                     u10950:
 15405                           
 15406                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 15407                           ;stkvar	_sign @ sp[(-56)+42]
 15408  0100DA  0EF2               	movlw	-14
 15409  0100DC  006F FF8C  F026    	movff	plusw1,btemp
 15410  0100E2  0EF3               	movlw	-13
 15411  0100E4  50E3               	movf	plusw1,w,c
 15412  0100E6  1026               	iorwf	btemp^0,w,c
 15413  0100E8  A4D8               	btfss	status,2,c
 15414  0100EA  D002               	goto	l11767
 15415  0100EC  0E2B               	movlw	43
 15416  0100EE  D001               	goto	L16
 15417  0100F0                     l11767:
 15418  0100F0  0E2D               	movlw	45
 15419  0100F2                     L16:
 15420  0100F2  6E30               	movwf	(btemp+10)^0,c
 15421  0100F4  0E00               	movlw	0
 15422  0100F6  6E31               	movwf	(btemp+11)^0,c
 15423                           
 15424                           ;stkvar	_efgtoa$5421 @ sp[(-56)+10]
 15425  0100F8  0ED2               	movlw	-46
 15426  0100FA  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 15427  010100  0ED3               	movlw	-45
 15428  010102  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 15429                           
 15430                           ;stkvar	_efgtoa$5421 @ sp[(-56)+10]
 15431  010108  0ED2               	movlw	-46
 15432  01010A  006F FF8C  F3AE    	movff	plusw1,_dbuf
 15433                           
 15434                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 15435                           ;stkvar	_n @ sp[(-56)+32]
 15436  010110  0EE8               	movlw	-24
 15437  010112  50E3               	movf	plusw1,w,c
 15438  010114  0F01               	addlw	1
 15439  010116  6E26               	movwf	btemp^0,c
 15440  010118  0EE8               	movlw	-24
 15441  01011A  0060  F09B  FFE3   	movff	btemp,plusw1
 15442  010120  6A26               	clrf	btemp^0,c
 15443  010122  0EE9               	movlw	-23
 15444  010124  50E3               	movf	plusw1,w,c
 15445  010126  2026               	addwfc	btemp^0,w,c
 15446  010128  6E26               	movwf	btemp^0,c
 15447  01012A  0EE9               	movlw	-23
 15448  01012C  0060  F09B  FFE3   	movff	btemp,plusw1
 15449                           
 15450                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 15451                           ;stkvar	_w @ sp[(-56)+38]
 15452  010132  50E1               	movf	fsr1l,w,c
 15453  010134  0FEE               	addlw	-18
 15454  010136  6ED9               	movwf	fsr2l,c
 15455  010138  50E2               	movf	fsr1h,w,c
 15456  01013A  6EDA               	movwf	fsr2h,c
 15457  01013C  0EFF               	movlw	255
 15458  01013E  22DA               	addwfc	fsr2h,f,c
 15459  010140  06DE               	decf	postinc2,f,c
 15460  010142  0E00               	movlw	0
 15461  010144  5ADD               	subwfb	postdec2,f,c
 15462  010146                     l11775:
 15463                           
 15464                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 15465                           ;stkvar	_g @ sp[(-56)+16]
 15466  010146  0ED8               	movlw	-40
 15467  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 15468  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 15469  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 15470  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 15471  010160  ECF7  F0BF         	call	___fpclassifyf	;wreg free
 15472  010164  0426               	decf	btemp^0,w,c
 15473  010166  1027               	iorwf	(btemp+1)^0,w,c
 15474  010168  A4D8               	btfss	status,2,c
 15475  01016A  D076               	goto	l11793
 15476  01016C  0EBF               	movlw	191
 15477  01016E  6E30               	movwf	(btemp+10)^0,c
 15478  010170  0EFF               	movlw	255
 15479  010172  6E31               	movwf	(btemp+11)^0,c
 15480                           
 15481                           ;stkvar	_c @ sp[(-56)+-7]
 15482  010174  0EC1               	movlw	-63
 15483  010176  50E3               	movf	plusw1,w,c
 15484  010178  6E2E               	movwf	(btemp+8)^0,c
 15485  01017A  6A2F               	clrf	(btemp+9)^0,c
 15486  01017C  5030               	movf	(btemp+10)^0,w,c
 15487  01017E  262E               	addwf	(btemp+8)^0,f,c
 15488  010180  5031               	movf	(btemp+11)^0,w,c
 15489  010182  222F               	addwfc	(btemp+9)^0,f,c
 15490  010184  502F               	movf	(btemp+9)^0,w,c
 15491  010186  E106               	bnz	u10980
 15492  010188  0E1A               	movlw	26
 15493  01018A  5C2E               	subwf	(btemp+8)^0,w,c
 15494  01018C  B0D8               	btfsc	status,0,c
 15495  01018E  D002               	goto	u10980
 15496  010190  0E01               	movlw	1
 15497  010192  D001               	goto	u10990
 15498  010194                     u10980:
 15499  010194  0E00               	movlw	0
 15500  010196                     u10990:
 15501  010196  6E30               	movwf	(btemp+10)^0,c
 15502  010198  6A31               	clrf	(btemp+11)^0,c
 15503                           
 15504                           ;stkvar	_efgtoa$5422 @ sp[(-56)+8]
 15505  01019A  0ED0               	movlw	-48
 15506  01019C  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 15507  0101A2  0ED1               	movlw	-47
 15508  0101A4  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 15509                           
 15510                           ;stkvar	_efgtoa$5422 @ sp[(-56)+8]
 15511  0101AA  0ED0               	movlw	-48
 15512  0101AC  006F FF8C  F026    	movff	plusw1,btemp
 15513  0101B2  0ED1               	movlw	-47
 15514  0101B4  50E3               	movf	plusw1,w,c
 15515  0101B6  1026               	iorwf	btemp^0,w,c
 15516  0101B8  B4D8               	btfsc	status,2,c
 15517  0101BA  D017               	goto	l11785
 15518                           
 15519                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 15520  0101BC  0ED7               	movlw	low STR_66
 15521  0101BE  6EE6               	movwf	postinc1,c
 15522  0101C0  0EFF               	movlw	high STR_66
 15523  0101C2  6EE6               	movwf	postinc1,c
 15524                           
 15525                           ;stkvar	_n @ sp[(-58)+32]
 15526  0101C4  0EAE               	movlw	low _dbuf
 15527  0101C6  6E30               	movwf	(btemp+10)^0,c
 15528  0101C8  0E03               	movlw	high _dbuf
 15529  0101CA  6E31               	movwf	(btemp+11)^0,c
 15530  0101CC  0EE6               	movlw	-26
 15531  0101CE  50E3               	movf	plusw1,w,c
 15532  0101D0  2630               	addwf	(btemp+10)^0,f,c
 15533  0101D2  0EE7               	movlw	-25
 15534  0101D4  50E3               	movf	plusw1,w,c
 15535  0101D6  2231               	addwfc	(btemp+11)^0,f,c
 15536  0101D8  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 15537  0101DE  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 15538  0101E4  EC9D  F0CD         	call	_strcpy	;wreg free
 15539                           
 15540                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 15541  0101E8  D016               	goto	l11787
 15542  0101EA                     l11785:
 15543                           
 15544                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 15545  0101EA  0EDF               	movlw	low STR_67
 15546  0101EC  6EE6               	movwf	postinc1,c
 15547  0101EE  0EFF               	movlw	high STR_67
 15548  0101F0  6EE6               	movwf	postinc1,c
 15549                           
 15550                           ;stkvar	_n @ sp[(-58)+32]
 15551  0101F2  0EAE               	movlw	low _dbuf
 15552  0101F4  6E30               	movwf	(btemp+10)^0,c
 15553  0101F6  0E03               	movlw	high _dbuf
 15554  0101F8  6E31               	movwf	(btemp+11)^0,c
 15555  0101FA  0EE6               	movlw	-26
 15556  0101FC  50E3               	movf	plusw1,w,c
 15557  0101FE  2630               	addwf	(btemp+10)^0,f,c
 15558  010200  0EE7               	movlw	-25
 15559  010202  50E3               	movf	plusw1,w,c
 15560  010204  2231               	addwfc	(btemp+11)^0,f,c
 15561  010206  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 15562  01020C  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 15563  010212  EC9D  F0CD         	call	_strcpy	;wreg free
 15564  010216                     l11787:
 15565                           
 15566                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 15567                           ;stkvar	_w @ sp[(-56)+38]
 15568  010216  50E1               	movf	fsr1l,w,c
 15569  010218  0FEE               	addlw	-18
 15570  01021A  6ED9               	movwf	fsr2l,c
 15571  01021C  50E2               	movf	fsr1h,w,c
 15572  01021E  6EDA               	movwf	fsr2h,c
 15573  010220  0EFF               	movlw	255
 15574  010222  22DA               	addwfc	fsr2h,f,c
 15575  010224  0EFD               	movlw	253
 15576  010226  26DE               	addwf	postinc2,f,c
 15577  010228  0EFF               	movlw	255
 15578  01022A  22DD               	addwfc	postdec2,f,c
 15579  01022C                     l11789:
 15580                           
 15581                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 15582                           ;stkvar	_w @ sp[(-56)+38]
 15583  01022C  0EEE               	movlw	-18
 15584  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 15585  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 15586  01023A  0EAE               	movlw	low _dbuf
 15587  01023C  6EE6               	movwf	postinc1,c
 15588  01023E  0E03               	movlw	high _dbuf
 15589  010240  6EE6               	movwf	postinc1,c
 15590                           
 15591                           ;stkvar	_fp @ sp[(-60)+-2]
 15592  010242  0EC2               	movlw	-62
 15593  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 15594  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 15595  010250  ECA9  F0C8         	call	_pad	;wreg free
 15596  010254  EF1D  F089         	goto	l2195
 15597  010258                     l11793:
 15598                           
 15599                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 15600                           ;stkvar	_g @ sp[(-56)+16]
 15601  010258  0ED8               	movlw	-40
 15602  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 15603  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 15604  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 15605  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 15606  010272  ECF7  F0BF         	call	___fpclassifyf	;wreg free
 15607  010276  5026               	movf	btemp^0,w,c
 15608  010278  1027               	iorwf	(btemp+1)^0,w,c
 15609  01027A  A4D8               	btfss	status,2,c
 15610  01027C  D056               	goto	l11811
 15611  01027E  0EBF               	movlw	191
 15612  010280  6E30               	movwf	(btemp+10)^0,c
 15613  010282  0EFF               	movlw	255
 15614  010284  6E31               	movwf	(btemp+11)^0,c
 15615                           
 15616                           ;stkvar	_c @ sp[(-56)+-7]
 15617  010286  0EC1               	movlw	-63
 15618  010288  50E3               	movf	plusw1,w,c
 15619  01028A  6E2E               	movwf	(btemp+8)^0,c
 15620  01028C  6A2F               	clrf	(btemp+9)^0,c
 15621  01028E  5030               	movf	(btemp+10)^0,w,c
 15622  010290  262E               	addwf	(btemp+8)^0,f,c
 15623  010292  5031               	movf	(btemp+11)^0,w,c
 15624  010294  222F               	addwfc	(btemp+9)^0,f,c
 15625  010296  502F               	movf	(btemp+9)^0,w,c
 15626  010298  E106               	bnz	u11020
 15627  01029A  0E1A               	movlw	26
 15628  01029C  5C2E               	subwf	(btemp+8)^0,w,c
 15629  01029E  B0D8               	btfsc	status,0,c
 15630  0102A0  D002               	goto	u11020
 15631  0102A2  0E01               	movlw	1
 15632  0102A4  D001               	goto	u11030
 15633  0102A6                     u11020:
 15634  0102A6  0E00               	movlw	0
 15635  0102A8                     u11030:
 15636  0102A8  6E30               	movwf	(btemp+10)^0,c
 15637  0102AA  6A31               	clrf	(btemp+11)^0,c
 15638                           
 15639                           ;stkvar	_efgtoa$5426 @ sp[(-56)+6]
 15640  0102AC  0ECE               	movlw	-50
 15641  0102AE  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 15642  0102B4  0ECF               	movlw	-49
 15643  0102B6  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 15644                           
 15645                           ;stkvar	_efgtoa$5426 @ sp[(-56)+6]
 15646  0102BC  0ECE               	movlw	-50
 15647  0102BE  006F FF8C  F026    	movff	plusw1,btemp
 15648  0102C4  0ECF               	movlw	-49
 15649  0102C6  50E3               	movf	plusw1,w,c
 15650  0102C8  1026               	iorwf	btemp^0,w,c
 15651  0102CA  B4D8               	btfsc	status,2,c
 15652  0102CC  D017               	goto	l11803
 15653                           
 15654                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 15655  0102CE  0EDB               	movlw	low STR_70
 15656  0102D0  6EE6               	movwf	postinc1,c
 15657  0102D2  0EFF               	movlw	high STR_70
 15658  0102D4  6EE6               	movwf	postinc1,c
 15659                           
 15660                           ;stkvar	_n @ sp[(-58)+32]
 15661  0102D6  0EAE               	movlw	low _dbuf
 15662  0102D8  6E30               	movwf	(btemp+10)^0,c
 15663  0102DA  0E03               	movlw	high _dbuf
 15664  0102DC  6E31               	movwf	(btemp+11)^0,c
 15665  0102DE  0EE6               	movlw	-26
 15666  0102E0  50E3               	movf	plusw1,w,c
 15667  0102E2  2630               	addwf	(btemp+10)^0,f,c
 15668  0102E4  0EE7               	movlw	-25
 15669  0102E6  50E3               	movf	plusw1,w,c
 15670  0102E8  2231               	addwfc	(btemp+11)^0,f,c
 15671  0102EA  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 15672  0102F0  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 15673  0102F6  EC9D  F0CD         	call	_strcpy	;wreg free
 15674                           
 15675                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 15676  0102FA  D78D               	goto	l11787
 15677  0102FC                     l11803:
 15678                           
 15679                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 15680  0102FC  0EE3               	movlw	low STR_71
 15681  0102FE  6EE6               	movwf	postinc1,c
 15682  010300  0EFF               	movlw	high STR_71
 15683  010302  6EE6               	movwf	postinc1,c
 15684                           
 15685                           ;stkvar	_n @ sp[(-58)+32]
 15686  010304  0EAE               	movlw	low _dbuf
 15687  010306  6E30               	movwf	(btemp+10)^0,c
 15688  010308  0E03               	movlw	high _dbuf
 15689  01030A  6E31               	movwf	(btemp+11)^0,c
 15690  01030C  0EE6               	movlw	-26
 15691  01030E  50E3               	movf	plusw1,w,c
 15692  010310  2630               	addwf	(btemp+10)^0,f,c
 15693  010312  0EE7               	movlw	-25
 15694  010314  50E3               	movf	plusw1,w,c
 15695  010316  2231               	addwfc	(btemp+11)^0,f,c
 15696  010318  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 15697  01031E  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 15698  010324  EC9D  F0CD         	call	_strcpy	;wreg free
 15699  010328  D776               	goto	l11787
 15700  01032A                     l11811:
 15701                           
 15702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 15703  01032A  0E00               	movlw	0
 15704  01032C  6E2E               	movwf	(btemp+8)^0,c
 15705  01032E  0E00               	movlw	0
 15706  010330  6E2F               	movwf	(btemp+9)^0,c
 15707  010332  0E80               	movlw	128
 15708  010334  6E30               	movwf	(btemp+10)^0,c
 15709  010336  0E3F               	movlw	63
 15710  010338  6E31               	movwf	(btemp+11)^0,c
 15711                           
 15712                           ;stkvar	_u @ sp[(-56)+12]
 15713  01033A  0ED4               	movlw	-44
 15714  01033C  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 15715  010342  0ED5               	movlw	-43
 15716  010344  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 15717  01034A  0ED6               	movlw	-42
 15718  01034C  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 15719  010352  0ED7               	movlw	-41
 15720  010354  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 15721                           
 15722                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 15723                           ;stkvar	_e @ sp[(-56)+34]
 15724  01035A  0EEA               	movlw	-22
 15725  01035C  6AE3               	clrf	plusw1,c
 15726  01035E  0EEB               	movlw	-21
 15727  010360  6AE3               	clrf	plusw1,c
 15728                           
 15729                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 15730  010362  0E00               	movlw	0
 15731  010364  6EE6               	movwf	postinc1,c
 15732  010366  0E00               	movlw	0
 15733  010368  6EE6               	movwf	postinc1,c
 15734  01036A  0E00               	movlw	0
 15735  01036C  6EE6               	movwf	postinc1,c
 15736  01036E  0E00               	movlw	0
 15737  010370  6EE6               	movwf	postinc1,c
 15738                           
 15739                           ;stkvar	_g @ sp[(-60)+16]
 15740  010372  0ED4               	movlw	-44
 15741  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 15742  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 15743  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 15744  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 15745  01038C  EC6A  F0CE         	call	___fleq	;wreg free
 15746  010390  A026               	btfss	btemp& (0+255),0,c
 15747  010392  D039               	goto	l11823
 15748  010394  D0BC               	goto	u11070
 15749  010396                     l11819:
 15750                           
 15751                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 15752  010396  0E00               	movlw	0
 15753  010398  6EE6               	movwf	postinc1,c
 15754  01039A  0E00               	movlw	0
 15755  01039C  6EE6               	movwf	postinc1,c
 15756  01039E  0E20               	movlw	32
 15757  0103A0  6EE6               	movwf	postinc1,c
 15758  0103A2  0E41               	movlw	65
 15759  0103A4  6EE6               	movwf	postinc1,c
 15760                           
 15761                           ;stkvar	_u @ sp[(-60)+12]
 15762  0103A6  0ED0               	movlw	-48
 15763  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 15764  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 15765  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 15766  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 15767  0103C0  EC44  F099         	call	___flmul	;wreg free
 15768                           
 15769                           ;stkvar	_u @ sp[(-56)+12]
 15770  0103C4  0ED4               	movlw	-44
 15771  0103C6  0060  F09B  FFE3   	movff	btemp,plusw1
 15772  0103CC  0ED5               	movlw	-43
 15773  0103CE  0060  F09F  FFE3   	movff	btemp+1,plusw1
 15774  0103D4  0ED6               	movlw	-42
 15775  0103D6  0060  F0A3  FFE3   	movff	btemp+2,plusw1
 15776  0103DC  0ED7               	movlw	-41
 15777  0103DE  0060  F0A7  FFE3   	movff	btemp+3,plusw1
 15778                           
 15779                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 15780                           ;stkvar	_e @ sp[(-56)+34]
 15781  0103E4  0EEA               	movlw	-22
 15782  0103E6  50E3               	movf	plusw1,w,c
 15783  0103E8  0F01               	addlw	1
 15784  0103EA  6E26               	movwf	btemp^0,c
 15785  0103EC  0EEA               	movlw	-22
 15786  0103EE  0060  F09B  FFE3   	movff	btemp,plusw1
 15787  0103F4  6A26               	clrf	btemp^0,c
 15788  0103F6  0EEB               	movlw	-21
 15789  0103F8  50E3               	movf	plusw1,w,c
 15790  0103FA  2026               	addwfc	btemp^0,w,c
 15791  0103FC  6E26               	movwf	btemp^0,c
 15792  0103FE  0EEB               	movlw	-21
 15793  010400  0060  F09B  FFE3   	movff	btemp,plusw1
 15794  010406                     l11823:
 15795                           
 15796                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 15797  010406  0E00               	movlw	0
 15798  010408  6EE6               	movwf	postinc1,c
 15799  01040A  0E00               	movlw	0
 15800  01040C  6EE6               	movwf	postinc1,c
 15801  01040E  0E20               	movlw	32
 15802  010410  6EE6               	movwf	postinc1,c
 15803  010412  0E41               	movlw	65
 15804  010414  6EE6               	movwf	postinc1,c
 15805                           
 15806                           ;stkvar	_u @ sp[(-60)+12]
 15807  010416  0ED0               	movlw	-48
 15808  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 15809  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 15810  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 15811  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 15812  010430  EC44  F099         	call	___flmul	;wreg free
 15813  010434  0060  F09B  FFE6   	movff	btemp,postinc1
 15814  01043A  0060  F09F  FFE6   	movff	btemp+1,postinc1
 15815  010440  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 15816  010446  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 15817                           
 15818                           ;stkvar	_g @ sp[(-60)+16]
 15819  01044C  0ED4               	movlw	-44
 15820  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 15821  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 15822  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 15823  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 15824  010466  ECAD  F0C3         	call	___flge	;wreg free
 15825  01046A  A026               	btfss	btemp& (0+255),0,c
 15826  01046C  D032               	goto	l11829
 15827  01046E  D793               	goto	l11819
 15828  010470                     l11825:
 15829                           
 15830                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 15831  010470  0E00               	movlw	0
 15832  010472  6EE6               	movwf	postinc1,c
 15833  010474  0E00               	movlw	0
 15834  010476  6EE6               	movwf	postinc1,c
 15835  010478  0E20               	movlw	32
 15836  01047A  6EE6               	movwf	postinc1,c
 15837  01047C  0E41               	movlw	65
 15838  01047E  6EE6               	movwf	postinc1,c
 15839                           
 15840                           ;stkvar	_u @ sp[(-60)+12]
 15841  010480  0ED0               	movlw	-48
 15842  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 15843  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 15844  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 15845  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 15846  01049A  ECD8  F0A4         	call	___fldiv	;wreg free
 15847                           
 15848                           ;stkvar	_u @ sp[(-56)+12]
 15849  01049E  0ED4               	movlw	-44
 15850  0104A0  0060  F09B  FFE3   	movff	btemp,plusw1
 15851  0104A6  0ED5               	movlw	-43
 15852  0104A8  0060  F09F  FFE3   	movff	btemp+1,plusw1
 15853  0104AE  0ED6               	movlw	-42
 15854  0104B0  0060  F0A3  FFE3   	movff	btemp+2,plusw1
 15855  0104B6  0ED7               	movlw	-41
 15856  0104B8  0060  F0A7  FFE3   	movff	btemp+3,plusw1
 15857                           
 15858                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 15859                           ;stkvar	_e @ sp[(-56)+34]
 15860  0104BE  50E1               	movf	fsr1l,w,c
 15861  0104C0  0FEA               	addlw	-22
 15862  0104C2  6ED9               	movwf	fsr2l,c
 15863  0104C4  50E2               	movf	fsr1h,w,c
 15864  0104C6  6EDA               	movwf	fsr2h,c
 15865  0104C8  0EFF               	movlw	255
 15866  0104CA  22DA               	addwfc	fsr2h,f,c
 15867  0104CC  06DE               	decf	postinc2,f,c
 15868  0104CE  0E00               	movlw	0
 15869  0104D0  5ADD               	subwfb	postdec2,f,c
 15870  0104D2                     l11829:
 15871                           
 15872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 15873                           ;stkvar	_u @ sp[(-56)+12]
 15874  0104D2  0ED4               	movlw	-44
 15875  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 15876  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 15877  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 15878  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 15879                           
 15880                           ;stkvar	_g @ sp[(-60)+16]
 15881  0104EC  0ED4               	movlw	-44
 15882  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 15883  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 15884  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 15885  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 15886  010506  ECAD  F0C3         	call	___flge	;wreg free
 15887  01050A  A026               	btfss	btemp& (0+255),0,c
 15888  01050C  D7B1               	goto	l11825
 15889  01050E                     u11070:
 15890                           
 15891                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 15892                           ;stkvar	_c @ sp[(-56)+-7]
 15893  01050E  0EC1               	movlw	-63
 15894  010510  50E3               	movf	plusw1,w,c
 15895  010512  6EE6               	movwf	postinc1,c
 15896  010514  0E00               	movlw	0
 15897  010516  6EE6               	movwf	postinc1,c
 15898  010518  ECC4  F0D2         	call	_tolower	;wreg free
 15899                           
 15900                           ;stkvar	_mode @ sp[(-56)+54]
 15901  01051C  0EFE               	movlw	-2
 15902  01051E  0060  F09B  FFE3   	movff	btemp,plusw1
 15903                           
 15904                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 15905                           ;stkvar	_mode @ sp[(-56)+54]
 15906                           ;stkvar	_nmode @ sp[(-56)+55]
 15907  010524  0EFE               	movlw	-2
 15908  010526  006F FF8C  F026    	movff	plusw1,btemp
 15909  01052C  0EFF               	movlw	-1
 15910  01052E  0060  F09B  FFE3   	movff	btemp,plusw1
 15911                           
 15912                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 15913                           ;stkvar	_mode @ sp[(-56)+54]
 15914  010534  0EFE               	movlw	-2
 15915  010536  006F FF8C  F026    	movff	plusw1,btemp
 15916  01053C  0E67               	movlw	103
 15917  01053E  1826               	xorwf	btemp^0,w,c
 15918  010540  A4D8               	btfss	status,2,c
 15919  010542  D025               	goto	l11847
 15920                           
 15921                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 15922  010544  500C               	movf	_prec^0,w,c
 15923  010546  100D               	iorwf	(_prec+1)^0,w,c
 15924  010548  A4D8               	btfss	status,2,c
 15925  01054A  D004               	goto	l11841
 15926                           
 15927                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 15928  01054C  0E00               	movlw	0
 15929  01054E  6E0D               	movwf	(_prec+1)^0,c
 15930  010550  0E01               	movlw	1
 15931  010552  6E0C               	movwf	_prec^0,c
 15932  010554                     l11841:
 15933                           
 15934                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 15935  010554  BE0D               	btfsc	(_prec+1)^0,7,c
 15936  010556  D005               	goto	u11100
 15937  010558  500D               	movf	(_prec+1)^0,w,c
 15938  01055A  E110               	bnz	l11845
 15939  01055C  040C               	decf	_prec^0,w,c
 15940  01055E  B0D8               	btfsc	status,0,c
 15941  010560  D00D               	goto	l11845
 15942  010562                     u11100:
 15943  010562  0E06               	movlw	6
 15944  010564  6E30               	movwf	(btemp+10)^0,c
 15945  010566  0E00               	movlw	0
 15946  010568  6E31               	movwf	(btemp+11)^0,c
 15947                           
 15948                           ;stkvar	_p @ sp[(-56)+40]
 15949  01056A  0EF0               	movlw	-16
 15950  01056C  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 15951  010572  0EF1               	movlw	-15
 15952  010574  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 15953  01057A  D00C               	goto	l11853
 15954  01057C                     l11845:
 15955                           
 15956                           ;stkvar	_p @ sp[(-56)+40]
 15957  01057C  0EF0               	movlw	-16
 15958  01057E  0060  F033  FFE3   	movff	_prec,plusw1
 15959  010584  0EF1               	movlw	-15
 15960  010586  0060  F037  FFE3   	movff	_prec+1,plusw1
 15961  01058C  D003               	goto	l11853
 15962  01058E                     l11847:
 15963                           
 15964                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 15965  01058E  AE0D               	btfss	(_prec+1)^0,7,c
 15966  010590  D7F5               	goto	l11845
 15967  010592  D7E7               	goto	u11100
 15968  010594                     l11853:
 15969                           
 15970                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 15971                           ;stkvar	_mode @ sp[(-56)+54]
 15972  010594  0EFE               	movlw	-2
 15973  010596  006F FF8C  F026    	movff	plusw1,btemp
 15974  01059C  0E67               	movlw	103
 15975  01059E  1826               	xorwf	btemp^0,w,c
 15976  0105A0  A4D8               	btfss	status,2,c
 15977  0105A2  D02F               	goto	l11863
 15978                           
 15979                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 15980                           ;stkvar	_e @ sp[(-56)+34]
 15981  0105A4  0EEB               	movlw	-21
 15982  0105A6  AEE3               	btfss	plusw1,7,c
 15983  0105A8  D00E               	goto	u11130
 15984  0105AA  0EEA               	movlw	-22
 15985  0105AC  006F FF8C  F026    	movff	plusw1,btemp
 15986  0105B2  0EFC               	movlw	252
 15987  0105B4  5E26               	subwf	btemp^0,f,c
 15988  0105B6  0EEB               	movlw	-21
 15989  0105B8  006F FF8C  F026    	movff	plusw1,btemp
 15990  0105BE  0EFF               	movlw	255
 15991  0105C0  5A26               	subwfb	btemp^0,f,c
 15992  0105C2  A0D8               	btfss	status,0,c
 15993  0105C4  D018               	goto	l11861
 15994  0105C6                     u11130:
 15995                           
 15996                           ;stkvar	_e @ sp[(-56)+34]
 15997                           ;stkvar	_p @ sp[(-56)+40]
 15998  0105C6  0EF0               	movlw	-16
 15999  0105C8  50E3               	movf	plusw1,w,c
 16000  0105CA  0FFF               	addlw	255
 16001  0105CC  6E30               	movwf	(btemp+10)^0,c
 16002  0105CE  0EF1               	movlw	-15
 16003  0105D0  006F FF8C  F031    	movff	plusw1,btemp+11
 16004  0105D6  0EFF               	movlw	255
 16005  0105D8  2231               	addwfc	(btemp+11)^0,f,c
 16006  0105DA  0EEA               	movlw	-22
 16007  0105DC  50E3               	movf	plusw1,w,c
 16008  0105DE  5C30               	subwf	(btemp+10)^0,w,c
 16009  0105E0  5031               	movf	(btemp+11)^0,w,c
 16010  0105E2  0A80               	xorlw	128
 16011  0105E4  6E26               	movwf	btemp^0,c
 16012  0105E6  0EEB               	movlw	-21
 16013  0105E8  50E3               	movf	plusw1,w,c
 16014  0105EA  0A80               	xorlw	128
 16015  0105EC  5826               	subwfb	btemp^0,w,c
 16016  0105EE  A0D8               	btfss	status,0,c
 16017  0105F0  D002               	goto	l11861
 16018                           
 16019                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 16020  0105F2  0E66               	movlw	102
 16021  0105F4  D001               	goto	L17
 16022  0105F6                     l11861:
 16023                           
 16024                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 16025  0105F6  0E65               	movlw	101
 16026  0105F8                     L17:
 16027  0105F8  6E31               	movwf	(btemp+11)^0,c
 16028                           
 16029                           ;stkvar	_nmode @ sp[(-56)+55]
 16030  0105FA  0EFF               	movlw	-1
 16031  0105FC  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 16032  010602                     l11863:
 16033                           
 16034                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 16035                           ;stkvar	_p @ sp[(-56)+40]
 16036                           ;stkvar	_m @ sp[(-56)+48]
 16037  010602  0EF0               	movlw	-16
 16038  010604  006F FF8C  F026    	movff	plusw1,btemp
 16039  01060A  0EF8               	movlw	-8
 16040  01060C  0060  F09B  FFE3   	movff	btemp,plusw1
 16041  010612  0EF1               	movlw	-15
 16042  010614  006F FF8C  F026    	movff	plusw1,btemp
 16043  01061A  0EF9               	movlw	-7
 16044  01061C  0060  F09B  FFE3   	movff	btemp,plusw1
 16045                           
 16046                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 16047                           ;stkvar	_mode @ sp[(-56)+54]
 16048  010622  0EFE               	movlw	-2
 16049  010624  006F FF8C  F026    	movff	plusw1,btemp
 16050  01062A  0E67               	movlw	103
 16051  01062C  1826               	xorwf	btemp^0,w,c
 16052  01062E  A4D8               	btfss	status,2,c
 16053  010630  D00B               	goto	u11170
 16054                           
 16055                           ;stkvar	_nmode @ sp[(-56)+55]
 16056  010632  0EFF               	movlw	-1
 16057  010634  006F FF8C  F026    	movff	plusw1,btemp
 16058  01063A  0E66               	movlw	102
 16059  01063C  1826               	xorwf	btemp^0,w,c
 16060  01063E  A4D8               	btfss	status,2,c
 16061  010640  D014               	goto	l2224
 16062                           
 16063                           ;stkvar	_e @ sp[(-56)+34]
 16064  010642  0EEB               	movlw	-21
 16065  010644  AEE3               	btfss	plusw1,7,c
 16066  010646  D011               	goto	l2224
 16067  010648                     u11170:
 16068                           
 16069                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 16070                           ;stkvar	_m @ sp[(-56)+48]
 16071  010648  0EF8               	movlw	-8
 16072  01064A  50E3               	movf	plusw1,w,c
 16073  01064C  0F01               	addlw	1
 16074  01064E  6E26               	movwf	btemp^0,c
 16075  010650  0EF8               	movlw	-8
 16076  010652  0060  F09B  FFE3   	movff	btemp,plusw1
 16077  010658  6A26               	clrf	btemp^0,c
 16078  01065A  0EF9               	movlw	-7
 16079  01065C  50E3               	movf	plusw1,w,c
 16080  01065E  2026               	addwfc	btemp^0,w,c
 16081  010660  6E26               	movwf	btemp^0,c
 16082  010662  0EF9               	movlw	-7
 16083  010664  0060  F09B  FFE3   	movff	btemp,plusw1
 16084  01066A                     l2224:
 16085                           
 16086                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 16087                           ;stkvar	_nmode @ sp[(-56)+55]
 16088  01066A  0EFF               	movlw	-1
 16089  01066C  006F FF8C  F026    	movff	plusw1,btemp
 16090  010672  0E66               	movlw	102
 16091  010674  1826               	xorwf	btemp^0,w,c
 16092  010676  A4D8               	btfss	status,2,c
 16093  010678  D03B               	goto	l11883
 16094                           
 16095                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 16096                           ;stkvar	_e @ sp[(-56)+34]
 16097  01067A  0EEB               	movlw	-21
 16098  01067C  AEE3               	btfss	plusw1,7,c
 16099  01067E  D01C               	goto	l11879
 16100                           
 16101                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 16102  010680  0E00               	movlw	0
 16103  010682  6E2E               	movwf	(btemp+8)^0,c
 16104  010684  0E00               	movlw	0
 16105  010686  6E2F               	movwf	(btemp+9)^0,c
 16106  010688  0E80               	movlw	128
 16107  01068A  6E30               	movwf	(btemp+10)^0,c
 16108  01068C  0E3F               	movlw	63
 16109  01068E  6E31               	movwf	(btemp+11)^0,c
 16110                           
 16111                           ;stkvar	_u @ sp[(-56)+12]
 16112  010690  0ED4               	movlw	-44
 16113  010692  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 16114  010698  0ED5               	movlw	-43
 16115  01069A  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 16116  0106A0  0ED6               	movlw	-42
 16117  0106A2  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 16118  0106A8  0ED7               	movlw	-41
 16119  0106AA  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 16120                           
 16121                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 16122                           ;stkvar	_e @ sp[(-56)+34]
 16123  0106B0  0EEA               	movlw	-22
 16124  0106B2  6AE3               	clrf	plusw1,c
 16125  0106B4  0EEB               	movlw	-21
 16126  0106B6  6AE3               	clrf	plusw1,c
 16127  0106B8                     l11879:
 16128                           
 16129                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 16130                           ;stkvar	_mode @ sp[(-56)+54]
 16131  0106B8  0EFE               	movlw	-2
 16132  0106BA  006F FF8C  F026    	movff	plusw1,btemp
 16133  0106C0  0E67               	movlw	103
 16134  0106C2  1826               	xorwf	btemp^0,w,c
 16135  0106C4  B4D8               	btfsc	status,2,c
 16136  0106C6  D014               	goto	l11883
 16137                           
 16138                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 16139                           ;stkvar	_e @ sp[(-56)+34]
 16140                           ;stkvar	_m @ sp[(-56)+48]
 16141  0106C8  0EF8               	movlw	-8
 16142  0106CA  50E3               	movf	plusw1,w,c
 16143  0106CC  6E26               	movwf	btemp^0,c
 16144  0106CE  0EEA               	movlw	-22
 16145  0106D0  50E3               	movf	plusw1,w,c
 16146  0106D2  2626               	addwf	btemp^0,f,c
 16147  0106D4  0EF8               	movlw	-8
 16148  0106D6  0060  F09B  FFE3   	movff	btemp,plusw1
 16149  0106DC  0EF9               	movlw	-7
 16150  0106DE  50E3               	movf	plusw1,w,c
 16151  0106E0  6E26               	movwf	btemp^0,c
 16152  0106E2  0EEB               	movlw	-21
 16153  0106E4  50E3               	movf	plusw1,w,c
 16154  0106E6  2226               	addwfc	btemp^0,f,c
 16155  0106E8  0EF9               	movlw	-7
 16156  0106EA  0060  F09B  FFE3   	movff	btemp,plusw1
 16157  0106F0                     l11883:
 16158                           
 16159                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 16160                           ;stkvar	_i @ sp[(-56)+36]
 16161  0106F0  0EEC               	movlw	-20
 16162  0106F2  6AE3               	clrf	plusw1,c
 16163  0106F4  0EED               	movlw	-19
 16164  0106F6  6AE3               	clrf	plusw1,c
 16165                           
 16166                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 16167                           ;stkvar	_g @ sp[(-56)+16]
 16168  0106F8  0ED8               	movlw	-40
 16169  0106FA  006F FF8C  F02E    	movff	plusw1,btemp+8
 16170  010700  0ED9               	movlw	-39
 16171  010702  006F FF8C  F02F    	movff	plusw1,btemp+9
 16172  010708  0EDA               	movlw	-38
 16173  01070A  006F FF8C  F030    	movff	plusw1,btemp+10
 16174  010710  0EDB               	movlw	-37
 16175  010712  006F FF8C  F031    	movff	plusw1,btemp+11
 16176                           
 16177                           ;stkvar	_h @ sp[(-56)+24]
 16178  010718  0EE0               	movlw	-32
 16179  01071A  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 16180  010720  0EE1               	movlw	-31
 16181  010722  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 16182  010728  0EE2               	movlw	-30
 16183  01072A  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 16184  010730  0EE3               	movlw	-29
 16185  010732  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 16186                           
 16187                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 16188                           ;stkvar	_u @ sp[(-56)+12]
 16189  010738  0ED4               	movlw	-44
 16190  01073A  006F FF8C  F02E    	movff	plusw1,btemp+8
 16191  010740  0ED5               	movlw	-43
 16192  010742  006F FF8C  F02F    	movff	plusw1,btemp+9
 16193  010748  0ED6               	movlw	-42
 16194  01074A  006F FF8C  F030    	movff	plusw1,btemp+10
 16195  010750  0ED7               	movlw	-41
 16196  010752  006F FF8C  F031    	movff	plusw1,btemp+11
 16197                           
 16198                           ;stkvar	_ou @ sp[(-56)+28]
 16199  010758  0EE4               	movlw	-28
 16200  01075A  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 16201  010760  0EE5               	movlw	-27
 16202  010762  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 16203  010768  0EE6               	movlw	-26
 16204  01076A  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 16205  010770  0EE7               	movlw	-25
 16206  010772  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 16207                           
 16208                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 16209  010778  D0D6               	goto	l11899
 16210  01077A                     l11889:
 16211                           
 16212                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 16213                           ;stkvar	_u @ sp[(-56)+12]
 16214  01077A  0ED4               	movlw	-44
 16215  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 16216  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 16217  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 16218  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 16219                           
 16220                           ;stkvar	_h @ sp[(-60)+24]
 16221  010794  0EDC               	movlw	-36
 16222  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 16223  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 16224  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 16225  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 16226  0107AE  ECD8  F0A4         	call	___fldiv	;wreg free
 16227  0107B2  0060  F09B  FFE6   	movff	btemp,postinc1
 16228  0107B8  0060  F09F  FFE6   	movff	btemp+1,postinc1
 16229  0107BE  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 16230  0107C4  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 16231  0107CA  ECD9  F0AF         	call	_floorf	;wreg free
 16232                           
 16233                           ;stkvar	_l @ sp[(-56)+20]
 16234  0107CE  0EDC               	movlw	-36
 16235  0107D0  0060  F09B  FFE3   	movff	btemp,plusw1
 16236  0107D6  0EDD               	movlw	-35
 16237  0107D8  0060  F09F  FFE3   	movff	btemp+1,plusw1
 16238  0107DE  0EDE               	movlw	-34
 16239  0107E0  0060  F0A3  FFE3   	movff	btemp+2,plusw1
 16240  0107E6  0EDF               	movlw	-33
 16241  0107E8  0060  F0A7  FFE3   	movff	btemp+3,plusw1
 16242                           
 16243                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 16244                           ;stkvar	_l @ sp[(-56)+20]
 16245  0107EE  0EDC               	movlw	-36
 16246  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 16247  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 16248  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 16249  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 16250  010808  EC3C  F0C2         	call	___fltol	;wreg free
 16251  01080C  0060  F098  F030   	movff	btemp,btemp+10
 16252  010812  0060  F09C  F031   	movff	btemp+1,btemp+11
 16253                           
 16254                           ;stkvar	_d @ sp[(-56)+44]
 16255  010818  0EF4               	movlw	-12
 16256  01081A  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 16257  010820  0EF5               	movlw	-11
 16258  010822  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 16259                           
 16260                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 16261                           ;stkvar	_u @ sp[(-56)+12]
 16262  010828  0ED4               	movlw	-44
 16263  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 16264  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 16265  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 16266  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 16267                           
 16268                           ;stkvar	_l @ sp[(-60)+20]
 16269  010842  0ED8               	movlw	-40
 16270  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 16271  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 16272  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 16273  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 16274  01085C  EC44  F099         	call	___flmul	;wreg free
 16275  010860  0060  F09B  FFE6   	movff	btemp,postinc1
 16276  010866  0060  F09F  FFE6   	movff	btemp+1,postinc1
 16277  01086C  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 16278  010872  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 16279                           
 16280                           ;stkvar	_h @ sp[(-60)+24]
 16281  010878  0EDC               	movlw	-36
 16282  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 16283  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 16284  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 16285  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 16286  010892  EC43  F0D6         	call	___flsub	;wreg free
 16287                           
 16288                           ;stkvar	_h @ sp[(-56)+24]
 16289  010896  0EE0               	movlw	-32
 16290  010898  0060  F09B  FFE3   	movff	btemp,plusw1
 16291  01089E  0EE1               	movlw	-31
 16292  0108A0  0060  F09F  FFE3   	movff	btemp+1,plusw1
 16293  0108A6  0EE2               	movlw	-30
 16294  0108A8  0060  F0A3  FFE3   	movff	btemp+2,plusw1
 16295  0108AE  0EE3               	movlw	-29
 16296  0108B0  0060  F0A7  FFE3   	movff	btemp+3,plusw1
 16297                           
 16298                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 16299  0108B6  0E00               	movlw	0
 16300  0108B8  6EE6               	movwf	postinc1,c
 16301  0108BA  0E00               	movlw	0
 16302  0108BC  6EE6               	movwf	postinc1,c
 16303  0108BE  0E20               	movlw	32
 16304  0108C0  6EE6               	movwf	postinc1,c
 16305  0108C2  0E41               	movlw	65
 16306  0108C4  6EE6               	movwf	postinc1,c
 16307                           
 16308                           ;stkvar	_u @ sp[(-60)+12]
 16309  0108C6  0ED0               	movlw	-48
 16310  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 16311  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 16312  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 16313  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 16314  0108E0  ECD8  F0A4         	call	___fldiv	;wreg free
 16315                           
 16316                           ;stkvar	_u @ sp[(-56)+12]
 16317  0108E4  0ED4               	movlw	-44
 16318  0108E6  0060  F09B  FFE3   	movff	btemp,plusw1
 16319  0108EC  0ED5               	movlw	-43
 16320  0108EE  0060  F09F  FFE3   	movff	btemp+1,plusw1
 16321  0108F4  0ED6               	movlw	-42
 16322  0108F6  0060  F0A3  FFE3   	movff	btemp+2,plusw1
 16323  0108FC  0ED7               	movlw	-41
 16324  0108FE  0060  F0A7  FFE3   	movff	btemp+3,plusw1
 16325                           
 16326                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 16327                           ;stkvar	_i @ sp[(-56)+36]
 16328  010904  0EEC               	movlw	-20
 16329  010906  50E3               	movf	plusw1,w,c
 16330  010908  0F01               	addlw	1
 16331  01090A  6E26               	movwf	btemp^0,c
 16332  01090C  0EEC               	movlw	-20
 16333  01090E  0060  F09B  FFE3   	movff	btemp,plusw1
 16334  010914  6A26               	clrf	btemp^0,c
 16335  010916  0EED               	movlw	-19
 16336  010918  50E3               	movf	plusw1,w,c
 16337  01091A  2026               	addwfc	btemp^0,w,c
 16338  01091C  6E26               	movwf	btemp^0,c
 16339  01091E  0EED               	movlw	-19
 16340  010920  0060  F09B  FFE3   	movff	btemp,plusw1
 16341  010926                     l11899:
 16342                           
 16343                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 16344                           ;stkvar	_m @ sp[(-56)+48]
 16345                           ;stkvar	_i @ sp[(-56)+36]
 16346  010926  50E1               	movf	fsr1l,w,c
 16347  010928  0FEC               	addlw	-20
 16348  01092A  6ED9               	movwf	fsr2l,c
 16349  01092C  50E2               	movf	fsr1h,w,c
 16350  01092E  6EDA               	movwf	fsr2h,c
 16351  010930  0EFF               	movlw	255
 16352  010932  22DA               	addwfc	fsr2h,f,c
 16353  010934  0EF8               	movlw	-8
 16354  010936  50E3               	movf	plusw1,w,c
 16355  010938  5CDE               	subwf	postinc2,w,c
 16356  01093A  50DE               	movf	postinc2,w,c
 16357  01093C  0A80               	xorlw	128
 16358  01093E  6E26               	movwf	btemp^0,c
 16359  010940  0EF9               	movlw	-7
 16360  010942  50E3               	movf	plusw1,w,c
 16361  010944  0A80               	xorlw	128
 16362  010946  5826               	subwfb	btemp^0,w,c
 16363  010948  A0D8               	btfss	status,0,c
 16364  01094A  D717               	goto	l11889
 16365                           
 16366                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 16367  01094C  0E00               	movlw	0
 16368  01094E  6EE6               	movwf	postinc1,c
 16369  010950  0E00               	movlw	0
 16370  010952  6EE6               	movwf	postinc1,c
 16371  010954  0EA0               	movlw	160
 16372  010956  6EE6               	movwf	postinc1,c
 16373  010958  0E40               	movlw	64
 16374  01095A  6EE6               	movwf	postinc1,c
 16375                           
 16376                           ;stkvar	_u @ sp[(-60)+12]
 16377  01095C  0ED0               	movlw	-48
 16378  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 16379  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 16380  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 16381  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 16382  010976  EC44  F099         	call	___flmul	;wreg free
 16383                           
 16384                           ;stkvar	_l @ sp[(-56)+20]
 16385  01097A  0EDC               	movlw	-36
 16386  01097C  0060  F09B  FFE3   	movff	btemp,plusw1
 16387  010982  0EDD               	movlw	-35
 16388  010984  0060  F09F  FFE3   	movff	btemp+1,plusw1
 16389  01098A  0EDE               	movlw	-34
 16390  01098C  0060  F0A3  FFE3   	movff	btemp+2,plusw1
 16391  010992  0EDF               	movlw	-33
 16392  010994  0060  F0A7  FFE3   	movff	btemp+3,plusw1
 16393                           
 16394                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 16395                           ;stkvar	_l @ sp[(-56)+20]
 16396  01099A  0EDC               	movlw	-36
 16397  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 16398  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 16399  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 16400  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 16401                           
 16402                           ;stkvar	_h @ sp[(-60)+24]
 16403  0109B4  0EDC               	movlw	-36
 16404  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 16405  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 16406  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 16407  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 16408  0109CE  ECAD  F0C3         	call	___flge	;wreg free
 16409  0109D2  A026               	btfss	btemp& (0+255),0,c
 16410  0109D4  D021               	goto	u11240
 16411                           
 16412                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 16413                           ;stkvar	_l @ sp[(-56)+20]
 16414                           
 16415                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 16416                           
 16417                           ;stkvar	_l @ sp[(-56)+20]
 16418                           
 16419                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 16420  0109D6  0EDC               	movlw	-36
 16421  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 16422  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 16423  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 16424  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 16425                           
 16426                           ;stkvar	_h @ sp[(-60)+24]
 16427  0109F0  0EDC               	movlw	-36
 16428  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 16429  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 16430  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 16431  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 16432  010A0A  EC6A  F0CE         	call	___fleq	;wreg free
 16433  010A0E  A026               	btfss	btemp& (0+255),0,c
 16434  010A10  D01B               	goto	l11913
 16435                           
 16436                           ;stkvar	_d @ sp[(-56)+44]
 16437  010A12  0EF4               	movlw	-12
 16438  010A14  B0E3               	btfsc	plusw1,0,c
 16439  010A16  D018               	goto	l11913
 16440  010A18                     u11240:
 16441                           
 16442                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 16443  010A18  0E00               	movlw	0
 16444  010A1A  6E2E               	movwf	(btemp+8)^0,c
 16445  010A1C  0E00               	movlw	0
 16446  010A1E  6E2F               	movwf	(btemp+9)^0,c
 16447  010A20  0E00               	movlw	0
 16448  010A22  6E30               	movwf	(btemp+10)^0,c
 16449  010A24  0E00               	movlw	0
 16450  010A26  6E31               	movwf	(btemp+11)^0,c
 16451                           
 16452                           ;stkvar	_l @ sp[(-56)+20]
 16453  010A28  0EDC               	movlw	-36
 16454  010A2A  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 16455  010A30  0EDD               	movlw	-35
 16456  010A32  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 16457  010A38  0EDE               	movlw	-34
 16458  010A3A  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 16459  010A40  0EDF               	movlw	-33
 16460  010A42  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 16461  010A48                     l11913:
 16462                           
 16463                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 16464                           ;stkvar	_l @ sp[(-56)+20]
 16465  010A48  0EDC               	movlw	-36
 16466  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 16467  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 16468  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 16469  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 16470                           
 16471                           ;stkvar	_g @ sp[(-60)+16]
 16472  010A62  0ED4               	movlw	-44
 16473  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 16474  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 16475  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 16476  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 16477  010A7C  EC59  F09D         	call	___fladd	;wreg free
 16478                           
 16479                           ;stkvar	_h @ sp[(-56)+24]
 16480  010A80  0EE0               	movlw	-32
 16481  010A82  0060  F09B  FFE3   	movff	btemp,plusw1
 16482  010A88  0EE1               	movlw	-31
 16483  010A8A  0060  F09F  FFE3   	movff	btemp+1,plusw1
 16484  010A90  0EE2               	movlw	-30
 16485  010A92  0060  F0A3  FFE3   	movff	btemp+2,plusw1
 16486  010A98  0EE3               	movlw	-29
 16487  010A9A  0060  F0A7  FFE3   	movff	btemp+3,plusw1
 16488                           
 16489                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 16490                           ;stkvar	_ou @ sp[(-56)+28]
 16491  010AA0  0EE4               	movlw	-28
 16492  010AA2  006F FF8C  F02E    	movff	plusw1,btemp+8
 16493  010AA8  0EE5               	movlw	-27
 16494  010AAA  006F FF8C  F02F    	movff	plusw1,btemp+9
 16495  010AB0  0EE6               	movlw	-26
 16496  010AB2  006F FF8C  F030    	movff	plusw1,btemp+10
 16497  010AB8  0EE7               	movlw	-25
 16498  010ABA  006F FF8C  F031    	movff	plusw1,btemp+11
 16499                           
 16500                           ;stkvar	_u @ sp[(-56)+12]
 16501  010AC0  0ED4               	movlw	-44
 16502  010AC2  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 16503  010AC8  0ED5               	movlw	-43
 16504  010ACA  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 16505  010AD0  0ED6               	movlw	-42
 16506  010AD2  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 16507  010AD8  0ED7               	movlw	-41
 16508  010ADA  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 16509                           
 16510                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 16511                           ;stkvar	_nmode @ sp[(-56)+55]
 16512  010AE0  0EFF               	movlw	-1
 16513  010AE2  006F FF8C  F026    	movff	plusw1,btemp
 16514  010AE8  0E65               	movlw	101
 16515  010AEA  1826               	xorwf	btemp^0,w,c
 16516  010AEC  B4D8               	btfsc	status,2,c
 16517  010AEE  D011               	goto	l11921
 16518                           
 16519                           ;stkvar	_e @ sp[(-56)+34]
 16520                           ;stkvar	_ne @ sp[(-56)+46]
 16521  010AF0  0EEA               	movlw	-22
 16522  010AF2  006F FF8C  F026    	movff	plusw1,btemp
 16523  010AF8  0EF6               	movlw	-10
 16524  010AFA  0060  F09B  FFE3   	movff	btemp,plusw1
 16525  010B00  0EEB               	movlw	-21
 16526  010B02  006F FF8C  F026    	movff	plusw1,btemp
 16527  010B08  0EF7               	movlw	-9
 16528  010B0A  0060  F09B  FFE3   	movff	btemp,plusw1
 16529  010B10  D004               	goto	l2239
 16530  010B12                     l11921:
 16531                           
 16532                           ;stkvar	_ne @ sp[(-56)+46]
 16533  010B12  0EF6               	movlw	-10
 16534  010B14  6AE3               	clrf	plusw1,c
 16535  010B16  0EF7               	movlw	-9
 16536  010B18  6AE3               	clrf	plusw1,c
 16537  010B1A                     l2239:
 16538                           
 16539                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 16540                           ;stkvar	_pp @ sp[(-56)+50]
 16541  010B1A  0EFA               	movlw	-6
 16542  010B1C  6AE3               	clrf	plusw1,c
 16543  010B1E  0EFB               	movlw	-5
 16544  010B20  6AE3               	clrf	plusw1,c
 16545                           
 16546                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 16547                           ;stkvar	_t @ sp[(-56)+52]
 16548  010B22  0EFC               	movlw	-4
 16549  010B24  6AE3               	clrf	plusw1,c
 16550  010B26  0EFD               	movlw	-3
 16551  010B28  6AE3               	clrf	plusw1,c
 16552                           
 16553                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 16554                           ;stkvar	_i @ sp[(-56)+36]
 16555  010B2A  0EEC               	movlw	-20
 16556  010B2C  6AE3               	clrf	plusw1,c
 16557  010B2E  0EED               	movlw	-19
 16558  010B30  6AE3               	clrf	plusw1,c
 16559                           
 16560                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 16561  010B32  D1B7               	goto	l11973
 16562  010B34                     l11923:
 16563                           
 16564                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 16565                           ;stkvar	_u @ sp[(-56)+12]
 16566  010B34  0ED4               	movlw	-44
 16567  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 16568  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 16569  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 16570  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 16571                           
 16572                           ;stkvar	_h @ sp[(-60)+24]
 16573  010B4E  0EDC               	movlw	-36
 16574  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 16575  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 16576  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 16577  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 16578  010B68  ECD8  F0A4         	call	___fldiv	;wreg free
 16579  010B6C  0060  F09B  FFE6   	movff	btemp,postinc1
 16580  010B72  0060  F09F  FFE6   	movff	btemp+1,postinc1
 16581  010B78  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 16582  010B7E  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 16583  010B84  ECD9  F0AF         	call	_floorf	;wreg free
 16584                           
 16585                           ;stkvar	_l @ sp[(-56)+20]
 16586  010B88  0EDC               	movlw	-36
 16587  010B8A  0060  F09B  FFE3   	movff	btemp,plusw1
 16588  010B90  0EDD               	movlw	-35
 16589  010B92  0060  F09F  FFE3   	movff	btemp+1,plusw1
 16590  010B98  0EDE               	movlw	-34
 16591  010B9A  0060  F0A3  FFE3   	movff	btemp+2,plusw1
 16592  010BA0  0EDF               	movlw	-33
 16593  010BA2  0060  F0A7  FFE3   	movff	btemp+3,plusw1
 16594                           
 16595                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 16596                           ;stkvar	_l @ sp[(-56)+20]
 16597  010BA8  0EDC               	movlw	-36
 16598  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 16599  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 16600  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 16601  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 16602  010BC2  EC3C  F0C2         	call	___fltol	;wreg free
 16603  010BC6  0060  F098  F030   	movff	btemp,btemp+10
 16604  010BCC  0060  F09C  F031   	movff	btemp+1,btemp+11
 16605                           
 16606                           ;stkvar	_d @ sp[(-56)+44]
 16607  010BD2  0EF4               	movlw	-12
 16608  010BD4  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 16609  010BDA  0EF5               	movlw	-11
 16610  010BDC  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 16611                           
 16612                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 16613  010BE2  B80E               	btfsc	_flags^0,4,c
 16614  010BE4  D026               	goto	l11937
 16615                           
 16616                           ;stkvar	_d @ sp[(-56)+44]
 16617  010BE6  0EF4               	movlw	-12
 16618  010BE8  006F FF8C  F026    	movff	plusw1,btemp
 16619  010BEE  0EF5               	movlw	-11
 16620  010BF0  50E3               	movf	plusw1,w,c
 16621  010BF2  1026               	iorwf	btemp^0,w,c
 16622  010BF4  A4D8               	btfss	status,2,c
 16623  010BF6  D01D               	goto	l11937
 16624                           
 16625                           ;stkvar	_mode @ sp[(-56)+54]
 16626  010BF8  0EFE               	movlw	-2
 16627  010BFA  006F FF8C  F026    	movff	plusw1,btemp
 16628  010C00  0E67               	movlw	103
 16629  010C02  1826               	xorwf	btemp^0,w,c
 16630  010C04  A4D8               	btfss	status,2,c
 16631  010C06  D015               	goto	l11937
 16632                           
 16633                           ;stkvar	_ne @ sp[(-56)+46]
 16634  010C08  0EF7               	movlw	-9
 16635  010C0A  AEE3               	btfss	plusw1,7,c
 16636  010C0C  D012               	goto	l11937
 16637                           
 16638                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 16639                           ;stkvar	_t @ sp[(-56)+52]
 16640  010C0E  0EFC               	movlw	-4
 16641  010C10  50E3               	movf	plusw1,w,c
 16642  010C12  0F01               	addlw	1
 16643  010C14  6E26               	movwf	btemp^0,c
 16644  010C16  0EFC               	movlw	-4
 16645  010C18  0060  F09B  FFE3   	movff	btemp,plusw1
 16646  010C1E  6A26               	clrf	btemp^0,c
 16647  010C20  0EFD               	movlw	-3
 16648  010C22  50E3               	movf	plusw1,w,c
 16649  010C24  2026               	addwfc	btemp^0,w,c
 16650  010C26  6E26               	movwf	btemp^0,c
 16651  010C28  0EFD               	movlw	-3
 16652  010C2A  0060  F09B  FFE3   	movff	btemp,plusw1
 16653                           
 16654                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 16655  010C30  D0AF               	goto	l11965
 16656  010C32                     l11937:
 16657                           
 16658                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 16659                           ;stkvar	_pp @ sp[(-56)+50]
 16660  010C32  0EFA               	movlw	-6
 16661  010C34  006F FF8C  F026    	movff	plusw1,btemp
 16662  010C3A  0EFB               	movlw	-5
 16663  010C3C  50E3               	movf	plusw1,w,c
 16664  010C3E  1026               	iorwf	btemp^0,w,c
 16665  010C40  A4D8               	btfss	status,2,c
 16666  010C42  D070               	goto	l11957
 16667                           
 16668                           ;stkvar	_ne @ sp[(-56)+46]
 16669  010C44  0EF7               	movlw	-9
 16670  010C46  AEE3               	btfss	plusw1,7,c
 16671  010C48  D06D               	goto	l11957
 16672                           
 16673                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 16674                           ;stkvar	_n @ sp[(-56)+32]
 16675  010C4A  0EE8               	movlw	-24
 16676  010C4C  006F FF8C  F030    	movff	plusw1,btemp+10
 16677  010C52  0EE9               	movlw	-23
 16678  010C54  006F FF8C  F031    	movff	plusw1,btemp+11
 16679  010C5A  0EAE               	movlw	low _dbuf
 16680  010C5C  2430               	addwf	(btemp+10)^0,w,c
 16681  010C5E  6ED9               	movwf	fsr2l,c
 16682  010C60  0E03               	movlw	high _dbuf
 16683  010C62  2031               	addwfc	(btemp+11)^0,w,c
 16684  010C64  6EDA               	movwf	fsr2h,c
 16685  010C66  0E2E               	movlw	46
 16686  010C68  6EDF               	movwf	indf2,c
 16687                           
 16688                           ;stkvar	_n @ sp[(-56)+32]
 16689  010C6A  0EE8               	movlw	-24
 16690  010C6C  50E3               	movf	plusw1,w,c
 16691  010C6E  0F01               	addlw	1
 16692  010C70  6E26               	movwf	btemp^0,c
 16693  010C72  0EE8               	movlw	-24
 16694  010C74  0060  F09B  FFE3   	movff	btemp,plusw1
 16695  010C7A  6A26               	clrf	btemp^0,c
 16696  010C7C  0EE9               	movlw	-23
 16697  010C7E  50E3               	movf	plusw1,w,c
 16698  010C80  2026               	addwfc	btemp^0,w,c
 16699  010C82  6E26               	movwf	btemp^0,c
 16700  010C84  0EE9               	movlw	-23
 16701  010C86  0060  F09B  FFE3   	movff	btemp,plusw1
 16702                           
 16703                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 16704                           ;stkvar	_w @ sp[(-56)+38]
 16705  010C8C  50E1               	movf	fsr1l,w,c
 16706  010C8E  0FEE               	addlw	-18
 16707  010C90  6ED9               	movwf	fsr2l,c
 16708  010C92  50E2               	movf	fsr1h,w,c
 16709  010C94  6EDA               	movwf	fsr2h,c
 16710  010C96  0EFF               	movlw	255
 16711  010C98  22DA               	addwfc	fsr2h,f,c
 16712  010C9A  06DE               	decf	postinc2,f,c
 16713  010C9C  0E00               	movlw	0
 16714  010C9E  5ADD               	subwfb	postdec2,f,c
 16715                           
 16716                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 16717  010CA0  0E01               	movlw	1
 16718  010CA2  6E30               	movwf	(btemp+10)^0,c
 16719  010CA4  0E00               	movlw	0
 16720  010CA6  6E31               	movwf	(btemp+11)^0,c
 16721                           
 16722                           ;stkvar	_pp @ sp[(-56)+50]
 16723  010CA8  0EFA               	movlw	-6
 16724  010CAA  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 16725  010CB0  0EFB               	movlw	-5
 16726  010CB2  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 16727  010CB8  D035               	goto	l11957
 16728  010CBA                     l11949:
 16729                           
 16730                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 16731                           ;stkvar	_n @ sp[(-56)+32]
 16732  010CBA  0EE8               	movlw	-24
 16733  010CBC  006F FF8C  F030    	movff	plusw1,btemp+10
 16734  010CC2  0EE9               	movlw	-23
 16735  010CC4  006F FF8C  F031    	movff	plusw1,btemp+11
 16736  010CCA  0EAE               	movlw	low _dbuf
 16737  010CCC  2430               	addwf	(btemp+10)^0,w,c
 16738  010CCE  6ED9               	movwf	fsr2l,c
 16739  010CD0  0E03               	movlw	high _dbuf
 16740  010CD2  2031               	addwfc	(btemp+11)^0,w,c
 16741  010CD4  6EDA               	movwf	fsr2h,c
 16742  010CD6  0E30               	movlw	48
 16743  010CD8  6EDF               	movwf	indf2,c
 16744                           
 16745                           ;stkvar	_n @ sp[(-56)+32]
 16746  010CDA  0EE8               	movlw	-24
 16747  010CDC  50E3               	movf	plusw1,w,c
 16748  010CDE  0F01               	addlw	1
 16749  010CE0  6E26               	movwf	btemp^0,c
 16750  010CE2  0EE8               	movlw	-24
 16751  010CE4  0060  F09B  FFE3   	movff	btemp,plusw1
 16752  010CEA  6A26               	clrf	btemp^0,c
 16753  010CEC  0EE9               	movlw	-23
 16754  010CEE  50E3               	movf	plusw1,w,c
 16755  010CF0  2026               	addwfc	btemp^0,w,c
 16756  010CF2  6E26               	movwf	btemp^0,c
 16757  010CF4  0EE9               	movlw	-23
 16758  010CF6  0060  F09B  FFE3   	movff	btemp,plusw1
 16759                           
 16760                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 16761                           ;stkvar	_w @ sp[(-56)+38]
 16762  010CFC  50E1               	movf	fsr1l,w,c
 16763  010CFE  0FEE               	addlw	-18
 16764  010D00  6ED9               	movwf	fsr2l,c
 16765  010D02  50E2               	movf	fsr1h,w,c
 16766  010D04  6EDA               	movwf	fsr2h,c
 16767  010D06  0EFF               	movlw	255
 16768  010D08  22DA               	addwfc	fsr2h,f,c
 16769  010D0A  06DE               	decf	postinc2,f,c
 16770  010D0C  0E00               	movlw	0
 16771  010D0E  5ADD               	subwfb	postdec2,f,c
 16772                           
 16773                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 16774                           ;stkvar	_t @ sp[(-56)+52]
 16775  010D10  50E1               	movf	fsr1l,w,c
 16776  010D12  0FFC               	addlw	-4
 16777  010D14  6ED9               	movwf	fsr2l,c
 16778  010D16  50E2               	movf	fsr1h,w,c
 16779  010D18  6EDA               	movwf	fsr2h,c
 16780  010D1A  0EFF               	movlw	255
 16781  010D1C  22DA               	addwfc	fsr2h,f,c
 16782  010D1E  06DE               	decf	postinc2,f,c
 16783  010D20  0E00               	movlw	0
 16784  010D22  5ADD               	subwfb	postdec2,f,c
 16785  010D24                     l11957:
 16786                           
 16787                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 16788                           ;stkvar	_t @ sp[(-56)+52]
 16789  010D24  0EFC               	movlw	-4
 16790  010D26  006F FF8C  F026    	movff	plusw1,btemp
 16791  010D2C  0EFD               	movlw	-3
 16792  010D2E  50E3               	movf	plusw1,w,c
 16793  010D30  1026               	iorwf	btemp^0,w,c
 16794  010D32  A4D8               	btfss	status,2,c
 16795  010D34  D7C2               	goto	l11949
 16796                           
 16797                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 16798                           ;stkvar	_n @ sp[(-56)+32]
 16799  010D36  0EE8               	movlw	-24
 16800  010D38  006F FF8C  F030    	movff	plusw1,btemp+10
 16801  010D3E  0EE9               	movlw	-23
 16802  010D40  006F FF8C  F031    	movff	plusw1,btemp+11
 16803  010D46  0EAE               	movlw	low _dbuf
 16804  010D48  2430               	addwf	(btemp+10)^0,w,c
 16805  010D4A  6ED9               	movwf	fsr2l,c
 16806  010D4C  0E03               	movlw	high _dbuf
 16807  010D4E  2031               	addwfc	(btemp+11)^0,w,c
 16808  010D50  6EDA               	movwf	fsr2h,c
 16809                           
 16810                           ;stkvar	_d @ sp[(-56)+44]
 16811  010D52  0EF4               	movlw	-12
 16812  010D54  50E3               	movf	plusw1,w,c
 16813  010D56  0F30               	addlw	48
 16814  010D58  6EDF               	movwf	indf2,c
 16815                           
 16816                           ;stkvar	_n @ sp[(-56)+32]
 16817  010D5A  0EE8               	movlw	-24
 16818  010D5C  50E3               	movf	plusw1,w,c
 16819  010D5E  0F01               	addlw	1
 16820  010D60  6E26               	movwf	btemp^0,c
 16821  010D62  0EE8               	movlw	-24
 16822  010D64  0060  F09B  FFE3   	movff	btemp,plusw1
 16823  010D6A  6A26               	clrf	btemp^0,c
 16824  010D6C  0EE9               	movlw	-23
 16825  010D6E  50E3               	movf	plusw1,w,c
 16826  010D70  2026               	addwfc	btemp^0,w,c
 16827  010D72  6E26               	movwf	btemp^0,c
 16828  010D74  0EE9               	movlw	-23
 16829  010D76  0060  F09B  FFE3   	movff	btemp,plusw1
 16830                           
 16831                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 16832                           ;stkvar	_w @ sp[(-56)+38]
 16833  010D7C  50E1               	movf	fsr1l,w,c
 16834  010D7E  0FEE               	addlw	-18
 16835  010D80  6ED9               	movwf	fsr2l,c
 16836  010D82  50E2               	movf	fsr1h,w,c
 16837  010D84  6EDA               	movwf	fsr2h,c
 16838  010D86  0EFF               	movlw	255
 16839  010D88  22DA               	addwfc	fsr2h,f,c
 16840  010D8A  06DE               	decf	postinc2,f,c
 16841  010D8C  0E00               	movlw	0
 16842  010D8E  5ADD               	subwfb	postdec2,f,c
 16843  010D90                     l11965:
 16844                           
 16845                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 16846                           ;stkvar	_u @ sp[(-56)+12]
 16847  010D90  0ED4               	movlw	-44
 16848  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 16849  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 16850  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 16851  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 16852                           
 16853                           ;stkvar	_l @ sp[(-60)+20]
 16854  010DAA  0ED8               	movlw	-40
 16855  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 16856  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 16857  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 16858  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 16859  010DC4  EC44  F099         	call	___flmul	;wreg free
 16860  010DC8  0060  F09B  FFE6   	movff	btemp,postinc1
 16861  010DCE  0060  F09F  FFE6   	movff	btemp+1,postinc1
 16862  010DD4  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 16863  010DDA  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 16864                           
 16865                           ;stkvar	_h @ sp[(-60)+24]
 16866  010DE0  0EDC               	movlw	-36
 16867  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 16868  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 16869  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 16870  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 16871  010DFA  EC43  F0D6         	call	___flsub	;wreg free
 16872                           
 16873                           ;stkvar	_h @ sp[(-56)+24]
 16874  010DFE  0EE0               	movlw	-32
 16875  010E00  0060  F09B  FFE3   	movff	btemp,plusw1
 16876  010E06  0EE1               	movlw	-31
 16877  010E08  0060  F09F  FFE3   	movff	btemp+1,plusw1
 16878  010E0E  0EE2               	movlw	-30
 16879  010E10  0060  F0A3  FFE3   	movff	btemp+2,plusw1
 16880  010E16  0EE3               	movlw	-29
 16881  010E18  0060  F0A7  FFE3   	movff	btemp+3,plusw1
 16882                           
 16883                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 16884  010E1E  0E00               	movlw	0
 16885  010E20  6EE6               	movwf	postinc1,c
 16886  010E22  0E00               	movlw	0
 16887  010E24  6EE6               	movwf	postinc1,c
 16888  010E26  0E20               	movlw	32
 16889  010E28  6EE6               	movwf	postinc1,c
 16890  010E2A  0E41               	movlw	65
 16891  010E2C  6EE6               	movwf	postinc1,c
 16892                           
 16893                           ;stkvar	_u @ sp[(-60)+12]
 16894  010E2E  0ED0               	movlw	-48
 16895  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 16896  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 16897  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 16898  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 16899  010E48  ECD8  F0A4         	call	___fldiv	;wreg free
 16900                           
 16901                           ;stkvar	_u @ sp[(-56)+12]
 16902  010E4C  0ED4               	movlw	-44
 16903  010E4E  0060  F09B  FFE3   	movff	btemp,plusw1
 16904  010E54  0ED5               	movlw	-43
 16905  010E56  0060  F09F  FFE3   	movff	btemp+1,plusw1
 16906  010E5C  0ED6               	movlw	-42
 16907  010E5E  0060  F0A3  FFE3   	movff	btemp+2,plusw1
 16908  010E64  0ED7               	movlw	-41
 16909  010E66  0060  F0A7  FFE3   	movff	btemp+3,plusw1
 16910                           
 16911                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 16912                           ;stkvar	_ne @ sp[(-56)+46]
 16913  010E6C  50E1               	movf	fsr1l,w,c
 16914  010E6E  0FF6               	addlw	-10
 16915  010E70  6ED9               	movwf	fsr2l,c
 16916  010E72  50E2               	movf	fsr1h,w,c
 16917  010E74  6EDA               	movwf	fsr2h,c
 16918  010E76  0EFF               	movlw	255
 16919  010E78  22DA               	addwfc	fsr2h,f,c
 16920  010E7A  06DE               	decf	postinc2,f,c
 16921  010E7C  0E00               	movlw	0
 16922  010E7E  5ADD               	subwfb	postdec2,f,c
 16923                           
 16924                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 16925                           ;stkvar	_i @ sp[(-56)+36]
 16926  010E80  0EEC               	movlw	-20
 16927  010E82  50E3               	movf	plusw1,w,c
 16928  010E84  0F01               	addlw	1
 16929  010E86  6E26               	movwf	btemp^0,c
 16930  010E88  0EEC               	movlw	-20
 16931  010E8A  0060  F09B  FFE3   	movff	btemp,plusw1
 16932  010E90  6A26               	clrf	btemp^0,c
 16933  010E92  0EED               	movlw	-19
 16934  010E94  50E3               	movf	plusw1,w,c
 16935  010E96  2026               	addwfc	btemp^0,w,c
 16936  010E98  6E26               	movwf	btemp^0,c
 16937  010E9A  0EED               	movlw	-19
 16938  010E9C  0060  F09B  FFE3   	movff	btemp,plusw1
 16939  010EA2                     l11973:
 16940                           
 16941                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 16942                           ;stkvar	_m @ sp[(-56)+48]
 16943                           ;stkvar	_i @ sp[(-56)+36]
 16944  010EA2  50E1               	movf	fsr1l,w,c
 16945  010EA4  0FEC               	addlw	-20
 16946  010EA6  6ED9               	movwf	fsr2l,c
 16947  010EA8  50E2               	movf	fsr1h,w,c
 16948  010EAA  6EDA               	movwf	fsr2h,c
 16949  010EAC  0EFF               	movlw	255
 16950  010EAE  22DA               	addwfc	fsr2h,f,c
 16951  010EB0  0EF8               	movlw	-8
 16952  010EB2  50E3               	movf	plusw1,w,c
 16953  010EB4  5CDE               	subwf	postinc2,w,c
 16954  010EB6  50DE               	movf	postinc2,w,c
 16955  010EB8  0A80               	xorlw	128
 16956  010EBA  6E26               	movwf	btemp^0,c
 16957  010EBC  0EF9               	movlw	-7
 16958  010EBE  50E3               	movf	plusw1,w,c
 16959  010EC0  0A80               	xorlw	128
 16960  010EC2  5826               	subwfb	btemp^0,w,c
 16961  010EC4  B0D8               	btfsc	status,0,c
 16962  010EC6  D00E               	goto	u11340
 16963                           
 16964                           ;stkvar	_n @ sp[(-56)+32]
 16965  010EC8  0EE9               	movlw	-23
 16966  010ECA  BEE3               	btfsc	plusw1,7,c
 16967  010ECC  D633               	goto	l11923
 16968  010ECE  0EE9               	movlw	-23
 16969  010ED0  50E3               	movf	plusw1,w,c
 16970  010ED2  E108               	bnz	u11340
 16971  010ED4  0EE8               	movlw	-24
 16972  010ED6  006F FF8C  F026    	movff	plusw1,btemp
 16973  010EDC  0E4B               	movlw	75
 16974  010EDE  5E26               	subwf	btemp^0,f,c
 16975  010EE0  A0D8               	btfss	status,0,c
 16976  010EE2  D628               	goto	l11923
 16977  010EE4                     u11340:
 16978                           
 16979                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 16980                           ;stkvar	_pp @ sp[(-56)+50]
 16981  010EE4  0EFA               	movlw	-6
 16982  010EE6  006F FF8C  F026    	movff	plusw1,btemp
 16983  010EEC  0EFB               	movlw	-5
 16984  010EEE  50E3               	movf	plusw1,w,c
 16985  010EF0  1026               	iorwf	btemp^0,w,c
 16986  010EF2  B4D8               	btfsc	status,2,c
 16987  010EF4  A80E               	btfss	_flags^0,4,c
 16988  010EF6  D021               	goto	l11985
 16989                           
 16990                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 16991                           ;stkvar	_n @ sp[(-56)+32]
 16992  010EF8  0EE8               	movlw	-24
 16993  010EFA  006F FF8C  F030    	movff	plusw1,btemp+10
 16994  010F00  0EE9               	movlw	-23
 16995  010F02  006F FF8C  F031    	movff	plusw1,btemp+11
 16996  010F08  0EAE               	movlw	low _dbuf
 16997  010F0A  2430               	addwf	(btemp+10)^0,w,c
 16998  010F0C  6ED9               	movwf	fsr2l,c
 16999  010F0E  0E03               	movlw	high _dbuf
 17000  010F10  2031               	addwfc	(btemp+11)^0,w,c
 17001  010F12  6EDA               	movwf	fsr2h,c
 17002  010F14  0E2E               	movlw	46
 17003  010F16  6EDF               	movwf	indf2,c
 17004                           
 17005                           ;stkvar	_n @ sp[(-56)+32]
 17006  010F18  0EE8               	movlw	-24
 17007  010F1A  50E3               	movf	plusw1,w,c
 17008  010F1C  0F01               	addlw	1
 17009  010F1E  6E26               	movwf	btemp^0,c
 17010  010F20  0EE8               	movlw	-24
 17011  010F22  0060  F09B  FFE3   	movff	btemp,plusw1
 17012  010F28  6A26               	clrf	btemp^0,c
 17013  010F2A  0EE9               	movlw	-23
 17014  010F2C  50E3               	movf	plusw1,w,c
 17015  010F2E  2026               	addwfc	btemp^0,w,c
 17016  010F30  6E26               	movwf	btemp^0,c
 17017  010F32  0EE9               	movlw	-23
 17018  010F34  0060  F09B  FFE3   	movff	btemp,plusw1
 17019  010F3A                     l11985:
 17020                           
 17021                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 17022                           ;stkvar	_n @ sp[(-56)+32]
 17023  010F3A  0EE8               	movlw	-24
 17024  010F3C  006F FF8C  F030    	movff	plusw1,btemp+10
 17025  010F42  0EE9               	movlw	-23
 17026  010F44  006F FF8C  F031    	movff	plusw1,btemp+11
 17027  010F4A  0EAE               	movlw	low _dbuf
 17028  010F4C  2430               	addwf	(btemp+10)^0,w,c
 17029  010F4E  6ED9               	movwf	fsr2l,c
 17030  010F50  0E03               	movlw	high _dbuf
 17031  010F52  2031               	addwfc	(btemp+11)^0,w,c
 17032  010F54  6EDA               	movwf	fsr2h,c
 17033  010F56  0E00               	movlw	0
 17034  010F58  6EDF               	movwf	indf2,c
 17035                           
 17036                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 17037                           ;stkvar	_nmode @ sp[(-56)+55]
 17038  010F5A  0EFF               	movlw	-1
 17039  010F5C  006F FF8C  F026    	movff	plusw1,btemp
 17040  010F62  0E65               	movlw	101
 17041  010F64  1826               	xorwf	btemp^0,w,c
 17042  010F66  A4D8               	btfss	status,2,c
 17043  010F68  EF16  F081         	goto	l11789
 17044                           
 17045                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 17046  010F6C  0E4F               	movlw	79
 17047  010F6E  6E30               	movwf	(btemp+10)^0,c
 17048  010F70  0E00               	movlw	0
 17049  010F72  6E31               	movwf	(btemp+11)^0,c
 17050                           
 17051                           ;stkvar	_i @ sp[(-56)+36]
 17052  010F74  0EEC               	movlw	-20
 17053  010F76  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 17054  010F7C  0EED               	movlw	-19
 17055  010F7E  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 17056                           
 17057                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 17058                           ;stkvar	_i @ sp[(-56)+36]
 17059  010F84  0EEC               	movlw	-20
 17060  010F86  006F FF8C  F030    	movff	plusw1,btemp+10
 17061  010F8C  0EED               	movlw	-19
 17062  010F8E  006F FF8C  F031    	movff	plusw1,btemp+11
 17063  010F94  0EAE               	movlw	low _dbuf
 17064  010F96  2430               	addwf	(btemp+10)^0,w,c
 17065  010F98  6ED9               	movwf	fsr2l,c
 17066  010F9A  0E03               	movlw	high _dbuf
 17067  010F9C  2031               	addwfc	(btemp+11)^0,w,c
 17068  010F9E  6EDA               	movwf	fsr2h,c
 17069  010FA0  0E00               	movlw	0
 17070  010FA2  6EDF               	movwf	indf2,c
 17071                           
 17072                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 17073                           ;stkvar	_sign @ sp[(-56)+42]
 17074  010FA4  0EF2               	movlw	-14
 17075  010FA6  6AE3               	clrf	plusw1,c
 17076  010FA8  0EF3               	movlw	-13
 17077  010FAA  6AE3               	clrf	plusw1,c
 17078                           
 17079                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 17080                           ;stkvar	_e @ sp[(-56)+34]
 17081  010FAC  0EEB               	movlw	-21
 17082  010FAE  AEE3               	btfss	plusw1,7,c
 17083  010FB0  D012               	goto	l11999
 17084                           
 17085                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 17086  010FB2  0E01               	movlw	1
 17087  010FB4  6E30               	movwf	(btemp+10)^0,c
 17088  010FB6  0E00               	movlw	0
 17089  010FB8  6E31               	movwf	(btemp+11)^0,c
 17090                           
 17091                           ;stkvar	_sign @ sp[(-56)+42]
 17092  010FBA  0EF2               	movlw	-14
 17093  010FBC  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 17094  010FC2  0EF3               	movlw	-13
 17095  010FC4  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 17096                           
 17097                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 17098                           ;stkvar	_e @ sp[(-56)+34]
 17099                           ;stkvar	_e @ sp[(-56)+34]
 17100  010FCA  0EEA               	movlw	-22
 17101  010FCC  6CE3               	negf	plusw1,c
 17102  010FCE  0EEB               	movlw	-21
 17103  010FD0  1EE3               	comf	plusw1,f,c
 17104  010FD2  B0D8               	btfsc	status,0,c
 17105  010FD4  2AE3               	incf	plusw1,f,c
 17106  010FD6                     l11999:
 17107                           
 17108                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 17109  010FD6  0E02               	movlw	2
 17110  010FD8  6E30               	movwf	(btemp+10)^0,c
 17111  010FDA  0E00               	movlw	0
 17112  010FDC  6E31               	movwf	(btemp+11)^0,c
 17113                           
 17114                           ;stkvar	_p @ sp[(-56)+40]
 17115  010FDE  0EF0               	movlw	-16
 17116  010FE0  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 17117  010FE6  0EF1               	movlw	-15
 17118  010FE8  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 17119                           
 17120                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 17121  010FEE  D051               	goto	l12011
 17122  010FF0                     l12001:
 17123                           
 17124                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 17125                           ;stkvar	_i @ sp[(-56)+36]
 17126  010FF0  50E1               	movf	fsr1l,w,c
 17127  010FF2  0FEC               	addlw	-20
 17128  010FF4  6ED9               	movwf	fsr2l,c
 17129  010FF6  50E2               	movf	fsr1h,w,c
 17130  010FF8  6EDA               	movwf	fsr2h,c
 17131  010FFA  0EFF               	movlw	255
 17132  010FFC  22DA               	addwfc	fsr2h,f,c
 17133  010FFE  06DE               	decf	postinc2,f,c
 17134  011000  0E00               	movlw	0
 17135  011002  5ADD               	subwfb	postdec2,f,c
 17136                           
 17137                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 17138                           ;stkvar	_i @ sp[(-56)+36]
 17139  011004  0EEC               	movlw	-20
 17140  011006  006F FF8C  F030    	movff	plusw1,btemp+10
 17141  01100C  0EED               	movlw	-19
 17142  01100E  006F FF8C  F031    	movff	plusw1,btemp+11
 17143  011014  0EAE               	movlw	low _dbuf
 17144  011016  2430               	addwf	(btemp+10)^0,w,c
 17145  011018  6ED9               	movwf	fsr2l,c
 17146  01101A  0E03               	movlw	high _dbuf
 17147  01101C  2031               	addwfc	(btemp+11)^0,w,c
 17148  01101E  6EDA               	movwf	fsr2h,c
 17149  011020  0E0A               	movlw	10
 17150  011022  6EE6               	movwf	postinc1,c
 17151  011024  0E00               	movlw	0
 17152  011026  6EE6               	movwf	postinc1,c
 17153                           
 17154                           ;stkvar	_e @ sp[(-58)+34]
 17155  011028  0EE8               	movlw	-24
 17156  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 17157  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 17158  011036  EC1D  F0C8         	call	___awmod	;wreg free
 17159  01103A  5026               	movf	btemp^0,w,c
 17160  01103C  0F30               	addlw	48
 17161  01103E  6EDF               	movwf	indf2,c
 17162                           
 17163                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 17164  011040  0E0A               	movlw	10
 17165  011042  6EE6               	movwf	postinc1,c
 17166  011044  0E00               	movlw	0
 17167  011046  6EE6               	movwf	postinc1,c
 17168                           
 17169                           ;stkvar	_e @ sp[(-58)+34]
 17170  011048  0EE8               	movlw	-24
 17171  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 17172  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 17173  011056  EC0D  F0C5         	call	___awdiv	;wreg free
 17174                           
 17175                           ;stkvar	_e @ sp[(-56)+34]
 17176  01105A  0EEA               	movlw	-22
 17177  01105C  0060  F09B  FFE3   	movff	btemp,plusw1
 17178  011062  0EEB               	movlw	-21
 17179  011064  0060  F09F  FFE3   	movff	btemp+1,plusw1
 17180                           
 17181                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 17182                           ;stkvar	_p @ sp[(-56)+40]
 17183  01106A  50E1               	movf	fsr1l,w,c
 17184  01106C  0FF0               	addlw	-16
 17185  01106E  6ED9               	movwf	fsr2l,c
 17186  011070  50E2               	movf	fsr1h,w,c
 17187  011072  6EDA               	movwf	fsr2h,c
 17188  011074  0EFF               	movlw	255
 17189  011076  22DA               	addwfc	fsr2h,f,c
 17190  011078  06DE               	decf	postinc2,f,c
 17191  01107A  0E00               	movlw	0
 17192  01107C  5ADD               	subwfb	postdec2,f,c
 17193                           
 17194                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 17195                           ;stkvar	_w @ sp[(-56)+38]
 17196  01107E  50E1               	movf	fsr1l,w,c
 17197  011080  0FEE               	addlw	-18
 17198  011082  6ED9               	movwf	fsr2l,c
 17199  011084  50E2               	movf	fsr1h,w,c
 17200  011086  6EDA               	movwf	fsr2h,c
 17201  011088  0EFF               	movlw	255
 17202  01108A  22DA               	addwfc	fsr2h,f,c
 17203  01108C  06DE               	decf	postinc2,f,c
 17204  01108E  0E00               	movlw	0
 17205  011090  5ADD               	subwfb	postdec2,f,c
 17206  011092                     l12011:
 17207                           
 17208                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 17209                           ;stkvar	_e @ sp[(-56)+34]
 17210  011092  0EEA               	movlw	-22
 17211  011094  006F FF8C  F026    	movff	plusw1,btemp
 17212  01109A  0EEB               	movlw	-21
 17213  01109C  50E3               	movf	plusw1,w,c
 17214  01109E  1026               	iorwf	btemp^0,w,c
 17215  0110A0  A4D8               	btfss	status,2,c
 17216  0110A2  D7A6               	goto	l12001
 17217                           
 17218                           ;stkvar	_p @ sp[(-56)+40]
 17219  0110A4  0EF1               	movlw	-15
 17220  0110A6  BEE3               	btfsc	plusw1,7,c
 17221  0110A8  D007               	goto	u11400
 17222  0110AA  0EF1               	movlw	-15
 17223  0110AC  50E3               	movf	plusw1,w,c
 17224  0110AE  E1A0               	bnz	l12001
 17225  0110B0  0EF0               	movlw	-16
 17226  0110B2  04E3               	decf	plusw1,w,c
 17227  0110B4  B0D8               	btfsc	status,0,c
 17228  0110B6  D79C               	goto	l12001
 17229  0110B8                     u11400:
 17230                           
 17231                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 17232                           ;stkvar	_i @ sp[(-56)+36]
 17233  0110B8  50E1               	movf	fsr1l,w,c
 17234  0110BA  0FEC               	addlw	-20
 17235  0110BC  6ED9               	movwf	fsr2l,c
 17236  0110BE  50E2               	movf	fsr1h,w,c
 17237  0110C0  6EDA               	movwf	fsr2h,c
 17238  0110C2  0EFF               	movlw	255
 17239  0110C4  22DA               	addwfc	fsr2h,f,c
 17240  0110C6  06DE               	decf	postinc2,f,c
 17241  0110C8  0E00               	movlw	0
 17242  0110CA  5ADD               	subwfb	postdec2,f,c
 17243                           
 17244                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 17245                           ;stkvar	_sign @ sp[(-56)+42]
 17246  0110CC  0EF2               	movlw	-14
 17247  0110CE  006F FF8C  F026    	movff	plusw1,btemp
 17248  0110D4  0EF3               	movlw	-13
 17249  0110D6  50E3               	movf	plusw1,w,c
 17250  0110D8  1026               	iorwf	btemp^0,w,c
 17251  0110DA  A4D8               	btfss	status,2,c
 17252  0110DC  D002               	goto	l12021
 17253  0110DE  0E2B               	movlw	43
 17254  0110E0  D001               	goto	L18
 17255  0110E2                     l12021:
 17256  0110E2  0E2D               	movlw	45
 17257  0110E4                     L18:
 17258  0110E4  6E30               	movwf	(btemp+10)^0,c
 17259  0110E6  0E00               	movlw	0
 17260  0110E8  6E31               	movwf	(btemp+11)^0,c
 17261                           
 17262                           ;stkvar	_efgtoa$5430 @ sp[(-56)+4]
 17263  0110EA  0ECC               	movlw	-52
 17264  0110EC  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 17265  0110F2  0ECD               	movlw	-51
 17266  0110F4  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 17267                           
 17268                           ;stkvar	_efgtoa$5430 @ sp[(-56)+4]
 17269                           ;stkvar	_i @ sp[(-56)+36]
 17270  0110FA  0EEC               	movlw	-20
 17271  0110FC  006F FF8C  F030    	movff	plusw1,btemp+10
 17272  011102  0EED               	movlw	-19
 17273  011104  006F FF8C  F031    	movff	plusw1,btemp+11
 17274  01110A  0EAE               	movlw	low _dbuf
 17275  01110C  2430               	addwf	(btemp+10)^0,w,c
 17276  01110E  6ED9               	movwf	fsr2l,c
 17277  011110  0E03               	movlw	high _dbuf
 17278  011112  2031               	addwfc	(btemp+11)^0,w,c
 17279  011114  6EDA               	movwf	fsr2h,c
 17280  011116  0ECC               	movlw	-52
 17281  011118  006F FF8F FFDF     	movff	plusw1,indf2
 17282                           
 17283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 17284                           ;stkvar	_w @ sp[(-56)+38]
 17285  01111E  50E1               	movf	fsr1l,w,c
 17286  011120  0FEE               	addlw	-18
 17287  011122  6ED9               	movwf	fsr2l,c
 17288  011124  50E2               	movf	fsr1h,w,c
 17289  011126  6EDA               	movwf	fsr2h,c
 17290  011128  0EFF               	movlw	255
 17291  01112A  22DA               	addwfc	fsr2h,f,c
 17292  01112C  06DE               	decf	postinc2,f,c
 17293  01112E  0E00               	movlw	0
 17294  011130  5ADD               	subwfb	postdec2,f,c
 17295                           
 17296                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 17297                           ;stkvar	_i @ sp[(-56)+36]
 17298  011132  50E1               	movf	fsr1l,w,c
 17299  011134  0FEC               	addlw	-20
 17300  011136  6ED9               	movwf	fsr2l,c
 17301  011138  50E2               	movf	fsr1h,w,c
 17302  01113A  6EDA               	movwf	fsr2h,c
 17303  01113C  0EFF               	movlw	255
 17304  01113E  22DA               	addwfc	fsr2h,f,c
 17305  011140  06DE               	decf	postinc2,f,c
 17306  011142  0E00               	movlw	0
 17307  011144  5ADD               	subwfb	postdec2,f,c
 17308  011146  0EBF               	movlw	191
 17309  011148  6E30               	movwf	(btemp+10)^0,c
 17310  01114A  0EFF               	movlw	255
 17311  01114C  6E31               	movwf	(btemp+11)^0,c
 17312                           
 17313                           ;stkvar	_c @ sp[(-56)+-7]
 17314  01114E  0EC1               	movlw	-63
 17315  011150  50E3               	movf	plusw1,w,c
 17316  011152  6E2E               	movwf	(btemp+8)^0,c
 17317  011154  6A2F               	clrf	(btemp+9)^0,c
 17318  011156  5030               	movf	(btemp+10)^0,w,c
 17319  011158  262E               	addwf	(btemp+8)^0,f,c
 17320  01115A  5031               	movf	(btemp+11)^0,w,c
 17321  01115C  222F               	addwfc	(btemp+9)^0,f,c
 17322  01115E  502F               	movf	(btemp+9)^0,w,c
 17323  011160  E106               	bnz	u11420
 17324  011162  0E1A               	movlw	26
 17325  011164  5C2E               	subwf	(btemp+8)^0,w,c
 17326  011166  B0D8               	btfsc	status,0,c
 17327  011168  D002               	goto	u11420
 17328  01116A  0E01               	movlw	1
 17329  01116C  D001               	goto	u11430
 17330  01116E                     u11420:
 17331  01116E  0E00               	movlw	0
 17332  011170                     u11430:
 17333  011170  6E30               	movwf	(btemp+10)^0,c
 17334  011172  6A31               	clrf	(btemp+11)^0,c
 17335                           
 17336                           ;stkvar	_efgtoa$5432 @ sp[(-56)+0]
 17337  011174  0EC8               	movlw	-56
 17338  011176  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 17339  01117C  0EC9               	movlw	-55
 17340  01117E  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 17341                           
 17342                           ;stkvar	_efgtoa$5432 @ sp[(-56)+0]
 17343  011184  0EC8               	movlw	-56
 17344  011186  006F FF8C  F026    	movff	plusw1,btemp
 17345  01118C  0EC9               	movlw	-55
 17346  01118E  50E3               	movf	plusw1,w,c
 17347  011190  1026               	iorwf	btemp^0,w,c
 17348  011192  A4D8               	btfss	status,2,c
 17349  011194  D002               	goto	l12037
 17350  011196  0E65               	movlw	101
 17351  011198  D001               	goto	L19
 17352  01119A                     l12037:
 17353  01119A  0E45               	movlw	69
 17354  01119C                     L19:
 17355  01119C  6E30               	movwf	(btemp+10)^0,c
 17356  01119E  0E00               	movlw	0
 17357  0111A0  6E31               	movwf	(btemp+11)^0,c
 17358                           
 17359                           ;stkvar	_efgtoa$5431 @ sp[(-56)+2]
 17360  0111A2  0ECA               	movlw	-54
 17361  0111A4  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 17362  0111AA  0ECB               	movlw	-53
 17363  0111AC  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 17364                           
 17365                           ;stkvar	_efgtoa$5431 @ sp[(-56)+2]
 17366                           ;stkvar	_i @ sp[(-56)+36]
 17367  0111B2  0EEC               	movlw	-20
 17368  0111B4  006F FF8C  F030    	movff	plusw1,btemp+10
 17369  0111BA  0EED               	movlw	-19
 17370  0111BC  006F FF8C  F031    	movff	plusw1,btemp+11
 17371  0111C2  0EAE               	movlw	low _dbuf
 17372  0111C4  2430               	addwf	(btemp+10)^0,w,c
 17373  0111C6  6ED9               	movwf	fsr2l,c
 17374  0111C8  0E03               	movlw	high _dbuf
 17375  0111CA  2031               	addwfc	(btemp+11)^0,w,c
 17376  0111CC  6EDA               	movwf	fsr2h,c
 17377  0111CE  0ECA               	movlw	-54
 17378  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 17379                           
 17380                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 17381                           ;stkvar	_w @ sp[(-56)+38]
 17382  0111D6  50E1               	movf	fsr1l,w,c
 17383  0111D8  0FEE               	addlw	-18
 17384  0111DA  6ED9               	movwf	fsr2l,c
 17385  0111DC  50E2               	movf	fsr1h,w,c
 17386  0111DE  6EDA               	movwf	fsr2h,c
 17387  0111E0  0EFF               	movlw	255
 17388  0111E2  22DA               	addwfc	fsr2h,f,c
 17389  0111E4  06DE               	decf	postinc2,f,c
 17390  0111E6  0E00               	movlw	0
 17391  0111E8  5ADD               	subwfb	postdec2,f,c
 17392                           
 17393                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 17394                           ;stkvar	_i @ sp[(-56)+36]
 17395  0111EA  0EEC               	movlw	-20
 17396  0111EC  006F FF8C  F030    	movff	plusw1,btemp+10
 17397  0111F2  0EED               	movlw	-19
 17398  0111F4  006F FF8C  F031    	movff	plusw1,btemp+11
 17399  0111FA  0EAE               	movlw	low _dbuf
 17400  0111FC  2430               	addwf	(btemp+10)^0,w,c
 17401  0111FE  6E2E               	movwf	(btemp+8)^0,c
 17402  011200  0E03               	movlw	high _dbuf
 17403  011202  2031               	addwfc	(btemp+11)^0,w,c
 17404  011204  6E2F               	movwf	(btemp+9)^0,c
 17405  011206  0060  F0BB  FFE6   	movff	btemp+8,postinc1
 17406  01120C  0060  F0BF  FFE6   	movff	btemp+9,postinc1
 17407                           
 17408                           ;stkvar	_n @ sp[(-58)+32]
 17409  011212  0EAE               	movlw	low _dbuf
 17410  011214  6E30               	movwf	(btemp+10)^0,c
 17411  011216  0E03               	movlw	high _dbuf
 17412  011218  6E31               	movwf	(btemp+11)^0,c
 17413  01121A  0EE6               	movlw	-26
 17414  01121C  50E3               	movf	plusw1,w,c
 17415  01121E  2630               	addwf	(btemp+10)^0,f,c
 17416  011220  0EE7               	movlw	-25
 17417  011222  50E3               	movf	plusw1,w,c
 17418  011224  2231               	addwfc	(btemp+11)^0,f,c
 17419  011226  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 17420  01122C  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 17421  011232  EC9D  F0CD         	call	_strcpy	;wreg free
 17422  011236  EF16  F081         	goto	l11789
 17423  01123A                     l2195:
 17424                           
 17425                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 17426  01123A  0EC1               	movlw	193
 17427  01123C  26E1               	addwf	fsr1l,f,c
 17428  01123E  0EFF               	movlw	255
 17429  011240  22E2               	addwfc	fsr1h,f,c
 17430  011242  0012               	return		;funcret
 17431  011244                     __end_of_efgtoa:
 17432                           	opt callstack 0
 17433                           
 17434 ;; *************** function _tolower *****************
 17435 ;; Defined at:
 17436 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 17437 ;; Parameters:    Size  Location     Type
 17438 ;;  c               2  [STACK] int 
 17439 ;; Auto vars:     Size  Location     Type
 17440 ;;		None
 17441 ;; Return value:  Size  Location     Type
 17442 ;;                  2  [STACK] int 
 17443 ;; Registers used:
 17444 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 17445 ;; Tracked objects:
 17446 ;;		On entry : 0/0
 17447 ;;		On exit  : 0/0
 17448 ;;		Unchanged: 0/0
 17449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17454 ;;Total ram usage:        0 bytes
 17455 ;; Hardware stack levels used:    1
 17456 ;; Hardware stack levels required when called:   16
 17457 ;; This function calls:
 17458 ;;		_isupper
 17459 ;; This function is called by:
 17460 ;;		_efgtoa
 17461 ;;		_vfpfcnvrt
 17462 ;; This function uses a reentrant model
 17463 ;;
 17464                           
 17465                           	psect	text56
 17466  01A588                     __ptext56:
 17467                           	opt callstack 0
 17468  01A588                     _tolower:
 17469                           	opt callstack 0
 17470                           
 17471                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17472  01A588  52E6               	movf	postinc1,f,c
 17473  01A58A  52E6               	movf	postinc1,f,c
 17474                           
 17475                           ;stkvar	_c @ sp[(-2)+-2]
 17476                           
 17477                           ;incstack = 0
 17478 ;; hardware stack exceeded
 17479  01A58C  0EFC               	movlw	-4
 17480  01A58E  50E3               	movf	plusw1,w,c
 17481  01A590  0FBF               	addlw	191
 17482  01A592  6E30               	movwf	(btemp+10)^0,c
 17483  01A594  0EFD               	movlw	-3
 17484  01A596  006F FF8C  F031    	movff	plusw1,btemp+11
 17485  01A59C  0EFF               	movlw	255
 17486  01A59E  2231               	addwfc	(btemp+11)^0,f,c
 17487  01A5A0  5031               	movf	(btemp+11)^0,w,c
 17488  01A5A2  E106               	bnz	u5990
 17489  01A5A4  0E1A               	movlw	26
 17490  01A5A6  5C30               	subwf	(btemp+10)^0,w,c
 17491  01A5A8  B0D8               	btfsc	status,0,c
 17492  01A5AA  D002               	goto	u5990
 17493  01A5AC  0E01               	movlw	1
 17494  01A5AE  D001               	goto	u6000
 17495  01A5B0                     u5990:
 17496  01A5B0  0E00               	movlw	0
 17497  01A5B2                     u6000:
 17498  01A5B2  6E30               	movwf	(btemp+10)^0,c
 17499  01A5B4  6A31               	clrf	(btemp+11)^0,c
 17500                           
 17501                           ;stkvar	_tolower$6251 @ sp[(-2)+0]
 17502  01A5B6  0EFE               	movlw	-2
 17503  01A5B8  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 17504  01A5BE  0EFF               	movlw	-1
 17505  01A5C0  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 17506                           
 17507                           ;stkvar	_tolower$6251 @ sp[(-2)+0]
 17508  01A5C6  0EFE               	movlw	-2
 17509  01A5C8  006F FF8C  F026    	movff	plusw1,btemp
 17510  01A5CE  0EFF               	movlw	-1
 17511  01A5D0  50E3               	movf	plusw1,w,c
 17512  01A5D2  1026               	iorwf	btemp^0,w,c
 17513  01A5D4  B4D8               	btfsc	status,2,c
 17514  01A5D6  D00D               	goto	l7909
 17515                           
 17516                           ;stkvar	_c @ sp[(-2)+-2]
 17517  01A5D8  0EFC               	movlw	-4
 17518  01A5DA  006F FF8C  F026    	movff	plusw1,btemp
 17519  01A5E0  0EFD               	movlw	-3
 17520  01A5E2  006F FF8C  F027    	movff	plusw1,btemp+1
 17521  01A5E8  0E20               	movlw	32
 17522  01A5EA  1226               	iorwf	btemp^0,f,c
 17523  01A5EC  0E00               	movlw	0
 17524  01A5EE  1227               	iorwf	(btemp+1)^0,f,c
 17525  01A5F0  D008               	goto	l3467
 17526  01A5F2                     l7909:
 17527                           
 17528                           ;stkvar	_c @ sp[(-2)+-2]
 17529  01A5F2  0EFC               	movlw	-4
 17530  01A5F4  006F FF8C  F026    	movff	plusw1,btemp
 17531  01A5FA  0EFD               	movlw	-3
 17532  01A5FC  006F FF8C  F027    	movff	plusw1,btemp+1
 17533  01A602                     l3467:
 17534                           
 17535                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17536  01A602  52E5               	movf	postdec1,f,c
 17537  01A604  52E5               	movf	postdec1,f,c
 17538  01A606  52E5               	movf	postdec1,f,c
 17539  01A608  52E5               	movf	postdec1,f,c
 17540  01A60A  0012               	return		;funcret
 17541  01A60C                     __end_of_tolower:
 17542                           	opt callstack 0
 17543                           
 17544 ;; *************** function _isupper *****************
 17545 ;; Defined at:
 17546 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 17547 ;; Parameters:    Size  Location     Type
 17548 ;;  c               2  [STACK] int 
 17549 ;; Auto vars:     Size  Location     Type
 17550 ;;		None
 17551 ;; Return value:  Size  Location     Type
 17552 ;;                  2  [STACK] int 
 17553 ;; Registers used:
 17554 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 17555 ;; Tracked objects:
 17556 ;;		On entry : 0/0
 17557 ;;		On exit  : 0/0
 17558 ;;		Unchanged: 0/0
 17559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17564 ;;Total ram usage:        0 bytes
 17565 ;; Hardware stack levels used:    1
 17566 ;; Hardware stack levels required when called:   15
 17567 ;; This function calls:
 17568 ;;		Nothing
 17569 ;; This function is called by:
 17570 ;;		_efgtoa
 17571 ;;		_xtoa
 17572 ;;		_vfpfcnvrt
 17573 ;;		_tolower
 17574 ;; This function uses a reentrant model
 17575 ;;
 17576                           
 17577                           	psect	text57
 17578  01B140                     __ptext57:
 17579                           	opt callstack 0
 17580  01B140                     _isupper:
 17581                           	opt callstack 0
 17582                           
 17583                           ;stkvar	_c @ sp[(0)+-2]
 17584                           
 17585                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17586                           ;incstack = 0
 17587 ;; hardware stack exceeded
 17588  01B140  0EFE               	movlw	-2
 17589  01B142  50E3               	movf	plusw1,w,c
 17590  01B144  0FBF               	addlw	191
 17591  01B146  6E30               	movwf	(btemp+10)^0,c
 17592  01B148  0EFF               	movlw	-1
 17593  01B14A  006F FF8C  F031    	movff	plusw1,btemp+11
 17594  01B150  0EFF               	movlw	255
 17595  01B152  2231               	addwfc	(btemp+11)^0,f,c
 17596  01B154  5031               	movf	(btemp+11)^0,w,c
 17597  01B156  E106               	bnz	u5390
 17598  01B158  0E1A               	movlw	26
 17599  01B15A  5C30               	subwf	(btemp+10)^0,w,c
 17600  01B15C  B0D8               	btfsc	status,0,c
 17601  01B15E  D002               	goto	u5390
 17602  01B160  0E01               	movlw	1
 17603  01B162  D001               	goto	u5400
 17604  01B164                     u5390:
 17605  01B164  0E00               	movlw	0
 17606  01B166                     u5400:
 17607  01B166  6E26               	movwf	btemp^0,c
 17608  01B168  6A27               	clrf	(btemp+1)^0,c
 17609                           
 17610                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17611  01B16A  52E5               	movf	postdec1,f,c
 17612  01B16C  52E5               	movf	postdec1,f,c
 17613  01B16E  0012               	return		;funcret
 17614  01B170                     __end_of_isupper:
 17615                           	opt callstack 0
 17616                           
 17617 ;; *************** function _strcpy *****************
 17618 ;; Defined at:
 17619 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 17620 ;; Parameters:    Size  Location     Type
 17621 ;;  dest            2  [STACK] PTR unsigned char 
 17622 ;;		 -> dbuf(80), 
 17623 ;;  src             2  [STACK] PTR const unsigned char 
 17624 ;;		 -> STR_71(4), STR_70(4), STR_67(4), STR_66(4), 
 17625 ;;		 -> dbuf(80), 
 17626 ;; Auto vars:     Size  Location     Type
 17627 ;;  d               2  [STACK] PTR unsigned char 
 17628 ;;		 -> dbuf(80), 
 17629 ;;  s               2  [STACK] PTR const unsigned char 
 17630 ;;		 -> STR_71(4), STR_70(4), STR_67(4), STR_66(4), 
 17631 ;;		 -> dbuf(80), 
 17632 ;; Return value:  Size  Location     Type
 17633 ;;                  2  [STACK] PTR unsigned char 
 17634 ;; Registers used:
 17635 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 17636 ;; Tracked objects:
 17637 ;;		On entry : 0/0
 17638 ;;		On exit  : 0/0
 17639 ;;		Unchanged: 0/0
 17640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17645 ;;Total ram usage:        0 bytes
 17646 ;; Hardware stack levels used:    1
 17647 ;; Hardware stack levels required when called:   15
 17648 ;; This function calls:
 17649 ;;		Nothing
 17650 ;; This function is called by:
 17651 ;;		_efgtoa
 17652 ;; This function uses a reentrant model
 17653 ;;
 17654                           
 17655                           	psect	text58
 17656  019B3A                     __ptext58:
 17657                           	opt callstack 0
 17658  019B3A                     _strcpy:
 17659                           	opt callstack 0
 17660                           
 17661                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17662  019B3A  52E6               	movf	postinc1,f,c
 17663  019B3C  52E6               	movf	postinc1,f,c
 17664  019B3E  52E6               	movf	postinc1,f,c
 17665  019B40  52E6               	movf	postinc1,f,c
 17666                           
 17667                           ;stkvar	_src @ sp[(-4)+-4]
 17668                           
 17669                           ;incstack = 0
 17670 ;; hardware stack exceeded
 17671  019B42  0EF8               	movlw	-8
 17672  019B44  006F FF8C  F030    	movff	plusw1,btemp+10
 17673  019B4A  0EF9               	movlw	-7
 17674  019B4C  006F FF8C  F031    	movff	plusw1,btemp+11
 17675                           
 17676                           ;stkvar	_s @ sp[(-4)+2]
 17677  019B52  0EFF               	movlw	-1
 17678  019B54  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 17679  019B5A  0EFE               	movlw	-2
 17680  019B5C  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 17681                           
 17682                           ;stkvar	_dest @ sp[(-4)+-2]
 17683  019B62  0EFA               	movlw	-6
 17684  019B64  006F FF8C  F030    	movff	plusw1,btemp+10
 17685  019B6A  0EFB               	movlw	-5
 17686  019B6C  006F FF8C  F031    	movff	plusw1,btemp+11
 17687                           
 17688                           ;stkvar	_d @ sp[(-4)+0]
 17689  019B72  0EFD               	movlw	-3
 17690  019B74  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 17691  019B7A  0EFC               	movlw	-4
 17692  019B7C  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 17693  019B82                     l11621:
 17694                           
 17695                           ;stkvar	_s @ sp[(-4)+2]
 17696  019B82  50E1               	movf	fsr1l,w,c
 17697  019B84  0FFE               	addlw	-2
 17698  019B86  6ED9               	movwf	fsr2l,c
 17699  019B88  50E2               	movf	fsr1h,w,c
 17700  019B8A  6EDA               	movwf	fsr2h,c
 17701  019B8C  0EFF               	movlw	255
 17702  019B8E  22DA               	addwfc	fsr2h,f,c
 17703  019B90  006F FF7C  F030    	movff	indf2,btemp+10
 17704  019B96  0E01               	movlw	1
 17705  019B98  26DE               	addwf	postinc2,f,c
 17706  019B9A  006F FF7C  F031    	movff	indf2,btemp+11
 17707  019BA0  0E00               	movlw	0
 17708  019BA2  22DD               	addwfc	postdec2,f,c
 17709  019BA4  0060  F0C3  FFF6   	movff	btemp+10,tblptrl
 17710  019BAA  0060  F0C7  FFF7   	movff	btemp+11,tblptrh
 17711  019BB0  0E00               	movlw	low (__mediumconst shr (0+16))
 17712  019BB2  6EF8               	movwf	tblptru,c
 17713                           
 17714                           ;stkvar	_d @ sp[(-4)+0]
 17715  019BB4  50E1               	movf	fsr1l,w,c
 17716  019BB6  0FFC               	addlw	-4
 17717  019BB8  6ED9               	movwf	fsr2l,c
 17718  019BBA  50E2               	movf	fsr1h,w,c
 17719  019BBC  6EDA               	movwf	fsr2h,c
 17720  019BBE  0EFF               	movlw	255
 17721  019BC0  22DA               	addwfc	fsr2h,f,c
 17722  019BC2  006F FF7C  F030    	movff	indf2,btemp+10
 17723  019BC8  0E01               	movlw	1
 17724  019BCA  26DE               	addwf	postinc2,f,c
 17725  019BCC  006F FF7C  F031    	movff	indf2,btemp+11
 17726  019BD2  0E00               	movlw	0
 17727  019BD4  22DD               	addwfc	postdec2,f,c
 17728  019BD6  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 17729  019BDC  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 17730  019BE2  0E1F               	movlw	(high __ramtop+-1)
 17731  019BE4  64F7               	cpfsgt	tblptrh,c
 17732  019BE6  D003               	bra	u10687
 17733  019BE8  0008               	tblrd		*
 17734  019BEA  50F5               	movf	tablat,w,c
 17735  019BEC  D007               	bra	u10680
 17736  019BEE                     u10687:
 17737  019BEE  006F FFDB FFE9     	movff	tblptrl,fsr0l
 17738  019BF4  006F FFDF FFEA     	movff	tblptrh,fsr0h
 17739  019BFA  50EF               	movf	indf0,w,c
 17740  019BFC                     u10680:
 17741  019BFC  6EDF               	movwf	indf2,c
 17742  019BFE  50DF               	movf	indf2,w,c
 17743  019C00  A4D8               	btfss	status,2,c
 17744  019C02  D7BF               	goto	l11621
 17745                           
 17746                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 17747  019C04  0EF8               	movlw	248
 17748  019C06  26E1               	addwf	fsr1l,f,c
 17749  019C08  0EFF               	movlw	255
 17750  019C0A  22E2               	addwfc	fsr1h,f,c
 17751  019C0C  0012               	return		;funcret
 17752  019C0E                     __end_of_strcpy:
 17753                           	opt callstack 0
 17754                           
 17755 ;; *************** function _floorf *****************
 17756 ;; Defined at:
 17757 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 17758 ;; Parameters:    Size  Location     Type
 17759 ;;  x               4  [STACK] float 
 17760 ;; Auto vars:     Size  Location     Type
 17761 ;;  u               4  [STACK] struct .
 17762 ;;  m               4  [STACK] unsigned long 
 17763 ;;  e               2  [STACK] int 
 17764 ;; Return value:  Size  Location     Type
 17765 ;;                  4  [STACK] float 
 17766 ;; Registers used:
 17767 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 17768 ;; Tracked objects:
 17769 ;;		On entry : 0/0
 17770 ;;		On exit  : 0/0
 17771 ;;		Unchanged: 0/0
 17772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17777 ;;Total ram usage:        0 bytes
 17778 ;; Hardware stack levels used:    1
 17779 ;; Hardware stack levels required when called:   15
 17780 ;; This function calls:
 17781 ;;		Nothing
 17782 ;; This function is called by:
 17783 ;;		_efgtoa
 17784 ;; This function uses a reentrant model
 17785 ;;
 17786                           
 17787                           	psect	text59
 17788  015FB2                     __ptext59:
 17789                           	opt callstack 0
 17790  015FB2                     _floorf:
 17791                           	opt callstack 0
 17792                           
 17793                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 17794  015FB2  0E0A               	movlw	10
 17795  015FB4  26E1               	addwf	fsr1l,f,c
 17796  015FB6  0E00               	movlw	0
 17797  015FB8  22E2               	addwfc	fsr1h,f,c
 17798                           
 17799                           ;incstack = 0
 17800 ;; hardware stack exceeded
 17801  015FBA  0060  F1C8  F02E   	movff	floorf@F524,btemp+8
 17802  015FC0  0060  F1CC  F02F   	movff	floorf@F524+1,btemp+9
 17803  015FC6  0060  F1D0  F030   	movff	floorf@F524+2,btemp+10
 17804  015FCC  0060  F1D4  F031   	movff	floorf@F524+3,btemp+11
 17805                           
 17806                           ;stkvar	_u @ sp[(-10)+0]
 17807  015FD2  0EF6               	movlw	-10
 17808  015FD4  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 17809  015FDA  0EF7               	movlw	-9
 17810  015FDC  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 17811  015FE2  0EF8               	movlw	-8
 17812  015FE4  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 17813  015FEA  0EF9               	movlw	-7
 17814  015FEC  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 17815                           
 17816                           ;stkvar	_x @ sp[(-10)+-4]
 17817  015FF2  0EF2               	movlw	-14
 17818  015FF4  006F FF8C  F02E    	movff	plusw1,btemp+8
 17819  015FFA  0EF3               	movlw	-13
 17820  015FFC  006F FF8C  F02F    	movff	plusw1,btemp+9
 17821  016002  0EF4               	movlw	-12
 17822  016004  006F FF8C  F030    	movff	plusw1,btemp+10
 17823  01600A  0EF5               	movlw	-11
 17824  01600C  006F FF8C  F031    	movff	plusw1,btemp+11
 17825                           
 17826                           ;stkvar	_u @ sp[(-10)+0]
 17827  016012  0EF6               	movlw	-10
 17828  016014  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 17829  01601A  0EF7               	movlw	-9
 17830  01601C  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 17831  016022  0EF8               	movlw	-8
 17832  016024  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 17833  01602A  0EF9               	movlw	-7
 17834  01602C  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 17835  016032  0E81               	movlw	129
 17836  016034  6E30               	movwf	(btemp+10)^0,c
 17837  016036  0EFF               	movlw	255
 17838  016038  6E31               	movwf	(btemp+11)^0,c
 17839                           
 17840                           ;stkvar	_u @ sp[(-10)+0]
 17841  01603A  0EF6               	movlw	-10
 17842  01603C  006F FF8C  F02A    	movff	plusw1,btemp+4
 17843  016042  0EF7               	movlw	-9
 17844  016044  006F FF8C  F02B    	movff	plusw1,btemp+5
 17845  01604A  0EF8               	movlw	-8
 17846  01604C  006F FF8C  F02C    	movff	plusw1,btemp+6
 17847  016052  0EF9               	movlw	-7
 17848  016054  006F FF8C  F02D    	movff	plusw1,btemp+7
 17849  01605A  0E18               	movlw	24
 17850  01605C  D005               	goto	u6020
 17851  01605E                     u6025:
 17852  01605E  90D8               	bcf	status,0,c
 17853  016060  322D               	rrcf	(btemp+7)^0,f,c
 17854  016062  322C               	rrcf	(btemp+6)^0,f,c
 17855  016064  322B               	rrcf	(btemp+5)^0,f,c
 17856  016066  322A               	rrcf	(btemp+4)^0,f,c
 17857  016068                     u6020:
 17858  016068  2EE8               	decfsz	wreg,f,c
 17859  01606A  D7F9               	goto	u6025
 17860  01606C  0060  F0A8  F02E   	movff	btemp+4,btemp+8
 17861  016072  0060  F0AC  F02F   	movff	btemp+5,btemp+9
 17862  016078  0EFF               	movlw	255
 17863  01607A  162E               	andwf	(btemp+8)^0,f,c
 17864  01607C  0E00               	movlw	0
 17865  01607E  162F               	andwf	(btemp+9)^0,f,c
 17866  016080  5030               	movf	(btemp+10)^0,w,c
 17867  016082  262E               	addwf	(btemp+8)^0,f,c
 17868  016084  5031               	movf	(btemp+11)^0,w,c
 17869  016086  222F               	addwfc	(btemp+9)^0,f,c
 17870                           
 17871                           ;stkvar	_e @ sp[(-10)+8]
 17872  016088  0EFE               	movlw	-2
 17873  01608A  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 17874  016090  0EFF               	movlw	-1
 17875  016092  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 17876                           
 17877                           ;stkvar	_e @ sp[(-10)+8]
 17878  016098  0EFF               	movlw	-1
 17879  01609A  BEE3               	btfsc	plusw1,7,c
 17880  01609C  D019               	goto	l7923
 17881  01609E  0EFF               	movlw	-1
 17882  0160A0  50E3               	movf	plusw1,w,c
 17883  0160A2  E108               	bnz	u6030
 17884  0160A4  0EFE               	movlw	-2
 17885  0160A6  006F FF8C  F026    	movff	plusw1,btemp
 17886  0160AC  0E17               	movlw	23
 17887  0160AE  5E26               	subwf	btemp^0,f,c
 17888  0160B0  A0D8               	btfss	status,0,c
 17889  0160B2  D00E               	goto	l7923
 17890  0160B4                     u6030:
 17891                           
 17892                           ;stkvar	_x @ sp[(-10)+-4]
 17893  0160B4  0EF2               	movlw	-14
 17894  0160B6  006F FF8C  F026    	movff	plusw1,btemp
 17895  0160BC  0EF3               	movlw	-13
 17896  0160BE  006F FF8C  F027    	movff	plusw1,btemp+1
 17897  0160C4  0EF4               	movlw	-12
 17898  0160C6  006F FF8C  F028    	movff	plusw1,btemp+2
 17899  0160CC  0EF5               	movlw	-11
 17900  0160CE  D11F               	goto	L20
 17901  0160D0                     l7923:
 17902                           
 17903                           ;stkvar	_e @ sp[(-10)+8]
 17904  0160D0  0EFF               	movlw	-1
 17905  0160D2  BEE3               	btfsc	plusw1,7,c
 17906  0160D4  D0B4               	goto	l7939
 17907                           
 17908                           ;stkvar	_e @ sp[(-10)+8]
 17909  0160D6  0EFE               	movlw	-2
 17910  0160D8  006F FF8C  F031    	movff	plusw1,btemp+11
 17911  0160DE  0EFF               	movlw	255
 17912  0160E0  6E2A               	movwf	(btemp+4)^0,c
 17913  0160E2  0EFF               	movlw	255
 17914  0160E4  6E2B               	movwf	(btemp+5)^0,c
 17915  0160E6  0E7F               	movlw	127
 17916  0160E8  6E2C               	movwf	(btemp+6)^0,c
 17917  0160EA  0E00               	movlw	0
 17918  0160EC  6E2D               	movwf	(btemp+7)^0,c
 17919  0160EE                     u6055:
 17920  0160EE  6631               	tstfsz	(btemp+11)^0,c
 17921  0160F0  D001               	goto	u6056
 17922  0160F2  D007               	goto	u6057
 17923  0160F4                     u6056:
 17924  0160F4  342D               	rlcf	(btemp+7)^0,w,c
 17925  0160F6  322D               	rrcf	(btemp+7)^0,f,c
 17926  0160F8  322C               	rrcf	(btemp+6)^0,f,c
 17927  0160FA  322B               	rrcf	(btemp+5)^0,f,c
 17928  0160FC  322A               	rrcf	(btemp+4)^0,f,c
 17929  0160FE  2E31               	decfsz	(btemp+11)^0,f,c
 17930  016100  D7F6               	goto	u6055
 17931  016102                     u6057:
 17932                           
 17933                           ;stkvar	_m @ sp[(-10)+4]
 17934  016102  0EFA               	movlw	-6
 17935  016104  0060  F0AB  FFE3   	movff	btemp+4,plusw1
 17936  01610A  0EFB               	movlw	-5
 17937  01610C  0060  F0AF  FFE3   	movff	btemp+5,plusw1
 17938  016112  0EFC               	movlw	-4
 17939  016114  0060  F0B3  FFE3   	movff	btemp+6,plusw1
 17940  01611A  0EFD               	movlw	-3
 17941  01611C  0060  F0B7  FFE3   	movff	btemp+7,plusw1
 17942                           
 17943                           ;stkvar	_m @ sp[(-10)+4]
 17944                           ;stkvar	_u @ sp[(-10)+0]
 17945  016122  0EF6               	movlw	-10
 17946  016124  006F FF8C  F02E    	movff	plusw1,btemp+8
 17947  01612A  0EF7               	movlw	-9
 17948  01612C  006F FF8C  F02F    	movff	plusw1,btemp+9
 17949  016132  0EF8               	movlw	-8
 17950  016134  006F FF8C  F030    	movff	plusw1,btemp+10
 17951  01613A  0EF9               	movlw	-7
 17952  01613C  006F FF8C  F031    	movff	plusw1,btemp+11
 17953  016142  0EFA               	movlw	-6
 17954  016144  50E3               	movf	plusw1,w,c
 17955  016146  162E               	andwf	(btemp+8)^0,f,c
 17956  016148  0EFB               	movlw	-5
 17957  01614A  50E3               	movf	plusw1,w,c
 17958  01614C  162F               	andwf	(btemp+9)^0,f,c
 17959  01614E  0EFC               	movlw	-4
 17960  016150  50E3               	movf	plusw1,w,c
 17961  016152  1630               	andwf	(btemp+10)^0,f,c
 17962  016154  0EFD               	movlw	-3
 17963  016156  50E3               	movf	plusw1,w,c
 17964  016158  1631               	andwf	(btemp+11)^0,f,c
 17965  01615A  502E               	movf	(btemp+8)^0,w,c
 17966  01615C  102F               	iorwf	(btemp+9)^0,w,c
 17967  01615E  1030               	iorwf	(btemp+10)^0,w,c
 17968  016160  1031               	iorwf	(btemp+11)^0,w,c
 17969  016162  B4D8               	btfsc	status,2,c
 17970  016164  D7A7               	goto	u6030
 17971                           
 17972                           ;stkvar	_u @ sp[(-10)+0]
 17973  016166  0EF6               	movlw	-10
 17974  016168  006F FF8C  F02E    	movff	plusw1,btemp+8
 17975  01616E  0EF7               	movlw	-9
 17976  016170  006F FF8C  F02F    	movff	plusw1,btemp+9
 17977  016176  0EF8               	movlw	-8
 17978  016178  006F FF8C  F030    	movff	plusw1,btemp+10
 17979  01617E  0EF9               	movlw	-7
 17980  016180  006F FF8C  F031    	movff	plusw1,btemp+11
 17981  016186  0E20               	movlw	32
 17982  016188  D005               	goto	u6070
 17983  01618A                     u6075:
 17984  01618A  90D8               	bcf	status,0,c
 17985  01618C  3231               	rrcf	(btemp+11)^0,f,c
 17986  01618E  3230               	rrcf	(btemp+10)^0,f,c
 17987  016190  322F               	rrcf	(btemp+9)^0,f,c
 17988  016192  322E               	rrcf	(btemp+8)^0,f,c
 17989  016194                     u6070:
 17990  016194  2EE8               	decfsz	wreg,f,c
 17991  016196  D7F9               	goto	u6075
 17992  016198  502E               	movf	(btemp+8)^0,w,c
 17993  01619A  B4D8               	btfsc	status,2,c
 17994  01619C  D028               	goto	l7937
 17995                           
 17996                           ;stkvar	_m @ sp[(-10)+4]
 17997                           ;stkvar	_u @ sp[(-10)+0]
 17998  01619E  0EF6               	movlw	-10
 17999  0161A0  50E3               	movf	plusw1,w,c
 18000  0161A2  6E26               	movwf	btemp^0,c
 18001  0161A4  0EFA               	movlw	-6
 18002  0161A6  50E3               	movf	plusw1,w,c
 18003  0161A8  2626               	addwf	btemp^0,f,c
 18004  0161AA  0EF6               	movlw	-10
 18005  0161AC  0060  F09B  FFE3   	movff	btemp,plusw1
 18006  0161B2  0EF7               	movlw	-9
 18007  0161B4  50E3               	movf	plusw1,w,c
 18008  0161B6  6E26               	movwf	btemp^0,c
 18009  0161B8  0EFB               	movlw	-5
 18010  0161BA  50E3               	movf	plusw1,w,c
 18011  0161BC  2226               	addwfc	btemp^0,f,c
 18012  0161BE  0EF7               	movlw	-9
 18013  0161C0  0060  F09B  FFE3   	movff	btemp,plusw1
 18014  0161C6  0EF8               	movlw	-8
 18015  0161C8  50E3               	movf	plusw1,w,c
 18016  0161CA  6E26               	movwf	btemp^0,c
 18017  0161CC  0EFC               	movlw	-4
 18018  0161CE  50E3               	movf	plusw1,w,c
 18019  0161D0  2226               	addwfc	btemp^0,f,c
 18020  0161D2  0EF8               	movlw	-8
 18021  0161D4  0060  F09B  FFE3   	movff	btemp,plusw1
 18022  0161DA  0EF9               	movlw	-7
 18023  0161DC  50E3               	movf	plusw1,w,c
 18024  0161DE  6E26               	movwf	btemp^0,c
 18025  0161E0  0EFD               	movlw	-3
 18026  0161E2  50E3               	movf	plusw1,w,c
 18027  0161E4  2226               	addwfc	btemp^0,f,c
 18028  0161E6  0EF9               	movlw	-7
 18029  0161E8  0060  F09B  FFE3   	movff	btemp,plusw1
 18030  0161EE                     l7937:
 18031                           
 18032                           ;stkvar	_m @ sp[(-10)+4]
 18033  0161EE  0EFA               	movlw	-6
 18034  0161F0  006F FF8C  F02E    	movff	plusw1,btemp+8
 18035  0161F6  0EFB               	movlw	-5
 18036  0161F8  006F FF8C  F02F    	movff	plusw1,btemp+9
 18037  0161FE  0EFC               	movlw	-4
 18038  016200  006F FF8C  F030    	movff	plusw1,btemp+10
 18039  016206  0EFD               	movlw	-3
 18040  016208  006F FF8C  F031    	movff	plusw1,btemp+11
 18041  01620E  1C2E               	comf	(btemp+8)^0,w,c
 18042  016210  6E2A               	movwf	(btemp+4)^0,c
 18043  016212  1C2F               	comf	(btemp+9)^0,w,c
 18044  016214  6E2B               	movwf	(btemp+5)^0,c
 18045  016216  1C30               	comf	(btemp+10)^0,w,c
 18046  016218  6E2C               	movwf	(btemp+6)^0,c
 18047  01621A  1C31               	comf	(btemp+11)^0,w,c
 18048  01621C  6E2D               	movwf	(btemp+7)^0,c
 18049                           
 18050                           ;stkvar	_u @ sp[(-10)+0]
 18051  01621E  50E1               	movf	fsr1l,w,c
 18052  016220  0FF6               	addlw	-10
 18053  016222  6ED9               	movwf	fsr2l,c
 18054  016224  50E2               	movf	fsr1h,w,c
 18055  016226  6EDA               	movwf	fsr2h,c
 18056  016228  0EFF               	movlw	255
 18057  01622A  22DA               	addwfc	fsr2h,f,c
 18058  01622C  502A               	movf	(btemp+4)^0,w,c
 18059  01622E  16DE               	andwf	postinc2,f,c
 18060  016230  502B               	movf	(btemp+5)^0,w,c
 18061  016232  16DE               	andwf	postinc2,f,c
 18062  016234  502C               	movf	(btemp+6)^0,w,c
 18063  016236  16DE               	andwf	postinc2,f,c
 18064  016238  502D               	movf	(btemp+7)^0,w,c
 18065  01623A  16DE               	andwf	postinc2,f,c
 18066  01623C  D05B               	goto	l7947
 18067  01623E                     l7939:
 18068                           
 18069                           ;stkvar	_u @ sp[(-10)+0]
 18070  01623E  0EF6               	movlw	-10
 18071  016240  006F FF8C  F02E    	movff	plusw1,btemp+8
 18072  016246  0EF7               	movlw	-9
 18073  016248  006F FF8C  F02F    	movff	plusw1,btemp+9
 18074  01624E  0EF8               	movlw	-8
 18075  016250  006F FF8C  F030    	movff	plusw1,btemp+10
 18076  016256  0EF9               	movlw	-7
 18077  016258  006F FF8C  F031    	movff	plusw1,btemp+11
 18078  01625E  0E20               	movlw	32
 18079  016260  D005               	goto	u6090
 18080  016262                     u6095:
 18081  016262  90D8               	bcf	status,0,c
 18082  016264  3231               	rrcf	(btemp+11)^0,f,c
 18083  016266  3230               	rrcf	(btemp+10)^0,f,c
 18084  016268  322F               	rrcf	(btemp+9)^0,f,c
 18085  01626A  322E               	rrcf	(btemp+8)^0,f,c
 18086  01626C                     u6090:
 18087  01626C  2EE8               	decfsz	wreg,f,c
 18088  01626E  D7F9               	goto	u6095
 18089  016270  662E               	tstfsz	(btemp+8)^0,c
 18090  016272  D009               	goto	l7943
 18091                           
 18092                           ;stkvar	_u @ sp[(-10)+0]
 18093  016274  0EF6               	movlw	-10
 18094  016276  6AE3               	clrf	plusw1,c
 18095  016278  0EF7               	movlw	-9
 18096  01627A  6AE3               	clrf	plusw1,c
 18097  01627C  0EF8               	movlw	-8
 18098  01627E  6AE3               	clrf	plusw1,c
 18099  016280  0EF9               	movlw	-7
 18100  016282  6AE3               	clrf	plusw1,c
 18101  016284  D037               	goto	l7947
 18102  016286                     l7943:
 18103                           
 18104                           ;stkvar	_u @ sp[(-10)+0]
 18105  016286  0EF6               	movlw	-10
 18106  016288  006F FF8C  F02E    	movff	plusw1,btemp+8
 18107  01628E  0EF7               	movlw	-9
 18108  016290  006F FF8C  F02F    	movff	plusw1,btemp+9
 18109  016296  0EF8               	movlw	-8
 18110  016298  006F FF8C  F030    	movff	plusw1,btemp+10
 18111  01629E  0EF9               	movlw	-7
 18112  0162A0  006F FF8C  F031    	movff	plusw1,btemp+11
 18113  0162A6  90D8               	bcf	status,0,c
 18114  0162A8  342E               	rlcf	(btemp+8)^0,w,c
 18115  0162AA  6E2A               	movwf	(btemp+4)^0,c
 18116  0162AC  342F               	rlcf	(btemp+9)^0,w,c
 18117  0162AE  6E2B               	movwf	(btemp+5)^0,c
 18118  0162B0  3430               	rlcf	(btemp+10)^0,w,c
 18119  0162B2  6E2C               	movwf	(btemp+6)^0,c
 18120  0162B4  3431               	rlcf	(btemp+11)^0,w,c
 18121  0162B6  6E2D               	movwf	(btemp+7)^0,c
 18122  0162B8  502A               	movf	(btemp+4)^0,w,c
 18123  0162BA  102B               	iorwf	(btemp+5)^0,w,c
 18124  0162BC  102C               	iorwf	(btemp+6)^0,w,c
 18125  0162BE  102D               	iorwf	(btemp+7)^0,w,c
 18126  0162C0  B4D8               	btfsc	status,2,c
 18127  0162C2  D018               	goto	l7947
 18128  0162C4  0E00               	movlw	0
 18129  0162C6  6E2E               	movwf	(btemp+8)^0,c
 18130  0162C8  0E00               	movlw	0
 18131  0162CA  6E2F               	movwf	(btemp+9)^0,c
 18132  0162CC  0E80               	movlw	128
 18133  0162CE  6E30               	movwf	(btemp+10)^0,c
 18134  0162D0  0EBF               	movlw	191
 18135  0162D2  6E31               	movwf	(btemp+11)^0,c
 18136                           
 18137                           ;stkvar	_u @ sp[(-10)+0]
 18138  0162D4  0EF6               	movlw	-10
 18139  0162D6  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 18140  0162DC  0EF7               	movlw	-9
 18141  0162DE  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 18142  0162E4  0EF8               	movlw	-8
 18143  0162E6  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 18144  0162EC  0EF9               	movlw	-7
 18145  0162EE  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 18146  0162F4                     l7947:
 18147                           
 18148                           ;stkvar	_u @ sp[(-10)+0]
 18149  0162F4  0EF6               	movlw	-10
 18150  0162F6  006F FF8C  F026    	movff	plusw1,btemp
 18151  0162FC  0EF7               	movlw	-9
 18152  0162FE  006F FF8C  F027    	movff	plusw1,btemp+1
 18153  016304  0EF8               	movlw	-8
 18154  016306  006F FF8C  F028    	movff	plusw1,btemp+2
 18155  01630C  0EF9               	movlw	-7
 18156  01630E                     L20:
 18157  01630E  006F FF8C  F029    	movff	plusw1,btemp+3
 18158                           
 18159                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18160  016314  0EF2               	movlw	242
 18161  016316  26E1               	addwf	fsr1l,f,c
 18162  016318  0EFF               	movlw	255
 18163  01631A  22E2               	addwfc	fsr1h,f,c
 18164  01631C  0012               	return		;funcret
 18165  01631E                     __end_of_floorf:
 18166                           	opt callstack 0
 18167                           
 18168 ;; *************** function ___fpclassifyf *****************
 18169 ;; Defined at:
 18170 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 18171 ;; Parameters:    Size  Location     Type
 18172 ;;  x               4  [STACK] float 
 18173 ;; Auto vars:     Size  Location     Type
 18174 ;;  u               4  [STACK] struct .
 18175 ;;  e               2  [STACK] int 
 18176 ;; Return value:  Size  Location     Type
 18177 ;;                  2  [STACK] int 
 18178 ;; Registers used:
 18179 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 18180 ;; Tracked objects:
 18181 ;;		On entry : 0/0
 18182 ;;		On exit  : 0/0
 18183 ;;		Unchanged: 0/0
 18184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18189 ;;Total ram usage:        0 bytes
 18190 ;; Hardware stack levels used:    1
 18191 ;; Hardware stack levels required when called:   15
 18192 ;; This function calls:
 18193 ;;		Nothing
 18194 ;; This function is called by:
 18195 ;;		_efgtoa
 18196 ;; This function uses a reentrant model
 18197 ;;
 18198                           
 18199                           	psect	text60
 18200  017FEE                     __ptext60:
 18201                           	opt callstack 0
 18202  017FEE                     ___fpclassifyf:
 18203                           	opt callstack 0
 18204                           
 18205                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18206  017FEE  0E06               	movlw	6
 18207  017FF0  26E1               	addwf	fsr1l,f,c
 18208  017FF2  0E00               	movlw	0
 18209  017FF4  22E2               	addwfc	fsr1h,f,c
 18210                           
 18211                           ;incstack = 0
 18212 ;; hardware stack exceeded
 18213  017FF6  0060  F1E8  F02E   	movff	___fpclassifyf@F463,btemp+8
 18214  017FFC  0060  F1EC  F02F   	movff	___fpclassifyf@F463+1,btemp+9
 18215  018002  0060  F1F0  F030   	movff	___fpclassifyf@F463+2,btemp+10
 18216  018008  0060  F1F4  F031   	movff	___fpclassifyf@F463+3,btemp+11
 18217                           
 18218                           ;stkvar	_u @ sp[(-6)+0]
 18219  01800E  0EFA               	movlw	-6
 18220  018010  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 18221  018016  0EFB               	movlw	-5
 18222  018018  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 18223  01801E  0EFC               	movlw	-4
 18224  018020  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 18225  018026  0EFD               	movlw	-3
 18226  018028  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 18227                           
 18228                           ;stkvar	_x @ sp[(-6)+-4]
 18229  01802E  0EF6               	movlw	-10
 18230  018030  006F FF8C  F02E    	movff	plusw1,btemp+8
 18231  018036  0EF7               	movlw	-9
 18232  018038  006F FF8C  F02F    	movff	plusw1,btemp+9
 18233  01803E  0EF8               	movlw	-8
 18234  018040  006F FF8C  F030    	movff	plusw1,btemp+10
 18235  018046  0EF9               	movlw	-7
 18236  018048  006F FF8C  F031    	movff	plusw1,btemp+11
 18237                           
 18238                           ;stkvar	_u @ sp[(-6)+0]
 18239  01804E  0EFA               	movlw	-6
 18240  018050  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 18241  018056  0EFB               	movlw	-5
 18242  018058  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 18243  01805E  0EFC               	movlw	-4
 18244  018060  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 18245  018066  0EFD               	movlw	-3
 18246  018068  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 18247                           
 18248                           ;stkvar	_u @ sp[(-6)+0]
 18249  01806E  0EFA               	movlw	-6
 18250  018070  006F FF8C  F02E    	movff	plusw1,btemp+8
 18251  018076  0EFB               	movlw	-5
 18252  018078  006F FF8C  F02F    	movff	plusw1,btemp+9
 18253  01807E  0EFC               	movlw	-4
 18254  018080  006F FF8C  F030    	movff	plusw1,btemp+10
 18255  018086  0EFD               	movlw	-3
 18256  018088  006F FF8C  F031    	movff	plusw1,btemp+11
 18257  01808E  0E18               	movlw	24
 18258  018090  D005               	goto	u5900
 18259  018092                     u5905:
 18260  018092  90D8               	bcf	status,0,c
 18261  018094  3231               	rrcf	(btemp+11)^0,f,c
 18262  018096  3230               	rrcf	(btemp+10)^0,f,c
 18263  018098  322F               	rrcf	(btemp+9)^0,f,c
 18264  01809A  322E               	rrcf	(btemp+8)^0,f,c
 18265  01809C                     u5900:
 18266  01809C  2EE8               	decfsz	wreg,f,c
 18267  01809E  D7F9               	goto	u5905
 18268  0180A0  0060  F0B8  F02C   	movff	btemp+8,btemp+6
 18269  0180A6  0060  F0BC  F02D   	movff	btemp+9,btemp+7
 18270  0180AC  0EFF               	movlw	255
 18271  0180AE  162C               	andwf	(btemp+6)^0,f,c
 18272  0180B0  0E00               	movlw	0
 18273  0180B2  162D               	andwf	(btemp+7)^0,f,c
 18274                           
 18275                           ;stkvar	_e @ sp[(-6)+4]
 18276  0180B4  0EFE               	movlw	-2
 18277  0180B6  0060  F0B3  FFE3   	movff	btemp+6,plusw1
 18278  0180BC  0EFF               	movlw	-1
 18279  0180BE  0060  F0B7  FFE3   	movff	btemp+7,plusw1
 18280                           
 18281                           ;stkvar	_e @ sp[(-6)+4]
 18282  0180C4  0EFE               	movlw	-2
 18283  0180C6  006F FF8C  F026    	movff	plusw1,btemp
 18284  0180CC  0EFF               	movlw	-1
 18285  0180CE  50E3               	movf	plusw1,w,c
 18286  0180D0  1026               	iorwf	btemp^0,w,c
 18287  0180D2  A4D8               	btfss	status,2,c
 18288  0180D4  D023               	goto	l7885
 18289                           
 18290                           ;stkvar	_u @ sp[(-6)+0]
 18291  0180D6  0EFA               	movlw	-6
 18292  0180D8  006F FF8C  F02E    	movff	plusw1,btemp+8
 18293  0180DE  0EFB               	movlw	-5
 18294  0180E0  006F FF8C  F02F    	movff	plusw1,btemp+9
 18295  0180E6  0EFC               	movlw	-4
 18296  0180E8  006F FF8C  F030    	movff	plusw1,btemp+10
 18297  0180EE  0EFD               	movlw	-3
 18298  0180F0  006F FF8C  F031    	movff	plusw1,btemp+11
 18299  0180F6  90D8               	bcf	status,0,c
 18300  0180F8  342E               	rlcf	(btemp+8)^0,w,c
 18301  0180FA  6E2A               	movwf	(btemp+4)^0,c
 18302  0180FC  342F               	rlcf	(btemp+9)^0,w,c
 18303  0180FE  6E2B               	movwf	(btemp+5)^0,c
 18304  018100  3430               	rlcf	(btemp+10)^0,w,c
 18305  018102  6E2C               	movwf	(btemp+6)^0,c
 18306  018104  3431               	rlcf	(btemp+11)^0,w,c
 18307  018106  6E2D               	movwf	(btemp+7)^0,c
 18308  018108  502A               	movf	(btemp+4)^0,w,c
 18309  01810A  102B               	iorwf	(btemp+5)^0,w,c
 18310  01810C  102C               	iorwf	(btemp+6)^0,w,c
 18311  01810E  102D               	iorwf	(btemp+7)^0,w,c
 18312  018110  A4D8               	btfss	status,2,c
 18313  018112  D002               	goto	l7881
 18314  018114  0E02               	movlw	2
 18315  018116  D02E               	goto	L21
 18316  018118                     l7881:
 18317  018118  0E03               	movlw	3
 18318  01811A  D02C               	goto	L21
 18319  01811C                     l7885:
 18320                           
 18321                           ;stkvar	_e @ sp[(-6)+4]
 18322  01811C  0EFE               	movlw	-2
 18323  01811E  28E3               	incf	plusw1,w,c
 18324  018120  E128               	bnz	l7891
 18325  018122  0EFF               	movlw	-1
 18326  018124  50E3               	movf	plusw1,w,c
 18327  018126  A4D8               	btfss	status,2,c
 18328  018128  D024               	goto	l7891
 18329                           
 18330                           ;stkvar	_u @ sp[(-6)+0]
 18331  01812A  0EFA               	movlw	-6
 18332  01812C  006F FF8C  F02E    	movff	plusw1,btemp+8
 18333  018132  0EFB               	movlw	-5
 18334  018134  006F FF8C  F02F    	movff	plusw1,btemp+9
 18335  01813A  0EFC               	movlw	-4
 18336  01813C  006F FF8C  F030    	movff	plusw1,btemp+10
 18337  018142  0EFD               	movlw	-3
 18338  018144  006F FF8C  F031    	movff	plusw1,btemp+11
 18339  01814A  0E09               	movlw	9
 18340  01814C                     u5945:
 18341  01814C  90D8               	bcf	status,0,c
 18342  01814E  362E               	rlcf	(btemp+8)^0,f,c
 18343  018150  362F               	rlcf	(btemp+9)^0,f,c
 18344  018152  3630               	rlcf	(btemp+10)^0,f,c
 18345  018154  3631               	rlcf	(btemp+11)^0,f,c
 18346  018156  2EE8               	decfsz	wreg,f,c
 18347  018158  D7F9               	goto	u5945
 18348  01815A  502E               	movf	(btemp+8)^0,w,c
 18349  01815C  102F               	iorwf	(btemp+9)^0,w,c
 18350  01815E  1030               	iorwf	(btemp+10)^0,w,c
 18351  018160  1031               	iorwf	(btemp+11)^0,w,c
 18352  018162  A4D8               	btfss	status,2,c
 18353  018164  D002               	goto	u5950
 18354  018166  0E01               	movlw	1
 18355  018168  D001               	goto	u5960
 18356  01816A                     u5950:
 18357  01816A  0E00               	movlw	0
 18358  01816C                     u5960:
 18359  01816C  6E26               	movwf	btemp^0,c
 18360  01816E  6A27               	clrf	(btemp+1)^0,c
 18361  018170  D004               	goto	l3077
 18362  018172                     l7891:
 18363  018172  0E04               	movlw	4
 18364  018174                     L21:
 18365  018174  6E26               	movwf	btemp^0,c
 18366  018176  0E00               	movlw	0
 18367  018178  6E27               	movwf	(btemp+1)^0,c
 18368  01817A                     l3077:
 18369                           
 18370                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 18371  01817A  0EF6               	movlw	246
 18372  01817C  26E1               	addwf	fsr1l,f,c
 18373  01817E  0EFF               	movlw	255
 18374  018180  22E2               	addwfc	fsr1h,f,c
 18375  018182  0012               	return		;funcret
 18376  018184                     __end_of___fpclassifyf:
 18377                           	opt callstack 0
 18378                           
 18379 ;; *************** function ___fltol *****************
 18380 ;; Defined at:
 18381 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 18382 ;; Parameters:    Size  Location     Type
 18383 ;;  f1              4  [STACK] int 
 18384 ;; Auto vars:     Size  Location     Type
 18385 ;;  exp1            1  [STACK] unsigned char 
 18386 ;;  sign1           1  [STACK] unsigned char 
 18387 ;; Return value:  Size  Location     Type
 18388 ;;                  4  [STACK] long 
 18389 ;; Registers used:
 18390 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 18391 ;; Tracked objects:
 18392 ;;		On entry : 0/0
 18393 ;;		On exit  : 0/0
 18394 ;;		Unchanged: 0/0
 18395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18400 ;;Total ram usage:        0 bytes
 18401 ;; Hardware stack levels used:    1
 18402 ;; Hardware stack levels required when called:   15
 18403 ;; This function calls:
 18404 ;;		Nothing
 18405 ;; This function is called by:
 18406 ;;		_main
 18407 ;;		_calc_bsoc
 18408 ;;		_init_bsoc
 18409 ;;		_efgtoa
 18410 ;; This function uses a reentrant model
 18411 ;;
 18412                           
 18413                           	psect	text61
 18414  018478                     __ptext61:
 18415                           	opt callstack 0
 18416  018478                     ___fltol:
 18417                           	opt callstack 0
 18418                           
 18419                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18420  018478  52E6               	movf	postinc1,f,c
 18421  01847A  52E6               	movf	postinc1,f,c
 18422                           
 18423                           ;stkvar	_f1 @ sp[(-2)+-4]
 18424                           
 18425                           ;incstack = 0
 18426 ;; hardware stack exceeded
 18427  01847C  0EFA               	movlw	-6
 18428  01847E  006F FF8C  F02E    	movff	plusw1,btemp+8
 18429  018484  0EFB               	movlw	-5
 18430  018486  006F FF8C  F02F    	movff	plusw1,btemp+9
 18431  01848C  0EFC               	movlw	-4
 18432  01848E  006F FF8C  F030    	movff	plusw1,btemp+10
 18433  018494  0EFD               	movlw	-3
 18434  018496  006F FF8C  F031    	movff	plusw1,btemp+11
 18435  01849C  0E18               	movlw	24
 18436  01849E  D005               	goto	u7110
 18437  0184A0                     u7115:
 18438  0184A0  90D8               	bcf	status,0,c
 18439  0184A2  3231               	rrcf	(btemp+11)^0,f,c
 18440  0184A4  3230               	rrcf	(btemp+10)^0,f,c
 18441  0184A6  322F               	rrcf	(btemp+9)^0,f,c
 18442  0184A8  322E               	rrcf	(btemp+8)^0,f,c
 18443  0184AA                     u7110:
 18444  0184AA  2EE8               	decfsz	wreg,f,c
 18445  0184AC  D7F9               	goto	u7115
 18446                           
 18447                           ;stkvar	_exp1 @ sp[(-2)+0]
 18448  0184AE  0EFE               	movlw	-2
 18449  0184B0  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 18450  0184B6  0EFE               	movlw	-2
 18451  0184B8  50E3               	movf	plusw1,w,c
 18452  0184BA  A4D8               	btfss	status,2,c
 18453  0184BC  D006               	goto	l8511
 18454  0184BE                     u7120:
 18455  0184BE  0E00               	movlw	0
 18456  0184C0  6E26               	movwf	btemp^0,c
 18457  0184C2  6A27               	clrf	(btemp+1)^0,c
 18458  0184C4  6A28               	clrf	(btemp+2)^0,c
 18459  0184C6  6A29               	clrf	(btemp+3)^0,c
 18460  0184C8  D08B               	goto	l2693
 18461  0184CA                     l8511:
 18462                           
 18463                           ;stkvar	_f1 @ sp[(-2)+-4]
 18464  0184CA  0EFA               	movlw	-6
 18465  0184CC  006F FF8C  F02E    	movff	plusw1,btemp+8
 18466  0184D2  0EFB               	movlw	-5
 18467  0184D4  006F FF8C  F02F    	movff	plusw1,btemp+9
 18468  0184DA  0EFC               	movlw	-4
 18469  0184DC  006F FF8C  F030    	movff	plusw1,btemp+10
 18470  0184E2  0EFD               	movlw	-3
 18471  0184E4  006F FF8C  F031    	movff	plusw1,btemp+11
 18472  0184EA  0E20               	movlw	32
 18473  0184EC  D005               	goto	u7130
 18474  0184EE                     u7135:
 18475  0184EE  90D8               	bcf	status,0,c
 18476  0184F0  3231               	rrcf	(btemp+11)^0,f,c
 18477  0184F2  3230               	rrcf	(btemp+10)^0,f,c
 18478  0184F4  322F               	rrcf	(btemp+9)^0,f,c
 18479  0184F6  322E               	rrcf	(btemp+8)^0,f,c
 18480  0184F8                     u7130:
 18481  0184F8  2EE8               	decfsz	wreg,f,c
 18482  0184FA  D7F9               	goto	u7135
 18483                           
 18484                           ;stkvar	_sign1 @ sp[(-2)+1]
 18485  0184FC  0EFF               	movlw	-1
 18486  0184FE  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 18487                           
 18488                           ;stkvar	_f1 @ sp[(-2)+-4]
 18489  018504  0EFC               	movlw	-4
 18490  018506  8EE3               	bsf	plusw1,7,c
 18491                           
 18492                           ;stkvar	_f1 @ sp[(-2)+-4]
 18493  018508  50E1               	movf	fsr1l,w,c
 18494  01850A  0FFA               	addlw	-6
 18495  01850C  6ED9               	movwf	fsr2l,c
 18496  01850E  50E2               	movf	fsr1h,w,c
 18497  018510  6EDA               	movwf	fsr2h,c
 18498  018512  0EFF               	movlw	255
 18499  018514  22DA               	addwfc	fsr2h,f,c
 18500  018516  0EFF               	movlw	255
 18501  018518  16DE               	andwf	postinc2,f,c
 18502  01851A  0EFF               	movlw	255
 18503  01851C  16DE               	andwf	postinc2,f,c
 18504  01851E  0EFF               	movlw	255
 18505  018520  16DE               	andwf	postinc2,f,c
 18506  018522  0E00               	movlw	0
 18507  018524  16DE               	andwf	postinc2,f,c
 18508                           
 18509                           ;stkvar	_exp1 @ sp[(-2)+0]
 18510  018526  0EFE               	movlw	-2
 18511  018528  006F FF8C  F026    	movff	plusw1,btemp
 18512  01852E  0E96               	movlw	150
 18513  018530  5E26               	subwf	btemp^0,f,c
 18514  018532  0EFE               	movlw	-2
 18515  018534  0060  F09B  FFE3   	movff	btemp,plusw1
 18516                           
 18517                           ;stkvar	_exp1 @ sp[(-2)+0]
 18518  01853A  0EFE               	movlw	-2
 18519  01853C  AEE3               	btfss	plusw1,7,c
 18520  01853E  D014               	goto	l8529
 18521                           
 18522                           ;stkvar	_exp1 @ sp[(-2)+0]
 18523  018540  0EFE               	movlw	-2
 18524  018542  50E3               	movf	plusw1,w,c
 18525  018544  0A80               	xorlw	128
 18526  018546  0F97               	addlw	151
 18527  018548  A0D8               	btfss	status,0,c
 18528  01854A  D7B9               	goto	u7120
 18529  01854C                     l8527:
 18530                           
 18531                           ;stkvar	_f1 @ sp[(-2)+-4]
 18532  01854C  90D8               	bcf	status,0,c
 18533  01854E  0EFD               	movlw	-3
 18534  018550  32E3               	rrcf	plusw1,f,c
 18535  018552  0EFC               	movlw	-4
 18536  018554  32E3               	rrcf	plusw1,f,c
 18537  018556  0EFB               	movlw	-5
 18538  018558  32E3               	rrcf	plusw1,f,c
 18539  01855A  0EFA               	movlw	-6
 18540  01855C  32E3               	rrcf	plusw1,f,c
 18541                           
 18542                           ;stkvar	_exp1 @ sp[(-2)+0]
 18543  01855E  0EFE               	movlw	-2
 18544  018560  2AE3               	incf	plusw1,f,c
 18545  018562  B4D8               	btfsc	status,2,c
 18546  018564  D018               	goto	u7180
 18547  018566  D7F2               	goto	l8527
 18548  018568                     l8529:
 18549                           
 18550                           ;stkvar	_exp1 @ sp[(-2)+0]
 18551  018568  0EFE               	movlw	-2
 18552  01856A  006F FF8C  F026    	movff	plusw1,btemp
 18553  018570  0E1F               	movlw	31
 18554  018572  6426               	cpfsgt	btemp^0,c
 18555  018574  D00C               	goto	l8537
 18556  018576  D7A3               	goto	u7120
 18557  018578                     l8535:
 18558                           
 18559                           ;stkvar	_f1 @ sp[(-2)+-4]
 18560  018578  90D8               	bcf	status,0,c
 18561  01857A  0EFA               	movlw	-6
 18562  01857C  36E3               	rlcf	plusw1,f,c
 18563  01857E  0EFB               	movlw	-5
 18564  018580  36E3               	rlcf	plusw1,f,c
 18565  018582  0EFC               	movlw	-4
 18566  018584  36E3               	rlcf	plusw1,f,c
 18567  018586  0EFD               	movlw	-3
 18568  018588  36E3               	rlcf	plusw1,f,c
 18569                           
 18570                           ;stkvar	_exp1 @ sp[(-2)+0]
 18571  01858A  0EFE               	movlw	-2
 18572  01858C  06E3               	decf	plusw1,f,c
 18573  01858E                     l8537:
 18574                           
 18575                           ;stkvar	_exp1 @ sp[(-2)+0]
 18576  01858E  0EFE               	movlw	-2
 18577  018590  50E3               	movf	plusw1,w,c
 18578  018592  A4D8               	btfss	status,2,c
 18579  018594  D7F1               	goto	l8535
 18580  018596                     u7180:
 18581                           
 18582                           ;stkvar	_sign1 @ sp[(-2)+1]
 18583  018596  0EFF               	movlw	-1
 18584  018598  50E3               	movf	plusw1,w,c
 18585  01859A  B4D8               	btfsc	status,2,c
 18586  01859C  D011               	goto	u7200
 18587                           
 18588                           ;stkvar	_f1 @ sp[(-2)+-4]
 18589                           ;stkvar	_f1 @ sp[(-2)+-4]
 18590  01859E  0EFA               	movlw	-6
 18591  0185A0  6CE3               	negf	plusw1,c
 18592  0185A2  0EFB               	movlw	-5
 18593  0185A4  1EE3               	comf	plusw1,f,c
 18594  0185A6  0EFC               	movlw	-4
 18595  0185A8  1EE3               	comf	plusw1,f,c
 18596  0185AA  0EFD               	movlw	-3
 18597  0185AC  1EE3               	comf	plusw1,f,c
 18598  0185AE  E308               	bnc	u7200
 18599  0185B0  0EFB               	movlw	-5
 18600  0185B2  2AE3               	incf	plusw1,f,c
 18601  0185B4  E305               	bnc	u7200
 18602  0185B6  0EFC               	movlw	-4
 18603  0185B8  2AE3               	incf	plusw1,f,c
 18604  0185BA  E302               	bnc	u7200
 18605  0185BC  0EFD               	movlw	-3
 18606  0185BE  2AE3               	incf	plusw1,f,c
 18607  0185C0                     u7200:
 18608                           
 18609                           ;stkvar	_f1 @ sp[(-2)+-4]
 18610  0185C0  0EFA               	movlw	-6
 18611  0185C2  006F FF8C  F026    	movff	plusw1,btemp
 18612  0185C8  0EFB               	movlw	-5
 18613  0185CA  006F FF8C  F027    	movff	plusw1,btemp+1
 18614  0185D0  0EFC               	movlw	-4
 18615  0185D2  006F FF8C  F028    	movff	plusw1,btemp+2
 18616  0185D8  0EFD               	movlw	-3
 18617  0185DA  006F FF8C  F029    	movff	plusw1,btemp+3
 18618  0185E0                     l2693:
 18619                           
 18620                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18621  0185E0  0EFA               	movlw	250
 18622  0185E2  26E1               	addwf	fsr1l,f,c
 18623  0185E4  0EFF               	movlw	255
 18624  0185E6  22E2               	addwfc	fsr1h,f,c
 18625  0185E8  0012               	return		;funcret
 18626  0185EA                     __end_of___fltol:
 18627                           	opt callstack 0
 18628                           
 18629 ;; *************** function ___flneg *****************
 18630 ;; Defined at:
 18631 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 18632 ;; Parameters:    Size  Location     Type
 18633 ;;  f1              4  [STACK] long 
 18634 ;; Auto vars:     Size  Location     Type
 18635 ;;		None
 18636 ;; Return value:  Size  Location     Type
 18637 ;;                  4  [STACK] long 
 18638 ;; Registers used:
 18639 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 18640 ;; Tracked objects:
 18641 ;;		On entry : 0/0
 18642 ;;		On exit  : 0/0
 18643 ;;		Unchanged: 0/0
 18644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18649 ;;Total ram usage:        0 bytes
 18650 ;; Hardware stack levels used:    1
 18651 ;; Hardware stack levels required when called:   15
 18652 ;; This function calls:
 18653 ;;		Nothing
 18654 ;; This function is called by:
 18655 ;;		_calc_bsoc
 18656 ;;		_efgtoa
 18657 ;; This function uses a reentrant model
 18658 ;;
 18659                           
 18660                           	psect	text62
 18661  01ABF8                     __ptext62:
 18662                           	opt callstack 0
 18663  01ABF8                     ___flneg:
 18664                           	opt callstack 0
 18665                           
 18666                           ;stkvar	_f1 @ sp[(0)+-4]
 18667                           
 18668                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18669                           ;incstack = 0
 18670 ;; hardware stack exceeded
 18671  01ABF8  0EFC               	movlw	-4
 18672  01ABFA  50E3               	movf	plusw1,w,c
 18673  01ABFC  E10A               	bnz	u7100
 18674  01ABFE  0EFD               	movlw	-3
 18675  01AC00  50E3               	movf	plusw1,w,c
 18676  01AC02  E107               	bnz	u7100
 18677  01AC04  0EFE               	movlw	-2
 18678  01AC06  50E3               	movf	plusw1,w,c
 18679  01AC08  E104               	bnz	u7100
 18680  01AC0A  0EFF               	movlw	-1
 18681  01AC0C  50E3               	movf	plusw1,w,c
 18682  01AC0E  B4D8               	btfsc	status,2,c
 18683  01AC10  D002               	goto	l8501
 18684  01AC12                     u7100:
 18685                           
 18686                           ;stkvar	_f1 @ sp[(0)+-4]
 18687  01AC12  0EFF               	movlw	-1
 18688  01AC14  7EE3               	btg	plusw1,7,c
 18689  01AC16                     l8501:
 18690                           
 18691                           ;stkvar	_f1 @ sp[(0)+-4]
 18692  01AC16  0EFC               	movlw	-4
 18693  01AC18  006F FF8C  F026    	movff	plusw1,btemp
 18694  01AC1E  0EFD               	movlw	-3
 18695  01AC20  006F FF8C  F027    	movff	plusw1,btemp+1
 18696  01AC26  0EFE               	movlw	-2
 18697  01AC28  006F FF8C  F028    	movff	plusw1,btemp+2
 18698  01AC2E  0EFF               	movlw	-1
 18699  01AC30  006F FF8C  F029    	movff	plusw1,btemp+3
 18700                           
 18701                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18702  01AC36  52E5               	movf	postdec1,f,c
 18703  01AC38  52E5               	movf	postdec1,f,c
 18704  01AC3A  52E5               	movf	postdec1,f,c
 18705  01AC3C  52E5               	movf	postdec1,f,c
 18706  01AC3E  0012               	return		;funcret
 18707  01AC40                     __end_of___flneg:
 18708                           	opt callstack 0
 18709                           
 18710 ;; *************** function ___fleq *****************
 18711 ;; Defined at:
 18712 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 18713 ;; Parameters:    Size  Location     Type
 18714 ;;  ff1             4  [STACK] long 
 18715 ;;  ff2             4  [STACK] long 
 18716 ;; Auto vars:     Size  Location     Type
 18717 ;;		None
 18718 ;; Return value:  Size  Location     Type
 18719 ;;		None               void
 18720 ;; Registers used:
 18721 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 18722 ;; Tracked objects:
 18723 ;;		On entry : 0/0
 18724 ;;		On exit  : 0/0
 18725 ;;		Unchanged: 0/0
 18726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18731 ;;Total ram usage:        0 bytes
 18732 ;; Hardware stack levels used:    1
 18733 ;; Hardware stack levels required when called:   15
 18734 ;; This function calls:
 18735 ;;		Nothing
 18736 ;; This function is called by:
 18737 ;;		_efgtoa
 18738 ;; This function uses a reentrant model
 18739 ;;
 18740                           
 18741                           	psect	text63
 18742  019CD4                     __ptext63:
 18743                           	opt callstack 0
 18744  019CD4                     ___fleq:
 18745                           	opt callstack 0
 18746                           
 18747                           ;stkvar	_ff1 @ sp[(0)+-4]
 18748                           
 18749                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18750                           ;incstack = 0
 18751 ;; hardware stack exceeded
 18752  019CD4  50E1               	movf	fsr1l,w,c
 18753  019CD6  0FFC               	addlw	-4
 18754  019CD8  6ED9               	movwf	fsr2l,c
 18755  019CDA  50E2               	movf	fsr1h,w,c
 18756  019CDC  6EDA               	movwf	fsr2h,c
 18757  019CDE  0EFF               	movlw	255
 18758  019CE0  22DA               	addwfc	fsr2h,f,c
 18759  019CE2  0E00               	movlw	0
 18760  019CE4  14DE               	andwf	postinc2,w,c
 18761  019CE6  6E2E               	movwf	(btemp+8)^0,c
 18762  019CE8  0E00               	movlw	0
 18763  019CEA  14DE               	andwf	postinc2,w,c
 18764  019CEC  6E2F               	movwf	(btemp+9)^0,c
 18765  019CEE  0E80               	movlw	128
 18766  019CF0  14DE               	andwf	postinc2,w,c
 18767  019CF2  6E30               	movwf	(btemp+10)^0,c
 18768  019CF4  0E7F               	movlw	127
 18769  019CF6  14DE               	andwf	postinc2,w,c
 18770  019CF8  6E31               	movwf	(btemp+11)^0,c
 18771  019CFA  502E               	movf	(btemp+8)^0,w,c
 18772  019CFC  102F               	iorwf	(btemp+9)^0,w,c
 18773  019CFE  1030               	iorwf	(btemp+10)^0,w,c
 18774  019D00  1031               	iorwf	(btemp+11)^0,w,c
 18775  019D02  A4D8               	btfss	status,2,c
 18776  019D04  D008               	goto	l8459
 18777                           
 18778                           ;stkvar	_ff1 @ sp[(0)+-4]
 18779  019D06  0EFC               	movlw	-4
 18780  019D08  6AE3               	clrf	plusw1,c
 18781  019D0A  0EFD               	movlw	-3
 18782  019D0C  6AE3               	clrf	plusw1,c
 18783  019D0E  0EFE               	movlw	-2
 18784  019D10  6AE3               	clrf	plusw1,c
 18785  019D12  0EFF               	movlw	-1
 18786  019D14  6AE3               	clrf	plusw1,c
 18787  019D16                     l8459:
 18788                           
 18789                           ;stkvar	_ff2 @ sp[(0)+-8]
 18790  019D16  50E1               	movf	fsr1l,w,c
 18791  019D18  0FF8               	addlw	-8
 18792  019D1A  6ED9               	movwf	fsr2l,c
 18793  019D1C  50E2               	movf	fsr1h,w,c
 18794  019D1E  6EDA               	movwf	fsr2h,c
 18795  019D20  0EFF               	movlw	255
 18796  019D22  22DA               	addwfc	fsr2h,f,c
 18797  019D24  0E00               	movlw	0
 18798  019D26  14DE               	andwf	postinc2,w,c
 18799  019D28  6E2E               	movwf	(btemp+8)^0,c
 18800  019D2A  0E00               	movlw	0
 18801  019D2C  14DE               	andwf	postinc2,w,c
 18802  019D2E  6E2F               	movwf	(btemp+9)^0,c
 18803  019D30  0E80               	movlw	128
 18804  019D32  14DE               	andwf	postinc2,w,c
 18805  019D34  6E30               	movwf	(btemp+10)^0,c
 18806  019D36  0E7F               	movlw	127
 18807  019D38  14DE               	andwf	postinc2,w,c
 18808  019D3A  6E31               	movwf	(btemp+11)^0,c
 18809  019D3C  502E               	movf	(btemp+8)^0,w,c
 18810  019D3E  102F               	iorwf	(btemp+9)^0,w,c
 18811  019D40  1030               	iorwf	(btemp+10)^0,w,c
 18812  019D42  1031               	iorwf	(btemp+11)^0,w,c
 18813  019D44  A4D8               	btfss	status,2,c
 18814  019D46  D008               	goto	l8463
 18815                           
 18816                           ;stkvar	_ff2 @ sp[(0)+-8]
 18817  019D48  0EF8               	movlw	-8
 18818  019D4A  6AE3               	clrf	plusw1,c
 18819  019D4C  0EF9               	movlw	-7
 18820  019D4E  6AE3               	clrf	plusw1,c
 18821  019D50  0EFA               	movlw	-6
 18822  019D52  6AE3               	clrf	plusw1,c
 18823  019D54  0EFB               	movlw	-5
 18824  019D56  6AE3               	clrf	plusw1,c
 18825  019D58                     l8463:
 18826                           
 18827                           ;stkvar	_ff2 @ sp[(0)+-8]
 18828                           ;stkvar	_ff1 @ sp[(0)+-4]
 18829  019D58  50E1               	movf	fsr1l,w,c
 18830  019D5A  0FFC               	addlw	-4
 18831  019D5C  6ED9               	movwf	fsr2l,c
 18832  019D5E  50E2               	movf	fsr1h,w,c
 18833  019D60  6EDA               	movwf	fsr2h,c
 18834  019D62  0EFF               	movlw	255
 18835  019D64  22DA               	addwfc	fsr2h,f,c
 18836  019D66  0EF8               	movlw	-8
 18837  019D68  50E3               	movf	plusw1,w,c
 18838  019D6A  18DE               	xorwf	postinc2,w,c
 18839  019D6C  E10D               	bnz	u7040
 18840  019D6E  0EF9               	movlw	-7
 18841  019D70  50E3               	movf	plusw1,w,c
 18842  019D72  18DE               	xorwf	postinc2,w,c
 18843  019D74  E109               	bnz	u7040
 18844  019D76  0EFA               	movlw	-6
 18845  019D78  50E3               	movf	plusw1,w,c
 18846  019D7A  18DE               	xorwf	postinc2,w,c
 18847  019D7C  E105               	bnz	u7040
 18848  019D7E  0EFB               	movlw	-5
 18849  019D80  50E3               	movf	plusw1,w,c
 18850  019D82  18DE               	xorwf	postinc2,w,c
 18851  019D84  B4D8               	btfsc	status,2,c
 18852  019D86  D002               	goto	l8467
 18853  019D88                     u7040:
 18854  019D88  9026               	bcf	btemp& (0+255),0,c
 18855  019D8A  D001               	goto	l2655
 18856  019D8C                     l8467:
 18857  019D8C  8026               	bsf	btemp& (0+255),0,c
 18858  019D8E                     l2655:
 18859                           
 18860                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 18861  019D8E  0EF8               	movlw	248
 18862  019D90  26E1               	addwf	fsr1l,f,c
 18863  019D92  0EFF               	movlw	255
 18864  019D94  22E2               	addwfc	fsr1h,f,c
 18865  019D96  0012               	return		;funcret
 18866  019D98                     __end_of___fleq:
 18867                           	opt callstack 0
 18868                           
 18869 ;; *************** function ___awmod *****************
 18870 ;; Defined at:
 18871 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 18872 ;; Parameters:    Size  Location     Type
 18873 ;;  dividend        2  [STACK] int 
 18874 ;;  divisor         2  [STACK] int 
 18875 ;; Auto vars:     Size  Location     Type
 18876 ;;  sign            1  [STACK] unsigned char 
 18877 ;;  counter         1  [STACK] unsigned char 
 18878 ;; Return value:  Size  Location     Type
 18879 ;;                  2  [STACK] int 
 18880 ;; Registers used:
 18881 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 18882 ;; Tracked objects:
 18883 ;;		On entry : 0/0
 18884 ;;		On exit  : 0/0
 18885 ;;		Unchanged: 0/0
 18886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18891 ;;Total ram usage:        0 bytes
 18892 ;; Hardware stack levels used:    1
 18893 ;; Hardware stack levels required when called:   15
 18894 ;; This function calls:
 18895 ;;		Nothing
 18896 ;; This function is called by:
 18897 ;;		_efgtoa
 18898 ;; This function uses a reentrant model
 18899 ;;
 18900                           
 18901                           	psect	text64
 18902  01903A                     __ptext64:
 18903                           	opt callstack 0
 18904  01903A                     ___awmod:
 18905                           	opt callstack 0
 18906                           
 18907                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18908  01903A  52E6               	movf	postinc1,f,c
 18909  01903C  52E6               	movf	postinc1,f,c
 18910                           
 18911                           ;stkvar	_sign @ sp[(-2)+0]
 18912                           
 18913                           ;incstack = 0
 18914 ;; hardware stack exceeded
 18915  01903E  0EFE               	movlw	-2
 18916  019040  6AE3               	clrf	plusw1,c
 18917                           
 18918                           ;stkvar	_dividend @ sp[(-2)+-2]
 18919  019042  0EFD               	movlw	-3
 18920  019044  AEE3               	btfss	plusw1,7,c
 18921  019046  D009               	goto	l8425
 18922                           
 18923                           ;stkvar	_dividend @ sp[(-2)+-2]
 18924                           ;stkvar	_dividend @ sp[(-2)+-2]
 18925  019048  0EFC               	movlw	-4
 18926  01904A  6CE3               	negf	plusw1,c
 18927  01904C  0EFD               	movlw	-3
 18928  01904E  1EE3               	comf	plusw1,f,c
 18929  019050  B0D8               	btfsc	status,0,c
 18930  019052  2AE3               	incf	plusw1,f,c
 18931                           
 18932                           ;stkvar	_sign @ sp[(-2)+0]
 18933  019054  0EFE               	movlw	-2
 18934  019056  6AE3               	clrf	plusw1,c
 18935  019058  2AE3               	incf	plusw1,f,c
 18936  01905A                     l8425:
 18937                           
 18938                           ;stkvar	_divisor @ sp[(-2)+-4]
 18939  01905A  0EFB               	movlw	-5
 18940  01905C  AEE3               	btfss	plusw1,7,c
 18941  01905E  D006               	goto	l8429
 18942                           
 18943                           ;stkvar	_divisor @ sp[(-2)+-4]
 18944                           ;stkvar	_divisor @ sp[(-2)+-4]
 18945  019060  0EFA               	movlw	-6
 18946  019062  6CE3               	negf	plusw1,c
 18947  019064  0EFB               	movlw	-5
 18948  019066  1EE3               	comf	plusw1,f,c
 18949  019068  B0D8               	btfsc	status,0,c
 18950  01906A  2AE3               	incf	plusw1,f,c
 18951  01906C                     l8429:
 18952                           
 18953                           ;stkvar	_divisor @ sp[(-2)+-4]
 18954  01906C  0EFA               	movlw	-6
 18955  01906E  006F FF8C  F026    	movff	plusw1,btemp
 18956  019074  0EFB               	movlw	-5
 18957  019076  50E3               	movf	plusw1,w,c
 18958  019078  1026               	iorwf	btemp^0,w,c
 18959  01907A  B4D8               	btfsc	status,2,c
 18960  01907C  D053               	goto	u7000
 18961                           
 18962                           ;stkvar	_counter @ sp[(-2)+1]
 18963  01907E  0EFF               	movlw	-1
 18964  019080  6AE3               	clrf	plusw1,c
 18965  019082  D012               	goto	L22
 18966  019084                     l8433:
 18967                           
 18968                           ;stkvar	_divisor @ sp[(-2)+-4]
 18969  019084  0EFA               	movlw	-6
 18970  019086  50E3               	movf	plusw1,w,c
 18971  019088  90D8               	bcf	status,0,c
 18972  01908A  34E8               	rlcf	wreg,w,c
 18973  01908C  6E26               	movwf	btemp^0,c
 18974  01908E  0EFA               	movlw	-6
 18975  019090  0060  F09B  FFE3   	movff	btemp,plusw1
 18976  019096  0EFB               	movlw	-5
 18977  019098  50E3               	movf	plusw1,w,c
 18978  01909A  34E8               	rlcf	wreg,w,c
 18979  01909C  6E26               	movwf	btemp^0,c
 18980  01909E  0EFB               	movlw	-5
 18981  0190A0  0060  F09B  FFE3   	movff	btemp,plusw1
 18982                           
 18983                           ;stkvar	_counter @ sp[(-2)+1]
 18984  0190A6  0EFF               	movlw	-1
 18985  0190A8                     L22:
 18986  0190A8  2AE3               	incf	plusw1,f,c
 18987                           
 18988                           ;stkvar	_divisor @ sp[(-2)+-4]
 18989  0190AA  0EFB               	movlw	-5
 18990  0190AC  AEE3               	btfss	plusw1,7,c
 18991  0190AE  D7EA               	goto	l8433
 18992  0190B0                     u6980:
 18993                           
 18994                           ;stkvar	_divisor @ sp[(-2)+-4]
 18995  0190B0  0EFA               	movlw	-6
 18996  0190B2  006F FF8C  F030    	movff	plusw1,btemp+10
 18997  0190B8  0EFB               	movlw	-5
 18998  0190BA  006F FF8C  F031    	movff	plusw1,btemp+11
 18999                           
 19000                           ;stkvar	_dividend @ sp[(-2)+-2]
 19001  0190C0  0EFC               	movlw	-4
 19002  0190C2  006F FF8C  F02E    	movff	plusw1,btemp+8
 19003  0190C8  0EFD               	movlw	-3
 19004  0190CA  006F FF8C  F02F    	movff	plusw1,btemp+9
 19005  0190D0  5030               	movf	(btemp+10)^0,w,c
 19006  0190D2  5C2E               	subwf	(btemp+8)^0,w,c
 19007  0190D4  5031               	movf	(btemp+11)^0,w,c
 19008  0190D6  582F               	subwfb	(btemp+9)^0,w,c
 19009  0190D8  A0D8               	btfss	status,0,c
 19010  0190DA  D014               	goto	l8443
 19011                           
 19012                           ;stkvar	_divisor @ sp[(-2)+-4]
 19013                           ;stkvar	_dividend @ sp[(-2)+-2]
 19014  0190DC  0EFC               	movlw	-4
 19015  0190DE  50E3               	movf	plusw1,w,c
 19016  0190E0  6E26               	movwf	btemp^0,c
 19017  0190E2  0EFA               	movlw	-6
 19018  0190E4  50E3               	movf	plusw1,w,c
 19019  0190E6  5E26               	subwf	btemp^0,f,c
 19020  0190E8  0EFC               	movlw	-4
 19021  0190EA  0060  F09B  FFE3   	movff	btemp,plusw1
 19022  0190F0  0EFD               	movlw	-3
 19023  0190F2  50E3               	movf	plusw1,w,c
 19024  0190F4  6E26               	movwf	btemp^0,c
 19025  0190F6  0EFB               	movlw	-5
 19026  0190F8  50E3               	movf	plusw1,w,c
 19027  0190FA  5A26               	subwfb	btemp^0,f,c
 19028  0190FC  0EFD               	movlw	-3
 19029  0190FE  0060  F09B  FFE3   	movff	btemp,plusw1
 19030  019104                     l8443:
 19031                           
 19032                           ;stkvar	_divisor @ sp[(-2)+-4]
 19033  019104  90D8               	bcf	status,0,c
 19034  019106  0EFB               	movlw	-5
 19035  019108  32E3               	rrcf	plusw1,f,c
 19036  01910A  0EFA               	movlw	-6
 19037  01910C  32E3               	rrcf	plusw1,f,c
 19038                           
 19039                           ;stkvar	_counter @ sp[(-2)+1]
 19040  01910E  0EFF               	movlw	-1
 19041  019110  50E3               	movf	plusw1,w,c
 19042  019112  6E26               	movwf	btemp^0,c
 19043  019114  0E01               	movlw	1
 19044  019116  5E26               	subwf	btemp^0,f,c
 19045  019118  0EFF               	movlw	-1
 19046  01911A  0060  F09B  FFE3   	movff	btemp,plusw1
 19047  019120  A4D8               	btfss	status,2,c
 19048  019122  D7C6               	goto	u6980
 19049  019124                     u7000:
 19050                           
 19051                           ;stkvar	_sign @ sp[(-2)+0]
 19052  019124  0EFE               	movlw	-2
 19053  019126  50E3               	movf	plusw1,w,c
 19054  019128  B4D8               	btfsc	status,2,c
 19055  01912A  D006               	goto	l8451
 19056                           
 19057                           ;stkvar	_dividend @ sp[(-2)+-2]
 19058                           ;stkvar	_dividend @ sp[(-2)+-2]
 19059  01912C  0EFC               	movlw	-4
 19060  01912E  6CE3               	negf	plusw1,c
 19061  019130  0EFD               	movlw	-3
 19062  019132  1EE3               	comf	plusw1,f,c
 19063  019134  B0D8               	btfsc	status,0,c
 19064  019136  2AE3               	incf	plusw1,f,c
 19065  019138                     l8451:
 19066                           
 19067                           ;stkvar	_dividend @ sp[(-2)+-2]
 19068  019138  0EFC               	movlw	-4
 19069  01913A  006F FF8C  F026    	movff	plusw1,btemp
 19070  019140  0EFD               	movlw	-3
 19071  019142  006F FF8C  F027    	movff	plusw1,btemp+1
 19072                           
 19073                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19074  019148  0EFA               	movlw	250
 19075  01914A  26E1               	addwf	fsr1l,f,c
 19076  01914C  0EFF               	movlw	255
 19077  01914E  22E2               	addwfc	fsr1h,f,c
 19078  019150  0012               	return		;funcret
 19079  019152                     __end_of___awmod:
 19080                           	opt callstack 0
 19081                           
 19082 ;; *************** function ___awdiv *****************
 19083 ;; Defined at:
 19084 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 19085 ;; Parameters:    Size  Location     Type
 19086 ;;  dividend        2  [STACK] int 
 19087 ;;  divisor         2  [STACK] int 
 19088 ;; Auto vars:     Size  Location     Type
 19089 ;;  quotient        2  [STACK] int 
 19090 ;;  sign            1  [STACK] unsigned char 
 19091 ;;  counter         1  [STACK] unsigned char 
 19092 ;; Return value:  Size  Location     Type
 19093 ;;                  2  [STACK] int 
 19094 ;; Registers used:
 19095 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 19096 ;; Tracked objects:
 19097 ;;		On entry : 0/0
 19098 ;;		On exit  : 0/0
 19099 ;;		Unchanged: 0/0
 19100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19105 ;;Total ram usage:        0 bytes
 19106 ;; Hardware stack levels used:    1
 19107 ;; Hardware stack levels required when called:   15
 19108 ;; This function calls:
 19109 ;;		Nothing
 19110 ;; This function is called by:
 19111 ;;		_efgtoa
 19112 ;; This function uses a reentrant model
 19113 ;;
 19114                           
 19115                           	psect	text65
 19116  018A1A                     __ptext65:
 19117                           	opt callstack 0
 19118  018A1A                     ___awdiv:
 19119                           	opt callstack 0
 19120                           
 19121                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19122  018A1A  52E6               	movf	postinc1,f,c
 19123  018A1C  52E6               	movf	postinc1,f,c
 19124  018A1E  52E6               	movf	postinc1,f,c
 19125  018A20  52E6               	movf	postinc1,f,c
 19126                           
 19127                           ;stkvar	_sign @ sp[(-4)+2]
 19128                           
 19129                           ;incstack = 0
 19130 ;; hardware stack exceeded
 19131  018A22  0EFE               	movlw	-2
 19132  018A24  6AE3               	clrf	plusw1,c
 19133                           
 19134                           ;stkvar	_divisor @ sp[(-4)+-4]
 19135  018A26  0EF9               	movlw	-7
 19136  018A28  AEE3               	btfss	plusw1,7,c
 19137  018A2A  D009               	goto	l8379
 19138                           
 19139                           ;stkvar	_divisor @ sp[(-4)+-4]
 19140                           ;stkvar	_divisor @ sp[(-4)+-4]
 19141  018A2C  0EF8               	movlw	-8
 19142  018A2E  6CE3               	negf	plusw1,c
 19143  018A30  0EF9               	movlw	-7
 19144  018A32  1EE3               	comf	plusw1,f,c
 19145  018A34  B0D8               	btfsc	status,0,c
 19146  018A36  2AE3               	incf	plusw1,f,c
 19147                           
 19148                           ;stkvar	_sign @ sp[(-4)+2]
 19149  018A38  0EFE               	movlw	-2
 19150  018A3A  6AE3               	clrf	plusw1,c
 19151  018A3C  2AE3               	incf	plusw1,f,c
 19152  018A3E                     l8379:
 19153                           
 19154                           ;stkvar	_dividend @ sp[(-4)+-2]
 19155  018A3E  0EFB               	movlw	-5
 19156  018A40  AEE3               	btfss	plusw1,7,c
 19157  018A42  D008               	goto	l8385
 19158                           
 19159                           ;stkvar	_dividend @ sp[(-4)+-2]
 19160                           ;stkvar	_dividend @ sp[(-4)+-2]
 19161  018A44  0EFA               	movlw	-6
 19162  018A46  6CE3               	negf	plusw1,c
 19163  018A48  0EFB               	movlw	-5
 19164  018A4A  1EE3               	comf	plusw1,f,c
 19165  018A4C  B0D8               	btfsc	status,0,c
 19166  018A4E  2AE3               	incf	plusw1,f,c
 19167                           
 19168                           ;stkvar	_sign @ sp[(-4)+2]
 19169  018A50  0EFE               	movlw	-2
 19170  018A52  70E3               	btg	plusw1,0,c
 19171  018A54                     l8385:
 19172                           
 19173                           ;stkvar	_quotient @ sp[(-4)+0]
 19174  018A54  0EFC               	movlw	-4
 19175  018A56  6AE3               	clrf	plusw1,c
 19176  018A58  0EFD               	movlw	-3
 19177  018A5A  6AE3               	clrf	plusw1,c
 19178                           
 19179                           ;stkvar	_divisor @ sp[(-4)+-4]
 19180  018A5C  0EF8               	movlw	-8
 19181  018A5E  006F FF8C  F026    	movff	plusw1,btemp
 19182  018A64  0EF9               	movlw	-7
 19183  018A66  50E3               	movf	plusw1,w,c
 19184  018A68  1026               	iorwf	btemp^0,w,c
 19185  018A6A  B4D8               	btfsc	status,2,c
 19186  018A6C  D066               	goto	u6930
 19187                           
 19188                           ;stkvar	_counter @ sp[(-4)+3]
 19189  018A6E  0EFF               	movlw	-1
 19190  018A70  6AE3               	clrf	plusw1,c
 19191  018A72  D012               	goto	L23
 19192  018A74                     l8391:
 19193                           
 19194                           ;stkvar	_divisor @ sp[(-4)+-4]
 19195  018A74  0EF8               	movlw	-8
 19196  018A76  50E3               	movf	plusw1,w,c
 19197  018A78  90D8               	bcf	status,0,c
 19198  018A7A  34E8               	rlcf	wreg,w,c
 19199  018A7C  6E26               	movwf	btemp^0,c
 19200  018A7E  0EF8               	movlw	-8
 19201  018A80  0060  F09B  FFE3   	movff	btemp,plusw1
 19202  018A86  0EF9               	movlw	-7
 19203  018A88  50E3               	movf	plusw1,w,c
 19204  018A8A  34E8               	rlcf	wreg,w,c
 19205  018A8C  6E26               	movwf	btemp^0,c
 19206  018A8E  0EF9               	movlw	-7
 19207  018A90  0060  F09B  FFE3   	movff	btemp,plusw1
 19208                           
 19209                           ;stkvar	_counter @ sp[(-4)+3]
 19210  018A96  0EFF               	movlw	-1
 19211  018A98                     L23:
 19212  018A98  2AE3               	incf	plusw1,f,c
 19213                           
 19214                           ;stkvar	_divisor @ sp[(-4)+-4]
 19215  018A9A  0EF9               	movlw	-7
 19216  018A9C  AEE3               	btfss	plusw1,7,c
 19217  018A9E  D7EA               	goto	l8391
 19218  018AA0                     u6910:
 19219                           
 19220                           ;stkvar	_quotient @ sp[(-4)+0]
 19221  018AA0  0EFC               	movlw	-4
 19222  018AA2  50E3               	movf	plusw1,w,c
 19223  018AA4  90D8               	bcf	status,0,c
 19224  018AA6  34E8               	rlcf	wreg,w,c
 19225  018AA8  6E26               	movwf	btemp^0,c
 19226  018AAA  0EFC               	movlw	-4
 19227  018AAC  0060  F09B  FFE3   	movff	btemp,plusw1
 19228  018AB2  0EFD               	movlw	-3
 19229  018AB4  50E3               	movf	plusw1,w,c
 19230  018AB6  34E8               	rlcf	wreg,w,c
 19231  018AB8  6E26               	movwf	btemp^0,c
 19232  018ABA  0EFD               	movlw	-3
 19233  018ABC  0060  F09B  FFE3   	movff	btemp,plusw1
 19234                           
 19235                           ;stkvar	_divisor @ sp[(-4)+-4]
 19236  018AC2  0EF8               	movlw	-8
 19237  018AC4  006F FF8C  F030    	movff	plusw1,btemp+10
 19238  018ACA  0EF9               	movlw	-7
 19239  018ACC  006F FF8C  F031    	movff	plusw1,btemp+11
 19240                           
 19241                           ;stkvar	_dividend @ sp[(-4)+-2]
 19242  018AD2  0EFA               	movlw	-6
 19243  018AD4  006F FF8C  F02E    	movff	plusw1,btemp+8
 19244  018ADA  0EFB               	movlw	-5
 19245  018ADC  006F FF8C  F02F    	movff	plusw1,btemp+9
 19246  018AE2  5030               	movf	(btemp+10)^0,w,c
 19247  018AE4  5C2E               	subwf	(btemp+8)^0,w,c
 19248  018AE6  5031               	movf	(btemp+11)^0,w,c
 19249  018AE8  582F               	subwfb	(btemp+9)^0,w,c
 19250  018AEA  A0D8               	btfss	status,0,c
 19251  018AEC  D016               	goto	l8405
 19252                           
 19253                           ;stkvar	_divisor @ sp[(-4)+-4]
 19254                           ;stkvar	_dividend @ sp[(-4)+-2]
 19255  018AEE  0EFA               	movlw	-6
 19256  018AF0  50E3               	movf	plusw1,w,c
 19257  018AF2  6E26               	movwf	btemp^0,c
 19258  018AF4  0EF8               	movlw	-8
 19259  018AF6  50E3               	movf	plusw1,w,c
 19260  018AF8  5E26               	subwf	btemp^0,f,c
 19261  018AFA  0EFA               	movlw	-6
 19262  018AFC  0060  F09B  FFE3   	movff	btemp,plusw1
 19263  018B02  0EFB               	movlw	-5
 19264  018B04  50E3               	movf	plusw1,w,c
 19265  018B06  6E26               	movwf	btemp^0,c
 19266  018B08  0EF9               	movlw	-7
 19267  018B0A  50E3               	movf	plusw1,w,c
 19268  018B0C  5A26               	subwfb	btemp^0,f,c
 19269  018B0E  0EFB               	movlw	-5
 19270  018B10  0060  F09B  FFE3   	movff	btemp,plusw1
 19271                           
 19272                           ;stkvar	_quotient @ sp[(-4)+0]
 19273  018B16  0EFC               	movlw	-4
 19274  018B18  80E3               	bsf	plusw1,0,c
 19275  018B1A                     l8405:
 19276                           
 19277                           ;stkvar	_divisor @ sp[(-4)+-4]
 19278  018B1A  90D8               	bcf	status,0,c
 19279  018B1C  0EF9               	movlw	-7
 19280  018B1E  32E3               	rrcf	plusw1,f,c
 19281  018B20  0EF8               	movlw	-8
 19282  018B22  32E3               	rrcf	plusw1,f,c
 19283                           
 19284                           ;stkvar	_counter @ sp[(-4)+3]
 19285  018B24  0EFF               	movlw	-1
 19286  018B26  50E3               	movf	plusw1,w,c
 19287  018B28  6E26               	movwf	btemp^0,c
 19288  018B2A  0E01               	movlw	1
 19289  018B2C  5E26               	subwf	btemp^0,f,c
 19290  018B2E  0EFF               	movlw	-1
 19291  018B30  0060  F09B  FFE3   	movff	btemp,plusw1
 19292  018B36  A4D8               	btfss	status,2,c
 19293  018B38  D7B3               	goto	u6910
 19294  018B3A                     u6930:
 19295                           
 19296                           ;stkvar	_sign @ sp[(-4)+2]
 19297  018B3A  0EFE               	movlw	-2
 19298  018B3C  50E3               	movf	plusw1,w,c
 19299  018B3E  B4D8               	btfsc	status,2,c
 19300  018B40  D006               	goto	l8413
 19301                           
 19302                           ;stkvar	_quotient @ sp[(-4)+0]
 19303                           ;stkvar	_quotient @ sp[(-4)+0]
 19304  018B42  0EFC               	movlw	-4
 19305  018B44  6CE3               	negf	plusw1,c
 19306  018B46  0EFD               	movlw	-3
 19307  018B48  1EE3               	comf	plusw1,f,c
 19308  018B4A  B0D8               	btfsc	status,0,c
 19309  018B4C  2AE3               	incf	plusw1,f,c
 19310  018B4E                     l8413:
 19311                           
 19312                           ;stkvar	_quotient @ sp[(-4)+0]
 19313  018B4E  0EFC               	movlw	-4
 19314  018B50  006F FF8C  F026    	movff	plusw1,btemp
 19315  018B56  0EFD               	movlw	-3
 19316  018B58  006F FF8C  F027    	movff	plusw1,btemp+1
 19317                           
 19318                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19319  018B5E  0EF8               	movlw	248
 19320  018B60  26E1               	addwf	fsr1l,f,c
 19321  018B62  0EFF               	movlw	255
 19322  018B64  22E2               	addwfc	fsr1h,f,c
 19323  018B66  0012               	return		;funcret
 19324  018B68                     __end_of___awdiv:
 19325                           	opt callstack 0
 19326                           
 19327 ;; *************** function _dtoa *****************
 19328 ;; Defined at:
 19329 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19330 ;; Parameters:    Size  Location     Type
 19331 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19332 ;;		 -> f(6), NULL(0), 
 19333 ;;  d               8  [STACK] long long 
 19334 ;; Auto vars:     Size  Location     Type
 19335 ;;  n               8  [STACK] long long 
 19336 ;;  i               2  [STACK] int 
 19337 ;;  s               2  [STACK] int 
 19338 ;;  w               2  [STACK] int 
 19339 ;;  p               2  [STACK] int 
 19340 ;; Return value:  Size  Location     Type
 19341 ;;                  2  [STACK] int 
 19342 ;; Registers used:
 19343 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 19344 ;; Tracked objects:
 19345 ;;		On entry : 0/0
 19346 ;;		On exit  : 0/0
 19347 ;;		Unchanged: 0/0
 19348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19353 ;;Total ram usage:        0 bytes
 19354 ;; Hardware stack levels used:    1
 19355 ;; Hardware stack levels required when called:   20
 19356 ;; This function calls:
 19357 ;;		___aodiv
 19358 ;;		___aomod
 19359 ;;		_abs
 19360 ;;		_pad
 19361 ;; This function is called by:
 19362 ;;		_vfpfcnvrt
 19363 ;; This function uses a reentrant model
 19364 ;;
 19365                           
 19366                           	psect	text66
 19367  0153D6                     __ptext66:
 19368                           	opt callstack 0
 19369  0153D6                     _dtoa:
 19370                           	opt callstack 0
 19371                           
 19372                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 19373  0153D6  0E12               	movlw	18
 19374  0153D8  26E1               	addwf	fsr1l,f,c
 19375  0153DA  0E00               	movlw	0
 19376  0153DC  22E2               	addwfc	fsr1h,f,c
 19377                           
 19378                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 19379                           ;stkvar	_d @ sp[(-18)+-10]
 19380                           
 19381                           ;incstack = 0
 19382 ;; hardware stack exceeded
 19383  0153DE  0EE4               	movlw	228
 19384  0153E0  24E1               	addwf	fsr1l,w,c
 19385  0153E2  6ED9               	movwf	fsr2l,c
 19386  0153E4  0EFF               	movlw	255
 19387  0153E6  20E2               	addwfc	fsr1h,w,c
 19388  0153E8  6EDA               	movwf	fsr2h,c
 19389                           
 19390                           ;stkvar	_n @ sp[(-18)+2]
 19391  0153EA  0E08               	movlw	8
 19392  0153EC  6E26               	movwf	btemp^0,c
 19393  0153EE  0EF0               	movlw	-16
 19394  0153F0                     us1076999:
 19395  0153F0  006F FF7B FFE3     	movff	postinc2,plusw1
 19396  0153F6  28E8               	incf	wreg,w,c
 19397  0153F8  2E26               	decfsz	btemp^0,f,c
 19398  0153FA  D7FA               	bra	us1076999
 19399                           
 19400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 19401                           ;stkvar	_n @ sp[(-18)+2]
 19402  0153FC  0EF7               	movlw	-9
 19403  0153FE  AEE3               	btfss	plusw1,7,c
 19404  015400  D002               	goto	u10770
 19405  015402  0E01               	movlw	1
 19406  015404  D001               	goto	u10780
 19407  015406                     u10770:
 19408  015406  0E00               	movlw	0
 19409  015408                     u10780:
 19410  015408  6E30               	movwf	(btemp+10)^0,c
 19411  01540A  6A31               	clrf	(btemp+11)^0,c
 19412                           
 19413                           ;stkvar	_s @ sp[(-18)+12]
 19414  01540C  0EFA               	movlw	-6
 19415  01540E  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 19416  015414  0EFB               	movlw	-5
 19417  015416  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 19418                           
 19419                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 19420                           ;stkvar	_s @ sp[(-18)+12]
 19421  01541C  0EFA               	movlw	-6
 19422  01541E  006F FF8C  F026    	movff	plusw1,btemp
 19423  015424  0EFB               	movlw	-5
 19424  015426  50E3               	movf	plusw1,w,c
 19425  015428  1026               	iorwf	btemp^0,w,c
 19426  01542A  B4D8               	btfsc	status,2,c
 19427  01542C  D025               	goto	u10800
 19428                           
 19429                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 19430                           ;stkvar	_n @ sp[(-18)+2]
 19431                           ;stkvar	_n @ sp[(-18)+2]
 19432  01542E  0EF0               	movlw	-16
 19433  015430  6CE3               	negf	plusw1,c
 19434  015432  0EF1               	movlw	-15
 19435  015434  1EE3               	comf	plusw1,f,c
 19436  015436  0EF2               	movlw	-14
 19437  015438  1EE3               	comf	plusw1,f,c
 19438  01543A  0EF3               	movlw	-13
 19439  01543C  1EE3               	comf	plusw1,f,c
 19440  01543E  0EF4               	movlw	-12
 19441  015440  1EE3               	comf	plusw1,f,c
 19442  015442  0EF5               	movlw	-11
 19443  015444  1EE3               	comf	plusw1,f,c
 19444  015446  0EF6               	movlw	-10
 19445  015448  1EE3               	comf	plusw1,f,c
 19446  01544A  0EF7               	movlw	-9
 19447  01544C  1EE3               	comf	plusw1,f,c
 19448  01544E  E314               	bnc	u10800
 19449  015450  0EF1               	movlw	-15
 19450  015452  2AE3               	incf	plusw1,f,c
 19451  015454  E311               	bnc	u10800
 19452  015456  0EF2               	movlw	-14
 19453  015458  2AE3               	incf	plusw1,f,c
 19454  01545A  E30E               	bnc	u10800
 19455  01545C  0EF3               	movlw	-13
 19456  01545E  2AE3               	incf	plusw1,f,c
 19457  015460  E30B               	bnc	u10800
 19458  015462  0EF4               	movlw	-12
 19459  015464  2AE3               	incf	plusw1,f,c
 19460  015466  E308               	bnc	u10800
 19461  015468  0EF5               	movlw	-11
 19462  01546A  2AE3               	incf	plusw1,f,c
 19463  01546C  E305               	bnc	u10800
 19464  01546E  0EF6               	movlw	-10
 19465  015470  2AE3               	incf	plusw1,f,c
 19466  015472  E302               	bnc	u10800
 19467  015474  0EF7               	movlw	-9
 19468  015476  2AE3               	incf	plusw1,f,c
 19469  015478                     u10800:
 19470                           
 19471                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 19472  015478  AE0D               	btfss	(_prec+1)^0,7,c
 19473                           
 19474                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 19475  01547A  920E               	bcf	_flags^0,1,c
 19476                           
 19477                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 19478  01547C  BE0D               	btfsc	(_prec+1)^0,7,c
 19479  01547E  D005               	goto	u10820
 19480  015480  500D               	movf	(_prec+1)^0,w,c
 19481  015482  E110               	bnz	l11695
 19482  015484  040C               	decf	_prec^0,w,c
 19483  015486  B0D8               	btfsc	status,0,c
 19484  015488  D00D               	goto	l11695
 19485  01548A                     u10820:
 19486  01548A  0E01               	movlw	1
 19487  01548C  6E30               	movwf	(btemp+10)^0,c
 19488  01548E  0E00               	movlw	0
 19489  015490  6E31               	movwf	(btemp+11)^0,c
 19490                           
 19491                           ;stkvar	_p @ sp[(-18)+16]
 19492  015492  0EFE               	movlw	-2
 19493  015494  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 19494  01549A  0EFF               	movlw	-1
 19495  01549C  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 19496  0154A2  D008               	goto	l2159
 19497  0154A4                     l11695:
 19498                           
 19499                           ;stkvar	_p @ sp[(-18)+16]
 19500  0154A4  0EFE               	movlw	-2
 19501  0154A6  0060  F033  FFE3   	movff	_prec,plusw1
 19502  0154AC  0EFF               	movlw	-1
 19503  0154AE  0060  F037  FFE3   	movff	_prec+1,plusw1
 19504  0154B4                     l2159:
 19505                           
 19506                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 19507                           ;stkvar	_w @ sp[(-18)+14]
 19508  0154B4  0EFC               	movlw	-4
 19509  0154B6  0060  F02B  FFE3   	movff	_width,plusw1
 19510  0154BC  0EFD               	movlw	-3
 19511  0154BE  0060  F02F  FFE3   	movff	_width+1,plusw1
 19512                           
 19513                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 19514                           ;stkvar	_s @ sp[(-18)+12]
 19515  0154C4  0EFA               	movlw	-6
 19516  0154C6  006F FF8C  F026    	movff	plusw1,btemp
 19517  0154CC  0EFB               	movlw	-5
 19518  0154CE  50E3               	movf	plusw1,w,c
 19519  0154D0  1026               	iorwf	btemp^0,w,c
 19520  0154D2  A4D8               	btfss	status,2,c
 19521  0154D4  D002               	goto	u10840
 19522  0154D6  A40E               	btfss	_flags^0,2,c
 19523  0154D8  D00A               	goto	l11703
 19524  0154DA                     u10840:
 19525                           
 19526                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 19527                           ;stkvar	_w @ sp[(-18)+14]
 19528  0154DA  50E1               	movf	fsr1l,w,c
 19529  0154DC  0FFC               	addlw	-4
 19530  0154DE  6ED9               	movwf	fsr2l,c
 19531  0154E0  50E2               	movf	fsr1h,w,c
 19532  0154E2  6EDA               	movwf	fsr2h,c
 19533  0154E4  0EFF               	movlw	255
 19534  0154E6  22DA               	addwfc	fsr2h,f,c
 19535  0154E8  06DE               	decf	postinc2,f,c
 19536  0154EA  0E00               	movlw	0
 19537  0154EC  5ADD               	subwfb	postdec2,f,c
 19538  0154EE                     l11703:
 19539                           
 19540                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 19541  0154EE  0E4F               	movlw	79
 19542  0154F0  6E30               	movwf	(btemp+10)^0,c
 19543  0154F2  0E00               	movlw	0
 19544  0154F4  6E31               	movwf	(btemp+11)^0,c
 19545                           
 19546                           ;stkvar	_i @ sp[(-18)+10]
 19547  0154F6  0EF8               	movlw	-8
 19548  0154F8  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 19549  0154FE  0EF9               	movlw	-7
 19550  015500  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 19551                           
 19552                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 19553  015506  0103               	movlb	3	; () banked
 19554  015508  6BFD               	clrf	(_dbuf+79)& (0+255),b
 19555                           
 19556                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19557  01550A  D109               	goto	l11717
 19558  01550C                     l11707:
 19559                           
 19560                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 19561                           ;stkvar	_i @ sp[(-18)+10]
 19562  01550C  50E1               	movf	fsr1l,w,c
 19563  01550E  0FF8               	addlw	-8
 19564  015510  6ED9               	movwf	fsr2l,c
 19565  015512  50E2               	movf	fsr1h,w,c
 19566  015514  6EDA               	movwf	fsr2h,c
 19567  015516  0EFF               	movlw	255
 19568  015518  22DA               	addwfc	fsr2h,f,c
 19569  01551A  06DE               	decf	postinc2,f,c
 19570  01551C  0E00               	movlw	0
 19571  01551E  5ADD               	subwfb	postdec2,f,c
 19572                           
 19573                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 19574  015520  0E0A               	movlw	10
 19575  015522  6EE6               	movwf	postinc1,c
 19576  015524  0E00               	movlw	0
 19577  015526  6EE6               	movwf	postinc1,c
 19578  015528  0E00               	movlw	0
 19579  01552A  6EE6               	movwf	postinc1,c
 19580  01552C  0E00               	movlw	0
 19581  01552E  6EE6               	movwf	postinc1,c
 19582  015530  0E00               	movlw	0
 19583  015532  6EE6               	movwf	postinc1,c
 19584  015534  0E00               	movlw	0
 19585  015536  6EE6               	movwf	postinc1,c
 19586  015538  0E00               	movlw	0
 19587  01553A  6EE6               	movwf	postinc1,c
 19588  01553C  0E00               	movlw	0
 19589  01553E  6EE6               	movwf	postinc1,c
 19590                           
 19591                           ;stkvar	_n @ sp[(-26)+2]
 19592  015540  50E1               	movf	fsr1l,w,c
 19593  015542  0FE8               	addlw	-24
 19594  015544  6ED9               	movwf	fsr2l,c
 19595  015546  50E2               	movf	fsr1h,w,c
 19596  015548  6EDA               	movwf	fsr2h,c
 19597  01554A  0EFF               	movlw	255
 19598  01554C  22DA               	addwfc	fsr2h,f,c
 19599  01554E  006F FF7B FFE6     	movff	postinc2,postinc1
 19600  015554  006F FF7B FFE6     	movff	postinc2,postinc1
 19601  01555A  006F FF7B FFE6     	movff	postinc2,postinc1
 19602  015560  006F FF7B FFE6     	movff	postinc2,postinc1
 19603  015566  006F FF7B FFE6     	movff	postinc2,postinc1
 19604  01556C  006F FF7B FFE6     	movff	postinc2,postinc1
 19605  015572  006F FF7B FFE6     	movff	postinc2,postinc1
 19606  015578  006F FF7B FFE6     	movff	postinc2,postinc1
 19607  01557E  ECDE  F0B9         	call	___aomod	;wreg free
 19608  015582  52E5               	movf	postdec1,f,c
 19609  015584  006F FF9C  F03D    	movff	indf1,btemp+23
 19610  01558A  52E5               	movf	postdec1,f,c
 19611  01558C  006F FF9C  F03C    	movff	indf1,btemp+22
 19612  015592  52E5               	movf	postdec1,f,c
 19613  015594  006F FF9C  F03B    	movff	indf1,btemp+21
 19614  01559A  52E5               	movf	postdec1,f,c
 19615  01559C  006F FF9C  F03A    	movff	indf1,btemp+20
 19616  0155A2  52E5               	movf	postdec1,f,c
 19617  0155A4  006F FF9C  F039    	movff	indf1,btemp+19
 19618  0155AA  52E5               	movf	postdec1,f,c
 19619  0155AC  006F FF9C  F038    	movff	indf1,btemp+18
 19620  0155B2  52E5               	movf	postdec1,f,c
 19621  0155B4  006F FF9C  F037    	movff	indf1,btemp+17
 19622  0155BA  52E5               	movf	postdec1,f,c
 19623  0155BC  006F FF9C  F036    	movff	indf1,btemp+16
 19624  0155C2  0EF8               	movlw	248
 19625  0155C4  26E1               	addwf	fsr1l,f,c
 19626  0155C6  0EFF               	movlw	255
 19627  0155C8  22E2               	addwfc	fsr1h,f,c
 19628  0155CA  0060  F0D8  F030   	movff	btemp+16,btemp+10
 19629  0155D0  0060  F0DC  F031   	movff	btemp+17,btemp+11
 19630  0155D6  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 19631  0155DC  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 19632  0155E2  EC20  F0D6         	call	_abs	;wreg free
 19633  0155E6  0E30               	movlw	48
 19634  0155E8  2626               	addwf	btemp^0,f,c
 19635                           
 19636                           ;stkvar	_i @ sp[(-18)+10]
 19637  0155EA  0EF8               	movlw	-8
 19638  0155EC  006F FF8C  F030    	movff	plusw1,btemp+10
 19639  0155F2  0EF9               	movlw	-7
 19640  0155F4  006F FF8C  F031    	movff	plusw1,btemp+11
 19641  0155FA  0EAE               	movlw	low _dbuf
 19642  0155FC  2430               	addwf	(btemp+10)^0,w,c
 19643  0155FE  6ED9               	movwf	fsr2l,c
 19644  015600  0E03               	movlw	high _dbuf
 19645  015602  2031               	addwfc	(btemp+11)^0,w,c
 19646  015604  6EDA               	movwf	fsr2h,c
 19647  015606  0060  F09B  FFDF   	movff	btemp,indf2
 19648                           
 19649                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 19650                           ;stkvar	_p @ sp[(-18)+16]
 19651  01560C  50E1               	movf	fsr1l,w,c
 19652  01560E  0FFE               	addlw	-2
 19653  015610  6ED9               	movwf	fsr2l,c
 19654  015612  50E2               	movf	fsr1h,w,c
 19655  015614  6EDA               	movwf	fsr2h,c
 19656  015616  0EFF               	movlw	255
 19657  015618  22DA               	addwfc	fsr2h,f,c
 19658  01561A  06DE               	decf	postinc2,f,c
 19659  01561C  0E00               	movlw	0
 19660  01561E  5ADD               	subwfb	postdec2,f,c
 19661                           
 19662                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 19663                           ;stkvar	_w @ sp[(-18)+14]
 19664  015620  50E1               	movf	fsr1l,w,c
 19665  015622  0FFC               	addlw	-4
 19666  015624  6ED9               	movwf	fsr2l,c
 19667  015626  50E2               	movf	fsr1h,w,c
 19668  015628  6EDA               	movwf	fsr2h,c
 19669  01562A  0EFF               	movlw	255
 19670  01562C  22DA               	addwfc	fsr2h,f,c
 19671  01562E  06DE               	decf	postinc2,f,c
 19672  015630  0E00               	movlw	0
 19673  015632  5ADD               	subwfb	postdec2,f,c
 19674                           
 19675                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 19676  015634  0E0A               	movlw	10
 19677  015636  6EE6               	movwf	postinc1,c
 19678  015638  0E00               	movlw	0
 19679  01563A  6EE6               	movwf	postinc1,c
 19680  01563C  0E00               	movlw	0
 19681  01563E  6EE6               	movwf	postinc1,c
 19682  015640  0E00               	movlw	0
 19683  015642  6EE6               	movwf	postinc1,c
 19684  015644  0E00               	movlw	0
 19685  015646  6EE6               	movwf	postinc1,c
 19686  015648  0E00               	movlw	0
 19687  01564A  6EE6               	movwf	postinc1,c
 19688  01564C  0E00               	movlw	0
 19689  01564E  6EE6               	movwf	postinc1,c
 19690  015650  0E00               	movlw	0
 19691  015652  6EE6               	movwf	postinc1,c
 19692                           
 19693                           ;stkvar	_n @ sp[(-26)+2]
 19694  015654  50E1               	movf	fsr1l,w,c
 19695  015656  0FE8               	addlw	-24
 19696  015658  6ED9               	movwf	fsr2l,c
 19697  01565A  50E2               	movf	fsr1h,w,c
 19698  01565C  6EDA               	movwf	fsr2h,c
 19699  01565E  0EFF               	movlw	255
 19700  015660  22DA               	addwfc	fsr2h,f,c
 19701  015662  006F FF7B FFE6     	movff	postinc2,postinc1
 19702  015668  006F FF7B FFE6     	movff	postinc2,postinc1
 19703  01566E  006F FF7B FFE6     	movff	postinc2,postinc1
 19704  015674  006F FF7B FFE6     	movff	postinc2,postinc1
 19705  01567A  006F FF7B FFE6     	movff	postinc2,postinc1
 19706  015680  006F FF7B FFE6     	movff	postinc2,postinc1
 19707  015686  006F FF7B FFE6     	movff	postinc2,postinc1
 19708  01568C  006F FF7B FFE6     	movff	postinc2,postinc1
 19709  015692  EC64  F0B7         	call	___aodiv	;wreg free
 19710  015696  52E5               	movf	postdec1,f,c
 19711  015698  006F FF9C  F03D    	movff	indf1,btemp+23
 19712  01569E  52E5               	movf	postdec1,f,c
 19713  0156A0  006F FF9C  F03C    	movff	indf1,btemp+22
 19714  0156A6  52E5               	movf	postdec1,f,c
 19715  0156A8  006F FF9C  F03B    	movff	indf1,btemp+21
 19716  0156AE  52E5               	movf	postdec1,f,c
 19717  0156B0  006F FF9C  F03A    	movff	indf1,btemp+20
 19718  0156B6  52E5               	movf	postdec1,f,c
 19719  0156B8  006F FF9C  F039    	movff	indf1,btemp+19
 19720  0156BE  52E5               	movf	postdec1,f,c
 19721  0156C0  006F FF9C  F038    	movff	indf1,btemp+18
 19722  0156C6  52E5               	movf	postdec1,f,c
 19723  0156C8  006F FF9C  F037    	movff	indf1,btemp+17
 19724  0156CE  52E5               	movf	postdec1,f,c
 19725  0156D0  006F FF9C  F036    	movff	indf1,btemp+16
 19726  0156D6  0EF8               	movlw	248
 19727  0156D8  26E1               	addwf	fsr1l,f,c
 19728  0156DA  0EFF               	movlw	255
 19729  0156DC  22E2               	addwfc	fsr1h,f,c
 19730                           
 19731                           ;stkvar	_n @ sp[(-18)+2]
 19732  0156DE  0EF0               	movlw	-16
 19733  0156E0  0060  F0DB  FFE3   	movff	btemp+16,plusw1
 19734  0156E6  0EF1               	movlw	-15
 19735  0156E8  0060  F0DF  FFE3   	movff	btemp+17,plusw1
 19736  0156EE  0EF2               	movlw	-14
 19737  0156F0  0060  F0E3  FFE3   	movff	btemp+18,plusw1
 19738  0156F6  0EF3               	movlw	-13
 19739  0156F8  0060  F0E7  FFE3   	movff	btemp+19,plusw1
 19740  0156FE  0EF4               	movlw	-12
 19741  015700  0060  F0EB  FFE3   	movff	btemp+20,plusw1
 19742  015706  0EF5               	movlw	-11
 19743  015708  0060  F0EF  FFE3   	movff	btemp+21,plusw1
 19744  01570E  0EF6               	movlw	-10
 19745  015710  0060  F0F3  FFE3   	movff	btemp+22,plusw1
 19746  015716  0EF7               	movlw	-9
 19747  015718  0060  F0F7  FFE3   	movff	btemp+23,plusw1
 19748  01571E                     l11717:
 19749                           
 19750                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19751                           ;stkvar	_i @ sp[(-18)+10]
 19752  01571E  0EF9               	movlw	-7
 19753  015720  BEE3               	btfsc	plusw1,7,c
 19754  015722  D036               	goto	u10890
 19755  015724  0EF9               	movlw	-7
 19756  015726  50E3               	movf	plusw1,w,c
 19757  015728  E104               	bnz	u10850
 19758  01572A  0EF8               	movlw	-8
 19759  01572C  04E3               	decf	plusw1,w,c
 19760  01572E  A0D8               	btfss	status,0,c
 19761  015730  D02F               	goto	u10890
 19762  015732                     u10850:
 19763                           
 19764                           ;stkvar	_n @ sp[(-18)+2]
 19765  015732  0EF0               	movlw	-16
 19766  015734  50E3               	movf	plusw1,w,c
 19767  015736  E115               	bnz	u10861
 19768  015738  0EF1               	movlw	-15
 19769  01573A  50E3               	movf	plusw1,w,c
 19770  01573C  E112               	bnz	u10861
 19771  01573E  0EF2               	movlw	-14
 19772  015740  50E3               	movf	plusw1,w,c
 19773  015742  E10F               	bnz	u10861
 19774  015744  0EF3               	movlw	-13
 19775  015746  50E3               	movf	plusw1,w,c
 19776  015748  E10C               	bnz	u10861
 19777  01574A  0EF4               	movlw	-12
 19778  01574C  50E3               	movf	plusw1,w,c
 19779  01574E  E109               	bnz	u10861
 19780  015750  0EF5               	movlw	-11
 19781  015752  50E3               	movf	plusw1,w,c
 19782  015754  E106               	bnz	u10861
 19783  015756  0EF6               	movlw	-10
 19784  015758  50E3               	movf	plusw1,w,c
 19785  01575A  E103               	bnz	u10861
 19786  01575C  0EF7               	movlw	-9
 19787  01575E  50E3               	movf	plusw1,w,c
 19788  015760  A4D8               	btfss	status,2,c
 19789  015762                     u10861:
 19790  015762  D6D4               	goto	l11707
 19791                           
 19792                           ;stkvar	_p @ sp[(-18)+16]
 19793  015764  0EFF               	movlw	-1
 19794  015766  BEE3               	btfsc	plusw1,7,c
 19795  015768  D007               	goto	u10870
 19796  01576A  0EFF               	movlw	-1
 19797  01576C  50E3               	movf	plusw1,w,c
 19798  01576E  E103               	bnz	u10871
 19799  015770  0EFE               	movlw	-2
 19800  015772  04E3               	decf	plusw1,w,c
 19801  015774  B0D8               	btfsc	status,0,c
 19802  015776                     u10871:
 19803  015776  D6CA               	goto	l11707
 19804  015778                     u10870:
 19805                           
 19806                           ;stkvar	_w @ sp[(-18)+14]
 19807  015778  0EFD               	movlw	-3
 19808  01577A  BEE3               	btfsc	plusw1,7,c
 19809  01577C  D009               	goto	u10890
 19810  01577E  0EFD               	movlw	-3
 19811  015780  50E3               	movf	plusw1,w,c
 19812  015782  E104               	bnz	u10880
 19813  015784  0EFC               	movlw	-4
 19814  015786  04E3               	decf	plusw1,w,c
 19815  015788  A0D8               	btfss	status,0,c
 19816  01578A  D002               	goto	u10890
 19817  01578C                     u10880:
 19818  01578C  B20E               	btfsc	_flags^0,1,c
 19819  01578E  D6BE               	goto	l11707
 19820  015790                     u10890:
 19821                           
 19822                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 19823                           ;stkvar	_s @ sp[(-18)+12]
 19824  015790  0EFA               	movlw	-6
 19825  015792  006F FF8C  F026    	movff	plusw1,btemp
 19826  015798  0EFB               	movlw	-5
 19827  01579A  50E3               	movf	plusw1,w,c
 19828  01579C  1026               	iorwf	btemp^0,w,c
 19829  01579E  A4D8               	btfss	status,2,c
 19830  0157A0  D002               	goto	u10910
 19831  0157A2  A40E               	btfss	_flags^0,2,c
 19832  0157A4  D033               	goto	l11741
 19833  0157A6                     u10910:
 19834                           
 19835                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 19836                           ;stkvar	_i @ sp[(-18)+10]
 19837  0157A6  50E1               	movf	fsr1l,w,c
 19838  0157A8  0FF8               	addlw	-8
 19839  0157AA  6ED9               	movwf	fsr2l,c
 19840  0157AC  50E2               	movf	fsr1h,w,c
 19841  0157AE  6EDA               	movwf	fsr2h,c
 19842  0157B0  0EFF               	movlw	255
 19843  0157B2  22DA               	addwfc	fsr2h,f,c
 19844  0157B4  06DE               	decf	postinc2,f,c
 19845  0157B6  0E00               	movlw	0
 19846  0157B8  5ADD               	subwfb	postdec2,f,c
 19847                           
 19848                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 19849                           ;stkvar	_s @ sp[(-18)+12]
 19850  0157BA  0EFA               	movlw	-6
 19851  0157BC  006F FF8C  F026    	movff	plusw1,btemp
 19852  0157C2  0EFB               	movlw	-5
 19853  0157C4  50E3               	movf	plusw1,w,c
 19854  0157C6  1026               	iorwf	btemp^0,w,c
 19855  0157C8  A4D8               	btfss	status,2,c
 19856  0157CA  D002               	goto	l11737
 19857  0157CC  0E2B               	movlw	43
 19858  0157CE  D001               	goto	L24
 19859  0157D0                     l11737:
 19860  0157D0  0E2D               	movlw	45
 19861  0157D2                     L24:
 19862  0157D2  6E30               	movwf	(btemp+10)^0,c
 19863  0157D4  0E00               	movlw	0
 19864  0157D6  6E31               	movwf	(btemp+11)^0,c
 19865                           
 19866                           ;stkvar	_dtoa$5398 @ sp[(-18)+0]
 19867  0157D8  0EEE               	movlw	-18
 19868  0157DA  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 19869  0157E0  0EEF               	movlw	-17
 19870  0157E2  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 19871                           
 19872                           ;stkvar	_dtoa$5398 @ sp[(-18)+0]
 19873                           ;stkvar	_i @ sp[(-18)+10]
 19874  0157E8  0EF8               	movlw	-8
 19875  0157EA  006F FF8C  F030    	movff	plusw1,btemp+10
 19876  0157F0  0EF9               	movlw	-7
 19877  0157F2  006F FF8C  F031    	movff	plusw1,btemp+11
 19878  0157F8  0EAE               	movlw	low _dbuf
 19879  0157FA  2430               	addwf	(btemp+10)^0,w,c
 19880  0157FC  6ED9               	movwf	fsr2l,c
 19881  0157FE  0E03               	movlw	high _dbuf
 19882  015800  2031               	addwfc	(btemp+11)^0,w,c
 19883  015802  6EDA               	movwf	fsr2h,c
 19884  015804  0EEE               	movlw	-18
 19885  015806  006F FF8F FFDF     	movff	plusw1,indf2
 19886  01580C                     l11741:
 19887                           
 19888                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 19889                           ;stkvar	_w @ sp[(-18)+14]
 19890  01580C  0EFC               	movlw	-4
 19891  01580E  006F FF8F FFE6     	movff	plusw1,postinc1
 19892  015814  006F FF8F FFE6     	movff	plusw1,postinc1
 19893                           
 19894                           ;stkvar	_i @ sp[(-20)+10]
 19895  01581A  0EAE               	movlw	low _dbuf
 19896  01581C  6E30               	movwf	(btemp+10)^0,c
 19897  01581E  0E03               	movlw	high _dbuf
 19898  015820  6E31               	movwf	(btemp+11)^0,c
 19899  015822  0EF6               	movlw	-10
 19900  015824  50E3               	movf	plusw1,w,c
 19901  015826  2630               	addwf	(btemp+10)^0,f,c
 19902  015828  0EF7               	movlw	-9
 19903  01582A  50E3               	movf	plusw1,w,c
 19904  01582C  2231               	addwfc	(btemp+11)^0,f,c
 19905  01582E  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 19906  015834  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 19907                           
 19908                           ;stkvar	_fp @ sp[(-22)+-2]
 19909  01583A  0EE8               	movlw	-24
 19910  01583C  006F FF8F FFE6     	movff	plusw1,postinc1
 19911  015842  006F FF8F FFE6     	movff	plusw1,postinc1
 19912  015848  ECA9  F0C8         	call	_pad	;wreg free
 19913                           
 19914                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 19915  01584C  0EE4               	movlw	228
 19916  01584E  26E1               	addwf	fsr1l,f,c
 19917  015850  0EFF               	movlw	255
 19918  015852  22E2               	addwfc	fsr1h,f,c
 19919  015854  0012               	return		;funcret
 19920  015856                     __end_of_dtoa:
 19921                           	opt callstack 0
 19922                           
 19923 ;; *************** function _abs *****************
 19924 ;; Defined at:
 19925 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 19926 ;; Parameters:    Size  Location     Type
 19927 ;;  a               2  [STACK] int 
 19928 ;; Auto vars:     Size  Location     Type
 19929 ;;		None
 19930 ;; Return value:  Size  Location     Type
 19931 ;;                  2  [STACK] int 
 19932 ;; Registers used:
 19933 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 19934 ;; Tracked objects:
 19935 ;;		On entry : 0/3
 19936 ;;		On exit  : 0/0
 19937 ;;		Unchanged: 0/0
 19938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19943 ;;Total ram usage:        0 bytes
 19944 ;; Hardware stack levels used:    1
 19945 ;; Hardware stack levels required when called:   15
 19946 ;; This function calls:
 19947 ;;		Nothing
 19948 ;; This function is called by:
 19949 ;;		_dtoa
 19950 ;; This function uses a reentrant model
 19951 ;;
 19952                           
 19953                           	psect	text67
 19954  01AC40                     __ptext67:
 19955                           	opt callstack 0
 19956  01AC40                     _abs:
 19957                           	opt callstack 0
 19958                           
 19959                           ;stkvar	_a @ sp[(0)+-2]
 19960                           
 19961                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19962                           ;incstack = 0
 19963 ;; hardware stack exceeded
 19964  01AC40  0EFF               	movlw	-1
 19965  01AC42  BEE3               	btfsc	plusw1,7,c
 19966  01AC44  D007               	goto	u5890
 19967  01AC46  0EFF               	movlw	-1
 19968  01AC48  50E3               	movf	plusw1,w,c
 19969  01AC4A  E112               	bnz	l7867
 19970  01AC4C  0EFE               	movlw	-2
 19971  01AC4E  04E3               	decf	plusw1,w,c
 19972  01AC50  B0D8               	btfsc	status,0,c
 19973  01AC52  D00E               	goto	l7867
 19974  01AC54                     u5890:
 19975                           
 19976                           ;stkvar	_a @ sp[(0)+-2]
 19977  01AC54  0EFE               	movlw	-2
 19978  01AC56  006F FF8C  F026    	movff	plusw1,btemp
 19979  01AC5C  1E26               	comf	btemp^0,f,c
 19980  01AC5E  0EFF               	movlw	-1
 19981  01AC60  006F FF8C  F027    	movff	plusw1,btemp+1
 19982  01AC66  1E27               	comf	(btemp+1)^0,f,c
 19983  01AC68  2A26               	incf	btemp^0,f,c
 19984  01AC6A  B4D8               	btfsc	status,2,c
 19985  01AC6C  2A27               	incf	(btemp+1)^0,f,c
 19986  01AC6E  D008               	goto	l3085
 19987  01AC70                     l7867:
 19988                           
 19989                           ;stkvar	_a @ sp[(0)+-2]
 19990  01AC70  0EFE               	movlw	-2
 19991  01AC72  006F FF8C  F026    	movff	plusw1,btemp
 19992  01AC78  0EFF               	movlw	-1
 19993  01AC7A  006F FF8C  F027    	movff	plusw1,btemp+1
 19994  01AC80                     l3085:
 19995                           
 19996                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 19997  01AC80  52E5               	movf	postdec1,f,c
 19998  01AC82  52E5               	movf	postdec1,f,c
 19999  01AC84  0012               	return		;funcret
 20000  01AC86                     __end_of_abs:
 20001                           	opt callstack 0
 20002                           
 20003 ;; *************** function ___aomod *****************
 20004 ;; Defined at:
 20005 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 20006 ;; Parameters:    Size  Location     Type
 20007 ;;  dividend        8  [STACK] long long 
 20008 ;;  divisor         8  [STACK] long long 
 20009 ;; Auto vars:     Size  Location     Type
 20010 ;;  sign            1  [STACK] unsigned char 
 20011 ;;  counter         1  [STACK] unsigned char 
 20012 ;; Return value:  Size  Location     Type
 20013 ;;                  8  [STACK] long long 
 20014 ;; Registers used:
 20015 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20016 ;; Tracked objects:
 20017 ;;		On entry : 0/3
 20018 ;;		On exit  : 0/0
 20019 ;;		Unchanged: 0/0
 20020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20025 ;;Total ram usage:        0 bytes
 20026 ;; Hardware stack levels used:    1
 20027 ;; Hardware stack levels required when called:   15
 20028 ;; This function calls:
 20029 ;;		Nothing
 20030 ;; This function is called by:
 20031 ;;		_dtoa
 20032 ;; This function uses a reentrant model
 20033 ;;
 20034                           
 20035                           	psect	text68
 20036  0173BC                     __ptext68:
 20037                           	opt callstack 0
 20038  0173BC                     ___aomod:
 20039                           	opt callstack 0
 20040                           
 20041                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 20042  0173BC  52E6               	movf	postinc1,f,c
 20043  0173BE  52E6               	movf	postinc1,f,c
 20044                           
 20045                           ;stkvar	_sign @ sp[(-2)+0]
 20046                           
 20047                           ;incstack = 0
 20048 ;; hardware stack exceeded
 20049  0173C0  0EFE               	movlw	-2
 20050  0173C2  6AE3               	clrf	plusw1,c
 20051                           
 20052                           ;stkvar	_dividend @ sp[(-2)+-8]
 20053  0173C4  0EFD               	movlw	-3
 20054  0173C6  AEE3               	btfss	plusw1,7,c
 20055  0173C8  D028               	goto	l8025
 20056                           
 20057                           ;stkvar	_dividend @ sp[(-2)+-8]
 20058                           ;stkvar	_dividend @ sp[(-2)+-8]
 20059  0173CA  0EF6               	movlw	-10
 20060  0173CC  6CE3               	negf	plusw1,c
 20061  0173CE  0EF7               	movlw	-9
 20062  0173D0  1EE3               	comf	plusw1,f,c
 20063  0173D2  0EF8               	movlw	-8
 20064  0173D4  1EE3               	comf	plusw1,f,c
 20065  0173D6  0EF9               	movlw	-7
 20066  0173D8  1EE3               	comf	plusw1,f,c
 20067  0173DA  0EFA               	movlw	-6
 20068  0173DC  1EE3               	comf	plusw1,f,c
 20069  0173DE  0EFB               	movlw	-5
 20070  0173E0  1EE3               	comf	plusw1,f,c
 20071  0173E2  0EFC               	movlw	-4
 20072  0173E4  1EE3               	comf	plusw1,f,c
 20073  0173E6  0EFD               	movlw	-3
 20074  0173E8  1EE3               	comf	plusw1,f,c
 20075  0173EA  E314               	bnc	u6320
 20076  0173EC  0EF7               	movlw	-9
 20077  0173EE  2AE3               	incf	plusw1,f,c
 20078  0173F0  E311               	bnc	u6320
 20079  0173F2  0EF8               	movlw	-8
 20080  0173F4  2AE3               	incf	plusw1,f,c
 20081  0173F6  E30E               	bnc	u6320
 20082  0173F8  0EF9               	movlw	-7
 20083  0173FA  2AE3               	incf	plusw1,f,c
 20084  0173FC  E30B               	bnc	u6320
 20085  0173FE  0EFA               	movlw	-6
 20086  017400  2AE3               	incf	plusw1,f,c
 20087  017402  E308               	bnc	u6320
 20088  017404  0EFB               	movlw	-5
 20089  017406  2AE3               	incf	plusw1,f,c
 20090  017408  E305               	bnc	u6320
 20091  01740A  0EFC               	movlw	-4
 20092  01740C  2AE3               	incf	plusw1,f,c
 20093  01740E  E302               	bnc	u6320
 20094  017410  0EFD               	movlw	-3
 20095  017412  2AE3               	incf	plusw1,f,c
 20096  017414                     u6320:
 20097                           
 20098                           ;stkvar	_sign @ sp[(-2)+0]
 20099  017414  0EFE               	movlw	-2
 20100  017416  6AE3               	clrf	plusw1,c
 20101  017418  2AE3               	incf	plusw1,f,c
 20102  01741A                     l8025:
 20103                           
 20104                           ;stkvar	_divisor @ sp[(-2)+-16]
 20105  01741A  0EF5               	movlw	-11
 20106  01741C  AEE3               	btfss	plusw1,7,c
 20107  01741E  D025               	goto	u6340
 20108                           
 20109                           ;stkvar	_divisor @ sp[(-2)+-16]
 20110                           ;stkvar	_divisor @ sp[(-2)+-16]
 20111  017420  0EEE               	movlw	-18
 20112  017422  6CE3               	negf	plusw1,c
 20113  017424  0EEF               	movlw	-17
 20114  017426  1EE3               	comf	plusw1,f,c
 20115  017428  0EF0               	movlw	-16
 20116  01742A  1EE3               	comf	plusw1,f,c
 20117  01742C  0EF1               	movlw	-15
 20118  01742E  1EE3               	comf	plusw1,f,c
 20119  017430  0EF2               	movlw	-14
 20120  017432  1EE3               	comf	plusw1,f,c
 20121  017434  0EF3               	movlw	-13
 20122  017436  1EE3               	comf	plusw1,f,c
 20123  017438  0EF4               	movlw	-12
 20124  01743A  1EE3               	comf	plusw1,f,c
 20125  01743C  0EF5               	movlw	-11
 20126  01743E  1EE3               	comf	plusw1,f,c
 20127  017440  E314               	bnc	u6340
 20128  017442  0EEF               	movlw	-17
 20129  017444  2AE3               	incf	plusw1,f,c
 20130  017446  E311               	bnc	u6340
 20131  017448  0EF0               	movlw	-16
 20132  01744A  2AE3               	incf	plusw1,f,c
 20133  01744C  E30E               	bnc	u6340
 20134  01744E  0EF1               	movlw	-15
 20135  017450  2AE3               	incf	plusw1,f,c
 20136  017452  E30B               	bnc	u6340
 20137  017454  0EF2               	movlw	-14
 20138  017456  2AE3               	incf	plusw1,f,c
 20139  017458  E308               	bnc	u6340
 20140  01745A  0EF3               	movlw	-13
 20141  01745C  2AE3               	incf	plusw1,f,c
 20142  01745E  E305               	bnc	u6340
 20143  017460  0EF4               	movlw	-12
 20144  017462  2AE3               	incf	plusw1,f,c
 20145  017464  E302               	bnc	u6340
 20146  017466  0EF5               	movlw	-11
 20147  017468  2AE3               	incf	plusw1,f,c
 20148  01746A                     u6340:
 20149                           
 20150                           ;stkvar	_divisor @ sp[(-2)+-16]
 20151  01746A  0EEE               	movlw	-18
 20152  01746C  50E3               	movf	plusw1,w,c
 20153  01746E  E116               	bnz	u6350
 20154  017470  0EEF               	movlw	-17
 20155  017472  50E3               	movf	plusw1,w,c
 20156  017474  E113               	bnz	u6350
 20157  017476  0EF0               	movlw	-16
 20158  017478  50E3               	movf	plusw1,w,c
 20159  01747A  E110               	bnz	u6350
 20160  01747C  0EF1               	movlw	-15
 20161  01747E  50E3               	movf	plusw1,w,c
 20162  017480  E10D               	bnz	u6350
 20163  017482  0EF2               	movlw	-14
 20164  017484  50E3               	movf	plusw1,w,c
 20165  017486  E10A               	bnz	u6350
 20166  017488  0EF3               	movlw	-13
 20167  01748A  50E3               	movf	plusw1,w,c
 20168  01748C  E107               	bnz	u6350
 20169  01748E  0EF4               	movlw	-12
 20170  017490  50E3               	movf	plusw1,w,c
 20171  017492  E104               	bnz	u6350
 20172  017494  0EF5               	movlw	-11
 20173  017496  50E3               	movf	plusw1,w,c
 20174  017498  B4D8               	btfsc	status,2,c
 20175  01749A  D075               	goto	u6380
 20176  01749C                     u6350:
 20177                           
 20178                           ;stkvar	_counter @ sp[(-2)+1]
 20179  01749C  0EFF               	movlw	-1
 20180  01749E  6AE3               	clrf	plusw1,c
 20181  0174A0  D012               	goto	L25
 20182  0174A2                     l8033:
 20183                           
 20184                           ;stkvar	_divisor @ sp[(-2)+-16]
 20185  0174A2  90D8               	bcf	status,0,c
 20186  0174A4  0EEE               	movlw	-18
 20187  0174A6  36E3               	rlcf	plusw1,f,c
 20188  0174A8  0EEF               	movlw	-17
 20189  0174AA  36E3               	rlcf	plusw1,f,c
 20190  0174AC  0EF0               	movlw	-16
 20191  0174AE  36E3               	rlcf	plusw1,f,c
 20192  0174B0  0EF1               	movlw	-15
 20193  0174B2  36E3               	rlcf	plusw1,f,c
 20194  0174B4  0EF2               	movlw	-14
 20195  0174B6  36E3               	rlcf	plusw1,f,c
 20196  0174B8  0EF3               	movlw	-13
 20197  0174BA  36E3               	rlcf	plusw1,f,c
 20198  0174BC  0EF4               	movlw	-12
 20199  0174BE  36E3               	rlcf	plusw1,f,c
 20200  0174C0  0EF5               	movlw	-11
 20201  0174C2  36E3               	rlcf	plusw1,f,c
 20202                           
 20203                           ;stkvar	_counter @ sp[(-2)+1]
 20204  0174C4  0EFF               	movlw	-1
 20205  0174C6                     L25:
 20206  0174C6  2AE3               	incf	plusw1,f,c
 20207                           
 20208                           ;stkvar	_divisor @ sp[(-2)+-16]
 20209  0174C8  0EF5               	movlw	-11
 20210  0174CA  AEE3               	btfss	plusw1,7,c
 20211  0174CC  D7EA               	goto	l8033
 20212  0174CE                     u6360:
 20213                           
 20214                           ;stkvar	_divisor @ sp[(-2)+-16]
 20215                           ;stkvar	_dividend @ sp[(-2)+-8]
 20216  0174CE  50E1               	movf	fsr1l,w,c
 20217  0174D0  0FF6               	addlw	-10
 20218  0174D2  6ED9               	movwf	fsr2l,c
 20219  0174D4  50E2               	movf	fsr1h,w,c
 20220  0174D6  6EDA               	movwf	fsr2h,c
 20221  0174D8  0EFF               	movlw	255
 20222  0174DA  22DA               	addwfc	fsr2h,f,c
 20223  0174DC  0EEE               	movlw	-18
 20224  0174DE  50E3               	movf	plusw1,w,c
 20225  0174E0  5CDE               	subwf	postinc2,w,c
 20226  0174E2  0EEF               	movlw	-17
 20227  0174E4  50E3               	movf	plusw1,w,c
 20228  0174E6  58DE               	subwfb	postinc2,w,c
 20229  0174E8  0EF0               	movlw	-16
 20230  0174EA  50E3               	movf	plusw1,w,c
 20231  0174EC  58DE               	subwfb	postinc2,w,c
 20232  0174EE  0EF1               	movlw	-15
 20233  0174F0  50E3               	movf	plusw1,w,c
 20234  0174F2  58DE               	subwfb	postinc2,w,c
 20235  0174F4  0EF2               	movlw	-14
 20236  0174F6  50E3               	movf	plusw1,w,c
 20237  0174F8  58DE               	subwfb	postinc2,w,c
 20238  0174FA  0EF3               	movlw	-13
 20239  0174FC  50E3               	movf	plusw1,w,c
 20240  0174FE  58DE               	subwfb	postinc2,w,c
 20241  017500  0EF4               	movlw	-12
 20242  017502  50E3               	movf	plusw1,w,c
 20243  017504  58DE               	subwfb	postinc2,w,c
 20244  017506  0EF5               	movlw	-11
 20245  017508  50E3               	movf	plusw1,w,c
 20246  01750A  58DE               	subwfb	postinc2,w,c
 20247  01750C  A0D8               	btfss	status,0,c
 20248  01750E  D01F               	goto	l8041
 20249                           
 20250                           ;stkvar	_divisor @ sp[(-2)+-16]
 20251                           ;stkvar	_dividend @ sp[(-2)+-8]
 20252  017510  50E1               	movf	fsr1l,w,c
 20253  017512  0FF6               	addlw	-10
 20254  017514  6ED9               	movwf	fsr2l,c
 20255  017516  50E2               	movf	fsr1h,w,c
 20256  017518  6EDA               	movwf	fsr2h,c
 20257  01751A  0EFF               	movlw	255
 20258  01751C  22DA               	addwfc	fsr2h,f,c
 20259  01751E  0EEE               	movlw	-18
 20260  017520  50E3               	movf	plusw1,w,c
 20261  017522  5EDE               	subwf	postinc2,f,c
 20262  017524  0EEF               	movlw	-17
 20263  017526  50E3               	movf	plusw1,w,c
 20264  017528  5ADE               	subwfb	postinc2,f,c
 20265  01752A  0EF0               	movlw	-16
 20266  01752C  50E3               	movf	plusw1,w,c
 20267  01752E  5ADE               	subwfb	postinc2,f,c
 20268  017530  0EF1               	movlw	-15
 20269  017532  50E3               	movf	plusw1,w,c
 20270  017534  5ADE               	subwfb	postinc2,f,c
 20271  017536  0EF2               	movlw	-14
 20272  017538  50E3               	movf	plusw1,w,c
 20273  01753A  5ADE               	subwfb	postinc2,f,c
 20274  01753C  0EF3               	movlw	-13
 20275  01753E  50E3               	movf	plusw1,w,c
 20276  017540  5ADE               	subwfb	postinc2,f,c
 20277  017542  0EF4               	movlw	-12
 20278  017544  50E3               	movf	plusw1,w,c
 20279  017546  5ADE               	subwfb	postinc2,f,c
 20280  017548  0EF5               	movlw	-11
 20281  01754A  50E3               	movf	plusw1,w,c
 20282  01754C  5ADE               	subwfb	postinc2,f,c
 20283  01754E                     l8041:
 20284                           
 20285                           ;stkvar	_divisor @ sp[(-2)+-16]
 20286  01754E  90D8               	bcf	status,0,c
 20287  017550  0EF5               	movlw	-11
 20288  017552  32E3               	rrcf	plusw1,f,c
 20289  017554  0EF4               	movlw	-12
 20290  017556  32E3               	rrcf	plusw1,f,c
 20291  017558  0EF3               	movlw	-13
 20292  01755A  32E3               	rrcf	plusw1,f,c
 20293  01755C  0EF2               	movlw	-14
 20294  01755E  32E3               	rrcf	plusw1,f,c
 20295  017560  0EF1               	movlw	-15
 20296  017562  32E3               	rrcf	plusw1,f,c
 20297  017564  0EF0               	movlw	-16
 20298  017566  32E3               	rrcf	plusw1,f,c
 20299  017568  0EEF               	movlw	-17
 20300  01756A  32E3               	rrcf	plusw1,f,c
 20301  01756C  0EEE               	movlw	-18
 20302  01756E  32E3               	rrcf	plusw1,f,c
 20303                           
 20304                           ;stkvar	_counter @ sp[(-2)+1]
 20305  017570  0EFF               	movlw	-1
 20306  017572  50E3               	movf	plusw1,w,c
 20307  017574  6E26               	movwf	btemp^0,c
 20308  017576  0E01               	movlw	1
 20309  017578  5E26               	subwf	btemp^0,f,c
 20310  01757A  0EFF               	movlw	-1
 20311  01757C  0060  F09B  FFE3   	movff	btemp,plusw1
 20312  017582  A4D8               	btfss	status,2,c
 20313  017584  D7A4               	goto	u6360
 20314  017586                     u6380:
 20315                           
 20316                           ;stkvar	_sign @ sp[(-2)+0]
 20317  017586  0EFE               	movlw	-2
 20318  017588  50E3               	movf	plusw1,w,c
 20319  01758A  B4D8               	btfsc	status,2,c
 20320  01758C  D025               	goto	u6400
 20321                           
 20322                           ;stkvar	_dividend @ sp[(-2)+-8]
 20323                           ;stkvar	_dividend @ sp[(-2)+-8]
 20324  01758E  0EF6               	movlw	-10
 20325  017590  6CE3               	negf	plusw1,c
 20326  017592  0EF7               	movlw	-9
 20327  017594  1EE3               	comf	plusw1,f,c
 20328  017596  0EF8               	movlw	-8
 20329  017598  1EE3               	comf	plusw1,f,c
 20330  01759A  0EF9               	movlw	-7
 20331  01759C  1EE3               	comf	plusw1,f,c
 20332  01759E  0EFA               	movlw	-6
 20333  0175A0  1EE3               	comf	plusw1,f,c
 20334  0175A2  0EFB               	movlw	-5
 20335  0175A4  1EE3               	comf	plusw1,f,c
 20336  0175A6  0EFC               	movlw	-4
 20337  0175A8  1EE3               	comf	plusw1,f,c
 20338  0175AA  0EFD               	movlw	-3
 20339  0175AC  1EE3               	comf	plusw1,f,c
 20340  0175AE  E314               	bnc	u6400
 20341  0175B0  0EF7               	movlw	-9
 20342  0175B2  2AE3               	incf	plusw1,f,c
 20343  0175B4  E311               	bnc	u6400
 20344  0175B6  0EF8               	movlw	-8
 20345  0175B8  2AE3               	incf	plusw1,f,c
 20346  0175BA  E30E               	bnc	u6400
 20347  0175BC  0EF9               	movlw	-7
 20348  0175BE  2AE3               	incf	plusw1,f,c
 20349  0175C0  E30B               	bnc	u6400
 20350  0175C2  0EFA               	movlw	-6
 20351  0175C4  2AE3               	incf	plusw1,f,c
 20352  0175C6  E308               	bnc	u6400
 20353  0175C8  0EFB               	movlw	-5
 20354  0175CA  2AE3               	incf	plusw1,f,c
 20355  0175CC  E305               	bnc	u6400
 20356  0175CE  0EFC               	movlw	-4
 20357  0175D0  2AE3               	incf	plusw1,f,c
 20358  0175D2  E302               	bnc	u6400
 20359  0175D4  0EFD               	movlw	-3
 20360  0175D6  2AE3               	incf	plusw1,f,c
 20361  0175D8                     u6400:
 20362                           
 20363                           ;stkvar	_dividend @ sp[(-2)+-8]
 20364  0175D8  0EF6               	movlw	246
 20365  0175DA  24E1               	addwf	fsr1l,w,c
 20366  0175DC  6ED9               	movwf	fsr2l,c
 20367  0175DE  0EFF               	movlw	255
 20368  0175E0  20E2               	addwfc	fsr1h,w,c
 20369  0175E2  6EDA               	movwf	fsr2h,c
 20370                           
 20371                           ;stkvar	?___aomod @ sp[(-2)+-8]
 20372  0175E4  0E08               	movlw	8
 20373  0175E6  6E26               	movwf	btemp^0,c
 20374  0175E8  0EF6               	movlw	-10
 20375  0175EA                     us641999:
 20376  0175EA  006F FF7B FFE3     	movff	postinc2,plusw1
 20377  0175F0  28E8               	incf	wreg,w,c
 20378  0175F2  2E26               	decfsz	btemp^0,f,c
 20379  0175F4  D7FA               	bra	us641999
 20380                           
 20381                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 20382  0175F6  52E5               	movf	postdec1,f,c
 20383  0175F8  52E5               	movf	postdec1,f,c
 20384  0175FA  0012               	return		;funcret
 20385  0175FC                     __end_of___aomod:
 20386                           	opt callstack 0
 20387                           
 20388 ;; *************** function ___aodiv *****************
 20389 ;; Defined at:
 20390 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 20391 ;; Parameters:    Size  Location     Type
 20392 ;;  dividend        8  [STACK] long long 
 20393 ;;  divisor         8  [STACK] long long 
 20394 ;; Auto vars:     Size  Location     Type
 20395 ;;  quotient        8  [STACK] long long 
 20396 ;;  sign            1  [STACK] unsigned char 
 20397 ;;  counter         1  [STACK] unsigned char 
 20398 ;; Return value:  Size  Location     Type
 20399 ;;                  8  [STACK] long long 
 20400 ;; Registers used:
 20401 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20402 ;; Tracked objects:
 20403 ;;		On entry : 0/3
 20404 ;;		On exit  : 0/0
 20405 ;;		Unchanged: 0/0
 20406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20411 ;;Total ram usage:        0 bytes
 20412 ;; Hardware stack levels used:    1
 20413 ;; Hardware stack levels required when called:   15
 20414 ;; This function calls:
 20415 ;;		Nothing
 20416 ;; This function is called by:
 20417 ;;		_dtoa
 20418 ;; This function uses a reentrant model
 20419 ;;
 20420                           
 20421                           	psect	text69
 20422  016EC8                     __ptext69:
 20423                           	opt callstack 0
 20424  016EC8                     ___aodiv:
 20425                           	opt callstack 0
 20426                           
 20427                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 20428  016EC8  0E0A               	movlw	10
 20429  016ECA  26E1               	addwf	fsr1l,f,c
 20430  016ECC  0E00               	movlw	0
 20431  016ECE  22E2               	addwfc	fsr1h,f,c
 20432                           
 20433                           ;stkvar	_sign @ sp[(-10)+8]
 20434                           
 20435                           ;incstack = 0
 20436 ;; hardware stack exceeded
 20437  016ED0  0EFE               	movlw	-2
 20438  016ED2  6AE3               	clrf	plusw1,c
 20439                           
 20440                           ;stkvar	_divisor @ sp[(-10)+-16]
 20441  016ED4  0EED               	movlw	-19
 20442  016ED6  AEE3               	btfss	plusw1,7,c
 20443  016ED8  D028               	goto	l7981
 20444                           
 20445                           ;stkvar	_divisor @ sp[(-10)+-16]
 20446                           ;stkvar	_divisor @ sp[(-10)+-16]
 20447  016EDA  0EE6               	movlw	-26
 20448  016EDC  6CE3               	negf	plusw1,c
 20449  016EDE  0EE7               	movlw	-25
 20450  016EE0  1EE3               	comf	plusw1,f,c
 20451  016EE2  0EE8               	movlw	-24
 20452  016EE4  1EE3               	comf	plusw1,f,c
 20453  016EE6  0EE9               	movlw	-23
 20454  016EE8  1EE3               	comf	plusw1,f,c
 20455  016EEA  0EEA               	movlw	-22
 20456  016EEC  1EE3               	comf	plusw1,f,c
 20457  016EEE  0EEB               	movlw	-21
 20458  016EF0  1EE3               	comf	plusw1,f,c
 20459  016EF2  0EEC               	movlw	-20
 20460  016EF4  1EE3               	comf	plusw1,f,c
 20461  016EF6  0EED               	movlw	-19
 20462  016EF8  1EE3               	comf	plusw1,f,c
 20463  016EFA  E314               	bnc	u6200
 20464  016EFC  0EE7               	movlw	-25
 20465  016EFE  2AE3               	incf	plusw1,f,c
 20466  016F00  E311               	bnc	u6200
 20467  016F02  0EE8               	movlw	-24
 20468  016F04  2AE3               	incf	plusw1,f,c
 20469  016F06  E30E               	bnc	u6200
 20470  016F08  0EE9               	movlw	-23
 20471  016F0A  2AE3               	incf	plusw1,f,c
 20472  016F0C  E30B               	bnc	u6200
 20473  016F0E  0EEA               	movlw	-22
 20474  016F10  2AE3               	incf	plusw1,f,c
 20475  016F12  E308               	bnc	u6200
 20476  016F14  0EEB               	movlw	-21
 20477  016F16  2AE3               	incf	plusw1,f,c
 20478  016F18  E305               	bnc	u6200
 20479  016F1A  0EEC               	movlw	-20
 20480  016F1C  2AE3               	incf	plusw1,f,c
 20481  016F1E  E302               	bnc	u6200
 20482  016F20  0EED               	movlw	-19
 20483  016F22  2AE3               	incf	plusw1,f,c
 20484  016F24                     u6200:
 20485                           
 20486                           ;stkvar	_sign @ sp[(-10)+8]
 20487  016F24  0EFE               	movlw	-2
 20488  016F26  6AE3               	clrf	plusw1,c
 20489  016F28  2AE3               	incf	plusw1,f,c
 20490  016F2A                     l7981:
 20491                           
 20492                           ;stkvar	_dividend @ sp[(-10)+-8]
 20493  016F2A  0EF5               	movlw	-11
 20494  016F2C  AEE3               	btfss	plusw1,7,c
 20495  016F2E  D027               	goto	l7987
 20496                           
 20497                           ;stkvar	_dividend @ sp[(-10)+-8]
 20498                           ;stkvar	_dividend @ sp[(-10)+-8]
 20499  016F30  0EEE               	movlw	-18
 20500  016F32  6CE3               	negf	plusw1,c
 20501  016F34  0EEF               	movlw	-17
 20502  016F36  1EE3               	comf	plusw1,f,c
 20503  016F38  0EF0               	movlw	-16
 20504  016F3A  1EE3               	comf	plusw1,f,c
 20505  016F3C  0EF1               	movlw	-15
 20506  016F3E  1EE3               	comf	plusw1,f,c
 20507  016F40  0EF2               	movlw	-14
 20508  016F42  1EE3               	comf	plusw1,f,c
 20509  016F44  0EF3               	movlw	-13
 20510  016F46  1EE3               	comf	plusw1,f,c
 20511  016F48  0EF4               	movlw	-12
 20512  016F4A  1EE3               	comf	plusw1,f,c
 20513  016F4C  0EF5               	movlw	-11
 20514  016F4E  1EE3               	comf	plusw1,f,c
 20515  016F50  E314               	bnc	u6220
 20516  016F52  0EEF               	movlw	-17
 20517  016F54  2AE3               	incf	plusw1,f,c
 20518  016F56  E311               	bnc	u6220
 20519  016F58  0EF0               	movlw	-16
 20520  016F5A  2AE3               	incf	plusw1,f,c
 20521  016F5C  E30E               	bnc	u6220
 20522  016F5E  0EF1               	movlw	-15
 20523  016F60  2AE3               	incf	plusw1,f,c
 20524  016F62  E30B               	bnc	u6220
 20525  016F64  0EF2               	movlw	-14
 20526  016F66  2AE3               	incf	plusw1,f,c
 20527  016F68  E308               	bnc	u6220
 20528  016F6A  0EF3               	movlw	-13
 20529  016F6C  2AE3               	incf	plusw1,f,c
 20530  016F6E  E305               	bnc	u6220
 20531  016F70  0EF4               	movlw	-12
 20532  016F72  2AE3               	incf	plusw1,f,c
 20533  016F74  E302               	bnc	u6220
 20534  016F76  0EF5               	movlw	-11
 20535  016F78  2AE3               	incf	plusw1,f,c
 20536  016F7A                     u6220:
 20537                           
 20538                           ;stkvar	_sign @ sp[(-10)+8]
 20539  016F7A  0EFE               	movlw	-2
 20540  016F7C  70E3               	btg	plusw1,0,c
 20541  016F7E                     l7987:
 20542                           
 20543                           ;stkvar	_quotient @ sp[(-10)+0]
 20544  016F7E  0E07               	movlw	7
 20545  016F80  6E26               	movwf	btemp^0,c
 20546  016F82  0EF6               	movlw	-10
 20547  016F84                     u6231:
 20548  016F84  6AE3               	clrf	plusw1,c
 20549  016F86  2AE8               	incf	wreg,f,c
 20550  016F88  0626               	decf	btemp^0,f,c
 20551  016F8A  E2FC               	bc	u6231
 20552                           
 20553                           ;stkvar	_divisor @ sp[(-10)+-16]
 20554  016F8C  0EE6               	movlw	-26
 20555  016F8E  50E3               	movf	plusw1,w,c
 20556  016F90  E116               	bnz	u6240
 20557  016F92  0EE7               	movlw	-25
 20558  016F94  50E3               	movf	plusw1,w,c
 20559  016F96  E113               	bnz	u6240
 20560  016F98  0EE8               	movlw	-24
 20561  016F9A  50E3               	movf	plusw1,w,c
 20562  016F9C  E110               	bnz	u6240
 20563  016F9E  0EE9               	movlw	-23
 20564  016FA0  50E3               	movf	plusw1,w,c
 20565  016FA2  E10D               	bnz	u6240
 20566  016FA4  0EEA               	movlw	-22
 20567  016FA6  50E3               	movf	plusw1,w,c
 20568  016FA8  E10A               	bnz	u6240
 20569  016FAA  0EEB               	movlw	-21
 20570  016FAC  50E3               	movf	plusw1,w,c
 20571  016FAE  E107               	bnz	u6240
 20572  016FB0  0EEC               	movlw	-20
 20573  016FB2  50E3               	movf	plusw1,w,c
 20574  016FB4  E104               	bnz	u6240
 20575  016FB6  0EED               	movlw	-19
 20576  016FB8  50E3               	movf	plusw1,w,c
 20577  016FBA  B4D8               	btfsc	status,2,c
 20578  016FBC  D088               	goto	u6270
 20579  016FBE                     u6240:
 20580                           
 20581                           ;stkvar	_counter @ sp[(-10)+9]
 20582  016FBE  0EFF               	movlw	-1
 20583  016FC0  6AE3               	clrf	plusw1,c
 20584  016FC2  D012               	goto	L26
 20585  016FC4                     l7993:
 20586                           
 20587                           ;stkvar	_divisor @ sp[(-10)+-16]
 20588  016FC4  90D8               	bcf	status,0,c
 20589  016FC6  0EE6               	movlw	-26
 20590  016FC8  36E3               	rlcf	plusw1,f,c
 20591  016FCA  0EE7               	movlw	-25
 20592  016FCC  36E3               	rlcf	plusw1,f,c
 20593  016FCE  0EE8               	movlw	-24
 20594  016FD0  36E3               	rlcf	plusw1,f,c
 20595  016FD2  0EE9               	movlw	-23
 20596  016FD4  36E3               	rlcf	plusw1,f,c
 20597  016FD6  0EEA               	movlw	-22
 20598  016FD8  36E3               	rlcf	plusw1,f,c
 20599  016FDA  0EEB               	movlw	-21
 20600  016FDC  36E3               	rlcf	plusw1,f,c
 20601  016FDE  0EEC               	movlw	-20
 20602  016FE0  36E3               	rlcf	plusw1,f,c
 20603  016FE2  0EED               	movlw	-19
 20604  016FE4  36E3               	rlcf	plusw1,f,c
 20605                           
 20606                           ;stkvar	_counter @ sp[(-10)+9]
 20607  016FE6  0EFF               	movlw	-1
 20608  016FE8                     L26:
 20609  016FE8  2AE3               	incf	plusw1,f,c
 20610                           
 20611                           ;stkvar	_divisor @ sp[(-10)+-16]
 20612  016FEA  0EED               	movlw	-19
 20613  016FEC  AEE3               	btfss	plusw1,7,c
 20614  016FEE  D7EA               	goto	l7993
 20615  016FF0                     u6250:
 20616                           
 20617                           ;stkvar	_quotient @ sp[(-10)+0]
 20618  016FF0  90D8               	bcf	status,0,c
 20619  016FF2  0EF6               	movlw	-10
 20620  016FF4  36E3               	rlcf	plusw1,f,c
 20621  016FF6  0EF7               	movlw	-9
 20622  016FF8  36E3               	rlcf	plusw1,f,c
 20623  016FFA  0EF8               	movlw	-8
 20624  016FFC  36E3               	rlcf	plusw1,f,c
 20625  016FFE  0EF9               	movlw	-7
 20626  017000  36E3               	rlcf	plusw1,f,c
 20627  017002  0EFA               	movlw	-6
 20628  017004  36E3               	rlcf	plusw1,f,c
 20629  017006  0EFB               	movlw	-5
 20630  017008  36E3               	rlcf	plusw1,f,c
 20631  01700A  0EFC               	movlw	-4
 20632  01700C  36E3               	rlcf	plusw1,f,c
 20633  01700E  0EFD               	movlw	-3
 20634  017010  36E3               	rlcf	plusw1,f,c
 20635                           
 20636                           ;stkvar	_divisor @ sp[(-10)+-16]
 20637                           ;stkvar	_dividend @ sp[(-10)+-8]
 20638  017012  50E1               	movf	fsr1l,w,c
 20639  017014  0FEE               	addlw	-18
 20640  017016  6ED9               	movwf	fsr2l,c
 20641  017018  50E2               	movf	fsr1h,w,c
 20642  01701A  6EDA               	movwf	fsr2h,c
 20643  01701C  0EFF               	movlw	255
 20644  01701E  22DA               	addwfc	fsr2h,f,c
 20645  017020  0EE6               	movlw	-26
 20646  017022  50E3               	movf	plusw1,w,c
 20647  017024  5CDE               	subwf	postinc2,w,c
 20648  017026  0EE7               	movlw	-25
 20649  017028  50E3               	movf	plusw1,w,c
 20650  01702A  58DE               	subwfb	postinc2,w,c
 20651  01702C  0EE8               	movlw	-24
 20652  01702E  50E3               	movf	plusw1,w,c
 20653  017030  58DE               	subwfb	postinc2,w,c
 20654  017032  0EE9               	movlw	-23
 20655  017034  50E3               	movf	plusw1,w,c
 20656  017036  58DE               	subwfb	postinc2,w,c
 20657  017038  0EEA               	movlw	-22
 20658  01703A  50E3               	movf	plusw1,w,c
 20659  01703C  58DE               	subwfb	postinc2,w,c
 20660  01703E  0EEB               	movlw	-21
 20661  017040  50E3               	movf	plusw1,w,c
 20662  017042  58DE               	subwfb	postinc2,w,c
 20663  017044  0EEC               	movlw	-20
 20664  017046  50E3               	movf	plusw1,w,c
 20665  017048  58DE               	subwfb	postinc2,w,c
 20666  01704A  0EED               	movlw	-19
 20667  01704C  50E3               	movf	plusw1,w,c
 20668  01704E  58DE               	subwfb	postinc2,w,c
 20669  017050  A0D8               	btfss	status,0,c
 20670  017052  D021               	goto	l8005
 20671                           
 20672                           ;stkvar	_divisor @ sp[(-10)+-16]
 20673                           ;stkvar	_dividend @ sp[(-10)+-8]
 20674  017054  50E1               	movf	fsr1l,w,c
 20675  017056  0FEE               	addlw	-18
 20676  017058  6ED9               	movwf	fsr2l,c
 20677  01705A  50E2               	movf	fsr1h,w,c
 20678  01705C  6EDA               	movwf	fsr2h,c
 20679  01705E  0EFF               	movlw	255
 20680  017060  22DA               	addwfc	fsr2h,f,c
 20681  017062  0EE6               	movlw	-26
 20682  017064  50E3               	movf	plusw1,w,c
 20683  017066  5EDE               	subwf	postinc2,f,c
 20684  017068  0EE7               	movlw	-25
 20685  01706A  50E3               	movf	plusw1,w,c
 20686  01706C  5ADE               	subwfb	postinc2,f,c
 20687  01706E  0EE8               	movlw	-24
 20688  017070  50E3               	movf	plusw1,w,c
 20689  017072  5ADE               	subwfb	postinc2,f,c
 20690  017074  0EE9               	movlw	-23
 20691  017076  50E3               	movf	plusw1,w,c
 20692  017078  5ADE               	subwfb	postinc2,f,c
 20693  01707A  0EEA               	movlw	-22
 20694  01707C  50E3               	movf	plusw1,w,c
 20695  01707E  5ADE               	subwfb	postinc2,f,c
 20696  017080  0EEB               	movlw	-21
 20697  017082  50E3               	movf	plusw1,w,c
 20698  017084  5ADE               	subwfb	postinc2,f,c
 20699  017086  0EEC               	movlw	-20
 20700  017088  50E3               	movf	plusw1,w,c
 20701  01708A  5ADE               	subwfb	postinc2,f,c
 20702  01708C  0EED               	movlw	-19
 20703  01708E  50E3               	movf	plusw1,w,c
 20704  017090  5ADE               	subwfb	postinc2,f,c
 20705                           
 20706                           ;stkvar	_quotient @ sp[(-10)+0]
 20707  017092  0EF6               	movlw	-10
 20708  017094  80E3               	bsf	plusw1,0,c
 20709  017096                     l8005:
 20710                           
 20711                           ;stkvar	_divisor @ sp[(-10)+-16]
 20712  017096  90D8               	bcf	status,0,c
 20713  017098  0EED               	movlw	-19
 20714  01709A  32E3               	rrcf	plusw1,f,c
 20715  01709C  0EEC               	movlw	-20
 20716  01709E  32E3               	rrcf	plusw1,f,c
 20717  0170A0  0EEB               	movlw	-21
 20718  0170A2  32E3               	rrcf	plusw1,f,c
 20719  0170A4  0EEA               	movlw	-22
 20720  0170A6  32E3               	rrcf	plusw1,f,c
 20721  0170A8  0EE9               	movlw	-23
 20722  0170AA  32E3               	rrcf	plusw1,f,c
 20723  0170AC  0EE8               	movlw	-24
 20724  0170AE  32E3               	rrcf	plusw1,f,c
 20725  0170B0  0EE7               	movlw	-25
 20726  0170B2  32E3               	rrcf	plusw1,f,c
 20727  0170B4  0EE6               	movlw	-26
 20728  0170B6  32E3               	rrcf	plusw1,f,c
 20729                           
 20730                           ;stkvar	_counter @ sp[(-10)+9]
 20731  0170B8  0EFF               	movlw	-1
 20732  0170BA  50E3               	movf	plusw1,w,c
 20733  0170BC  6E26               	movwf	btemp^0,c
 20734  0170BE  0E01               	movlw	1
 20735  0170C0  5E26               	subwf	btemp^0,f,c
 20736  0170C2  0EFF               	movlw	-1
 20737  0170C4  0060  F09B  FFE3   	movff	btemp,plusw1
 20738  0170CA  A4D8               	btfss	status,2,c
 20739  0170CC  D791               	goto	u6250
 20740  0170CE                     u6270:
 20741                           
 20742                           ;stkvar	_sign @ sp[(-10)+8]
 20743  0170CE  0EFE               	movlw	-2
 20744  0170D0  50E3               	movf	plusw1,w,c
 20745  0170D2  B4D8               	btfsc	status,2,c
 20746  0170D4  D025               	goto	u6290
 20747                           
 20748                           ;stkvar	_quotient @ sp[(-10)+0]
 20749                           ;stkvar	_quotient @ sp[(-10)+0]
 20750  0170D6  0EF6               	movlw	-10
 20751  0170D8  6CE3               	negf	plusw1,c
 20752  0170DA  0EF7               	movlw	-9
 20753  0170DC  1EE3               	comf	plusw1,f,c
 20754  0170DE  0EF8               	movlw	-8
 20755  0170E0  1EE3               	comf	plusw1,f,c
 20756  0170E2  0EF9               	movlw	-7
 20757  0170E4  1EE3               	comf	plusw1,f,c
 20758  0170E6  0EFA               	movlw	-6
 20759  0170E8  1EE3               	comf	plusw1,f,c
 20760  0170EA  0EFB               	movlw	-5
 20761  0170EC  1EE3               	comf	plusw1,f,c
 20762  0170EE  0EFC               	movlw	-4
 20763  0170F0  1EE3               	comf	plusw1,f,c
 20764  0170F2  0EFD               	movlw	-3
 20765  0170F4  1EE3               	comf	plusw1,f,c
 20766  0170F6  E314               	bnc	u6290
 20767  0170F8  0EF7               	movlw	-9
 20768  0170FA  2AE3               	incf	plusw1,f,c
 20769  0170FC  E311               	bnc	u6290
 20770  0170FE  0EF8               	movlw	-8
 20771  017100  2AE3               	incf	plusw1,f,c
 20772  017102  E30E               	bnc	u6290
 20773  017104  0EF9               	movlw	-7
 20774  017106  2AE3               	incf	plusw1,f,c
 20775  017108  E30B               	bnc	u6290
 20776  01710A  0EFA               	movlw	-6
 20777  01710C  2AE3               	incf	plusw1,f,c
 20778  01710E  E308               	bnc	u6290
 20779  017110  0EFB               	movlw	-5
 20780  017112  2AE3               	incf	plusw1,f,c
 20781  017114  E305               	bnc	u6290
 20782  017116  0EFC               	movlw	-4
 20783  017118  2AE3               	incf	plusw1,f,c
 20784  01711A  E302               	bnc	u6290
 20785  01711C  0EFD               	movlw	-3
 20786  01711E  2AE3               	incf	plusw1,f,c
 20787  017120                     u6290:
 20788                           
 20789                           ;stkvar	_quotient @ sp[(-10)+0]
 20790  017120  0EF6               	movlw	246
 20791  017122  24E1               	addwf	fsr1l,w,c
 20792  017124  6ED9               	movwf	fsr2l,c
 20793  017126  0EFF               	movlw	255
 20794  017128  20E2               	addwfc	fsr1h,w,c
 20795  01712A  6EDA               	movwf	fsr2h,c
 20796                           
 20797                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 20798  01712C  0E08               	movlw	8
 20799  01712E  6E26               	movwf	btemp^0,c
 20800  017130  0EEE               	movlw	-18
 20801  017132                     us630999:
 20802  017132  006F FF7B FFE3     	movff	postinc2,plusw1
 20803  017138  28E8               	incf	wreg,w,c
 20804  01713A  2E26               	decfsz	btemp^0,f,c
 20805  01713C  D7FA               	bra	us630999
 20806                           
 20807                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 20808  01713E  0EF6               	movlw	246
 20809  017140  26E1               	addwf	fsr1l,f,c
 20810  017142  0EFF               	movlw	255
 20811  017144  22E2               	addwfc	fsr1h,f,c
 20812  017146  0012               	return		;funcret
 20813  017148                     __end_of___aodiv:
 20814                           	opt callstack 0
 20815                           
 20816 ;; *************** function _ctoa *****************
 20817 ;; Defined at:
 20818 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20819 ;; Parameters:    Size  Location     Type
 20820 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20821 ;;		 -> f(6), NULL(0), 
 20822 ;;  c               1  [STACK] unsigned char 
 20823 ;; Auto vars:     Size  Location     Type
 20824 ;;  w               2  [STACK] int 
 20825 ;;  l               2    0        int 
 20826 ;; Return value:  Size  Location     Type
 20827 ;;                  2  [STACK] int 
 20828 ;; Registers used:
 20829 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 20830 ;; Tracked objects:
 20831 ;;		On entry : 0/0
 20832 ;;		On exit  : 0/0
 20833 ;;		Unchanged: 0/0
 20834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20839 ;;Total ram usage:        0 bytes
 20840 ;; Hardware stack levels used:    1
 20841 ;; Hardware stack levels required when called:   20
 20842 ;; This function calls:
 20843 ;;		_pad
 20844 ;; This function is called by:
 20845 ;;		_vfpfcnvrt
 20846 ;; This function uses a reentrant model
 20847 ;;
 20848                           
 20849                           	psect	text70
 20850  01A47C                     __ptext70:
 20851                           	opt callstack 0
 20852  01A47C                     _ctoa:
 20853                           	opt callstack 0
 20854                           
 20855                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20856  01A47C  52E6               	movf	postinc1,f,c
 20857  01A47E  52E6               	movf	postinc1,f,c
 20858                           
 20859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 20860                           
 20861                           ;incstack = 0
 20862 ;; hardware stack exceeded
 20863  01A480  500A               	movf	_width^0,w,c
 20864  01A482  100B               	iorwf	(_width+1)^0,w,c
 20865  01A484  A4D8               	btfss	status,2,c
 20866  01A486  D009               	goto	l11669
 20867                           
 20868                           ;stkvar	_w @ sp[(-2)+0]
 20869  01A488  0EFE               	movlw	-2
 20870  01A48A  0060  F02B  FFE3   	movff	_width,plusw1
 20871  01A490  0EFF               	movlw	-1
 20872  01A492  0060  F02F  FFE3   	movff	_width+1,plusw1
 20873  01A498  D016               	goto	l11671
 20874  01A49A                     l11669:
 20875  01A49A  0EFF               	movlw	255
 20876  01A49C  6E30               	movwf	(btemp+10)^0,c
 20877  01A49E  0EFF               	movlw	255
 20878  01A4A0  6E31               	movwf	(btemp+11)^0,c
 20879  01A4A2  0060  F028  F02E   	movff	_width,btemp+8
 20880  01A4A8  0060  F02C  F02F   	movff	_width+1,btemp+9
 20881  01A4AE  5030               	movf	(btemp+10)^0,w,c
 20882  01A4B0  262E               	addwf	(btemp+8)^0,f,c
 20883  01A4B2  5031               	movf	(btemp+11)^0,w,c
 20884  01A4B4  222F               	addwfc	(btemp+9)^0,f,c
 20885                           
 20886                           ;stkvar	_w @ sp[(-2)+0]
 20887  01A4B6  0EFE               	movlw	-2
 20888  01A4B8  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 20889  01A4BE  0EFF               	movlw	-1
 20890  01A4C0  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 20891  01A4C6                     l11671:
 20892                           
 20893                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 20894                           ;stkvar	_c @ sp[(-2)+-3]
 20895  01A4C6  0EFB               	movlw	-5
 20896  01A4C8  006F FF8C  F3AE    	movff	plusw1,_dbuf
 20897                           
 20898                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 20899  01A4CE  0103               	movlb	3	; () banked
 20900  01A4D0  6BAF               	clrf	(_dbuf+1)& (0+255),b
 20901                           
 20902                           ; BSR set to: 3
 20903                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 20904                           ;stkvar	_w @ sp[(-2)+0]
 20905  01A4D2  0EFE               	movlw	-2
 20906  01A4D4  006F FF8F FFE6     	movff	plusw1,postinc1
 20907  01A4DA  006F FF8F FFE6     	movff	plusw1,postinc1
 20908  01A4E0  0EAE               	movlw	low _dbuf
 20909  01A4E2  6EE6               	movwf	postinc1,c
 20910  01A4E4  0E03               	movlw	high _dbuf
 20911  01A4E6  6EE6               	movwf	postinc1,c
 20912                           
 20913                           ;stkvar	_fp @ sp[(-6)+-2]
 20914  01A4E8  0EF8               	movlw	-8
 20915  01A4EA  006F FF8F FFE6     	movff	plusw1,postinc1
 20916  01A4F0  006F FF8F FFE6     	movff	plusw1,postinc1
 20917  01A4F6  ECA9  F0C8         	call	_pad	;wreg free
 20918                           
 20919                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 20920  01A4FA  0EFB               	movlw	251
 20921  01A4FC  26E1               	addwf	fsr1l,f,c
 20922  01A4FE  0EFF               	movlw	255
 20923  01A500  22E2               	addwfc	fsr1h,f,c
 20924  01A502  0012               	return		;funcret
 20925  01A504                     __end_of_ctoa:
 20926                           	opt callstack 0
 20927                           
 20928 ;; *************** function _pad *****************
 20929 ;; Defined at:
 20930 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20931 ;; Parameters:    Size  Location     Type
 20932 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20933 ;;		 -> f(6), NULL(0), 
 20934 ;;  buf             2  [STACK] PTR unsigned char 
 20935 ;;		 -> dbuf(80), 
 20936 ;;  p               2  [STACK] int 
 20937 ;; Auto vars:     Size  Location     Type
 20938 ;;  w               2  [STACK] int 
 20939 ;;  i               2  [STACK] int 
 20940 ;; Return value:  Size  Location     Type
 20941 ;;                  2  [STACK] int 
 20942 ;; Registers used:
 20943 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 20944 ;; Tracked objects:
 20945 ;;		On entry : 0/3
 20946 ;;		On exit  : 0/0
 20947 ;;		Unchanged: 0/0
 20948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20953 ;;Total ram usage:        0 bytes
 20954 ;; Hardware stack levels used:    1
 20955 ;; Hardware stack levels required when called:   19
 20956 ;; This function calls:
 20957 ;;		_fputc
 20958 ;;		_fputs
 20959 ;;		_strlen
 20960 ;; This function is called by:
 20961 ;;		_ctoa
 20962 ;;		_dtoa
 20963 ;;		_efgtoa
 20964 ;;		_utoa
 20965 ;;		_xtoa
 20966 ;; This function uses a reentrant model
 20967 ;;
 20968                           
 20969                           	psect	text71
 20970  019152                     __ptext71:
 20971                           	opt callstack 0
 20972  019152                     _pad:
 20973                           	opt callstack 0
 20974                           
 20975                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20976  019152  52E6               	movf	postinc1,f,c
 20977  019154  52E6               	movf	postinc1,f,c
 20978  019156  52E6               	movf	postinc1,f,c
 20979  019158  52E6               	movf	postinc1,f,c
 20980                           
 20981                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 20982                           
 20983                           ;incstack = 0
 20984 ;; hardware stack exceeded
 20985  01915A  A00E               	btfss	_flags^0,0,c
 20986  01915C  D010               	goto	l11601
 20987                           
 20988                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 20989                           ;stkvar	_fp @ sp[(-4)+-2]
 20990  01915E  0EFA               	movlw	-6
 20991  019160  006F FF8F FFE6     	movff	plusw1,postinc1
 20992  019166  006F FF8F FFE6     	movff	plusw1,postinc1
 20993                           
 20994                           ;stkvar	_buf @ sp[(-6)+-4]
 20995  01916C  0EF6               	movlw	-10
 20996  01916E  006F FF8F FFE6     	movff	plusw1,postinc1
 20997  019174  006F FF8F FFE6     	movff	plusw1,postinc1
 20998  01917A  ECCE  F0D0         	call	_fputs	;wreg free
 20999  01917E                     l11601:
 21000                           
 21001                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 21002                           ;stkvar	_p @ sp[(-4)+-6]
 21003  01917E  0EF7               	movlw	-9
 21004  019180  BEE3               	btfsc	plusw1,7,c
 21005  019182  D011               	goto	l11605
 21006                           
 21007                           ;stkvar	_p @ sp[(-4)+-6]
 21008                           ;stkvar	_w @ sp[(-4)+0]
 21009  019184  0EF6               	movlw	-10
 21010  019186  006F FF8C  F026    	movff	plusw1,btemp
 21011  01918C  0EFC               	movlw	-4
 21012  01918E  0060  F09B  FFE3   	movff	btemp,plusw1
 21013  019194  0EF7               	movlw	-9
 21014  019196  006F FF8C  F026    	movff	plusw1,btemp
 21015  01919C  0EFD               	movlw	-3
 21016  01919E  0060  F09B  FFE3   	movff	btemp,plusw1
 21017  0191A4  D004               	goto	l2139
 21018  0191A6                     l11605:
 21019                           
 21020                           ;stkvar	_w @ sp[(-4)+0]
 21021  0191A6  0EFC               	movlw	-4
 21022  0191A8  6AE3               	clrf	plusw1,c
 21023  0191AA  0EFD               	movlw	-3
 21024  0191AC  6AE3               	clrf	plusw1,c
 21025  0191AE                     l2139:
 21026                           
 21027                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 21028                           ;stkvar	_i @ sp[(-4)+2]
 21029  0191AE  0EFE               	movlw	-2
 21030  0191B0  6AE3               	clrf	plusw1,c
 21031  0191B2  0EFF               	movlw	-1
 21032  0191B4  6AE3               	clrf	plusw1,c
 21033                           
 21034                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 21035  0191B6  D01E               	goto	l11611
 21036  0191B8                     l11607:
 21037                           
 21038                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 21039                           ;stkvar	_fp @ sp[(-4)+-2]
 21040  0191B8  0EFA               	movlw	-6
 21041  0191BA  006F FF8F FFE6     	movff	plusw1,postinc1
 21042  0191C0  006F FF8F FFE6     	movff	plusw1,postinc1
 21043  0191C6  0E20               	movlw	32
 21044  0191C8  6EE6               	movwf	postinc1,c
 21045  0191CA  0E00               	movlw	0
 21046  0191CC  6EE6               	movwf	postinc1,c
 21047  0191CE  EC8B  F0C7         	call	_fputc	;wreg free
 21048                           
 21049                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 21050                           ;stkvar	_i @ sp[(-4)+2]
 21051  0191D2  0EFE               	movlw	-2
 21052  0191D4  50E3               	movf	plusw1,w,c
 21053  0191D6  0F01               	addlw	1
 21054  0191D8  6E26               	movwf	btemp^0,c
 21055  0191DA  0EFE               	movlw	-2
 21056  0191DC  0060  F09B  FFE3   	movff	btemp,plusw1
 21057  0191E2  6A26               	clrf	btemp^0,c
 21058  0191E4  0EFF               	movlw	-1
 21059  0191E6  50E3               	movf	plusw1,w,c
 21060  0191E8  2026               	addwfc	btemp^0,w,c
 21061  0191EA  6E26               	movwf	btemp^0,c
 21062  0191EC  0EFF               	movlw	-1
 21063  0191EE  0060  F09B  FFE3   	movff	btemp,plusw1
 21064  0191F4                     l11611:
 21065                           
 21066                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 21067                           ;stkvar	_w @ sp[(-4)+0]
 21068                           ;stkvar	_i @ sp[(-4)+2]
 21069  0191F4  50E1               	movf	fsr1l,w,c
 21070  0191F6  0FFE               	addlw	-2
 21071  0191F8  6ED9               	movwf	fsr2l,c
 21072  0191FA  50E2               	movf	fsr1h,w,c
 21073  0191FC  6EDA               	movwf	fsr2h,c
 21074  0191FE  0EFF               	movlw	255
 21075  019200  22DA               	addwfc	fsr2h,f,c
 21076  019202  0EFC               	movlw	-4
 21077  019204  50E3               	movf	plusw1,w,c
 21078  019206  5CDE               	subwf	postinc2,w,c
 21079  019208  50DE               	movf	postinc2,w,c
 21080  01920A  0A80               	xorlw	128
 21081  01920C  6E26               	movwf	btemp^0,c
 21082  01920E  0EFD               	movlw	-3
 21083  019210  50E3               	movf	plusw1,w,c
 21084  019212  0A80               	xorlw	128
 21085  019214  5826               	subwfb	btemp^0,w,c
 21086  019216  A0D8               	btfss	status,0,c
 21087  019218  D7CF               	goto	l11607
 21088                           
 21089                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 21090  01921A  B00E               	btfsc	_flags^0,0,c
 21091  01921C  D010               	goto	l11615
 21092                           
 21093                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 21094                           ;stkvar	_fp @ sp[(-4)+-2]
 21095  01921E  0EFA               	movlw	-6
 21096  019220  006F FF8F FFE6     	movff	plusw1,postinc1
 21097  019226  006F FF8F FFE6     	movff	plusw1,postinc1
 21098                           
 21099                           ;stkvar	_buf @ sp[(-6)+-4]
 21100  01922C  0EF6               	movlw	-10
 21101  01922E  006F FF8F FFE6     	movff	plusw1,postinc1
 21102  019234  006F FF8F FFE6     	movff	plusw1,postinc1
 21103  01923A  ECCE  F0D0         	call	_fputs	;wreg free
 21104  01923E                     l11615:
 21105                           
 21106                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 21107                           ;stkvar	_w @ sp[(-4)+0]
 21108                           ;stkvar	_buf @ sp[(-4)+-4]
 21109  01923E  0EF8               	movlw	-8
 21110  019240  006F FF8F FFE6     	movff	plusw1,postinc1
 21111  019246  006F FF8F FFE6     	movff	plusw1,postinc1
 21112  01924C  EC7D  F0D0         	call	_strlen	;wreg free
 21113  019250  0EFC               	movlw	-4
 21114  019252  50E3               	movf	plusw1,w,c
 21115  019254  2626               	addwf	btemp^0,f,c
 21116  019256  0EFD               	movlw	-3
 21117  019258  50E3               	movf	plusw1,w,c
 21118  01925A  2227               	addwfc	(btemp+1)^0,f,c
 21119                           
 21120                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 21121  01925C  0EF6               	movlw	246
 21122  01925E  26E1               	addwf	fsr1l,f,c
 21123  019260  0EFF               	movlw	255
 21124  019262  22E2               	addwfc	fsr1h,f,c
 21125  019264  0012               	return		;funcret
 21126  019266                     __end_of_pad:
 21127                           	opt callstack 0
 21128                           
 21129 ;; *************** function _strlen *****************
 21130 ;; Defined at:
 21131 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 21132 ;; Parameters:    Size  Location     Type
 21133 ;;  s               2  [STACK] PTR const unsigned char 
 21134 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 21135 ;;		 -> spin(120), STR_47(9), STR_46(12), D.lcd(480), 
 21136 ;;		 -> D(482), T(144), port_data(512), STR_3(7), 
 21137 ;;		 -> V(191), 
 21138 ;; Auto vars:     Size  Location     Type
 21139 ;;  a               2  [STACK] PTR const unsigned char 
 21140 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 21141 ;;		 -> spin(120), STR_47(9), STR_46(12), D.lcd(480), 
 21142 ;;		 -> D(482), T(144), port_data(512), STR_3(7), 
 21143 ;;		 -> V(191), 
 21144 ;; Return value:  Size  Location     Type
 21145 ;;                  2  [STACK] unsigned int 
 21146 ;; Registers used:
 21147 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 21148 ;; Tracked objects:
 21149 ;;		On entry : 0/0
 21150 ;;		On exit  : 0/0
 21151 ;;		Unchanged: 0/0
 21152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21157 ;;Total ram usage:        0 bytes
 21158 ;; Hardware stack levels used:    1
 21159 ;; Hardware stack levels required when called:   15
 21160 ;; This function calls:
 21161 ;;		Nothing
 21162 ;; This function is called by:
 21163 ;;		_eaDogM_WriteString
 21164 ;;		_spinners
 21165 ;;		_calc_bsoc
 21166 ;;		_pad
 21167 ;;		_stoa
 21168 ;; This function uses a reentrant model
 21169 ;;
 21170                           
 21171                           	psect	text72
 21172  01A0FA                     __ptext72:
 21173                           	opt callstack 0
 21174  01A0FA                     _strlen:
 21175                           	opt callstack 0
 21176                           
 21177                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21178  01A0FA  52E6               	movf	postinc1,f,c
 21179  01A0FC  52E6               	movf	postinc1,f,c
 21180                           
 21181                           ;stkvar	_s @ sp[(-2)+-2]
 21182                           
 21183                           ;incstack = 0
 21184 ;; hardware stack exceeded
 21185  01A0FE  0EFC               	movlw	-4
 21186  01A100  006F FF8C  F030    	movff	plusw1,btemp+10
 21187  01A106  0EFD               	movlw	-3
 21188  01A108  006F FF8C  F031    	movff	plusw1,btemp+11
 21189                           
 21190                           ;stkvar	_a @ sp[(-2)+0]
 21191  01A10E  0EFF               	movlw	-1
 21192  01A110  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 21193  01A116  0EFE               	movlw	-2
 21194  01A118  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 21195  01A11E  D011               	goto	l7599
 21196  01A120                     l7597:
 21197                           
 21198                           ;stkvar	_s @ sp[(-2)+-2]
 21199  01A120  0EFC               	movlw	-4
 21200  01A122  50E3               	movf	plusw1,w,c
 21201  01A124  0F01               	addlw	1
 21202  01A126  6E26               	movwf	btemp^0,c
 21203  01A128  0EFC               	movlw	-4
 21204  01A12A  0060  F09B  FFE3   	movff	btemp,plusw1
 21205  01A130  6A26               	clrf	btemp^0,c
 21206  01A132  0EFD               	movlw	-3
 21207  01A134  50E3               	movf	plusw1,w,c
 21208  01A136  2026               	addwfc	btemp^0,w,c
 21209  01A138  6E26               	movwf	btemp^0,c
 21210  01A13A  0EFD               	movlw	-3
 21211  01A13C  0060  F09B  FFE3   	movff	btemp,plusw1
 21212  01A142                     l7599:
 21213                           
 21214                           ;stkvar	_s @ sp[(-2)+-2]
 21215  01A142  0EFC               	movlw	-4
 21216  01A144  006F FF8F FFF6     	movff	plusw1,tblptrl
 21217  01A14A  0EFD               	movlw	-3
 21218  01A14C  006F FF8F FFF7     	movff	plusw1,tblptrh
 21219  01A152  0E00               	movlw	low (__mediumconst shr (0+16))
 21220  01A154  6EF8               	movwf	tblptru,c
 21221  01A156  0E1F               	movlw	(high __ramtop+-1)
 21222  01A158  64F7               	cpfsgt	tblptrh,c
 21223  01A15A  D003               	bra	u5367
 21224  01A15C  0008               	tblrd		*
 21225  01A15E  50F5               	movf	tablat,w,c
 21226  01A160  D007               	bra	u5360
 21227  01A162                     u5367:
 21228  01A162  006F FFDB FFE9     	movff	tblptrl,fsr0l
 21229  01A168  006F FFDF FFEA     	movff	tblptrh,fsr0h
 21230  01A16E  50EF               	movf	indf0,w,c
 21231  01A170                     u5360:
 21232  01A170  0900               	iorlw	0
 21233  01A172  A4D8               	btfss	status,2,c
 21234  01A174  D7D5               	goto	l7597
 21235                           
 21236                           ;stkvar	_a @ sp[(-2)+0]
 21237                           ;stkvar	_s @ sp[(-2)+-2]
 21238  01A176  0EFC               	movlw	-4
 21239  01A178  006F FF8C  F026    	movff	plusw1,btemp
 21240  01A17E  0EFD               	movlw	-3
 21241  01A180  006F FF8C  F027    	movff	plusw1,btemp+1
 21242  01A186  0EFE               	movlw	-2
 21243  01A188  50E3               	movf	plusw1,w,c
 21244  01A18A  5E26               	subwf	btemp^0,f,c
 21245  01A18C  0EFF               	movlw	-1
 21246  01A18E  50E3               	movf	plusw1,w,c
 21247  01A190  5A27               	subwfb	(btemp+1)^0,f,c
 21248                           
 21249                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 21250  01A192  52E5               	movf	postdec1,f,c
 21251  01A194  52E5               	movf	postdec1,f,c
 21252  01A196  52E5               	movf	postdec1,f,c
 21253  01A198  52E5               	movf	postdec1,f,c
 21254  01A19A  0012               	return		;funcret
 21255  01A19C                     __end_of_strlen:
 21256                           	opt callstack 0
 21257                           
 21258 ;; *************** function _fputs *****************
 21259 ;; Defined at:
 21260 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 21261 ;; Parameters:    Size  Location     Type
 21262 ;;  s               2  [STACK] PTR const unsigned char 
 21263 ;;		 -> dbuf(80), 
 21264 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21265 ;;		 -> f(6), NULL(0), 
 21266 ;; Auto vars:     Size  Location     Type
 21267 ;;  i               2  [STACK] int 
 21268 ;;  c               1  [STACK] unsigned char 
 21269 ;; Return value:  Size  Location     Type
 21270 ;;                  2  [STACK] int 
 21271 ;; Registers used:
 21272 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 21273 ;; Tracked objects:
 21274 ;;		On entry : 0/3
 21275 ;;		On exit  : 0/0
 21276 ;;		Unchanged: 0/0
 21277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21282 ;;Total ram usage:        0 bytes
 21283 ;; Hardware stack levels used:    1
 21284 ;; Hardware stack levels required when called:   18
 21285 ;; This function calls:
 21286 ;;		_fputc
 21287 ;; This function is called by:
 21288 ;;		_pad
 21289 ;; This function uses a reentrant model
 21290 ;;
 21291                           
 21292                           	psect	text73
 21293  01A19C                     __ptext73:
 21294                           	opt callstack 0
 21295  01A19C                     _fputs:
 21296                           	opt callstack 0
 21297                           
 21298                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21299  01A19C  52E6               	movf	postinc1,f,c
 21300  01A19E  52E6               	movf	postinc1,f,c
 21301  01A1A0  52E6               	movf	postinc1,f,c
 21302                           
 21303                           ;stkvar	_i @ sp[(-3)+0]
 21304                           
 21305                           ;incstack = 0
 21306 ;; hardware stack exceeded
 21307  01A1A2  0EFD               	movlw	-3
 21308  01A1A4  6AE3               	clrf	plusw1,c
 21309  01A1A6  0EFE               	movlw	-2
 21310  01A1A8  6AE3               	clrf	plusw1,c
 21311  01A1AA  D01F               	goto	l11595
 21312  01A1AC                     l11591:
 21313                           
 21314                           ;stkvar	_fp @ sp[(-3)+-4]
 21315  01A1AC  0EF9               	movlw	-7
 21316  01A1AE  006F FF8F FFE6     	movff	plusw1,postinc1
 21317  01A1B4  006F FF8F FFE6     	movff	plusw1,postinc1
 21318                           
 21319                           ;stkvar	_c @ sp[(-5)+2]
 21320  01A1BA  0EFD               	movlw	-3
 21321  01A1BC  50E3               	movf	plusw1,w,c
 21322  01A1BE  6EE6               	movwf	postinc1,c
 21323  01A1C0  0E00               	movlw	0
 21324  01A1C2  6EE6               	movwf	postinc1,c
 21325  01A1C4  EC8B  F0C7         	call	_fputc	;wreg free
 21326                           
 21327                           ;stkvar	_i @ sp[(-3)+0]
 21328  01A1C8  0EFD               	movlw	-3
 21329  01A1CA  50E3               	movf	plusw1,w,c
 21330  01A1CC  0F01               	addlw	1
 21331  01A1CE  6E26               	movwf	btemp^0,c
 21332  01A1D0  0EFD               	movlw	-3
 21333  01A1D2  0060  F09B  FFE3   	movff	btemp,plusw1
 21334  01A1D8  6A26               	clrf	btemp^0,c
 21335  01A1DA  0EFE               	movlw	-2
 21336  01A1DC  50E3               	movf	plusw1,w,c
 21337  01A1DE  2026               	addwfc	btemp^0,w,c
 21338  01A1E0  6E26               	movwf	btemp^0,c
 21339  01A1E2  0EFE               	movlw	-2
 21340  01A1E4  0060  F09B  FFE3   	movff	btemp,plusw1
 21341  01A1EA                     l11595:
 21342                           
 21343                           ;stkvar	_i @ sp[(-3)+0]
 21344  01A1EA  0EFD               	movlw	-3
 21345  01A1EC  006F FF8C  F030    	movff	plusw1,btemp+10
 21346  01A1F2  0EFE               	movlw	-2
 21347  01A1F4  006F FF8C  F031    	movff	plusw1,btemp+11
 21348                           
 21349                           ;stkvar	_s @ sp[(-3)+-2]
 21350  01A1FA  0EFB               	movlw	-5
 21351  01A1FC  006F FF8C  F02E    	movff	plusw1,btemp+8
 21352  01A202  0EFC               	movlw	-4
 21353  01A204  006F FF8C  F02F    	movff	plusw1,btemp+9
 21354  01A20A  5030               	movf	(btemp+10)^0,w,c
 21355  01A20C  242E               	addwf	(btemp+8)^0,w,c
 21356  01A20E  6ED9               	movwf	fsr2l,c
 21357  01A210  5031               	movf	(btemp+11)^0,w,c
 21358  01A212  202F               	addwfc	(btemp+9)^0,w,c
 21359  01A214  6EDA               	movwf	fsr2h,c
 21360  01A216  50DF               	movf	indf2,w,c
 21361  01A218  6E31               	movwf	(btemp+11)^0,c
 21362                           
 21363                           ;stkvar	_c @ sp[(-3)+2]
 21364  01A21A  0EFF               	movlw	-1
 21365  01A21C  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 21366  01A222  0EFF               	movlw	-1
 21367  01A224  50E3               	movf	plusw1,w,c
 21368  01A226  A4D8               	btfss	status,2,c
 21369  01A228  D7C1               	goto	l11591
 21370                           
 21371                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21372  01A22A  0EF9               	movlw	249
 21373  01A22C  26E1               	addwf	fsr1l,f,c
 21374  01A22E  0EFF               	movlw	255
 21375  01A230  22E2               	addwfc	fsr1h,f,c
 21376  01A232  0012               	return		;funcret
 21377  01A234                     __end_of_fputs:
 21378                           	opt callstack 0
 21379                           
 21380 ;; *************** function _fputc *****************
 21381 ;; Defined at:
 21382 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 21383 ;; Parameters:    Size  Location     Type
 21384 ;;  c               2  [STACK] int 
 21385 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21386 ;;		 -> f(6), NULL(0), 
 21387 ;; Auto vars:     Size  Location     Type
 21388 ;;		None
 21389 ;; Return value:  Size  Location     Type
 21390 ;;                  2  [STACK] int 
 21391 ;; Registers used:
 21392 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 21393 ;; Tracked objects:
 21394 ;;		On entry : 0/0
 21395 ;;		On exit  : 0/0
 21396 ;;		Unchanged: 0/0
 21397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21402 ;;Total ram usage:        0 bytes
 21403 ;; Hardware stack levels used:    1
 21404 ;; Hardware stack levels required when called:   17
 21405 ;; This function calls:
 21406 ;;		_putch
 21407 ;; This function is called by:
 21408 ;;		_pad
 21409 ;;		_stoa
 21410 ;;		_vfpfcnvrt
 21411 ;;		_fputs
 21412 ;; This function uses a reentrant model
 21413 ;;
 21414                           
 21415                           	psect	text74
 21416  018F16                     __ptext74:
 21417                           	opt callstack 0
 21418  018F16                     _fputc:
 21419                           	opt callstack 0
 21420                           
 21421                           ;stkvar	_fp @ sp[(0)+-4]
 21422                           
 21423                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21424                           ;incstack = 0
 21425 ;; hardware stack exceeded
 21426  018F16  0EFC               	movlw	-4
 21427  018F18  006F FF8C  F026    	movff	plusw1,btemp
 21428  018F1E  0EFD               	movlw	-3
 21429  018F20  50E3               	movf	plusw1,w,c
 21430  018F22  1026               	iorwf	btemp^0,w,c
 21431  018F24  B4D8               	btfsc	status,2,c
 21432  018F26  D009               	goto	u10600
 21433                           
 21434                           ;stkvar	_fp @ sp[(0)+-4]
 21435  018F28  0EFC               	movlw	-4
 21436  018F2A  006F FF8C  F026    	movff	plusw1,btemp
 21437  018F30  0EFD               	movlw	-3
 21438  018F32  50E3               	movf	plusw1,w,c
 21439  018F34  1026               	iorwf	btemp^0,w,c
 21440  018F36  A4D8               	btfss	status,2,c
 21441  018F38  D006               	goto	l11579
 21442  018F3A                     u10600:
 21443                           
 21444                           ;stkvar	_c @ sp[(0)+-2]
 21445  018F3A  0EFE               	movlw	-2
 21446  018F3C  50E3               	movf	plusw1,w,c
 21447  018F3E  6EE6               	movwf	postinc1,c
 21448  018F40  ECB1  F0DB         	call	_putch	;wreg free
 21449  018F44  D075               	goto	l3185
 21450  018F46                     l11579:
 21451                           
 21452                           ;stkvar	_fp @ sp[(0)+-4]
 21453  018F46  0EFC               	movlw	-4
 21454  018F48  006F FF8C  F030    	movff	plusw1,btemp+10
 21455  018F4E  0EFD               	movlw	-3
 21456  018F50  006F FF8C  F031    	movff	plusw1,btemp+11
 21457  018F56  0E04               	movlw	4
 21458  018F58  2430               	addwf	(btemp+10)^0,w,c
 21459  018F5A  6ED9               	movwf	fsr2l,c
 21460  018F5C  0E00               	movlw	0
 21461  018F5E  2031               	addwfc	(btemp+11)^0,w,c
 21462  018F60  6EDA               	movwf	fsr2h,c
 21463  018F62  50DE               	movf	postinc2,w,c
 21464  018F64  10DE               	iorwf	postinc2,w,c
 21465  018F66  B4D8               	btfsc	status,2,c
 21466  018F68  D026               	goto	u10620
 21467                           
 21468                           ;stkvar	_fp @ sp[(0)+-4]
 21469  018F6A  0EFC               	movlw	-4
 21470  018F6C  006F FF8C  F030    	movff	plusw1,btemp+10
 21471  018F72  0EFD               	movlw	-3
 21472  018F74  006F FF8C  F031    	movff	plusw1,btemp+11
 21473  018F7A  0E04               	movlw	4
 21474  018F7C  2430               	addwf	(btemp+10)^0,w,c
 21475  018F7E  6ED9               	movwf	fsr2l,c
 21476  018F80  0E00               	movlw	0
 21477  018F82  2031               	addwfc	(btemp+11)^0,w,c
 21478  018F84  6EDA               	movwf	fsr2h,c
 21479                           
 21480                           ;stkvar	_fp @ sp[(0)+-4]
 21481  018F86  0EFC               	movlw	-4
 21482  018F88  006F FF8C  F030    	movff	plusw1,btemp+10
 21483  018F8E  0EFD               	movlw	-3
 21484  018F90  006F FF8C  F031    	movff	plusw1,btemp+11
 21485  018F96  0E02               	movlw	2
 21486  018F98  2430               	addwf	(btemp+10)^0,w,c
 21487  018F9A  6EE9               	movwf	fsr0l,c
 21488  018F9C  0E00               	movlw	0
 21489  018F9E  2031               	addwfc	(btemp+11)^0,w,c
 21490  018FA0  6EEA               	movwf	fsr0h,c
 21491  018FA2  50DE               	movf	postinc2,w,c
 21492  018FA4  5CEE               	subwf	postinc0,w,c
 21493  018FA6  50EE               	movf	postinc0,w,c
 21494  018FA8  0A80               	xorlw	128
 21495  018FAA  6E26               	movwf	btemp^0,c
 21496  018FAC  50DE               	movf	postinc2,w,c
 21497  018FAE  0A80               	xorlw	128
 21498  018FB0  5826               	subwfb	btemp^0,w,c
 21499  018FB2  B0D8               	btfsc	status,0,c
 21500  018FB4  D03D               	goto	l3185
 21501  018FB6                     u10620:
 21502                           
 21503                           ;stkvar	_c @ sp[(0)+-2]
 21504                           ;stkvar	_fp @ sp[(0)+-4]
 21505  018FB6  0EFC               	movlw	-4
 21506  018FB8  006F FF8C  F030    	movff	plusw1,btemp+10
 21507  018FBE  0EFD               	movlw	-3
 21508  018FC0  006F FF8C  F031    	movff	plusw1,btemp+11
 21509  018FC6  0E02               	movlw	2
 21510  018FC8  2430               	addwf	(btemp+10)^0,w,c
 21511  018FCA  6ED9               	movwf	fsr2l,c
 21512  018FCC  0E00               	movlw	0
 21513  018FCE  2031               	addwfc	(btemp+11)^0,w,c
 21514  018FD0  6EDA               	movwf	fsr2h,c
 21515  018FD2  006F FF78  F030    	movff	postinc2,btemp+10
 21516  018FD8  006F FF74  F031    	movff	postdec2,btemp+11
 21517                           
 21518                           ;stkvar	_fp @ sp[(0)+-4]
 21519  018FDE  0EFC               	movlw	-4
 21520  018FE0  006F FF8F FFD9     	movff	plusw1,fsr2l
 21521  018FE6  0EFD               	movlw	-3
 21522  018FE8  006F FF8F FFDA     	movff	plusw1,fsr2h
 21523  018FEE  006F FF78  F02E    	movff	postinc2,btemp+8
 21524  018FF4  006F FF74  F02F    	movff	postdec2,btemp+9
 21525  018FFA  5030               	movf	(btemp+10)^0,w,c
 21526  018FFC  242E               	addwf	(btemp+8)^0,w,c
 21527  018FFE  6ED9               	movwf	fsr2l,c
 21528  019000  5031               	movf	(btemp+11)^0,w,c
 21529  019002  202F               	addwfc	(btemp+9)^0,w,c
 21530  019004  6EDA               	movwf	fsr2h,c
 21531  019006  0EFE               	movlw	-2
 21532  019008  006F FF8F FFDF     	movff	plusw1,indf2
 21533                           
 21534                           ;stkvar	_fp @ sp[(0)+-4]
 21535  01900E  0EFC               	movlw	-4
 21536  019010  006F FF8C  F030    	movff	plusw1,btemp+10
 21537  019016  0EFD               	movlw	-3
 21538  019018  006F FF8C  F031    	movff	plusw1,btemp+11
 21539  01901E  0E02               	movlw	2
 21540  019020  2430               	addwf	(btemp+10)^0,w,c
 21541  019022  6ED9               	movwf	fsr2l,c
 21542  019024  0E00               	movlw	0
 21543  019026  2031               	addwfc	(btemp+11)^0,w,c
 21544  019028  6EDA               	movwf	fsr2h,c
 21545  01902A  2ADE               	incf	postinc2,f,c
 21546  01902C  0E00               	movlw	0
 21547  01902E  22DD               	addwfc	postdec2,f,c
 21548  019030                     l3185:
 21549                           
 21550                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21551  019030  52E5               	movf	postdec1,f,c
 21552  019032  52E5               	movf	postdec1,f,c
 21553  019034  52E5               	movf	postdec1,f,c
 21554  019036  52E5               	movf	postdec1,f,c
 21555  019038  0012               	return		;funcret
 21556  01903A                     __end_of_fputc:
 21557                           	opt callstack 0
 21558                           
 21559 ;; *************** function _putch *****************
 21560 ;; Defined at:
 21561 ;;		line 170 in file "eadog.c"
 21562 ;; Parameters:    Size  Location     Type
 21563 ;;  c               1  [STACK] unsigned char 
 21564 ;; Auto vars:     Size  Location     Type
 21565 ;;		None
 21566 ;; Return value:  Size  Location     Type
 21567 ;;                  1  [STACK] void 
 21568 ;; Registers used:
 21569 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21570 ;; Tracked objects:
 21571 ;;		On entry : 0/0
 21572 ;;		On exit  : 0/0
 21573 ;;		Unchanged: 0/0
 21574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21579 ;;Total ram usage:        0 bytes
 21580 ;; Hardware stack levels used:    1
 21581 ;; Hardware stack levels required when called:   16
 21582 ;; This function calls:
 21583 ;;		_ringBufS_put_dma
 21584 ;; This function is called by:
 21585 ;;		_fputc
 21586 ;; This function uses a reentrant model
 21587 ;;
 21588                           
 21589                           	psect	text75
 21590  01B762                     __ptext75:
 21591                           	opt callstack 0
 21592  01B762                     _putch:
 21593                           	opt callstack 0
 21594                           
 21595                           ;eadog.c: 170: void putch(char c);eadog.c: 171: {;eadog.c: 172:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 21596                           ;stkvar	_c @ sp[(0)+-1]
 21597                           
 21598                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21599                           ;incstack = 0
 21600 ;; hardware stack exceeded
 21601  01B762  0EFF               	movlw	-1
 21602  01B764  50E3               	movf	plusw1,w,c
 21603  01B766  6EE6               	movwf	postinc1,c
 21604  01B768  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 21605  01B76E  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 21606  01B774  ECD5  F0CF         	call	_ringBufS_put_dma	;wreg free
 21607                           
 21608                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 21609  01B778  52E5               	movf	postdec1,f,c
 21610  01B77A  0012               	return		;funcret
 21611  01B77C                     __end_of_putch:
 21612                           	opt callstack 0
 21613                           
 21614 ;; *************** function _ringBufS_put_dma *****************
 21615 ;; Defined at:
 21616 ;;		line 67 in file "ringbufs.c"
 21617 ;; Parameters:    Size  Location     Type
 21618 ;;  _this           2  [STACK] PTR struct ringBufS_t
 21619 ;;		 -> ring_buf1(67), 
 21620 ;;  c               1  [STACK] const unsigned char 
 21621 ;; Auto vars:     Size  Location     Type
 21622 ;;		None
 21623 ;; Return value:  Size  Location     Type
 21624 ;;                  1  [STACK] void 
 21625 ;; Registers used:
 21626 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21627 ;; Tracked objects:
 21628 ;;		On entry : 0/0
 21629 ;;		On exit  : 0/0
 21630 ;;		Unchanged: 0/0
 21631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21636 ;;Total ram usage:        0 bytes
 21637 ;; Hardware stack levels used:    1
 21638 ;; Hardware stack levels required when called:   15
 21639 ;; This function calls:
 21640 ;;		Nothing
 21641 ;; This function is called by:
 21642 ;;		_putch
 21643 ;; This function uses a reentrant model
 21644 ;;
 21645                           
 21646                           	psect	text76
 21647  019FAA                     __ptext76:
 21648                           	opt callstack 0
 21649  019FAA                     _ringBufS_put_dma:
 21650                           	opt callstack 0
 21651                           
 21652                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 21653                           ;stkvar	__this @ sp[(0)+-2]
 21654                           
 21655                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21656                           ;incstack = 0
 21657 ;; hardware stack exceeded
 21658  019FAA  0EFE               	movlw	-2
 21659  019FAC  006F FF8C  F030    	movff	plusw1,btemp+10
 21660  019FB2  0EFF               	movlw	-1
 21661  019FB4  006F FF8C  F031    	movff	plusw1,btemp+11
 21662  019FBA  0E42               	movlw	66
 21663  019FBC  2430               	addwf	(btemp+10)^0,w,c
 21664  019FBE  6ED9               	movwf	fsr2l,c
 21665  019FC0  0E00               	movlw	0
 21666  019FC2  2031               	addwfc	(btemp+11)^0,w,c
 21667  019FC4  6EDA               	movwf	fsr2h,c
 21668  019FC6  0E40               	movlw	64
 21669  019FC8  60DF               	cpfslt	indf2,c
 21670  019FCA  D040               	goto	l1587
 21671                           
 21672                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 21673                           ;stkvar	_c @ sp[(0)+-3]
 21674                           ;stkvar	__this @ sp[(0)+-2]
 21675  019FCC  0EFE               	movlw	-2
 21676  019FCE  006F FF8C  F030    	movff	plusw1,btemp+10
 21677  019FD4  0EFF               	movlw	-1
 21678  019FD6  006F FF8C  F031    	movff	plusw1,btemp+11
 21679  019FDC  0E40               	movlw	64
 21680  019FDE  2430               	addwf	(btemp+10)^0,w,c
 21681  019FE0  6ED9               	movwf	fsr2l,c
 21682  019FE2  0E00               	movlw	0
 21683  019FE4  2031               	addwfc	(btemp+11)^0,w,c
 21684  019FE6  6EDA               	movwf	fsr2h,c
 21685  019FE8  50DF               	movf	indf2,w,c
 21686  019FEA  6E31               	movwf	(btemp+11)^0,c
 21687                           
 21688                           ;stkvar	__this @ sp[(0)+-2]
 21689  019FEC  0EFE               	movlw	-2
 21690  019FEE  006F FF8C  F02E    	movff	plusw1,btemp+8
 21691  019FF4  0EFF               	movlw	-1
 21692  019FF6  006F FF8C  F02F    	movff	plusw1,btemp+9
 21693  019FFC  5031               	movf	(btemp+11)^0,w,c
 21694  019FFE  242E               	addwf	(btemp+8)^0,w,c
 21695  01A000  6ED9               	movwf	fsr2l,c
 21696  01A002  0E00               	movlw	0
 21697  01A004  202F               	addwfc	(btemp+9)^0,w,c
 21698  01A006  6EDA               	movwf	fsr2h,c
 21699  01A008  0EFD               	movlw	-3
 21700  01A00A  006F FF8F FFDF     	movff	plusw1,indf2
 21701                           
 21702                           ;ringbufs.c: 71:   ++_this->head;
 21703                           ;stkvar	__this @ sp[(0)+-2]
 21704  01A010  0EFE               	movlw	-2
 21705  01A012  006F FF8C  F030    	movff	plusw1,btemp+10
 21706  01A018  0EFF               	movlw	-1
 21707  01A01A  006F FF8C  F031    	movff	plusw1,btemp+11
 21708  01A020  0E40               	movlw	64
 21709  01A022  2430               	addwf	(btemp+10)^0,w,c
 21710  01A024  6ED9               	movwf	fsr2l,c
 21711  01A026  0E00               	movlw	0
 21712  01A028  2031               	addwfc	(btemp+11)^0,w,c
 21713  01A02A  6EDA               	movwf	fsr2h,c
 21714  01A02C  2ADF               	incf	indf2,f,c
 21715                           
 21716                           ;ringbufs.c: 72:   ++_this->count;
 21717                           ;stkvar	__this @ sp[(0)+-2]
 21718  01A02E  0EFE               	movlw	-2
 21719  01A030  006F FF8C  F030    	movff	plusw1,btemp+10
 21720  01A036  0EFF               	movlw	-1
 21721  01A038  006F FF8C  F031    	movff	plusw1,btemp+11
 21722  01A03E  0E42               	movlw	66
 21723  01A040  2430               	addwf	(btemp+10)^0,w,c
 21724  01A042  6ED9               	movwf	fsr2l,c
 21725  01A044  0E00               	movlw	0
 21726  01A046  2031               	addwfc	(btemp+11)^0,w,c
 21727  01A048  6EDA               	movwf	fsr2h,c
 21728  01A04A  2ADF               	incf	indf2,f,c
 21729  01A04C                     l1587:
 21730                           
 21731                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 21732  01A04C  52E5               	movf	postdec1,f,c
 21733  01A04E  52E5               	movf	postdec1,f,c
 21734  01A050  52E5               	movf	postdec1,f,c
 21735  01A052  0012               	return		;funcret
 21736  01A054                     __end_of_ringBufS_put_dma:
 21737                           	opt callstack 0
 21738                           
 21739 ;; *************** function _atoi *****************
 21740 ;; Defined at:
 21741 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 21742 ;; Parameters:    Size  Location     Type
 21743 ;;  s               2  [STACK] PTR const unsigned char 
 21744 ;;		 -> STR_65(85), STR_63(3), STR_62(3), STR_61(19), 
 21745 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 21746 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
 21747 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
 21748 ;;		 -> STR_48(19), STR_45(3), STR_44(3), STR_43(3), 
 21749 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 21750 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 21751 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 21752 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 21753 ;;		 -> STR_26(19), STR_25(20), STR_24(19), STR_23(19), 
 21754 ;;		 -> STR_22(20), STR_21(17), STR_20(16), STR_19(16), 
 21755 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 21756 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 21757 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 21758 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 21759 ;;		 -> STR_1(17), 
 21760 ;; Auto vars:     Size  Location     Type
 21761 ;;  n               2  [STACK] int 
 21762 ;;  neg             2  [STACK] int 
 21763 ;; Return value:  Size  Location     Type
 21764 ;;                  2  [STACK] int 
 21765 ;; Registers used:
 21766 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 21767 ;; Tracked objects:
 21768 ;;		On entry : 0/0
 21769 ;;		On exit  : 0/0
 21770 ;;		Unchanged: 0/0
 21771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21776 ;;Total ram usage:        0 bytes
 21777 ;; Hardware stack levels used:    1
 21778 ;; Hardware stack levels required when called:   16
 21779 ;; This function calls:
 21780 ;;		_isdigit
 21781 ;;		_isspace
 21782 ;; This function is called by:
 21783 ;;		_vfpfcnvrt
 21784 ;; This function uses a reentrant model
 21785 ;;
 21786                           
 21787                           	psect	text77
 21788  017148                     __ptext77:
 21789                           	opt callstack 0
 21790  017148                     _atoi:
 21791                           	opt callstack 0
 21792                           
 21793                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21794  017148  0E09               	movlw	9
 21795  01714A  26E1               	addwf	fsr1l,f,c
 21796  01714C  0E00               	movlw	0
 21797  01714E  22E2               	addwfc	fsr1h,f,c
 21798                           
 21799                           ;stkvar	_n @ sp[(-9)+5]
 21800                           
 21801                           ;incstack = 0
 21802 ;; hardware stack exceeded
 21803  017150  0EFC               	movlw	-4
 21804  017152  6AE3               	clrf	plusw1,c
 21805  017154  0EFD               	movlw	-3
 21806  017156  6AE3               	clrf	plusw1,c
 21807                           
 21808                           ;stkvar	_neg @ sp[(-9)+7]
 21809  017158  0EFE               	movlw	-2
 21810  01715A  6AE3               	clrf	plusw1,c
 21811  01715C  0EFF               	movlw	-1
 21812  01715E  6AE3               	clrf	plusw1,c
 21813  017160  D011               	goto	l9207
 21814  017162                     l9205:
 21815                           
 21816                           ;stkvar	_s @ sp[(-9)+-2]
 21817  017162  0EF5               	movlw	-11
 21818  017164  50E3               	movf	plusw1,w,c
 21819  017166  0F01               	addlw	1
 21820  017168  6E26               	movwf	btemp^0,c
 21821  01716A  0EF5               	movlw	-11
 21822  01716C  0060  F09B  FFE3   	movff	btemp,plusw1
 21823  017172  6A26               	clrf	btemp^0,c
 21824  017174  0EF6               	movlw	-10
 21825  017176  50E3               	movf	plusw1,w,c
 21826  017178  2026               	addwfc	btemp^0,w,c
 21827  01717A  6E26               	movwf	btemp^0,c
 21828  01717C  0EF6               	movlw	-10
 21829  01717E  0060  F09B  FFE3   	movff	btemp,plusw1
 21830  017184                     l9207:
 21831                           
 21832                           ;stkvar	_atoi$5981 @ sp[(-9)+4]
 21833  017184  0EFB               	movlw	-5
 21834  017186  6AE3               	clrf	plusw1,c
 21835  017188  2AE3               	incf	plusw1,f,c
 21836                           
 21837                           ;stkvar	_s @ sp[(-9)+-2]
 21838  01718A  50E1               	movf	fsr1l,w,c
 21839  01718C  0FF5               	addlw	-11
 21840  01718E  6ED9               	movwf	fsr2l,c
 21841  017190  50E2               	movf	fsr1h,w,c
 21842  017192  6EDA               	movwf	fsr2h,c
 21843  017194  0EFF               	movlw	255
 21844  017196  22DA               	addwfc	fsr2h,f,c
 21845  017198  006F FF7B FFF6     	movff	postinc2,tblptrl
 21846  01719E  006F FF77 FFF7     	movff	postdec2,tblptrh
 21847  0171A4                     	if	0	;tblptru may be non-zero
 21848  0171A4                     	endif
 21849  0171A4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21850  0171A4  0E00               	movlw	low (__mediumconst shr (0+16))
 21851  0171A6  6EF8               	movwf	tblptru,c
 21852  0171A8                     	endif
 21853  0171A8  0008               	tblrd		*
 21854  0171AA  50F5               	movf	tablat,w,c
 21855  0171AC  0A20               	xorlw	32
 21856  0171AE  B4D8               	btfsc	status,2,c
 21857  0171B0  D023               	goto	l9215
 21858  0171B2  0EF7               	movlw	247
 21859  0171B4  6E30               	movwf	(btemp+10)^0,c
 21860  0171B6  0EFF               	movlw	255
 21861  0171B8  6E31               	movwf	(btemp+11)^0,c
 21862                           
 21863                           ;stkvar	_s @ sp[(-9)+-2]
 21864  0171BA  50E1               	movf	fsr1l,w,c
 21865  0171BC  0FF5               	addlw	-11
 21866  0171BE  6ED9               	movwf	fsr2l,c
 21867  0171C0  50E2               	movf	fsr1h,w,c
 21868  0171C2  6EDA               	movwf	fsr2h,c
 21869  0171C4  0EFF               	movlw	255
 21870  0171C6  22DA               	addwfc	fsr2h,f,c
 21871  0171C8  006F FF7B FFF6     	movff	postinc2,tblptrl
 21872  0171CE  006F FF77 FFF7     	movff	postdec2,tblptrh
 21873  0171D4                     	if	0	;tblptru may be non-zero
 21874  0171D4                     	endif
 21875  0171D4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21876  0171D4  0E00               	movlw	low (__mediumconst shr (0+16))
 21877  0171D6  6EF8               	movwf	tblptru,c
 21878  0171D8                     	endif
 21879  0171D8  0008               	tblrd		*
 21880  0171DA  50F5               	movf	tablat,w,c
 21881  0171DC  6E2E               	movwf	(btemp+8)^0,c
 21882  0171DE  6A2F               	clrf	(btemp+9)^0,c
 21883  0171E0  5030               	movf	(btemp+10)^0,w,c
 21884  0171E2  262E               	addwf	(btemp+8)^0,f,c
 21885  0171E4  5031               	movf	(btemp+11)^0,w,c
 21886  0171E6  222F               	addwfc	(btemp+9)^0,f,c
 21887  0171E8  502F               	movf	(btemp+9)^0,w,c
 21888  0171EA  E104               	bnz	u8470
 21889  0171EC  0E05               	movlw	5
 21890  0171EE  5C2E               	subwf	(btemp+8)^0,w,c
 21891  0171F0  A0D8               	btfss	status,0,c
 21892  0171F2  D002               	goto	l9215
 21893  0171F4                     u8470:
 21894                           
 21895                           ;stkvar	_atoi$5981 @ sp[(-9)+4]
 21896  0171F4  0EFB               	movlw	-5
 21897  0171F6  6AE3               	clrf	plusw1,c
 21898  0171F8                     l9215:
 21899                           
 21900                           ;stkvar	_atoi$5981 @ sp[(-9)+4]
 21901  0171F8  0EFB               	movlw	-5
 21902  0171FA  50E3               	movf	plusw1,w,c
 21903  0171FC  6E30               	movwf	(btemp+10)^0,c
 21904  0171FE  6A31               	clrf	(btemp+11)^0,c
 21905                           
 21906                           ;stkvar	_atoi$5980 @ sp[(-9)+2]
 21907  017200  0EF9               	movlw	-7
 21908  017202  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 21909  017208  0EFA               	movlw	-6
 21910  01720A  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 21911                           
 21912                           ;stkvar	_atoi$5980 @ sp[(-9)+2]
 21913  017210  0EF9               	movlw	-7
 21914  017212  006F FF8C  F026    	movff	plusw1,btemp
 21915  017218  0EFA               	movlw	-6
 21916  01721A  50E3               	movf	plusw1,w,c
 21917  01721C  1026               	iorwf	btemp^0,w,c
 21918  01721E  B4D8               	btfsc	status,2,c
 21919  017220  D01F               	goto	l9225
 21920  017222  D79F               	goto	l9205
 21921  017224                     l9221:
 21922  017224  0E01               	movlw	1
 21923  017226  6E30               	movwf	(btemp+10)^0,c
 21924  017228  0E00               	movlw	0
 21925  01722A  6E31               	movwf	(btemp+11)^0,c
 21926                           
 21927                           ;stkvar	_neg @ sp[(-9)+7]
 21928  01722C  0EFE               	movlw	-2
 21929  01722E  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 21930  017234  0EFF               	movlw	-1
 21931  017236  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 21932  01723C                     l9223:
 21933                           
 21934                           ;stkvar	_s @ sp[(-9)+-2]
 21935  01723C  0EF5               	movlw	-11
 21936  01723E  50E3               	movf	plusw1,w,c
 21937  017240  0F01               	addlw	1
 21938  017242  6E26               	movwf	btemp^0,c
 21939  017244  0EF5               	movlw	-11
 21940  017246  0060  F09B  FFE3   	movff	btemp,plusw1
 21941  01724C  6A26               	clrf	btemp^0,c
 21942  01724E  0EF6               	movlw	-10
 21943  017250  50E3               	movf	plusw1,w,c
 21944  017252  2026               	addwfc	btemp^0,w,c
 21945  017254  6E26               	movwf	btemp^0,c
 21946  017256  0EF6               	movlw	-10
 21947  017258  0060  F09B  FFE3   	movff	btemp,plusw1
 21948  01725E  D053               	goto	l9231
 21949  017260                     l9225:
 21950                           
 21951                           ;stkvar	_s @ sp[(-9)+-2]
 21952  017260  50E1               	movf	fsr1l,w,c
 21953  017262  0FF5               	addlw	-11
 21954  017264  6ED9               	movwf	fsr2l,c
 21955  017266  50E2               	movf	fsr1h,w,c
 21956  017268  6EDA               	movwf	fsr2h,c
 21957  01726A  0EFF               	movlw	255
 21958  01726C  22DA               	addwfc	fsr2h,f,c
 21959  01726E  006F FF7B FFF6     	movff	postinc2,tblptrl
 21960  017274  006F FF77 FFF7     	movff	postdec2,tblptrh
 21961  01727A                     	if	0	;tblptru may be non-zero
 21962  01727A                     	endif
 21963  01727A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21964  01727A  0E00               	movlw	low (__mediumconst shr (0+16))
 21965  01727C  6EF8               	movwf	tblptru,c
 21966  01727E                     	endif
 21967  01727E  0008               	tblrd		*
 21968  017280  50F5               	movf	tablat,w,c
 21969  017282  6E30               	movwf	(btemp+10)^0,c
 21970  017284  6A31               	clrf	(btemp+11)^0,c
 21971                           
 21972                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21973                           ; Switch size 1, requested type "simple"
 21974                           ; Number of cases is 1, Range of values is 0 to 0
 21975                           ; switch strategies available:
 21976                           ; Name         Instructions Cycles
 21977                           ; simple_byte            4     3 (average)
 21978                           ;	Chosen strategy is simple_byte
 21979  017286  5031               	movf	(btemp+11)^0,w,c
 21980  017288  0A00               	xorlw	0	; case 0
 21981  01728A  A4D8               	btfss	status,2,c
 21982  01728C  D03C               	goto	l9231
 21983                           
 21984                           ; Switch size 1, requested type "simple"
 21985                           ; Number of cases is 2, Range of values is 43 to 45
 21986                           ; switch strategies available:
 21987                           ; Name         Instructions Cycles
 21988                           ; simple_byte            7     4 (average)
 21989                           ;	Chosen strategy is simple_byte
 21990  01728E  5030               	movf	(btemp+10)^0,w,c
 21991  017290  0A2B               	xorlw	43	; case 43
 21992  017292  B4D8               	btfsc	status,2,c
 21993  017294  D7D3               	goto	l9223
 21994  017296  0A06               	xorlw	6	; case 45
 21995  017298  B4D8               	btfsc	status,2,c
 21996  01729A  D7C4               	goto	l9221
 21997  01729C  D034               	goto	l9231
 21998  01729E                     l9227:
 21999                           
 22000                           ;stkvar	_n @ sp[(-9)+5]
 22001  01729E  0EFC               	movlw	-4
 22002  0172A0  006F FF8C  F030    	movff	plusw1,btemp+10
 22003  0172A6  0EFD               	movlw	-3
 22004  0172A8  006F FF8C  F031    	movff	plusw1,btemp+11
 22005  0172AE  0E0A               	movlw	10
 22006  0172B0  0230               	mulwf	(btemp+10)^0,c
 22007  0172B2  006F FFCC  F02E    	movff	prodl,btemp+8
 22008  0172B8  006F FFD0  F02F    	movff	prodh,btemp+9
 22009  0172BE  0231               	mulwf	(btemp+11)^0,c
 22010  0172C0  50F3               	movf	prodl,w,c
 22011  0172C2  262F               	addwf	(btemp+9)^0,f,c
 22012                           
 22013                           ;stkvar	_s @ sp[(-9)+-2]
 22014  0172C4  50E1               	movf	fsr1l,w,c
 22015  0172C6  0FF5               	addlw	-11
 22016  0172C8  6ED9               	movwf	fsr2l,c
 22017  0172CA  50E2               	movf	fsr1h,w,c
 22018  0172CC  6EDA               	movwf	fsr2h,c
 22019  0172CE  0EFF               	movlw	255
 22020  0172D0  22DA               	addwfc	fsr2h,f,c
 22021  0172D2  006F FF7B FFF6     	movff	postinc2,tblptrl
 22022  0172D8  006F FF77 FFF7     	movff	postdec2,tblptrh
 22023  0172DE                     	if	0	;tblptru may be non-zero
 22024  0172DE                     	endif
 22025  0172DE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22026  0172DE  0E00               	movlw	low (__mediumconst shr (0+16))
 22027  0172E0  6EF8               	movwf	tblptru,c
 22028  0172E2                     	endif
 22029  0172E2  0008               	tblrd		*
 22030  0172E4  50F5               	movf	tablat,w,c
 22031  0172E6  5E2E               	subwf	(btemp+8)^0,f,c
 22032  0172E8  0E00               	movlw	0
 22033  0172EA  5A2F               	subwfb	(btemp+9)^0,f,c
 22034  0172EC  0E30               	movlw	48
 22035  0172EE  262E               	addwf	(btemp+8)^0,f,c
 22036  0172F0  0E00               	movlw	0
 22037  0172F2  222F               	addwfc	(btemp+9)^0,f,c
 22038                           
 22039                           ;stkvar	_n @ sp[(-9)+5]
 22040  0172F4  0EFC               	movlw	-4
 22041  0172F6  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 22042  0172FC  0EFD               	movlw	-3
 22043  0172FE  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 22044  017304  D79B               	goto	l9223
 22045  017306                     l9231:
 22046  017306  0ED0               	movlw	208
 22047  017308  6E30               	movwf	(btemp+10)^0,c
 22048  01730A  0EFF               	movlw	255
 22049  01730C  6E31               	movwf	(btemp+11)^0,c
 22050                           
 22051                           ;stkvar	_s @ sp[(-9)+-2]
 22052  01730E  50E1               	movf	fsr1l,w,c
 22053  017310  0FF5               	addlw	-11
 22054  017312  6ED9               	movwf	fsr2l,c
 22055  017314  50E2               	movf	fsr1h,w,c
 22056  017316  6EDA               	movwf	fsr2h,c
 22057  017318  0EFF               	movlw	255
 22058  01731A  22DA               	addwfc	fsr2h,f,c
 22059  01731C  006F FF7B FFF6     	movff	postinc2,tblptrl
 22060  017322  006F FF77 FFF7     	movff	postdec2,tblptrh
 22061  017328                     	if	0	;tblptru may be non-zero
 22062  017328                     	endif
 22063  017328                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22064  017328  0E00               	movlw	low (__mediumconst shr (0+16))
 22065  01732A  6EF8               	movwf	tblptru,c
 22066  01732C                     	endif
 22067  01732C  0008               	tblrd		*
 22068  01732E  50F5               	movf	tablat,w,c
 22069  017330  6E2E               	movwf	(btemp+8)^0,c
 22070  017332  6A2F               	clrf	(btemp+9)^0,c
 22071  017334  5030               	movf	(btemp+10)^0,w,c
 22072  017336  262E               	addwf	(btemp+8)^0,f,c
 22073  017338  5031               	movf	(btemp+11)^0,w,c
 22074  01733A  222F               	addwfc	(btemp+9)^0,f,c
 22075  01733C  502F               	movf	(btemp+9)^0,w,c
 22076  01733E  E106               	bnz	u8490
 22077  017340  0E0A               	movlw	10
 22078  017342  5C2E               	subwf	(btemp+8)^0,w,c
 22079  017344  B0D8               	btfsc	status,0,c
 22080  017346  D002               	goto	u8490
 22081  017348  0E01               	movlw	1
 22082  01734A  D001               	goto	u8500
 22083  01734C                     u8490:
 22084  01734C  0E00               	movlw	0
 22085  01734E                     u8500:
 22086  01734E  6E30               	movwf	(btemp+10)^0,c
 22087  017350  6A31               	clrf	(btemp+11)^0,c
 22088                           
 22089                           ;stkvar	_atoi$5982 @ sp[(-9)+0]
 22090  017352  0EF7               	movlw	-9
 22091  017354  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 22092  01735A  0EF8               	movlw	-8
 22093  01735C  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 22094                           
 22095                           ;stkvar	_atoi$5982 @ sp[(-9)+0]
 22096  017362  0EF7               	movlw	-9
 22097  017364  006F FF8C  F026    	movff	plusw1,btemp
 22098  01736A  0EF8               	movlw	-8
 22099  01736C  50E3               	movf	plusw1,w,c
 22100  01736E  1026               	iorwf	btemp^0,w,c
 22101  017370  A4D8               	btfss	status,2,c
 22102  017372  D795               	goto	l9227
 22103                           
 22104                           ;stkvar	_neg @ sp[(-9)+7]
 22105  017374  0EFE               	movlw	-2
 22106  017376  006F FF8C  F026    	movff	plusw1,btemp
 22107  01737C  0EFF               	movlw	-1
 22108  01737E  50E3               	movf	plusw1,w,c
 22109  017380  1026               	iorwf	btemp^0,w,c
 22110  017382  A4D8               	btfss	status,2,c
 22111  017384  D00E               	goto	l9241
 22112                           
 22113                           ;stkvar	_n @ sp[(-9)+5]
 22114  017386  0EFC               	movlw	-4
 22115  017388  006F FF8C  F026    	movff	plusw1,btemp
 22116  01738E  1E26               	comf	btemp^0,f,c
 22117  017390  0EFD               	movlw	-3
 22118  017392  006F FF8C  F027    	movff	plusw1,btemp+1
 22119  017398  1E27               	comf	(btemp+1)^0,f,c
 22120  01739A  2A26               	incf	btemp^0,f,c
 22121  01739C  B4D8               	btfsc	status,2,c
 22122  01739E  2A27               	incf	(btemp+1)^0,f,c
 22123  0173A0  D008               	goto	l3116
 22124  0173A2                     l9241:
 22125                           
 22126                           ;stkvar	_n @ sp[(-9)+5]
 22127  0173A2  0EFC               	movlw	-4
 22128  0173A4  006F FF8C  F026    	movff	plusw1,btemp
 22129  0173AA  0EFD               	movlw	-3
 22130  0173AC  006F FF8C  F027    	movff	plusw1,btemp+1
 22131  0173B2                     l3116:
 22132                           
 22133                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 22134  0173B2  0EF5               	movlw	245
 22135  0173B4  26E1               	addwf	fsr1l,f,c
 22136  0173B6  0EFF               	movlw	255
 22137  0173B8  22E2               	addwfc	fsr1h,f,c
 22138  0173BA  0012               	return		;funcret
 22139  0173BC                     __end_of_atoi:
 22140                           	opt callstack 0
 22141                           
 22142 ;; *************** function _isspace *****************
 22143 ;; Defined at:
 22144 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 22145 ;; Parameters:    Size  Location     Type
 22146 ;;  c               2  [STACK] int 
 22147 ;; Auto vars:     Size  Location     Type
 22148 ;;		None
 22149 ;; Return value:  Size  Location     Type
 22150 ;;                  2  [STACK] int 
 22151 ;; Registers used:
 22152 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22153 ;; Tracked objects:
 22154 ;;		On entry : 0/0
 22155 ;;		On exit  : 0/0
 22156 ;;		Unchanged: 0/0
 22157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22162 ;;Total ram usage:        0 bytes
 22163 ;; Hardware stack levels used:    1
 22164 ;; Hardware stack levels required when called:   15
 22165 ;; This function calls:
 22166 ;;		Nothing
 22167 ;; This function is called by:
 22168 ;;		_atoi
 22169 ;; This function uses a reentrant model
 22170 ;;
 22171                           
 22172                           	psect	text78
 22173  01AABC                     __ptext78:
 22174                           	opt callstack 0
 22175  01AABC                     _isspace:
 22176                           	opt callstack 0
 22177                           
 22178                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22179  01AABC  52E6               	movf	postinc1,f,c
 22180                           
 22181                           ;stkvar	_isspace$6031 @ sp[(-1)+0]
 22182                           
 22183                           ;incstack = 0
 22184 ;; hardware stack exceeded
 22185  01AABE  0EFF               	movlw	-1
 22186  01AAC0  6AE3               	clrf	plusw1,c
 22187  01AAC2  2AE3               	incf	plusw1,f,c
 22188                           
 22189                           ;stkvar	_c @ sp[(-1)+-2]
 22190  01AAC4  0EFD               	movlw	-3
 22191  01AAC6  006F FF8C  F026    	movff	plusw1,btemp
 22192  01AACC  0E20               	movlw	32
 22193  01AACE  1826               	xorwf	btemp^0,w,c
 22194  01AAD0  E104               	bnz	u7320
 22195  01AAD2  0EFE               	movlw	-2
 22196  01AAD4  50E3               	movf	plusw1,w,c
 22197  01AAD6  B4D8               	btfsc	status,2,c
 22198  01AAD8  D012               	goto	l8599
 22199  01AADA                     u7320:
 22200                           
 22201                           ;stkvar	_c @ sp[(-1)+-2]
 22202  01AADA  0EFD               	movlw	-3
 22203  01AADC  50E3               	movf	plusw1,w,c
 22204  01AADE  0FF7               	addlw	247
 22205  01AAE0  6E30               	movwf	(btemp+10)^0,c
 22206  01AAE2  0EFE               	movlw	-2
 22207  01AAE4  006F FF8C  F031    	movff	plusw1,btemp+11
 22208  01AAEA  0EFF               	movlw	255
 22209  01AAEC  2231               	addwfc	(btemp+11)^0,f,c
 22210  01AAEE  5031               	movf	(btemp+11)^0,w,c
 22211  01AAF0  E104               	bnz	u7330
 22212  01AAF2  0E05               	movlw	5
 22213  01AAF4  5C30               	subwf	(btemp+10)^0,w,c
 22214  01AAF6  A0D8               	btfss	status,0,c
 22215  01AAF8  D002               	goto	l8599
 22216  01AAFA                     u7330:
 22217                           
 22218                           ;stkvar	_isspace$6031 @ sp[(-1)+0]
 22219  01AAFA  0EFF               	movlw	-1
 22220  01AAFC  6AE3               	clrf	plusw1,c
 22221  01AAFE                     l8599:
 22222                           
 22223                           ;stkvar	_isspace$6031 @ sp[(-1)+0]
 22224  01AAFE  0EFF               	movlw	-1
 22225  01AB00  50E3               	movf	plusw1,w,c
 22226  01AB02  6E26               	movwf	btemp^0,c
 22227  01AB04  6A27               	clrf	(btemp+1)^0,c
 22228                           
 22229                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22230  01AB06  52E5               	movf	postdec1,f,c
 22231  01AB08  52E5               	movf	postdec1,f,c
 22232  01AB0A  52E5               	movf	postdec1,f,c
 22233  01AB0C  0012               	return		;funcret
 22234  01AB0E                     __end_of_isspace:
 22235                           	opt callstack 0
 22236                           
 22237 ;; *************** function _isdigit *****************
 22238 ;; Defined at:
 22239 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 22240 ;; Parameters:    Size  Location     Type
 22241 ;;  c               2  [STACK] int 
 22242 ;; Auto vars:     Size  Location     Type
 22243 ;;		None
 22244 ;; Return value:  Size  Location     Type
 22245 ;;                  2  [STACK] int 
 22246 ;; Registers used:
 22247 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22248 ;; Tracked objects:
 22249 ;;		On entry : 0/0
 22250 ;;		On exit  : 0/0
 22251 ;;		Unchanged: 0/0
 22252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22257 ;;Total ram usage:        0 bytes
 22258 ;; Hardware stack levels used:    1
 22259 ;; Hardware stack levels required when called:   15
 22260 ;; This function calls:
 22261 ;;		Nothing
 22262 ;; This function is called by:
 22263 ;;		_vfpfcnvrt
 22264 ;;		_atoi
 22265 ;; This function uses a reentrant model
 22266 ;;
 22267                           
 22268                           	psect	text79
 22269  01B170                     __ptext79:
 22270                           	opt callstack 0
 22271  01B170                     _isdigit:
 22272                           	opt callstack 0
 22273                           
 22274                           ;stkvar	_c @ sp[(0)+-2]
 22275                           
 22276                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22277                           ;incstack = 0
 22278 ;; hardware stack exceeded
 22279  01B170  0EFE               	movlw	-2
 22280  01B172  50E3               	movf	plusw1,w,c
 22281  01B174  0FD0               	addlw	208
 22282  01B176  6E30               	movwf	(btemp+10)^0,c
 22283  01B178  0EFF               	movlw	-1
 22284  01B17A  006F FF8C  F031    	movff	plusw1,btemp+11
 22285  01B180  0EFF               	movlw	255
 22286  01B182  2231               	addwfc	(btemp+11)^0,f,c
 22287  01B184  5031               	movf	(btemp+11)^0,w,c
 22288  01B186  E106               	bnz	u6170
 22289  01B188  0E0A               	movlw	10
 22290  01B18A  5C30               	subwf	(btemp+10)^0,w,c
 22291  01B18C  B0D8               	btfsc	status,0,c
 22292  01B18E  D002               	goto	u6170
 22293  01B190  0E01               	movlw	1
 22294  01B192  D001               	goto	u6180
 22295  01B194                     u6170:
 22296  01B194  0E00               	movlw	0
 22297  01B196                     u6180:
 22298  01B196  6E26               	movwf	btemp^0,c
 22299  01B198  6A27               	clrf	(btemp+1)^0,c
 22300                           
 22301                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22302  01B19A  52E5               	movf	postdec1,f,c
 22303  01B19C  52E5               	movf	postdec1,f,c
 22304  01B19E  0012               	return		;funcret
 22305  01B1A0                     __end_of_isdigit:
 22306                           	opt callstack 0
 22307                           
 22308 ;; *************** function _set_vterm *****************
 22309 ;; Defined at:
 22310 ;;		line 107 in file "mconfig.c"
 22311 ;; Parameters:    Size  Location     Type
 22312 ;;  vterm           1  [STACK] const unsigned char 
 22313 ;; Auto vars:     Size  Location     Type
 22314 ;;		None
 22315 ;; Return value:  Size  Location     Type
 22316 ;;                  1  [STACK] unsigned char 
 22317 ;; Registers used:
 22318 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 22319 ;; Tracked objects:
 22320 ;;		On entry : 0/2
 22321 ;;		On exit  : 0/0
 22322 ;;		Unchanged: 0/0
 22323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22328 ;;Total ram usage:        0 bytes
 22329 ;; Hardware stack levels used:    1
 22330 ;; Hardware stack levels required when called:   15
 22331 ;; This function calls:
 22332 ;;		Nothing
 22333 ;; This function is called by:
 22334 ;;		_main
 22335 ;;		_check_help
 22336 ;; This function uses a reentrant model
 22337 ;;
 22338                           
 22339                           	psect	text80
 22340  01B6CE                     __ptext80:
 22341                           	opt callstack 0
 22342  01B6CE                     _set_vterm:
 22343                           	opt callstack 15
 22344                           
 22345                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 22346                           ;stkvar	_vterm @ sp[(0)+-1]
 22347                           
 22348                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22349                           ;incstack = 0
 22350  01B6CE  0EFF               	movlw	-1
 22351  01B6D0  006F FF8C  F031    	movff	plusw1,btemp+11
 22352  01B6D6  0E03               	movlw	3
 22353  01B6D8  1631               	andwf	(btemp+11)^0,f,c
 22354  01B6DA  EE22  F1DF         	lfsr	2,_D+480
 22355  01B6DE  50DF               	movf	223,w,c
 22356  01B6E0  1831               	xorwf	(btemp+11)^0,w,c
 22357  01B6E2  0BFE               	andlw	-2
 22358  01B6E4  1831               	xorwf	(btemp+11)^0,w,c
 22359  01B6E6  6EDF               	movwf	223,c
 22360                           
 22361                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 22362  01B6E8  52E5               	movf	postdec1,f,c
 22363  01B6EA  0012               	return		;funcret
 22364  01B6EC                     __end_of_set_vterm:
 22365                           	opt callstack 0
 22366                           
 22367 ;; *************** function _set_temp_display_help *****************
 22368 ;; Defined at:
 22369 ;;		line 211 in file "mconfig.c"
 22370 ;; Parameters:    Size  Location     Type
 22371 ;;  new_response    1  [STACK] const enum E16509
 22372 ;; Auto vars:     Size  Location     Type
 22373 ;;		None
 22374 ;; Return value:  Size  Location     Type
 22375 ;;                  1  [STACK] enum E16509
 22376 ;; Registers used:
 22377 ;;		wreg, fsr1l, fsr1h
 22378 ;; Tracked objects:
 22379 ;;		On entry : 0/2
 22380 ;;		On exit  : 3F/2
 22381 ;;		Unchanged: 0/0
 22382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22387 ;;Total ram usage:        0 bytes
 22388 ;; Hardware stack levels used:    1
 22389 ;; Hardware stack levels required when called:   15
 22390 ;; This function calls:
 22391 ;;		Nothing
 22392 ;; This function is called by:
 22393 ;;		_check_help
 22394 ;; This function uses a reentrant model
 22395 ;;
 22396                           
 22397                           	psect	text81
 22398  01B84E                     __ptext81:
 22399                           	opt callstack 0
 22400  01B84E                     _set_temp_display_help:
 22401                           	opt callstack 14
 22402                           
 22403                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 22404                           
 22405                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22406                           ;incstack = 0
 22407  01B84E  0102               	movlb	2	; () banked
 22408  01B850  51AC               	movf	(_V+165)& (0+255),w,b	;volatile
 22409                           
 22410                           ; BSR set to: 2
 22411                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 22412                           ;stkvar	_new_response_info @ sp[(0)+-1]
 22413  01B852  0EFF               	movlw	-1
 22414  01B854  006F FF8C  F2AC    	movff	plusw1,_V+165	;volatile
 22415                           
 22416                           ; BSR set to: 2
 22417                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 22418  01B85A  52E5               	movf	postdec1,f,c
 22419  01B85C  0012               	return		;funcret
 22420  01B85E                     __end_of_set_temp_display_help:
 22421                           	opt callstack 0
 22422                           
 22423 ;; *************** function _set_display_info *****************
 22424 ;; Defined at:
 22425 ;;		line 200 in file "mconfig.c"
 22426 ;; Parameters:    Size  Location     Type
 22427 ;;  new_response    1  [STACK] const enum E16509
 22428 ;; Auto vars:     Size  Location     Type
 22429 ;;		None
 22430 ;; Return value:  Size  Location     Type
 22431 ;;                  1  [STACK] enum E16994
 22432 ;; Registers used:
 22433 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22434 ;; Tracked objects:
 22435 ;;		On entry : 0/2
 22436 ;;		On exit  : 0/0
 22437 ;;		Unchanged: 0/0
 22438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22443 ;;Total ram usage:        0 bytes
 22444 ;; Hardware stack levels used:    1
 22445 ;; Hardware stack levels required when called:   16
 22446 ;; This function calls:
 22447 ;;		_TimerDone
 22448 ;; This function is called by:
 22449 ;;		_main
 22450 ;;		_check_help
 22451 ;; This function uses a reentrant model
 22452 ;;
 22453                           
 22454                           	psect	text82
 22455  01B6EC                     __ptext82:
 22456                           	opt callstack 0
 22457  01B6EC                     _set_display_info:
 22458                           	opt callstack 14
 22459                           
 22460                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 22461                           
 22462                           ; BSR set to: 2
 22463                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22464                           ;incstack = 0
 22465  01B6EC  0E07               	movlw	7
 22466  01B6EE  6EE6               	movwf	postinc1,c
 22467  01B6F0  EC93  F0D9         	call	_TimerDone	;wreg free
 22468  01B6F4  5026               	movf	btemp^0,w,c
 22469  01B6F6  B4D8               	btfsc	status,2,c
 22470  01B6F8  D006               	goto	l1722
 22471                           
 22472                           ;mconfig.c: 205:   old_info = V.response.info;
 22473  01B6FA  0102               	movlb	2	; () banked
 22474  01B6FC  51AB               	movf	(_V+164)& (0+255),w,b	;volatile
 22475                           
 22476                           ; BSR set to: 2
 22477                           ;mconfig.c: 206:   V.response.info = new_response_info;
 22478                           ;stkvar	_new_response_info @ sp[(0)+-1]
 22479  01B6FE  0EFF               	movlw	-1
 22480  01B700  006F FF8C  F2AB    	movff	plusw1,_V+164	;volatile
 22481  01B706                     l1722:
 22482                           
 22483                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 22484  01B706  52E5               	movf	postdec1,f,c
 22485  01B708  0012               	return		;funcret
 22486  01B70A                     __end_of_set_display_info:
 22487                           	opt callstack 0
 22488                           
 22489 ;; *************** function _mode_lamp_dim *****************
 22490 ;; Defined at:
 22491 ;;		line 13 in file "mconfig.c"
 22492 ;; Parameters:    Size  Location     Type
 22493 ;;  level           2  [STACK] const unsigned short 
 22494 ;; Auto vars:     Size  Location     Type
 22495 ;;		None
 22496 ;; Return value:  Size  Location     Type
 22497 ;;                  1  [STACK] void 
 22498 ;; Registers used:
 22499 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22500 ;; Tracked objects:
 22501 ;;		On entry : 0/2
 22502 ;;		On exit  : 0/0
 22503 ;;		Unchanged: 0/0
 22504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22509 ;;Total ram usage:        0 bytes
 22510 ;; Hardware stack levels used:    1
 22511 ;; Hardware stack levels required when called:   16
 22512 ;; This function calls:
 22513 ;;		_PWM8_LoadDutyValue
 22514 ;; This function is called by:
 22515 ;;		_main
 22516 ;;		_check_help
 22517 ;; This function uses a reentrant model
 22518 ;;
 22519                           
 22520                           	psect	text83
 22521  01B796                     __ptext83:
 22522                           	opt callstack 0
 22523  01B796                     _mode_lamp_dim:
 22524                           	opt callstack 14
 22525                           
 22526                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 22527                           ;stkvar	_level @ sp[(0)+-2]
 22528                           
 22529                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22530                           ;incstack = 0
 22531  01B796  0EFE               	movlw	-2
 22532  01B798  006F FF8F FFE6     	movff	plusw1,postinc1
 22533  01B79E  006F FF8F FFE6     	movff	plusw1,postinc1
 22534  01B7A4  ECF1  F0D6         	call	_PWM8_LoadDutyValue	;wreg free
 22535                           
 22536                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 22537  01B7A8  52E5               	movf	postdec1,f,c
 22538  01B7AA  52E5               	movf	postdec1,f,c
 22539  01B7AC  0012               	return		;funcret
 22540  01B7AE                     __end_of_mode_lamp_dim:
 22541                           	opt callstack 0
 22542                           
 22543 ;; *************** function _mode_lamp_bright *****************
 22544 ;; Defined at:
 22545 ;;		line 18 in file "mconfig.c"
 22546 ;; Parameters:    Size  Location     Type
 22547 ;;		None
 22548 ;; Auto vars:     Size  Location     Type
 22549 ;;		None
 22550 ;; Return value:  Size  Location     Type
 22551 ;;                  1  [STACK] void 
 22552 ;; Registers used:
 22553 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22554 ;; Tracked objects:
 22555 ;;		On entry : 0/0
 22556 ;;		On exit  : 0/0
 22557 ;;		Unchanged: 0/0
 22558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22563 ;;Total ram usage:        0 bytes
 22564 ;; Hardware stack levels used:    1
 22565 ;; Hardware stack levels required when called:   16
 22566 ;; This function calls:
 22567 ;;		_PWM8_LoadDutyValue
 22568 ;; This function is called by:
 22569 ;;		_check_help
 22570 ;; This function uses a reentrant model
 22571 ;;
 22572                           
 22573                           	psect	text84
 22574  01B87C                     __ptext84:
 22575                           	opt callstack 0
 22576  01B87C                     _mode_lamp_bright:
 22577                           	opt callstack 13
 22578                           
 22579                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 22580                           
 22581                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22582                           ;incstack = 0
 22583  01B87C  0E2C               	movlw	44
 22584  01B87E  6EE6               	movwf	postinc1,c
 22585  01B880  0E01               	movlw	1
 22586  01B882  6EE6               	movwf	postinc1,c
 22587  01B884  ECF1  F0D6         	call	_PWM8_LoadDutyValue	;wreg free
 22588                           
 22589                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22590  01B888  0012               	return		;funcret
 22591  01B88A                     __end_of_mode_lamp_bright:
 22592                           	opt callstack 0
 22593                           
 22594 ;; *************** function _PWM8_LoadDutyValue *****************
 22595 ;; Defined at:
 22596 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 22597 ;; Parameters:    Size  Location     Type
 22598 ;;  dutyValue       2  [STACK] unsigned short 
 22599 ;; Auto vars:     Size  Location     Type
 22600 ;;		None
 22601 ;; Return value:  Size  Location     Type
 22602 ;;                  1  [STACK] void 
 22603 ;; Registers used:
 22604 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22605 ;; Tracked objects:
 22606 ;;		On entry : 0/2
 22607 ;;		On exit  : 0/0
 22608 ;;		Unchanged: 0/0
 22609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22614 ;;Total ram usage:        0 bytes
 22615 ;; Hardware stack levels used:    1
 22616 ;; Hardware stack levels required when called:   15
 22617 ;; This function calls:
 22618 ;;		Nothing
 22619 ;; This function is called by:
 22620 ;;		_mode_lamp_dim
 22621 ;;		_mode_lamp_bright
 22622 ;; This function uses a reentrant model
 22623 ;;
 22624                           
 22625                           	psect	text85
 22626  01ADE2                     __ptext85:
 22627                           	opt callstack 0
 22628  01ADE2                     _PWM8_LoadDutyValue:
 22629                           	opt callstack 14
 22630                           
 22631                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 22632                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22633                           
 22634                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22635                           ;incstack = 0
 22636  01ADE2  0EFE               	movlw	-2
 22637  01ADE4  006F FF8C  F030    	movff	plusw1,btemp+10
 22638  01ADEA  0EFF               	movlw	-1
 22639  01ADEC  006F FF8C  F031    	movff	plusw1,btemp+11
 22640  01ADF2  90D8               	bcf	status,0,c
 22641  01ADF4  3231               	rrcf	(btemp+11)^0,f,c
 22642  01ADF6  3230               	rrcf	(btemp+10)^0,f,c
 22643  01ADF8  90D8               	bcf	status,0,c
 22644  01ADFA  3231               	rrcf	(btemp+11)^0,f,c
 22645  01ADFC  3230               	rrcf	(btemp+10)^0,f,c
 22646  01ADFE  5030               	movf	(btemp+10)^0,w,c
 22647  01AE00  6E61               	movwf	97,c	;volatile
 22648                           
 22649                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 22650                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22651  01AE02  0EFE               	movlw	-2
 22652  01AE04  006F FF8C  F031    	movff	plusw1,btemp+11
 22653  01AE0A  0E03               	movlw	3
 22654  01AE0C  1631               	andwf	(btemp+11)^0,f,c
 22655  01AE0E  0E06               	movlw	6
 22656  01AE10  6E26               	movwf	btemp^0,c
 22657  01AE12                     u9315:
 22658  01AE12  90D8               	bcf	status,0,c
 22659  01AE14  3631               	rlcf	(btemp+11)^0,f,c
 22660  01AE16  2E26               	decfsz	btemp^0,f,c
 22661  01AE18  D7FC               	goto	u9315
 22662  01AE1A  5031               	movf	(btemp+11)^0,w,c
 22663  01AE1C  6E60               	movwf	96,c	;volatile
 22664                           
 22665                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 22666  01AE1E  52E5               	movf	postdec1,f,c
 22667  01AE20  52E5               	movf	postdec1,f,c
 22668  01AE22  0012               	return		;funcret
 22669  01AE24                     __end_of_PWM8_LoadDutyValue:
 22670                           	opt callstack 0
 22671                           
 22672 ;; *************** function _help_button *****************
 22673 ;; Defined at:
 22674 ;;		line 26 in file "mconfig.c"
 22675 ;; Parameters:    Size  Location     Type
 22676 ;;		None
 22677 ;; Auto vars:     Size  Location     Type
 22678 ;;		None
 22679 ;; Return value:  Size  Location     Type
 22680 ;;                  1  [STACK] _Bool 
 22681 ;; Registers used:
 22682 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22683 ;; Tracked objects:
 22684 ;;		On entry : 0/2
 22685 ;;		On exit  : 0/0
 22686 ;;		Unchanged: 0/0
 22687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22692 ;;Total ram usage:        0 bytes
 22693 ;; Hardware stack levels used:    1
 22694 ;; Hardware stack levels required when called:   16
 22695 ;; This function calls:
 22696 ;;		_StartTimer
 22697 ;;		_TimerDone
 22698 ;; This function is called by:
 22699 ;;		_check_help
 22700 ;; This function uses a reentrant model
 22701 ;;
 22702                           
 22703                           	psect	text86
 22704  01AF9C                     __ptext86:
 22705                           	opt callstack 0
 22706  01AF9C                     _help_button:
 22707                           	opt callstack 13
 22708                           
 22709                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 22710                           
 22711                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22712                           ;incstack = 0
 22713  01AF9C  B0CB               	btfsc	203,0,c	;volatile
 22714  01AF9E  D00C               	goto	l1665
 22715                           
 22716                           ;mconfig.c: 29:   V.help = 1;
 22717  01AFA0  0102               	movlb	2	; () banked
 22718  01AFA2  85A2               	bsf	(_V+155)& (0+255),2,b	;volatile
 22719                           
 22720                           ; BSR set to: 2
 22721                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 22722  01AFA4  0E08               	movlw	8
 22723  01AFA6  6EE6               	movwf	postinc1,c
 22724  01AFA8  EC93  F0D9         	call	_TimerDone	;wreg free
 22725  01AFAC  5026               	movf	btemp^0,w,c
 22726  01AFAE  B4D8               	btfsc	status,2,c
 22727  01AFB0  D003               	goto	l1665
 22728                           
 22729                           ;mconfig.c: 31:    return 1;
 22730  01AFB2  0E01               	movlw	1
 22731  01AFB4  6E26               	movwf	btemp^0,c
 22732  01AFB6  0012               	return	
 22733  01AFB8                     l1665:
 22734                           
 22735                           ;mconfig.c: 34:  if (!V.help)
 22736  01AFB8  0102               	movlb	2	; () banked
 22737  01AFBA  B5A2               	btfsc	(_V+155)& (0+255),2,b	;volatile
 22738  01AFBC  D008               	goto	l10327
 22739                           
 22740                           ; BSR set to: 2
 22741                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 22742  01AFBE  0E2C               	movlw	44
 22743  01AFC0  6EE6               	movwf	postinc1,c
 22744  01AFC2  0E01               	movlw	1
 22745  01AFC4  6EE6               	movwf	postinc1,c
 22746  01AFC6  0E08               	movlw	8
 22747  01AFC8  6EE6               	movwf	postinc1,c
 22748  01AFCA  EC12  F0D7         	call	_StartTimer	;wreg free
 22749  01AFCE                     l10327:
 22750                           
 22751                           ;mconfig.c: 37:  return 0;
 22752  01AFCE  0E00               	movlw	0
 22753  01AFD0  6E26               	movwf	btemp^0,c
 22754                           
 22755                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 22756  01AFD2  0012               	return		;funcret
 22757  01AFD4                     __end_of_help_button:
 22758                           	opt callstack 0
 22759                           
 22760 ;; *************** function _TimerDone *****************
 22761 ;; Defined at:
 22762 ;;		line 20 in file "timers.c"
 22763 ;; Parameters:    Size  Location     Type
 22764 ;;  timer           1  [STACK] const unsigned char 
 22765 ;; Auto vars:     Size  Location     Type
 22766 ;;		None
 22767 ;; Return value:  Size  Location     Type
 22768 ;;                  1  [STACK] _Bool 
 22769 ;; Registers used:
 22770 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22771 ;; Tracked objects:
 22772 ;;		On entry : 0/2
 22773 ;;		On exit  : 0/0
 22774 ;;		Unchanged: 0/0
 22775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22780 ;;Total ram usage:        0 bytes
 22781 ;; Hardware stack levels used:    1
 22782 ;; Hardware stack levels required when called:   15
 22783 ;; This function calls:
 22784 ;;		Nothing
 22785 ;; This function is called by:
 22786 ;;		_main
 22787 ;;		_WaitMs
 22788 ;;		_help_button
 22789 ;;		_check_help
 22790 ;;		_set_display_info
 22791 ;;		_update_adc_result
 22792 ;;		_esr_check
 22793 ;; This function uses a reentrant model
 22794 ;;
 22795                           
 22796                           	psect	text87
 22797  01B326                     __ptext87:
 22798                           	opt callstack 0
 22799  01B326                     _TimerDone:
 22800                           	opt callstack 14
 22801                           
 22802                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22803                           ;incstack = 0
 22804  01B326  0004               	clrwdt		;# 
 22805                           
 22806                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 22807                           ;stkvar	_timer @ sp[(0)+-1]
 22808  01B328  0EFF               	movlw	-1
 22809  01B32A  50E3               	movf	plusw1,w,c
 22810  01B32C  0D02               	mullw	2
 22811  01B32E  0E94               	movlw	low _tickCount
 22812  01B330  24F3               	addwf	243,w,c
 22813  01B332  6ED9               	movwf	fsr2l,c
 22814  01B334  0E03               	movlw	high _tickCount
 22815  01B336  20F4               	addwfc	prodh,w,c
 22816  01B338  6EDA               	movwf	fsr2h,c
 22817  01B33A  50DE               	movf	postinc2,w,c
 22818  01B33C  10DE               	iorwf	postinc2,w,c
 22819  01B33E  A4D8               	btfss	status,2,c
 22820  01B340  D002               	goto	l9639
 22821                           
 22822                           ;timers.c: 24:   return 1;
 22823  01B342  0E01               	movlw	1
 22824  01B344  D001               	goto	L27
 22825  01B346                     l9639:
 22826                           
 22827                           ;timers.c: 26:  return 0;
 22828  01B346  0E00               	movlw	0
 22829  01B348                     L27:
 22830  01B348  6E26               	movwf	btemp^0,c
 22831                           
 22832                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 22833  01B34A  52E5               	movf	postdec1,f,c
 22834  01B34C  0012               	return		;funcret
 22835  01B34E                     __end_of_TimerDone:
 22836                           	opt callstack 0
 22837                           
 22838 ;; *************** function _StartTimer *****************
 22839 ;; Defined at:
 22840 ;;		line 12 in file "timers.c"
 22841 ;; Parameters:    Size  Location     Type
 22842 ;;  timer           1  [STACK] const unsigned char 
 22843 ;;  count           2  [STACK] const unsigned short 
 22844 ;; Auto vars:     Size  Location     Type
 22845 ;;		None
 22846 ;; Return value:  Size  Location     Type
 22847 ;;                  1  [STACK] void 
 22848 ;; Registers used:
 22849 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22850 ;; Tracked objects:
 22851 ;;		On entry : 0/0
 22852 ;;		On exit  : 0/0
 22853 ;;		Unchanged: 0/0
 22854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22859 ;;Total ram usage:        0 bytes
 22860 ;; Hardware stack levels used:    1
 22861 ;; Hardware stack levels required when called:   15
 22862 ;; This function calls:
 22863 ;;		Nothing
 22864 ;; This function is called by:
 22865 ;;		_main
 22866 ;;		_WaitMs
 22867 ;;		_help_button
 22868 ;;		_check_help
 22869 ;;		_update_adc_result
 22870 ;;		_calc_bsoc
 22871 ;;		_esr_check
 22872 ;; This function uses a reentrant model
 22873 ;;
 22874                           
 22875                           	psect	text88
 22876  01AE24                     __ptext88:
 22877                           	opt callstack 0
 22878  01AE24                     _StartTimer:
 22879                           	opt callstack 0
 22880                           
 22881                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 22882                           ;stkvar	_count @ sp[(0)+-3]
 22883                           
 22884                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22885                           ;incstack = 0
 22886 ;; hardware stack exceeded
 22887  01AE24  0EFD               	movlw	-3
 22888  01AE26  006F FF8C  F030    	movff	plusw1,btemp+10
 22889  01AE2C  0EFE               	movlw	-2
 22890  01AE2E  006F FF8C  F031    	movff	plusw1,btemp+11
 22891  01AE34  90D8               	bcf	status,0,c
 22892  01AE36  3430               	rlcf	(btemp+10)^0,w,c
 22893  01AE38  6E2E               	movwf	(btemp+8)^0,c
 22894  01AE3A  3431               	rlcf	(btemp+11)^0,w,c
 22895  01AE3C  6E2F               	movwf	(btemp+9)^0,c
 22896                           
 22897                           ;stkvar	_timer @ sp[(0)+-1]
 22898  01AE3E  0EFF               	movlw	-1
 22899  01AE40  50E3               	movf	plusw1,w,c
 22900  01AE42  0D02               	mullw	2
 22901  01AE44  0E94               	movlw	low _tickCount
 22902  01AE46  24F3               	addwf	243,w,c
 22903  01AE48  6ED9               	movwf	fsr2l,c
 22904  01AE4A  0E03               	movlw	high _tickCount
 22905  01AE4C  20F4               	addwfc	prodh,w,c
 22906  01AE4E  6EDA               	movwf	fsr2h,c
 22907  01AE50  0060  F0BB  FFDE   	movff	btemp+8,postinc2
 22908  01AE56  0060  F0BF  FFDD   	movff	btemp+9,postdec2
 22909                           
 22910                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 22911  01AE5C  52E5               	movf	postdec1,f,c
 22912  01AE5E  52E5               	movf	postdec1,f,c
 22913  01AE60  52E5               	movf	postdec1,f,c
 22914  01AE62  0012               	return		;funcret
 22915  01AE64                     __end_of_StartTimer:
 22916                           	opt callstack 0
 22917                           
 22918 ;; *************** function _display_info *****************
 22919 ;; Defined at:
 22920 ;;		line 190 in file "mconfig.c"
 22921 ;; Parameters:    Size  Location     Type
 22922 ;;		None
 22923 ;; Auto vars:     Size  Location     Type
 22924 ;;		None
 22925 ;; Return value:  Size  Location     Type
 22926 ;;                  1  [STACK] enum E16509
 22927 ;; Registers used:
 22928 ;;		btemp
 22929 ;; Tracked objects:
 22930 ;;		On entry : 0/2
 22931 ;;		On exit  : 0/0
 22932 ;;		Unchanged: 0/0
 22933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22938 ;;Total ram usage:        0 bytes
 22939 ;; Hardware stack levels used:    1
 22940 ;; Hardware stack levels required when called:   15
 22941 ;; This function calls:
 22942 ;;		Nothing
 22943 ;; This function is called by:
 22944 ;;		_check_help
 22945 ;; This function uses a reentrant model
 22946 ;;
 22947                           
 22948                           	psect	text89
 22949  01B8FE                     __ptext89:
 22950                           	opt callstack 0
 22951  01B8FE                     _display_info:
 22952                           	opt callstack 14
 22953                           
 22954                           ;mconfig.c: 192:  return V.response.info;
 22955                           
 22956                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22957                           ;incstack = 0
 22958  01B8FE  0060  FAAC  F026   	movff	_V+164,btemp	;volatile
 22959                           
 22960                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 22961  01B904  0012               	return		;funcret
 22962  01B906                     __end_of_display_info:
 22963                           	opt callstack 0
 22964                           
 22965 ;; *************** function _display_help *****************
 22966 ;; Defined at:
 22967 ;;		line 195 in file "mconfig.c"
 22968 ;; Parameters:    Size  Location     Type
 22969 ;;		None
 22970 ;; Auto vars:     Size  Location     Type
 22971 ;;		None
 22972 ;; Return value:  Size  Location     Type
 22973 ;;                  1  [STACK] enum E16509
 22974 ;; Registers used:
 22975 ;;		btemp
 22976 ;; Tracked objects:
 22977 ;;		On entry : 3F/2
 22978 ;;		On exit  : 0/0
 22979 ;;		Unchanged: 0/0
 22980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22985 ;;Total ram usage:        0 bytes
 22986 ;; Hardware stack levels used:    1
 22987 ;; Hardware stack levels required when called:   15
 22988 ;; This function calls:
 22989 ;;		Nothing
 22990 ;; This function is called by:
 22991 ;;		_check_help
 22992 ;; This function uses a reentrant model
 22993 ;;
 22994                           
 22995                           	psect	text90
 22996  01B906                     __ptext90:
 22997                           	opt callstack 0
 22998  01B906                     _display_help:
 22999                           	opt callstack 14
 23000                           
 23001                           ;mconfig.c: 197:  return V.response.help_temp;
 23002                           
 23003                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23004                           ;incstack = 0
 23005  01B906  0060  FAB0  F026   	movff	_V+165,btemp	;volatile
 23006                           
 23007                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 23008  01B90C  0012               	return		;funcret
 23009  01B90E                     __end_of_display_help:
 23010                           	opt callstack 0
 23011                           
 23012 ;; *************** function _check_enter_button *****************
 23013 ;; Defined at:
 23014 ;;		line 42 in file "hid.c"
 23015 ;; Parameters:    Size  Location     Type
 23016 ;;  h               1  [STACK] PTR struct H_data
 23017 ;;		 -> H(7), 
 23018 ;; Auto vars:     Size  Location     Type
 23019 ;;		None
 23020 ;; Return value:  Size  Location     Type
 23021 ;;                  1  [STACK] _Bool 
 23022 ;; Registers used:
 23023 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 23024 ;; Tracked objects:
 23025 ;;		On entry : 0/0
 23026 ;;		On exit  : 0/0
 23027 ;;		Unchanged: 0/0
 23028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23033 ;;Total ram usage:        0 bytes
 23034 ;; Hardware stack levels used:    1
 23035 ;; Hardware stack levels required when called:   15
 23036 ;; This function calls:
 23037 ;;		Nothing
 23038 ;; This function is called by:
 23039 ;;		_main
 23040 ;; This function uses a reentrant model
 23041 ;;
 23042                           
 23043                           	psect	text91
 23044  01AE64                     __ptext91:
 23045                           	opt callstack 0
 23046  01AE64                     _check_enter_button:
 23047                           	opt callstack 15
 23048                           
 23049                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 23050                           ;stkvar	_h @ sp[(0)+-1]
 23051                           
 23052                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23053                           ;incstack = 0
 23054  01AE64  0EFF               	movlw	-1
 23055  01AE66  50E3               	movf	plusw1,w,c
 23056  01AE68  6ED9               	movwf	fsr2l,c
 23057  01AE6A  6ADA               	clrf	fsr2h,c
 23058  01AE6C  0E04               	movlw	4
 23059  01AE6E  26D9               	addwf	fsr2l,f,c
 23060  01AE70  50DF               	movf	indf2,w,c
 23061  01AE72  A4D8               	btfss	status,2,c
 23062  01AE74  D013               	goto	l10909
 23063                           
 23064                           ;stkvar	_h @ sp[(0)+-1]
 23065  01AE76  0EFF               	movlw	-1
 23066  01AE78  50E3               	movf	plusw1,w,c
 23067  01AE7A  6ED9               	movwf	fsr2l,c
 23068  01AE7C  6ADA               	clrf	fsr2h,c
 23069  01AE7E  0E05               	movlw	5
 23070  01AE80  26D9               	addwf	fsr2l,f,c
 23071  01AE82  50DF               	movf	indf2,w,c
 23072  01AE84  A4D8               	btfss	status,2,c
 23073  01AE86  D00A               	goto	l10909
 23074                           
 23075                           ;hid.c: 45:   h->wait_enter = 1;
 23076                           ;stkvar	_h @ sp[(0)+-1]
 23077  01AE88  0EFF               	movlw	-1
 23078  01AE8A  50E3               	movf	plusw1,w,c
 23079  01AE8C  6ED9               	movwf	fsr2l,c
 23080  01AE8E  6ADA               	clrf	fsr2h,c
 23081  01AE90  0E04               	movlw	4
 23082  01AE92  26D9               	addwf	fsr2l,f,c
 23083  01AE94  0E01               	movlw	1
 23084  01AE96  6EDF               	movwf	indf2,c
 23085                           
 23086                           ;hid.c: 46:   return 1;
 23087  01AE98  0E01               	movlw	1
 23088  01AE9A  D001               	goto	L28
 23089  01AE9C                     l10909:
 23090                           
 23091                           ;hid.c: 48:  return 0;
 23092  01AE9C  0E00               	movlw	0
 23093  01AE9E                     L28:
 23094  01AE9E  6E26               	movwf	btemp^0,c
 23095                           
 23096                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 23097  01AEA0  52E5               	movf	postdec1,f,c
 23098  01AEA2  0012               	return		;funcret
 23099  01AEA4                     __end_of_check_enter_button:
 23100                           	opt callstack 0
 23101                           
 23102 ;; *************** function _calc_ror_data *****************
 23103 ;; Defined at:
 23104 ;;		line 101 in file "mbmc.c"
 23105 ;; Parameters:    Size  Location     Type
 23106 ;;		None
 23107 ;; Auto vars:     Size  Location     Type
 23108 ;;		None
 23109 ;; Return value:  Size  Location     Type
 23110 ;;                  1  [STACK] void 
 23111 ;; Registers used:
 23112 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23113 ;; Tracked objects:
 23114 ;;		On entry : 0/39
 23115 ;;		On exit  : 0/0
 23116 ;;		Unchanged: 0/0
 23117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23122 ;;Total ram usage:        0 bytes
 23123 ;; Hardware stack levels used:    1
 23124 ;; Hardware stack levels required when called:   18
 23125 ;; This function calls:
 23126 ;;		___flge
 23127 ;;		___flsub
 23128 ;;		_conv_raw_result
 23129 ;;		_fabsf
 23130 ;; This function is called by:
 23131 ;;		_main
 23132 ;; This function uses a reentrant model
 23133 ;;
 23134                           
 23135                           	psect	text92
 23136  018304                     __ptext92:
 23137                           	opt callstack 0
 23138  018304                     _calc_ror_data:
 23139                           	opt callstack 12
 23140                           
 23141                           ;mbmc.c: 103:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 105:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 23142                           
 23143                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23144                           ;incstack = 0
 23145  018304  0060  F1FB  FFE6   	movff	calc_ror_data@bcror,postinc1
 23146  01830A  0060  F1FF  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 23147  018310  0060  F203  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 23148  018316  0060  F207  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 23149  01831C  0E00               	movlw	0
 23150  01831E  6EE6               	movwf	postinc1,c
 23151  018320  0E00               	movlw	0
 23152  018322  6EE6               	movwf	postinc1,c
 23153  018324  EC95  F0A7         	call	_conv_raw_result	;wreg free
 23154  018328  0060  F09B  FFE6   	movff	btemp,postinc1
 23155  01832E  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23156  018334  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23157  01833A  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23158  018340  EC43  F0D6         	call	___flsub	;wreg free
 23159  018344  0060  F09B  FFE6   	movff	btemp,postinc1
 23160  01834A  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23161  018350  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23162  018356  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23163  01835C  EC28  F0CF         	call	_fabsf	;wreg free
 23164  018360  0060  F098  F16C   	movff	btemp,_C+108	;volatile
 23165  018366  0060  F09C  F16D   	movff	btemp+1,_C+109	;volatile
 23166  01836C  0060  F0A0  F16E   	movff	btemp+2,_C+110	;volatile
 23167  018372  0060  F0A4  F16F   	movff	btemp+3,_C+111	;volatile
 23168                           
 23169                           ;mbmc.c: 106:  bcror = conv_raw_result(C_BATT, CONV);
 23170  018378  0E00               	movlw	0
 23171  01837A  6EE6               	movwf	postinc1,c
 23172  01837C  0E00               	movlw	0
 23173  01837E  6EE6               	movwf	postinc1,c
 23174  018380  EC95  F0A7         	call	_conv_raw_result	;wreg free
 23175  018384  0060  F098  F07E   	movff	btemp,calc_ror_data@bcror
 23176  01838A  0060  F09C  F07F   	movff	btemp+1,calc_ror_data@bcror+1
 23177  018390  0060  F0A0  F080   	movff	btemp+2,calc_ror_data@bcror+2
 23178  018396  0060  F0A4  F081   	movff	btemp+3,calc_ror_data@bcror+3
 23179                           
 23180                           ;mbmc.c: 107:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 23181  01839C  0060  F20B  FFE6   	movff	calc_ror_data@bvror,postinc1
 23182  0183A2  0060  F20F  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 23183  0183A8  0060  F213  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 23184  0183AE  0060  F217  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 23185  0183B4  0E00               	movlw	0
 23186  0183B6  6EE6               	movwf	postinc1,c
 23187  0183B8  0E04               	movlw	4
 23188  0183BA  6EE6               	movwf	postinc1,c
 23189  0183BC  EC95  F0A7         	call	_conv_raw_result	;wreg free
 23190  0183C0  0060  F09B  FFE6   	movff	btemp,postinc1
 23191  0183C6  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23192  0183CC  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23193  0183D2  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23194  0183D8  EC43  F0D6         	call	___flsub	;wreg free
 23195  0183DC  0060  F09B  FFE6   	movff	btemp,postinc1
 23196  0183E2  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23197  0183E8  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23198  0183EE  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23199  0183F4  EC28  F0CF         	call	_fabsf	;wreg free
 23200  0183F8  0060  F098  F168   	movff	btemp,_C+104	;volatile
 23201  0183FE  0060  F09C  F169   	movff	btemp+1,_C+105	;volatile
 23202  018404  0060  F0A0  F16A   	movff	btemp+2,_C+106	;volatile
 23203  01840A  0060  F0A4  F16B   	movff	btemp+3,_C+107	;volatile
 23204                           
 23205                           ;mbmc.c: 108:  if (C.bv_ror < 0.0051)
 23206  018410  0EE7               	movlw	231
 23207  018412  6EE6               	movwf	postinc1,c
 23208  018414  0E1D               	movlw	29
 23209  018416  6EE6               	movwf	postinc1,c
 23210  018418  0EA7               	movlw	167
 23211  01841A  6EE6               	movwf	postinc1,c
 23212  01841C  0E3B               	movlw	59
 23213  01841E  6EE6               	movwf	postinc1,c
 23214  018420  0060  F5A3  FFE6   	movff	_C+104,postinc1
 23215  018426  0060  F5A7  FFE6   	movff	_C+105,postinc1
 23216  01842C  0060  F5AB  FFE6   	movff	_C+106,postinc1
 23217  018432  0060  F5AF  FFE6   	movff	_C+107,postinc1
 23218  018438  ECAD  F0C3         	call	___flge	;wreg free
 23219  01843C  B026               	btfsc	btemp& (0+255),0,c
 23220  01843E  D009               	goto	l10703
 23221                           
 23222                           ;mbmc.c: 109:   C.bv_ror = 0.0140 + 0.0001;
 23223  018440  0EB0               	movlw	176
 23224  018442  0101               	movlb	1	; () banked
 23225  018444  6F68               	movwf	(_C+104)& (0+255),b	;volatile
 23226  018446  0E03               	movlw	3
 23227  018448  6F69               	movwf	(_C+105)& (0+255),b	;volatile
 23228  01844A  0E67               	movlw	103
 23229  01844C  6F6A               	movwf	(_C+106)& (0+255),b	;volatile
 23230  01844E  0E3C               	movlw	60
 23231  018450  6F6B               	movwf	(_C+107)& (0+255),b	;volatile
 23232  018452                     l10703:
 23233                           
 23234                           ;mbmc.c: 110:  bvror = conv_raw_result(V_BAT, CONV);
 23235  018452  0E00               	movlw	0
 23236  018454  6EE6               	movwf	postinc1,c
 23237  018456  0E04               	movlw	4
 23238  018458  6EE6               	movwf	postinc1,c
 23239  01845A  EC95  F0A7         	call	_conv_raw_result	;wreg free
 23240  01845E  0060  F098  F082   	movff	btemp,calc_ror_data@bvror
 23241  018464  0060  F09C  F083   	movff	btemp+1,calc_ror_data@bvror+1
 23242  01846A  0060  F0A0  F084   	movff	btemp+2,calc_ror_data@bvror+2
 23243  018470  0060  F0A4  F085   	movff	btemp+3,calc_ror_data@bvror+3
 23244                           
 23245                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 23246  018476  0012               	return		;funcret
 23247  018478                     __end_of_calc_ror_data:
 23248                           	opt callstack 0
 23249                           
 23250 ;; *************** function _fabsf *****************
 23251 ;; Defined at:
 23252 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 23253 ;; Parameters:    Size  Location     Type
 23254 ;;  x               4  [STACK] float 
 23255 ;; Auto vars:     Size  Location     Type
 23256 ;;  u               4  [STACK] struct .
 23257 ;; Return value:  Size  Location     Type
 23258 ;;                  4  [STACK] float 
 23259 ;; Registers used:
 23260 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 23261 ;; Tracked objects:
 23262 ;;		On entry : 0/0
 23263 ;;		On exit  : 0/0
 23264 ;;		Unchanged: 0/0
 23265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23270 ;;Total ram usage:        0 bytes
 23271 ;; Hardware stack levels used:    1
 23272 ;; Hardware stack levels required when called:   15
 23273 ;; This function calls:
 23274 ;;		Nothing
 23275 ;; This function is called by:
 23276 ;;		_main
 23277 ;;		_calc_ror_data
 23278 ;;		_calc_bsoc
 23279 ;;		_esr_check
 23280 ;; This function uses a reentrant model
 23281 ;;
 23282                           
 23283                           	psect	text93
 23284  019E50                     __ptext93:
 23285                           	opt callstack 0
 23286  019E50                     _fabsf:
 23287                           	opt callstack 0
 23288                           
 23289                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23290  019E50  52E6               	movf	postinc1,f,c
 23291  019E52  52E6               	movf	postinc1,f,c
 23292  019E54  52E6               	movf	postinc1,f,c
 23293  019E56  52E6               	movf	postinc1,f,c
 23294                           
 23295                           ;incstack = 0
 23296 ;; hardware stack exceeded
 23297  019E58  0060  F1D8  F02E   	movff	fabsf@F463,btemp+8
 23298  019E5E  0060  F1DC  F02F   	movff	fabsf@F463+1,btemp+9
 23299  019E64  0060  F1E0  F030   	movff	fabsf@F463+2,btemp+10
 23300  019E6A  0060  F1E4  F031   	movff	fabsf@F463+3,btemp+11
 23301                           
 23302                           ;stkvar	_u @ sp[(-4)+0]
 23303  019E70  0EFC               	movlw	-4
 23304  019E72  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 23305  019E78  0EFD               	movlw	-3
 23306  019E7A  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 23307  019E80  0EFE               	movlw	-2
 23308  019E82  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 23309  019E88  0EFF               	movlw	-1
 23310  019E8A  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 23311                           
 23312                           ;stkvar	_x @ sp[(-4)+-4]
 23313  019E90  0EF8               	movlw	-8
 23314  019E92  006F FF8C  F02E    	movff	plusw1,btemp+8
 23315  019E98  0EF9               	movlw	-7
 23316  019E9A  006F FF8C  F02F    	movff	plusw1,btemp+9
 23317  019EA0  0EFA               	movlw	-6
 23318  019EA2  006F FF8C  F030    	movff	plusw1,btemp+10
 23319  019EA8  0EFB               	movlw	-5
 23320  019EAA  006F FF8C  F031    	movff	plusw1,btemp+11
 23321                           
 23322                           ;stkvar	_u @ sp[(-4)+0]
 23323  019EB0  0EFC               	movlw	-4
 23324  019EB2  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 23325  019EB8  0EFD               	movlw	-3
 23326  019EBA  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 23327  019EC0  0EFE               	movlw	-2
 23328  019EC2  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 23329  019EC8  0EFF               	movlw	-1
 23330  019ECA  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 23331                           
 23332                           ;stkvar	_u @ sp[(-4)+0]
 23333  019ED0  0EFF               	movlw	-1
 23334  019ED2  9EE3               	bcf	plusw1,7,c
 23335                           
 23336                           ;stkvar	_u @ sp[(-4)+0]
 23337  019ED4  0EFC               	movlw	-4
 23338  019ED6  006F FF8C  F026    	movff	plusw1,btemp
 23339  019EDC  0EFD               	movlw	-3
 23340  019EDE  006F FF8C  F027    	movff	plusw1,btemp+1
 23341  019EE4  0EFE               	movlw	-2
 23342  019EE6  006F FF8C  F028    	movff	plusw1,btemp+2
 23343  019EEC  0EFF               	movlw	-1
 23344  019EEE  006F FF8C  F029    	movff	plusw1,btemp+3
 23345                           
 23346                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 23347  019EF4  0EF8               	movlw	248
 23348  019EF6  26E1               	addwf	fsr1l,f,c
 23349  019EF8  0EFF               	movlw	255
 23350  019EFA  22E2               	addwfc	fsr1h,f,c
 23351  019EFC  0012               	return		;funcret
 23352  019EFE                     __end_of_fabsf:
 23353                           	opt callstack 0
 23354                           
 23355 ;; *************** function _conv_raw_result *****************
 23356 ;; Defined at:
 23357 ;;		line 95 in file "daq.c"
 23358 ;; Parameters:    Size  Location     Type
 23359 ;;  chan            1  [STACK] const enum E16582
 23360 ;;  to_what         1  [STACK] const enum E16644
 23361 ;; Auto vars:     Size  Location     Type
 23362 ;;		None
 23363 ;; Return value:  Size  Location     Type
 23364 ;;                  4  [STACK] float 
 23365 ;; Registers used:
 23366 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23367 ;; Tracked objects:
 23368 ;;		On entry : 0/39
 23369 ;;		On exit  : 0/0
 23370 ;;		Unchanged: 0/0
 23371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23376 ;;Total ram usage:        0 bytes
 23377 ;; Hardware stack levels used:    1
 23378 ;; Hardware stack levels required when called:   17
 23379 ;; This function calls:
 23380 ;;		___fldiv
 23381 ;;		___flmul
 23382 ;;		___flsub
 23383 ;;		___xxtofl
 23384 ;;		_get_raw_result
 23385 ;;		_nanf
 23386 ;; This function is called by:
 23387 ;;		_main
 23388 ;;		_convert_adc_data
 23389 ;;		_calc_ror_data
 23390 ;;		_check_day_time
 23391 ;;		_init_bsoc
 23392 ;;		_esr_check
 23393 ;; This function uses a reentrant model
 23394 ;;
 23395                           
 23396                           	psect	text94
 23397  014F2A                     __ptext94:
 23398                           	opt callstack 0
 23399  014F2A                     _conv_raw_result:
 23400                           	opt callstack 0
 23401                           
 23402                           ;daq.c: 95: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 96: {;daq.c: 98:  switch (to_what) {
 23403                           
 23404                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23405                           ;incstack = 0
 23406 ;; hardware stack exceeded
 23407  014F2A  D242               	goto	l9621
 23408  014F2C                     l9567:
 23409                           
 23410                           ;daq.c: 100:   if (!(0b0011110001110111 >> chan & 0x1))
 23411                           ;stkvar	_chan @ sp[(0)+-1]
 23412  014F2C  0EFF               	movlw	-1
 23413  014F2E  006F FF8C  F031    	movff	plusw1,btemp+11
 23414  014F34  0E77               	movlw	119
 23415  014F36  6E2E               	movwf	(btemp+8)^0,c
 23416  014F38  0E3C               	movlw	60
 23417  014F3A  6E2F               	movwf	(btemp+9)^0,c
 23418  014F3C  2A31               	incf	(btemp+11)^0,f,c
 23419  014F3E  D003               	goto	u9034
 23420  014F40                     u9035:
 23421  014F40  342F               	rlcf	(btemp+9)^0,w,c
 23422  014F42  322F               	rrcf	(btemp+9)^0,f,c
 23423  014F44  322E               	rrcf	(btemp+8)^0,f,c
 23424  014F46                     u9034:
 23425  014F46  2E31               	decfsz	(btemp+11)^0,f,c
 23426  014F48  D7FB               	goto	u9035
 23427  014F4A  B02E               	btfsc	(btemp+8)^0,0,c
 23428  014F4C  D007               	goto	l9573
 23429                           
 23430                           ;daq.c: 101:    return nanf("");
 23431  014F4E  0EB9               	movlw	low (STR_65+84)
 23432  014F50  6EE6               	movwf	postinc1,c
 23433  014F52  0EFC               	movlw	high (STR_65+84)
 23434  014F54  6EE6               	movwf	postinc1,c
 23435  014F56  EC7B  F0D4         	call	_nanf	;wreg free
 23436  014F5A  D23A               	goto	l1784
 23437  014F5C                     l9573:
 23438                           
 23439                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1) {
 23440                           ;stkvar	_chan @ sp[(0)+-1]
 23441  014F5C  0EFF               	movlw	-1
 23442  014F5E  006F FF8C  F031    	movff	plusw1,btemp+11
 23443  014F64  0E03               	movlw	3
 23444  014F66  6E2E               	movwf	(btemp+8)^0,c
 23445  014F68  0E00               	movlw	0
 23446  014F6A  6E2F               	movwf	(btemp+9)^0,c
 23447  014F6C  2A31               	incf	(btemp+11)^0,f,c
 23448  014F6E  D003               	goto	u9054
 23449  014F70                     u9055:
 23450  014F70  342F               	rlcf	(btemp+9)^0,w,c
 23451  014F72  322F               	rrcf	(btemp+9)^0,f,c
 23452  014F74  322E               	rrcf	(btemp+8)^0,f,c
 23453  014F76                     u9054:
 23454  014F76  2E31               	decfsz	(btemp+11)^0,f,c
 23455  014F78  D7FB               	goto	u9055
 23456  014F7A  A02E               	btfss	(btemp+8)^0,0,c
 23457  014F7C  D0EB               	goto	l9587
 23458                           
 23459                           ;daq.c: 104:    if (0b0000000000000001 >> chan & 0x1) {
 23460                           ;stkvar	_chan @ sp[(0)+-1]
 23461  014F7E  0EFF               	movlw	-1
 23462  014F80  006F FF8C  F031    	movff	plusw1,btemp+11
 23463  014F86  0E01               	movlw	1
 23464  014F88  6E2E               	movwf	(btemp+8)^0,c
 23465  014F8A  0E00               	movlw	0
 23466  014F8C  6E2F               	movwf	(btemp+9)^0,c
 23467  014F8E  2A31               	incf	(btemp+11)^0,f,c
 23468  014F90  D003               	goto	u9074
 23469  014F92                     u9075:
 23470  014F92  342F               	rlcf	(btemp+9)^0,w,c
 23471  014F94  322F               	rrcf	(btemp+9)^0,f,c
 23472  014F96  322E               	rrcf	(btemp+8)^0,f,c
 23473  014F98                     u9074:
 23474  014F98  2E31               	decfsz	(btemp+11)^0,f,c
 23475  014F9A  D7FB               	goto	u9075
 23476  014F9C  A02E               	btfss	(btemp+8)^0,0,c
 23477  014F9E  D06D               	goto	l9583
 23478                           
 23479                           ;daq.c: 105:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.0850
      +                          000;
 23480  014FA0  0E7B               	movlw	123
 23481  014FA2  6EE6               	movwf	postinc1,c
 23482  014FA4  0E14               	movlw	20
 23483  014FA6  6EE6               	movwf	postinc1,c
 23484  014FA8  0EAE               	movlw	174
 23485  014FAA  6EE6               	movwf	postinc1,c
 23486  014FAC  0E3D               	movlw	61
 23487  014FAE  6EE6               	movwf	postinc1,c
 23488  014FB0  0060  F344  F02E   	movff	_R+32,btemp+8	;volatile
 23489  014FB6  0060  F348  F02F   	movff	_R+33,btemp+9	;volatile
 23490  014FBC  0E00               	movlw	0
 23491  014FBE  BE2F               	btfsc	(btemp+9)^0,7,c
 23492  014FC0  0EFF               	movlw	255
 23493  014FC2  6E30               	movwf	(btemp+10)^0,c
 23494  014FC4  6E31               	movwf	(btemp+11)^0,c
 23495  014FC6  0060  F0BB  FFE6   	movff	btemp+8,postinc1
 23496  014FCC  0060  F0BF  FFE6   	movff	btemp+9,postinc1
 23497  014FD2  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 23498  014FD8  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 23499  014FDE  0E01               	movlw	1
 23500  014FE0  6EE6               	movwf	postinc1,c
 23501  014FE2  EC17  F0BD         	call	___xxtofl	;wreg free
 23502  014FE6  0060  F09B  FFE6   	movff	btemp,postinc1
 23503  014FEC  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23504  014FF2  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23505  014FF8  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23506                           
 23507                           ;stkvar	_chan @ sp[(-8)+-1]
 23508  014FFE  0EF7               	movlw	-9
 23509  015000  50E3               	movf	plusw1,w,c
 23510  015002  6EE6               	movwf	postinc1,c
 23511  015004  EC85  F0DB         	call	_get_raw_result	;wreg free
 23512  015008  0060  F098  F030   	movff	btemp,btemp+10
 23513  01500E  0060  F09C  F031   	movff	btemp+1,btemp+11
 23514  015014  5030               	movf	(btemp+10)^0,w,c
 23515  015016  6E2A               	movwf	(btemp+4)^0,c
 23516  015018  5031               	movf	(btemp+11)^0,w,c
 23517  01501A  6E2B               	movwf	(btemp+5)^0,c
 23518  01501C  6A2C               	clrf	(btemp+6)^0,c
 23519  01501E  6A2D               	clrf	(btemp+7)^0,c
 23520  015020  0060  F0AB  FFE6   	movff	btemp+4,postinc1
 23521  015026  0060  F0AF  FFE6   	movff	btemp+5,postinc1
 23522  01502C  0060  F0B3  FFE6   	movff	btemp+6,postinc1
 23523  015032  0060  F0B7  FFE6   	movff	btemp+7,postinc1
 23524  015038  0E00               	movlw	0
 23525  01503A  6EE6               	movwf	postinc1,c
 23526  01503C  EC17  F0BD         	call	___xxtofl	;wreg free
 23527  015040  0060  F09B  FFE6   	movff	btemp,postinc1
 23528  015046  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23529  01504C  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23530  015052  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23531  015058  EC43  F0D6         	call	___flsub	;wreg free
 23532  01505C  0060  F09B  FFE6   	movff	btemp,postinc1
 23533  015062  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23534  015068  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23535  01506E  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23536  015074  EC44  F099         	call	___flmul	;wreg free
 23537  015078  D1AB               	goto	l1784
 23538  01507A                     l9583:
 23539                           
 23540                           ;daq.c: 107:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.0350
      +                          000;
 23541  01507A  0E29               	movlw	41
 23542  01507C  6EE6               	movwf	postinc1,c
 23543  01507E  0E5C               	movlw	92
 23544  015080  6EE6               	movwf	postinc1,c
 23545  015082  0E0F               	movlw	15
 23546  015084  6EE6               	movwf	postinc1,c
 23547  015086  0E3D               	movlw	61
 23548  015088  6EE6               	movwf	postinc1,c
 23549  01508A  0060  F34C  F02E   	movff	_R+34,btemp+8	;volatile
 23550  015090  0060  F350  F02F   	movff	_R+35,btemp+9	;volatile
 23551  015096  0E00               	movlw	0
 23552  015098  BE2F               	btfsc	(btemp+9)^0,7,c
 23553  01509A  0EFF               	movlw	255
 23554  01509C  6E30               	movwf	(btemp+10)^0,c
 23555  01509E  6E31               	movwf	(btemp+11)^0,c
 23556  0150A0  0060  F0BB  FFE6   	movff	btemp+8,postinc1
 23557  0150A6  0060  F0BF  FFE6   	movff	btemp+9,postinc1
 23558  0150AC  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 23559  0150B2  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 23560  0150B8  0E01               	movlw	1
 23561  0150BA  6EE6               	movwf	postinc1,c
 23562  0150BC  EC17  F0BD         	call	___xxtofl	;wreg free
 23563  0150C0  0060  F09B  FFE6   	movff	btemp,postinc1
 23564  0150C6  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23565  0150CC  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23566  0150D2  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23567                           
 23568                           ;stkvar	_chan @ sp[(-8)+-1]
 23569  0150D8  0EF7               	movlw	-9
 23570  0150DA  50E3               	movf	plusw1,w,c
 23571  0150DC  6EE6               	movwf	postinc1,c
 23572  0150DE  EC85  F0DB         	call	_get_raw_result	;wreg free
 23573  0150E2  0060  F098  F030   	movff	btemp,btemp+10
 23574  0150E8  0060  F09C  F031   	movff	btemp+1,btemp+11
 23575  0150EE  5030               	movf	(btemp+10)^0,w,c
 23576  0150F0  6E2A               	movwf	(btemp+4)^0,c
 23577  0150F2  5031               	movf	(btemp+11)^0,w,c
 23578  0150F4  6E2B               	movwf	(btemp+5)^0,c
 23579  0150F6  6A2C               	clrf	(btemp+6)^0,c
 23580  0150F8  6A2D               	clrf	(btemp+7)^0,c
 23581  0150FA  0060  F0AB  FFE6   	movff	btemp+4,postinc1
 23582  015100  0060  F0AF  FFE6   	movff	btemp+5,postinc1
 23583  015106  0060  F0B3  FFE6   	movff	btemp+6,postinc1
 23584  01510C  0060  F0B7  FFE6   	movff	btemp+7,postinc1
 23585  015112  0E00               	movlw	0
 23586  015114  6EE6               	movwf	postinc1,c
 23587  015116  EC17  F0BD         	call	___xxtofl	;wreg free
 23588  01511A  0060  F09B  FFE6   	movff	btemp,postinc1
 23589  015120  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23590  015126  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23591  01512C  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23592  015132  EC43  F0D6         	call	___flsub	;wreg free
 23593  015136  0060  F09B  FFE6   	movff	btemp,postinc1
 23594  01513C  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23595  015142  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23596  015148  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23597  01514E  EC44  F099         	call	___flmul	;wreg free
 23598  015152  D13E               	goto	l1784
 23599  015154                     l9587:
 23600                           
 23601                           ;daq.c: 110:    if (0b0000100000000000 >> chan & 0x1) {
 23602                           ;stkvar	_chan @ sp[(0)+-1]
 23603  015154  0EFF               	movlw	-1
 23604  015156  006F FF8C  F031    	movff	plusw1,btemp+11
 23605  01515C  0E00               	movlw	0
 23606  01515E  6E2E               	movwf	(btemp+8)^0,c
 23607  015160  0E08               	movlw	8
 23608  015162  6E2F               	movwf	(btemp+9)^0,c
 23609  015164  2A31               	incf	(btemp+11)^0,f,c
 23610  015166  D003               	goto	u9094
 23611  015168                     u9095:
 23612  015168  342F               	rlcf	(btemp+9)^0,w,c
 23613  01516A  322F               	rrcf	(btemp+9)^0,f,c
 23614  01516C  322E               	rrcf	(btemp+8)^0,f,c
 23615  01516E                     u9094:
 23616  01516E  2E31               	decfsz	(btemp+11)^0,f,c
 23617  015170  D7FB               	goto	u9095
 23618  015172  A02E               	btfss	(btemp+8)^0,0,c
 23619  015174  D008               	goto	l9595
 23620                           
 23621                           ;daq.c: 111:     return 25.0;
 23622  015176  0E00               	movlw	0
 23623  015178  6E26               	movwf	btemp^0,c
 23624  01517A  0E00               	movlw	0
 23625  01517C  6E27               	movwf	(btemp+1)^0,c
 23626  01517E  0EC8               	movlw	200
 23627  015180  6E28               	movwf	(btemp+2)^0,c
 23628  015182  0E41               	movlw	65
 23629  015184  D113               	goto	L29
 23630  015186                     l9595:
 23631                           
 23632                           ;daq.c: 113:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 23633  015186  0E00               	movlw	0
 23634  015188  6EE6               	movwf	postinc1,c
 23635  01518A  0E00               	movlw	0
 23636  01518C  6EE6               	movwf	postinc1,c
 23637  01518E  0E7A               	movlw	122
 23638  015190  6EE6               	movwf	postinc1,c
 23639  015192  0E44               	movlw	68
 23640  015194  6EE6               	movwf	postinc1,c
 23641  015196  0E61               	movlw	97
 23642  015198  6EE6               	movwf	postinc1,c
 23643  01519A  0E03               	movlw	3
 23644  01519C  6EE6               	movwf	postinc1,c
 23645  01519E  0E84               	movlw	132
 23646  0151A0  6EE6               	movwf	postinc1,c
 23647  0151A2  0E40               	movlw	64
 23648  0151A4  6EE6               	movwf	postinc1,c
 23649                           
 23650                           ;stkvar	_chan @ sp[(-8)+-1]
 23651  0151A6  0EF7               	movlw	-9
 23652  0151A8  50E3               	movf	plusw1,w,c
 23653  0151AA  6EE6               	movwf	postinc1,c
 23654  0151AC  EC85  F0DB         	call	_get_raw_result	;wreg free
 23655  0151B0  0060  F098  F030   	movff	btemp,btemp+10
 23656  0151B6  0060  F09C  F031   	movff	btemp+1,btemp+11
 23657  0151BC  5030               	movf	(btemp+10)^0,w,c
 23658  0151BE  6E2A               	movwf	(btemp+4)^0,c
 23659  0151C0  5031               	movf	(btemp+11)^0,w,c
 23660  0151C2  6E2B               	movwf	(btemp+5)^0,c
 23661  0151C4  6A2C               	clrf	(btemp+6)^0,c
 23662  0151C6  6A2D               	clrf	(btemp+7)^0,c
 23663  0151C8  0060  F0AB  FFE6   	movff	btemp+4,postinc1
 23664  0151CE  0060  F0AF  FFE6   	movff	btemp+5,postinc1
 23665  0151D4  0060  F0B3  FFE6   	movff	btemp+6,postinc1
 23666  0151DA  0060  F0B7  FFE6   	movff	btemp+7,postinc1
 23667  0151E0  0E00               	movlw	0
 23668  0151E2  6EE6               	movwf	postinc1,c
 23669  0151E4  EC17  F0BD         	call	___xxtofl	;wreg free
 23670  0151E8  0060  F09B  FFE6   	movff	btemp,postinc1
 23671  0151EE  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23672  0151F4  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23673  0151FA  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23674  015200  EC44  F099         	call	___flmul	;wreg free
 23675  015204  0060  F09B  FFE6   	movff	btemp,postinc1
 23676  01520A  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23677  015210  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23678  015216  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23679  01521C  ECD8  F0A4         	call	___fldiv	;wreg free
 23680  015220  D0D7               	goto	l1784
 23681  015222                     l9599:
 23682                           
 23683                           ;daq.c: 118:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 23684                           ;stkvar	_chan @ sp[(0)+-1]
 23685  015222  0EFF               	movlw	-1
 23686  015224  006F FF8C  F031    	movff	plusw1,btemp+11
 23687  01522A  0E03               	movlw	3
 23688  01522C  6E2E               	movwf	(btemp+8)^0,c
 23689  01522E  0E00               	movlw	0
 23690  015230  6E2F               	movwf	(btemp+9)^0,c
 23691  015232  2A31               	incf	(btemp+11)^0,f,c
 23692  015234  D003               	goto	u9114
 23693  015236                     u9115:
 23694  015236  342F               	rlcf	(btemp+9)^0,w,c
 23695  015238  322F               	rrcf	(btemp+9)^0,f,c
 23696  01523A  322E               	rrcf	(btemp+8)^0,f,c
 23697  01523C                     u9114:
 23698  01523C  2E31               	decfsz	(btemp+11)^0,f,c
 23699  01523E  D7FB               	goto	u9115
 23700  015240  B02E               	btfsc	(btemp+8)^0,0,c
 23701  015242  D011               	goto	u9140
 23702                           
 23703                           ;stkvar	_chan @ sp[(0)+-1]
 23704  015244  0EFF               	movlw	-1
 23705  015246  006F FF8C  F031    	movff	plusw1,btemp+11
 23706  01524C  0E00               	movlw	0
 23707  01524E  6E2E               	movwf	(btemp+8)^0,c
 23708  015250  0E08               	movlw	8
 23709  015252  6E2F               	movwf	(btemp+9)^0,c
 23710  015254  2A31               	incf	(btemp+11)^0,f,c
 23711  015256  D003               	goto	u9134
 23712  015258                     u9135:
 23713  015258  342F               	rlcf	(btemp+9)^0,w,c
 23714  01525A  322F               	rrcf	(btemp+9)^0,f,c
 23715  01525C  322E               	rrcf	(btemp+8)^0,f,c
 23716  01525E                     u9134:
 23717  01525E  2E31               	decfsz	(btemp+11)^0,f,c
 23718  015260  D7FB               	goto	u9135
 23719  015262  A02E               	btfss	(btemp+8)^0,0,c
 23720  015264  D04E               	goto	l9607
 23721  015266                     u9140:
 23722                           
 23723                           ;daq.c: 119:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 23724  015266  0E00               	movlw	0
 23725  015268  6EE6               	movwf	postinc1,c
 23726  01526A  0E00               	movlw	0
 23727  01526C  6EE6               	movwf	postinc1,c
 23728  01526E  0E7A               	movlw	122
 23729  015270  6EE6               	movwf	postinc1,c
 23730  015272  0E44               	movlw	68
 23731  015274  6EE6               	movwf	postinc1,c
 23732  015276  0E00               	movlw	0
 23733  015278  6EE6               	movwf	postinc1,c
 23734  01527A  0E00               	movlw	0
 23735  01527C  6EE6               	movwf	postinc1,c
 23736  01527E  0E20               	movlw	32
 23737  015280  6EE6               	movwf	postinc1,c
 23738  015282  0E3F               	movlw	63
 23739  015284  6EE6               	movwf	postinc1,c
 23740                           
 23741                           ;stkvar	_chan @ sp[(-8)+-1]
 23742  015286  0EF7               	movlw	-9
 23743  015288  50E3               	movf	plusw1,w,c
 23744  01528A  6EE6               	movwf	postinc1,c
 23745  01528C  EC85  F0DB         	call	_get_raw_result	;wreg free
 23746  015290  0060  F098  F030   	movff	btemp,btemp+10
 23747  015296  0060  F09C  F031   	movff	btemp+1,btemp+11
 23748  01529C  5030               	movf	(btemp+10)^0,w,c
 23749  01529E  6E2A               	movwf	(btemp+4)^0,c
 23750  0152A0  5031               	movf	(btemp+11)^0,w,c
 23751  0152A2  6E2B               	movwf	(btemp+5)^0,c
 23752  0152A4  6A2C               	clrf	(btemp+6)^0,c
 23753  0152A6  6A2D               	clrf	(btemp+7)^0,c
 23754  0152A8  0060  F0AB  FFE6   	movff	btemp+4,postinc1
 23755  0152AE  0060  F0AF  FFE6   	movff	btemp+5,postinc1
 23756  0152B4  0060  F0B3  FFE6   	movff	btemp+6,postinc1
 23757  0152BA  0060  F0B7  FFE6   	movff	btemp+7,postinc1
 23758  0152C0  0E00               	movlw	0
 23759  0152C2  6EE6               	movwf	postinc1,c
 23760  0152C4  EC17  F0BD         	call	___xxtofl	;wreg free
 23761  0152C8  0060  F09B  FFE6   	movff	btemp,postinc1
 23762  0152CE  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23763  0152D4  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23764  0152DA  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23765  0152E0  EC44  F099         	call	___flmul	;wreg free
 23766  0152E4  0060  F09B  FFE6   	movff	btemp,postinc1
 23767  0152EA  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23768  0152F0  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23769  0152F6  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23770  0152FC  ECD8  F0A4         	call	___fldiv	;wreg free
 23771  015300  D067               	goto	l1784
 23772  015302                     l9607:
 23773                           
 23774                           ;daq.c: 121:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 23775  015302  0E00               	movlw	0
 23776  015304  6EE6               	movwf	postinc1,c
 23777  015306  0E00               	movlw	0
 23778  015308  6EE6               	movwf	postinc1,c
 23779  01530A  0E7A               	movlw	122
 23780  01530C  6EE6               	movwf	postinc1,c
 23781  01530E  0E44               	movlw	68
 23782  015310  6EE6               	movwf	postinc1,c
 23783  015312  0E61               	movlw	97
 23784  015314  6EE6               	movwf	postinc1,c
 23785  015316  0E03               	movlw	3
 23786  015318  6EE6               	movwf	postinc1,c
 23787  01531A  0E84               	movlw	132
 23788  01531C  6EE6               	movwf	postinc1,c
 23789  01531E  0E40               	movlw	64
 23790  015320  6EE6               	movwf	postinc1,c
 23791                           
 23792                           ;stkvar	_chan @ sp[(-8)+-1]
 23793  015322  0EF7               	movlw	-9
 23794  015324  50E3               	movf	plusw1,w,c
 23795  015326  6EE6               	movwf	postinc1,c
 23796  015328  EC85  F0DB         	call	_get_raw_result	;wreg free
 23797  01532C  0060  F098  F030   	movff	btemp,btemp+10
 23798  015332  0060  F09C  F031   	movff	btemp+1,btemp+11
 23799  015338  5030               	movf	(btemp+10)^0,w,c
 23800  01533A  6E2A               	movwf	(btemp+4)^0,c
 23801  01533C  5031               	movf	(btemp+11)^0,w,c
 23802  01533E  6E2B               	movwf	(btemp+5)^0,c
 23803  015340  6A2C               	clrf	(btemp+6)^0,c
 23804  015342  6A2D               	clrf	(btemp+7)^0,c
 23805  015344  0060  F0AB  FFE6   	movff	btemp+4,postinc1
 23806  01534A  0060  F0AF  FFE6   	movff	btemp+5,postinc1
 23807  015350  0060  F0B3  FFE6   	movff	btemp+6,postinc1
 23808  015356  0060  F0B7  FFE6   	movff	btemp+7,postinc1
 23809  01535C  0E00               	movlw	0
 23810  01535E  6EE6               	movwf	postinc1,c
 23811  015360  EC17  F0BD         	call	___xxtofl	;wreg free
 23812  015364  0060  F09B  FFE6   	movff	btemp,postinc1
 23813  01536A  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23814  015370  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23815  015376  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23816  01537C  EC44  F099         	call	___flmul	;wreg free
 23817  015380  0060  F09B  FFE6   	movff	btemp,postinc1
 23818  015386  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23819  01538C  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23820  015392  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23821  015398  ECD8  F0A4         	call	___fldiv	;wreg free
 23822  01539C  D019               	goto	l1784
 23823  01539E                     l9613:
 23824                           
 23825                           ;daq.c: 124:   return 0.0;
 23826  01539E  0E00               	movlw	0
 23827  0153A0  6E26               	movwf	btemp^0,c
 23828  0153A2  0E00               	movlw	0
 23829  0153A4  6E27               	movwf	(btemp+1)^0,c
 23830  0153A6  0E00               	movlw	0
 23831  0153A8  6E28               	movwf	(btemp+2)^0,c
 23832  0153AA  0E00               	movlw	0
 23833  0153AC                     L29:
 23834  0153AC  6E29               	movwf	(btemp+3)^0,c
 23835  0153AE  D010               	goto	l1784
 23836  0153B0                     l9621:
 23837                           
 23838                           ;stkvar	_to_what @ sp[(0)+-2]
 23839  0153B0  0EFE               	movlw	-2
 23840  0153B2  50E3               	movf	plusw1,w,c
 23841  0153B4  6E30               	movwf	(btemp+10)^0,c
 23842  0153B6  6A31               	clrf	(btemp+11)^0,c
 23843                           
 23844                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23845                           ; Switch size 1, requested type "simple"
 23846                           ; Number of cases is 1, Range of values is 0 to 0
 23847                           ; switch strategies available:
 23848                           ; Name         Instructions Cycles
 23849                           ; simple_byte            4     3 (average)
 23850                           ;	Chosen strategy is simple_byte
 23851  0153B8  5031               	movf	(btemp+11)^0,w,c
 23852  0153BA  0A00               	xorlw	0	; case 0
 23853  0153BC  A4D8               	btfss	status,2,c
 23854  0153BE  D7EF               	goto	l9613
 23855                           
 23856                           ; Switch size 1, requested type "simple"
 23857                           ; Number of cases is 2, Range of values is 0 to 1
 23858                           ; switch strategies available:
 23859                           ; Name         Instructions Cycles
 23860                           ; simple_byte            7     4 (average)
 23861                           ;	Chosen strategy is simple_byte
 23862  0153C0  5030               	movf	(btemp+10)^0,w,c
 23863  0153C2  0A00               	xorlw	0	; case 0
 23864  0153C4  B4D8               	btfsc	status,2,c
 23865  0153C6  D5B2               	goto	l9567
 23866  0153C8  0A01               	xorlw	1	; case 1
 23867  0153CA  B4D8               	btfsc	status,2,c
 23868  0153CC  D72A               	goto	l9599
 23869  0153CE  D7E7               	goto	l9613
 23870  0153D0                     l1784:
 23871                           
 23872                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 23873  0153D0  52E5               	movf	postdec1,f,c
 23874  0153D2  52E5               	movf	postdec1,f,c
 23875  0153D4  0012               	return		;funcret
 23876  0153D6                     __end_of_conv_raw_result:
 23877                           	opt callstack 0
 23878                           
 23879 ;; *************** function _nanf *****************
 23880 ;; Defined at:
 23881 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 23882 ;; Parameters:    Size  Location     Type
 23883 ;;  s               2  [STACK] PTR const unsigned char 
 23884 ;;		 -> STR_102(1), STR_64(1), 
 23885 ;; Auto vars:     Size  Location     Type
 23886 ;;  u               4  [STACK] struct .
 23887 ;; Return value:  Size  Location     Type
 23888 ;;                  4  [STACK] float 
 23889 ;; Registers used:
 23890 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 23891 ;; Tracked objects:
 23892 ;;		On entry : 0/39
 23893 ;;		On exit  : 0/0
 23894 ;;		Unchanged: 0/0
 23895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23900 ;;Total ram usage:        0 bytes
 23901 ;; Hardware stack levels used:    1
 23902 ;; Hardware stack levels required when called:   15
 23903 ;; This function calls:
 23904 ;;		Nothing
 23905 ;; This function is called by:
 23906 ;;		_conv_raw_result
 23907 ;; This function uses a reentrant model
 23908 ;;
 23909                           
 23910                           	psect	text95
 23911  01A8F6                     __ptext95:
 23912                           	opt callstack 0
 23913  01A8F6                     _nanf:
 23914                           	opt callstack 0
 23915                           
 23916                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23917  01A8F6  52E6               	movf	postinc1,f,c
 23918  01A8F8  52E6               	movf	postinc1,f,c
 23919  01A8FA  52E6               	movf	postinc1,f,c
 23920  01A8FC  52E6               	movf	postinc1,f,c
 23921                           
 23922                           ;incstack = 0
 23923 ;; hardware stack exceeded
 23924  01A8FE  0EFF               	movlw	255
 23925  01A900  6E2E               	movwf	(btemp+8)^0,c
 23926  01A902  0EFF               	movlw	255
 23927  01A904  6E2F               	movwf	(btemp+9)^0,c
 23928  01A906  0EFF               	movlw	255
 23929  01A908  6E30               	movwf	(btemp+10)^0,c
 23930  01A90A  0E7F               	movlw	127
 23931  01A90C  6E31               	movwf	(btemp+11)^0,c
 23932                           
 23933                           ;stkvar	_u @ sp[(-4)+0]
 23934  01A90E  0EFC               	movlw	-4
 23935  01A910  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 23936  01A916  0EFD               	movlw	-3
 23937  01A918  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 23938  01A91E  0EFE               	movlw	-2
 23939  01A920  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 23940  01A926  0EFF               	movlw	-1
 23941  01A928  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 23942                           
 23943                           ;stkvar	_u @ sp[(-4)+0]
 23944  01A92E  0EFC               	movlw	-4
 23945  01A930  006F FF8C  F026    	movff	plusw1,btemp
 23946  01A936  0EFD               	movlw	-3
 23947  01A938  006F FF8C  F027    	movff	plusw1,btemp+1
 23948  01A93E  0EFE               	movlw	-2
 23949  01A940  006F FF8C  F028    	movff	plusw1,btemp+2
 23950  01A946  0EFF               	movlw	-1
 23951  01A948  006F FF8C  F029    	movff	plusw1,btemp+3
 23952                           
 23953                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 23954  01A94E  0EFA               	movlw	250
 23955  01A950  26E1               	addwf	fsr1l,f,c
 23956  01A952  0EFF               	movlw	255
 23957  01A954  22E2               	addwfc	fsr1h,f,c
 23958  01A956  0012               	return		;funcret
 23959  01A958                     __end_of_nanf:
 23960                           	opt callstack 0
 23961                           
 23962 ;; *************** function _get_raw_result *****************
 23963 ;; Defined at:
 23964 ;;		line 87 in file "daq.c"
 23965 ;; Parameters:    Size  Location     Type
 23966 ;;  index           1  [STACK] const enum E16582
 23967 ;; Auto vars:     Size  Location     Type
 23968 ;;		None
 23969 ;; Return value:  Size  Location     Type
 23970 ;;                  2  [STACK] unsigned short 
 23971 ;; Registers used:
 23972 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 23973 ;; Tracked objects:
 23974 ;;		On entry : 0/2
 23975 ;;		On exit  : 0/0
 23976 ;;		Unchanged: 0/0
 23977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23982 ;;Total ram usage:        0 bytes
 23983 ;; Hardware stack levels used:    1
 23984 ;; Hardware stack levels required when called:   15
 23985 ;; This function calls:
 23986 ;;		Nothing
 23987 ;; This function is called by:
 23988 ;;		_main
 23989 ;;		_conv_raw_result
 23990 ;; This function uses a reentrant model
 23991 ;;
 23992                           
 23993                           	psect	text96
 23994  01B70A                     __ptext96:
 23995                           	opt callstack 0
 23996  01B70A                     _get_raw_result:
 23997                           	opt callstack 0
 23998                           
 23999                           ;daq.c: 87: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 88: {;daq.c: 
      +                          89:  return R.raw_adc[index];
 24000                           ;stkvar	_index @ sp[(0)+-1]
 24001                           
 24002                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24003                           ;incstack = 0
 24004 ;; hardware stack exceeded
 24005  01B70A  0EFF               	movlw	-1
 24006  01B70C  50E3               	movf	plusw1,w,c
 24007  01B70E  0D02               	mullw	2
 24008  01B710  50F3               	movf	243,w,c
 24009  01B712  0FB1               	addlw	low _R
 24010  01B714  6ED9               	movwf	fsr2l,c
 24011  01B716  6ADA               	clrf	fsr2h,c
 24012  01B718  006F FF78  F026    	movff	postinc2,btemp
 24013  01B71E  006F FF74  F027    	movff	postdec2,btemp+1
 24014                           
 24015                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 24016  01B724  52E5               	movf	postdec1,f,c
 24017  01B726  0012               	return		;funcret
 24018  01B728                     __end_of_get_raw_result:
 24019                           	opt callstack 0
 24020                           
 24021 ;; *************** function ___xxtofl *****************
 24022 ;; Defined at:
 24023 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 24024 ;; Parameters:    Size  Location     Type
 24025 ;;  sign            1  [STACK] unsigned char 
 24026 ;;  val             4  [STACK] long 
 24027 ;; Auto vars:     Size  Location     Type
 24028 ;;  arg             4  [STACK] unsigned long 
 24029 ;;  exp             1  [STACK] unsigned char 
 24030 ;; Return value:  Size  Location     Type
 24031 ;;                  4  [STACK] unsigned char 
 24032 ;; Registers used:
 24033 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 24034 ;; Tracked objects:
 24035 ;;		On entry : 0/1
 24036 ;;		On exit  : 0/0
 24037 ;;		Unchanged: 0/0
 24038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24043 ;;Total ram usage:        0 bytes
 24044 ;; Hardware stack levels used:    1
 24045 ;; Hardware stack levels required when called:   15
 24046 ;; This function calls:
 24047 ;;		Nothing
 24048 ;; This function is called by:
 24049 ;;		_conv_raw_result
 24050 ;;		_init_bsoc
 24051 ;; This function uses a reentrant model
 24052 ;;
 24053                           
 24054                           	psect	text97
 24055  017A2E                     __ptext97:
 24056                           	opt callstack 0
 24057  017A2E                     ___xxtofl:
 24058                           	opt callstack 0
 24059                           
 24060                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24061  017A2E  0E05               	movlw	5
 24062  017A30  26E1               	addwf	fsr1l,f,c
 24063  017A32  0E00               	movlw	0
 24064  017A34  22E2               	addwfc	fsr1h,f,c
 24065                           
 24066                           ;stkvar	_sign @ sp[(-5)+-1]
 24067                           
 24068                           ;incstack = 0
 24069 ;; hardware stack exceeded
 24070  017A36  0EFA               	movlw	-6
 24071  017A38  50E3               	movf	plusw1,w,c
 24072  017A3A  B4D8               	btfsc	status,2,c
 24073  017A3C  D01D               	goto	l9515
 24074                           
 24075                           ;stkvar	_val @ sp[(-5)+-5]
 24076  017A3E  0EF9               	movlw	-7
 24077  017A40  AEE3               	btfss	plusw1,7,c
 24078  017A42  D01A               	goto	l9515
 24079                           
 24080                           ;stkvar	_val @ sp[(-5)+-5]
 24081  017A44  0EF6               	movlw	-10
 24082  017A46  006F FF8C  F02E    	movff	plusw1,btemp+8
 24083  017A4C  0EF7               	movlw	-9
 24084  017A4E  006F FF8C  F02F    	movff	plusw1,btemp+9
 24085  017A54  0EF8               	movlw	-8
 24086  017A56  006F FF8C  F030    	movff	plusw1,btemp+10
 24087  017A5C  0EF9               	movlw	-7
 24088  017A5E  006F FF8C  F031    	movff	plusw1,btemp+11
 24089  017A64  1E2E               	comf	(btemp+8)^0,f,c
 24090  017A66  1E2F               	comf	(btemp+9)^0,f,c
 24091  017A68  1E30               	comf	(btemp+10)^0,f,c
 24092  017A6A  1E31               	comf	(btemp+11)^0,f,c
 24093  017A6C  2A2E               	incf	(btemp+8)^0,f,c
 24094  017A6E  0E00               	movlw	0
 24095  017A70  222F               	addwfc	(btemp+9)^0,f,c
 24096  017A72  2230               	addwfc	(btemp+10)^0,f,c
 24097  017A74  2231               	addwfc	(btemp+11)^0,f,c
 24098  017A76  D010               	goto	L30
 24099  017A78                     l9515:
 24100                           
 24101                           ;stkvar	_val @ sp[(-5)+-5]
 24102  017A78  0EF6               	movlw	-10
 24103  017A7A  006F FF8C  F02E    	movff	plusw1,btemp+8
 24104  017A80  0EF7               	movlw	-9
 24105  017A82  006F FF8C  F02F    	movff	plusw1,btemp+9
 24106  017A88  0EF8               	movlw	-8
 24107  017A8A  006F FF8C  F030    	movff	plusw1,btemp+10
 24108  017A90  0EF9               	movlw	-7
 24109  017A92  006F FF8C  F031    	movff	plusw1,btemp+11
 24110  017A98                     L30:
 24111                           
 24112                           ;stkvar	_arg @ sp[(-5)+0]
 24113  017A98  0EFB               	movlw	-5
 24114  017A9A  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 24115  017AA0  0EFC               	movlw	-4
 24116  017AA2  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 24117  017AA8  0EFD               	movlw	-3
 24118  017AAA  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 24119  017AB0  0EFE               	movlw	-2
 24120  017AB2  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 24121                           
 24122                           ;stkvar	_val @ sp[(-5)+-5]
 24123  017AB8  0EF6               	movlw	-10
 24124  017ABA  50E3               	movf	plusw1,w,c
 24125  017ABC  E113               	bnz	l9523
 24126  017ABE  0EF7               	movlw	-9
 24127  017AC0  50E3               	movf	plusw1,w,c
 24128  017AC2  E110               	bnz	l9523
 24129  017AC4  0EF8               	movlw	-8
 24130  017AC6  50E3               	movf	plusw1,w,c
 24131  017AC8  E10D               	bnz	l9523
 24132  017ACA  0EF9               	movlw	-7
 24133  017ACC  50E3               	movf	plusw1,w,c
 24134  017ACE  A4D8               	btfss	status,2,c
 24135  017AD0  D009               	goto	l9523
 24136  017AD2  0E00               	movlw	0
 24137  017AD4  6E26               	movwf	btemp^0,c
 24138  017AD6  0E00               	movlw	0
 24139  017AD8  6E27               	movwf	(btemp+1)^0,c
 24140  017ADA  0E00               	movlw	0
 24141  017ADC  6E28               	movwf	(btemp+2)^0,c
 24142  017ADE  0E00               	movlw	0
 24143  017AE0  6E29               	movwf	(btemp+3)^0,c
 24144  017AE2  D0A2               	goto	l3054
 24145  017AE4                     l9523:
 24146  017AE4  0E96               	movlw	150
 24147  017AE6  6E31               	movwf	(btemp+11)^0,c
 24148                           
 24149                           ;stkvar	_exp @ sp[(-5)+4]
 24150  017AE8  0EFF               	movlw	-1
 24151  017AEA  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 24152  017AF0  D00B               	goto	l9527
 24153  017AF2                     l9525:
 24154                           
 24155                           ;stkvar	_exp @ sp[(-5)+4]
 24156  017AF2  0EFF               	movlw	-1
 24157  017AF4  2AE3               	incf	plusw1,f,c
 24158                           
 24159                           ;stkvar	_arg @ sp[(-5)+0]
 24160  017AF6  90D8               	bcf	status,0,c
 24161  017AF8  0EFE               	movlw	-2
 24162  017AFA  32E3               	rrcf	plusw1,f,c
 24163  017AFC  0EFD               	movlw	-3
 24164  017AFE  32E3               	rrcf	plusw1,f,c
 24165  017B00  0EFC               	movlw	-4
 24166  017B02  32E3               	rrcf	plusw1,f,c
 24167  017B04  0EFB               	movlw	-5
 24168  017B06  32E3               	rrcf	plusw1,f,c
 24169  017B08                     l9527:
 24170                           
 24171                           ;stkvar	_arg @ sp[(-5)+0]
 24172  017B08  50E1               	movf	fsr1l,w,c
 24173  017B0A  0FFB               	addlw	-5
 24174  017B0C  6ED9               	movwf	fsr2l,c
 24175  017B0E  50E2               	movf	fsr1h,w,c
 24176  017B10  6EDA               	movwf	fsr2h,c
 24177  017B12  0EFF               	movlw	255
 24178  017B14  22DA               	addwfc	fsr2h,f,c
 24179  017B16  52DE               	movf	postinc2,f,c
 24180  017B18  52DE               	movf	postinc2,f,c
 24181  017B1A  52DE               	movf	postinc2,f,c
 24182  017B1C  0EFE               	movlw	254
 24183  017B1E  14DD               	andwf	postdec2,w,c
 24184  017B20  B4D8               	btfsc	status,2,c
 24185  017B22  D018               	goto	l9535
 24186  017B24  D7E6               	goto	l9525
 24187  017B26                     l9529:
 24188                           
 24189                           ;stkvar	_exp @ sp[(-5)+4]
 24190  017B26  0EFF               	movlw	-1
 24191  017B28  2AE3               	incf	plusw1,f,c
 24192                           
 24193                           ;stkvar	_arg @ sp[(-5)+0]
 24194  017B2A  50E1               	movf	fsr1l,w,c
 24195  017B2C  0FFB               	addlw	-5
 24196  017B2E  6ED9               	movwf	fsr2l,c
 24197  017B30  50E2               	movf	fsr1h,w,c
 24198  017B32  6EDA               	movwf	fsr2h,c
 24199  017B34  0EFF               	movlw	255
 24200  017B36  22DA               	addwfc	fsr2h,f,c
 24201  017B38  2ADE               	incf	postinc2,f,c
 24202  017B3A  0E00               	movlw	0
 24203  017B3C  22DE               	addwfc	postinc2,f,c
 24204  017B3E  22DE               	addwfc	postinc2,f,c
 24205  017B40  22DE               	addwfc	postinc2,f,c
 24206                           
 24207                           ;stkvar	_arg @ sp[(-5)+0]
 24208  017B42  90D8               	bcf	status,0,c
 24209  017B44  0EFE               	movlw	-2
 24210  017B46  32E3               	rrcf	plusw1,f,c
 24211  017B48  0EFD               	movlw	-3
 24212  017B4A  32E3               	rrcf	plusw1,f,c
 24213  017B4C  0EFC               	movlw	-4
 24214  017B4E  32E3               	rrcf	plusw1,f,c
 24215  017B50  0EFB               	movlw	-5
 24216  017B52  32E3               	rrcf	plusw1,f,c
 24217  017B54                     l9535:
 24218                           
 24219                           ;stkvar	_arg @ sp[(-5)+0]
 24220  017B54  50E1               	movf	fsr1l,w,c
 24221  017B56  0FFB               	addlw	-5
 24222  017B58  6ED9               	movwf	fsr2l,c
 24223  017B5A  50E2               	movf	fsr1h,w,c
 24224  017B5C  6EDA               	movwf	fsr2h,c
 24225  017B5E  0EFF               	movlw	255
 24226  017B60  22DA               	addwfc	fsr2h,f,c
 24227  017B62  52DE               	movf	postinc2,f,c
 24228  017B64  52DE               	movf	postinc2,f,c
 24229  017B66  52DE               	movf	postinc2,f,c
 24230  017B68  0EFF               	movlw	255
 24231  017B6A  14DD               	andwf	postdec2,w,c
 24232  017B6C  B4D8               	btfsc	status,2,c
 24233  017B6E  D00C               	goto	l9539
 24234  017B70  D7DA               	goto	l9529
 24235  017B72                     l9537:
 24236                           
 24237                           ;stkvar	_exp @ sp[(-5)+4]
 24238  017B72  0EFF               	movlw	-1
 24239  017B74  06E3               	decf	plusw1,f,c
 24240                           
 24241                           ;stkvar	_arg @ sp[(-5)+0]
 24242  017B76  90D8               	bcf	status,0,c
 24243  017B78  0EFB               	movlw	-5
 24244  017B7A  36E3               	rlcf	plusw1,f,c
 24245  017B7C  0EFC               	movlw	-4
 24246  017B7E  36E3               	rlcf	plusw1,f,c
 24247  017B80  0EFD               	movlw	-3
 24248  017B82  36E3               	rlcf	plusw1,f,c
 24249  017B84  0EFE               	movlw	-2
 24250  017B86  36E3               	rlcf	plusw1,f,c
 24251  017B88                     l9539:
 24252                           
 24253                           ;stkvar	_arg @ sp[(-5)+0]
 24254  017B88  0EFD               	movlw	-3
 24255  017B8A  BEE3               	btfsc	plusw1,7,c
 24256  017B8C  D007               	goto	u8990
 24257                           
 24258                           ;stkvar	_exp @ sp[(-5)+4]
 24259  017B8E  0EFF               	movlw	-1
 24260  017B90  006F FF8C  F026    	movff	plusw1,btemp
 24261  017B96  0E02               	movlw	2
 24262  017B98  6026               	cpfslt	btemp^0,c
 24263  017B9A  D7EB               	goto	l9537
 24264  017B9C                     u8990:
 24265                           
 24266                           ;stkvar	_exp @ sp[(-5)+4]
 24267  017B9C  0EFF               	movlw	-1
 24268  017B9E  B0E3               	btfsc	plusw1,0,c
 24269  017BA0  D002               	goto	l9547
 24270                           
 24271                           ;stkvar	_arg @ sp[(-5)+0]
 24272  017BA2  0EFD               	movlw	-3
 24273  017BA4  9EE3               	bcf	plusw1,7,c
 24274  017BA6                     l9547:
 24275                           
 24276                           ;stkvar	_exp @ sp[(-5)+4]
 24277  017BA6  50E1               	movf	fsr1l,w,c
 24278  017BA8  0FFF               	addlw	-1
 24279  017BAA  6ED9               	movwf	fsr2l,c
 24280  017BAC  50E2               	movf	fsr1h,w,c
 24281  017BAE  6EDA               	movwf	fsr2h,c
 24282  017BB0  0EFF               	movlw	255
 24283  017BB2  22DA               	addwfc	fsr2h,f,c
 24284  017BB4  90D8               	bcf	status,0,c
 24285  017BB6  32DF               	rrcf	indf2,f,c
 24286                           
 24287                           ;stkvar	_exp @ sp[(-5)+4]
 24288  017BB8  0EFF               	movlw	-1
 24289  017BBA  006F FF8C  F031    	movff	plusw1,btemp+11
 24290  017BC0  0060  F0C4  F02A   	movff	btemp+11,btemp+4
 24291  017BC6  6A2B               	clrf	(btemp+5)^0,c
 24292  017BC8  6A2C               	clrf	(btemp+6)^0,c
 24293  017BCA  6A2D               	clrf	(btemp+7)^0,c
 24294  017BCC  0060  F0A8  F02D   	movff	btemp+4,btemp+7
 24295  017BD2  6A2C               	clrf	(btemp+6)^0,c
 24296  017BD4  6A2B               	clrf	(btemp+5)^0,c
 24297  017BD6  6A2A               	clrf	(btemp+4)^0,c
 24298                           
 24299                           ;stkvar	_arg @ sp[(-5)+0]
 24300  017BD8  50E1               	movf	fsr1l,w,c
 24301  017BDA  0FFB               	addlw	-5
 24302  017BDC  6ED9               	movwf	fsr2l,c
 24303  017BDE  50E2               	movf	fsr1h,w,c
 24304  017BE0  6EDA               	movwf	fsr2h,c
 24305  017BE2  0EFF               	movlw	255
 24306  017BE4  22DA               	addwfc	fsr2h,f,c
 24307  017BE6  502A               	movf	(btemp+4)^0,w,c
 24308  017BE8  12DE               	iorwf	postinc2,f,c
 24309  017BEA  502B               	movf	(btemp+5)^0,w,c
 24310  017BEC  12DE               	iorwf	postinc2,f,c
 24311  017BEE  502C               	movf	(btemp+6)^0,w,c
 24312  017BF0  12DE               	iorwf	postinc2,f,c
 24313  017BF2  502D               	movf	(btemp+7)^0,w,c
 24314  017BF4  12DE               	iorwf	postinc2,f,c
 24315                           
 24316                           ;stkvar	_sign @ sp[(-5)+-1]
 24317  017BF6  0EFA               	movlw	-6
 24318  017BF8  50E3               	movf	plusw1,w,c
 24319  017BFA  B4D8               	btfsc	status,2,c
 24320  017BFC  D005               	goto	l9557
 24321                           
 24322                           ;stkvar	_val @ sp[(-5)+-5]
 24323  017BFE  0EF9               	movlw	-7
 24324  017C00  AEE3               	btfss	plusw1,7,c
 24325  017C02  D002               	goto	l9557
 24326                           
 24327                           ;stkvar	_arg @ sp[(-5)+0]
 24328  017C04  0EFE               	movlw	-2
 24329  017C06  8EE3               	bsf	plusw1,7,c
 24330  017C08                     l9557:
 24331                           
 24332                           ;stkvar	_arg @ sp[(-5)+0]
 24333  017C08  0EFB               	movlw	-5
 24334  017C0A  006F FF8C  F026    	movff	plusw1,btemp
 24335  017C10  0EFC               	movlw	-4
 24336  017C12  006F FF8C  F027    	movff	plusw1,btemp+1
 24337  017C18  0EFD               	movlw	-3
 24338  017C1A  006F FF8C  F028    	movff	plusw1,btemp+2
 24339  017C20  0EFE               	movlw	-2
 24340  017C22  006F FF8C  F029    	movff	plusw1,btemp+3
 24341  017C28                     l3054:
 24342                           
 24343                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 24344  017C28  0EF6               	movlw	246
 24345  017C2A  26E1               	addwf	fsr1l,f,c
 24346  017C2C  0EFF               	movlw	255
 24347  017C2E  22E2               	addwfc	fsr1h,f,c
 24348  017C30  0012               	return		;funcret
 24349  017C32                     __end_of___xxtofl:
 24350                           	opt callstack 0
 24351                           
 24352 ;; *************** function ___fldiv *****************
 24353 ;; Defined at:
 24354 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 24355 ;; Parameters:    Size  Location     Type
 24356 ;;  b               4  [STACK] unsigned char 
 24357 ;;  a               4  [STACK] unsigned char 
 24358 ;; Auto vars:     Size  Location     Type
 24359 ;;  grs             4  [STACK] unsigned long 
 24360 ;;  rem             4  [STACK] unsigned long 
 24361 ;;  new_exp         2  [STACK] short 
 24362 ;;  aexp            1  [STACK] unsigned char 
 24363 ;;  bexp            1  [STACK] unsigned char 
 24364 ;;  sign            1  [STACK] unsigned char 
 24365 ;; Return value:  Size  Location     Type
 24366 ;;                  4  [STACK] unsigned char 
 24367 ;; Registers used:
 24368 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 24369 ;; Tracked objects:
 24370 ;;		On entry : 0/1
 24371 ;;		On exit  : 0/0
 24372 ;;		Unchanged: 0/0
 24373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24378 ;;Total ram usage:        0 bytes
 24379 ;; Hardware stack levels used:    1
 24380 ;; Hardware stack levels required when called:   15
 24381 ;; This function calls:
 24382 ;;		Nothing
 24383 ;; This function is called by:
 24384 ;;		_conv_raw_result
 24385 ;;		_calc_bsoc
 24386 ;;		_init_bsoc
 24387 ;;		_esr_check
 24388 ;;		_efgtoa
 24389 ;; This function uses a reentrant model
 24390 ;;
 24391                           
 24392                           	psect	text98
 24393  0149B0                     __ptext98:
 24394                           	opt callstack 0
 24395  0149B0                     ___fldiv:
 24396                           	opt callstack 0
 24397                           
 24398                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 24399  0149B0  0E0D               	movlw	13
 24400  0149B2  26E1               	addwf	fsr1l,f,c
 24401  0149B4  0E00               	movlw	0
 24402  0149B6  22E2               	addwfc	fsr1h,f,c
 24403                           
 24404                           ;stkvar	_b @ sp[(-13)+-4]
 24405                           
 24406                           ;incstack = 0
 24407 ;; hardware stack exceeded
 24408  0149B8  0EF2               	movlw	242
 24409  0149BA  24E1               	addwf	fsr1l,w,c
 24410  0149BC  6ED9               	movwf	fsr2l,c
 24411  0149BE  0EFF               	movlw	255
 24412  0149C0  20E2               	addwfc	fsr1h,w,c
 24413  0149C2  6EDA               	movwf	fsr2h,c
 24414  0149C4  50DF               	movf	indf2,w,c
 24415  0149C6  6E31               	movwf	(btemp+11)^0,c
 24416  0149C8  0E80               	movlw	128
 24417  0149CA  1631               	andwf	(btemp+11)^0,f,c
 24418                           
 24419                           ;stkvar	_sign @ sp[(-13)+12]
 24420  0149CC  0EFF               	movlw	-1
 24421  0149CE  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 24422                           
 24423                           ;stkvar	_b @ sp[(-13)+-4]
 24424  0149D4  0EF2               	movlw	242
 24425  0149D6  24E1               	addwf	fsr1l,w,c
 24426  0149D8  6ED9               	movwf	fsr2l,c
 24427  0149DA  0EFF               	movlw	255
 24428  0149DC  20E2               	addwfc	fsr1h,w,c
 24429  0149DE  6EDA               	movwf	fsr2h,c
 24430  0149E0  50DF               	movf	indf2,w,c
 24431  0149E2  6E31               	movwf	(btemp+11)^0,c
 24432  0149E4  90D8               	bcf	status,0,c
 24433  0149E6  3431               	rlcf	(btemp+11)^0,w,c
 24434  0149E8  6E30               	movwf	(btemp+10)^0,c
 24435                           
 24436                           ;stkvar	_bexp @ sp[(-13)+11]
 24437  0149EA  0EFE               	movlw	-2
 24438  0149EC  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 24439                           
 24440                           ;stkvar	_b @ sp[(-13)+-4]
 24441  0149F2  0EF1               	movlw	241
 24442  0149F4  24E1               	addwf	fsr1l,w,c
 24443  0149F6  6ED9               	movwf	fsr2l,c
 24444  0149F8  0EFF               	movlw	255
 24445  0149FA  20E2               	addwfc	fsr1h,w,c
 24446  0149FC  6EDA               	movwf	fsr2h,c
 24447  0149FE  AEDF               	btfss	indf2,7,c
 24448  014A00  D002               	goto	l8061
 24449                           
 24450                           ;stkvar	_bexp @ sp[(-13)+11]
 24451  014A02  0EFE               	movlw	-2
 24452  014A04  80E3               	bsf	plusw1,0,c
 24453  014A06                     l8061:
 24454                           
 24455                           ;stkvar	_bexp @ sp[(-13)+11]
 24456  014A06  0EFE               	movlw	-2
 24457  014A08  50E3               	movf	plusw1,w,c
 24458  014A0A  B4D8               	btfsc	status,2,c
 24459  014A0C  D027               	goto	l8071
 24460                           
 24461                           ;stkvar	_bexp @ sp[(-13)+11]
 24462  014A0E  0EFE               	movlw	-2
 24463  014A10  28E3               	incf	plusw1,w,c
 24464  014A12  A4D8               	btfss	status,2,c
 24465  014A14  D018               	goto	l8067
 24466  014A16  0E00               	movlw	0
 24467  014A18  6E2E               	movwf	(btemp+8)^0,c
 24468  014A1A  0E00               	movlw	0
 24469  014A1C  6E2F               	movwf	(btemp+9)^0,c
 24470  014A1E  0E00               	movlw	0
 24471  014A20  6E30               	movwf	(btemp+10)^0,c
 24472  014A22  0E00               	movlw	0
 24473  014A24  6E31               	movwf	(btemp+11)^0,c
 24474                           
 24475                           ;stkvar	_b @ sp[(-13)+-4]
 24476  014A26  0EEF               	movlw	-17
 24477  014A28  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 24478  014A2E  0EF0               	movlw	-16
 24479  014A30  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 24480  014A36  0EF1               	movlw	-15
 24481  014A38  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 24482  014A3E  0EF2               	movlw	-14
 24483  014A40  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 24484  014A46                     l8067:
 24485                           
 24486                           ;stkvar	_b @ sp[(-13)+-4]
 24487  014A46  0EF1               	movlw	-15
 24488  014A48  8EE3               	bsf	plusw1,7,c
 24489                           
 24490                           ;stkvar	_b @ sp[(-13)+-4]
 24491  014A4A  0EF2               	movlw	242
 24492  014A4C  24E1               	addwf	fsr1l,w,c
 24493  014A4E  6ED9               	movwf	fsr2l,c
 24494  014A50  0EFF               	movlw	255
 24495  014A52  20E2               	addwfc	fsr1h,w,c
 24496  014A54  6EDA               	movwf	fsr2h,c
 24497  014A56  0E00               	movlw	0
 24498  014A58  6EDF               	movwf	indf2,c
 24499  014A5A  D018               	goto	l8073
 24500  014A5C                     l8071:
 24501  014A5C  0E00               	movlw	0
 24502  014A5E  6E2E               	movwf	(btemp+8)^0,c
 24503  014A60  0E00               	movlw	0
 24504  014A62  6E2F               	movwf	(btemp+9)^0,c
 24505  014A64  0E00               	movlw	0
 24506  014A66  6E30               	movwf	(btemp+10)^0,c
 24507  014A68  0E00               	movlw	0
 24508  014A6A  6E31               	movwf	(btemp+11)^0,c
 24509                           
 24510                           ;stkvar	_b @ sp[(-13)+-4]
 24511  014A6C  0EEF               	movlw	-17
 24512  014A6E  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 24513  014A74  0EF0               	movlw	-16
 24514  014A76  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 24515  014A7C  0EF1               	movlw	-15
 24516  014A7E  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 24517  014A84  0EF2               	movlw	-14
 24518  014A86  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 24519  014A8C                     l8073:
 24520                           
 24521                           ;stkvar	_a @ sp[(-13)+-8]
 24522  014A8C  0EEE               	movlw	238
 24523  014A8E  24E1               	addwf	fsr1l,w,c
 24524  014A90  6ED9               	movwf	fsr2l,c
 24525  014A92  0EFF               	movlw	255
 24526  014A94  20E2               	addwfc	fsr1h,w,c
 24527  014A96  6EDA               	movwf	fsr2h,c
 24528  014A98  50DF               	movf	indf2,w,c
 24529  014A9A  6E31               	movwf	(btemp+11)^0,c
 24530  014A9C  0E80               	movlw	128
 24531  014A9E  1631               	andwf	(btemp+11)^0,f,c
 24532                           
 24533                           ;stkvar	_sign @ sp[(-13)+12]
 24534  014AA0  50E1               	movf	fsr1l,w,c
 24535  014AA2  0FFF               	addlw	-1
 24536  014AA4  6ED9               	movwf	fsr2l,c
 24537  014AA6  50E2               	movf	fsr1h,w,c
 24538  014AA8  6EDA               	movwf	fsr2h,c
 24539  014AAA  0EFF               	movlw	255
 24540  014AAC  22DA               	addwfc	fsr2h,f,c
 24541  014AAE  5031               	movf	(btemp+11)^0,w,c
 24542  014AB0  1ADF               	xorwf	indf2,f,c
 24543                           
 24544                           ;stkvar	_a @ sp[(-13)+-8]
 24545  014AB2  0EEE               	movlw	238
 24546  014AB4  24E1               	addwf	fsr1l,w,c
 24547  014AB6  6ED9               	movwf	fsr2l,c
 24548  014AB8  0EFF               	movlw	255
 24549  014ABA  20E2               	addwfc	fsr1h,w,c
 24550  014ABC  6EDA               	movwf	fsr2h,c
 24551  014ABE  50DF               	movf	indf2,w,c
 24552  014AC0  6E31               	movwf	(btemp+11)^0,c
 24553  014AC2  90D8               	bcf	status,0,c
 24554  014AC4  3431               	rlcf	(btemp+11)^0,w,c
 24555  014AC6  6E30               	movwf	(btemp+10)^0,c
 24556                           
 24557                           ;stkvar	_aexp @ sp[(-13)+10]
 24558  014AC8  0EFD               	movlw	-3
 24559  014ACA  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 24560                           
 24561                           ;stkvar	_a @ sp[(-13)+-8]
 24562  014AD0  0EED               	movlw	237
 24563  014AD2  24E1               	addwf	fsr1l,w,c
 24564  014AD4  6ED9               	movwf	fsr2l,c
 24565  014AD6  0EFF               	movlw	255
 24566  014AD8  20E2               	addwfc	fsr1h,w,c
 24567  014ADA  6EDA               	movwf	fsr2h,c
 24568  014ADC  AEDF               	btfss	indf2,7,c
 24569  014ADE  D002               	goto	l8081
 24570                           
 24571                           ;stkvar	_aexp @ sp[(-13)+10]
 24572  014AE0  0EFD               	movlw	-3
 24573  014AE2  80E3               	bsf	plusw1,0,c
 24574  014AE4                     l8081:
 24575                           
 24576                           ;stkvar	_aexp @ sp[(-13)+10]
 24577  014AE4  0EFD               	movlw	-3
 24578  014AE6  50E3               	movf	plusw1,w,c
 24579  014AE8  B4D8               	btfsc	status,2,c
 24580  014AEA  D027               	goto	l8091
 24581                           
 24582                           ;stkvar	_aexp @ sp[(-13)+10]
 24583  014AEC  0EFD               	movlw	-3
 24584  014AEE  28E3               	incf	plusw1,w,c
 24585  014AF0  A4D8               	btfss	status,2,c
 24586  014AF2  D018               	goto	l8087
 24587  014AF4  0E00               	movlw	0
 24588  014AF6  6E2E               	movwf	(btemp+8)^0,c
 24589  014AF8  0E00               	movlw	0
 24590  014AFA  6E2F               	movwf	(btemp+9)^0,c
 24591  014AFC  0E00               	movlw	0
 24592  014AFE  6E30               	movwf	(btemp+10)^0,c
 24593  014B00  0E00               	movlw	0
 24594  014B02  6E31               	movwf	(btemp+11)^0,c
 24595                           
 24596                           ;stkvar	_a @ sp[(-13)+-8]
 24597  014B04  0EEB               	movlw	-21
 24598  014B06  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 24599  014B0C  0EEC               	movlw	-20
 24600  014B0E  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 24601  014B14  0EED               	movlw	-19
 24602  014B16  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 24603  014B1C  0EEE               	movlw	-18
 24604  014B1E  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 24605  014B24                     l8087:
 24606                           
 24607                           ;stkvar	_a @ sp[(-13)+-8]
 24608  014B24  0EED               	movlw	-19
 24609  014B26  8EE3               	bsf	plusw1,7,c
 24610                           
 24611                           ;stkvar	_a @ sp[(-13)+-8]
 24612  014B28  0EEE               	movlw	238
 24613  014B2A  24E1               	addwf	fsr1l,w,c
 24614  014B2C  6ED9               	movwf	fsr2l,c
 24615  014B2E  0EFF               	movlw	255
 24616  014B30  20E2               	addwfc	fsr1h,w,c
 24617  014B32  6EDA               	movwf	fsr2h,c
 24618  014B34  0E00               	movlw	0
 24619  014B36  6EDF               	movwf	indf2,c
 24620  014B38  D018               	goto	l8093
 24621  014B3A                     l8091:
 24622  014B3A  0E00               	movlw	0
 24623  014B3C  6E2E               	movwf	(btemp+8)^0,c
 24624  014B3E  0E00               	movlw	0
 24625  014B40  6E2F               	movwf	(btemp+9)^0,c
 24626  014B42  0E00               	movlw	0
 24627  014B44  6E30               	movwf	(btemp+10)^0,c
 24628  014B46  0E00               	movlw	0
 24629  014B48  6E31               	movwf	(btemp+11)^0,c
 24630                           
 24631                           ;stkvar	_a @ sp[(-13)+-8]
 24632  014B4A  0EEB               	movlw	-21
 24633  014B4C  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 24634  014B52  0EEC               	movlw	-20
 24635  014B54  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 24636  014B5A  0EED               	movlw	-19
 24637  014B5C  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 24638  014B62  0EEE               	movlw	-18
 24639  014B64  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 24640  014B6A                     l8093:
 24641                           
 24642                           ;stkvar	_a @ sp[(-13)+-8]
 24643  014B6A  0EEB               	movlw	-21
 24644  014B6C  50E3               	movf	plusw1,w,c
 24645  014B6E  E139               	bnz	l8105
 24646  014B70  0EEC               	movlw	-20
 24647  014B72  50E3               	movf	plusw1,w,c
 24648  014B74  E136               	bnz	l8105
 24649  014B76  0EED               	movlw	-19
 24650  014B78  50E3               	movf	plusw1,w,c
 24651  014B7A  E133               	bnz	l8105
 24652  014B7C  0EEE               	movlw	-18
 24653  014B7E  50E3               	movf	plusw1,w,c
 24654  014B80  A4D8               	btfss	status,2,c
 24655  014B82  D02F               	goto	l8105
 24656                           
 24657                           ;stkvar	_b @ sp[(-13)+-4]
 24658  014B84  0EEF               	movlw	-17
 24659  014B86  6AE3               	clrf	plusw1,c
 24660  014B88  0EF0               	movlw	-16
 24661  014B8A  6AE3               	clrf	plusw1,c
 24662  014B8C  0EF1               	movlw	-15
 24663  014B8E  6AE3               	clrf	plusw1,c
 24664  014B90  0EF2               	movlw	-14
 24665  014B92  6AE3               	clrf	plusw1,c
 24666                           
 24667                           ;stkvar	_b @ sp[(-13)+-4]
 24668  014B94  0EF1               	movlw	241
 24669  014B96  24E1               	addwf	fsr1l,w,c
 24670  014B98  6ED9               	movwf	fsr2l,c
 24671  014B9A  0EFF               	movlw	255
 24672  014B9C  20E2               	addwfc	fsr1h,w,c
 24673  014B9E  6EDA               	movwf	fsr2h,c
 24674  014BA0  0E80               	movlw	128
 24675  014BA2  12DE               	iorwf	postinc2,f,c
 24676  014BA4  0E7F               	movlw	127
 24677  014BA6  12DD               	iorwf	postdec2,f,c
 24678  014BA8                     l8099:
 24679                           
 24680                           ;stkvar	_sign @ sp[(-13)+12]
 24681  014BA8  0EFF               	movlw	-1
 24682  014BAA  006F FF8C  F031    	movff	plusw1,btemp+11
 24683                           
 24684                           ;stkvar	_b @ sp[(-13)+-4]
 24685  014BB0  0EF2               	movlw	242
 24686  014BB2  24E1               	addwf	fsr1l,w,c
 24687  014BB4  6ED9               	movwf	fsr2l,c
 24688  014BB6  0EFF               	movlw	255
 24689  014BB8  20E2               	addwfc	fsr1h,w,c
 24690  014BBA  6EDA               	movwf	fsr2h,c
 24691  014BBC  5031               	movf	(btemp+11)^0,w,c
 24692  014BBE  12DF               	iorwf	indf2,f,c
 24693                           
 24694                           ;stkvar	_b @ sp[(-13)+-4]
 24695  014BC0  0EEF               	movlw	-17
 24696  014BC2  006F FF8C  F026    	movff	plusw1,btemp
 24697  014BC8  0EF0               	movlw	-16
 24698  014BCA  006F FF8C  F027    	movff	plusw1,btemp+1
 24699  014BD0  0EF1               	movlw	-15
 24700  014BD2  006F FF8C  F028    	movff	plusw1,btemp+2
 24701  014BD8  0EF2               	movlw	-14
 24702  014BDA  006F FF8C  F029    	movff	plusw1,btemp+3
 24703  014BE0  D19F               	goto	l2978
 24704  014BE2                     l8105:
 24705                           
 24706                           ;stkvar	_bexp @ sp[(-13)+11]
 24707  014BE2  0EFE               	movlw	-2
 24708  014BE4  50E3               	movf	plusw1,w,c
 24709  014BE6  A4D8               	btfss	status,2,c
 24710  014BE8  D009               	goto	l8113
 24711  014BEA  0E00               	movlw	0
 24712  014BEC  6E26               	movwf	btemp^0,c
 24713  014BEE  0E00               	movlw	0
 24714  014BF0  6E27               	movwf	(btemp+1)^0,c
 24715  014BF2  0E00               	movlw	0
 24716  014BF4  6E28               	movwf	(btemp+2)^0,c
 24717  014BF6  0E00               	movlw	0
 24718  014BF8  6E29               	movwf	(btemp+3)^0,c
 24719  014BFA  D192               	goto	l2978
 24720  014BFC                     l8113:
 24721                           
 24722                           ;stkvar	_bexp @ sp[(-13)+11]
 24723  014BFC  0EFE               	movlw	-2
 24724  014BFE  50E3               	movf	plusw1,w,c
 24725  014C00  6E30               	movwf	(btemp+10)^0,c
 24726  014C02  6A31               	clrf	(btemp+11)^0,c
 24727                           
 24728                           ;stkvar	_aexp @ sp[(-13)+10]
 24729  014C04  0EFD               	movlw	-3
 24730  014C06  50E3               	movf	plusw1,w,c
 24731  014C08  5E30               	subwf	(btemp+10)^0,f,c
 24732  014C0A  0E00               	movlw	0
 24733  014C0C  5A31               	subwfb	(btemp+11)^0,f,c
 24734  014C0E  0E7F               	movlw	127
 24735  014C10  2630               	addwf	(btemp+10)^0,f,c
 24736  014C12  0E00               	movlw	0
 24737  014C14  2231               	addwfc	(btemp+11)^0,f,c
 24738                           
 24739                           ;stkvar	_new_exp @ sp[(-13)+8]
 24740  014C16  0EFB               	movlw	-5
 24741  014C18  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 24742  014C1E  0EFC               	movlw	-4
 24743  014C20  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 24744                           
 24745                           ;stkvar	_b @ sp[(-13)+-4]
 24746  014C26  0EEF               	movlw	-17
 24747  014C28  006F FF8C  F02E    	movff	plusw1,btemp+8
 24748  014C2E  0EF0               	movlw	-16
 24749  014C30  006F FF8C  F02F    	movff	plusw1,btemp+9
 24750  014C36  0EF1               	movlw	-15
 24751  014C38  006F FF8C  F030    	movff	plusw1,btemp+10
 24752  014C3E  0EF2               	movlw	-14
 24753  014C40  006F FF8C  F031    	movff	plusw1,btemp+11
 24754                           
 24755                           ;stkvar	_rem @ sp[(-13)+4]
 24756  014C46  0EF7               	movlw	-9
 24757  014C48  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 24758  014C4E  0EF8               	movlw	-8
 24759  014C50  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 24760  014C56  0EF9               	movlw	-7
 24761  014C58  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 24762  014C5E  0EFA               	movlw	-6
 24763  014C60  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 24764                           
 24765                           ;stkvar	_b @ sp[(-13)+-4]
 24766  014C66  0EEF               	movlw	-17
 24767  014C68  6AE3               	clrf	plusw1,c
 24768  014C6A  0EF0               	movlw	-16
 24769  014C6C  6AE3               	clrf	plusw1,c
 24770  014C6E  0EF1               	movlw	-15
 24771  014C70  6AE3               	clrf	plusw1,c
 24772  014C72  0EF2               	movlw	-14
 24773  014C74  6AE3               	clrf	plusw1,c
 24774                           
 24775                           ;stkvar	_grs @ sp[(-13)+0]
 24776  014C76  0EF3               	movlw	-13
 24777  014C78  6AE3               	clrf	plusw1,c
 24778  014C7A  0EF4               	movlw	-12
 24779  014C7C  6AE3               	clrf	plusw1,c
 24780  014C7E  0EF5               	movlw	-11
 24781  014C80  6AE3               	clrf	plusw1,c
 24782  014C82  0EF6               	movlw	-10
 24783  014C84  6AE3               	clrf	plusw1,c
 24784                           
 24785                           ;stkvar	_aexp @ sp[(-13)+10]
 24786  014C86  0EFD               	movlw	-3
 24787  014C88  6AE3               	clrf	plusw1,c
 24788  014C8A  D050               	goto	l8141
 24789  014C8C                     l8123:
 24790                           
 24791                           ;stkvar	_aexp @ sp[(-13)+10]
 24792  014C8C  0EFD               	movlw	-3
 24793  014C8E  50E3               	movf	plusw1,w,c
 24794  014C90  B4D8               	btfsc	status,2,c
 24795  014C92  D020               	goto	l8133
 24796                           
 24797                           ;stkvar	_rem @ sp[(-13)+4]
 24798  014C94  90D8               	bcf	status,0,c
 24799  014C96  0EF7               	movlw	-9
 24800  014C98  36E3               	rlcf	plusw1,f,c
 24801  014C9A  0EF8               	movlw	-8
 24802  014C9C  36E3               	rlcf	plusw1,f,c
 24803  014C9E  0EF9               	movlw	-7
 24804  014CA0  36E3               	rlcf	plusw1,f,c
 24805  014CA2  0EFA               	movlw	-6
 24806  014CA4  36E3               	rlcf	plusw1,f,c
 24807                           
 24808                           ;stkvar	_b @ sp[(-13)+-4]
 24809  014CA6  90D8               	bcf	status,0,c
 24810  014CA8  0EEF               	movlw	-17
 24811  014CAA  36E3               	rlcf	plusw1,f,c
 24812  014CAC  0EF0               	movlw	-16
 24813  014CAE  36E3               	rlcf	plusw1,f,c
 24814  014CB0  0EF1               	movlw	-15
 24815  014CB2  36E3               	rlcf	plusw1,f,c
 24816  014CB4  0EF2               	movlw	-14
 24817  014CB6  36E3               	rlcf	plusw1,f,c
 24818                           
 24819                           ;stkvar	_grs @ sp[(-13)+0]
 24820  014CB8  0EF6               	movlw	-10
 24821  014CBA  AEE3               	btfss	plusw1,7,c
 24822  014CBC  D002               	goto	l8131
 24823                           
 24824                           ;stkvar	_b @ sp[(-13)+-4]
 24825  014CBE  0EEF               	movlw	-17
 24826  014CC0  80E3               	bsf	plusw1,0,c
 24827  014CC2                     l8131:
 24828                           
 24829                           ;stkvar	_grs @ sp[(-13)+0]
 24830  014CC2  90D8               	bcf	status,0,c
 24831  014CC4  0EF3               	movlw	-13
 24832  014CC6  36E3               	rlcf	plusw1,f,c
 24833  014CC8  0EF4               	movlw	-12
 24834  014CCA  36E3               	rlcf	plusw1,f,c
 24835  014CCC  0EF5               	movlw	-11
 24836  014CCE  36E3               	rlcf	plusw1,f,c
 24837  014CD0  0EF6               	movlw	-10
 24838  014CD2  36E3               	rlcf	plusw1,f,c
 24839  014CD4                     l8133:
 24840                           
 24841                           ;stkvar	_a @ sp[(-13)+-8]
 24842                           ;stkvar	_rem @ sp[(-13)+4]
 24843  014CD4  50E1               	movf	fsr1l,w,c
 24844  014CD6  0FF7               	addlw	-9
 24845  014CD8  6ED9               	movwf	fsr2l,c
 24846  014CDA  50E2               	movf	fsr1h,w,c
 24847  014CDC  6EDA               	movwf	fsr2h,c
 24848  014CDE  0EFF               	movlw	255
 24849  014CE0  22DA               	addwfc	fsr2h,f,c
 24850  014CE2  0EEB               	movlw	-21
 24851  014CE4  50E3               	movf	plusw1,w,c
 24852  014CE6  5CDE               	subwf	postinc2,w,c
 24853  014CE8  0EEC               	movlw	-20
 24854  014CEA  50E3               	movf	plusw1,w,c
 24855  014CEC  58DE               	subwfb	postinc2,w,c
 24856  014CEE  0EED               	movlw	-19
 24857  014CF0  50E3               	movf	plusw1,w,c
 24858  014CF2  58DE               	subwfb	postinc2,w,c
 24859  014CF4  0EEE               	movlw	-18
 24860  014CF6  50E3               	movf	plusw1,w,c
 24861  014CF8  58DE               	subwfb	postinc2,w,c
 24862  014CFA  A0D8               	btfss	status,0,c
 24863  014CFC  D015               	goto	l8139
 24864                           
 24865                           ;stkvar	_grs @ sp[(-13)+0]
 24866  014CFE  0EF6               	movlw	-10
 24867  014D00  8CE3               	bsf	plusw1,6,c
 24868                           
 24869                           ;stkvar	_a @ sp[(-13)+-8]
 24870                           ;stkvar	_rem @ sp[(-13)+4]
 24871  014D02  50E1               	movf	fsr1l,w,c
 24872  014D04  0FF7               	addlw	-9
 24873  014D06  6ED9               	movwf	fsr2l,c
 24874  014D08  50E2               	movf	fsr1h,w,c
 24875  014D0A  6EDA               	movwf	fsr2h,c
 24876  014D0C  0EFF               	movlw	255
 24877  014D0E  22DA               	addwfc	fsr2h,f,c
 24878  014D10  0EEB               	movlw	-21
 24879  014D12  50E3               	movf	plusw1,w,c
 24880  014D14  5EDE               	subwf	postinc2,f,c
 24881  014D16  0EEC               	movlw	-20
 24882  014D18  50E3               	movf	plusw1,w,c
 24883  014D1A  5ADE               	subwfb	postinc2,f,c
 24884  014D1C  0EED               	movlw	-19
 24885  014D1E  50E3               	movf	plusw1,w,c
 24886  014D20  5ADE               	subwfb	postinc2,f,c
 24887  014D22  0EEE               	movlw	-18
 24888  014D24  50E3               	movf	plusw1,w,c
 24889  014D26  5ADE               	subwfb	postinc2,f,c
 24890  014D28                     l8139:
 24891                           
 24892                           ;stkvar	_aexp @ sp[(-13)+10]
 24893  014D28  0EFD               	movlw	-3
 24894  014D2A  2AE3               	incf	plusw1,f,c
 24895  014D2C                     l8141:
 24896                           
 24897                           ;stkvar	_aexp @ sp[(-13)+10]
 24898  014D2C  0EFD               	movlw	-3
 24899  014D2E  006F FF8C  F026    	movff	plusw1,btemp
 24900  014D34  0E19               	movlw	25
 24901  014D36  6426               	cpfsgt	btemp^0,c
 24902  014D38  D7A9               	goto	l8123
 24903                           
 24904                           ;stkvar	_rem @ sp[(-13)+4]
 24905  014D3A  0EF7               	movlw	-9
 24906  014D3C  50E3               	movf	plusw1,w,c
 24907  014D3E  E10A               	bnz	u6540
 24908  014D40  0EF8               	movlw	-8
 24909  014D42  50E3               	movf	plusw1,w,c
 24910  014D44  E107               	bnz	u6540
 24911  014D46  0EF9               	movlw	-7
 24912  014D48  50E3               	movf	plusw1,w,c
 24913  014D4A  E104               	bnz	u6540
 24914  014D4C  0EFA               	movlw	-6
 24915  014D4E  50E3               	movf	plusw1,w,c
 24916  014D50  B4D8               	btfsc	status,2,c
 24917  014D52  D024               	goto	l8157
 24918  014D54                     u6540:
 24919                           
 24920                           ;stkvar	_grs @ sp[(-13)+0]
 24921  014D54  0EF3               	movlw	-13
 24922  014D56  80E3               	bsf	plusw1,0,c
 24923  014D58  D021               	goto	l8157
 24924  014D5A                     l8147:
 24925                           
 24926                           ;stkvar	_b @ sp[(-13)+-4]
 24927  014D5A  90D8               	bcf	status,0,c
 24928  014D5C  0EEF               	movlw	-17
 24929  014D5E  36E3               	rlcf	plusw1,f,c
 24930  014D60  0EF0               	movlw	-16
 24931  014D62  36E3               	rlcf	plusw1,f,c
 24932  014D64  0EF1               	movlw	-15
 24933  014D66  36E3               	rlcf	plusw1,f,c
 24934  014D68  0EF2               	movlw	-14
 24935  014D6A  36E3               	rlcf	plusw1,f,c
 24936                           
 24937                           ;stkvar	_grs @ sp[(-13)+0]
 24938  014D6C  0EF6               	movlw	-10
 24939  014D6E  AEE3               	btfss	plusw1,7,c
 24940  014D70  D002               	goto	l8153
 24941                           
 24942                           ;stkvar	_b @ sp[(-13)+-4]
 24943  014D72  0EEF               	movlw	-17
 24944  014D74  80E3               	bsf	plusw1,0,c
 24945  014D76                     l8153:
 24946                           
 24947                           ;stkvar	_grs @ sp[(-13)+0]
 24948  014D76  90D8               	bcf	status,0,c
 24949  014D78  0EF3               	movlw	-13
 24950  014D7A  36E3               	rlcf	plusw1,f,c
 24951  014D7C  0EF4               	movlw	-12
 24952  014D7E  36E3               	rlcf	plusw1,f,c
 24953  014D80  0EF5               	movlw	-11
 24954  014D82  36E3               	rlcf	plusw1,f,c
 24955  014D84  0EF6               	movlw	-10
 24956  014D86  36E3               	rlcf	plusw1,f,c
 24957                           
 24958                           ;stkvar	_new_exp @ sp[(-13)+8]
 24959  014D88  50E1               	movf	fsr1l,w,c
 24960  014D8A  0FFB               	addlw	-5
 24961  014D8C  6ED9               	movwf	fsr2l,c
 24962  014D8E  50E2               	movf	fsr1h,w,c
 24963  014D90  6EDA               	movwf	fsr2h,c
 24964  014D92  0EFF               	movlw	255
 24965  014D94  22DA               	addwfc	fsr2h,f,c
 24966  014D96  06DE               	decf	postinc2,f,c
 24967  014D98  0E00               	movlw	0
 24968  014D9A  5ADD               	subwfb	postdec2,f,c
 24969  014D9C                     l8157:
 24970                           
 24971                           ;stkvar	_b @ sp[(-13)+-4]
 24972  014D9C  0EF1               	movlw	-15
 24973  014D9E  AEE3               	btfss	plusw1,7,c
 24974  014DA0  D7DC               	goto	l8147
 24975                           
 24976                           ;stkvar	_aexp @ sp[(-13)+10]
 24977  014DA2  0EFD               	movlw	-3
 24978  014DA4  6AE3               	clrf	plusw1,c
 24979                           
 24980                           ;stkvar	_grs @ sp[(-13)+0]
 24981  014DA6  0EF6               	movlw	-10
 24982  014DA8  AEE3               	btfss	plusw1,7,c
 24983  014DAA  D020               	goto	l8171
 24984                           
 24985                           ;stkvar	_grs @ sp[(-13)+0]
 24986  014DAC  50E1               	movf	fsr1l,w,c
 24987  014DAE  0FF3               	addlw	-13
 24988  014DB0  6ED9               	movwf	fsr2l,c
 24989  014DB2  50E2               	movf	fsr1h,w,c
 24990  014DB4  6EDA               	movwf	fsr2h,c
 24991  014DB6  0EFF               	movlw	255
 24992  014DB8  22DA               	addwfc	fsr2h,f,c
 24993  014DBA  0EFF               	movlw	255
 24994  014DBC  14DE               	andwf	postinc2,w,c
 24995  014DBE  6E2E               	movwf	(btemp+8)^0,c
 24996  014DC0  0EFF               	movlw	255
 24997  014DC2  14DE               	andwf	postinc2,w,c
 24998  014DC4  6E2F               	movwf	(btemp+9)^0,c
 24999  014DC6  0EFF               	movlw	255
 25000  014DC8  14DE               	andwf	postinc2,w,c
 25001  014DCA  6E30               	movwf	(btemp+10)^0,c
 25002  014DCC  0E7F               	movlw	127
 25003  014DCE  14DE               	andwf	postinc2,w,c
 25004  014DD0  6E31               	movwf	(btemp+11)^0,c
 25005  014DD2  502E               	movf	(btemp+8)^0,w,c
 25006  014DD4  102F               	iorwf	(btemp+9)^0,w,c
 25007  014DD6  1030               	iorwf	(btemp+10)^0,w,c
 25008  014DD8  1031               	iorwf	(btemp+11)^0,w,c
 25009  014DDA  B4D8               	btfsc	status,2,c
 25010  014DDC  D004               	goto	l8167
 25011  014DDE                     u6580:
 25012                           
 25013                           ;stkvar	_aexp @ sp[(-13)+10]
 25014  014DDE  0EFD               	movlw	-3
 25015  014DE0  6AE3               	clrf	plusw1,c
 25016  014DE2  2AE3               	incf	plusw1,f,c
 25017  014DE4  D003               	goto	l8171
 25018  014DE6                     l8167:
 25019                           
 25020                           ;stkvar	_b @ sp[(-13)+-4]
 25021  014DE6  0EEF               	movlw	-17
 25022  014DE8  B0E3               	btfsc	plusw1,0,c
 25023  014DEA  D7F9               	goto	u6580
 25024  014DEC                     l8171:
 25025                           
 25026                           ;stkvar	_aexp @ sp[(-13)+10]
 25027  014DEC  0EFD               	movlw	-3
 25028  014DEE  50E3               	movf	plusw1,w,c
 25029  014DF0  B4D8               	btfsc	status,2,c
 25030  014DF2  D036               	goto	l8181
 25031                           
 25032                           ;stkvar	_b @ sp[(-13)+-4]
 25033  014DF4  50E1               	movf	fsr1l,w,c
 25034  014DF6  0FEF               	addlw	-17
 25035  014DF8  6ED9               	movwf	fsr2l,c
 25036  014DFA  50E2               	movf	fsr1h,w,c
 25037  014DFC  6EDA               	movwf	fsr2h,c
 25038  014DFE  0EFF               	movlw	255
 25039  014E00  22DA               	addwfc	fsr2h,f,c
 25040  014E02  2ADE               	incf	postinc2,f,c
 25041  014E04  0E00               	movlw	0
 25042  014E06  22DE               	addwfc	postinc2,f,c
 25043  014E08  22DE               	addwfc	postinc2,f,c
 25044  014E0A  22DE               	addwfc	postinc2,f,c
 25045                           
 25046                           ;stkvar	_b @ sp[(-13)+-4]
 25047  014E0C  0EF2               	movlw	-14
 25048  014E0E  A0E3               	btfss	plusw1,0,c
 25049  014E10  D027               	goto	l8181
 25050  014E12  0E01               	movlw	1
 25051  014E14  6E31               	movwf	(btemp+11)^0,c
 25052                           
 25053                           ;stkvar	_b @ sp[(-13)+-4]
 25054  014E16  50E1               	movf	fsr1l,w,c
 25055  014E18  0FEF               	addlw	-17
 25056  014E1A  6ED9               	movwf	fsr2l,c
 25057  014E1C  50E2               	movf	fsr1h,w,c
 25058  014E1E  6EDA               	movwf	fsr2h,c
 25059  014E20  0EFF               	movlw	255
 25060  014E22  22DA               	addwfc	fsr2h,f,c
 25061  014E24  2831               	incf	(btemp+11)^0,w,c
 25062  014E26  52DE               	movf	postinc2,f,c
 25063  014E28  D008               	goto	u6620
 25064  014E2A                     u6625:
 25065  014E2A  52DE               	movf	postinc2,f,c
 25066  014E2C  90D8               	bcf	status,0,c
 25067  014E2E  BEDC               	btfsc	preinc2,7,c
 25068  014E30  80D8               	bsf	status,0,c
 25069  014E32  32DD               	rrcf	postdec2,f,c
 25070  014E34  32DD               	rrcf	postdec2,f,c
 25071  014E36  32DD               	rrcf	postdec2,f,c
 25072  014E38  32DE               	rrcf	postinc2,f,c
 25073  014E3A                     u6620:
 25074  014E3A  2EE8               	decfsz	wreg,f,c
 25075  014E3C  D7F6               	goto	u6625
 25076                           
 25077                           ;stkvar	_new_exp @ sp[(-13)+8]
 25078  014E3E  0EFB               	movlw	-5
 25079  014E40  50E3               	movf	plusw1,w,c
 25080  014E42  0F01               	addlw	1
 25081  014E44  6E26               	movwf	btemp^0,c
 25082  014E46  0EFB               	movlw	-5
 25083  014E48  0060  F09B  FFE3   	movff	btemp,plusw1
 25084  014E4E  6A26               	clrf	btemp^0,c
 25085  014E50  0EFC               	movlw	-4
 25086  014E52  50E3               	movf	plusw1,w,c
 25087  014E54  2026               	addwfc	btemp^0,w,c
 25088  014E56  6E26               	movwf	btemp^0,c
 25089  014E58  0EFC               	movlw	-4
 25090  014E5A  0060  F09B  FFE3   	movff	btemp,plusw1
 25091  014E60                     l8181:
 25092                           
 25093                           ;stkvar	_new_exp @ sp[(-13)+8]
 25094  014E60  0EFC               	movlw	-4
 25095  014E62  BEE3               	btfsc	plusw1,7,c
 25096  014E64  D01B               	goto	l8187
 25097  014E66  0EFC               	movlw	-4
 25098  014E68  50E3               	movf	plusw1,w,c
 25099  014E6A  E104               	bnz	u6630
 25100  014E6C  0EFB               	movlw	-5
 25101  014E6E  28E3               	incf	plusw1,w,c
 25102  014E70  A0D8               	btfss	status,0,c
 25103  014E72  D014               	goto	l8187
 25104  014E74                     u6630:
 25105  014E74  0EFF               	movlw	255
 25106  014E76  6E30               	movwf	(btemp+10)^0,c
 25107  014E78  0E00               	movlw	0
 25108  014E7A  6E31               	movwf	(btemp+11)^0,c
 25109                           
 25110                           ;stkvar	_new_exp @ sp[(-13)+8]
 25111  014E7C  0EFB               	movlw	-5
 25112  014E7E  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 25113  014E84  0EFC               	movlw	-4
 25114  014E86  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 25115                           
 25116                           ;stkvar	_b @ sp[(-13)+-4]
 25117  014E8C  0EEF               	movlw	-17
 25118  014E8E  6AE3               	clrf	plusw1,c
 25119  014E90  0EF0               	movlw	-16
 25120  014E92  6AE3               	clrf	plusw1,c
 25121  014E94  0EF1               	movlw	-15
 25122  014E96  6AE3               	clrf	plusw1,c
 25123  014E98  0EF2               	movlw	-14
 25124  014E9A  6AE3               	clrf	plusw1,c
 25125  014E9C                     l8187:
 25126                           
 25127                           ;stkvar	_new_exp @ sp[(-13)+8]
 25128  014E9C  0EFC               	movlw	-4
 25129  014E9E  BEE3               	btfsc	plusw1,7,c
 25130  014EA0  D007               	goto	u6640
 25131  014EA2  0EFC               	movlw	-4
 25132  014EA4  50E3               	movf	plusw1,w,c
 25133  014EA6  E112               	bnz	l8193
 25134  014EA8  0EFB               	movlw	-5
 25135  014EAA  04E3               	decf	plusw1,w,c
 25136  014EAC  B0D8               	btfsc	status,0,c
 25137  014EAE  D00E               	goto	l8193
 25138  014EB0                     u6640:
 25139                           
 25140                           ;stkvar	_new_exp @ sp[(-13)+8]
 25141  014EB0  0EFB               	movlw	-5
 25142  014EB2  6AE3               	clrf	plusw1,c
 25143  014EB4  0EFC               	movlw	-4
 25144  014EB6  6AE3               	clrf	plusw1,c
 25145                           
 25146                           ;stkvar	_b @ sp[(-13)+-4]
 25147  014EB8  0EEF               	movlw	-17
 25148  014EBA  6AE3               	clrf	plusw1,c
 25149  014EBC  0EF0               	movlw	-16
 25150  014EBE  6AE3               	clrf	plusw1,c
 25151  014EC0  0EF1               	movlw	-15
 25152  014EC2  6AE3               	clrf	plusw1,c
 25153  014EC4  0EF2               	movlw	-14
 25154  014EC6  6AE3               	clrf	plusw1,c
 25155                           
 25156                           ;stkvar	_sign @ sp[(-13)+12]
 25157  014EC8  0EFF               	movlw	-1
 25158  014ECA  6AE3               	clrf	plusw1,c
 25159  014ECC                     l8193:
 25160                           
 25161                           ;stkvar	_new_exp @ sp[(-13)+8]
 25162                           ;stkvar	_bexp @ sp[(-13)+11]
 25163  014ECC  0EFB               	movlw	-5
 25164  014ECE  006F FF8C  F026    	movff	plusw1,btemp
 25165  014ED4  0EFE               	movlw	-2
 25166  014ED6  0060  F09B  FFE3   	movff	btemp,plusw1
 25167                           
 25168                           ;stkvar	_bexp @ sp[(-13)+11]
 25169  014EDC  0EFE               	movlw	-2
 25170  014EDE  A0E3               	btfss	plusw1,0,c
 25171  014EE0  D009               	goto	l8199
 25172                           
 25173                           ;stkvar	_b @ sp[(-13)+-4]
 25174  014EE2  0EF1               	movlw	241
 25175  014EE4  24E1               	addwf	fsr1l,w,c
 25176  014EE6  6ED9               	movwf	fsr2l,c
 25177  014EE8  0EFF               	movlw	255
 25178  014EEA  20E2               	addwfc	fsr1h,w,c
 25179  014EEC  6EDA               	movwf	fsr2h,c
 25180  014EEE  0E00               	movlw	0
 25181  014EF0  8EDB               	bsf	plusw2,7,c
 25182  014EF2  D008               	goto	l8201
 25183  014EF4                     l8199:
 25184                           
 25185                           ;stkvar	_b @ sp[(-13)+-4]
 25186  014EF4  0EF1               	movlw	241
 25187  014EF6  24E1               	addwf	fsr1l,w,c
 25188  014EF8  6ED9               	movwf	fsr2l,c
 25189  014EFA  0EFF               	movlw	255
 25190  014EFC  20E2               	addwfc	fsr1h,w,c
 25191  014EFE  6EDA               	movwf	fsr2h,c
 25192  014F00  0E7F               	movlw	127
 25193  014F02  16DF               	andwf	indf2,f,c
 25194  014F04                     l8201:
 25195                           
 25196                           ;stkvar	_b @ sp[(-13)+-4]
 25197  014F04  0EF2               	movlw	242
 25198  014F06  24E1               	addwf	fsr1l,w,c
 25199  014F08  6ED9               	movwf	fsr2l,c
 25200  014F0A  0EFF               	movlw	255
 25201  014F0C  20E2               	addwfc	fsr1h,w,c
 25202  014F0E  6EDA               	movwf	fsr2h,c
 25203                           
 25204                           ;stkvar	_bexp @ sp[(-13)+11]
 25205  014F10  0EFE               	movlw	-2
 25206  014F12  006F FF8C  F031    	movff	plusw1,btemp+11
 25207  014F18  90D8               	bcf	status,0,c
 25208  014F1A  3031               	rrcf	(btemp+11)^0,w,c
 25209  014F1C  6EDF               	movwf	indf2,c
 25210  014F1E  D644               	goto	l8099
 25211  014F20                     l2978:
 25212                           
 25213                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 25214  014F20  0EEB               	movlw	235
 25215  014F22  26E1               	addwf	fsr1l,f,c
 25216  014F24  0EFF               	movlw	255
 25217  014F26  22E2               	addwfc	fsr1h,f,c
 25218  014F28  0012               	return		;funcret
 25219  014F2A                     __end_of___fldiv:
 25220                           	opt callstack 0
 25221                           
 25222 ;; *************** function ___flge *****************
 25223 ;; Defined at:
 25224 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 25225 ;; Parameters:    Size  Location     Type
 25226 ;;  ff1             4  [STACK] unsigned char 
 25227 ;;  ff2             4  [STACK] unsigned char 
 25228 ;; Auto vars:     Size  Location     Type
 25229 ;;		None
 25230 ;; Return value:  Size  Location     Type
 25231 ;;		None               void
 25232 ;; Registers used:
 25233 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 25234 ;; Tracked objects:
 25235 ;;		On entry : 0/0
 25236 ;;		On exit  : 0/0
 25237 ;;		Unchanged: 0/0
 25238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25243 ;;Total ram usage:        0 bytes
 25244 ;; Hardware stack levels used:    1
 25245 ;; Hardware stack levels required when called:   15
 25246 ;; This function calls:
 25247 ;;		Nothing
 25248 ;; This function is called by:
 25249 ;;		_main
 25250 ;;		_calc_ror_data
 25251 ;;		_check_day_time
 25252 ;;		_calc_bsoc
 25253 ;;		_efgtoa
 25254 ;; This function uses a reentrant model
 25255 ;;
 25256                           
 25257                           	psect	text99
 25258  01875A                     __ptext99:
 25259                           	opt callstack 0
 25260  01875A                     ___flge:
 25261                           	opt callstack 0
 25262                           
 25263                           ;stkvar	_ff1 @ sp[(0)+-4]
 25264                           
 25265                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25266                           ;incstack = 0
 25267 ;; hardware stack exceeded
 25268  01875A  50E1               	movf	fsr1l,w,c
 25269  01875C  0FFC               	addlw	-4
 25270  01875E  6ED9               	movwf	fsr2l,c
 25271  018760  50E2               	movf	fsr1h,w,c
 25272  018762  6EDA               	movwf	fsr2h,c
 25273  018764  0EFF               	movlw	255
 25274  018766  22DA               	addwfc	fsr2h,f,c
 25275  018768  0E00               	movlw	0
 25276  01876A  14DE               	andwf	postinc2,w,c
 25277  01876C  6E2E               	movwf	(btemp+8)^0,c
 25278  01876E  0E00               	movlw	0
 25279  018770  14DE               	andwf	postinc2,w,c
 25280  018772  6E2F               	movwf	(btemp+9)^0,c
 25281  018774  0E80               	movlw	128
 25282  018776  14DE               	andwf	postinc2,w,c
 25283  018778  6E30               	movwf	(btemp+10)^0,c
 25284  01877A  0E7F               	movlw	127
 25285  01877C  14DE               	andwf	postinc2,w,c
 25286  01877E  6E31               	movwf	(btemp+11)^0,c
 25287  018780  502E               	movf	(btemp+8)^0,w,c
 25288  018782  102F               	iorwf	(btemp+9)^0,w,c
 25289  018784  1030               	iorwf	(btemp+10)^0,w,c
 25290  018786  1031               	iorwf	(btemp+11)^0,w,c
 25291  018788  A4D8               	btfss	status,2,c
 25292  01878A  D008               	goto	l8475
 25293                           
 25294                           ;stkvar	_ff1 @ sp[(0)+-4]
 25295  01878C  0EFC               	movlw	-4
 25296  01878E  6AE3               	clrf	plusw1,c
 25297  018790  0EFD               	movlw	-3
 25298  018792  6AE3               	clrf	plusw1,c
 25299  018794  0EFE               	movlw	-2
 25300  018796  6AE3               	clrf	plusw1,c
 25301  018798  0EFF               	movlw	-1
 25302  01879A  6AE3               	clrf	plusw1,c
 25303  01879C                     l8475:
 25304                           
 25305                           ;stkvar	_ff2 @ sp[(0)+-8]
 25306  01879C  50E1               	movf	fsr1l,w,c
 25307  01879E  0FF8               	addlw	-8
 25308  0187A0  6ED9               	movwf	fsr2l,c
 25309  0187A2  50E2               	movf	fsr1h,w,c
 25310  0187A4  6EDA               	movwf	fsr2h,c
 25311  0187A6  0EFF               	movlw	255
 25312  0187A8  22DA               	addwfc	fsr2h,f,c
 25313  0187AA  0E00               	movlw	0
 25314  0187AC  14DE               	andwf	postinc2,w,c
 25315  0187AE  6E2E               	movwf	(btemp+8)^0,c
 25316  0187B0  0E00               	movlw	0
 25317  0187B2  14DE               	andwf	postinc2,w,c
 25318  0187B4  6E2F               	movwf	(btemp+9)^0,c
 25319  0187B6  0E80               	movlw	128
 25320  0187B8  14DE               	andwf	postinc2,w,c
 25321  0187BA  6E30               	movwf	(btemp+10)^0,c
 25322  0187BC  0E7F               	movlw	127
 25323  0187BE  14DE               	andwf	postinc2,w,c
 25324  0187C0  6E31               	movwf	(btemp+11)^0,c
 25325  0187C2  502E               	movf	(btemp+8)^0,w,c
 25326  0187C4  102F               	iorwf	(btemp+9)^0,w,c
 25327  0187C6  1030               	iorwf	(btemp+10)^0,w,c
 25328  0187C8  1031               	iorwf	(btemp+11)^0,w,c
 25329  0187CA  A4D8               	btfss	status,2,c
 25330  0187CC  D008               	goto	l2659
 25331                           
 25332                           ;stkvar	_ff2 @ sp[(0)+-8]
 25333  0187CE  0EF8               	movlw	-8
 25334  0187D0  6AE3               	clrf	plusw1,c
 25335  0187D2  0EF9               	movlw	-7
 25336  0187D4  6AE3               	clrf	plusw1,c
 25337  0187D6  0EFA               	movlw	-6
 25338  0187D8  6AE3               	clrf	plusw1,c
 25339  0187DA  0EFB               	movlw	-5
 25340  0187DC  6AE3               	clrf	plusw1,c
 25341  0187DE                     l2659:
 25342                           
 25343                           ;stkvar	_ff1 @ sp[(0)+-4]
 25344  0187DE  0EFF               	movlw	-1
 25345  0187E0  AEE3               	btfss	plusw1,7,c
 25346  0187E2  D024               	goto	l8481
 25347                           
 25348                           ;stkvar	_ff1 @ sp[(0)+-4]
 25349  0187E4  0E00               	movlw	0
 25350  0187E6  6E2E               	movwf	(btemp+8)^0,c
 25351  0187E8  0E00               	movlw	0
 25352  0187EA  6E2F               	movwf	(btemp+9)^0,c
 25353  0187EC  0E00               	movlw	0
 25354  0187EE  6E30               	movwf	(btemp+10)^0,c
 25355  0187F0  0E80               	movlw	128
 25356  0187F2  6E31               	movwf	(btemp+11)^0,c
 25357  0187F4  0EFC               	movlw	-4
 25358  0187F6  50E3               	movf	plusw1,w,c
 25359  0187F8  5E2E               	subwf	(btemp+8)^0,f,c
 25360  0187FA  0EFD               	movlw	-3
 25361  0187FC  50E3               	movf	plusw1,w,c
 25362  0187FE  5A2F               	subwfb	(btemp+9)^0,f,c
 25363  018800  0EFE               	movlw	-2
 25364  018802  50E3               	movf	plusw1,w,c
 25365  018804  5A30               	subwfb	(btemp+10)^0,f,c
 25366  018806  0EFF               	movlw	-1
 25367  018808  50E3               	movf	plusw1,w,c
 25368  01880A  5A31               	subwfb	(btemp+11)^0,f,c
 25369                           
 25370                           ;stkvar	_ff1 @ sp[(0)+-4]
 25371  01880C  0EFC               	movlw	-4
 25372  01880E  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 25373  018814  0EFD               	movlw	-3
 25374  018816  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 25375  01881C  0EFE               	movlw	-2
 25376  01881E  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 25377  018824  0EFF               	movlw	-1
 25378  018826  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 25379  01882C                     l8481:
 25380                           
 25381                           ;stkvar	_ff2 @ sp[(0)+-8]
 25382  01882C  0EFB               	movlw	-5
 25383  01882E  AEE3               	btfss	plusw1,7,c
 25384  018830  D024               	goto	l8485
 25385                           
 25386                           ;stkvar	_ff2 @ sp[(0)+-8]
 25387  018832  0E00               	movlw	0
 25388  018834  6E2E               	movwf	(btemp+8)^0,c
 25389  018836  0E00               	movlw	0
 25390  018838  6E2F               	movwf	(btemp+9)^0,c
 25391  01883A  0E00               	movlw	0
 25392  01883C  6E30               	movwf	(btemp+10)^0,c
 25393  01883E  0E80               	movlw	128
 25394  018840  6E31               	movwf	(btemp+11)^0,c
 25395  018842  0EF8               	movlw	-8
 25396  018844  50E3               	movf	plusw1,w,c
 25397  018846  5E2E               	subwf	(btemp+8)^0,f,c
 25398  018848  0EF9               	movlw	-7
 25399  01884A  50E3               	movf	plusw1,w,c
 25400  01884C  5A2F               	subwfb	(btemp+9)^0,f,c
 25401  01884E  0EFA               	movlw	-6
 25402  018850  50E3               	movf	plusw1,w,c
 25403  018852  5A30               	subwfb	(btemp+10)^0,f,c
 25404  018854  0EFB               	movlw	-5
 25405  018856  50E3               	movf	plusw1,w,c
 25406  018858  5A31               	subwfb	(btemp+11)^0,f,c
 25407                           
 25408                           ;stkvar	_ff2 @ sp[(0)+-8]
 25409  01885A  0EF8               	movlw	-8
 25410  01885C  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 25411  018862  0EF9               	movlw	-7
 25412  018864  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 25413  01886A  0EFA               	movlw	-6
 25414  01886C  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 25415  018872  0EFB               	movlw	-5
 25416  018874  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 25417  01887A                     l8485:
 25418                           
 25419                           ;stkvar	_ff1 @ sp[(0)+-4]
 25420  01887A  0EFF               	movlw	-1
 25421  01887C  7EE3               	btg	plusw1,7,c
 25422                           
 25423                           ;stkvar	_ff2 @ sp[(0)+-8]
 25424  01887E  0EFB               	movlw	-5
 25425  018880  7EE3               	btg	plusw1,7,c
 25426                           
 25427                           ;stkvar	_ff2 @ sp[(0)+-8]
 25428                           ;stkvar	_ff1 @ sp[(0)+-4]
 25429  018882  50E1               	movf	fsr1l,w,c
 25430  018884  0FFC               	addlw	-4
 25431  018886  6ED9               	movwf	fsr2l,c
 25432  018888  50E2               	movf	fsr1h,w,c
 25433  01888A  6EDA               	movwf	fsr2h,c
 25434  01888C  0EFF               	movlw	255
 25435  01888E  22DA               	addwfc	fsr2h,f,c
 25436  018890  0EF8               	movlw	-8
 25437  018892  50E3               	movf	plusw1,w,c
 25438  018894  5CDE               	subwf	postinc2,w,c
 25439  018896  0EF9               	movlw	-7
 25440  018898  50E3               	movf	plusw1,w,c
 25441  01889A  58DE               	subwfb	postinc2,w,c
 25442  01889C  0EFA               	movlw	-6
 25443  01889E  50E3               	movf	plusw1,w,c
 25444  0188A0  58DE               	subwfb	postinc2,w,c
 25445  0188A2  0EFB               	movlw	-5
 25446  0188A4  50E3               	movf	plusw1,w,c
 25447  0188A6  58DE               	subwfb	postinc2,w,c
 25448  0188A8  B0D8               	btfsc	status,0,c
 25449  0188AA  D002               	goto	l8493
 25450  0188AC  9026               	bcf	btemp& (0+255),0,c
 25451  0188AE  D001               	goto	l2666
 25452  0188B0                     l8493:
 25453  0188B0  8026               	bsf	btemp& (0+255),0,c
 25454  0188B2                     l2666:
 25455                           
 25456                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 25457  0188B2  0EF8               	movlw	248
 25458  0188B4  26E1               	addwf	fsr1l,f,c
 25459  0188B6  0EFF               	movlw	255
 25460  0188B8  22E2               	addwfc	fsr1h,f,c
 25461  0188BA  0012               	return		;funcret
 25462  0188BC                     __end_of___flge:
 25463                           	opt callstack 0
 25464                           
 25465 ;; *************** function _calc_model_data *****************
 25466 ;; Defined at:
 25467 ;;		line 67 in file "mbmc.c"
 25468 ;; Parameters:    Size  Location     Type
 25469 ;;		None
 25470 ;; Auto vars:     Size  Location     Type
 25471 ;;		None
 25472 ;; Return value:  Size  Location     Type
 25473 ;;                  1  [STACK] void 
 25474 ;; Registers used:
 25475 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25476 ;; Tracked objects:
 25477 ;;		On entry : 0/2
 25478 ;;		On exit  : 3F/1
 25479 ;;		Unchanged: 0/0
 25480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25485 ;;Total ram usage:        0 bytes
 25486 ;; Hardware stack levels used:    1
 25487 ;; Hardware stack levels required when called:   18
 25488 ;; This function calls:
 25489 ;;		___fladd
 25490 ;;		___flmul
 25491 ;;		___flsub
 25492 ;;		_lp_filter
 25493 ;;		_start_bsoc
 25494 ;;		_stop_bsoc
 25495 ;; This function is called by:
 25496 ;;		_main
 25497 ;; This function uses a reentrant model
 25498 ;;
 25499                           
 25500                           	psect	text100
 25501  015C10                     __ptext100:
 25502                           	opt callstack 0
 25503  015C10                     _calc_model_data:
 25504                           	opt callstack 12
 25505                           
 25506                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 25507                           
 25508                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25509                           ;incstack = 0
 25510  015C10  EC94  F0DC         	call	_stop_bsoc	;wreg free
 25511                           
 25512                           ; BSR set to: 57
 25513                           ;mbmc.c: 72:  if (!V.calib) {
 25514  015C14  0102               	movlb	2	; () banked
 25515  015C16  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 25516  015C18  A4D8               	btfss	status,2,c
 25517  015C1A  D1C5               	goto	l10863
 25518                           
 25519                           ; BSR set to: 2
 25520                           ;mbmc.c: 73:   C.c_bat = C.calc[C_BATT];
 25521  015C1C  C100  F144         	movff	_C,_C+68	;volatile
 25522  015C20  C101  F145         	movff	_C+1,_C+69	;volatile
 25523  015C24  C102  F146         	movff	_C+2,_C+70	;volatile
 25524  015C28  C103  F147         	movff	_C+3,_C+71	;volatile
 25525                           
 25526                           ; BSR set to: 2
 25527                           ;mbmc.c: 74:   C.bc_ror = C.c_bat - bcror;
 25528  015C2C  0060  F21B  FFE6   	movff	calc_model_data@bcror,postinc1
 25529  015C32  0060  F21F  FFE6   	movff	calc_model_data@bcror+1,postinc1
 25530  015C38  0060  F223  FFE6   	movff	calc_model_data@bcror+2,postinc1
 25531  015C3E  0060  F227  FFE6   	movff	calc_model_data@bcror+3,postinc1
 25532  015C44  0060  F513  FFE6   	movff	_C+68,postinc1
 25533  015C4A  0060  F517  FFE6   	movff	_C+69,postinc1
 25534  015C50  0060  F51B  FFE6   	movff	_C+70,postinc1
 25535  015C56  0060  F51F  FFE6   	movff	_C+71,postinc1
 25536  015C5C  EC43  F0D6         	call	___flsub	;wreg free
 25537  015C60  0060  F098  F16C   	movff	btemp,_C+108	;volatile
 25538  015C66  0060  F09C  F16D   	movff	btemp+1,_C+109	;volatile
 25539  015C6C  0060  F0A0  F16E   	movff	btemp+2,_C+110	;volatile
 25540  015C72  0060  F0A4  F16F   	movff	btemp+3,_C+111	;volatile
 25541                           
 25542                           ;mbmc.c: 75:   bcror = C.c_bat;
 25543  015C78  C144  F086         	movff	_C+68,calc_model_data@bcror	;volatile
 25544  015C7C  C145  F087         	movff	_C+69,calc_model_data@bcror+1	;volatile
 25545  015C80  C146  F088         	movff	_C+70,calc_model_data@bcror+2	;volatile
 25546  015C84  C147  F089         	movff	_C+71,calc_model_data@bcror+3	;volatile
 25547                           
 25548                           ;mbmc.c: 76:   C.c_pv = C.calc[C_PV];
 25549  015C88  C104  F148         	movff	_C+4,_C+72	;volatile
 25550  015C8C  C105  F149         	movff	_C+5,_C+73	;volatile
 25551  015C90  C106  F14A         	movff	_C+6,_C+74	;volatile
 25552  015C94  C107  F14B         	movff	_C+7,_C+75	;volatile
 25553                           
 25554                           ;mbmc.c: 77:   C.v_bat = C.calc[V_BAT];
 25555  015C98  C110  F154         	movff	_C+16,_C+84	;volatile
 25556  015C9C  C111  F155         	movff	_C+17,_C+85	;volatile
 25557  015CA0  C112  F156         	movff	_C+18,_C+86	;volatile
 25558  015CA4  C113  F157         	movff	_C+19,_C+87	;volatile
 25559                           
 25560                           ;mbmc.c: 78:   C.bv_ror = C.v_bat - bvror;
 25561  015CA8  0060  F22B  FFE6   	movff	calc_model_data@bvror,postinc1
 25562  015CAE  0060  F22F  FFE6   	movff	calc_model_data@bvror+1,postinc1
 25563  015CB4  0060  F233  FFE6   	movff	calc_model_data@bvror+2,postinc1
 25564  015CBA  0060  F237  FFE6   	movff	calc_model_data@bvror+3,postinc1
 25565  015CC0  0060  F553  FFE6   	movff	_C+84,postinc1
 25566  015CC6  0060  F557  FFE6   	movff	_C+85,postinc1
 25567  015CCC  0060  F55B  FFE6   	movff	_C+86,postinc1
 25568  015CD2  0060  F55F  FFE6   	movff	_C+87,postinc1
 25569  015CD8  EC43  F0D6         	call	___flsub	;wreg free
 25570  015CDC  0060  F098  F168   	movff	btemp,_C+104	;volatile
 25571  015CE2  0060  F09C  F169   	movff	btemp+1,_C+105	;volatile
 25572  015CE8  0060  F0A0  F16A   	movff	btemp+2,_C+106	;volatile
 25573  015CEE  0060  F0A4  F16B   	movff	btemp+3,_C+107	;volatile
 25574                           
 25575                           ;mbmc.c: 79:   bvror = C.v_bat;
 25576  015CF4  C154  F08A         	movff	_C+84,calc_model_data@bvror	;volatile
 25577  015CF8  C155  F08B         	movff	_C+85,calc_model_data@bvror+1	;volatile
 25578  015CFC  C156  F08C         	movff	_C+86,calc_model_data@bvror+2	;volatile
 25579  015D00  C157  F08D         	movff	_C+87,calc_model_data@bvror+3	;volatile
 25580                           
 25581                           ;mbmc.c: 80:   C.v_pv = C.calc[V_PV];
 25582  015D04  C114  F150         	movff	_C+20,_C+80	;volatile
 25583  015D08  C115  F151         	movff	_C+21,_C+81	;volatile
 25584  015D0C  C116  F152         	movff	_C+22,_C+82	;volatile
 25585  015D10  C117  F153         	movff	_C+23,_C+83	;volatile
 25586                           
 25587                           ;mbmc.c: 81:   C.v_cc = C.calc[V_CC];
 25588  015D14  C108  F14C         	movff	_C+8,_C+76	;volatile
 25589  015D18  C109  F14D         	movff	_C+9,_C+77	;volatile
 25590  015D1C  C10A  F14E         	movff	_C+10,_C+78	;volatile
 25591  015D20  C10B  F14F         	movff	_C+11,_C+79	;volatile
 25592                           
 25593                           ;mbmc.c: 82:   C.v_inverter = C.calc[V_INVERTER];
 25594  015D24  C130  F164         	movff	_C+48,_C+100	;volatile
 25595  015D28  C131  F165         	movff	_C+49,_C+101	;volatile
 25596  015D2C  C132  F166         	movff	_C+50,_C+102	;volatile
 25597  015D30  C133  F167         	movff	_C+51,_C+103	;volatile
 25598                           
 25599                           ;mbmc.c: 83:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 25600  015D34  0E01               	movlw	1
 25601  015D36  6EE6               	movwf	postinc1,c
 25602  015D38  0E10               	movlw	16
 25603  015D3A  6EE6               	movwf	postinc1,c
 25604  015D3C  0060  F403  FFE6   	movff	_C,postinc1
 25605  015D42  0060  F407  FFE6   	movff	_C+1,postinc1
 25606  015D48  0060  F40B  FFE6   	movff	_C+2,postinc1
 25607  015D4E  0060  F40F  FFE6   	movff	_C+3,postinc1
 25608  015D54  0060  F413  FFE6   	movff	_C+4,postinc1
 25609  015D5A  0060  F417  FFE6   	movff	_C+5,postinc1
 25610  015D60  0060  F41B  FFE6   	movff	_C+6,postinc1
 25611  015D66  0060  F41F  FFE6   	movff	_C+7,postinc1
 25612  015D6C  EC43  F0D6         	call	___flsub	;wreg free
 25613  015D70  0060  F09B  FFE6   	movff	btemp,postinc1
 25614  015D76  0060  F09F  FFE6   	movff	btemp+1,postinc1
 25615  015D7C  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 25616  015D82  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 25617  015D88  EC19  F0BF         	call	_lp_filter	;wreg free
 25618  015D8C  0060  F098  F140   	movff	btemp,_C+64	;volatile
 25619  015D92  0060  F09C  F141   	movff	btemp+1,_C+65	;volatile
 25620  015D98  0060  F0A0  F142   	movff	btemp+2,_C+66	;volatile
 25621  015D9E  0060  F0A4  F143   	movff	btemp+3,_C+67	;volatile
 25622                           
 25623                           ;mbmc.c: 84:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 25624  015DA4  0E01               	movlw	1
 25625  015DA6  6EE6               	movwf	postinc1,c
 25626  015DA8  0E11               	movlw	17
 25627  015DAA  6EE6               	movwf	postinc1,c
 25628  015DAC  0060  F553  FFE6   	movff	_C+84,postinc1
 25629  015DB2  0060  F557  FFE6   	movff	_C+85,postinc1
 25630  015DB8  0060  F55B  FFE6   	movff	_C+86,postinc1
 25631  015DBE  0060  F55F  FFE6   	movff	_C+87,postinc1
 25632  015DC4  0060  F503  FFE6   	movff	_C+64,postinc1
 25633  015DCA  0060  F507  FFE6   	movff	_C+65,postinc1
 25634  015DD0  0060  F50B  FFE6   	movff	_C+66,postinc1
 25635  015DD6  0060  F50F  FFE6   	movff	_C+67,postinc1
 25636  015DDC  EC44  F099         	call	___flmul	;wreg free
 25637  015DE0  0060  F09B  FFE6   	movff	btemp,postinc1
 25638  015DE6  0060  F09F  FFE6   	movff	btemp+1,postinc1
 25639  015DEC  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 25640  015DF2  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 25641  015DF8  EC19  F0BF         	call	_lp_filter	;wreg free
 25642  015DFC  0060  F098  F170   	movff	btemp,_C+112	;volatile
 25643  015E02  0060  F09C  F171   	movff	btemp+1,_C+113	;volatile
 25644  015E08  0060  F0A0  F172   	movff	btemp+2,_C+114	;volatile
 25645  015E0E  0060  F0A4  F173   	movff	btemp+3,_C+115	;volatile
 25646                           
 25647                           ;mbmc.c: 85:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 25648  015E14  0E01               	movlw	1
 25649  015E16  6EE6               	movwf	postinc1,c
 25650  015E18  0E12               	movlw	18
 25651  015E1A  6EE6               	movwf	postinc1,c
 25652  015E1C  0060  F543  FFE6   	movff	_C+80,postinc1
 25653  015E22  0060  F547  FFE6   	movff	_C+81,postinc1
 25654  015E28  0060  F54B  FFE6   	movff	_C+82,postinc1
 25655  015E2E  0060  F54F  FFE6   	movff	_C+83,postinc1
 25656  015E34  0060  F523  FFE6   	movff	_C+72,postinc1
 25657  015E3A  0060  F527  FFE6   	movff	_C+73,postinc1
 25658  015E40  0060  F52B  FFE6   	movff	_C+74,postinc1
 25659  015E46  0060  F52F  FFE6   	movff	_C+75,postinc1
 25660  015E4C  EC44  F099         	call	___flmul	;wreg free
 25661  015E50  0060  F09B  FFE6   	movff	btemp,postinc1
 25662  015E56  0060  F09F  FFE6   	movff	btemp+1,postinc1
 25663  015E5C  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 25664  015E62  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 25665  015E68  EC19  F0BF         	call	_lp_filter	;wreg free
 25666  015E6C  0060  F098  F178   	movff	btemp,_C+120	;volatile
 25667  015E72  0060  F09C  F179   	movff	btemp+1,_C+121	;volatile
 25668  015E78  0060  F0A0  F17A   	movff	btemp+2,_C+122	;volatile
 25669  015E7E  0060  F0A4  F17B   	movff	btemp+3,_C+123	;volatile
 25670                           
 25671                           ;mbmc.c: 86:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 25672  015E84  0E01               	movlw	1
 25673  015E86  6EE6               	movwf	postinc1,c
 25674  015E88  0E13               	movlw	19
 25675  015E8A  6EE6               	movwf	postinc1,c
 25676  015E8C  0E00               	movlw	0
 25677  015E8E  6EE6               	movwf	postinc1,c
 25678  015E90  0E00               	movlw	0
 25679  015E92  6EE6               	movwf	postinc1,c
 25680  015E94  0E60               	movlw	96
 25681  015E96  6EE6               	movwf	postinc1,c
 25682  015E98  0EC1               	movlw	193
 25683  015E9A  6EE6               	movwf	postinc1,c
 25684  015E9C  0060  F593  FFE6   	movff	_C+100,postinc1
 25685  015EA2  0060  F597  FFE6   	movff	_C+101,postinc1
 25686  015EA8  0060  F59B  FFE6   	movff	_C+102,postinc1
 25687  015EAE  0060  F59F  FFE6   	movff	_C+103,postinc1
 25688  015EB4  0060  F503  FFE6   	movff	_C+64,postinc1
 25689  015EBA  0060  F507  FFE6   	movff	_C+65,postinc1
 25690  015EC0  0060  F50B  FFE6   	movff	_C+66,postinc1
 25691  015EC6  0060  F50F  FFE6   	movff	_C+67,postinc1
 25692  015ECC  EC44  F099         	call	___flmul	;wreg free
 25693  015ED0  0060  F09B  FFE6   	movff	btemp,postinc1
 25694  015ED6  0060  F09F  FFE6   	movff	btemp+1,postinc1
 25695  015EDC  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 25696  015EE2  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 25697  015EE8  EC59  F09D         	call	___fladd	;wreg free
 25698  015EEC  0060  F09B  FFE6   	movff	btemp,postinc1
 25699  015EF2  0060  F09F  FFE6   	movff	btemp+1,postinc1
 25700  015EF8  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 25701  015EFE  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 25702  015F04  EC19  F0BF         	call	_lp_filter	;wreg free
 25703  015F08  0060  F098  F174   	movff	btemp,_C+116	;volatile
 25704  015F0E  0060  F09C  F175   	movff	btemp+1,_C+117	;volatile
 25705  015F14  0060  F0A0  F176   	movff	btemp+2,_C+118	;volatile
 25706  015F1A  0060  F0A4  F177   	movff	btemp+3,_C+119	;volatile
 25707                           
 25708                           ;mbmc.c: 87:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 25709  015F20  0E01               	movlw	1
 25710  015F22  6EE6               	movwf	postinc1,c
 25711  015F24  0E14               	movlw	20
 25712  015F26  6EE6               	movwf	postinc1,c
 25713  015F28  0060  F553  FFE6   	movff	_C+84,postinc1
 25714  015F2E  0060  F557  FFE6   	movff	_C+85,postinc1
 25715  015F34  0060  F55B  FFE6   	movff	_C+86,postinc1
 25716  015F3A  0060  F55F  FFE6   	movff	_C+87,postinc1
 25717  015F40  0060  F513  FFE6   	movff	_C+68,postinc1
 25718  015F46  0060  F517  FFE6   	movff	_C+69,postinc1
 25719  015F4C  0060  F51B  FFE6   	movff	_C+70,postinc1
 25720  015F52  0060  F51F  FFE6   	movff	_C+71,postinc1
 25721  015F58  EC44  F099         	call	___flmul	;wreg free
 25722  015F5C  0060  F09B  FFE6   	movff	btemp,postinc1
 25723  015F62  0060  F09F  FFE6   	movff	btemp+1,postinc1
 25724  015F68  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 25725  015F6E  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 25726  015F74  EC19  F0BF         	call	_lp_filter	;wreg free
 25727  015F78  0060  F098  F17C   	movff	btemp,_C+124	;volatile
 25728  015F7E  0060  F09C  F17D   	movff	btemp+1,_C+125	;volatile
 25729  015F84  0060  F0A0  F17E   	movff	btemp+2,_C+126	;volatile
 25730  015F8A  0060  F0A4  F17F   	movff	btemp+3,_C+127	;volatile
 25731                           
 25732                           ;mbmc.c: 91:   if (C.p_inverter < 0.0)
 25733  015F90  0101               	movlb	1	; () banked
 25734  015F92  AF77               	btfss	(_C+119)& (0+255),7,b	;volatile
 25735  015F94  D008               	goto	l10863
 25736                           
 25737                           ; BSR set to: 1
 25738                           ;mbmc.c: 92:    C.p_inverter = 0.0001;
 25739  015F96  0E17               	movlw	23
 25740  015F98  6F74               	movwf	(_C+116)& (0+255),b	;volatile
 25741  015F9A  0EB7               	movlw	183
 25742  015F9C  6F75               	movwf	(_C+117)& (0+255),b	;volatile
 25743  015F9E  0ED1               	movlw	209
 25744  015FA0  6F76               	movwf	(_C+118)& (0+255),b	;volatile
 25745  015FA2  0E38               	movlw	56
 25746  015FA4  6F77               	movwf	(_C+119)& (0+255),b	;volatile
 25747  015FA6                     l10863:
 25748                           
 25749                           ;mbmc.c: 94:  start_bsoc();
 25750  015FA6  EC05  F0DB         	call	_start_bsoc	;wreg free
 25751                           
 25752                           ; BSR set to: 57
 25753                           ;mbmc.c: 95:  C.update = 1;
 25754  015FAA  0E01               	movlw	1
 25755  015FAC  0101               	movlb	1	; () banked
 25756  015FAE  6FB0               	movwf	(_C+176)& (0+255),b	;volatile
 25757                           
 25758                           ; BSR set to: 1
 25759                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25760  015FB0  0012               	return		;funcret
 25761  015FB2                     __end_of_calc_model_data:
 25762                           	opt callstack 0
 25763                           
 25764 ;; *************** function _stop_bsoc *****************
 25765 ;; Defined at:
 25766 ;;		line 114 in file "bsoc.c"
 25767 ;; Parameters:    Size  Location     Type
 25768 ;;		None
 25769 ;; Auto vars:     Size  Location     Type
 25770 ;;		None
 25771 ;; Return value:  Size  Location     Type
 25772 ;;                  1  [STACK] void 
 25773 ;; Registers used:
 25774 ;;		None
 25775 ;; Tracked objects:
 25776 ;;		On entry : 0/2
 25777 ;;		On exit  : 3F/39
 25778 ;;		Unchanged: 0/0
 25779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25784 ;;Total ram usage:        0 bytes
 25785 ;; Hardware stack levels used:    1
 25786 ;; Hardware stack levels required when called:   15
 25787 ;; This function calls:
 25788 ;;		Nothing
 25789 ;; This function is called by:
 25790 ;;		_calc_model_data
 25791 ;; This function uses a reentrant model
 25792 ;;
 25793                           
 25794                           	psect	text101
 25795  01B928                     __ptext101:
 25796                           	opt callstack 0
 25797  01B928                     _stop_bsoc:
 25798                           	opt callstack 14
 25799                           
 25800                           ;bsoc.c: 117:  PIE6bits.TMR3IE = 0;
 25801                           
 25802                           ; BSR set to: 1
 25803                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25804                           ;incstack = 0
 25805  01B928  0139               	movlb	57	; () banked
 25806  01B92A  9D96               	bcf	150,6,b	;volatile
 25807                           
 25808                           ; BSR set to: 57
 25809                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 25810  01B92C  0012               	return		;funcret
 25811  01B92E                     __end_of_stop_bsoc:
 25812                           	opt callstack 0
 25813                           
 25814 ;; *************** function _start_bsoc *****************
 25815 ;; Defined at:
 25816 ;;		line 105 in file "bsoc.c"
 25817 ;; Parameters:    Size  Location     Type
 25818 ;;		None
 25819 ;; Auto vars:     Size  Location     Type
 25820 ;;		None
 25821 ;; Return value:  Size  Location     Type
 25822 ;;                  1  [STACK] void 
 25823 ;; Registers used:
 25824 ;;		wreg, status,2, status,0, btemp+11
 25825 ;; Tracked objects:
 25826 ;;		On entry : 3C/2
 25827 ;;		On exit  : 3F/39
 25828 ;;		Unchanged: 0/0
 25829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25834 ;;Total ram usage:        0 bytes
 25835 ;; Hardware stack levels used:    1
 25836 ;; Hardware stack levels required when called:   15
 25837 ;; This function calls:
 25838 ;;		Nothing
 25839 ;; This function is called by:
 25840 ;;		_calc_model_data
 25841 ;; This function uses a reentrant model
 25842 ;;
 25843                           
 25844                           	psect	text102
 25845  01B60A                     __ptext102:
 25846                           	opt callstack 0
 25847  01B60A                     _start_bsoc:
 25848                           	opt callstack 14
 25849                           
 25850                           ;bsoc.c: 108:  PIE6bits.TMR3IE = 1;
 25851                           
 25852                           ; BSR set to: 57
 25853                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25854                           ;incstack = 0
 25855  01B60A  0139               	movlb	57	; () banked
 25856  01B60C  8D96               	bsf	150,6,b	;volatile
 25857                           
 25858                           ; BSR set to: 57
 25859  01B60E  A4BE               	btfss	190,2,c	;volatile
 25860  01B610  D002               	goto	u9570
 25861  01B612  0E01               	movlw	1
 25862  01B614  D001               	goto	u9576
 25863  01B616                     u9570:
 25864  01B616  0E00               	movlw	0
 25865  01B618                     u9576:
 25866  01B618  0AFF               	xorlw	255
 25867  01B61A  6E31               	movwf	(btemp+11)^0,c
 25868  01B61C  4631               	rlncf	(btemp+11)^0,f,c
 25869  01B61E  4631               	rlncf	(btemp+11)^0,f,c
 25870  01B620  50BE               	movf	190,w,c	;volatile
 25871  01B622  1831               	xorwf	(btemp+11)^0,w,c
 25872  01B624  0BFB               	andlw	-5
 25873  01B626  1831               	xorwf	(btemp+11)^0,w,c
 25874  01B628  6EBE               	movwf	190,c	;volatile
 25875                           
 25876                           ; BSR set to: 57
 25877                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 25878  01B62A  0012               	return		;funcret
 25879  01B62C                     __end_of_start_bsoc:
 25880                           	opt callstack 0
 25881                           
 25882 ;; *************** function _lp_filter *****************
 25883 ;; Defined at:
 25884 ;;		line 29 in file "mbmc.c"
 25885 ;; Parameters:    Size  Location     Type
 25886 ;;  new             4  [STACK] const float 
 25887 ;;  bn              1  [STACK] const unsigned char 
 25888 ;;  slow            1  [STACK] const char 
 25889 ;; Auto vars:     Size  Location     Type
 25890 ;;  lp_speed        4  [STACK] float 
 25891 ;; Return value:  Size  Location     Type
 25892 ;;                  4  [STACK] float 
 25893 ;; Registers used:
 25894 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25895 ;; Tracked objects:
 25896 ;;		On entry : 0/2
 25897 ;;		On exit  : 0/0
 25898 ;;		Unchanged: 0/0
 25899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25904 ;;Total ram usage:        0 bytes
 25905 ;; Hardware stack levels used:    1
 25906 ;; Hardware stack levels required when called:   17
 25907 ;; This function calls:
 25908 ;;		___fladd
 25909 ;;		___flmul
 25910 ;;		___flsub
 25911 ;; This function is called by:
 25912 ;;		_main
 25913 ;;		_convert_adc_data
 25914 ;;		_calc_model_data
 25915 ;; This function uses a reentrant model
 25916 ;;
 25917                           
 25918                           	psect	text103
 25919  017E32                     __ptext103:
 25920                           	opt callstack 0
 25921  017E32                     _lp_filter:
 25922                           	opt callstack 0
 25923                           
 25924                           ; BSR set to: 57
 25925                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25926  017E32  52E6               	movf	postinc1,f,c
 25927  017E34  52E6               	movf	postinc1,f,c
 25928  017E36  52E6               	movf	postinc1,f,c
 25929  017E38  52E6               	movf	postinc1,f,c
 25930                           
 25931                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 25932                           ;stkvar	_bn @ sp[(-4)+-5]
 25933                           
 25934                           ;incstack = 0
 25935  017E3A  0EF7               	movlw	-9
 25936  017E3C  006F FF8C  F026    	movff	plusw1,btemp
 25937  017E42  0E14               	movlw	20
 25938  017E44  6426               	cpfsgt	btemp^0,c
 25939  017E46  D011               	goto	l10281
 25940  017E48                     u9480:
 25941                           
 25942                           ;mbmc.c: 35:   return new;
 25943                           ;stkvar	_new @ sp[(-4)+-4]
 25944  017E48  0EF8               	movlw	-8
 25945  017E4A  006F FF8C  F026    	movff	plusw1,btemp
 25946  017E50  0EF9               	movlw	-7
 25947  017E52  006F FF8C  F027    	movff	plusw1,btemp+1
 25948  017E58  0EFA               	movlw	-6
 25949  017E5A  006F FF8C  F028    	movff	plusw1,btemp+2
 25950  017E60  0EFB               	movlw	-5
 25951  017E62  006F FF8C  F029    	movff	plusw1,btemp+3
 25952  017E68  D0BD               	goto	l1835
 25953  017E6A                     l10281:
 25954                           
 25955                           ;mbmc.c: 37:  if (slow == (-1)) {
 25956                           ;stkvar	_slow @ sp[(-4)+-6]
 25957  017E6A  0EF6               	movlw	-10
 25958  017E6C  28E3               	incf	plusw1,w,c
 25959  017E6E  A4D8               	btfss	status,2,c
 25960  017E70  D012               	goto	l10289
 25961                           
 25962                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 25963                           ;stkvar	_bn @ sp[(-4)+-5]
 25964  017E72  0EF7               	movlw	-9
 25965  017E74  50E3               	movf	plusw1,w,c
 25966  017E76  0D04               	mullw	4
 25967  017E78  0E00               	movlw	low lp_filter@smooth
 25968  017E7A  24F3               	addwf	243,w,c
 25969  017E7C  6ED9               	movwf	fsr2l,c
 25970  017E7E  0E03               	movlw	high lp_filter@smooth
 25971  017E80  20F4               	addwfc	prodh,w,c
 25972  017E82  6EDA               	movwf	fsr2h,c
 25973  017E84  0E00               	movlw	0
 25974  017E86  6EDE               	movwf	postinc2,c
 25975  017E88  0E00               	movlw	0
 25976  017E8A  6EDE               	movwf	postinc2,c
 25977  017E8C  0E00               	movlw	0
 25978  017E8E  6EDE               	movwf	postinc2,c
 25979  017E90  0E00               	movlw	0
 25980  017E92  6EDD               	movwf	postdec2,c
 25981  017E94  D7D9               	goto	u9480
 25982  017E96                     l10289:
 25983                           
 25984                           ;mbmc.c: 42:  if (slow) {
 25985                           ;stkvar	_slow @ sp[(-4)+-6]
 25986  017E96  0EF6               	movlw	-10
 25987  017E98  50E3               	movf	plusw1,w,c
 25988  017E9A  B4D8               	btfsc	status,2,c
 25989  017E9C  D006               	goto	l10293
 25990                           
 25991                           ;mbmc.c: 43:   lp_speed = 0.033;
 25992  017E9E  0E02               	movlw	2
 25993  017EA0  6E2E               	movwf	(btemp+8)^0,c
 25994  017EA2  0E2B               	movlw	43
 25995  017EA4  6E2F               	movwf	(btemp+9)^0,c
 25996  017EA6  0E07               	movlw	7
 25997  017EA8  D005               	goto	L31
 25998  017EAA                     l10293:
 25999                           
 26000                           ;mbmc.c: 45:   lp_speed = 0.066;
 26001  017EAA  0E02               	movlw	2
 26002  017EAC  6E2E               	movwf	(btemp+8)^0,c
 26003  017EAE  0E2B               	movlw	43
 26004  017EB0  6E2F               	movwf	(btemp+9)^0,c
 26005  017EB2  0E87               	movlw	135
 26006  017EB4                     L31:
 26007  017EB4  6E30               	movwf	(btemp+10)^0,c
 26008  017EB6  0E3D               	movlw	61
 26009  017EB8  6E31               	movwf	(btemp+11)^0,c
 26010                           
 26011                           ;stkvar	_lp_speed @ sp[(-4)+0]
 26012  017EBA  0EFC               	movlw	-4
 26013  017EBC  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 26014  017EC2  0EFD               	movlw	-3
 26015  017EC4  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 26016  017ECA  0EFE               	movlw	-2
 26017  017ECC  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 26018  017ED2  0EFF               	movlw	-1
 26019  017ED4  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26020                           
 26021                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 26022                           ;stkvar	_bn @ sp[(-4)+-5]
 26023  017EDA  0EF7               	movlw	-9
 26024  017EDC  50E3               	movf	plusw1,w,c
 26025  017EDE  0D04               	mullw	4
 26026  017EE0  0E00               	movlw	low lp_filter@smooth
 26027  017EE2  24F3               	addwf	243,w,c
 26028  017EE4  6ED9               	movwf	fsr2l,c
 26029  017EE6  0E03               	movlw	high lp_filter@smooth
 26030  017EE8  20F4               	addwfc	prodh,w,c
 26031  017EEA  6EDA               	movwf	fsr2h,c
 26032  017EEC  006F FF7B FFE6     	movff	postinc2,postinc1
 26033  017EF2  006F FF7B FFE6     	movff	postinc2,postinc1
 26034  017EF8  006F FF7B FFE6     	movff	postinc2,postinc1
 26035  017EFE  006F FF7B FFE6     	movff	postinc2,postinc1
 26036                           
 26037                           ;stkvar	_lp_speed @ sp[(-8)+0]
 26038  017F04  0EF8               	movlw	-8
 26039  017F06  006F FF8F FFE6     	movff	plusw1,postinc1
 26040  017F0C  006F FF8F FFE6     	movff	plusw1,postinc1
 26041  017F12  006F FF8F FFE6     	movff	plusw1,postinc1
 26042  017F18  006F FF8F FFE6     	movff	plusw1,postinc1
 26043                           
 26044                           ;stkvar	_bn @ sp[(-12)+-5]
 26045  017F1E  0EEF               	movlw	-17
 26046  017F20  50E3               	movf	plusw1,w,c
 26047  017F22  0D04               	mullw	4
 26048  017F24  0E00               	movlw	low lp_filter@smooth
 26049  017F26  24F3               	addwf	243,w,c
 26050  017F28  6ED9               	movwf	fsr2l,c
 26051  017F2A  0E03               	movlw	high lp_filter@smooth
 26052  017F2C  20F4               	addwfc	prodh,w,c
 26053  017F2E  6EDA               	movwf	fsr2h,c
 26054  017F30  006F FF7B FFE6     	movff	postinc2,postinc1
 26055  017F36  006F FF7B FFE6     	movff	postinc2,postinc1
 26056  017F3C  006F FF7B FFE6     	movff	postinc2,postinc1
 26057  017F42  006F FF7B FFE6     	movff	postinc2,postinc1
 26058                           
 26059                           ;stkvar	_new @ sp[(-16)+-4]
 26060  017F48  0EEC               	movlw	-20
 26061  017F4A  006F FF8F FFE6     	movff	plusw1,postinc1
 26062  017F50  006F FF8F FFE6     	movff	plusw1,postinc1
 26063  017F56  006F FF8F FFE6     	movff	plusw1,postinc1
 26064  017F5C  006F FF8F FFE6     	movff	plusw1,postinc1
 26065  017F62  EC43  F0D6         	call	___flsub	;wreg free
 26066  017F66  0060  F09B  FFE6   	movff	btemp,postinc1
 26067  017F6C  0060  F09F  FFE6   	movff	btemp+1,postinc1
 26068  017F72  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 26069  017F78  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 26070  017F7E  EC44  F099         	call	___flmul	;wreg free
 26071  017F82  0060  F09B  FFE6   	movff	btemp,postinc1
 26072  017F88  0060  F09F  FFE6   	movff	btemp+1,postinc1
 26073  017F8E  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 26074  017F94  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 26075  017F9A  EC59  F09D         	call	___fladd	;wreg free
 26076                           
 26077                           ;stkvar	_bn @ sp[(-4)+-5]
 26078  017F9E  0EF7               	movlw	-9
 26079  017FA0  50E3               	movf	plusw1,w,c
 26080  017FA2  0D04               	mullw	4
 26081  017FA4  0E00               	movlw	low lp_filter@smooth
 26082  017FA6  24F3               	addwf	243,w,c
 26083  017FA8  6ED9               	movwf	fsr2l,c
 26084  017FAA  0E03               	movlw	high lp_filter@smooth
 26085  017FAC  20F4               	addwfc	prodh,w,c
 26086  017FAE  6EDA               	movwf	fsr2h,c
 26087  017FB0  0060  F09B  FFDE   	movff	btemp,postinc2
 26088  017FB6  0060  F09F  FFDE   	movff	btemp+1,postinc2
 26089  017FBC  0060  F0A3  FFDE   	movff	btemp+2,postinc2
 26090  017FC2  0060  F0A7  FFDD   	movff	btemp+3,postdec2
 26091  017FC8  52DD               	movf	postdec2,f,c
 26092  017FCA  52DD               	movf	postdec2,f,c
 26093  017FCC  006F FF78  F026    	movff	postinc2,btemp
 26094  017FD2  006F FF78  F027    	movff	postinc2,btemp+1
 26095  017FD8  006F FF78  F028    	movff	postinc2,btemp+2
 26096  017FDE  006F FF78  F029    	movff	postinc2,btemp+3
 26097  017FE4                     l1835:
 26098                           
 26099                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 26100  017FE4  0EF6               	movlw	246
 26101  017FE6  26E1               	addwf	fsr1l,f,c
 26102  017FE8  0EFF               	movlw	255
 26103  017FEA  22E2               	addwfc	fsr1h,f,c
 26104  017FEC  0012               	return		;funcret
 26105  017FEE                     __end_of_lp_filter:
 26106                           	opt callstack 0
 26107                           
 26108 ;; *************** function ___flsub *****************
 26109 ;; Defined at:
 26110 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 26111 ;; Parameters:    Size  Location     Type
 26112 ;;  b               4  [STACK] float 
 26113 ;;  a               4  [STACK] float 
 26114 ;; Auto vars:     Size  Location     Type
 26115 ;;		None
 26116 ;; Return value:  Size  Location     Type
 26117 ;;                  4  [STACK] float 
 26118 ;; Registers used:
 26119 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 26120 ;; Tracked objects:
 26121 ;;		On entry : 0/0
 26122 ;;		On exit  : 0/0
 26123 ;;		Unchanged: 0/0
 26124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26129 ;;Total ram usage:        0 bytes
 26130 ;; Hardware stack levels used:    1
 26131 ;; Hardware stack levels required when called:   16
 26132 ;; This function calls:
 26133 ;;		___fladd
 26134 ;; This function is called by:
 26135 ;;		_conv_raw_result
 26136 ;;		_lp_filter
 26137 ;;		_calc_model_data
 26138 ;;		_calc_ror_data
 26139 ;;		_esr_check
 26140 ;;		_efgtoa
 26141 ;; This function uses a reentrant model
 26142 ;;
 26143                           
 26144                           	psect	text104
 26145  01AC86                     __ptext104:
 26146                           	opt callstack 0
 26147  01AC86                     ___flsub:
 26148                           	opt callstack 0
 26149                           
 26150                           ;stkvar	_a @ sp[(0)+-8]
 26151                           
 26152                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26153                           ;incstack = 0
 26154 ;; hardware stack exceeded
 26155  01AC86  0EFB               	movlw	-5
 26156  01AC88  7EE3               	btg	plusw1,7,c
 26157                           
 26158                           ;stkvar	_a @ sp[(0)+-8]
 26159  01AC8A  0EF8               	movlw	-8
 26160  01AC8C  006F FF8F FFE6     	movff	plusw1,postinc1
 26161  01AC92  006F FF8F FFE6     	movff	plusw1,postinc1
 26162  01AC98  006F FF8F FFE6     	movff	plusw1,postinc1
 26163  01AC9E  006F FF8F FFE6     	movff	plusw1,postinc1
 26164                           
 26165                           ;stkvar	_b @ sp[(-4)+-4]
 26166  01ACA4  0EF8               	movlw	-8
 26167  01ACA6  006F FF8F FFE6     	movff	plusw1,postinc1
 26168  01ACAC  006F FF8F FFE6     	movff	plusw1,postinc1
 26169  01ACB2  006F FF8F FFE6     	movff	plusw1,postinc1
 26170  01ACB8  006F FF8F FFE6     	movff	plusw1,postinc1
 26171  01ACBE  EC59  F09D         	call	___fladd	;wreg free
 26172                           
 26173                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 26174  01ACC2  0EF8               	movlw	248
 26175  01ACC4  26E1               	addwf	fsr1l,f,c
 26176  01ACC6  0EFF               	movlw	255
 26177  01ACC8  22E2               	addwfc	fsr1h,f,c
 26178  01ACCA  0012               	return		;funcret
 26179  01ACCC                     __end_of___flsub:
 26180                           	opt callstack 0
 26181                           
 26182 ;; *************** function ___fladd *****************
 26183 ;; Defined at:
 26184 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 26185 ;; Parameters:    Size  Location     Type
 26186 ;;  b               4  [STACK] float 
 26187 ;;  a               4  [STACK] float 
 26188 ;; Auto vars:     Size  Location     Type
 26189 ;;  grs             1  [STACK] unsigned char 
 26190 ;;  bexp            1  [STACK] unsigned char 
 26191 ;;  aexp            1  [STACK] unsigned char 
 26192 ;;  signs           1  [STACK] unsigned char 
 26193 ;; Return value:  Size  Location     Type
 26194 ;;                  4  [STACK] unsigned char 
 26195 ;; Registers used:
 26196 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 26197 ;; Tracked objects:
 26198 ;;		On entry : 0/0
 26199 ;;		On exit  : 0/0
 26200 ;;		Unchanged: 0/0
 26201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26206 ;;Total ram usage:        0 bytes
 26207 ;; Hardware stack levels used:    1
 26208 ;; Hardware stack levels required when called:   15
 26209 ;; This function calls:
 26210 ;;		Nothing
 26211 ;; This function is called by:
 26212 ;;		_main
 26213 ;;		_lp_filter
 26214 ;;		_calc_model_data
 26215 ;;		_calc_bsoc
 26216 ;;		_efgtoa
 26217 ;;		___flsub
 26218 ;; This function uses a reentrant model
 26219 ;;
 26220                           
 26221                           	psect	text105
 26222  013AB2                     __ptext105:
 26223                           	opt callstack 0
 26224  013AB2                     ___fladd:
 26225                           	opt callstack 0
 26226                           
 26227                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26228  013AB2  52E6               	movf	postinc1,f,c
 26229  013AB4  52E6               	movf	postinc1,f,c
 26230  013AB6  52E6               	movf	postinc1,f,c
 26231  013AB8  52E6               	movf	postinc1,f,c
 26232                           
 26233                           ;stkvar	_b @ sp[(-4)+-4]
 26234                           
 26235                           ;incstack = 0
 26236 ;; hardware stack exceeded
 26237  013ABA  0EFB               	movlw	251
 26238  013ABC  24E1               	addwf	fsr1l,w,c
 26239  013ABE  6ED9               	movwf	fsr2l,c
 26240  013AC0  0EFF               	movlw	255
 26241  013AC2  20E2               	addwfc	fsr1h,w,c
 26242  013AC4  6EDA               	movwf	fsr2h,c
 26243  013AC6  50DF               	movf	indf2,w,c
 26244  013AC8  6E31               	movwf	(btemp+11)^0,c
 26245  013ACA  0E80               	movlw	128
 26246  013ACC  1631               	andwf	(btemp+11)^0,f,c
 26247                           
 26248                           ;stkvar	_signs @ sp[(-4)+3]
 26249  013ACE  0EFF               	movlw	-1
 26250  013AD0  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26251                           
 26252                           ;stkvar	_b @ sp[(-4)+-4]
 26253  013AD6  0EFB               	movlw	251
 26254  013AD8  24E1               	addwf	fsr1l,w,c
 26255  013ADA  6ED9               	movwf	fsr2l,c
 26256  013ADC  0EFF               	movlw	255
 26257  013ADE  20E2               	addwfc	fsr1h,w,c
 26258  013AE0  6EDA               	movwf	fsr2h,c
 26259  013AE2  50DF               	movf	indf2,w,c
 26260  013AE4  6E31               	movwf	(btemp+11)^0,c
 26261  013AE6  90D8               	bcf	status,0,c
 26262  013AE8  3431               	rlcf	(btemp+11)^0,w,c
 26263  013AEA  6E30               	movwf	(btemp+10)^0,c
 26264                           
 26265                           ;stkvar	_bexp @ sp[(-4)+1]
 26266  013AEC  0EFD               	movlw	-3
 26267  013AEE  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 26268                           
 26269                           ;stkvar	_b @ sp[(-4)+-4]
 26270  013AF4  0EFA               	movlw	250
 26271  013AF6  24E1               	addwf	fsr1l,w,c
 26272  013AF8  6ED9               	movwf	fsr2l,c
 26273  013AFA  0EFF               	movlw	255
 26274  013AFC  20E2               	addwfc	fsr1h,w,c
 26275  013AFE  6EDA               	movwf	fsr2h,c
 26276  013B00  AEDF               	btfss	indf2,7,c
 26277  013B02  D002               	goto	l7625
 26278                           
 26279                           ;stkvar	_bexp @ sp[(-4)+1]
 26280  013B04  0EFD               	movlw	-3
 26281  013B06  80E3               	bsf	plusw1,0,c
 26282  013B08                     l7625:
 26283                           
 26284                           ;stkvar	_bexp @ sp[(-4)+1]
 26285  013B08  0EFD               	movlw	-3
 26286  013B0A  50E3               	movf	plusw1,w,c
 26287  013B0C  B4D8               	btfsc	status,2,c
 26288  013B0E  D027               	goto	l7635
 26289                           
 26290                           ;stkvar	_bexp @ sp[(-4)+1]
 26291  013B10  0EFD               	movlw	-3
 26292  013B12  28E3               	incf	plusw1,w,c
 26293  013B14  A4D8               	btfss	status,2,c
 26294  013B16  D018               	goto	l7631
 26295  013B18  0E00               	movlw	0
 26296  013B1A  6E2E               	movwf	(btemp+8)^0,c
 26297  013B1C  0E00               	movlw	0
 26298  013B1E  6E2F               	movwf	(btemp+9)^0,c
 26299  013B20  0E00               	movlw	0
 26300  013B22  6E30               	movwf	(btemp+10)^0,c
 26301  013B24  0E00               	movlw	0
 26302  013B26  6E31               	movwf	(btemp+11)^0,c
 26303                           
 26304                           ;stkvar	_b @ sp[(-4)+-4]
 26305  013B28  0EF8               	movlw	-8
 26306  013B2A  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 26307  013B30  0EF9               	movlw	-7
 26308  013B32  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 26309  013B38  0EFA               	movlw	-6
 26310  013B3A  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 26311  013B40  0EFB               	movlw	-5
 26312  013B42  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26313  013B48                     l7631:
 26314                           
 26315                           ;stkvar	_b @ sp[(-4)+-4]
 26316  013B48  0EFA               	movlw	-6
 26317  013B4A  8EE3               	bsf	plusw1,7,c
 26318                           
 26319                           ;stkvar	_b @ sp[(-4)+-4]
 26320  013B4C  0EFB               	movlw	251
 26321  013B4E  24E1               	addwf	fsr1l,w,c
 26322  013B50  6ED9               	movwf	fsr2l,c
 26323  013B52  0EFF               	movlw	255
 26324  013B54  20E2               	addwfc	fsr1h,w,c
 26325  013B56  6EDA               	movwf	fsr2h,c
 26326  013B58  0E00               	movlw	0
 26327  013B5A  6EDF               	movwf	indf2,c
 26328  013B5C  D018               	goto	l7637
 26329  013B5E                     l7635:
 26330  013B5E  0E00               	movlw	0
 26331  013B60  6E2E               	movwf	(btemp+8)^0,c
 26332  013B62  0E00               	movlw	0
 26333  013B64  6E2F               	movwf	(btemp+9)^0,c
 26334  013B66  0E00               	movlw	0
 26335  013B68  6E30               	movwf	(btemp+10)^0,c
 26336  013B6A  0E00               	movlw	0
 26337  013B6C  6E31               	movwf	(btemp+11)^0,c
 26338                           
 26339                           ;stkvar	_b @ sp[(-4)+-4]
 26340  013B6E  0EF8               	movlw	-8
 26341  013B70  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 26342  013B76  0EF9               	movlw	-7
 26343  013B78  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 26344  013B7E  0EFA               	movlw	-6
 26345  013B80  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 26346  013B86  0EFB               	movlw	-5
 26347  013B88  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26348  013B8E                     l7637:
 26349                           
 26350                           ;stkvar	_a @ sp[(-4)+-8]
 26351  013B8E  0EF7               	movlw	247
 26352  013B90  24E1               	addwf	fsr1l,w,c
 26353  013B92  6ED9               	movwf	fsr2l,c
 26354  013B94  0EFF               	movlw	255
 26355  013B96  20E2               	addwfc	fsr1h,w,c
 26356  013B98  6EDA               	movwf	fsr2h,c
 26357  013B9A  50DF               	movf	indf2,w,c
 26358  013B9C  6E31               	movwf	(btemp+11)^0,c
 26359  013B9E  0E80               	movlw	128
 26360  013BA0  1631               	andwf	(btemp+11)^0,f,c
 26361                           
 26362                           ;stkvar	_aexp @ sp[(-4)+2]
 26363  013BA2  0EFE               	movlw	-2
 26364  013BA4  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26365                           
 26366                           ;stkvar	_signs @ sp[(-4)+3]
 26367                           ;stkvar	_aexp @ sp[(-4)+2]
 26368  013BAA  50E1               	movf	fsr1l,w,c
 26369  013BAC  0FFE               	addlw	-2
 26370  013BAE  6ED9               	movwf	fsr2l,c
 26371  013BB0  50E2               	movf	fsr1h,w,c
 26372  013BB2  6EDA               	movwf	fsr2h,c
 26373  013BB4  0EFF               	movlw	255
 26374  013BB6  22DA               	addwfc	fsr2h,f,c
 26375  013BB8  0EFF               	movlw	-1
 26376  013BBA  50E3               	movf	plusw1,w,c
 26377  013BBC  18DE               	xorwf	postinc2,w,c
 26378  013BBE  B4D8               	btfsc	status,2,c
 26379  013BC0  D002               	goto	l7643
 26380                           
 26381                           ;stkvar	_signs @ sp[(-4)+3]
 26382  013BC2  0EFF               	movlw	-1
 26383  013BC4  8CE3               	bsf	plusw1,6,c
 26384  013BC6                     l7643:
 26385                           
 26386                           ;stkvar	_a @ sp[(-4)+-8]
 26387  013BC6  0EF7               	movlw	247
 26388  013BC8  24E1               	addwf	fsr1l,w,c
 26389  013BCA  6ED9               	movwf	fsr2l,c
 26390  013BCC  0EFF               	movlw	255
 26391  013BCE  20E2               	addwfc	fsr1h,w,c
 26392  013BD0  6EDA               	movwf	fsr2h,c
 26393  013BD2  50DF               	movf	indf2,w,c
 26394  013BD4  6E31               	movwf	(btemp+11)^0,c
 26395  013BD6  90D8               	bcf	status,0,c
 26396  013BD8  3431               	rlcf	(btemp+11)^0,w,c
 26397  013BDA  6E30               	movwf	(btemp+10)^0,c
 26398                           
 26399                           ;stkvar	_aexp @ sp[(-4)+2]
 26400  013BDC  0EFE               	movlw	-2
 26401  013BDE  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 26402                           
 26403                           ;stkvar	_a @ sp[(-4)+-8]
 26404  013BE4  0EF6               	movlw	246
 26405  013BE6  24E1               	addwf	fsr1l,w,c
 26406  013BE8  6ED9               	movwf	fsr2l,c
 26407  013BEA  0EFF               	movlw	255
 26408  013BEC  20E2               	addwfc	fsr1h,w,c
 26409  013BEE  6EDA               	movwf	fsr2h,c
 26410  013BF0  AEDF               	btfss	indf2,7,c
 26411  013BF2  D002               	goto	l7649
 26412                           
 26413                           ;stkvar	_aexp @ sp[(-4)+2]
 26414  013BF4  0EFE               	movlw	-2
 26415  013BF6  80E3               	bsf	plusw1,0,c
 26416  013BF8                     l7649:
 26417                           
 26418                           ;stkvar	_aexp @ sp[(-4)+2]
 26419  013BF8  0EFE               	movlw	-2
 26420  013BFA  50E3               	movf	plusw1,w,c
 26421  013BFC  B4D8               	btfsc	status,2,c
 26422  013BFE  D027               	goto	l7659
 26423                           
 26424                           ;stkvar	_aexp @ sp[(-4)+2]
 26425  013C00  0EFE               	movlw	-2
 26426  013C02  28E3               	incf	plusw1,w,c
 26427  013C04  A4D8               	btfss	status,2,c
 26428  013C06  D018               	goto	l7655
 26429  013C08  0E00               	movlw	0
 26430  013C0A  6E2E               	movwf	(btemp+8)^0,c
 26431  013C0C  0E00               	movlw	0
 26432  013C0E  6E2F               	movwf	(btemp+9)^0,c
 26433  013C10  0E00               	movlw	0
 26434  013C12  6E30               	movwf	(btemp+10)^0,c
 26435  013C14  0E00               	movlw	0
 26436  013C16  6E31               	movwf	(btemp+11)^0,c
 26437                           
 26438                           ;stkvar	_a @ sp[(-4)+-8]
 26439  013C18  0EF4               	movlw	-12
 26440  013C1A  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 26441  013C20  0EF5               	movlw	-11
 26442  013C22  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 26443  013C28  0EF6               	movlw	-10
 26444  013C2A  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 26445  013C30  0EF7               	movlw	-9
 26446  013C32  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26447  013C38                     l7655:
 26448                           
 26449                           ;stkvar	_a @ sp[(-4)+-8]
 26450  013C38  0EF6               	movlw	-10
 26451  013C3A  8EE3               	bsf	plusw1,7,c
 26452                           
 26453                           ;stkvar	_a @ sp[(-4)+-8]
 26454  013C3C  0EF7               	movlw	247
 26455  013C3E  24E1               	addwf	fsr1l,w,c
 26456  013C40  6ED9               	movwf	fsr2l,c
 26457  013C42  0EFF               	movlw	255
 26458  013C44  20E2               	addwfc	fsr1h,w,c
 26459  013C46  6EDA               	movwf	fsr2h,c
 26460  013C48  0E00               	movlw	0
 26461  013C4A  6EDF               	movwf	indf2,c
 26462  013C4C  D018               	goto	l7661
 26463  013C4E                     l7659:
 26464  013C4E  0E00               	movlw	0
 26465  013C50  6E2E               	movwf	(btemp+8)^0,c
 26466  013C52  0E00               	movlw	0
 26467  013C54  6E2F               	movwf	(btemp+9)^0,c
 26468  013C56  0E00               	movlw	0
 26469  013C58  6E30               	movwf	(btemp+10)^0,c
 26470  013C5A  0E00               	movlw	0
 26471  013C5C  6E31               	movwf	(btemp+11)^0,c
 26472                           
 26473                           ;stkvar	_a @ sp[(-4)+-8]
 26474  013C5E  0EF4               	movlw	-12
 26475  013C60  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 26476  013C66  0EF5               	movlw	-11
 26477  013C68  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 26478  013C6E  0EF6               	movlw	-10
 26479  013C70  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 26480  013C76  0EF7               	movlw	-9
 26481  013C78  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26482  013C7E                     l7661:
 26483                           
 26484                           ;stkvar	_bexp @ sp[(-4)+1]
 26485                           ;stkvar	_aexp @ sp[(-4)+2]
 26486  013C7E  50E1               	movf	fsr1l,w,c
 26487  013C80  0FFE               	addlw	-2
 26488  013C82  6ED9               	movwf	fsr2l,c
 26489  013C84  50E2               	movf	fsr1h,w,c
 26490  013C86  6EDA               	movwf	fsr2h,c
 26491  013C88  0EFF               	movlw	255
 26492  013C8A  22DA               	addwfc	fsr2h,f,c
 26493  013C8C  0EFD               	movlw	-3
 26494  013C8E  50E3               	movf	plusw1,w,c
 26495  013C90  5CDE               	subwf	postinc2,w,c
 26496  013C92  B0D8               	btfsc	status,0,c
 26497  013C94  D0A4               	goto	l7697
 26498                           
 26499                           ;stkvar	_signs @ sp[(-4)+3]
 26500  013C96  0EFF               	movlw	-1
 26501  013C98  ACE3               	btfss	plusw1,6,c
 26502  013C9A  D002               	goto	l7667
 26503                           
 26504                           ;stkvar	_signs @ sp[(-4)+3]
 26505  013C9C  0EFF               	movlw	-1
 26506  013C9E  7EE3               	btg	plusw1,7,c
 26507  013CA0                     l7667:
 26508                           
 26509                           ;stkvar	_bexp @ sp[(-4)+1]
 26510                           ;stkvar	_grs @ sp[(-4)+0]
 26511  013CA0  0EFD               	movlw	-3
 26512  013CA2  006F FF8C  F026    	movff	plusw1,btemp
 26513  013CA8  0EFC               	movlw	-4
 26514  013CAA  0060  F09B  FFE3   	movff	btemp,plusw1
 26515                           
 26516                           ;stkvar	_aexp @ sp[(-4)+2]
 26517                           ;stkvar	_bexp @ sp[(-4)+1]
 26518  013CB0  0EFE               	movlw	-2
 26519  013CB2  006F FF8C  F026    	movff	plusw1,btemp
 26520  013CB8  0EFD               	movlw	-3
 26521  013CBA  0060  F09B  FFE3   	movff	btemp,plusw1
 26522                           
 26523                           ;stkvar	_grs @ sp[(-4)+0]
 26524                           ;stkvar	_aexp @ sp[(-4)+2]
 26525  013CC0  0EFC               	movlw	-4
 26526  013CC2  006F FF8C  F026    	movff	plusw1,btemp
 26527  013CC8  0EFE               	movlw	-2
 26528  013CCA  0060  F09B  FFE3   	movff	btemp,plusw1
 26529                           
 26530                           ;stkvar	_b @ sp[(-4)+-4]
 26531                           ;stkvar	_grs @ sp[(-4)+0]
 26532  013CD0  0EF8               	movlw	-8
 26533  013CD2  006F FF8C  F026    	movff	plusw1,btemp
 26534  013CD8  0EFC               	movlw	-4
 26535  013CDA  0060  F09B  FFE3   	movff	btemp,plusw1
 26536                           
 26537                           ;stkvar	_a @ sp[(-4)+-8]
 26538                           ;stkvar	_b @ sp[(-4)+-4]
 26539  013CE0  0EF4               	movlw	-12
 26540  013CE2  006F FF8C  F026    	movff	plusw1,btemp
 26541  013CE8  0EF8               	movlw	-8
 26542  013CEA  0060  F09B  FFE3   	movff	btemp,plusw1
 26543                           
 26544                           ;stkvar	_grs @ sp[(-4)+0]
 26545                           ;stkvar	_a @ sp[(-4)+-8]
 26546  013CF0  0EFC               	movlw	-4
 26547  013CF2  006F FF8C  F026    	movff	plusw1,btemp
 26548  013CF8  0EF4               	movlw	-12
 26549  013CFA  0060  F09B  FFE3   	movff	btemp,plusw1
 26550                           
 26551                           ;stkvar	_b @ sp[(-4)+-4]
 26552  013D00  0EF9               	movlw	249
 26553  013D02  24E1               	addwf	fsr1l,w,c
 26554  013D04  6ED9               	movwf	fsr2l,c
 26555  013D06  0EFF               	movlw	255
 26556  013D08  20E2               	addwfc	fsr1h,w,c
 26557  013D0A  6EDA               	movwf	fsr2h,c
 26558  013D0C  50DF               	movf	indf2,w,c
 26559  013D0E  6E31               	movwf	(btemp+11)^0,c
 26560                           
 26561                           ;stkvar	_grs @ sp[(-4)+0]
 26562  013D10  0EFC               	movlw	-4
 26563  013D12  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26564                           
 26565                           ;stkvar	_a @ sp[(-4)+-8]
 26566  013D18  0EF5               	movlw	245
 26567  013D1A  24E1               	addwf	fsr1l,w,c
 26568  013D1C  6ED9               	movwf	fsr2l,c
 26569  013D1E  0EFF               	movlw	255
 26570  013D20  20E2               	addwfc	fsr1h,w,c
 26571  013D22  6EDA               	movwf	fsr2h,c
 26572                           
 26573                           ;stkvar	_b @ sp[(-4)+-4]
 26574  013D24  0EF9               	movlw	249
 26575  013D26  24E1               	addwf	fsr1l,w,c
 26576  013D28  6EE9               	movwf	fsr0l,c
 26577  013D2A  0EFF               	movlw	255
 26578  013D2C  20E2               	addwfc	fsr1h,w,c
 26579  013D2E  6EEA               	movwf	fsr0h,c
 26580  013D30  006F FF7F FFEF     	movff	indf2,indf0
 26581                           
 26582                           ;stkvar	_grs @ sp[(-4)+0]
 26583                           ;stkvar	_a @ sp[(-4)+-8]
 26584  013D36  0EF5               	movlw	245
 26585  013D38  24E1               	addwf	fsr1l,w,c
 26586  013D3A  6ED9               	movwf	fsr2l,c
 26587  013D3C  0EFF               	movlw	255
 26588  013D3E  20E2               	addwfc	fsr1h,w,c
 26589  013D40  6EDA               	movwf	fsr2h,c
 26590  013D42  0EFC               	movlw	-4
 26591  013D44  006F FF8F FFDF     	movff	plusw1,indf2
 26592                           
 26593                           ;stkvar	_b @ sp[(-4)+-4]
 26594  013D4A  0EFA               	movlw	250
 26595  013D4C  24E1               	addwf	fsr1l,w,c
 26596  013D4E  6ED9               	movwf	fsr2l,c
 26597  013D50  0EFF               	movlw	255
 26598  013D52  20E2               	addwfc	fsr1h,w,c
 26599  013D54  6EDA               	movwf	fsr2h,c
 26600  013D56  50DF               	movf	indf2,w,c
 26601  013D58  6E31               	movwf	(btemp+11)^0,c
 26602                           
 26603                           ;stkvar	_grs @ sp[(-4)+0]
 26604  013D5A  0EFC               	movlw	-4
 26605  013D5C  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26606                           
 26607                           ;stkvar	_a @ sp[(-4)+-8]
 26608  013D62  0EF6               	movlw	246
 26609  013D64  24E1               	addwf	fsr1l,w,c
 26610  013D66  6ED9               	movwf	fsr2l,c
 26611  013D68  0EFF               	movlw	255
 26612  013D6A  20E2               	addwfc	fsr1h,w,c
 26613  013D6C  6EDA               	movwf	fsr2h,c
 26614                           
 26615                           ;stkvar	_b @ sp[(-4)+-4]
 26616  013D6E  0EFA               	movlw	250
 26617  013D70  24E1               	addwf	fsr1l,w,c
 26618  013D72  6EE9               	movwf	fsr0l,c
 26619  013D74  0EFF               	movlw	255
 26620  013D76  20E2               	addwfc	fsr1h,w,c
 26621  013D78  6EEA               	movwf	fsr0h,c
 26622  013D7A  006F FF7F FFEF     	movff	indf2,indf0
 26623                           
 26624                           ;stkvar	_grs @ sp[(-4)+0]
 26625                           ;stkvar	_a @ sp[(-4)+-8]
 26626  013D80  0EF6               	movlw	246
 26627  013D82  24E1               	addwf	fsr1l,w,c
 26628  013D84  6ED9               	movwf	fsr2l,c
 26629  013D86  0EFF               	movlw	255
 26630  013D88  20E2               	addwfc	fsr1h,w,c
 26631  013D8A  6EDA               	movwf	fsr2h,c
 26632  013D8C  0EFC               	movlw	-4
 26633  013D8E  006F FF8F FFDF     	movff	plusw1,indf2
 26634                           
 26635                           ;stkvar	_b @ sp[(-4)+-4]
 26636  013D94  0EFB               	movlw	251
 26637  013D96  24E1               	addwf	fsr1l,w,c
 26638  013D98  6ED9               	movwf	fsr2l,c
 26639  013D9A  0EFF               	movlw	255
 26640  013D9C  20E2               	addwfc	fsr1h,w,c
 26641  013D9E  6EDA               	movwf	fsr2h,c
 26642  013DA0  50DF               	movf	indf2,w,c
 26643  013DA2  6E31               	movwf	(btemp+11)^0,c
 26644                           
 26645                           ;stkvar	_grs @ sp[(-4)+0]
 26646  013DA4  0EFC               	movlw	-4
 26647  013DA6  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26648                           
 26649                           ;stkvar	_a @ sp[(-4)+-8]
 26650  013DAC  0EF7               	movlw	247
 26651  013DAE  24E1               	addwf	fsr1l,w,c
 26652  013DB0  6ED9               	movwf	fsr2l,c
 26653  013DB2  0EFF               	movlw	255
 26654  013DB4  20E2               	addwfc	fsr1h,w,c
 26655  013DB6  6EDA               	movwf	fsr2h,c
 26656                           
 26657                           ;stkvar	_b @ sp[(-4)+-4]
 26658  013DB8  0EFB               	movlw	251
 26659  013DBA  24E1               	addwf	fsr1l,w,c
 26660  013DBC  6EE9               	movwf	fsr0l,c
 26661  013DBE  0EFF               	movlw	255
 26662  013DC0  20E2               	addwfc	fsr1h,w,c
 26663  013DC2  6EEA               	movwf	fsr0h,c
 26664  013DC4  006F FF7F FFEF     	movff	indf2,indf0
 26665                           
 26666                           ;stkvar	_grs @ sp[(-4)+0]
 26667                           ;stkvar	_a @ sp[(-4)+-8]
 26668  013DCA  0EF7               	movlw	247
 26669  013DCC  24E1               	addwf	fsr1l,w,c
 26670  013DCE  6ED9               	movwf	fsr2l,c
 26671  013DD0  0EFF               	movlw	255
 26672  013DD2  20E2               	addwfc	fsr1h,w,c
 26673  013DD4  6EDA               	movwf	fsr2h,c
 26674  013DD6  0EFC               	movlw	-4
 26675  013DD8  006F FF8F FFDF     	movff	plusw1,indf2
 26676  013DDE                     l7697:
 26677                           
 26678                           ;stkvar	_grs @ sp[(-4)+0]
 26679  013DDE  0EFC               	movlw	-4
 26680  013DE0  6AE3               	clrf	plusw1,c
 26681                           
 26682                           ;stkvar	_aexp @ sp[(-4)+2]
 26683  013DE2  0EFE               	movlw	-2
 26684  013DE4  50E3               	movf	plusw1,w,c
 26685  013DE6  6E30               	movwf	(btemp+10)^0,c
 26686  013DE8  6A31               	clrf	(btemp+11)^0,c
 26687                           
 26688                           ;stkvar	_bexp @ sp[(-4)+1]
 26689  013DEA  0EFD               	movlw	-3
 26690  013DEC  50E3               	movf	plusw1,w,c
 26691  013DEE  5E30               	subwf	(btemp+10)^0,f,c
 26692  013DF0  0E00               	movlw	0
 26693  013DF2  5A31               	subwfb	(btemp+11)^0,f,c
 26694  013DF4  BE31               	btfsc	(btemp+11)^0,7,c
 26695  013DF6  D062               	goto	l7721
 26696  013DF8  5031               	movf	(btemp+11)^0,w,c
 26697  013DFA  E104               	bnz	u5500
 26698  013DFC  0E1A               	movlw	26
 26699  013DFE  5C30               	subwf	(btemp+10)^0,w,c
 26700  013E00  A0D8               	btfss	status,0,c
 26701  013E02  D05C               	goto	l7721
 26702  013E04                     u5500:
 26703                           
 26704                           ;stkvar	_b @ sp[(-4)+-4]
 26705  013E04  0EF8               	movlw	-8
 26706  013E06  50E3               	movf	plusw1,w,c
 26707  013E08  E10A               	bnz	u5511
 26708  013E0A  0EF9               	movlw	-7
 26709  013E0C  50E3               	movf	plusw1,w,c
 26710  013E0E  E107               	bnz	u5511
 26711  013E10  0EFA               	movlw	-6
 26712  013E12  50E3               	movf	plusw1,w,c
 26713  013E14  E104               	bnz	u5511
 26714  013E16  0EFB               	movlw	-5
 26715  013E18  50E3               	movf	plusw1,w,c
 26716  013E1A  B4D8               	btfsc	status,2,c
 26717  013E1C  D003               	goto	u5510
 26718  013E1E                     u5511:
 26719  013E1E  6A31               	clrf	(btemp+11)^0,c
 26720  013E20  2A31               	incf	(btemp+11)^0,f,c
 26721  013E22  D001               	goto	u5528
 26722  013E24                     u5510:
 26723  013E24  6A31               	clrf	(btemp+11)^0,c
 26724  013E26                     u5528:
 26725                           
 26726                           ;stkvar	_grs @ sp[(-4)+0]
 26727  013E26  0EFC               	movlw	-4
 26728  013E28  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26729                           
 26730                           ;stkvar	_b @ sp[(-4)+-4]
 26731  013E2E  0EF8               	movlw	-8
 26732  013E30  6AE3               	clrf	plusw1,c
 26733  013E32  0EF9               	movlw	-7
 26734  013E34  6AE3               	clrf	plusw1,c
 26735  013E36  0EFA               	movlw	-6
 26736  013E38  6AE3               	clrf	plusw1,c
 26737  013E3A  0EFB               	movlw	-5
 26738  013E3C  6AE3               	clrf	plusw1,c
 26739                           
 26740                           ;stkvar	_aexp @ sp[(-4)+2]
 26741                           ;stkvar	_bexp @ sp[(-4)+1]
 26742  013E3E  0EFE               	movlw	-2
 26743  013E40  006F FF8C  F026    	movff	plusw1,btemp
 26744  013E46  0EFD               	movlw	-3
 26745  013E48  0060  F09B  FFE3   	movff	btemp,plusw1
 26746  013E4E  D042               	goto	u5560
 26747  013E50                     l7707:
 26748                           
 26749                           ;stkvar	_grs @ sp[(-4)+0]
 26750  013E50  0EFC               	movlw	-4
 26751  013E52  A0E3               	btfss	plusw1,0,c
 26752  013E54  D00D               	goto	l7711
 26753                           
 26754                           ;stkvar	_grs @ sp[(-4)+0]
 26755  013E56  0EFC               	movlw	-4
 26756  013E58  006F FF8C  F031    	movff	plusw1,btemp+11
 26757  013E5E  90D8               	bcf	status,0,c
 26758  013E60  3231               	rrcf	(btemp+11)^0,f,c
 26759  013E62  0E01               	movlw	1
 26760  013E64  1231               	iorwf	(btemp+11)^0,f,c
 26761                           
 26762                           ;stkvar	_grs @ sp[(-4)+0]
 26763  013E66  0EFC               	movlw	-4
 26764  013E68  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26765  013E6E  D009               	goto	l7713
 26766  013E70                     l7711:
 26767                           
 26768                           ;stkvar	_grs @ sp[(-4)+0]
 26769  013E70  50E1               	movf	fsr1l,w,c
 26770  013E72  0FFC               	addlw	-4
 26771  013E74  6ED9               	movwf	fsr2l,c
 26772  013E76  50E2               	movf	fsr1h,w,c
 26773  013E78  6EDA               	movwf	fsr2h,c
 26774  013E7A  0EFF               	movlw	255
 26775  013E7C  22DA               	addwfc	fsr2h,f,c
 26776  013E7E  90D8               	bcf	status,0,c
 26777  013E80  32DF               	rrcf	indf2,f,c
 26778  013E82                     l7713:
 26779                           
 26780                           ;stkvar	_b @ sp[(-4)+-4]
 26781  013E82  0EF8               	movlw	-8
 26782  013E84  A0E3               	btfss	plusw1,0,c
 26783  013E86  D002               	goto	l7717
 26784                           
 26785                           ;stkvar	_grs @ sp[(-4)+0]
 26786  013E88  0EFC               	movlw	-4
 26787  013E8A  8EE3               	bsf	plusw1,7,c
 26788  013E8C                     l7717:
 26789  013E8C  0E01               	movlw	1
 26790  013E8E  6E31               	movwf	(btemp+11)^0,c
 26791                           
 26792                           ;stkvar	_b @ sp[(-4)+-4]
 26793  013E90  50E1               	movf	fsr1l,w,c
 26794  013E92  0FF8               	addlw	-8
 26795  013E94  6ED9               	movwf	fsr2l,c
 26796  013E96  50E2               	movf	fsr1h,w,c
 26797  013E98  6EDA               	movwf	fsr2h,c
 26798  013E9A  0EFF               	movlw	255
 26799  013E9C  22DA               	addwfc	fsr2h,f,c
 26800  013E9E  2831               	incf	(btemp+11)^0,w,c
 26801  013EA0  52DE               	movf	postinc2,f,c
 26802  013EA2  D008               	goto	u5550
 26803  013EA4                     u5555:
 26804  013EA4  52DE               	movf	postinc2,f,c
 26805  013EA6  90D8               	bcf	status,0,c
 26806  013EA8  BEDC               	btfsc	preinc2,7,c
 26807  013EAA  80D8               	bsf	status,0,c
 26808  013EAC  32DD               	rrcf	postdec2,f,c
 26809  013EAE  32DD               	rrcf	postdec2,f,c
 26810  013EB0  32DD               	rrcf	postdec2,f,c
 26811  013EB2  32DE               	rrcf	postinc2,f,c
 26812  013EB4                     u5550:
 26813  013EB4  2EE8               	decfsz	wreg,f,c
 26814  013EB6  D7F6               	goto	u5555
 26815                           
 26816                           ;stkvar	_bexp @ sp[(-4)+1]
 26817  013EB8  0EFD               	movlw	-3
 26818  013EBA  2AE3               	incf	plusw1,f,c
 26819  013EBC                     l7721:
 26820                           
 26821                           ;stkvar	_aexp @ sp[(-4)+2]
 26822                           ;stkvar	_bexp @ sp[(-4)+1]
 26823  013EBC  50E1               	movf	fsr1l,w,c
 26824  013EBE  0FFD               	addlw	-3
 26825  013EC0  6ED9               	movwf	fsr2l,c
 26826  013EC2  50E2               	movf	fsr1h,w,c
 26827  013EC4  6EDA               	movwf	fsr2h,c
 26828  013EC6  0EFF               	movlw	255
 26829  013EC8  22DA               	addwfc	fsr2h,f,c
 26830  013ECA  0EFE               	movlw	-2
 26831  013ECC  50E3               	movf	plusw1,w,c
 26832  013ECE  5CDE               	subwf	postinc2,w,c
 26833  013ED0  A0D8               	btfss	status,0,c
 26834  013ED2  D7BE               	goto	l7707
 26835  013ED4                     u5560:
 26836                           
 26837                           ;stkvar	_signs @ sp[(-4)+3]
 26838  013ED4  0EFF               	movlw	-1
 26839  013ED6  BCE3               	btfsc	plusw1,6,c
 26840  013ED8  D066               	goto	l7749
 26841                           
 26842                           ;stkvar	_bexp @ sp[(-4)+1]
 26843  013EDA  0EFD               	movlw	-3
 26844  013EDC  50E3               	movf	plusw1,w,c
 26845  013EDE  B4D8               	btfsc	status,2,c
 26846  013EE0  D0F2               	goto	u5660
 26847                           
 26848                           ;stkvar	_a @ sp[(-4)+-8]
 26849                           ;stkvar	_b @ sp[(-4)+-4]
 26850  013EE2  0EF8               	movlw	-8
 26851  013EE4  50E3               	movf	plusw1,w,c
 26852  013EE6  6E26               	movwf	btemp^0,c
 26853  013EE8  0EF4               	movlw	-12
 26854  013EEA  50E3               	movf	plusw1,w,c
 26855  013EEC  2626               	addwf	btemp^0,f,c
 26856  013EEE  0EF8               	movlw	-8
 26857  013EF0  0060  F09B  FFE3   	movff	btemp,plusw1
 26858  013EF6  0EF9               	movlw	-7
 26859  013EF8  50E3               	movf	plusw1,w,c
 26860  013EFA  6E26               	movwf	btemp^0,c
 26861  013EFC  0EF5               	movlw	-11
 26862  013EFE  50E3               	movf	plusw1,w,c
 26863  013F00  2226               	addwfc	btemp^0,f,c
 26864  013F02  0EF9               	movlw	-7
 26865  013F04  0060  F09B  FFE3   	movff	btemp,plusw1
 26866  013F0A  0EFA               	movlw	-6
 26867  013F0C  50E3               	movf	plusw1,w,c
 26868  013F0E  6E26               	movwf	btemp^0,c
 26869  013F10  0EF6               	movlw	-10
 26870  013F12  50E3               	movf	plusw1,w,c
 26871  013F14  2226               	addwfc	btemp^0,f,c
 26872  013F16  0EFA               	movlw	-6
 26873  013F18  0060  F09B  FFE3   	movff	btemp,plusw1
 26874  013F1E  0EFB               	movlw	-5
 26875  013F20  50E3               	movf	plusw1,w,c
 26876  013F22  6E26               	movwf	btemp^0,c
 26877  013F24  0EF7               	movlw	-9
 26878  013F26  50E3               	movf	plusw1,w,c
 26879  013F28  2226               	addwfc	btemp^0,f,c
 26880  013F2A  0EFB               	movlw	-5
 26881  013F2C  0060  F09B  FFE3   	movff	btemp,plusw1
 26882                           
 26883                           ;stkvar	_b @ sp[(-4)+-4]
 26884  013F32  0EFB               	movlw	-5
 26885  013F34  A0E3               	btfss	plusw1,0,c
 26886  013F36  D101               	goto	u5700
 26887                           
 26888                           ;stkvar	_grs @ sp[(-4)+0]
 26889  013F38  0EFC               	movlw	-4
 26890  013F3A  A0E3               	btfss	plusw1,0,c
 26891  013F3C  D00D               	goto	l7739
 26892                           
 26893                           ;stkvar	_grs @ sp[(-4)+0]
 26894  013F3E  0EFC               	movlw	-4
 26895  013F40  006F FF8C  F031    	movff	plusw1,btemp+11
 26896  013F46  90D8               	bcf	status,0,c
 26897  013F48  3231               	rrcf	(btemp+11)^0,f,c
 26898  013F4A  0E01               	movlw	1
 26899  013F4C  1231               	iorwf	(btemp+11)^0,f,c
 26900                           
 26901                           ;stkvar	_grs @ sp[(-4)+0]
 26902  013F4E  0EFC               	movlw	-4
 26903  013F50  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26904  013F56  D009               	goto	l7741
 26905  013F58                     l7739:
 26906                           
 26907                           ;stkvar	_grs @ sp[(-4)+0]
 26908  013F58  50E1               	movf	fsr1l,w,c
 26909  013F5A  0FFC               	addlw	-4
 26910  013F5C  6ED9               	movwf	fsr2l,c
 26911  013F5E  50E2               	movf	fsr1h,w,c
 26912  013F60  6EDA               	movwf	fsr2h,c
 26913  013F62  0EFF               	movlw	255
 26914  013F64  22DA               	addwfc	fsr2h,f,c
 26915  013F66  90D8               	bcf	status,0,c
 26916  013F68  32DF               	rrcf	indf2,f,c
 26917  013F6A                     l7741:
 26918                           
 26919                           ;stkvar	_b @ sp[(-4)+-4]
 26920  013F6A  0EF8               	movlw	-8
 26921  013F6C  A0E3               	btfss	plusw1,0,c
 26922  013F6E  D002               	goto	l7745
 26923                           
 26924                           ;stkvar	_grs @ sp[(-4)+0]
 26925  013F70  0EFC               	movlw	-4
 26926  013F72  8EE3               	bsf	plusw1,7,c
 26927  013F74                     l7745:
 26928  013F74  0E01               	movlw	1
 26929  013F76  6E31               	movwf	(btemp+11)^0,c
 26930                           
 26931                           ;stkvar	_b @ sp[(-4)+-4]
 26932  013F78  50E1               	movf	fsr1l,w,c
 26933  013F7A  0FF8               	addlw	-8
 26934  013F7C  6ED9               	movwf	fsr2l,c
 26935  013F7E  50E2               	movf	fsr1h,w,c
 26936  013F80  6EDA               	movwf	fsr2h,c
 26937  013F82  0EFF               	movlw	255
 26938  013F84  22DA               	addwfc	fsr2h,f,c
 26939  013F86  2831               	incf	(btemp+11)^0,w,c
 26940  013F88  52DE               	movf	postinc2,f,c
 26941  013F8A  D008               	goto	u5620
 26942  013F8C                     u5625:
 26943  013F8C  52DE               	movf	postinc2,f,c
 26944  013F8E  90D8               	bcf	status,0,c
 26945  013F90  BEDC               	btfsc	preinc2,7,c
 26946  013F92  80D8               	bsf	status,0,c
 26947  013F94  32DD               	rrcf	postdec2,f,c
 26948  013F96  32DD               	rrcf	postdec2,f,c
 26949  013F98  32DD               	rrcf	postdec2,f,c
 26950  013F9A  32DE               	rrcf	postinc2,f,c
 26951  013F9C                     u5620:
 26952  013F9C  2EE8               	decfsz	wreg,f,c
 26953  013F9E  D7F6               	goto	u5625
 26954                           
 26955                           ;stkvar	_bexp @ sp[(-4)+1]
 26956  013FA0  0EFD               	movlw	-3
 26957  013FA2  2AE3               	incf	plusw1,f,c
 26958  013FA4  D0CA               	goto	u5700
 26959  013FA6                     l7749:
 26960                           
 26961                           ;stkvar	_a @ sp[(-4)+-8]
 26962                           ;stkvar	_b @ sp[(-4)+-4]
 26963  013FA6  50E1               	movf	fsr1l,w,c
 26964  013FA8  0FF8               	addlw	-8
 26965  013FAA  6ED9               	movwf	fsr2l,c
 26966  013FAC  50E2               	movf	fsr1h,w,c
 26967  013FAE  6EDA               	movwf	fsr2h,c
 26968  013FB0  0EFF               	movlw	255
 26969  013FB2  22DA               	addwfc	fsr2h,f,c
 26970  013FB4  0EF4               	movlw	-12
 26971  013FB6  50E3               	movf	plusw1,w,c
 26972  013FB8  5CDE               	subwf	postinc2,w,c
 26973  013FBA  0EF5               	movlw	-11
 26974  013FBC  50E3               	movf	plusw1,w,c
 26975  013FBE  58DE               	subwfb	postinc2,w,c
 26976  013FC0  0EF6               	movlw	-10
 26977  013FC2  50E3               	movf	plusw1,w,c
 26978  013FC4  58DE               	subwfb	postinc2,w,c
 26979  013FC6  50DE               	movf	postinc2,w,c
 26980  013FC8  0A80               	xorlw	128
 26981  013FCA  6E26               	movwf	btemp^0,c
 26982  013FCC  0EF7               	movlw	-9
 26983  013FCE  50E3               	movf	plusw1,w,c
 26984  013FD0  0A80               	xorlw	128
 26985  013FD2  5826               	subwfb	btemp^0,w,c
 26986  013FD4  B0D8               	btfsc	status,0,c
 26987  013FD6  D053               	goto	l7761
 26988                           
 26989                           ;stkvar	_b @ sp[(-4)+-4]
 26990                           ;stkvar	_a @ sp[(-4)+-8]
 26991  013FD8  0EF4               	movlw	-12
 26992  013FDA  006F FF8C  F02E    	movff	plusw1,btemp+8
 26993  013FE0  0EF5               	movlw	-11
 26994  013FE2  006F FF8C  F02F    	movff	plusw1,btemp+9
 26995  013FE8  0EF6               	movlw	-10
 26996  013FEA  006F FF8C  F030    	movff	plusw1,btemp+10
 26997  013FF0  0EF7               	movlw	-9
 26998  013FF2  006F FF8C  F031    	movff	plusw1,btemp+11
 26999  013FF8  0EF8               	movlw	-8
 27000  013FFA  50E3               	movf	plusw1,w,c
 27001  013FFC  5E2E               	subwf	(btemp+8)^0,f,c
 27002  013FFE  0EF9               	movlw	-7
 27003  014000  50E3               	movf	plusw1,w,c
 27004  014002  5A2F               	subwfb	(btemp+9)^0,f,c
 27005  014004  0EFA               	movlw	-6
 27006  014006  50E3               	movf	plusw1,w,c
 27007  014008  5A30               	subwfb	(btemp+10)^0,f,c
 27008  01400A  0EFB               	movlw	-5
 27009  01400C  50E3               	movf	plusw1,w,c
 27010  01400E  5A31               	subwfb	(btemp+11)^0,f,c
 27011  014010  0EFF               	movlw	255
 27012  014012  242E               	addwf	(btemp+8)^0,w,c
 27013  014014  6E2A               	movwf	(btemp+4)^0,c
 27014  014016  0EFF               	movlw	255
 27015  014018  202F               	addwfc	(btemp+9)^0,w,c
 27016  01401A  6E2B               	movwf	(btemp+5)^0,c
 27017  01401C  0EFF               	movlw	255
 27018  01401E  2030               	addwfc	(btemp+10)^0,w,c
 27019  014020  6E2C               	movwf	(btemp+6)^0,c
 27020  014022  0EFF               	movlw	255
 27021  014024  2031               	addwfc	(btemp+11)^0,w,c
 27022  014026  6E2D               	movwf	(btemp+7)^0,c
 27023                           
 27024                           ;stkvar	_b @ sp[(-4)+-4]
 27025  014028  0EF8               	movlw	-8
 27026  01402A  0060  F0AB  FFE3   	movff	btemp+4,plusw1
 27027  014030  0EF9               	movlw	-7
 27028  014032  0060  F0AF  FFE3   	movff	btemp+5,plusw1
 27029  014038  0EFA               	movlw	-6
 27030  01403A  0060  F0B3  FFE3   	movff	btemp+6,plusw1
 27031  014040  0EFB               	movlw	-5
 27032  014042  0060  F0B7  FFE3   	movff	btemp+7,plusw1
 27033                           
 27034                           ;stkvar	_signs @ sp[(-4)+3]
 27035  014048  0EFF               	movlw	-1
 27036  01404A  7EE3               	btg	plusw1,7,c
 27037                           
 27038                           ;stkvar	_grs @ sp[(-4)+0]
 27039  01404C  0EFC               	movlw	-4
 27040  01404E  50E3               	movf	plusw1,w,c
 27041  014050  0800               	sublw	0
 27042  014052  6E31               	movwf	(btemp+11)^0,c
 27043                           
 27044                           ;stkvar	_grs @ sp[(-4)+0]
 27045  014054  0EFC               	movlw	-4
 27046  014056  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 27047                           
 27048                           ;stkvar	_grs @ sp[(-4)+0]
 27049  01405C  0EFC               	movlw	-4
 27050  01405E  50E3               	movf	plusw1,w,c
 27051  014060  A4D8               	btfss	status,2,c
 27052  014062  D020               	goto	l7763
 27053                           
 27054                           ;stkvar	_b @ sp[(-4)+-4]
 27055  014064  50E1               	movf	fsr1l,w,c
 27056  014066  0FF8               	addlw	-8
 27057  014068  6ED9               	movwf	fsr2l,c
 27058  01406A  50E2               	movf	fsr1h,w,c
 27059  01406C  6EDA               	movwf	fsr2h,c
 27060  01406E  0EFF               	movlw	255
 27061  014070  22DA               	addwfc	fsr2h,f,c
 27062  014072  2ADE               	incf	postinc2,f,c
 27063  014074  0E00               	movlw	0
 27064  014076  22DE               	addwfc	postinc2,f,c
 27065  014078  22DE               	addwfc	postinc2,f,c
 27066  01407A  22DE               	addwfc	postinc2,f,c
 27067  01407C  D013               	goto	l7763
 27068  01407E                     l7761:
 27069                           
 27070                           ;stkvar	_a @ sp[(-4)+-8]
 27071                           ;stkvar	_b @ sp[(-4)+-4]
 27072  01407E  50E1               	movf	fsr1l,w,c
 27073  014080  0FF8               	addlw	-8
 27074  014082  6ED9               	movwf	fsr2l,c
 27075  014084  50E2               	movf	fsr1h,w,c
 27076  014086  6EDA               	movwf	fsr2h,c
 27077  014088  0EFF               	movlw	255
 27078  01408A  22DA               	addwfc	fsr2h,f,c
 27079  01408C  0EF4               	movlw	-12
 27080  01408E  50E3               	movf	plusw1,w,c
 27081  014090  5EDE               	subwf	postinc2,f,c
 27082  014092  0EF5               	movlw	-11
 27083  014094  50E3               	movf	plusw1,w,c
 27084  014096  5ADE               	subwfb	postinc2,f,c
 27085  014098  0EF6               	movlw	-10
 27086  01409A  50E3               	movf	plusw1,w,c
 27087  01409C  5ADE               	subwfb	postinc2,f,c
 27088  01409E  0EF7               	movlw	-9
 27089  0140A0  50E3               	movf	plusw1,w,c
 27090  0140A2  5ADE               	subwfb	postinc2,f,c
 27091  0140A4                     l7763:
 27092                           
 27093                           ;stkvar	_b @ sp[(-4)+-4]
 27094  0140A4  0EF8               	movlw	-8
 27095  0140A6  50E3               	movf	plusw1,w,c
 27096  0140A8  E145               	bnz	l7785
 27097  0140AA  0EF9               	movlw	-7
 27098  0140AC  50E3               	movf	plusw1,w,c
 27099  0140AE  E142               	bnz	l7785
 27100  0140B0  0EFA               	movlw	-6
 27101  0140B2  50E3               	movf	plusw1,w,c
 27102  0140B4  E13F               	bnz	l7785
 27103  0140B6  0EFB               	movlw	-5
 27104  0140B8  50E3               	movf	plusw1,w,c
 27105  0140BA  A4D8               	btfss	status,2,c
 27106  0140BC  D03B               	goto	l7785
 27107                           
 27108                           ;stkvar	_grs @ sp[(-4)+0]
 27109  0140BE  0EFC               	movlw	-4
 27110  0140C0  50E3               	movf	plusw1,w,c
 27111  0140C2  A4D8               	btfss	status,2,c
 27112  0140C4  D037               	goto	l7785
 27113  0140C6                     u5660:
 27114  0140C6  0E00               	movlw	0
 27115  0140C8  6E26               	movwf	btemp^0,c
 27116  0140CA  0E00               	movlw	0
 27117  0140CC  6E27               	movwf	(btemp+1)^0,c
 27118  0140CE  0E00               	movlw	0
 27119  0140D0  6E28               	movwf	(btemp+2)^0,c
 27120  0140D2  0E00               	movlw	0
 27121  0140D4  6E29               	movwf	(btemp+3)^0,c
 27122  0140D6  D0C6               	goto	l2933
 27123  0140D8                     l7771:
 27124                           
 27125                           ;stkvar	_b @ sp[(-4)+-4]
 27126  0140D8  90D8               	bcf	status,0,c
 27127  0140DA  0EF8               	movlw	-8
 27128  0140DC  36E3               	rlcf	plusw1,f,c
 27129  0140DE  0EF9               	movlw	-7
 27130  0140E0  36E3               	rlcf	plusw1,f,c
 27131  0140E2  0EFA               	movlw	-6
 27132  0140E4  36E3               	rlcf	plusw1,f,c
 27133  0140E6  0EFB               	movlw	-5
 27134  0140E8  36E3               	rlcf	plusw1,f,c
 27135                           
 27136                           ;stkvar	_grs @ sp[(-4)+0]
 27137  0140EA  0EFC               	movlw	-4
 27138  0140EC  AEE3               	btfss	plusw1,7,c
 27139  0140EE  D002               	goto	l2945
 27140                           
 27141                           ;stkvar	_b @ sp[(-4)+-4]
 27142  0140F0  0EF8               	movlw	-8
 27143  0140F2  80E3               	bsf	plusw1,0,c
 27144  0140F4                     l2945:
 27145                           
 27146                           ;stkvar	_grs @ sp[(-4)+0]
 27147  0140F4  0EFC               	movlw	-4
 27148  0140F6  A0E3               	btfss	plusw1,0,c
 27149  0140F8  D00E               	goto	l7779
 27150                           
 27151                           ;stkvar	_grs @ sp[(-4)+0]
 27152  0140FA  0EFC               	movlw	-4
 27153  0140FC  006F FF8C  F031    	movff	plusw1,btemp+11
 27154  014102  90D8               	bcf	status,0,c
 27155  014104  3431               	rlcf	(btemp+11)^0,w,c
 27156  014106  6E30               	movwf	(btemp+10)^0,c
 27157  014108  0E01               	movlw	1
 27158  01410A  1230               	iorwf	(btemp+10)^0,f,c
 27159                           
 27160                           ;stkvar	_grs @ sp[(-4)+0]
 27161  01410C  0EFC               	movlw	-4
 27162  01410E  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 27163  014114  D009               	goto	l7781
 27164  014116                     l7779:
 27165                           
 27166                           ;stkvar	_grs @ sp[(-4)+0]
 27167  014116  50E1               	movf	fsr1l,w,c
 27168  014118  0FFC               	addlw	-4
 27169  01411A  6ED9               	movwf	fsr2l,c
 27170  01411C  50E2               	movf	fsr1h,w,c
 27171  01411E  6EDA               	movwf	fsr2h,c
 27172  014120  0EFF               	movlw	255
 27173  014122  22DA               	addwfc	fsr2h,f,c
 27174  014124  90D8               	bcf	status,0,c
 27175  014126  36DF               	rlcf	indf2,f,c
 27176  014128                     l7781:
 27177                           
 27178                           ;stkvar	_bexp @ sp[(-4)+1]
 27179  014128  0EFD               	movlw	-3
 27180  01412A  50E3               	movf	plusw1,w,c
 27181  01412C  B4D8               	btfsc	status,2,c
 27182  01412E  D002               	goto	l7785
 27183                           
 27184                           ;stkvar	_bexp @ sp[(-4)+1]
 27185  014130  0EFD               	movlw	-3
 27186  014132  06E3               	decf	plusw1,f,c
 27187  014134                     l7785:
 27188                           
 27189                           ;stkvar	_b @ sp[(-4)+-4]
 27190  014134  0EFA               	movlw	-6
 27191  014136  AEE3               	btfss	plusw1,7,c
 27192  014138  D7CF               	goto	l7771
 27193  01413A                     u5700:
 27194                           
 27195                           ;stkvar	_aexp @ sp[(-4)+2]
 27196  01413A  0EFE               	movlw	-2
 27197  01413C  6AE3               	clrf	plusw1,c
 27198                           
 27199                           ;stkvar	_grs @ sp[(-4)+0]
 27200  01413E  0EFC               	movlw	-4
 27201  014140  AEE3               	btfss	plusw1,7,c
 27202  014142  D00F               	goto	l7799
 27203                           
 27204                           ;stkvar	_grs @ sp[(-4)+0]
 27205  014144  0EFC               	movlw	-4
 27206  014146  006F FF8C  F031    	movff	plusw1,btemp+11
 27207  01414C  0E7F               	movlw	127
 27208  01414E  1631               	andwf	(btemp+11)^0,f,c
 27209  014150  B4D8               	btfsc	status,2,c
 27210  014152  D004               	goto	l7795
 27211  014154                     u5720:
 27212                           
 27213                           ;stkvar	_aexp @ sp[(-4)+2]
 27214  014154  0EFE               	movlw	-2
 27215  014156  6AE3               	clrf	plusw1,c
 27216  014158  2AE3               	incf	plusw1,f,c
 27217  01415A  D003               	goto	l7799
 27218  01415C                     l7795:
 27219                           
 27220                           ;stkvar	_b @ sp[(-4)+-4]
 27221  01415C  0EF8               	movlw	-8
 27222  01415E  B0E3               	btfsc	plusw1,0,c
 27223  014160  D7F9               	goto	u5720
 27224  014162                     l7799:
 27225                           
 27226                           ;stkvar	_aexp @ sp[(-4)+2]
 27227  014162  0EFE               	movlw	-2
 27228  014164  50E3               	movf	plusw1,w,c
 27229  014166  B4D8               	btfsc	status,2,c
 27230  014168  D02B               	goto	l7811
 27231                           
 27232                           ;stkvar	_b @ sp[(-4)+-4]
 27233  01416A  50E1               	movf	fsr1l,w,c
 27234  01416C  0FF8               	addlw	-8
 27235  01416E  6ED9               	movwf	fsr2l,c
 27236  014170  50E2               	movf	fsr1h,w,c
 27237  014172  6EDA               	movwf	fsr2h,c
 27238  014174  0EFF               	movlw	255
 27239  014176  22DA               	addwfc	fsr2h,f,c
 27240  014178  2ADE               	incf	postinc2,f,c
 27241  01417A  0E00               	movlw	0
 27242  01417C  22DE               	addwfc	postinc2,f,c
 27243  01417E  22DE               	addwfc	postinc2,f,c
 27244  014180  22DE               	addwfc	postinc2,f,c
 27245                           
 27246                           ;stkvar	_b @ sp[(-4)+-4]
 27247  014182  0EFB               	movlw	-5
 27248  014184  A0E3               	btfss	plusw1,0,c
 27249  014186  D01C               	goto	l7811
 27250  014188  0E01               	movlw	1
 27251  01418A  6E31               	movwf	(btemp+11)^0,c
 27252                           
 27253                           ;stkvar	_b @ sp[(-4)+-4]
 27254  01418C  50E1               	movf	fsr1l,w,c
 27255  01418E  0FF8               	addlw	-8
 27256  014190  6ED9               	movwf	fsr2l,c
 27257  014192  50E2               	movf	fsr1h,w,c
 27258  014194  6EDA               	movwf	fsr2h,c
 27259  014196  0EFF               	movlw	255
 27260  014198  22DA               	addwfc	fsr2h,f,c
 27261  01419A  2831               	incf	(btemp+11)^0,w,c
 27262  01419C  52DE               	movf	postinc2,f,c
 27263  01419E  D008               	goto	u5760
 27264  0141A0                     u5765:
 27265  0141A0  52DE               	movf	postinc2,f,c
 27266  0141A2  90D8               	bcf	status,0,c
 27267  0141A4  BEDC               	btfsc	preinc2,7,c
 27268  0141A6  80D8               	bsf	status,0,c
 27269  0141A8  32DD               	rrcf	postdec2,f,c
 27270  0141AA  32DD               	rrcf	postdec2,f,c
 27271  0141AC  32DD               	rrcf	postdec2,f,c
 27272  0141AE  32DE               	rrcf	postinc2,f,c
 27273  0141B0                     u5760:
 27274  0141B0  2EE8               	decfsz	wreg,f,c
 27275  0141B2  D7F6               	goto	u5765
 27276                           
 27277                           ;stkvar	_bexp @ sp[(-4)+1]
 27278  0141B4  0EFD               	movlw	-3
 27279  0141B6  28E3               	incf	plusw1,w,c
 27280  0141B8  B4D8               	btfsc	status,2,c
 27281  0141BA  D002               	goto	l7811
 27282                           
 27283                           ;stkvar	_bexp @ sp[(-4)+1]
 27284  0141BC  0EFD               	movlw	-3
 27285  0141BE  2AE3               	incf	plusw1,f,c
 27286  0141C0                     l7811:
 27287                           
 27288                           ;stkvar	_bexp @ sp[(-4)+1]
 27289  0141C0  0EFD               	movlw	-3
 27290  0141C2  28E3               	incf	plusw1,w,c
 27291  0141C4  B4D8               	btfsc	status,2,c
 27292  0141C6  D004               	goto	u5790
 27293                           
 27294                           ;stkvar	_bexp @ sp[(-4)+1]
 27295  0141C8  0EFD               	movlw	-3
 27296  0141CA  50E3               	movf	plusw1,w,c
 27297  0141CC  A4D8               	btfss	status,2,c
 27298  0141CE  D00E               	goto	l7821
 27299  0141D0                     u5790:
 27300                           
 27301                           ;stkvar	_b @ sp[(-4)+-4]
 27302  0141D0  0EF8               	movlw	-8
 27303  0141D2  6AE3               	clrf	plusw1,c
 27304  0141D4  0EF9               	movlw	-7
 27305  0141D6  6AE3               	clrf	plusw1,c
 27306  0141D8  0EFA               	movlw	-6
 27307  0141DA  6AE3               	clrf	plusw1,c
 27308  0141DC  0EFB               	movlw	-5
 27309  0141DE  6AE3               	clrf	plusw1,c
 27310                           
 27311                           ;stkvar	_bexp @ sp[(-4)+1]
 27312  0141E0  0EFD               	movlw	-3
 27313  0141E2  50E3               	movf	plusw1,w,c
 27314  0141E4  A4D8               	btfss	status,2,c
 27315  0141E6  D002               	goto	l7821
 27316                           
 27317                           ;stkvar	_signs @ sp[(-4)+3]
 27318  0141E8  0EFF               	movlw	-1
 27319  0141EA  6AE3               	clrf	plusw1,c
 27320  0141EC                     l7821:
 27321                           
 27322                           ;stkvar	_bexp @ sp[(-4)+1]
 27323  0141EC  0EFD               	movlw	-3
 27324  0141EE  A0E3               	btfss	plusw1,0,c
 27325  0141F0  D009               	goto	l7825
 27326                           
 27327                           ;stkvar	_b @ sp[(-4)+-4]
 27328  0141F2  0EFA               	movlw	250
 27329  0141F4  24E1               	addwf	fsr1l,w,c
 27330  0141F6  6ED9               	movwf	fsr2l,c
 27331  0141F8  0EFF               	movlw	255
 27332  0141FA  20E2               	addwfc	fsr1h,w,c
 27333  0141FC  6EDA               	movwf	fsr2h,c
 27334  0141FE  0E00               	movlw	0
 27335  014200  8EDB               	bsf	plusw2,7,c
 27336  014202  D008               	goto	l7827
 27337  014204                     l7825:
 27338                           
 27339                           ;stkvar	_b @ sp[(-4)+-4]
 27340  014204  0EFA               	movlw	250
 27341  014206  24E1               	addwf	fsr1l,w,c
 27342  014208  6ED9               	movwf	fsr2l,c
 27343  01420A  0EFF               	movlw	255
 27344  01420C  20E2               	addwfc	fsr1h,w,c
 27345  01420E  6EDA               	movwf	fsr2h,c
 27346  014210  0E7F               	movlw	127
 27347  014212  16DF               	andwf	indf2,f,c
 27348  014214                     l7827:
 27349                           
 27350                           ;stkvar	_b @ sp[(-4)+-4]
 27351  014214  0EFB               	movlw	251
 27352  014216  24E1               	addwf	fsr1l,w,c
 27353  014218  6ED9               	movwf	fsr2l,c
 27354  01421A  0EFF               	movlw	255
 27355  01421C  20E2               	addwfc	fsr1h,w,c
 27356  01421E  6EDA               	movwf	fsr2h,c
 27357                           
 27358                           ;stkvar	_bexp @ sp[(-4)+1]
 27359  014220  0EFD               	movlw	-3
 27360  014222  006F FF8C  F031    	movff	plusw1,btemp+11
 27361  014228  90D8               	bcf	status,0,c
 27362  01422A  3031               	rrcf	(btemp+11)^0,w,c
 27363  01422C  6EDF               	movwf	indf2,c
 27364                           
 27365                           ;stkvar	_signs @ sp[(-4)+3]
 27366  01422E  0EFF               	movlw	-1
 27367  014230  AEE3               	btfss	plusw1,7,c
 27368  014232  D008               	goto	l7833
 27369                           
 27370                           ;stkvar	_b @ sp[(-4)+-4]
 27371  014234  0EFB               	movlw	251
 27372  014236  24E1               	addwf	fsr1l,w,c
 27373  014238  6ED9               	movwf	fsr2l,c
 27374  01423A  0EFF               	movlw	255
 27375  01423C  20E2               	addwfc	fsr1h,w,c
 27376  01423E  6EDA               	movwf	fsr2h,c
 27377  014240  0E00               	movlw	0
 27378  014242  8EDB               	bsf	plusw2,7,c
 27379  014244                     l7833:
 27380                           
 27381                           ;stkvar	_b @ sp[(-4)+-4]
 27382  014244  0EF8               	movlw	-8
 27383  014246  006F FF8C  F026    	movff	plusw1,btemp
 27384  01424C  0EF9               	movlw	-7
 27385  01424E  006F FF8C  F027    	movff	plusw1,btemp+1
 27386  014254  0EFA               	movlw	-6
 27387  014256  006F FF8C  F028    	movff	plusw1,btemp+2
 27388  01425C  0EFB               	movlw	-5
 27389  01425E  006F FF8C  F029    	movff	plusw1,btemp+3
 27390  014264                     l2933:
 27391                           
 27392                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 27393  014264  0EF4               	movlw	244
 27394  014266  26E1               	addwf	fsr1l,f,c
 27395  014268  0EFF               	movlw	255
 27396  01426A  22E2               	addwfc	fsr1h,f,c
 27397  01426C  0012               	return		;funcret
 27398  01426E                     __end_of___fladd:
 27399                           	opt callstack 0
 27400                           
 27401 ;; *************** function ___flmul *****************
 27402 ;; Defined at:
 27403 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 27404 ;; Parameters:    Size  Location     Type
 27405 ;;  b               4  [STACK] unsigned char 
 27406 ;;  a               4  [STACK] unsigned char 
 27407 ;; Auto vars:     Size  Location     Type
 27408 ;;  prod            4  [STACK] struct .
 27409 ;;  grs             4  [STACK] unsigned long 
 27410 ;;  temp            2  [STACK] struct .
 27411 ;;  bexp            1  [STACK] unsigned char 
 27412 ;;  aexp            1  [STACK] unsigned char 
 27413 ;;  sign            1  [STACK] unsigned char 
 27414 ;; Return value:  Size  Location     Type
 27415 ;;                  4  [STACK] unsigned char 
 27416 ;; Registers used:
 27417 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 27418 ;; Tracked objects:
 27419 ;;		On entry : 0/1
 27420 ;;		On exit  : 0/0
 27421 ;;		Unchanged: 0/0
 27422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27427 ;;Total ram usage:        0 bytes
 27428 ;; Hardware stack levels used:    1
 27429 ;; Hardware stack levels required when called:   15
 27430 ;; This function calls:
 27431 ;;		Nothing
 27432 ;; This function is called by:
 27433 ;;		_conv_raw_result
 27434 ;;		_lp_filter
 27435 ;;		_calc_model_data
 27436 ;;		_calc_bsoc
 27437 ;;		_init_bsoc
 27438 ;;		_efgtoa
 27439 ;; This function uses a reentrant model
 27440 ;;
 27441                           
 27442                           	psect	text106
 27443  013288                     __ptext106:
 27444                           	opt callstack 0
 27445  013288                     ___flmul:
 27446                           	opt callstack 0
 27447                           
 27448                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 27449  013288  0E0D               	movlw	13
 27450  01328A  26E1               	addwf	fsr1l,f,c
 27451  01328C  0E00               	movlw	0
 27452  01328E  22E2               	addwfc	fsr1h,f,c
 27453                           
 27454                           ;stkvar	_b @ sp[(-13)+-4]
 27455                           
 27456                           ;incstack = 0
 27457 ;; hardware stack exceeded
 27458  013290  0EF2               	movlw	242
 27459  013292  24E1               	addwf	fsr1l,w,c
 27460  013294  6ED9               	movwf	fsr2l,c
 27461  013296  0EFF               	movlw	255
 27462  013298  20E2               	addwfc	fsr1h,w,c
 27463  01329A  6EDA               	movwf	fsr2h,c
 27464  01329C  50DF               	movf	indf2,w,c
 27465  01329E  6E31               	movwf	(btemp+11)^0,c
 27466  0132A0  0E80               	movlw	128
 27467  0132A2  1631               	andwf	(btemp+11)^0,f,c
 27468                           
 27469                           ;stkvar	_sign @ sp[(-13)+12]
 27470  0132A4  0EFF               	movlw	-1
 27471  0132A6  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 27472                           
 27473                           ;stkvar	_b @ sp[(-13)+-4]
 27474  0132AC  0EF2               	movlw	242
 27475  0132AE  24E1               	addwf	fsr1l,w,c
 27476  0132B0  6ED9               	movwf	fsr2l,c
 27477  0132B2  0EFF               	movlw	255
 27478  0132B4  20E2               	addwfc	fsr1h,w,c
 27479  0132B6  6EDA               	movwf	fsr2h,c
 27480  0132B8  50DF               	movf	indf2,w,c
 27481  0132BA  6E31               	movwf	(btemp+11)^0,c
 27482  0132BC  90D8               	bcf	status,0,c
 27483  0132BE  3431               	rlcf	(btemp+11)^0,w,c
 27484  0132C0  6E30               	movwf	(btemp+10)^0,c
 27485                           
 27486                           ;stkvar	_bexp @ sp[(-13)+10]
 27487  0132C2  0EFD               	movlw	-3
 27488  0132C4  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 27489                           
 27490                           ;stkvar	_b @ sp[(-13)+-4]
 27491  0132CA  0EF1               	movlw	241
 27492  0132CC  24E1               	addwf	fsr1l,w,c
 27493  0132CE  6ED9               	movwf	fsr2l,c
 27494  0132D0  0EFF               	movlw	255
 27495  0132D2  20E2               	addwfc	fsr1h,w,c
 27496  0132D4  6EDA               	movwf	fsr2h,c
 27497  0132D6  AEDF               	btfss	indf2,7,c
 27498  0132D8  D002               	goto	l8217
 27499                           
 27500                           ;stkvar	_bexp @ sp[(-13)+10]
 27501  0132DA  0EFD               	movlw	-3
 27502  0132DC  80E3               	bsf	plusw1,0,c
 27503  0132DE                     l8217:
 27504                           
 27505                           ;stkvar	_bexp @ sp[(-13)+10]
 27506  0132DE  0EFD               	movlw	-3
 27507  0132E0  50E3               	movf	plusw1,w,c
 27508  0132E2  B4D8               	btfsc	status,2,c
 27509  0132E4  D01F               	goto	l8225
 27510                           
 27511                           ;stkvar	_bexp @ sp[(-13)+10]
 27512  0132E6  0EFD               	movlw	-3
 27513  0132E8  28E3               	incf	plusw1,w,c
 27514  0132EA  A4D8               	btfss	status,2,c
 27515  0132EC  D018               	goto	l8223
 27516  0132EE  0E00               	movlw	0
 27517  0132F0  6E2E               	movwf	(btemp+8)^0,c
 27518  0132F2  0E00               	movlw	0
 27519  0132F4  6E2F               	movwf	(btemp+9)^0,c
 27520  0132F6  0E00               	movlw	0
 27521  0132F8  6E30               	movwf	(btemp+10)^0,c
 27522  0132FA  0E00               	movlw	0
 27523  0132FC  6E31               	movwf	(btemp+11)^0,c
 27524                           
 27525                           ;stkvar	_b @ sp[(-13)+-4]
 27526  0132FE  0EEF               	movlw	-17
 27527  013300  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 27528  013306  0EF0               	movlw	-16
 27529  013308  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 27530  01330E  0EF1               	movlw	-15
 27531  013310  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 27532  013316  0EF2               	movlw	-14
 27533  013318  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 27534  01331E                     l8223:
 27535                           
 27536                           ;stkvar	_b @ sp[(-13)+-4]
 27537  01331E  0EF1               	movlw	-15
 27538  013320  8EE3               	bsf	plusw1,7,c
 27539  013322  D018               	goto	l8227
 27540  013324                     l8225:
 27541  013324  0E00               	movlw	0
 27542  013326  6E2E               	movwf	(btemp+8)^0,c
 27543  013328  0E00               	movlw	0
 27544  01332A  6E2F               	movwf	(btemp+9)^0,c
 27545  01332C  0E00               	movlw	0
 27546  01332E  6E30               	movwf	(btemp+10)^0,c
 27547  013330  0E00               	movlw	0
 27548  013332  6E31               	movwf	(btemp+11)^0,c
 27549                           
 27550                           ;stkvar	_b @ sp[(-13)+-4]
 27551  013334  0EEF               	movlw	-17
 27552  013336  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 27553  01333C  0EF0               	movlw	-16
 27554  01333E  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 27555  013344  0EF1               	movlw	-15
 27556  013346  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 27557  01334C  0EF2               	movlw	-14
 27558  01334E  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 27559  013354                     l8227:
 27560                           
 27561                           ;stkvar	_a @ sp[(-13)+-8]
 27562  013354  0EEE               	movlw	238
 27563  013356  24E1               	addwf	fsr1l,w,c
 27564  013358  6ED9               	movwf	fsr2l,c
 27565  01335A  0EFF               	movlw	255
 27566  01335C  20E2               	addwfc	fsr1h,w,c
 27567  01335E  6EDA               	movwf	fsr2h,c
 27568  013360  50DF               	movf	indf2,w,c
 27569  013362  6E31               	movwf	(btemp+11)^0,c
 27570  013364  0E80               	movlw	128
 27571  013366  1631               	andwf	(btemp+11)^0,f,c
 27572                           
 27573                           ;stkvar	_sign @ sp[(-13)+12]
 27574  013368  50E1               	movf	fsr1l,w,c
 27575  01336A  0FFF               	addlw	-1
 27576  01336C  6ED9               	movwf	fsr2l,c
 27577  01336E  50E2               	movf	fsr1h,w,c
 27578  013370  6EDA               	movwf	fsr2h,c
 27579  013372  0EFF               	movlw	255
 27580  013374  22DA               	addwfc	fsr2h,f,c
 27581  013376  5031               	movf	(btemp+11)^0,w,c
 27582  013378  1ADF               	xorwf	indf2,f,c
 27583                           
 27584                           ;stkvar	_a @ sp[(-13)+-8]
 27585  01337A  0EEE               	movlw	238
 27586  01337C  24E1               	addwf	fsr1l,w,c
 27587  01337E  6ED9               	movwf	fsr2l,c
 27588  013380  0EFF               	movlw	255
 27589  013382  20E2               	addwfc	fsr1h,w,c
 27590  013384  6EDA               	movwf	fsr2h,c
 27591  013386  50DF               	movf	indf2,w,c
 27592  013388  6E31               	movwf	(btemp+11)^0,c
 27593  01338A  90D8               	bcf	status,0,c
 27594  01338C  3431               	rlcf	(btemp+11)^0,w,c
 27595  01338E  6E30               	movwf	(btemp+10)^0,c
 27596                           
 27597                           ;stkvar	_aexp @ sp[(-13)+11]
 27598  013390  0EFE               	movlw	-2
 27599  013392  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 27600                           
 27601                           ;stkvar	_a @ sp[(-13)+-8]
 27602  013398  0EED               	movlw	237
 27603  01339A  24E1               	addwf	fsr1l,w,c
 27604  01339C  6ED9               	movwf	fsr2l,c
 27605  01339E  0EFF               	movlw	255
 27606  0133A0  20E2               	addwfc	fsr1h,w,c
 27607  0133A2  6EDA               	movwf	fsr2h,c
 27608  0133A4  AEDF               	btfss	indf2,7,c
 27609  0133A6  D002               	goto	l8235
 27610                           
 27611                           ;stkvar	_aexp @ sp[(-13)+11]
 27612  0133A8  0EFE               	movlw	-2
 27613  0133AA  80E3               	bsf	plusw1,0,c
 27614  0133AC                     l8235:
 27615                           
 27616                           ;stkvar	_aexp @ sp[(-13)+11]
 27617  0133AC  0EFE               	movlw	-2
 27618  0133AE  50E3               	movf	plusw1,w,c
 27619  0133B0  B4D8               	btfsc	status,2,c
 27620  0133B2  D01F               	goto	l8243
 27621                           
 27622                           ;stkvar	_aexp @ sp[(-13)+11]
 27623  0133B4  0EFE               	movlw	-2
 27624  0133B6  28E3               	incf	plusw1,w,c
 27625  0133B8  A4D8               	btfss	status,2,c
 27626  0133BA  D018               	goto	l8241
 27627  0133BC  0E00               	movlw	0
 27628  0133BE  6E2E               	movwf	(btemp+8)^0,c
 27629  0133C0  0E00               	movlw	0
 27630  0133C2  6E2F               	movwf	(btemp+9)^0,c
 27631  0133C4  0E00               	movlw	0
 27632  0133C6  6E30               	movwf	(btemp+10)^0,c
 27633  0133C8  0E00               	movlw	0
 27634  0133CA  6E31               	movwf	(btemp+11)^0,c
 27635                           
 27636                           ;stkvar	_a @ sp[(-13)+-8]
 27637  0133CC  0EEB               	movlw	-21
 27638  0133CE  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 27639  0133D4  0EEC               	movlw	-20
 27640  0133D6  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 27641  0133DC  0EED               	movlw	-19
 27642  0133DE  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 27643  0133E4  0EEE               	movlw	-18
 27644  0133E6  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 27645  0133EC                     l8241:
 27646                           
 27647                           ;stkvar	_a @ sp[(-13)+-8]
 27648  0133EC  0EED               	movlw	-19
 27649  0133EE  8EE3               	bsf	plusw1,7,c
 27650  0133F0  D018               	goto	l8245
 27651  0133F2                     l8243:
 27652  0133F2  0E00               	movlw	0
 27653  0133F4  6E2E               	movwf	(btemp+8)^0,c
 27654  0133F6  0E00               	movlw	0
 27655  0133F8  6E2F               	movwf	(btemp+9)^0,c
 27656  0133FA  0E00               	movlw	0
 27657  0133FC  6E30               	movwf	(btemp+10)^0,c
 27658  0133FE  0E00               	movlw	0
 27659  013400  6E31               	movwf	(btemp+11)^0,c
 27660                           
 27661                           ;stkvar	_a @ sp[(-13)+-8]
 27662  013402  0EEB               	movlw	-21
 27663  013404  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 27664  01340A  0EEC               	movlw	-20
 27665  01340C  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 27666  013412  0EED               	movlw	-19
 27667  013414  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 27668  01341A  0EEE               	movlw	-18
 27669  01341C  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 27670  013422                     l8245:
 27671                           
 27672                           ;stkvar	_aexp @ sp[(-13)+11]
 27673  013422  0EFE               	movlw	-2
 27674  013424  50E3               	movf	plusw1,w,c
 27675  013426  B4D8               	btfsc	status,2,c
 27676  013428  D004               	goto	u6730
 27677                           
 27678                           ;stkvar	_bexp @ sp[(-13)+10]
 27679  01342A  0EFD               	movlw	-3
 27680  01342C  50E3               	movf	plusw1,w,c
 27681  01342E  A4D8               	btfss	status,2,c
 27682  013430  D009               	goto	l8253
 27683  013432                     u6730:
 27684  013432  0E00               	movlw	0
 27685  013434  6E26               	movwf	btemp^0,c
 27686  013436  0E00               	movlw	0
 27687  013438  6E27               	movwf	(btemp+1)^0,c
 27688  01343A  0E00               	movlw	0
 27689  01343C  6E28               	movwf	(btemp+2)^0,c
 27690  01343E  0E00               	movlw	0
 27691  013440  6E29               	movwf	(btemp+3)^0,c
 27692  013442  D332               	goto	l3014
 27693  013444                     l8253:
 27694                           
 27695                           ;stkvar	_b @ sp[(-13)+-4]
 27696  013444  0EEF               	movlw	-17
 27697  013446  006F FF8C  F031    	movff	plusw1,btemp+11
 27698                           
 27699                           ;stkvar	_a @ sp[(-13)+-8]
 27700  01344C  0EED               	movlw	237
 27701  01344E  24E1               	addwf	fsr1l,w,c
 27702  013450  6ED9               	movwf	fsr2l,c
 27703  013452  0EFF               	movlw	255
 27704  013454  20E2               	addwfc	fsr1h,w,c
 27705  013456  6EDA               	movwf	fsr2h,c
 27706  013458  50DF               	movf	indf2,w,c
 27707  01345A  0231               	mulwf	(btemp+11)^0,c
 27708                           
 27709                           ;stkvar	_temp @ sp[(-13)+8]
 27710  01345C  0EFB               	movlw	-5
 27711  01345E  006F FFCF FFE3     	movff	prodl,plusw1
 27712  013464  0EFC               	movlw	-4
 27713  013466  006F FFD3 FFE3     	movff	prodh,plusw1
 27714                           
 27715                           ;stkvar	_temp @ sp[(-13)+8]
 27716  01346C  0EFB               	movlw	-5
 27717  01346E  006F FF8C  F031    	movff	plusw1,btemp+11
 27718  013474  0060  F0C4  F02A   	movff	btemp+11,btemp+4
 27719  01347A  6A2B               	clrf	(btemp+5)^0,c
 27720  01347C  6A2C               	clrf	(btemp+6)^0,c
 27721  01347E  6A2D               	clrf	(btemp+7)^0,c
 27722                           
 27723                           ;stkvar	_grs @ sp[(-13)+4]
 27724  013480  0EF7               	movlw	-9
 27725  013482  0060  F0AB  FFE3   	movff	btemp+4,plusw1
 27726  013488  0EF8               	movlw	-8
 27727  01348A  0060  F0AF  FFE3   	movff	btemp+5,plusw1
 27728  013490  0EF9               	movlw	-7
 27729  013492  0060  F0B3  FFE3   	movff	btemp+6,plusw1
 27730  013498  0EFA               	movlw	-6
 27731  01349A  0060  F0B7  FFE3   	movff	btemp+7,plusw1
 27732                           
 27733                           ;stkvar	_temp @ sp[(-13)+8]
 27734  0134A0  0EFC               	movlw	252
 27735  0134A2  24E1               	addwf	fsr1l,w,c
 27736  0134A4  6ED9               	movwf	fsr2l,c
 27737  0134A6  0EFF               	movlw	255
 27738  0134A8  20E2               	addwfc	fsr1h,w,c
 27739  0134AA  6EDA               	movwf	fsr2h,c
 27740  0134AC  50DF               	movf	indf2,w,c
 27741  0134AE  6E31               	movwf	(btemp+11)^0,c
 27742  0134B0  0060  F0C4  F02A   	movff	btemp+11,btemp+4
 27743  0134B6  6A2B               	clrf	(btemp+5)^0,c
 27744  0134B8  6A2C               	clrf	(btemp+6)^0,c
 27745  0134BA  6A2D               	clrf	(btemp+7)^0,c
 27746                           
 27747                           ;stkvar	_prod @ sp[(-13)+0]
 27748  0134BC  0EF3               	movlw	-13
 27749  0134BE  0060  F0AB  FFE3   	movff	btemp+4,plusw1
 27750  0134C4  0EF4               	movlw	-12
 27751  0134C6  0060  F0AF  FFE3   	movff	btemp+5,plusw1
 27752  0134CC  0EF5               	movlw	-11
 27753  0134CE  0060  F0B3  FFE3   	movff	btemp+6,plusw1
 27754  0134D4  0EF6               	movlw	-10
 27755  0134D6  0060  F0B7  FFE3   	movff	btemp+7,plusw1
 27756                           
 27757                           ;stkvar	_b @ sp[(-13)+-4]
 27758  0134DC  0EF0               	movlw	240
 27759  0134DE  24E1               	addwf	fsr1l,w,c
 27760  0134E0  6ED9               	movwf	fsr2l,c
 27761  0134E2  0EFF               	movlw	255
 27762  0134E4  20E2               	addwfc	fsr1h,w,c
 27763  0134E6  6EDA               	movwf	fsr2h,c
 27764  0134E8  50DF               	movf	indf2,w,c
 27765  0134EA  6E31               	movwf	(btemp+11)^0,c
 27766                           
 27767                           ;stkvar	_a @ sp[(-13)+-8]
 27768  0134EC  0EEC               	movlw	236
 27769  0134EE  24E1               	addwf	fsr1l,w,c
 27770  0134F0  6ED9               	movwf	fsr2l,c
 27771  0134F2  0EFF               	movlw	255
 27772  0134F4  20E2               	addwfc	fsr1h,w,c
 27773  0134F6  6EDA               	movwf	fsr2h,c
 27774  0134F8  50DF               	movf	indf2,w,c
 27775  0134FA  0231               	mulwf	(btemp+11)^0,c
 27776                           
 27777                           ;stkvar	_temp @ sp[(-13)+8]
 27778  0134FC  0EFB               	movlw	-5
 27779  0134FE  006F FFCF FFE3     	movff	prodl,plusw1
 27780  013504  0EFC               	movlw	-4
 27781  013506  006F FFD3 FFE3     	movff	prodh,plusw1
 27782                           
 27783                           ;stkvar	_grs @ sp[(-13)+4]
 27784  01350C  50E1               	movf	fsr1l,w,c
 27785  01350E  0FF7               	addlw	-9
 27786  013510  6ED9               	movwf	fsr2l,c
 27787  013512  50E2               	movf	fsr1h,w,c
 27788  013514  6EDA               	movwf	fsr2h,c
 27789  013516  0EFF               	movlw	255
 27790  013518  22DA               	addwfc	fsr2h,f,c
 27791                           
 27792                           ;stkvar	_temp @ sp[(-13)+8]
 27793  01351A  0EFB               	movlw	-5
 27794  01351C  50E3               	movf	plusw1,w,c
 27795  01351E  26DE               	addwf	postinc2,f,c
 27796  013520  0E00               	movlw	0
 27797  013522  22DE               	addwfc	postinc2,f,c
 27798  013524  22DE               	addwfc	postinc2,f,c
 27799  013526  22DE               	addwfc	postinc2,f,c
 27800                           
 27801                           ;stkvar	_prod @ sp[(-13)+0]
 27802  013528  50E1               	movf	fsr1l,w,c
 27803  01352A  0FF3               	addlw	-13
 27804  01352C  6ED9               	movwf	fsr2l,c
 27805  01352E  50E2               	movf	fsr1h,w,c
 27806  013530  6EDA               	movwf	fsr2h,c
 27807  013532  0EFF               	movlw	255
 27808  013534  22DA               	addwfc	fsr2h,f,c
 27809                           
 27810                           ;stkvar	_temp @ sp[(-13)+8]
 27811  013536  0EFC               	movlw	252
 27812  013538  24E1               	addwf	fsr1l,w,c
 27813  01353A  6EE9               	movwf	fsr0l,c
 27814  01353C  0EFF               	movlw	255
 27815  01353E  20E2               	addwfc	fsr1h,w,c
 27816  013540  6EEA               	movwf	fsr0h,c
 27817  013542  50EF               	movf	indf0,w,c
 27818  013544  26DE               	addwf	postinc2,f,c
 27819  013546  0E00               	movlw	0
 27820  013548  22DE               	addwfc	postinc2,f,c
 27821  01354A  22DE               	addwfc	postinc2,f,c
 27822  01354C  22DE               	addwfc	postinc2,f,c
 27823                           
 27824                           ;stkvar	_b @ sp[(-13)+-4]
 27825  01354E  0EF1               	movlw	241
 27826  013550  24E1               	addwf	fsr1l,w,c
 27827  013552  6ED9               	movwf	fsr2l,c
 27828  013554  0EFF               	movlw	255
 27829  013556  20E2               	addwfc	fsr1h,w,c
 27830  013558  6EDA               	movwf	fsr2h,c
 27831  01355A  50DF               	movf	indf2,w,c
 27832  01355C  6E31               	movwf	(btemp+11)^0,c
 27833                           
 27834                           ;stkvar	_a @ sp[(-13)+-8]
 27835  01355E  0EEB               	movlw	-21
 27836  013560  50E3               	movf	plusw1,w,c
 27837  013562  0231               	mulwf	(btemp+11)^0,c
 27838                           
 27839                           ;stkvar	_temp @ sp[(-13)+8]
 27840  013564  0EFB               	movlw	-5
 27841  013566  006F FFCF FFE3     	movff	prodl,plusw1
 27842  01356C  0EFC               	movlw	-4
 27843  01356E  006F FFD3 FFE3     	movff	prodh,plusw1
 27844                           
 27845                           ;stkvar	_grs @ sp[(-13)+4]
 27846  013574  50E1               	movf	fsr1l,w,c
 27847  013576  0FF7               	addlw	-9
 27848  013578  6ED9               	movwf	fsr2l,c
 27849  01357A  50E2               	movf	fsr1h,w,c
 27850  01357C  6EDA               	movwf	fsr2h,c
 27851  01357E  0EFF               	movlw	255
 27852  013580  22DA               	addwfc	fsr2h,f,c
 27853                           
 27854                           ;stkvar	_temp @ sp[(-13)+8]
 27855  013582  0EFB               	movlw	-5
 27856  013584  50E3               	movf	plusw1,w,c
 27857  013586  26DE               	addwf	postinc2,f,c
 27858  013588  0E00               	movlw	0
 27859  01358A  22DE               	addwfc	postinc2,f,c
 27860  01358C  22DE               	addwfc	postinc2,f,c
 27861  01358E  22DE               	addwfc	postinc2,f,c
 27862                           
 27863                           ;stkvar	_prod @ sp[(-13)+0]
 27864  013590  50E1               	movf	fsr1l,w,c
 27865  013592  0FF3               	addlw	-13
 27866  013594  6ED9               	movwf	fsr2l,c
 27867  013596  50E2               	movf	fsr1h,w,c
 27868  013598  6EDA               	movwf	fsr2h,c
 27869  01359A  0EFF               	movlw	255
 27870  01359C  22DA               	addwfc	fsr2h,f,c
 27871                           
 27872                           ;stkvar	_temp @ sp[(-13)+8]
 27873  01359E  0EFC               	movlw	252
 27874  0135A0  24E1               	addwf	fsr1l,w,c
 27875  0135A2  6EE9               	movwf	fsr0l,c
 27876  0135A4  0EFF               	movlw	255
 27877  0135A6  20E2               	addwfc	fsr1h,w,c
 27878  0135A8  6EEA               	movwf	fsr0h,c
 27879  0135AA  50EF               	movf	indf0,w,c
 27880  0135AC  26DE               	addwf	postinc2,f,c
 27881  0135AE  0E00               	movlw	0
 27882  0135B0  22DE               	addwfc	postinc2,f,c
 27883  0135B2  22DE               	addwfc	postinc2,f,c
 27884  0135B4  22DE               	addwfc	postinc2,f,c
 27885                           
 27886                           ;stkvar	_grs @ sp[(-13)+4]
 27887  0135B6  50E1               	movf	fsr1l,w,c
 27888  0135B8  0FF7               	addlw	-9
 27889  0135BA  6ED9               	movwf	fsr2l,c
 27890  0135BC  50E2               	movf	fsr1h,w,c
 27891  0135BE  6EDA               	movwf	fsr2h,c
 27892  0135C0  0EFF               	movlw	255
 27893  0135C2  22DA               	addwfc	fsr2h,f,c
 27894  0135C4  0E08               	movlw	8
 27895  0135C6                     u6745:
 27896  0135C6  90D8               	bcf	status,0,c
 27897  0135C8  36DE               	rlcf	postinc2,f,c
 27898  0135CA  36DE               	rlcf	postinc2,f,c
 27899  0135CC  36DE               	rlcf	postinc2,f,c
 27900  0135CE  36DD               	rlcf	postdec2,f,c
 27901  0135D0  52DD               	movf	postdec2,f,c
 27902  0135D2  52DD               	movf	postdec2,f,c
 27903  0135D4  2EE8               	decfsz	wreg,f,c
 27904  0135D6  D7F7               	goto	u6745
 27905                           
 27906                           ;stkvar	_b @ sp[(-13)+-4]
 27907  0135D8  0EF0               	movlw	240
 27908  0135DA  24E1               	addwf	fsr1l,w,c
 27909  0135DC  6ED9               	movwf	fsr2l,c
 27910  0135DE  0EFF               	movlw	255
 27911  0135E0  20E2               	addwfc	fsr1h,w,c
 27912  0135E2  6EDA               	movwf	fsr2h,c
 27913  0135E4  50DF               	movf	indf2,w,c
 27914  0135E6  6E31               	movwf	(btemp+11)^0,c
 27915                           
 27916                           ;stkvar	_a @ sp[(-13)+-8]
 27917  0135E8  0EEB               	movlw	-21
 27918  0135EA  50E3               	movf	plusw1,w,c
 27919  0135EC  0231               	mulwf	(btemp+11)^0,c
 27920                           
 27921                           ;stkvar	_temp @ sp[(-13)+8]
 27922  0135EE  0EFB               	movlw	-5
 27923  0135F0  006F FFCF FFE3     	movff	prodl,plusw1
 27924  0135F6  0EFC               	movlw	-4
 27925  0135F8  006F FFD3 FFE3     	movff	prodh,plusw1
 27926                           
 27927                           ;stkvar	_temp @ sp[(-13)+8]
 27928  0135FE  0EFB               	movlw	-5
 27929  013600  006F FF8C  F030    	movff	plusw1,btemp+10
 27930  013606  0EFC               	movlw	-4
 27931  013608  006F FF8C  F031    	movff	plusw1,btemp+11
 27932                           
 27933                           ;stkvar	_grs @ sp[(-13)+4]
 27934  01360E  50E1               	movf	fsr1l,w,c
 27935  013610  0FF7               	addlw	-9
 27936  013612  6ED9               	movwf	fsr2l,c
 27937  013614  50E2               	movf	fsr1h,w,c
 27938  013616  6EDA               	movwf	fsr2h,c
 27939  013618  0EFF               	movlw	255
 27940  01361A  22DA               	addwfc	fsr2h,f,c
 27941  01361C  5030               	movf	(btemp+10)^0,w,c
 27942  01361E  26DE               	addwf	postinc2,f,c
 27943  013620  5031               	movf	(btemp+11)^0,w,c
 27944  013622  22DE               	addwfc	postinc2,f,c
 27945  013624  0E00               	movlw	0
 27946  013626  22DE               	addwfc	postinc2,f,c
 27947  013628  22DE               	addwfc	postinc2,f,c
 27948                           
 27949                           ;stkvar	_b @ sp[(-13)+-4]
 27950  01362A  0EEF               	movlw	-17
 27951  01362C  006F FF8C  F031    	movff	plusw1,btemp+11
 27952                           
 27953                           ;stkvar	_a @ sp[(-13)+-8]
 27954  013632  0EEC               	movlw	236
 27955  013634  24E1               	addwf	fsr1l,w,c
 27956  013636  6ED9               	movwf	fsr2l,c
 27957  013638  0EFF               	movlw	255
 27958  01363A  20E2               	addwfc	fsr1h,w,c
 27959  01363C  6EDA               	movwf	fsr2h,c
 27960  01363E  50DF               	movf	indf2,w,c
 27961  013640  0231               	mulwf	(btemp+11)^0,c
 27962                           
 27963                           ;stkvar	_temp @ sp[(-13)+8]
 27964  013642  0EFB               	movlw	-5
 27965  013644  006F FFCF FFE3     	movff	prodl,plusw1
 27966  01364A  0EFC               	movlw	-4
 27967  01364C  006F FFD3 FFE3     	movff	prodh,plusw1
 27968                           
 27969                           ;stkvar	_temp @ sp[(-13)+8]
 27970  013652  0EFB               	movlw	-5
 27971  013654  006F FF8C  F030    	movff	plusw1,btemp+10
 27972  01365A  0EFC               	movlw	-4
 27973  01365C  006F FF8C  F031    	movff	plusw1,btemp+11
 27974                           
 27975                           ;stkvar	_grs @ sp[(-13)+4]
 27976  013662  50E1               	movf	fsr1l,w,c
 27977  013664  0FF7               	addlw	-9
 27978  013666  6ED9               	movwf	fsr2l,c
 27979  013668  50E2               	movf	fsr1h,w,c
 27980  01366A  6EDA               	movwf	fsr2h,c
 27981  01366C  0EFF               	movlw	255
 27982  01366E  22DA               	addwfc	fsr2h,f,c
 27983  013670  5030               	movf	(btemp+10)^0,w,c
 27984  013672  26DE               	addwf	postinc2,f,c
 27985  013674  5031               	movf	(btemp+11)^0,w,c
 27986  013676  22DE               	addwfc	postinc2,f,c
 27987  013678  0E00               	movlw	0
 27988  01367A  22DE               	addwfc	postinc2,f,c
 27989  01367C  22DE               	addwfc	postinc2,f,c
 27990                           
 27991                           ;stkvar	_grs @ sp[(-13)+4]
 27992  01367E  50E1               	movf	fsr1l,w,c
 27993  013680  0FF7               	addlw	-9
 27994  013682  6ED9               	movwf	fsr2l,c
 27995  013684  50E2               	movf	fsr1h,w,c
 27996  013686  6EDA               	movwf	fsr2h,c
 27997  013688  0EFF               	movlw	255
 27998  01368A  22DA               	addwfc	fsr2h,f,c
 27999  01368C  0E08               	movlw	8
 28000  01368E                     u6755:
 28001  01368E  90D8               	bcf	status,0,c
 28002  013690  36DE               	rlcf	postinc2,f,c
 28003  013692  36DE               	rlcf	postinc2,f,c
 28004  013694  36DE               	rlcf	postinc2,f,c
 28005  013696  36DD               	rlcf	postdec2,f,c
 28006  013698  52DD               	movf	postdec2,f,c
 28007  01369A  52DD               	movf	postdec2,f,c
 28008  01369C  2EE8               	decfsz	wreg,f,c
 28009  01369E  D7F7               	goto	u6755
 28010                           
 28011                           ;stkvar	_b @ sp[(-13)+-4]
 28012  0136A0  0EEF               	movlw	-17
 28013  0136A2  006F FF8C  F031    	movff	plusw1,btemp+11
 28014                           
 28015                           ;stkvar	_a @ sp[(-13)+-8]
 28016  0136A8  0EEB               	movlw	-21
 28017  0136AA  50E3               	movf	plusw1,w,c
 28018  0136AC  0231               	mulwf	(btemp+11)^0,c
 28019                           
 28020                           ;stkvar	_temp @ sp[(-13)+8]
 28021  0136AE  0EFB               	movlw	-5
 28022  0136B0  006F FFCF FFE3     	movff	prodl,plusw1
 28023  0136B6  0EFC               	movlw	-4
 28024  0136B8  006F FFD3 FFE3     	movff	prodh,plusw1
 28025                           
 28026                           ;stkvar	_temp @ sp[(-13)+8]
 28027  0136BE  0EFB               	movlw	-5
 28028  0136C0  006F FF8C  F030    	movff	plusw1,btemp+10
 28029  0136C6  0EFC               	movlw	-4
 28030  0136C8  006F FF8C  F031    	movff	plusw1,btemp+11
 28031                           
 28032                           ;stkvar	_grs @ sp[(-13)+4]
 28033  0136CE  50E1               	movf	fsr1l,w,c
 28034  0136D0  0FF7               	addlw	-9
 28035  0136D2  6ED9               	movwf	fsr2l,c
 28036  0136D4  50E2               	movf	fsr1h,w,c
 28037  0136D6  6EDA               	movwf	fsr2h,c
 28038  0136D8  0EFF               	movlw	255
 28039  0136DA  22DA               	addwfc	fsr2h,f,c
 28040  0136DC  5030               	movf	(btemp+10)^0,w,c
 28041  0136DE  26DE               	addwf	postinc2,f,c
 28042  0136E0  5031               	movf	(btemp+11)^0,w,c
 28043  0136E2  22DE               	addwfc	postinc2,f,c
 28044  0136E4  0E00               	movlw	0
 28045  0136E6  22DE               	addwfc	postinc2,f,c
 28046  0136E8  22DE               	addwfc	postinc2,f,c
 28047                           
 28048                           ;stkvar	_b @ sp[(-13)+-4]
 28049  0136EA  0EF0               	movlw	240
 28050  0136EC  24E1               	addwf	fsr1l,w,c
 28051  0136EE  6ED9               	movwf	fsr2l,c
 28052  0136F0  0EFF               	movlw	255
 28053  0136F2  20E2               	addwfc	fsr1h,w,c
 28054  0136F4  6EDA               	movwf	fsr2h,c
 28055  0136F6  50DF               	movf	indf2,w,c
 28056  0136F8  6E31               	movwf	(btemp+11)^0,c
 28057                           
 28058                           ;stkvar	_a @ sp[(-13)+-8]
 28059  0136FA  0EED               	movlw	237
 28060  0136FC  24E1               	addwf	fsr1l,w,c
 28061  0136FE  6ED9               	movwf	fsr2l,c
 28062  013700  0EFF               	movlw	255
 28063  013702  20E2               	addwfc	fsr1h,w,c
 28064  013704  6EDA               	movwf	fsr2h,c
 28065  013706  50DF               	movf	indf2,w,c
 28066  013708  0231               	mulwf	(btemp+11)^0,c
 28067                           
 28068                           ;stkvar	_temp @ sp[(-13)+8]
 28069  01370A  0EFB               	movlw	-5
 28070  01370C  006F FFCF FFE3     	movff	prodl,plusw1
 28071  013712  0EFC               	movlw	-4
 28072  013714  006F FFD3 FFE3     	movff	prodh,plusw1
 28073                           
 28074                           ;stkvar	_temp @ sp[(-13)+8]
 28075  01371A  0EFB               	movlw	-5
 28076  01371C  006F FF8C  F030    	movff	plusw1,btemp+10
 28077  013722  0EFC               	movlw	-4
 28078  013724  006F FF8C  F031    	movff	plusw1,btemp+11
 28079                           
 28080                           ;stkvar	_prod @ sp[(-13)+0]
 28081  01372A  50E1               	movf	fsr1l,w,c
 28082  01372C  0FF3               	addlw	-13
 28083  01372E  6ED9               	movwf	fsr2l,c
 28084  013730  50E2               	movf	fsr1h,w,c
 28085  013732  6EDA               	movwf	fsr2h,c
 28086  013734  0EFF               	movlw	255
 28087  013736  22DA               	addwfc	fsr2h,f,c
 28088  013738  5030               	movf	(btemp+10)^0,w,c
 28089  01373A  26DE               	addwf	postinc2,f,c
 28090  01373C  5031               	movf	(btemp+11)^0,w,c
 28091  01373E  22DE               	addwfc	postinc2,f,c
 28092  013740  0E00               	movlw	0
 28093  013742  22DE               	addwfc	postinc2,f,c
 28094  013744  22DE               	addwfc	postinc2,f,c
 28095                           
 28096                           ;stkvar	_b @ sp[(-13)+-4]
 28097  013746  0EF1               	movlw	241
 28098  013748  24E1               	addwf	fsr1l,w,c
 28099  01374A  6ED9               	movwf	fsr2l,c
 28100  01374C  0EFF               	movlw	255
 28101  01374E  20E2               	addwfc	fsr1h,w,c
 28102  013750  6EDA               	movwf	fsr2h,c
 28103  013752  50DF               	movf	indf2,w,c
 28104  013754  6E31               	movwf	(btemp+11)^0,c
 28105                           
 28106                           ;stkvar	_a @ sp[(-13)+-8]
 28107  013756  0EEC               	movlw	236
 28108  013758  24E1               	addwf	fsr1l,w,c
 28109  01375A  6ED9               	movwf	fsr2l,c
 28110  01375C  0EFF               	movlw	255
 28111  01375E  20E2               	addwfc	fsr1h,w,c
 28112  013760  6EDA               	movwf	fsr2h,c
 28113  013762  50DF               	movf	indf2,w,c
 28114  013764  0231               	mulwf	(btemp+11)^0,c
 28115                           
 28116                           ;stkvar	_temp @ sp[(-13)+8]
 28117  013766  0EFB               	movlw	-5
 28118  013768  006F FFCF FFE3     	movff	prodl,plusw1
 28119  01376E  0EFC               	movlw	-4
 28120  013770  006F FFD3 FFE3     	movff	prodh,plusw1
 28121                           
 28122                           ;stkvar	_temp @ sp[(-13)+8]
 28123  013776  0EFB               	movlw	-5
 28124  013778  006F FF8C  F030    	movff	plusw1,btemp+10
 28125  01377E  0EFC               	movlw	-4
 28126  013780  006F FF8C  F031    	movff	plusw1,btemp+11
 28127                           
 28128                           ;stkvar	_prod @ sp[(-13)+0]
 28129  013786  50E1               	movf	fsr1l,w,c
 28130  013788  0FF3               	addlw	-13
 28131  01378A  6ED9               	movwf	fsr2l,c
 28132  01378C  50E2               	movf	fsr1h,w,c
 28133  01378E  6EDA               	movwf	fsr2h,c
 28134  013790  0EFF               	movlw	255
 28135  013792  22DA               	addwfc	fsr2h,f,c
 28136  013794  5030               	movf	(btemp+10)^0,w,c
 28137  013796  26DE               	addwf	postinc2,f,c
 28138  013798  5031               	movf	(btemp+11)^0,w,c
 28139  01379A  22DE               	addwfc	postinc2,f,c
 28140  01379C  0E00               	movlw	0
 28141  01379E  22DE               	addwfc	postinc2,f,c
 28142  0137A0  22DE               	addwfc	postinc2,f,c
 28143                           
 28144                           ;stkvar	_b @ sp[(-13)+-4]
 28145  0137A2  0EF1               	movlw	241
 28146  0137A4  24E1               	addwf	fsr1l,w,c
 28147  0137A6  6ED9               	movwf	fsr2l,c
 28148  0137A8  0EFF               	movlw	255
 28149  0137AA  20E2               	addwfc	fsr1h,w,c
 28150  0137AC  6EDA               	movwf	fsr2h,c
 28151  0137AE  50DF               	movf	indf2,w,c
 28152  0137B0  6E31               	movwf	(btemp+11)^0,c
 28153                           
 28154                           ;stkvar	_a @ sp[(-13)+-8]
 28155  0137B2  0EED               	movlw	237
 28156  0137B4  24E1               	addwf	fsr1l,w,c
 28157  0137B6  6ED9               	movwf	fsr2l,c
 28158  0137B8  0EFF               	movlw	255
 28159  0137BA  20E2               	addwfc	fsr1h,w,c
 28160  0137BC  6EDA               	movwf	fsr2h,c
 28161  0137BE  50DF               	movf	indf2,w,c
 28162  0137C0  0231               	mulwf	(btemp+11)^0,c
 28163                           
 28164                           ;stkvar	_temp @ sp[(-13)+8]
 28165  0137C2  0EFB               	movlw	-5
 28166  0137C4  006F FFCF FFE3     	movff	prodl,plusw1
 28167  0137CA  0EFC               	movlw	-4
 28168  0137CC  006F FFD3 FFE3     	movff	prodh,plusw1
 28169                           
 28170                           ;stkvar	_temp @ sp[(-13)+8]
 28171  0137D2  0EFB               	movlw	-5
 28172  0137D4  006F FF8C  F030    	movff	plusw1,btemp+10
 28173  0137DA  0EFC               	movlw	-4
 28174  0137DC  006F FF8C  F031    	movff	plusw1,btemp+11
 28175  0137E2  5030               	movf	(btemp+10)^0,w,c
 28176  0137E4  6E2A               	movwf	(btemp+4)^0,c
 28177  0137E6  5031               	movf	(btemp+11)^0,w,c
 28178  0137E8  6E2B               	movwf	(btemp+5)^0,c
 28179  0137EA  6A2C               	clrf	(btemp+6)^0,c
 28180  0137EC  6A2D               	clrf	(btemp+7)^0,c
 28181  0137EE  0060  F0B0  F02D   	movff	btemp+6,btemp+7
 28182  0137F4  0060  F0AC  F02C   	movff	btemp+5,btemp+6
 28183  0137FA  0060  F0A8  F02B   	movff	btemp+4,btemp+5
 28184  013800  6A2A               	clrf	(btemp+4)^0,c
 28185                           
 28186                           ;stkvar	_prod @ sp[(-13)+0]
 28187  013802  50E1               	movf	fsr1l,w,c
 28188  013804  0FF3               	addlw	-13
 28189  013806  6ED9               	movwf	fsr2l,c
 28190  013808  50E2               	movf	fsr1h,w,c
 28191  01380A  6EDA               	movwf	fsr2h,c
 28192  01380C  0EFF               	movlw	255
 28193  01380E  22DA               	addwfc	fsr2h,f,c
 28194  013810  502A               	movf	(btemp+4)^0,w,c
 28195  013812  26DE               	addwf	postinc2,f,c
 28196  013814  502B               	movf	(btemp+5)^0,w,c
 28197  013816  22DE               	addwfc	postinc2,f,c
 28198  013818  502C               	movf	(btemp+6)^0,w,c
 28199  01381A  22DE               	addwfc	postinc2,f,c
 28200  01381C  502D               	movf	(btemp+7)^0,w,c
 28201  01381E  22DE               	addwfc	postinc2,f,c
 28202                           
 28203                           ;stkvar	_prod @ sp[(-13)+0]
 28204  013820  50E1               	movf	fsr1l,w,c
 28205  013822  0FF3               	addlw	-13
 28206  013824  6ED9               	movwf	fsr2l,c
 28207  013826  50E2               	movf	fsr1h,w,c
 28208  013828  6EDA               	movwf	fsr2h,c
 28209  01382A  0EFF               	movlw	255
 28210  01382C  22DA               	addwfc	fsr2h,f,c
 28211                           
 28212                           ;stkvar	_grs @ sp[(-13)+4]
 28213  01382E  0EFA               	movlw	250
 28214  013830  24E1               	addwf	fsr1l,w,c
 28215  013832  6EE9               	movwf	fsr0l,c
 28216  013834  0EFF               	movlw	255
 28217  013836  20E2               	addwfc	fsr1h,w,c
 28218  013838  6EEA               	movwf	fsr0h,c
 28219  01383A  50EF               	movf	indf0,w,c
 28220  01383C  26DE               	addwf	postinc2,f,c
 28221  01383E  0E00               	movlw	0
 28222  013840  22DE               	addwfc	postinc2,f,c
 28223  013842  22DE               	addwfc	postinc2,f,c
 28224  013844  22DE               	addwfc	postinc2,f,c
 28225                           
 28226                           ;stkvar	_grs @ sp[(-13)+4]
 28227  013846  50E1               	movf	fsr1l,w,c
 28228  013848  0FF7               	addlw	-9
 28229  01384A  6ED9               	movwf	fsr2l,c
 28230  01384C  50E2               	movf	fsr1h,w,c
 28231  01384E  6EDA               	movwf	fsr2h,c
 28232  013850  0EFF               	movlw	255
 28233  013852  22DA               	addwfc	fsr2h,f,c
 28234  013854  0E08               	movlw	8
 28235  013856                     u6765:
 28236  013856  90D8               	bcf	status,0,c
 28237  013858  36DE               	rlcf	postinc2,f,c
 28238  01385A  36DE               	rlcf	postinc2,f,c
 28239  01385C  36DE               	rlcf	postinc2,f,c
 28240  01385E  36DD               	rlcf	postdec2,f,c
 28241  013860  52DD               	movf	postdec2,f,c
 28242  013862  52DD               	movf	postdec2,f,c
 28243  013864  2EE8               	decfsz	wreg,f,c
 28244  013866  D7F7               	goto	u6765
 28245  013868  0E82               	movlw	130
 28246  01386A  6E30               	movwf	(btemp+10)^0,c
 28247  01386C  0EFF               	movlw	255
 28248  01386E  6E31               	movwf	(btemp+11)^0,c
 28249                           
 28250                           ;stkvar	_bexp @ sp[(-13)+10]
 28251  013870  0EFD               	movlw	-3
 28252  013872  50E3               	movf	plusw1,w,c
 28253  013874  6E2E               	movwf	(btemp+8)^0,c
 28254  013876  6A2F               	clrf	(btemp+9)^0,c
 28255                           
 28256                           ;stkvar	_aexp @ sp[(-13)+11]
 28257  013878  0EFE               	movlw	-2
 28258  01387A  50E3               	movf	plusw1,w,c
 28259  01387C  262E               	addwf	(btemp+8)^0,f,c
 28260  01387E  0E00               	movlw	0
 28261  013880  222F               	addwfc	(btemp+9)^0,f,c
 28262  013882  5030               	movf	(btemp+10)^0,w,c
 28263  013884  262E               	addwf	(btemp+8)^0,f,c
 28264  013886  5031               	movf	(btemp+11)^0,w,c
 28265  013888  222F               	addwfc	(btemp+9)^0,f,c
 28266                           
 28267                           ;stkvar	_temp @ sp[(-13)+8]
 28268  01388A  0EFB               	movlw	-5
 28269  01388C  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 28270  013892  0EFC               	movlw	-4
 28271  013894  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 28272  01389A  D021               	goto	l8315
 28273  01389C                     l8305:
 28274                           
 28275                           ;stkvar	_prod @ sp[(-13)+0]
 28276  01389C  90D8               	bcf	status,0,c
 28277  01389E  0EF3               	movlw	-13
 28278  0138A0  36E3               	rlcf	plusw1,f,c
 28279  0138A2  0EF4               	movlw	-12
 28280  0138A4  36E3               	rlcf	plusw1,f,c
 28281  0138A6  0EF5               	movlw	-11
 28282  0138A8  36E3               	rlcf	plusw1,f,c
 28283  0138AA  0EF6               	movlw	-10
 28284  0138AC  36E3               	rlcf	plusw1,f,c
 28285                           
 28286                           ;stkvar	_grs @ sp[(-13)+4]
 28287  0138AE  0EFA               	movlw	-6
 28288  0138B0  AEE3               	btfss	plusw1,7,c
 28289  0138B2  D002               	goto	l8311
 28290                           
 28291                           ;stkvar	_prod @ sp[(-13)+0]
 28292  0138B4  0EF3               	movlw	-13
 28293  0138B6  80E3               	bsf	plusw1,0,c
 28294  0138B8                     l8311:
 28295                           
 28296                           ;stkvar	_grs @ sp[(-13)+4]
 28297  0138B8  90D8               	bcf	status,0,c
 28298  0138BA  0EF7               	movlw	-9
 28299  0138BC  36E3               	rlcf	plusw1,f,c
 28300  0138BE  0EF8               	movlw	-8
 28301  0138C0  36E3               	rlcf	plusw1,f,c
 28302  0138C2  0EF9               	movlw	-7
 28303  0138C4  36E3               	rlcf	plusw1,f,c
 28304  0138C6  0EFA               	movlw	-6
 28305  0138C8  36E3               	rlcf	plusw1,f,c
 28306                           
 28307                           ;stkvar	_temp @ sp[(-13)+8]
 28308  0138CA  50E1               	movf	fsr1l,w,c
 28309  0138CC  0FFB               	addlw	-5
 28310  0138CE  6ED9               	movwf	fsr2l,c
 28311  0138D0  50E2               	movf	fsr1h,w,c
 28312  0138D2  6EDA               	movwf	fsr2h,c
 28313  0138D4  0EFF               	movlw	255
 28314  0138D6  22DA               	addwfc	fsr2h,f,c
 28315  0138D8  06DE               	decf	postinc2,f,c
 28316  0138DA  0E00               	movlw	0
 28317  0138DC  5ADD               	subwfb	postdec2,f,c
 28318  0138DE                     l8315:
 28319                           
 28320                           ;stkvar	_prod @ sp[(-13)+0]
 28321  0138DE  0EF5               	movlw	-11
 28322  0138E0  AEE3               	btfss	plusw1,7,c
 28323  0138E2  D7DC               	goto	l8305
 28324                           
 28325                           ;stkvar	_aexp @ sp[(-13)+11]
 28326  0138E4  0EFE               	movlw	-2
 28327  0138E6  6AE3               	clrf	plusw1,c
 28328                           
 28329                           ;stkvar	_grs @ sp[(-13)+4]
 28330  0138E8  0EFA               	movlw	-6
 28331  0138EA  AEE3               	btfss	plusw1,7,c
 28332  0138EC  D020               	goto	l8329
 28333                           
 28334                           ;stkvar	_grs @ sp[(-13)+4]
 28335  0138EE  50E1               	movf	fsr1l,w,c
 28336  0138F0  0FF7               	addlw	-9
 28337  0138F2  6ED9               	movwf	fsr2l,c
 28338  0138F4  50E2               	movf	fsr1h,w,c
 28339  0138F6  6EDA               	movwf	fsr2h,c
 28340  0138F8  0EFF               	movlw	255
 28341  0138FA  22DA               	addwfc	fsr2h,f,c
 28342  0138FC  0EFF               	movlw	255
 28343  0138FE  14DE               	andwf	postinc2,w,c
 28344  013900  6E2E               	movwf	(btemp+8)^0,c
 28345  013902  0EFF               	movlw	255
 28346  013904  14DE               	andwf	postinc2,w,c
 28347  013906  6E2F               	movwf	(btemp+9)^0,c
 28348  013908  0EFF               	movlw	255
 28349  01390A  14DE               	andwf	postinc2,w,c
 28350  01390C  6E30               	movwf	(btemp+10)^0,c
 28351  01390E  0E7F               	movlw	127
 28352  013910  14DE               	andwf	postinc2,w,c
 28353  013912  6E31               	movwf	(btemp+11)^0,c
 28354  013914  502E               	movf	(btemp+8)^0,w,c
 28355  013916  102F               	iorwf	(btemp+9)^0,w,c
 28356  013918  1030               	iorwf	(btemp+10)^0,w,c
 28357  01391A  1031               	iorwf	(btemp+11)^0,w,c
 28358  01391C  B4D8               	btfsc	status,2,c
 28359  01391E  D004               	goto	l8325
 28360  013920                     u6800:
 28361                           
 28362                           ;stkvar	_aexp @ sp[(-13)+11]
 28363  013920  0EFE               	movlw	-2
 28364  013922  6AE3               	clrf	plusw1,c
 28365  013924  2AE3               	incf	plusw1,f,c
 28366  013926  D003               	goto	l8329
 28367  013928                     l8325:
 28368                           
 28369                           ;stkvar	_prod @ sp[(-13)+0]
 28370  013928  0EF3               	movlw	-13
 28371  01392A  B0E3               	btfsc	plusw1,0,c
 28372  01392C  D7F9               	goto	u6800
 28373  01392E                     l8329:
 28374                           
 28375                           ;stkvar	_aexp @ sp[(-13)+11]
 28376  01392E  0EFE               	movlw	-2
 28377  013930  50E3               	movf	plusw1,w,c
 28378  013932  B4D8               	btfsc	status,2,c
 28379  013934  D036               	goto	l8339
 28380                           
 28381                           ;stkvar	_prod @ sp[(-13)+0]
 28382  013936  50E1               	movf	fsr1l,w,c
 28383  013938  0FF3               	addlw	-13
 28384  01393A  6ED9               	movwf	fsr2l,c
 28385  01393C  50E2               	movf	fsr1h,w,c
 28386  01393E  6EDA               	movwf	fsr2h,c
 28387  013940  0EFF               	movlw	255
 28388  013942  22DA               	addwfc	fsr2h,f,c
 28389  013944  2ADE               	incf	postinc2,f,c
 28390  013946  0E00               	movlw	0
 28391  013948  22DE               	addwfc	postinc2,f,c
 28392  01394A  22DE               	addwfc	postinc2,f,c
 28393  01394C  22DE               	addwfc	postinc2,f,c
 28394                           
 28395                           ;stkvar	_prod @ sp[(-13)+0]
 28396  01394E  0EF6               	movlw	-10
 28397  013950  A0E3               	btfss	plusw1,0,c
 28398  013952  D027               	goto	l8339
 28399  013954  0E01               	movlw	1
 28400  013956  6E31               	movwf	(btemp+11)^0,c
 28401                           
 28402                           ;stkvar	_prod @ sp[(-13)+0]
 28403  013958  50E1               	movf	fsr1l,w,c
 28404  01395A  0FF3               	addlw	-13
 28405  01395C  6ED9               	movwf	fsr2l,c
 28406  01395E  50E2               	movf	fsr1h,w,c
 28407  013960  6EDA               	movwf	fsr2h,c
 28408  013962  0EFF               	movlw	255
 28409  013964  22DA               	addwfc	fsr2h,f,c
 28410  013966  2831               	incf	(btemp+11)^0,w,c
 28411  013968  52DE               	movf	postinc2,f,c
 28412  01396A  D008               	goto	u6840
 28413  01396C                     u6845:
 28414  01396C  52DE               	movf	postinc2,f,c
 28415  01396E  90D8               	bcf	status,0,c
 28416  013970  BEDC               	btfsc	preinc2,7,c
 28417  013972  80D8               	bsf	status,0,c
 28418  013974  32DD               	rrcf	postdec2,f,c
 28419  013976  32DD               	rrcf	postdec2,f,c
 28420  013978  32DD               	rrcf	postdec2,f,c
 28421  01397A  32DE               	rrcf	postinc2,f,c
 28422  01397C                     u6840:
 28423  01397C  2EE8               	decfsz	wreg,f,c
 28424  01397E  D7F6               	goto	u6845
 28425                           
 28426                           ;stkvar	_temp @ sp[(-13)+8]
 28427  013980  0EFB               	movlw	-5
 28428  013982  50E3               	movf	plusw1,w,c
 28429  013984  0F01               	addlw	1
 28430  013986  6E26               	movwf	btemp^0,c
 28431  013988  0EFB               	movlw	-5
 28432  01398A  0060  F09B  FFE3   	movff	btemp,plusw1
 28433  013990  6A26               	clrf	btemp^0,c
 28434  013992  0EFC               	movlw	-4
 28435  013994  50E3               	movf	plusw1,w,c
 28436  013996  2026               	addwfc	btemp^0,w,c
 28437  013998  6E26               	movwf	btemp^0,c
 28438  01399A  0EFC               	movlw	-4
 28439  01399C  0060  F09B  FFE3   	movff	btemp,plusw1
 28440  0139A2                     l8339:
 28441                           
 28442                           ;stkvar	_temp @ sp[(-13)+8]
 28443  0139A2  0EFC               	movlw	-4
 28444  0139A4  BEE3               	btfsc	plusw1,7,c
 28445  0139A6  D020               	goto	l8343
 28446  0139A8  0EFC               	movlw	-4
 28447  0139AA  50E3               	movf	plusw1,w,c
 28448  0139AC  E104               	bnz	u6850
 28449  0139AE  0EFB               	movlw	-5
 28450  0139B0  28E3               	incf	plusw1,w,c
 28451  0139B2  A0D8               	btfss	status,0,c
 28452  0139B4  D019               	goto	l8343
 28453  0139B6                     u6850:
 28454  0139B6  0E00               	movlw	0
 28455  0139B8  6E2E               	movwf	(btemp+8)^0,c
 28456  0139BA  0E00               	movlw	0
 28457  0139BC  6E2F               	movwf	(btemp+9)^0,c
 28458  0139BE  0E80               	movlw	128
 28459  0139C0  6E30               	movwf	(btemp+10)^0,c
 28460  0139C2  0E7F               	movlw	127
 28461  0139C4  6E31               	movwf	(btemp+11)^0,c
 28462                           
 28463                           ;stkvar	_prod @ sp[(-13)+0]
 28464  0139C6  0EF3               	movlw	-13
 28465  0139C8  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 28466  0139CE  0EF4               	movlw	-12
 28467  0139D0  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 28468  0139D6  0EF5               	movlw	-11
 28469  0139D8  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 28470  0139DE  0EF6               	movlw	-10
 28471  0139E0  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 28472  0139E6  D044               	goto	l8359
 28473  0139E8                     l8343:
 28474                           
 28475                           ;stkvar	_temp @ sp[(-13)+8]
 28476  0139E8  0EFC               	movlw	-4
 28477  0139EA  BEE3               	btfsc	plusw1,7,c
 28478  0139EC  D007               	goto	u6860
 28479  0139EE  0EFC               	movlw	-4
 28480  0139F0  50E3               	movf	plusw1,w,c
 28481  0139F2  E10F               	bnz	l8349
 28482  0139F4  0EFB               	movlw	-5
 28483  0139F6  04E3               	decf	plusw1,w,c
 28484  0139F8  B0D8               	btfsc	status,0,c
 28485  0139FA  D00B               	goto	l8349
 28486  0139FC                     u6860:
 28487                           
 28488                           ;stkvar	_prod @ sp[(-13)+0]
 28489  0139FC  0EF3               	movlw	-13
 28490  0139FE  6AE3               	clrf	plusw1,c
 28491  013A00  0EF4               	movlw	-12
 28492  013A02  6AE3               	clrf	plusw1,c
 28493  013A04  0EF5               	movlw	-11
 28494  013A06  6AE3               	clrf	plusw1,c
 28495  013A08  0EF6               	movlw	-10
 28496  013A0A  6AE3               	clrf	plusw1,c
 28497                           
 28498                           ;stkvar	_sign @ sp[(-13)+12]
 28499  013A0C  0EFF               	movlw	-1
 28500  013A0E  6AE3               	clrf	plusw1,c
 28501  013A10  D02F               	goto	l8359
 28502  013A12                     l8349:
 28503                           
 28504                           ;stkvar	_temp @ sp[(-13)+8]
 28505                           ;stkvar	_bexp @ sp[(-13)+10]
 28506  013A12  0EFB               	movlw	-5
 28507  013A14  006F FF8C  F026    	movff	plusw1,btemp
 28508  013A1A  0EFD               	movlw	-3
 28509  013A1C  0060  F09B  FFE3   	movff	btemp,plusw1
 28510                           
 28511                           ;stkvar	_prod @ sp[(-13)+0]
 28512  013A22  50E1               	movf	fsr1l,w,c
 28513  013A24  0FF3               	addlw	-13
 28514  013A26  6ED9               	movwf	fsr2l,c
 28515  013A28  50E2               	movf	fsr1h,w,c
 28516  013A2A  6EDA               	movwf	fsr2h,c
 28517  013A2C  0EFF               	movlw	255
 28518  013A2E  22DA               	addwfc	fsr2h,f,c
 28519  013A30  0EFF               	movlw	255
 28520  013A32  16DE               	andwf	postinc2,f,c
 28521  013A34  0EFF               	movlw	255
 28522  013A36  16DE               	andwf	postinc2,f,c
 28523  013A38  0E7F               	movlw	127
 28524  013A3A  16DE               	andwf	postinc2,f,c
 28525  013A3C  0E00               	movlw	0
 28526  013A3E  16DE               	andwf	postinc2,f,c
 28527                           
 28528                           ;stkvar	_bexp @ sp[(-13)+10]
 28529  013A40  0EFD               	movlw	-3
 28530  013A42  A0E3               	btfss	plusw1,0,c
 28531  013A44  D008               	goto	l8357
 28532                           
 28533                           ;stkvar	_prod @ sp[(-13)+0]
 28534  013A46  0EF5               	movlw	245
 28535  013A48  24E1               	addwf	fsr1l,w,c
 28536  013A4A  6ED9               	movwf	fsr2l,c
 28537  013A4C  0EFF               	movlw	255
 28538  013A4E  20E2               	addwfc	fsr1h,w,c
 28539  013A50  6EDA               	movwf	fsr2h,c
 28540  013A52  0E00               	movlw	0
 28541  013A54  8EDB               	bsf	plusw2,7,c
 28542  013A56                     l8357:
 28543                           
 28544                           ;stkvar	_prod @ sp[(-13)+0]
 28545  013A56  0EF6               	movlw	246
 28546  013A58  24E1               	addwf	fsr1l,w,c
 28547  013A5A  6ED9               	movwf	fsr2l,c
 28548  013A5C  0EFF               	movlw	255
 28549  013A5E  20E2               	addwfc	fsr1h,w,c
 28550  013A60  6EDA               	movwf	fsr2h,c
 28551                           
 28552                           ;stkvar	_bexp @ sp[(-13)+10]
 28553  013A62  0EFD               	movlw	-3
 28554  013A64  006F FF8C  F031    	movff	plusw1,btemp+11
 28555  013A6A  90D8               	bcf	status,0,c
 28556  013A6C  3031               	rrcf	(btemp+11)^0,w,c
 28557  013A6E  6EDF               	movwf	indf2,c
 28558  013A70                     l8359:
 28559                           
 28560                           ;stkvar	_sign @ sp[(-13)+12]
 28561  013A70  0EFF               	movlw	-1
 28562  013A72  006F FF8C  F031    	movff	plusw1,btemp+11
 28563                           
 28564                           ;stkvar	_prod @ sp[(-13)+0]
 28565  013A78  0EF6               	movlw	246
 28566  013A7A  24E1               	addwf	fsr1l,w,c
 28567  013A7C  6ED9               	movwf	fsr2l,c
 28568  013A7E  0EFF               	movlw	255
 28569  013A80  20E2               	addwfc	fsr1h,w,c
 28570  013A82  6EDA               	movwf	fsr2h,c
 28571  013A84  5031               	movf	(btemp+11)^0,w,c
 28572  013A86  12DF               	iorwf	indf2,f,c
 28573                           
 28574                           ;stkvar	_prod @ sp[(-13)+0]
 28575  013A88  0EF3               	movlw	-13
 28576  013A8A  006F FF8C  F026    	movff	plusw1,btemp
 28577  013A90  0EF4               	movlw	-12
 28578  013A92  006F FF8C  F027    	movff	plusw1,btemp+1
 28579  013A98  0EF5               	movlw	-11
 28580  013A9A  006F FF8C  F028    	movff	plusw1,btemp+2
 28581  013AA0  0EF6               	movlw	-10
 28582  013AA2  006F FF8C  F029    	movff	plusw1,btemp+3
 28583  013AA8                     l3014:
 28584                           
 28585                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 28586  013AA8  0EEB               	movlw	235
 28587  013AAA  26E1               	addwf	fsr1l,f,c
 28588  013AAC  0EFF               	movlw	255
 28589  013AAE  22E2               	addwfc	fsr1h,f,c
 28590  013AB0  0012               	return		;funcret
 28591  013AB2                     __end_of___flmul:
 28592                           	opt callstack 0
 28593                           
 28594 ;; *************** function _SYSTEM_Initialize *****************
 28595 ;; Defined at:
 28596 ;;		line 50 in file "mcc_generated_files/mcc.c"
 28597 ;; Parameters:    Size  Location     Type
 28598 ;;		None
 28599 ;; Auto vars:     Size  Location     Type
 28600 ;;		None
 28601 ;; Return value:  Size  Location     Type
 28602 ;;                  1  [STACK] void 
 28603 ;; Registers used:
 28604 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 28605 ;; Tracked objects:
 28606 ;;		On entry : 0/0
 28607 ;;		On exit  : 3F/3C
 28608 ;;		Unchanged: 0/0
 28609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28614 ;;Total ram usage:        0 bytes
 28615 ;; Hardware stack levels used:    1
 28616 ;; Hardware stack levels required when called:   17
 28617 ;; This function calls:
 28618 ;;		_ADCC_Initialize
 28619 ;;		_CLKREF_Initialize
 28620 ;;		_DMA1_Initialize
 28621 ;;		_DMA2_Initialize
 28622 ;;		_EXT_INT_Initialize
 28623 ;;		_FVR_Initialize
 28624 ;;		_INTERRUPT_Initialize
 28625 ;;		_OSCILLATOR_Initialize
 28626 ;;		_PIN_MANAGER_Initialize
 28627 ;;		_PMD_Initialize
 28628 ;;		_PWM8_Initialize
 28629 ;;		_SPI1_Initialize
 28630 ;;		_TMR2_Initialize
 28631 ;;		_TMR3_Initialize
 28632 ;;		_TMR5_Initialize
 28633 ;;		_TMR6_Initialize
 28634 ;;		_UART1_Initialize
 28635 ;;		_UART2_Initialize
 28636 ;; This function is called by:
 28637 ;;		_main
 28638 ;; This function uses a reentrant model
 28639 ;;
 28640                           
 28641                           	psect	text107
 28642  01ABAE                     __ptext107:
 28643                           	opt callstack 0
 28644  01ABAE                     _SYSTEM_Initialize:
 28645                           	opt callstack 13
 28646                           
 28647                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 28648                           
 28649                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28650                           ;incstack = 0
 28651  01ABAE  ECE5  F0D3         	call	_INTERRUPT_Initialize	;wreg free
 28652                           
 28653                           ; BSR set to: 57
 28654                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 28655  01ABB2  EC04  F0DC         	call	_PMD_Initialize	;wreg free
 28656                           
 28657                           ; BSR set to: 57
 28658                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 28659  01ABB6  EC1A  F0D1         	call	_PIN_MANAGER_Initialize	;wreg free
 28660                           
 28661                           ; BSR set to: 58
 28662                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 28663  01ABBA  ECF9  F0DB         	call	_OSCILLATOR_Initialize	;wreg free
 28664                           
 28665                           ; BSR set to: 57
 28666                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 28667  01ABBE  EC87  F0DC         	call	_FVR_Initialize	;wreg free
 28668                           
 28669                           ; BSR set to: 62
 28670                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 28671  01ABC2  EC7A  F0D3         	call	_ADCC_Initialize	;wreg free
 28672                           
 28673                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 28674  01ABC6  ECD7  F0DB         	call	_TMR2_Initialize	;wreg free
 28675                           
 28676                           ; BSR set to: 57
 28677                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 28678  01ABCA  ECEE  F0DB         	call	_PWM8_Initialize	;wreg free
 28679                           
 28680                           ; BSR set to: 63
 28681                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 28682  01ABCE  EC56  F0D8         	call	_EXT_INT_Initialize	;wreg free
 28683                           
 28684                           ; BSR set to: 57
 28685                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 28686  01ABD2  EC42  F0D9         	call	_TMR6_Initialize	;wreg free
 28687                           
 28688                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 28689  01ABD6  ECAC  F0D6         	call	_TMR3_Initialize	;wreg free
 28690                           
 28691                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 28692  01ABDA  EC89  F0D6         	call	_TMR5_Initialize	;wreg free
 28693                           
 28694                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 28695  01ABDE  EC66  F0D6         	call	_UART1_Initialize	;wreg free
 28696                           
 28697                           ; BSR set to: 57
 28698                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 28699  01ABE2  ECAC  F0D4         	call	_UART2_Initialize	;wreg free
 28700                           
 28701                           ; BSR set to: 57
 28702                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 28703  01ABE6  ECE3  F0DB         	call	_SPI1_Initialize	;wreg free
 28704                           
 28705                           ; BSR set to: 61
 28706                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 28707  01ABEA  EC08  F0D5         	call	_DMA2_Initialize	;wreg free
 28708                           
 28709                           ; BSR set to: 59
 28710                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 28711  01ABEE  EC45  F0D3         	call	_DMA1_Initialize	;wreg free
 28712                           
 28713                           ; BSR set to: 59
 28714                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 28715  01ABF2  EC5B  F0DC         	call	_CLKREF_Initialize	;wreg free
 28716                           
 28717                           ; BSR set to: 60
 28718                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 28719  01ABF6  0012               	return		;funcret
 28720  01ABF8                     __end_of_SYSTEM_Initialize:
 28721                           	opt callstack 0
 28722                           
 28723 ;; *************** function _UART2_Initialize *****************
 28724 ;; Defined at:
 28725 ;;		line 78 in file "mcc_generated_files/uart2.c"
 28726 ;; Parameters:    Size  Location     Type
 28727 ;;		None
 28728 ;; Auto vars:     Size  Location     Type
 28729 ;;		None
 28730 ;; Return value:  Size  Location     Type
 28731 ;;                  1  [STACK] void 
 28732 ;; Registers used:
 28733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 28734 ;; Tracked objects:
 28735 ;;		On entry : 3F/39
 28736 ;;		On exit  : 3F/39
 28737 ;;		Unchanged: 0/0
 28738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28743 ;;Total ram usage:        0 bytes
 28744 ;; Hardware stack levels used:    1
 28745 ;; Hardware stack levels required when called:   16
 28746 ;; This function calls:
 28747 ;;		_UART2_SetRxInterruptHandler
 28748 ;;		_UART2_SetTxInterruptHandler
 28749 ;; This function is called by:
 28750 ;;		_SYSTEM_Initialize
 28751 ;; This function uses a reentrant model
 28752 ;;
 28753                           
 28754                           	psect	text108
 28755  01A958                     __ptext108:
 28756                           	opt callstack 0
 28757  01A958                     _UART2_Initialize:
 28758                           	opt callstack 13
 28759                           
 28760                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 28761                           
 28762                           ; BSR set to: 60
 28763                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28764                           ;incstack = 0
 28765  01A958  0139               	movlb	57	; () banked
 28766  01A95A  9596               	bcf	150,2,b	;volatile
 28767                           
 28768                           ; BSR set to: 57
 28769                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 28770  01A95C  0E28               	movlw	low _UART2_Receive_ISR
 28771  01A95E  6EE6               	movwf	postinc1,c
 28772  01A960  0EB7               	movlw	high _UART2_Receive_ISR
 28773  01A962  6EE6               	movwf	postinc1,c
 28774  01A964  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 28775  01A966  6EE6               	movwf	postinc1,c
 28776  01A968  ECBB  F0D9         	call	_UART2_SetRxInterruptHandler	;wreg free
 28777                           
 28778                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 28779  01A96C  0139               	movlb	57	; () banked
 28780  01A96E  9796               	bcf	150,3,b	;volatile
 28781                           
 28782                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 28783  01A970  0E58               	movlw	low _UART2_Transmit_ISR
 28784  01A972  6EE6               	movwf	postinc1,c
 28785  01A974  0EB2               	movlw	high _UART2_Transmit_ISR
 28786  01A976  6EE6               	movwf	postinc1,c
 28787  01A978  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 28788  01A97A  6EE6               	movwf	postinc1,c
 28789  01A97C  ECA7  F0D9         	call	_UART2_SetTxInterruptHandler	;wreg free
 28790                           
 28791                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 28792  01A980  013D               	movlb	61	; () banked
 28793  01A982  6BD4               	clrf	212,b	;volatile
 28794                           
 28795                           ; BSR set to: 61
 28796                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 28797  01A984  6BD6               	clrf	214,b	;volatile
 28798                           
 28799                           ; BSR set to: 61
 28800                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 28801  01A986  6BD8               	clrf	216,b	;volatile
 28802                           
 28803                           ; BSR set to: 61
 28804                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 28805  01A988  0EB0               	movlw	176
 28806  01A98A  6FDA               	movwf	218,b	;volatile
 28807                           
 28808                           ; BSR set to: 61
 28809                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 28810  01A98C  0E80               	movlw	128
 28811  01A98E  6FDB               	movwf	219,b	;volatile
 28812                           
 28813                           ; BSR set to: 61
 28814                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 28815  01A990  6BDC               	clrf	220,b	;volatile
 28816                           
 28817                           ; BSR set to: 61
 28818                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 28819  01A992  0E82               	movlw	130
 28820  01A994  6FDD               	movwf	221,b	;volatile
 28821                           
 28822                           ; BSR set to: 61
 28823                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 28824  01A996  0E06               	movlw	6
 28825  01A998  6FDE               	movwf	222,b	;volatile
 28826                           
 28827                           ; BSR set to: 61
 28828                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 28829  01A99A  6BDF               	clrf	223,b	;volatile
 28830                           
 28831                           ; BSR set to: 61
 28832                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 28833  01A99C  6BE0               	clrf	224,b	;volatile
 28834                           
 28835                           ; BSR set to: 61
 28836                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 28837  01A99E  6BE1               	clrf	225,b	;volatile
 28838                           
 28839                           ; BSR set to: 61
 28840                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 28841  01A9A0  6BE2               	clrf	226,b	;volatile
 28842                           
 28843                           ; BSR set to: 61
 28844                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 28845  01A9A2  6A22               	clrf	_uart2TxHead^0,c	;volatile
 28846                           
 28847                           ; BSR set to: 61
 28848                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 28849  01A9A4  6A21               	clrf	_uart2TxTail^0,c	;volatile
 28850                           
 28851                           ; BSR set to: 61
 28852                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 28853  01A9A6  0E40               	movlw	64
 28854  01A9A8  6E20               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 28855                           
 28856                           ; BSR set to: 61
 28857                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 28858  01A9AA  6A1F               	clrf	_uart2RxHead^0,c	;volatile
 28859                           
 28860                           ; BSR set to: 61
 28861                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 28862  01A9AC  6A1E               	clrf	_uart2RxTail^0,c	;volatile
 28863                           
 28864                           ; BSR set to: 61
 28865                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 28866  01A9AE  6A1D               	clrf	_uart2RxCount^0,c	;volatile
 28867                           
 28868                           ; BSR set to: 61
 28869                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 28870  01A9B0  0139               	movlb	57	; () banked
 28871  01A9B2  8596               	bsf	150,2,b	;volatile
 28872                           
 28873                           ; BSR set to: 57
 28874                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 28875  01A9B4  0012               	return		;funcret
 28876  01A9B6                     __end_of_UART2_Initialize:
 28877                           	opt callstack 0
 28878                           
 28879 ;; *************** function _UART2_SetTxInterruptHandler *****************
 28880 ;; Defined at:
 28881 ;;		line 252 in file "mcc_generated_files/uart2.c"
 28882 ;; Parameters:    Size  Location     Type
 28883 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28884 ;;		 -> UART2_Transmit_ISR(1), 
 28885 ;; Auto vars:     Size  Location     Type
 28886 ;;		None
 28887 ;; Return value:  Size  Location     Type
 28888 ;;                  1  [STACK] void 
 28889 ;; Registers used:
 28890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28891 ;; Tracked objects:
 28892 ;;		On entry : 3F/39
 28893 ;;		On exit  : 0/0
 28894 ;;		Unchanged: 0/0
 28895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28900 ;;Total ram usage:        0 bytes
 28901 ;; Hardware stack levels used:    1
 28902 ;; Hardware stack levels required when called:   15
 28903 ;; This function calls:
 28904 ;;		Nothing
 28905 ;; This function is called by:
 28906 ;;		_UART2_Initialize
 28907 ;; This function uses a reentrant model
 28908 ;;
 28909                           
 28910                           	psect	text109
 28911  01B34E                     __ptext109:
 28912                           	opt callstack 0
 28913  01B34E                     _UART2_SetTxInterruptHandler:
 28914                           	opt callstack 13
 28915                           
 28916                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 28917                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28918                           
 28919                           ; BSR set to: 57
 28920                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28921                           ;incstack = 0
 28922  01B34E  50E1               	movf	fsr1l,w,c
 28923  01B350  0FFD               	addlw	-3
 28924  01B352  6ED9               	movwf	fsr2l,c
 28925  01B354  50E2               	movf	fsr1h,w,c
 28926  01B356  6EDA               	movwf	fsr2h,c
 28927  01B358  0EFF               	movlw	255
 28928  01B35A  22DA               	addwfc	fsr2h,f,c
 28929  01B35C  006F FF78  F0AC    	movff	postinc2,_UART2_TxInterruptHandler
 28930  01B362  006F FF78  F0AD    	movff	postinc2,_UART2_TxInterruptHandler+1
 28931  01B368  006F FF74  F0AE    	movff	postdec2,_UART2_TxInterruptHandler+2
 28932                           
 28933                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 28934  01B36E  52E5               	movf	postdec1,f,c
 28935  01B370  52E5               	movf	postdec1,f,c
 28936  01B372  52E5               	movf	postdec1,f,c
 28937  01B374  0012               	return		;funcret
 28938  01B376                     __end_of_UART2_SetTxInterruptHandler:
 28939                           	opt callstack 0
 28940                           
 28941 ;; *************** function _UART2_SetRxInterruptHandler *****************
 28942 ;; Defined at:
 28943 ;;		line 248 in file "mcc_generated_files/uart2.c"
 28944 ;; Parameters:    Size  Location     Type
 28945 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28946 ;;		 -> UART2_Receive_ISR(1), 
 28947 ;; Auto vars:     Size  Location     Type
 28948 ;;		None
 28949 ;; Return value:  Size  Location     Type
 28950 ;;                  1  [STACK] void 
 28951 ;; Registers used:
 28952 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28953 ;; Tracked objects:
 28954 ;;		On entry : 3F/39
 28955 ;;		On exit  : 0/0
 28956 ;;		Unchanged: 0/0
 28957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28962 ;;Total ram usage:        0 bytes
 28963 ;; Hardware stack levels used:    1
 28964 ;; Hardware stack levels required when called:   15
 28965 ;; This function calls:
 28966 ;;		Nothing
 28967 ;; This function is called by:
 28968 ;;		_UART2_Initialize
 28969 ;; This function uses a reentrant model
 28970 ;;
 28971                           
 28972                           	psect	text110
 28973  01B376                     __ptext110:
 28974                           	opt callstack 0
 28975  01B376                     _UART2_SetRxInterruptHandler:
 28976                           	opt callstack 13
 28977                           
 28978                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 28979                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28980                           
 28981                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28982                           ;incstack = 0
 28983  01B376  50E1               	movf	fsr1l,w,c
 28984  01B378  0FFD               	addlw	-3
 28985  01B37A  6ED9               	movwf	fsr2l,c
 28986  01B37C  50E2               	movf	fsr1h,w,c
 28987  01B37E  6EDA               	movwf	fsr2h,c
 28988  01B380  0EFF               	movlw	255
 28989  01B382  22DA               	addwfc	fsr2h,f,c
 28990  01B384  006F FF78  F001    	movff	postinc2,_UART2_RxInterruptHandler
 28991  01B38A  006F FF78  F002    	movff	postinc2,_UART2_RxInterruptHandler+1
 28992  01B390  006F FF74  F003    	movff	postdec2,_UART2_RxInterruptHandler+2
 28993                           
 28994                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 28995  01B396  52E5               	movf	postdec1,f,c
 28996  01B398  52E5               	movf	postdec1,f,c
 28997  01B39A  52E5               	movf	postdec1,f,c
 28998  01B39C  0012               	return		;funcret
 28999  01B39E                     __end_of_UART2_SetRxInterruptHandler:
 29000                           	opt callstack 0
 29001                           
 29002 ;; *************** function _UART1_Initialize *****************
 29003 ;; Defined at:
 29004 ;;		line 75 in file "mcc_generated_files/uart1.c"
 29005 ;; Parameters:    Size  Location     Type
 29006 ;;		None
 29007 ;; Auto vars:     Size  Location     Type
 29008 ;;		None
 29009 ;; Return value:  Size  Location     Type
 29010 ;;                  1  [STACK] void 
 29011 ;; Registers used:
 29012 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 29013 ;; Tracked objects:
 29014 ;;		On entry : 0/39
 29015 ;;		On exit  : 3F/39
 29016 ;;		Unchanged: 0/0
 29017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29022 ;;Total ram usage:        0 bytes
 29023 ;; Hardware stack levels used:    1
 29024 ;; Hardware stack levels required when called:   16
 29025 ;; This function calls:
 29026 ;;		_UART1_SetRxInterruptHandler
 29027 ;; This function is called by:
 29028 ;;		_SYSTEM_Initialize
 29029 ;; This function uses a reentrant model
 29030 ;;
 29031                           
 29032                           	psect	text111
 29033  01ACCC                     __ptext111:
 29034                           	opt callstack 0
 29035  01ACCC                     _UART1_Initialize:
 29036                           	opt callstack 13
 29037                           
 29038                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 29039                           
 29040                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29041                           ;incstack = 0
 29042  01ACCC  0139               	movlb	57	; () banked
 29043  01ACCE  9793               	bcf	147,3,b	;volatile
 29044                           
 29045                           ; BSR set to: 57
 29046                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 29047  01ACD0  0E90               	movlw	low _UART1_Receive_ISR
 29048  01ACD2  6EE6               	movwf	postinc1,c
 29049  01ACD4  0EB6               	movlw	high _UART1_Receive_ISR
 29050  01ACD6  6EE6               	movwf	postinc1,c
 29051  01ACD8  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 29052  01ACDA  6EE6               	movwf	postinc1,c
 29053  01ACDC  ECCF  F0D9         	call	_UART1_SetRxInterruptHandler	;wreg free
 29054                           
 29055                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 29056  01ACE0  013D               	movlb	61	; () banked
 29057  01ACE2  6BEC               	clrf	236,b	;volatile
 29058                           
 29059                           ; BSR set to: 61
 29060                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 29061  01ACE4  6BED               	clrf	237,b	;volatile
 29062                           
 29063                           ; BSR set to: 61
 29064                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 29065  01ACE6  6BEE               	clrf	238,b	;volatile
 29066                           
 29067                           ; BSR set to: 61
 29068                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 29069  01ACE8  6BEF               	clrf	239,b	;volatile
 29070                           
 29071                           ; BSR set to: 61
 29072                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 29073  01ACEA  6BF0               	clrf	240,b	;volatile
 29074                           
 29075                           ; BSR set to: 61
 29076                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 29077  01ACEC  6BF1               	clrf	241,b	;volatile
 29078                           
 29079                           ; BSR set to: 61
 29080                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 29081  01ACEE  0EB0               	movlw	176
 29082  01ACF0  6FF2               	movwf	242,b	;volatile
 29083                           
 29084                           ; BSR set to: 61
 29085                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 29086  01ACF2  0E80               	movlw	128
 29087  01ACF4  6FF3               	movwf	243,b	;volatile
 29088                           
 29089                           ; BSR set to: 61
 29090                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 29091  01ACF6  6BF4               	clrf	244,b	;volatile
 29092                           
 29093                           ; BSR set to: 61
 29094                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 29095  01ACF8  0E8A               	movlw	138
 29096  01ACFA  6FF5               	movwf	245,b	;volatile
 29097                           
 29098                           ; BSR set to: 61
 29099                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 29100  01ACFC  6BF6               	clrf	246,b	;volatile
 29101                           
 29102                           ; BSR set to: 61
 29103                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 29104  01ACFE  6BF7               	clrf	247,b	;volatile
 29105                           
 29106                           ; BSR set to: 61
 29107                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 29108  01AD00  6BF8               	clrf	248,b	;volatile
 29109                           
 29110                           ; BSR set to: 61
 29111                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 29112  01AD02  6BF9               	clrf	249,b	;volatile
 29113                           
 29114                           ; BSR set to: 61
 29115                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 29116  01AD04  6BFA               	clrf	250,b	;volatile
 29117                           
 29118                           ; BSR set to: 61
 29119                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 29120  01AD06  6A25               	clrf	_uart1RxHead^0,c	;volatile
 29121                           
 29122                           ; BSR set to: 61
 29123                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 29124  01AD08  6A24               	clrf	_uart1RxTail^0,c	;volatile
 29125                           
 29126                           ; BSR set to: 61
 29127                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 29128  01AD0A  6A23               	clrf	_uart1RxCount^0,c	;volatile
 29129                           
 29130                           ; BSR set to: 61
 29131                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 29132  01AD0C  0139               	movlb	57	; () banked
 29133  01AD0E  8793               	bsf	147,3,b	;volatile
 29134                           
 29135                           ; BSR set to: 57
 29136                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 29137  01AD10  0012               	return		;funcret
 29138  01AD12                     __end_of_UART1_Initialize:
 29139                           	opt callstack 0
 29140                           
 29141 ;; *************** function _UART1_SetRxInterruptHandler *****************
 29142 ;; Defined at:
 29143 ;;		line 207 in file "mcc_generated_files/uart1.c"
 29144 ;; Parameters:    Size  Location     Type
 29145 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29146 ;;		 -> UART1_Receive_ISR(1), 
 29147 ;; Auto vars:     Size  Location     Type
 29148 ;;		None
 29149 ;; Return value:  Size  Location     Type
 29150 ;;                  1  [STACK] void 
 29151 ;; Registers used:
 29152 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29153 ;; Tracked objects:
 29154 ;;		On entry : 3F/39
 29155 ;;		On exit  : 0/0
 29156 ;;		Unchanged: 0/0
 29157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29162 ;;Total ram usage:        0 bytes
 29163 ;; Hardware stack levels used:    1
 29164 ;; Hardware stack levels required when called:   15
 29165 ;; This function calls:
 29166 ;;		Nothing
 29167 ;; This function is called by:
 29168 ;;		_UART1_Initialize
 29169 ;; This function uses a reentrant model
 29170 ;;
 29171                           
 29172                           	psect	text112
 29173  01B39E                     __ptext112:
 29174                           	opt callstack 0
 29175  01B39E                     _UART1_SetRxInterruptHandler:
 29176                           	opt callstack 13
 29177                           
 29178                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 29179                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29180                           
 29181                           ; BSR set to: 57
 29182                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29183                           ;incstack = 0
 29184  01B39E  50E1               	movf	fsr1l,w,c
 29185  01B3A0  0FFD               	addlw	-3
 29186  01B3A2  6ED9               	movwf	fsr2l,c
 29187  01B3A4  50E2               	movf	fsr1h,w,c
 29188  01B3A6  6EDA               	movwf	fsr2h,c
 29189  01B3A8  0EFF               	movlw	255
 29190  01B3AA  22DA               	addwfc	fsr2h,f,c
 29191  01B3AC  006F FF78  F0A9    	movff	postinc2,_UART1_RxInterruptHandler
 29192  01B3B2  006F FF78  F0AA    	movff	postinc2,_UART1_RxInterruptHandler+1
 29193  01B3B8  006F FF74  F0AB    	movff	postdec2,_UART1_RxInterruptHandler+2
 29194                           
 29195                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 29196  01B3BE  52E5               	movf	postdec1,f,c
 29197  01B3C0  52E5               	movf	postdec1,f,c
 29198  01B3C2  52E5               	movf	postdec1,f,c
 29199  01B3C4  0012               	return		;funcret
 29200  01B3C6                     __end_of_UART1_SetRxInterruptHandler:
 29201                           	opt callstack 0
 29202                           
 29203 ;; *************** function _TMR6_Initialize *****************
 29204 ;; Defined at:
 29205 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 29206 ;; Parameters:    Size  Location     Type
 29207 ;;		None
 29208 ;; Auto vars:     Size  Location     Type
 29209 ;;		None
 29210 ;; Return value:  Size  Location     Type
 29211 ;;                  1  [STACK] void 
 29212 ;; Registers used:
 29213 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 29214 ;; Tracked objects:
 29215 ;;		On entry : 3F/39
 29216 ;;		On exit  : 0/0
 29217 ;;		Unchanged: 0/0
 29218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29223 ;;Total ram usage:        0 bytes
 29224 ;; Hardware stack levels used:    1
 29225 ;; Hardware stack levels required when called:   16
 29226 ;; This function calls:
 29227 ;;		_TMR6_SetInterruptHandler
 29228 ;; This function is called by:
 29229 ;;		_SYSTEM_Initialize
 29230 ;; This function uses a reentrant model
 29231 ;;
 29232                           
 29233                           	psect	text113
 29234  01B284                     __ptext113:
 29235                           	opt callstack 0
 29236  01B284                     _TMR6_Initialize:
 29237                           	opt callstack 13
 29238                           
 29239                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 29240                           
 29241                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29242                           ;incstack = 0
 29243  01B284  0E01               	movlw	1
 29244  01B286  6E96               	movwf	150,c	;volatile
 29245                           
 29246                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 29247  01B288  6A95               	clrf	149,c	;volatile
 29248                           
 29249                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 29250  01B28A  6A97               	clrf	151,c	;volatile
 29251                           
 29252                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 29253  01B28C  0E7C               	movlw	124
 29254  01B28E  6E93               	movwf	147,c	;volatile
 29255                           
 29256                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 29257  01B290  6A92               	clrf	146,c	;volatile
 29258                           
 29259                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 29260  01B292  0139               	movlb	57	; () banked
 29261  01B294  91A9               	bcf	169,0,b	;volatile
 29262                           
 29263                           ; BSR set to: 57
 29264                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 29265  01B296  8199               	bsf	153,0,b	;volatile
 29266                           
 29267                           ; BSR set to: 57
 29268                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 29269  01B298  0E60               	movlw	low _TMR6_DefaultInterruptHandler
 29270  01B29A  6EE6               	movwf	postinc1,c
 29271  01B29C  0EAB               	movlw	high _TMR6_DefaultInterruptHandler
 29272  01B29E  6EE6               	movwf	postinc1,c
 29273  01B2A0  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 29274  01B2A2  6EE6               	movwf	postinc1,c
 29275  01B2A4  ECE3  F0D9         	call	_TMR6_SetInterruptHandler	;wreg free
 29276                           
 29277                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 29278  01B2A8  0EE0               	movlw	224
 29279  01B2AA  6E94               	movwf	148,c	;volatile
 29280                           
 29281                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29282  01B2AC  0012               	return		;funcret
 29283  01B2AE                     __end_of_TMR6_Initialize:
 29284                           	opt callstack 0
 29285                           
 29286 ;; *************** function _TMR6_SetInterruptHandler *****************
 29287 ;; Defined at:
 29288 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 29289 ;; Parameters:    Size  Location     Type
 29290 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29291 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 29292 ;; Auto vars:     Size  Location     Type
 29293 ;;		None
 29294 ;; Return value:  Size  Location     Type
 29295 ;;                  1  [STACK] void 
 29296 ;; Registers used:
 29297 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29298 ;; Tracked objects:
 29299 ;;		On entry : 3F/39
 29300 ;;		On exit  : 0/0
 29301 ;;		Unchanged: 0/0
 29302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29307 ;;Total ram usage:        0 bytes
 29308 ;; Hardware stack levels used:    1
 29309 ;; Hardware stack levels required when called:   15
 29310 ;; This function calls:
 29311 ;;		Nothing
 29312 ;; This function is called by:
 29313 ;;		_TMR6_Initialize
 29314 ;; This function uses a reentrant model
 29315 ;;
 29316                           
 29317                           	psect	text114
 29318  01B3C6                     __ptext114:
 29319                           	opt callstack 0
 29320  01B3C6                     _TMR6_SetInterruptHandler:
 29321                           	opt callstack 13
 29322                           
 29323                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 29324                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29325                           
 29326                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29327                           ;incstack = 0
 29328  01B3C6  50E1               	movf	fsr1l,w,c
 29329  01B3C8  0FFD               	addlw	-3
 29330  01B3CA  6ED9               	movwf	fsr2l,c
 29331  01B3CC  50E2               	movf	fsr1h,w,c
 29332  01B3CE  6EDA               	movwf	fsr2h,c
 29333  01B3D0  0EFF               	movlw	255
 29334  01B3D2  22DA               	addwfc	fsr2h,f,c
 29335  01B3D4  006F FF78  F0A0    	movff	postinc2,_TMR6_InterruptHandler
 29336  01B3DA  006F FF78  F0A1    	movff	postinc2,_TMR6_InterruptHandler+1
 29337  01B3E0  006F FF74  F0A2    	movff	postdec2,_TMR6_InterruptHandler+2
 29338                           
 29339                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29340  01B3E6  52E5               	movf	postdec1,f,c
 29341  01B3E8  52E5               	movf	postdec1,f,c
 29342  01B3EA  52E5               	movf	postdec1,f,c
 29343  01B3EC  0012               	return		;funcret
 29344  01B3EE                     __end_of_TMR6_SetInterruptHandler:
 29345                           	opt callstack 0
 29346                           
 29347 ;; *************** function _TMR5_Initialize *****************
 29348 ;; Defined at:
 29349 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 29350 ;; Parameters:    Size  Location     Type
 29351 ;;		None
 29352 ;; Auto vars:     Size  Location     Type
 29353 ;;		None
 29354 ;; Return value:  Size  Location     Type
 29355 ;;                  1  [STACK] void 
 29356 ;; Registers used:
 29357 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 29358 ;; Tracked objects:
 29359 ;;		On entry : 0/39
 29360 ;;		On exit  : 0/0
 29361 ;;		Unchanged: 0/0
 29362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29367 ;;Total ram usage:        0 bytes
 29368 ;; Hardware stack levels used:    1
 29369 ;; Hardware stack levels required when called:   16
 29370 ;; This function calls:
 29371 ;;		_TMR5_SetInterruptHandler
 29372 ;; This function is called by:
 29373 ;;		_SYSTEM_Initialize
 29374 ;; This function uses a reentrant model
 29375 ;;
 29376                           
 29377                           	psect	text115
 29378  01AD12                     __ptext115:
 29379                           	opt callstack 0
 29380  01AD12                     _TMR5_Initialize:
 29381                           	opt callstack 13
 29382                           
 29383                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 29384                           
 29385                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29386                           ;incstack = 0
 29387  01AD12  6A9B               	clrf	155,c	;volatile
 29388                           
 29389                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 29390  01AD14  6A9C               	clrf	156,c	;volatile
 29391                           
 29392                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 29393  01AD16  0E01               	movlw	1
 29394  01AD18  6E9D               	movwf	157,c	;volatile
 29395                           
 29396                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 29397  01AD1A  0E63               	movlw	99
 29398  01AD1C  6E99               	movwf	153,c	;volatile
 29399                           
 29400                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 29401  01AD1E  0EC0               	movlw	192
 29402  01AD20  6E98               	movwf	152,c	;volatile
 29403                           
 29404                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 29405  01AD22  5098               	movf	152,w,c	;volatile
 29406  01AD24  006F FE64  F026    	movff	16281,btemp	;volatile
 29407  01AD2A  6A27               	clrf	(btemp+1)^0,c
 29408  01AD2C  0060  F098  F027   	movff	btemp,btemp+1
 29409  01AD32  6A26               	clrf	btemp^0,c
 29410  01AD34  1026               	iorwf	btemp^0,w,c
 29411  01AD36  6E16               	movwf	_timer5ReloadVal^0,c	;volatile
 29412  01AD38  5027               	movf	(btemp+1)^0,w,c
 29413  01AD3A  6E17               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 29414                           
 29415                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 29416  01AD3C  0139               	movlb	57	; () banked
 29417  01AD3E  9DA8               	bcf	168,6,b	;volatile
 29418                           
 29419                           ; BSR set to: 57
 29420                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 29421  01AD40  8D98               	bsf	152,6,b	;volatile
 29422                           
 29423                           ; BSR set to: 57
 29424                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 29425  01AD42  0ED4               	movlw	low _TMR5_DefaultInterruptHandler
 29426  01AD44  6EE6               	movwf	postinc1,c
 29427  01AD46  0EAF               	movlw	high _TMR5_DefaultInterruptHandler
 29428  01AD48  6EE6               	movwf	postinc1,c
 29429  01AD4A  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 29430  01AD4C  6EE6               	movwf	postinc1,c
 29431  01AD4E  ECF7  F0D9         	call	_TMR5_SetInterruptHandler	;wreg free
 29432                           
 29433                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 29434  01AD52  0E31               	movlw	49
 29435  01AD54  6E9A               	movwf	154,c	;volatile
 29436                           
 29437                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29438  01AD56  0012               	return		;funcret
 29439  01AD58                     __end_of_TMR5_Initialize:
 29440                           	opt callstack 0
 29441                           
 29442 ;; *************** function _TMR5_SetInterruptHandler *****************
 29443 ;; Defined at:
 29444 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 29445 ;; Parameters:    Size  Location     Type
 29446 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29447 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 29448 ;; Auto vars:     Size  Location     Type
 29449 ;;		None
 29450 ;; Return value:  Size  Location     Type
 29451 ;;                  1  [STACK] void 
 29452 ;; Registers used:
 29453 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29454 ;; Tracked objects:
 29455 ;;		On entry : 3F/39
 29456 ;;		On exit  : 0/0
 29457 ;;		Unchanged: 0/0
 29458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29463 ;;Total ram usage:        0 bytes
 29464 ;; Hardware stack levels used:    1
 29465 ;; Hardware stack levels required when called:   15
 29466 ;; This function calls:
 29467 ;;		Nothing
 29468 ;; This function is called by:
 29469 ;;		_TMR5_Initialize
 29470 ;; This function uses a reentrant model
 29471 ;;
 29472                           
 29473                           	psect	text116
 29474  01B3EE                     __ptext116:
 29475                           	opt callstack 0
 29476  01B3EE                     _TMR5_SetInterruptHandler:
 29477                           	opt callstack 13
 29478                           
 29479                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 29480                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29481                           
 29482                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29483                           ;incstack = 0
 29484  01B3EE  50E1               	movf	fsr1l,w,c
 29485  01B3F0  0FFD               	addlw	-3
 29486  01B3F2  6ED9               	movwf	fsr2l,c
 29487  01B3F4  50E2               	movf	fsr1h,w,c
 29488  01B3F6  6EDA               	movwf	fsr2h,c
 29489  01B3F8  0EFF               	movlw	255
 29490  01B3FA  22DA               	addwfc	fsr2h,f,c
 29491  01B3FC  006F FF78  F09D    	movff	postinc2,_TMR5_InterruptHandler
 29492  01B402  006F FF78  F09E    	movff	postinc2,_TMR5_InterruptHandler+1
 29493  01B408  006F FF74  F09F    	movff	postdec2,_TMR5_InterruptHandler+2
 29494                           
 29495                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29496  01B40E  52E5               	movf	postdec1,f,c
 29497  01B410  52E5               	movf	postdec1,f,c
 29498  01B412  52E5               	movf	postdec1,f,c
 29499  01B414  0012               	return		;funcret
 29500  01B416                     __end_of_TMR5_SetInterruptHandler:
 29501                           	opt callstack 0
 29502                           
 29503 ;; *************** function _TMR3_Initialize *****************
 29504 ;; Defined at:
 29505 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 29506 ;; Parameters:    Size  Location     Type
 29507 ;;		None
 29508 ;; Auto vars:     Size  Location     Type
 29509 ;;		None
 29510 ;; Return value:  Size  Location     Type
 29511 ;;                  1  [STACK] void 
 29512 ;; Registers used:
 29513 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 29514 ;; Tracked objects:
 29515 ;;		On entry : 0/39
 29516 ;;		On exit  : 0/0
 29517 ;;		Unchanged: 0/0
 29518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29523 ;;Total ram usage:        0 bytes
 29524 ;; Hardware stack levels used:    1
 29525 ;; Hardware stack levels required when called:   16
 29526 ;; This function calls:
 29527 ;;		_TMR3_SetInterruptHandler
 29528 ;; This function is called by:
 29529 ;;		_SYSTEM_Initialize
 29530 ;; This function uses a reentrant model
 29531 ;;
 29532                           
 29533                           	psect	text117
 29534  01AD58                     __ptext117:
 29535                           	opt callstack 0
 29536  01AD58                     _TMR3_Initialize:
 29537                           	opt callstack 13
 29538                           
 29539                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 29540                           
 29541                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29542                           ;incstack = 0
 29543  01AD58  6AA7               	clrf	167,c	;volatile
 29544                           
 29545                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 29546  01AD5A  6AA8               	clrf	168,c	;volatile
 29547                           
 29548                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 29549  01AD5C  0E01               	movlw	1
 29550  01AD5E  6EA9               	movwf	169,c	;volatile
 29551                           
 29552                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 29553  01AD60  0E3C               	movlw	60
 29554  01AD62  6EA5               	movwf	165,c	;volatile
 29555                           
 29556                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 29557  01AD64  0EB0               	movlw	176
 29558  01AD66  6EA4               	movwf	164,c	;volatile
 29559                           
 29560                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 29561  01AD68  50A4               	movf	164,w,c	;volatile
 29562  01AD6A  006F FE94  F026    	movff	16293,btemp	;volatile
 29563  01AD70  6A27               	clrf	(btemp+1)^0,c
 29564  01AD72  0060  F098  F027   	movff	btemp,btemp+1
 29565  01AD78  6A26               	clrf	btemp^0,c
 29566  01AD7A  1026               	iorwf	btemp^0,w,c
 29567  01AD7C  6E12               	movwf	_timer3ReloadVal^0,c	;volatile
 29568  01AD7E  5027               	movf	(btemp+1)^0,w,c
 29569  01AD80  6E13               	movwf	(_timer3ReloadVal+1)^0,c	;volatile
 29570                           
 29571                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 29572  01AD82  0139               	movlb	57	; () banked
 29573  01AD84  9DA6               	bcf	166,6,b	;volatile
 29574                           
 29575                           ; BSR set to: 57
 29576                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 29577  01AD86  8D96               	bsf	150,6,b	;volatile
 29578                           
 29579                           ; BSR set to: 57
 29580                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 29581  01AD88  0E38               	movlw	low _TMR3_DefaultInterruptHandler
 29582  01AD8A  6EE6               	movwf	postinc1,c
 29583  01AD8C  0EB9               	movlw	high _TMR3_DefaultInterruptHandler
 29584  01AD8E  6EE6               	movwf	postinc1,c
 29585  01AD90  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 29586  01AD92  6EE6               	movwf	postinc1,c
 29587  01AD94  EC0B  F0DA         	call	_TMR3_SetInterruptHandler	;wreg free
 29588                           
 29589                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 29590  01AD98  0E31               	movlw	49
 29591  01AD9A  6EA6               	movwf	166,c	;volatile
 29592                           
 29593                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29594  01AD9C  0012               	return		;funcret
 29595  01AD9E                     __end_of_TMR3_Initialize:
 29596                           	opt callstack 0
 29597                           
 29598 ;; *************** function _TMR3_SetInterruptHandler *****************
 29599 ;; Defined at:
 29600 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 29601 ;; Parameters:    Size  Location     Type
 29602 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29603 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 29604 ;; Auto vars:     Size  Location     Type
 29605 ;;		None
 29606 ;; Return value:  Size  Location     Type
 29607 ;;                  1  [STACK] void 
 29608 ;; Registers used:
 29609 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29610 ;; Tracked objects:
 29611 ;;		On entry : 0/1
 29612 ;;		On exit  : 0/0
 29613 ;;		Unchanged: 0/0
 29614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29619 ;;Total ram usage:        0 bytes
 29620 ;; Hardware stack levels used:    1
 29621 ;; Hardware stack levels required when called:   15
 29622 ;; This function calls:
 29623 ;;		Nothing
 29624 ;; This function is called by:
 29625 ;;		_TMR3_Initialize
 29626 ;;		_init_bsoc
 29627 ;; This function uses a reentrant model
 29628 ;;
 29629                           
 29630                           	psect	text118
 29631  01B416                     __ptext118:
 29632                           	opt callstack 0
 29633  01B416                     _TMR3_SetInterruptHandler:
 29634                           	opt callstack 14
 29635                           
 29636                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 29637                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29638                           
 29639                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29640                           ;incstack = 0
 29641  01B416  50E1               	movf	fsr1l,w,c
 29642  01B418  0FFD               	addlw	-3
 29643  01B41A  6ED9               	movwf	fsr2l,c
 29644  01B41C  50E2               	movf	fsr1h,w,c
 29645  01B41E  6EDA               	movwf	fsr2h,c
 29646  01B420  0EFF               	movlw	255
 29647  01B422  22DA               	addwfc	fsr2h,f,c
 29648  01B424  006F FF78  F09A    	movff	postinc2,_TMR3_InterruptHandler
 29649  01B42A  006F FF78  F09B    	movff	postinc2,_TMR3_InterruptHandler+1
 29650  01B430  006F FF74  F09C    	movff	postdec2,_TMR3_InterruptHandler+2
 29651                           
 29652                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29653  01B436  52E5               	movf	postdec1,f,c
 29654  01B438  52E5               	movf	postdec1,f,c
 29655  01B43A  52E5               	movf	postdec1,f,c
 29656  01B43C  0012               	return		;funcret
 29657  01B43E                     __end_of_TMR3_SetInterruptHandler:
 29658                           	opt callstack 0
 29659                           
 29660 ;; *************** function _TMR2_Initialize *****************
 29661 ;; Defined at:
 29662 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 29663 ;; Parameters:    Size  Location     Type
 29664 ;;		None
 29665 ;; Auto vars:     Size  Location     Type
 29666 ;;		None
 29667 ;; Return value:  Size  Location     Type
 29668 ;;                  1  [STACK] void 
 29669 ;; Registers used:
 29670 ;;		wreg, status,2
 29671 ;; Tracked objects:
 29672 ;;		On entry : 0/3E
 29673 ;;		On exit  : 3F/39
 29674 ;;		Unchanged: 0/0
 29675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29680 ;;Total ram usage:        0 bytes
 29681 ;; Hardware stack levels used:    1
 29682 ;; Hardware stack levels required when called:   15
 29683 ;; This function calls:
 29684 ;;		Nothing
 29685 ;; This function is called by:
 29686 ;;		_SYSTEM_Initialize
 29687 ;; This function uses a reentrant model
 29688 ;;
 29689                           
 29690                           	psect	text119
 29691  01B7AE                     __ptext119:
 29692                           	opt callstack 0
 29693  01B7AE                     _TMR2_Initialize:
 29694                           	opt callstack 14
 29695                           
 29696                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 29697                           
 29698                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29699                           ;incstack = 0
 29700  01B7AE  0E01               	movlw	1
 29701  01B7B0  6EAE               	movwf	174,c	;volatile
 29702                           
 29703                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 29704  01B7B2  6AAD               	clrf	173,c	;volatile
 29705                           
 29706                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 29707  01B7B4  6AAF               	clrf	175,c	;volatile
 29708                           
 29709                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 29710  01B7B6  0E63               	movlw	99
 29711  01B7B8  6EAB               	movwf	171,c	;volatile
 29712                           
 29713                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 29714  01B7BA  6AAA               	clrf	170,c	;volatile
 29715                           
 29716                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 29717  01B7BC  0139               	movlb	57	; () banked
 29718  01B7BE  95A4               	bcf	164,2,b	;volatile
 29719                           
 29720                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 29721  01B7C0  0EC0               	movlw	192
 29722  01B7C2  6EAC               	movwf	172,c	;volatile
 29723                           
 29724                           ; BSR set to: 57
 29725                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29726  01B7C4  0012               	return		;funcret
 29727  01B7C6                     __end_of_TMR2_Initialize:
 29728                           	opt callstack 0
 29729                           
 29730 ;; *************** function _SPI1_Initialize *****************
 29731 ;; Defined at:
 29732 ;;		line 64 in file "mcc_generated_files/spi1.c"
 29733 ;; Parameters:    Size  Location     Type
 29734 ;;		None
 29735 ;; Auto vars:     Size  Location     Type
 29736 ;;		None
 29737 ;; Return value:  Size  Location     Type
 29738 ;;                  1  [STACK] void 
 29739 ;; Registers used:
 29740 ;;		wreg, status,2
 29741 ;; Tracked objects:
 29742 ;;		On entry : 3F/39
 29743 ;;		On exit  : 3F/3D
 29744 ;;		Unchanged: 0/0
 29745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29750 ;;Total ram usage:        0 bytes
 29751 ;; Hardware stack levels used:    1
 29752 ;; Hardware stack levels required when called:   15
 29753 ;; This function calls:
 29754 ;;		Nothing
 29755 ;; This function is called by:
 29756 ;;		_SYSTEM_Initialize
 29757 ;; This function uses a reentrant model
 29758 ;;
 29759                           
 29760                           	psect	text120
 29761  01B7C6                     __ptext120:
 29762                           	opt callstack 0
 29763  01B7C6                     _SPI1_Initialize:
 29764                           	opt callstack 14
 29765                           
 29766                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 29767                           
 29768                           ; BSR set to: 57
 29769                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29770                           ;incstack = 0
 29771  01B7C6  0E40               	movlw	64
 29772  01B7C8  013D               	movlb	61	; () banked
 29773  01B7CA  6F15               	movwf	21,b	;volatile
 29774                           
 29775                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 29776  01B7CC  0E03               	movlw	3
 29777  01B7CE  6F16               	movwf	22,b	;volatile
 29778                           
 29779                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 29780  01B7D0  0E4F               	movlw	79
 29781  01B7D2  6F19               	movwf	25,b	;volatile
 29782                           
 29783                           ; BSR set to: 61
 29784                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 29785  01B7D4  6B1C               	clrf	28,b	;volatile
 29786                           
 29787                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 29788  01B7D6  0E83               	movlw	131
 29789  01B7D8  6F14               	movwf	20,b	;volatile
 29790                           
 29791                           ; BSR set to: 61
 29792                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29793  01B7DA  0012               	return		;funcret
 29794  01B7DC                     __end_of_SPI1_Initialize:
 29795                           	opt callstack 0
 29796                           
 29797 ;; *************** function _PWM8_Initialize *****************
 29798 ;; Defined at:
 29799 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 29800 ;; Parameters:    Size  Location     Type
 29801 ;;		None
 29802 ;; Auto vars:     Size  Location     Type
 29803 ;;		None
 29804 ;; Return value:  Size  Location     Type
 29805 ;;                  1  [STACK] void 
 29806 ;; Registers used:
 29807 ;;		wreg, status,2
 29808 ;; Tracked objects:
 29809 ;;		On entry : 3F/39
 29810 ;;		On exit  : 3F/3F
 29811 ;;		Unchanged: 0/0
 29812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29817 ;;Total ram usage:        0 bytes
 29818 ;; Hardware stack levels used:    1
 29819 ;; Hardware stack levels required when called:   15
 29820 ;; This function calls:
 29821 ;;		Nothing
 29822 ;; This function is called by:
 29823 ;;		_SYSTEM_Initialize
 29824 ;; This function uses a reentrant model
 29825 ;;
 29826                           
 29827                           	psect	text121
 29828  01B7DC                     __ptext121:
 29829                           	opt callstack 0
 29830  01B7DC                     _PWM8_Initialize:
 29831                           	opt callstack 14
 29832                           
 29833                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 29834                           
 29835                           ; BSR set to: 61
 29836                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29837                           ;incstack = 0
 29838  01B7DC  0E80               	movlw	128
 29839  01B7DE  6E62               	movwf	98,c	;volatile
 29840                           
 29841                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 29842  01B7E0  6A61               	clrf	97,c	;volatile
 29843                           
 29844                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 29845  01B7E2  0E40               	movlw	64
 29846  01B7E4  6E60               	movwf	96,c	;volatile
 29847                           
 29848                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 29849  01B7E6  013F               	movlb	63	; () banked
 29850  01B7E8  515F               	movf	95,w,b	;volatile
 29851  01B7EA  0B3F               	andlw	-193
 29852  01B7EC  0940               	iorlw	64
 29853  01B7EE  6F5F               	movwf	95,b	;volatile
 29854                           
 29855                           ; BSR set to: 63
 29856                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29857  01B7F0  0012               	return		;funcret
 29858  01B7F2                     __end_of_PWM8_Initialize:
 29859                           	opt callstack 0
 29860                           
 29861 ;; *************** function _PMD_Initialize *****************
 29862 ;; Defined at:
 29863 ;;		line 90 in file "mcc_generated_files/mcc.c"
 29864 ;; Parameters:    Size  Location     Type
 29865 ;;		None
 29866 ;; Auto vars:     Size  Location     Type
 29867 ;;		None
 29868 ;; Return value:  Size  Location     Type
 29869 ;;                  1  [STACK] void 
 29870 ;; Registers used:
 29871 ;;		None
 29872 ;; Tracked objects:
 29873 ;;		On entry : 3F/39
 29874 ;;		On exit  : 3F/39
 29875 ;;		Unchanged: 0/0
 29876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29881 ;;Total ram usage:        0 bytes
 29882 ;; Hardware stack levels used:    1
 29883 ;; Hardware stack levels required when called:   15
 29884 ;; This function calls:
 29885 ;;		Nothing
 29886 ;; This function is called by:
 29887 ;;		_SYSTEM_Initialize
 29888 ;; This function uses a reentrant model
 29889 ;;
 29890                           
 29891                           	psect	text122
 29892  01B808                     __ptext122:
 29893                           	opt callstack 0
 29894  01B808                     _PMD_Initialize:
 29895                           	opt callstack 14
 29896                           
 29897                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 29898                           
 29899                           ; BSR set to: 63
 29900                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29901                           ;incstack = 0
 29902  01B808  0139               	movlb	57	; () banked
 29903  01B80A  6BC0               	clrf	192,b	;volatile
 29904                           
 29905                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 29906  01B80C  6BC1               	clrf	193,b	;volatile
 29907                           
 29908                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 29909  01B80E  6BC2               	clrf	194,b	;volatile
 29910                           
 29911                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 29912  01B810  6BC3               	clrf	195,b	;volatile
 29913                           
 29914                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 29915  01B812  6BC4               	clrf	196,b	;volatile
 29916                           
 29917                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 29918  01B814  6BC5               	clrf	197,b	;volatile
 29919                           
 29920                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 29921  01B816  6BC6               	clrf	198,b	;volatile
 29922                           
 29923                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 29924  01B818  6BC7               	clrf	199,b	;volatile
 29925                           
 29926                           ; BSR set to: 57
 29927                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 29928  01B81A  0012               	return		;funcret
 29929  01B81C                     __end_of_PMD_Initialize:
 29930                           	opt callstack 0
 29931                           
 29932 ;; *************** function _PIN_MANAGER_Initialize *****************
 29933 ;; Defined at:
 29934 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 29935 ;; Parameters:    Size  Location     Type
 29936 ;;		None
 29937 ;; Auto vars:     Size  Location     Type
 29938 ;;		None
 29939 ;; Return value:  Size  Location     Type
 29940 ;;                  1  [STACK] void 
 29941 ;; Registers used:
 29942 ;;		wreg, status,2
 29943 ;; Tracked objects:
 29944 ;;		On entry : 3F/39
 29945 ;;		On exit  : 3F/3A
 29946 ;;		Unchanged: 0/0
 29947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29952 ;;Total ram usage:        0 bytes
 29953 ;; Hardware stack levels used:    1
 29954 ;; Hardware stack levels required when called:   15
 29955 ;; This function calls:
 29956 ;;		Nothing
 29957 ;; This function is called by:
 29958 ;;		_SYSTEM_Initialize
 29959 ;; This function uses a reentrant model
 29960 ;;
 29961                           
 29962                           	psect	text123
 29963  01A234                     __ptext123:
 29964                           	opt callstack 0
 29965  01A234                     _PIN_MANAGER_Initialize:
 29966                           	opt callstack 14
 29967                           
 29968                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 29969                           
 29970                           ; BSR set to: 57
 29971                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29972                           ;incstack = 0
 29973  01A234  0E07               	movlw	7
 29974  01A236  6EBE               	movwf	190,c	;volatile
 29975                           
 29976                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 29977  01A238  0E80               	movlw	128
 29978  01A23A  6EBD               	movwf	189,c	;volatile
 29979                           
 29980                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 29981  01A23C  6ABA               	clrf	186,c	;volatile
 29982                           
 29983                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x20;
 29984  01A23E  0E20               	movlw	32
 29985  01A240  6EBF               	movwf	191,c	;volatile
 29986                           
 29987                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 29988  01A242  6ABB               	clrf	187,c	;volatile
 29989                           
 29990                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 29991  01A244  0E07               	movlw	7
 29992  01A246  6EBC               	movwf	188,c	;volatile
 29993                           
 29994                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 29995  01A248  6AC6               	clrf	198,c	;volatile
 29996                           
 29997                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 29998  01A24A  0E0F               	movlw	15
 29999  01A24C  6EC7               	movwf	199,c	;volatile
 30000                           
 30001                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 30002  01A24E  68C2               	setf	194,c	;volatile
 30003                           
 30004                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 30005  01A250  0EBF               	movlw	191
 30006  01A252  6EC3               	movwf	195,c	;volatile
 30007                           
 30008                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 30009  01A254  0E90               	movlw	144
 30010  01A256  6EC4               	movwf	196,c	;volatile
 30011                           
 30012                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 30013  01A258  0E0C               	movlw	12
 30014  01A25A  6EC5               	movwf	197,c	;volatile
 30015                           
 30016                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 30017  01A25C  013A               	movlb	58	; () banked
 30018  01A25E  6B70               	clrf	112,b	;volatile
 30019                           
 30020                           ; BSR set to: 58
 30021                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 30022  01A260  6B60               	clrf	96,b	;volatile
 30023                           
 30024                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 30025  01A262  0E3C               	movlw	60
 30026  01A264  6F50               	movwf	80,b	;volatile
 30027                           
 30028                           ; BSR set to: 58
 30029                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 30030  01A266  6B80               	clrf	128,b	;volatile
 30031                           
 30032                           ; BSR set to: 58
 30033                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 30034  01A268  6B90               	clrf	144,b	;volatile
 30035                           
 30036                           ; BSR set to: 58
 30037                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 30038  01A26A  6940               	setf	64,b	;volatile
 30039                           
 30040                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 30041  01A26C  0E0C               	movlw	12
 30042  01A26E  6F71               	movwf	113,b	;volatile
 30043                           
 30044                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 30045  01A270  0E0F               	movlw	15
 30046  01A272  6F91               	movwf	145,b	;volatile
 30047                           
 30048                           ; BSR set to: 58
 30049                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 30050  01A274  6B81               	clrf	129,b	;volatile
 30051                           
 30052                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 30053  01A276  0E83               	movlw	131
 30054  01A278  6F51               	movwf	81,b	;volatile
 30055                           
 30056                           ; BSR set to: 58
 30057                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 30058  01A27A  6B41               	clrf	65,b	;volatile
 30059                           
 30060                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 30061  01A27C  0E97               	movlw	151
 30062  01A27E  6F61               	movwf	97,b	;volatile
 30063                           
 30064                           ; BSR set to: 58
 30065                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 30066  01A280  6B82               	clrf	130,b	;volatile
 30067                           
 30068                           ; BSR set to: 58
 30069                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 30070  01A282  6B92               	clrf	146,b	;volatile
 30071                           
 30072                           ; BSR set to: 58
 30073                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 30074  01A284  6B42               	clrf	66,b	;volatile
 30075                           
 30076                           ; BSR set to: 58
 30077                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 30078  01A286  6B52               	clrf	82,b	;volatile
 30079                           
 30080                           ; BSR set to: 58
 30081                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 30082  01A288  6B62               	clrf	98,b	;volatile
 30083                           
 30084                           ; BSR set to: 58
 30085                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 30086  01A28A  6B72               	clrf	114,b	;volatile
 30087                           
 30088                           ; BSR set to: 58
 30089                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 30090  01A28C  6943               	setf	67,b	;volatile
 30091                           
 30092                           ; BSR set to: 58
 30093                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 30094  01A28E  6953               	setf	83,b	;volatile
 30095                           
 30096                           ; BSR set to: 58
 30097                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 30098  01A290  6963               	setf	99,b	;volatile
 30099                           
 30100                           ; BSR set to: 58
 30101                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 30102  01A292  6973               	setf	115,b	;volatile
 30103                           
 30104                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 30105  01A294  0E07               	movlw	7
 30106  01A296  6F83               	movwf	131,b	;volatile
 30107                           
 30108                           ; BSR set to: 58
 30109                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 30110  01A298  6993               	setf	147,b	;volatile
 30111                           
 30112                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 30113  01A29A  0E0F               	movlw	15
 30114  01A29C  6FE8               	movwf	232,b	;volatile
 30115                           
 30116                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 30117  01A29E  0E13               	movlw	19
 30118  01A2A0  6FDE               	movwf	222,b	;volatile
 30119                           
 30120                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 30121  01A2A2  0E16               	movlw	22
 30122  01A2A4  6F0E               	movwf	14,b	;volatile
 30123                           
 30124                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 30125  01A2A6  0E1E               	movlw	30
 30126  01A2A8  6F13               	movwf	19,b	;volatile
 30127                           
 30128                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 30129  01A2AA  0E08               	movlw	8
 30130  01A2AC  6FC0               	movwf	192,b	;volatile
 30131                           
 30132                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 30133  01A2AE  0E10               	movlw	16
 30134  01A2B0  6F19               	movwf	25,b	;volatile
 30135                           
 30136                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 30137  01A2B2  0E09               	movlw	9
 30138  01A2B4  6FC1               	movwf	193,b	;volatile
 30139                           
 30140                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 30141  01A2B6  0E1F               	movlw	31
 30142  01A2B8  6F15               	movwf	21,b	;volatile
 30143                           
 30144                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 30145  01A2BA  0E13               	movlw	19
 30146  01A2BC  6F16               	movwf	22,b	;volatile
 30147                           
 30148                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 30149  01A2BE  0E17               	movlw	23
 30150  01A2C0  6FE5               	movwf	229,b	;volatile
 30151                           
 30152                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 30153  01A2C2  0E14               	movlw	20
 30154  01A2C4  6FDF               	movwf	223,b	;volatile
 30155                           
 30156                           ; BSR set to: 58
 30157                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 30158  01A2C6  0012               	return		;funcret
 30159  01A2C8                     __end_of_PIN_MANAGER_Initialize:
 30160                           	opt callstack 0
 30161                           
 30162 ;; *************** function _OSCILLATOR_Initialize *****************
 30163 ;; Defined at:
 30164 ;;		line 72 in file "mcc_generated_files/mcc.c"
 30165 ;; Parameters:    Size  Location     Type
 30166 ;;		None
 30167 ;; Auto vars:     Size  Location     Type
 30168 ;;		None
 30169 ;; Return value:  Size  Location     Type
 30170 ;;                  1  [STACK] void 
 30171 ;; Registers used:
 30172 ;;		wreg, status,2
 30173 ;; Tracked objects:
 30174 ;;		On entry : 3F/3A
 30175 ;;		On exit  : 3F/39
 30176 ;;		Unchanged: 0/0
 30177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30182 ;;Total ram usage:        0 bytes
 30183 ;; Hardware stack levels used:    1
 30184 ;; Hardware stack levels required when called:   15
 30185 ;; This function calls:
 30186 ;;		Nothing
 30187 ;; This function is called by:
 30188 ;;		_SYSTEM_Initialize
 30189 ;; This function uses a reentrant model
 30190 ;;
 30191                           
 30192                           	psect	text124
 30193  01B7F2                     __ptext124:
 30194                           	opt callstack 0
 30195  01B7F2                     _OSCILLATOR_Initialize:
 30196                           	opt callstack 14
 30197                           
 30198                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 30199                           
 30200                           ; BSR set to: 58
 30201                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30202                           ;incstack = 0
 30203  01B7F2  0E20               	movlw	32
 30204  01B7F4  0139               	movlb	57	; () banked
 30205  01B7F6  6FD9               	movwf	217,b	;volatile
 30206                           
 30207                           ; BSR set to: 57
 30208                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 30209  01B7F8  6BDB               	clrf	219,b	;volatile
 30210                           
 30211                           ; BSR set to: 57
 30212                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 30213  01B7FA  6BDD               	clrf	221,b	;volatile
 30214                           
 30215                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 30216  01B7FC  0E02               	movlw	2
 30217  01B7FE  6FDF               	movwf	223,b	;volatile
 30218                           
 30219                           ; BSR set to: 57
 30220                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 30221  01B800  6BDE               	clrf	222,b	;volatile
 30222  01B802                     l169:
 30223                           
 30224                           ; BSR set to: 57
 30225                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 30226  01B802  B1DC               	btfsc	220,0,b	;volatile
 30227  01B804  0012               	return	
 30228  01B806  D7FD               	goto	l169
 30229  01B808                     __end_of_OSCILLATOR_Initialize:
 30230                           	opt callstack 0
 30231                           
 30232 ;; *************** function _INTERRUPT_Initialize *****************
 30233 ;; Defined at:
 30234 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 30235 ;; Parameters:    Size  Location     Type
 30236 ;;		None
 30237 ;; Auto vars:     Size  Location     Type
 30238 ;;  state           1  [STACK] _Bool 
 30239 ;; Return value:  Size  Location     Type
 30240 ;;                  1  [STACK] void 
 30241 ;; Registers used:
 30242 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 30243 ;; Tracked objects:
 30244 ;;		On entry : 0/0
 30245 ;;		On exit  : 3F/39
 30246 ;;		Unchanged: 0/0
 30247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30252 ;;Total ram usage:        0 bytes
 30253 ;; Hardware stack levels used:    1
 30254 ;; Hardware stack levels required when called:   15
 30255 ;; This function calls:
 30256 ;;		Nothing
 30257 ;; This function is called by:
 30258 ;;		_SYSTEM_Initialize
 30259 ;; This function uses a reentrant model
 30260 ;;
 30261                           
 30262                           	psect	text125
 30263  01A7CA                     __ptext125:
 30264                           	opt callstack 0
 30265  01A7CA                     _INTERRUPT_Initialize:
 30266                           	opt callstack 0
 30267                           
 30268                           ; BSR set to: 57
 30269                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30270  01A7CA  52E6               	movf	postinc1,f,c
 30271                           
 30272                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 30273                           
 30274                           ;incstack = 0
 30275  01A7CC  8AD2               	bsf	210,5,c	;volatile
 30276                           
 30277                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 30278  01A7CE  AED2               	btfss	16338,7,c	;volatile
 30279  01A7D0  D003               	goto	u9360
 30280  01A7D2  6A31               	clrf	(btemp+11)^0,c
 30281  01A7D4  2A31               	incf	(btemp+11)^0,f,c
 30282  01A7D6  D001               	goto	u9378
 30283  01A7D8                     u9360:
 30284  01A7D8  6A31               	clrf	(btemp+11)^0,c
 30285  01A7DA                     u9378:
 30286                           
 30287                           ;stkvar	_state @ sp[(-1)+0]
 30288  01A7DA  0EFF               	movlw	-1
 30289  01A7DC  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 30290                           
 30291                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 30292  01A7E2  9ED2               	bcf	16338,7,c	;volatile
 30293                           
 30294                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 30295  01A7E4  0E55               	movlw	85
 30296  01A7E6  6ED4               	movwf	212,c	;volatile
 30297                           
 30298                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 30299  01A7E8  0EAA               	movlw	170
 30300  01A7EA  6ED4               	movwf	212,c	;volatile
 30301                           
 30302                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 30303  01A7EC  90D4               	bcf	212,0,c	;volatile
 30304                           
 30305                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 30306  01A7EE  0138               	movlb	56	; () banked
 30307  01A7F0  6B9F               	clrf	159,b	;volatile
 30308                           
 30309                           ; BSR set to: 56
 30310                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 30311  01A7F2  6B9E               	clrf	158,b	;volatile
 30312                           
 30313                           ; BSR set to: 56
 30314                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 30315  01A7F4  0E08               	movlw	8
 30316  01A7F6  6F9D               	movwf	157,b	;volatile
 30317                           
 30318                           ; BSR set to: 56
 30319                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 30320  01A7F8  0E55               	movlw	85
 30321  01A7FA  6ED4               	movwf	212,c	;volatile
 30322                           
 30323                           ; BSR set to: 56
 30324                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 30325  01A7FC  0EAA               	movlw	170
 30326  01A7FE  6ED4               	movwf	212,c	;volatile
 30327                           
 30328                           ; BSR set to: 56
 30329                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 30330  01A800  80D4               	bsf	212,0,c	;volatile
 30331                           
 30332                           ; BSR set to: 56
 30333                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 30334                           ;stkvar	_state @ sp[(-1)+0]
 30335  01A802  0EFF               	movlw	-1
 30336  01A804  B0E3               	btfsc	plusw1,0,c
 30337  01A806  D002               	bra	u9385
 30338  01A808  9ED2               	bcf	16338,7,c	;volatile
 30339  01A80A  D001               	bra	u9386
 30340  01A80C                     u9385:
 30341  01A80C  8ED2               	bsf	16338,7,c	;volatile
 30342  01A80E                     u9386:
 30343                           
 30344                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 30345  01A80E  0139               	movlb	57	; () banked
 30346  01A810  8782               	bsf	130,3,b	;volatile
 30347                           
 30348                           ; BSR set to: 57
 30349                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 30350  01A812  8382               	bsf	130,1,b	;volatile
 30351                           
 30352                           ; BSR set to: 57
 30353                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 30354  01A814  8182               	bsf	130,0,b	;volatile
 30355                           
 30356                           ; BSR set to: 57
 30357                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 30358  01A816  8582               	bsf	130,2,b	;volatile
 30359                           
 30360                           ; BSR set to: 57
 30361                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 30362  01A818  8786               	bsf	134,3,b	;volatile
 30363                           
 30364                           ; BSR set to: 57
 30365                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 30366  01A81A  8586               	bsf	134,2,b	;volatile
 30367                           
 30368                           ; BSR set to: 57
 30369                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 30370  01A81C  8783               	bsf	131,3,b	;volatile
 30371                           
 30372                           ; BSR set to: 57
 30373                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 30374  01A81E  8181               	bsf	129,0,b	;volatile
 30375                           
 30376                           ; BSR set to: 57
 30377                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 30378  01A820  9185               	bcf	133,0,b	;volatile
 30379                           
 30380                           ; BSR set to: 57
 30381                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 30382  01A822  8189               	bsf	137,0,b	;volatile
 30383                           
 30384                           ; BSR set to: 57
 30385                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 30386  01A824  9D88               	bcf	136,6,b	;volatile
 30387                           
 30388                           ; BSR set to: 57
 30389                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR1bits.ADIP = 1;
 30390  01A826  8581               	bsf	129,2,b	;volatile
 30391                           
 30392                           ; BSR set to: 57
 30393                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADTIP = 1;
 30394  01A828  8781               	bsf	129,3,b	;volatile
 30395                           
 30396                           ; BSR set to: 57
 30397                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR6bits.TMR3IP = 0;
 30398  01A82A  9D86               	bcf	134,6,b	;volatile
 30399                           
 30400                           ; BSR set to: 57
 30401                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 30402  01A82C  52E5               	movf	postdec1,f,c
 30403  01A82E  0012               	return		;funcret
 30404  01A830                     __end_of_INTERRUPT_Initialize:
 30405                           	opt callstack 0
 30406                           
 30407 ;; *************** function _FVR_Initialize *****************
 30408 ;; Defined at:
 30409 ;;		line 58 in file "mcc_generated_files/fvr.c"
 30410 ;; Parameters:    Size  Location     Type
 30411 ;;		None
 30412 ;; Auto vars:     Size  Location     Type
 30413 ;;		None
 30414 ;; Return value:  Size  Location     Type
 30415 ;;                  1  [STACK] void 
 30416 ;; Registers used:
 30417 ;;		wreg, status,2
 30418 ;; Tracked objects:
 30419 ;;		On entry : 3F/39
 30420 ;;		On exit  : 3F/3E
 30421 ;;		Unchanged: 0/0
 30422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30427 ;;Total ram usage:        0 bytes
 30428 ;; Hardware stack levels used:    1
 30429 ;; Hardware stack levels required when called:   15
 30430 ;; This function calls:
 30431 ;;		Nothing
 30432 ;; This function is called by:
 30433 ;;		_SYSTEM_Initialize
 30434 ;; This function uses a reentrant model
 30435 ;;
 30436                           
 30437                           	psect	text126
 30438  01B90E                     __ptext126:
 30439                           	opt callstack 0
 30440  01B90E                     _FVR_Initialize:
 30441                           	opt callstack 14
 30442                           
 30443                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 30444                           
 30445                           ; BSR set to: 57
 30446                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30447                           ;incstack = 0
 30448  01B90E  0EAF               	movlw	175
 30449  01B910  013E               	movlb	62	; () banked
 30450  01B912  6FC1               	movwf	193,b	;volatile
 30451                           
 30452                           ; BSR set to: 62
 30453                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 30454  01B914  0012               	return		;funcret
 30455  01B916                     __end_of_FVR_Initialize:
 30456                           	opt callstack 0
 30457                           
 30458 ;; *************** function _EXT_INT_Initialize *****************
 30459 ;; Defined at:
 30460 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 30461 ;; Parameters:    Size  Location     Type
 30462 ;;		None
 30463 ;; Auto vars:     Size  Location     Type
 30464 ;;		None
 30465 ;; Return value:  Size  Location     Type
 30466 ;;                  1  [STACK] void 
 30467 ;; Registers used:
 30468 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30469 ;; Tracked objects:
 30470 ;;		On entry : 3F/3F
 30471 ;;		On exit  : 3F/39
 30472 ;;		Unchanged: 0/0
 30473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30478 ;;Total ram usage:        0 bytes
 30479 ;; Hardware stack levels used:    1
 30480 ;; Hardware stack levels required when called:   16
 30481 ;; This function calls:
 30482 ;;		_INT0_SetInterruptHandler
 30483 ;;		_INT1_SetInterruptHandler
 30484 ;; This function is called by:
 30485 ;;		_SYSTEM_Initialize
 30486 ;; This function uses a reentrant model
 30487 ;;
 30488                           
 30489                           	psect	text127
 30490  01B0AC                     __ptext127:
 30491                           	opt callstack 0
 30492  01B0AC                     _EXT_INT_Initialize:
 30493                           	opt callstack 13
 30494                           
 30495                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 30496                           
 30497                           ; BSR set to: 62
 30498                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30499                           ;incstack = 0
 30500  01B0AC  0139               	movlb	57	; () banked
 30501  01B0AE  91A1               	bcf	161,0,b	;volatile
 30502                           
 30503                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 30504  01B0B0  90D2               	bcf	210,0,c	;volatile
 30505                           
 30506                           ; BSR set to: 57
 30507                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 30508  01B0B2  0E3A               	movlw	low _INT0_DefaultInterruptHandler
 30509  01B0B4  6EE6               	movwf	postinc1,c
 30510  01B0B6  0EB9               	movlw	high _INT0_DefaultInterruptHandler
 30511  01B0B8  6EE6               	movwf	postinc1,c
 30512  01B0BA  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 30513  01B0BC  6EE6               	movwf	postinc1,c
 30514  01B0BE  EC33  F0DA         	call	_INT0_SetInterruptHandler	;wreg free
 30515                           
 30516                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 30517  01B0C2  0139               	movlb	57	; () banked
 30518  01B0C4  8191               	bsf	145,0,b	;volatile
 30519                           
 30520                           ; BSR set to: 57
 30521                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 30522  01B0C6  91A5               	bcf	165,0,b	;volatile
 30523                           
 30524                           ; BSR set to: 57
 30525                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 30526  01B0C8  92D2               	bcf	210,1,c	;volatile
 30527                           
 30528                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 30529  01B0CA  0E36               	movlw	low _INT1_DefaultInterruptHandler
 30530  01B0CC  6EE6               	movwf	postinc1,c
 30531  01B0CE  0EB9               	movlw	high _INT1_DefaultInterruptHandler
 30532  01B0D0  6EE6               	movwf	postinc1,c
 30533  01B0D2  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 30534  01B0D4  6EE6               	movwf	postinc1,c
 30535  01B0D6  EC1F  F0DA         	call	_INT1_SetInterruptHandler	;wreg free
 30536                           
 30537                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 30538  01B0DA  0139               	movlb	57	; () banked
 30539  01B0DC  8195               	bsf	149,0,b	;volatile
 30540                           
 30541                           ; BSR set to: 57
 30542                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 30543  01B0DE  0012               	return		;funcret
 30544  01B0E0                     __end_of_EXT_INT_Initialize:
 30545                           	opt callstack 0
 30546                           
 30547 ;; *************** function _INT1_SetInterruptHandler *****************
 30548 ;; Defined at:
 30549 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 30550 ;; Parameters:    Size  Location     Type
 30551 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30552 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 30553 ;; Auto vars:     Size  Location     Type
 30554 ;;		None
 30555 ;; Return value:  Size  Location     Type
 30556 ;;                  1  [STACK] void 
 30557 ;; Registers used:
 30558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30559 ;; Tracked objects:
 30560 ;;		On entry : 3F/39
 30561 ;;		On exit  : 0/0
 30562 ;;		Unchanged: 0/0
 30563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30568 ;;Total ram usage:        0 bytes
 30569 ;; Hardware stack levels used:    1
 30570 ;; Hardware stack levels required when called:   15
 30571 ;; This function calls:
 30572 ;;		Nothing
 30573 ;; This function is called by:
 30574 ;;		_EXT_INT_Initialize
 30575 ;;		_start_switch_handler
 30576 ;; This function uses a reentrant model
 30577 ;;
 30578                           
 30579                           	psect	text128
 30580  01B43E                     __ptext128:
 30581                           	opt callstack 0
 30582  01B43E                     _INT1_SetInterruptHandler:
 30583                           	opt callstack 14
 30584                           
 30585                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 30586                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30587                           
 30588                           ; BSR set to: 57
 30589                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30590                           ;incstack = 0
 30591  01B43E  50E1               	movf	fsr1l,w,c
 30592  01B440  0FFD               	addlw	-3
 30593  01B442  6ED9               	movwf	fsr2l,c
 30594  01B444  50E2               	movf	fsr1h,w,c
 30595  01B446  6EDA               	movwf	fsr2h,c
 30596  01B448  0EFF               	movlw	255
 30597  01B44A  22DA               	addwfc	fsr2h,f,c
 30598  01B44C  006F FF78  F004    	movff	postinc2,_INT1_InterruptHandler
 30599  01B452  006F FF78  F005    	movff	postinc2,_INT1_InterruptHandler+1
 30600  01B458  006F FF74  F006    	movff	postdec2,_INT1_InterruptHandler+2
 30601                           
 30602                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30603  01B45E  52E5               	movf	postdec1,f,c
 30604  01B460  52E5               	movf	postdec1,f,c
 30605  01B462  52E5               	movf	postdec1,f,c
 30606  01B464  0012               	return		;funcret
 30607  01B466                     __end_of_INT1_SetInterruptHandler:
 30608                           	opt callstack 0
 30609                           
 30610 ;; *************** function _INT0_SetInterruptHandler *****************
 30611 ;; Defined at:
 30612 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 30613 ;; Parameters:    Size  Location     Type
 30614 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30615 ;;		 -> INT0_DefaultInterruptHandler(1), 
 30616 ;; Auto vars:     Size  Location     Type
 30617 ;;		None
 30618 ;; Return value:  Size  Location     Type
 30619 ;;                  1  [STACK] void 
 30620 ;; Registers used:
 30621 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30622 ;; Tracked objects:
 30623 ;;		On entry : 3F/39
 30624 ;;		On exit  : 0/0
 30625 ;;		Unchanged: 0/0
 30626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30631 ;;Total ram usage:        0 bytes
 30632 ;; Hardware stack levels used:    1
 30633 ;; Hardware stack levels required when called:   15
 30634 ;; This function calls:
 30635 ;;		Nothing
 30636 ;; This function is called by:
 30637 ;;		_EXT_INT_Initialize
 30638 ;; This function uses a reentrant model
 30639 ;;
 30640                           
 30641                           	psect	text129
 30642  01B466                     __ptext129:
 30643                           	opt callstack 0
 30644  01B466                     _INT0_SetInterruptHandler:
 30645                           	opt callstack 13
 30646                           
 30647                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 30648                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30649                           
 30650                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30651                           ;incstack = 0
 30652  01B466  50E1               	movf	fsr1l,w,c
 30653  01B468  0FFD               	addlw	-3
 30654  01B46A  6ED9               	movwf	fsr2l,c
 30655  01B46C  50E2               	movf	fsr1h,w,c
 30656  01B46E  6EDA               	movwf	fsr2h,c
 30657  01B470  0EFF               	movlw	255
 30658  01B472  22DA               	addwfc	fsr2h,f,c
 30659  01B474  006F FF78  F007    	movff	postinc2,_INT0_InterruptHandler
 30660  01B47A  006F FF78  F008    	movff	postinc2,_INT0_InterruptHandler+1
 30661  01B480  006F FF74  F009    	movff	postdec2,_INT0_InterruptHandler+2
 30662                           
 30663                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30664  01B486  52E5               	movf	postdec1,f,c
 30665  01B488  52E5               	movf	postdec1,f,c
 30666  01B48A  52E5               	movf	postdec1,f,c
 30667  01B48C  0012               	return		;funcret
 30668  01B48E                     __end_of_INT0_SetInterruptHandler:
 30669                           	opt callstack 0
 30670                           
 30671 ;; *************** function _DMA2_Initialize *****************
 30672 ;; Defined at:
 30673 ;;		line 61 in file "mcc_generated_files/dma2.c"
 30674 ;; Parameters:    Size  Location     Type
 30675 ;;		None
 30676 ;; Auto vars:     Size  Location     Type
 30677 ;;		None
 30678 ;; Return value:  Size  Location     Type
 30679 ;;                  1  [STACK] void 
 30680 ;; Registers used:
 30681 ;;		wreg, status,2
 30682 ;; Tracked objects:
 30683 ;;		On entry : 3F/3D
 30684 ;;		On exit  : 3F/3B
 30685 ;;		Unchanged: 0/0
 30686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30691 ;;Total ram usage:        0 bytes
 30692 ;; Hardware stack levels used:    1
 30693 ;; Hardware stack levels required when called:   15
 30694 ;; This function calls:
 30695 ;;		Nothing
 30696 ;; This function is called by:
 30697 ;;		_SYSTEM_Initialize
 30698 ;; This function uses a reentrant model
 30699 ;;
 30700                           
 30701                           	psect	text130
 30702  01AA10                     __ptext130:
 30703                           	opt callstack 0
 30704  01AA10                     _DMA2_Initialize:
 30705                           	opt callstack 14
 30706                           
 30707                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 30708                           
 30709                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30710                           ;incstack = 0
 30711  01AA10  0E00               	movlw	0
 30712  01AA12  013B               	movlb	59	; () banked
 30713  01AA14  6FD9               	movwf	217,b	;volatile
 30714  01AA16  0E10               	movlw	16
 30715  01AA18  6FDA               	movwf	218,b	;volatile
 30716  01AA1A  0E00               	movlw	0
 30717  01AA1C  6FDB               	movwf	219,b	;volatile
 30718                           
 30719                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 30720  01AA1E  0E3F               	movlw	63
 30721  01AA20  6FD1               	movwf	209,b	;volatile
 30722  01AA22  0EBB               	movlw	187
 30723  01AA24  6FD0               	movwf	208,b	;volatile
 30724                           
 30725                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 30726  01AA26  0E03               	movlw	3
 30727  01AA28  6FDD               	movwf	221,b	;volatile
 30728                           
 30729                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 30730  01AA2A  0E00               	movlw	0
 30731  01AA2C  6FD8               	movwf	216,b	;volatile
 30732  01AA2E  0E01               	movlw	1
 30733  01AA30  6FD7               	movwf	215,b	;volatile
 30734                           
 30735                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 30736  01AA32  0E00               	movlw	0
 30737  01AA34  6FCF               	movwf	207,b	;volatile
 30738  01AA36  0E01               	movlw	1
 30739  01AA38  6FCE               	movwf	206,b	;volatile
 30740                           
 30741                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 30742  01AA3A  0E1C               	movlw	28
 30743  01AA3C  6FDF               	movwf	223,b	;volatile
 30744                           
 30745                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 30746  01AA3E  0E3D               	movlw	61
 30747  01AA40  6FDE               	movwf	222,b	;volatile
 30748                           
 30749                           ; BSR set to: 59
 30750                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 30751  01AA42  0139               	movlb	57	; () banked
 30752  01AA44  97A5               	bcf	165,3,b	;volatile
 30753                           
 30754                           ; BSR set to: 57
 30755                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 30756  01AA46  95A5               	bcf	165,2,b	;volatile
 30757                           
 30758                           ; BSR set to: 57
 30759                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 30760  01AA48  9BA5               	bcf	165,5,b	;volatile
 30761                           
 30762                           ; BSR set to: 57
 30763                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 30764  01AA4A  99A5               	bcf	165,4,b	;volatile
 30765                           
 30766                           ; BSR set to: 57
 30767                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 30768  01AA4C  9795               	bcf	149,3,b	;volatile
 30769                           
 30770                           ; BSR set to: 57
 30771                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 30772  01AA4E  9595               	bcf	149,2,b	;volatile
 30773                           
 30774                           ; BSR set to: 57
 30775                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 30776  01AA50  9B95               	bcf	149,5,b	;volatile
 30777                           
 30778                           ; BSR set to: 57
 30779                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 30780  01AA52  9995               	bcf	149,4,b	;volatile
 30781  01AA54  9ED2               	bcf	16338,7,c	;# 
 30782  01AA56  0139               	banksel	14831	;# 
 30783  01AA58  0E55               	movlw	85	;# 
 30784  01AA5A  6FEF               	movwf	14831,b	;# 
 30785  01AA5C  0EAA               	movlw	170	;# 
 30786  01AA5E  6FEF               	movwf	14831,b	;# 
 30787  01AA60  81EF               	bsf	14831,0,b	;# 
 30788  01AA62  8ED2               	bsf	16338,7,c	;# 
 30789                           
 30790                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 30791  01AA64  013B               	movlb	59	; () banked
 30792  01AA66  6BDC               	clrf	220,b	;volatile
 30793                           
 30794                           ; BSR set to: 59
 30795                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30796  01AA68  0012               	return		;funcret
 30797  01AA6A                     __end_of_DMA2_Initialize:
 30798                           	opt callstack 0
 30799                           
 30800 ;; *************** function _DMA1_Initialize *****************
 30801 ;; Defined at:
 30802 ;;		line 86 in file "mcc_generated_files/dma1.c"
 30803 ;; Parameters:    Size  Location     Type
 30804 ;;		None
 30805 ;; Auto vars:     Size  Location     Type
 30806 ;;		None
 30807 ;; Return value:  Size  Location     Type
 30808 ;;                  1  [STACK] void 
 30809 ;; Registers used:
 30810 ;;		wreg, status,2
 30811 ;; Tracked objects:
 30812 ;;		On entry : 3F/3B
 30813 ;;		On exit  : 3F/3B
 30814 ;;		Unchanged: 0/0
 30815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30820 ;;Total ram usage:        0 bytes
 30821 ;; Hardware stack levels used:    1
 30822 ;; Hardware stack levels required when called:   15
 30823 ;; This function calls:
 30824 ;;		Nothing
 30825 ;; This function is called by:
 30826 ;;		_SYSTEM_Initialize
 30827 ;; This function uses a reentrant model
 30828 ;;
 30829                           
 30830                           	psect	text131
 30831  01A68A                     __ptext131:
 30832                           	opt callstack 0
 30833  01A68A                     _DMA1_Initialize:
 30834                           	opt callstack 14
 30835                           
 30836                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 30837                           
 30838                           ; BSR set to: 59
 30839                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30840                           ;incstack = 0
 30841  01A68A  0E00               	movlw	0
 30842  01A68C  013B               	movlb	59	; () banked
 30843  01A68E  6FF9               	movwf	249,b	;volatile
 30844  01A690  0E10               	movlw	16
 30845  01A692  6FFA               	movwf	250,b	;volatile
 30846  01A694  0E00               	movlw	0
 30847  01A696  6FFB               	movwf	251,b	;volatile
 30848                           
 30849                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 30850  01A698  0E3D               	movlw	61
 30851  01A69A  6FF1               	movwf	241,b	;volatile
 30852  01A69C  0E11               	movlw	17
 30853  01A69E  6FF0               	movwf	240,b	;volatile
 30854                           
 30855                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 30856  01A6A0  0E03               	movlw	3
 30857  01A6A2  6FFD               	movwf	253,b	;volatile
 30858                           
 30859                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 30860  01A6A4  0E00               	movlw	0
 30861  01A6A6  6FF8               	movwf	248,b	;volatile
 30862  01A6A8  0E01               	movlw	1
 30863  01A6AA  6FF7               	movwf	247,b	;volatile
 30864                           
 30865                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 30866  01A6AC  0E00               	movlw	0
 30867  01A6AE  6FEF               	movwf	239,b	;volatile
 30868  01A6B0  0E01               	movlw	1
 30869  01A6B2  6FEE               	movwf	238,b	;volatile
 30870                           
 30871                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 30872  01A6B4  0E15               	movlw	21
 30873  01A6B6  6FFF               	movwf	255,b	;volatile
 30874                           
 30875                           ; BSR set to: 59
 30876                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 30877  01A6B8  6BFE               	clrf	254,b	;volatile
 30878                           
 30879                           ; BSR set to: 59
 30880                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 30881  01A6BA  0139               	movlb	57	; () banked
 30882  01A6BC  93A2               	bcf	162,1,b	;volatile
 30883                           
 30884                           ; BSR set to: 57
 30885                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 30886  01A6BE  91A2               	bcf	162,0,b	;volatile
 30887                           
 30888                           ; BSR set to: 57
 30889                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 30890  01A6C0  97A2               	bcf	162,3,b	;volatile
 30891                           
 30892                           ; BSR set to: 57
 30893                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 30894  01A6C2  95A2               	bcf	162,2,b	;volatile
 30895                           
 30896                           ; BSR set to: 57
 30897                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 30898  01A6C4  8392               	bsf	146,1,b	;volatile
 30899                           
 30900                           ; BSR set to: 57
 30901                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 30902  01A6C6  8192               	bsf	146,0,b	;volatile
 30903                           
 30904                           ; BSR set to: 57
 30905                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 30906  01A6C8  8792               	bsf	146,3,b	;volatile
 30907                           
 30908                           ; BSR set to: 57
 30909                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 30910  01A6CA  8592               	bsf	146,2,b	;volatile
 30911                           
 30912                           ; BSR set to: 57
 30913                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 30914  01A6CC  6BF1               	clrf	241,b	;volatile
 30915                           
 30916                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 30917  01A6CE  0E01               	movlw	1
 30918  01A6D0  6FF2               	movwf	242,b	;volatile
 30919                           
 30920                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 30921  01A6D2  0E04               	movlw	4
 30922  01A6D4  6FF3               	movwf	243,b	;volatile
 30923                           
 30924                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 30925  01A6D6  0E02               	movlw	2
 30926  01A6D8  6FF4               	movwf	244,b	;volatile
 30927                           
 30928                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 30929  01A6DA  0E03               	movlw	3
 30930  01A6DC  6FF7               	movwf	247,b	;volatile
 30931  01A6DE  9ED2               	bcf	16338,7,c	;# 
 30932  01A6E0  0139               	banksel	14831	;# 
 30933  01A6E2  0E55               	movlw	85	;# 
 30934  01A6E4  6FEF               	movwf	14831,b	;# 
 30935  01A6E6  0EAA               	movlw	170	;# 
 30936  01A6E8  6FEF               	movwf	14831,b	;# 
 30937  01A6EA  81EF               	bsf	14831,0,b	;# 
 30938  01A6EC  8ED2               	bsf	16338,7,c	;# 
 30939                           
 30940                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 30941  01A6EE  013B               	movlb	59	; () banked
 30942  01A6F0  6BFC               	clrf	252,b	;volatile
 30943                           
 30944                           ; BSR set to: 59
 30945                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30946  01A6F2  0012               	return		;funcret
 30947  01A6F4                     __end_of_DMA1_Initialize:
 30948                           	opt callstack 0
 30949                           
 30950 ;; *************** function _CLKREF_Initialize *****************
 30951 ;; Defined at:
 30952 ;;		line 58 in file "mcc_generated_files/clkref.c"
 30953 ;; Parameters:    Size  Location     Type
 30954 ;;		None
 30955 ;; Auto vars:     Size  Location     Type
 30956 ;;		None
 30957 ;; Return value:  Size  Location     Type
 30958 ;;                  1  [STACK] void 
 30959 ;; Registers used:
 30960 ;;		wreg, status,2
 30961 ;; Tracked objects:
 30962 ;;		On entry : 3F/3B
 30963 ;;		On exit  : 3F/3C
 30964 ;;		Unchanged: 0/0
 30965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30970 ;;Total ram usage:        0 bytes
 30971 ;; Hardware stack levels used:    1
 30972 ;; Hardware stack levels required when called:   15
 30973 ;; This function calls:
 30974 ;;		Nothing
 30975 ;; This function is called by:
 30976 ;;		_SYSTEM_Initialize
 30977 ;; This function uses a reentrant model
 30978 ;;
 30979                           
 30980                           	psect	text132
 30981  01B8B6                     __ptext132:
 30982                           	opt callstack 0
 30983  01B8B6                     _CLKREF_Initialize:
 30984                           	opt callstack 14
 30985                           
 30986                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 30987                           
 30988                           ; BSR set to: 59
 30989                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30990                           ;incstack = 0
 30991  01B8B6  013C               	movlb	60	; () banked
 30992  01B8B8  6BE6               	clrf	230,b	;volatile
 30993                           
 30994                           ; BSR set to: 60
 30995                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 30996  01B8BA  0E94               	movlw	148
 30997  01B8BC  6FE5               	movwf	229,b	;volatile
 30998                           
 30999                           ; BSR set to: 60
 31000                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 31001  01B8BE  0012               	return		;funcret
 31002  01B8C0                     __end_of_CLKREF_Initialize:
 31003                           	opt callstack 0
 31004                           
 31005 ;; *************** function _ADCC_Initialize *****************
 31006 ;; Defined at:
 31007 ;;		line 65 in file "mcc_generated_files/adcc.c"
 31008 ;; Parameters:    Size  Location     Type
 31009 ;;		None
 31010 ;; Auto vars:     Size  Location     Type
 31011 ;;		None
 31012 ;; Return value:  Size  Location     Type
 31013 ;;                  1  [STACK] void 
 31014 ;; Registers used:
 31015 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 31016 ;; Tracked objects:
 31017 ;;		On entry : 3F/3E
 31018 ;;		On exit  : 0/0
 31019 ;;		Unchanged: 0/0
 31020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31025 ;;Total ram usage:        0 bytes
 31026 ;; Hardware stack levels used:    1
 31027 ;; Hardware stack levels required when called:   16
 31028 ;; This function calls:
 31029 ;;		_ADCC_SetADIInterruptHandler
 31030 ;;		_ADCC_SetADTIInterruptHandler
 31031 ;; This function is called by:
 31032 ;;		_SYSTEM_Initialize
 31033 ;; This function uses a reentrant model
 31034 ;;
 31035                           
 31036                           	psect	text133
 31037  01A6F4                     __ptext133:
 31038                           	opt callstack 0
 31039  01A6F4                     _ADCC_Initialize:
 31040                           	opt callstack 13
 31041                           
 31042                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 31043                           
 31044                           ; BSR set to: 60
 31045                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31046                           ;incstack = 0
 31047  01A6F4  013E               	movlb	62	; () banked
 31048  01A6F6  6BDE               	clrf	222,b	;volatile
 31049                           
 31050                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 31051  01A6F8  6BDF               	clrf	223,b	;volatile
 31052                           
 31053                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 31054  01A6FA  6BE0               	clrf	224,b	;volatile
 31055                           
 31056                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 31057  01A6FC  6BE1               	clrf	225,b	;volatile
 31058                           
 31059                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 31060  01A6FE  6BE4               	clrf	228,b	;volatile
 31061                           
 31062                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 31063  01A700  6BE5               	clrf	229,b	;volatile
 31064                           
 31065                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 31066  01A702  6BEA               	clrf	234,b	;volatile
 31067                           
 31068                           ; BSR set to: 62
 31069                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 31070  01A704  0E40               	movlw	64
 31071  01A706  6FEC               	movwf	236,b	;volatile
 31072                           
 31073                           ; BSR set to: 62
 31074                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 31075  01A708  6BF1               	clrf	241,b	;volatile
 31076                           
 31077                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 31078  01A70A  0E20               	movlw	32
 31079  01A70C  6FF3               	movwf	243,b	;volatile
 31080                           
 31081                           ; BSR set to: 62
 31082                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 31083  01A70E  6BF4               	clrf	244,b	;volatile
 31084                           
 31085                           ; BSR set to: 62
 31086                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 31087  01A710  6BF5               	clrf	245,b	;volatile
 31088                           
 31089                           ; BSR set to: 62
 31090                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 31091  01A712  6BF6               	clrf	246,b	;volatile
 31092                           
 31093                           ; BSR set to: 62
 31094                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 31095  01A714  6BF7               	clrf	247,b	;volatile
 31096                           
 31097                           ; BSR set to: 62
 31098                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 31099  01A716  6BF9               	clrf	249,b	;volatile
 31100                           
 31101                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 31102  01A718  0E5B               	movlw	91
 31103  01A71A  6FFA               	movwf	250,b	;volatile
 31104                           
 31105                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 31106  01A71C  0E27               	movlw	39
 31107  01A71E  6FFB               	movwf	251,b	;volatile
 31108                           
 31109                           ; BSR set to: 62
 31110                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 31111  01A720  6BFC               	clrf	252,b	;volatile
 31112                           
 31113                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 31114  01A722  0E02               	movlw	2
 31115  01A724  6FFD               	movwf	253,b	;volatile
 31116                           
 31117                           ; BSR set to: 62
 31118                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 31119  01A726  6BFE               	clrf	254,b	;volatile
 31120                           
 31121                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 31122  01A728  0E07               	movlw	7
 31123  01A72A  6FFF               	movwf	255,b	;volatile
 31124                           
 31125                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 31126  01A72C  0E84               	movlw	132
 31127  01A72E  6FF8               	movwf	248,b	;volatile
 31128                           
 31129                           ; BSR set to: 62
 31130                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 31131  01A730  0139               	movlb	57	; () banked
 31132  01A732  95A1               	bcf	161,2,b	;volatile
 31133                           
 31134                           ; BSR set to: 57
 31135                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 31136  01A734  8591               	bsf	145,2,b	;volatile
 31137                           
 31138                           ; BSR set to: 57
 31139                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 31140  01A736  0E3C               	movlw	low _ADCC_DefaultInterruptHandler
 31141  01A738  6EE6               	movwf	postinc1,c
 31142  01A73A  0EB9               	movlw	high _ADCC_DefaultInterruptHandler
 31143  01A73C  6EE6               	movwf	postinc1,c
 31144  01A73E  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 31145  01A740  6EE6               	movwf	postinc1,c
 31146  01A742  EC5B  F0DA         	call	_ADCC_SetADIInterruptHandler	;wreg free
 31147                           
 31148                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 31149  01A746  0139               	movlb	57	; () banked
 31150  01A748  97A1               	bcf	161,3,b	;volatile
 31151                           
 31152                           ; BSR set to: 57
 31153                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 31154  01A74A  8791               	bsf	145,3,b	;volatile
 31155                           
 31156                           ; BSR set to: 57
 31157                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 31158  01A74C  0E3C               	movlw	low _ADCC_DefaultInterruptHandler
 31159  01A74E  6EE6               	movwf	postinc1,c
 31160  01A750  0EB9               	movlw	high _ADCC_DefaultInterruptHandler
 31161  01A752  6EE6               	movwf	postinc1,c
 31162  01A754  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 31163  01A756  6EE6               	movwf	postinc1,c
 31164  01A758  EC47  F0DA         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 31165                           
 31166                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31167  01A75C  0012               	return		;funcret
 31168  01A75E                     __end_of_ADCC_Initialize:
 31169                           	opt callstack 0
 31170                           
 31171 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 31172 ;; Defined at:
 31173 ;;		line 336 in file "mcc_generated_files/adcc.c"
 31174 ;; Parameters:    Size  Location     Type
 31175 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31176 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 31177 ;; Auto vars:     Size  Location     Type
 31178 ;;		None
 31179 ;; Return value:  Size  Location     Type
 31180 ;;                  1  [STACK] void 
 31181 ;; Registers used:
 31182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31183 ;; Tracked objects:
 31184 ;;		On entry : 0/0
 31185 ;;		On exit  : 0/0
 31186 ;;		Unchanged: 0/0
 31187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31192 ;;Total ram usage:        0 bytes
 31193 ;; Hardware stack levels used:    1
 31194 ;; Hardware stack levels required when called:   15
 31195 ;; This function calls:
 31196 ;;		Nothing
 31197 ;; This function is called by:
 31198 ;;		_ADCC_Initialize
 31199 ;;		_start_adc_scan
 31200 ;; This function uses a reentrant model
 31201 ;;
 31202                           
 31203                           	psect	text134
 31204  01B48E                     __ptext134:
 31205                           	opt callstack 0
 31206  01B48E                     _ADCC_SetADTIInterruptHandler:
 31207                           	opt callstack 14
 31208                           
 31209                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 31210                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31211                           
 31212                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31213                           ;incstack = 0
 31214  01B48E  50E1               	movf	fsr1l,w,c
 31215  01B490  0FFD               	addlw	-3
 31216  01B492  6ED9               	movwf	fsr2l,c
 31217  01B494  50E2               	movf	fsr1h,w,c
 31218  01B496  6EDA               	movwf	fsr2h,c
 31219  01B498  0EFF               	movlw	255
 31220  01B49A  22DA               	addwfc	fsr2h,f,c
 31221  01B49C  006F FF78  F0A3    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 31222  01B4A2  006F FF78  F0A4    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 31223  01B4A8  006F FF74  F0A5    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 31224                           
 31225                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 31226  01B4AE  52E5               	movf	postdec1,f,c
 31227  01B4B0  52E5               	movf	postdec1,f,c
 31228  01B4B2  52E5               	movf	postdec1,f,c
 31229  01B4B4  0012               	return		;funcret
 31230  01B4B6                     __end_of_ADCC_SetADTIInterruptHandler:
 31231                           	opt callstack 0
 31232                           
 31233 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 31234 ;; Defined at:
 31235 ;;		line 323 in file "mcc_generated_files/adcc.c"
 31236 ;; Parameters:    Size  Location     Type
 31237 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31238 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 31239 ;; Auto vars:     Size  Location     Type
 31240 ;;		None
 31241 ;; Return value:  Size  Location     Type
 31242 ;;                  1  [STACK] void 
 31243 ;; Registers used:
 31244 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31245 ;; Tracked objects:
 31246 ;;		On entry : 6/0
 31247 ;;		On exit  : 0/0
 31248 ;;		Unchanged: 0/0
 31249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31254 ;;Total ram usage:        0 bytes
 31255 ;; Hardware stack levels used:    1
 31256 ;; Hardware stack levels required when called:   15
 31257 ;; This function calls:
 31258 ;;		Nothing
 31259 ;; This function is called by:
 31260 ;;		_ADCC_Initialize
 31261 ;;		_start_adc_scan
 31262 ;; This function uses a reentrant model
 31263 ;;
 31264                           
 31265                           	psect	text135
 31266  01B4B6                     __ptext135:
 31267                           	opt callstack 0
 31268  01B4B6                     _ADCC_SetADIInterruptHandler:
 31269                           	opt callstack 14
 31270                           
 31271                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 31272                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31273                           
 31274                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31275                           ;incstack = 0
 31276  01B4B6  50E1               	movf	fsr1l,w,c
 31277  01B4B8  0FFD               	addlw	-3
 31278  01B4BA  6ED9               	movwf	fsr2l,c
 31279  01B4BC  50E2               	movf	fsr1h,w,c
 31280  01B4BE  6EDA               	movwf	fsr2h,c
 31281  01B4C0  0EFF               	movlw	255
 31282  01B4C2  22DA               	addwfc	fsr2h,f,c
 31283  01B4C4  006F FF78  F0A6    	movff	postinc2,_ADCC_ADI_InterruptHandler
 31284  01B4CA  006F FF78  F0A7    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 31285  01B4D0  006F FF74  F0A8    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 31286                           
 31287                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 31288  01B4D6  52E5               	movf	postdec1,f,c
 31289  01B4D8  52E5               	movf	postdec1,f,c
 31290  01B4DA  52E5               	movf	postdec1,f,c
 31291  01B4DC  0012               	return		;funcret
 31292  01B4DE                     __end_of_ADCC_SetADIInterruptHandler:
 31293                           	opt callstack 0
 31294                           
 31295 ;; *************** function _INT1_ISR *****************
 31296 ;; Defined at:
 31297 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 31298 ;; Parameters:    Size  Location     Type
 31299 ;;		None
 31300 ;; Auto vars:     Size  Location     Type
 31301 ;;		None
 31302 ;; Return value:  Size  Location     Type
 31303 ;;                  1    wreg      void 
 31304 ;; Registers used:
 31305 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 31306 ;; Tracked objects:
 31307 ;;		On entry : 0/0
 31308 ;;		On exit  : 0/0
 31309 ;;		Unchanged: 0/0
 31310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31313 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31314 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31315 ;;Total ram usage:        4 bytes
 31316 ;; Hardware stack levels used:    1
 31317 ;; Hardware stack levels required when called:    5
 31318 ;; This function calls:
 31319 ;;		_INT1_CallBack
 31320 ;; This function is called by:
 31321 ;;		Interrupt level 1
 31322 ;; This function uses a non-reentrant model
 31323 ;;
 31324                           
 31325                           	psect	text136
 31326  01AF24                     __ptext136:
 31327                           	opt callstack 0
 31328  01AF24                     _INT1_ISR:
 31329                           	opt callstack 12
 31330                           
 31331                           ;incstack = 0
 31332  01AF24  006F FF60  F04C    	movff	status,??_INT1_ISR
 31333  01AF2A  0060  F098  F04D   	movff	btemp,??_INT1_ISR+1
 31334  01AF30  0060  F0C0  F04E   	movff	btemp+10,??_INT1_ISR+2
 31335  01AF36  0060  F0C4  F04F   	movff	btemp+11,??_INT1_ISR+3
 31336  01AF3C  EE16  F0A1         	lfsr	1,___intlo_sp
 31337                           
 31338                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 31339  01AF40  0139               	movlb	57	; () banked
 31340  01AF42  91A5               	bcf	165,0,b	;volatile
 31341                           
 31342                           ; BSR set to: 57
 31343                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 31344  01AF44  EC16  F0DB         	call	_INT1_CallBack	;wreg free
 31345  01AF48  0060  F13C  F031   	movff	??_INT1_ISR+3,btemp+11
 31346  01AF4E  0060  F138  F030   	movff	??_INT1_ISR+2,btemp+10
 31347  01AF54  0060  F134  F026   	movff	??_INT1_ISR+1,btemp
 31348  01AF5A  0060  F133  FFD8   	movff	??_INT1_ISR,status
 31349  01AF60  0011               	retfie		f
 31350  01AF62                     __end_of_INT1_ISR:
 31351                           	opt callstack 0
 31352                           
 31353 ;; *************** function _INT1_CallBack *****************
 31354 ;; Defined at:
 31355 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 31356 ;; Parameters:    Size  Location     Type
 31357 ;;		None
 31358 ;; Auto vars:     Size  Location     Type
 31359 ;;		None
 31360 ;; Return value:  Size  Location     Type
 31361 ;;                  1  [STACK] void 
 31362 ;; Registers used:
 31363 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 31364 ;; Tracked objects:
 31365 ;;		On entry : 3F/39
 31366 ;;		On exit  : 0/0
 31367 ;;		Unchanged: 0/0
 31368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31373 ;;Total ram usage:        0 bytes
 31374 ;; Hardware stack levels used:    1
 31375 ;; Hardware stack levels required when called:    4
 31376 ;; This function calls:
 31377 ;;		Absolute function
 31378 ;;		_INT1_DefaultInterruptHandler
 31379 ;;		_switch_handler
 31380 ;; This function is called by:
 31381 ;;		_INT1_ISR
 31382 ;; This function uses a reentrant model
 31383 ;;
 31384                           
 31385                           	psect	text137
 31386  01B62C                     __ptext137:
 31387                           	opt callstack 0
 31388  01B62C                     _INT1_CallBack:
 31389                           	opt callstack 12
 31390                           
 31391                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 31392                           
 31393                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31394                           ;incstack = 0
 31395  01B62C  5004               	movf	_INT1_InterruptHandler^0,w,c
 31396  01B62E  1005               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 31397  01B630  1006               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
 31398  01B632  B4D8               	btfsc	status,2,c
 31399  01B634  0012               	return	
 31400                           
 31401                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 31402  01B636  D801               	call	u985_28
 31403  01B638  0012               	return	
 31404  01B63A                     u985_28:
 31405  01B63A  0005               	push	
 31406  01B63C  6EFA               	movwf	pclath,c
 31407  01B63E  5004               	movf	_INT1_InterruptHandler^0,w,c
 31408  01B640  6EFD               	movwf	tosl,c
 31409  01B642  5005               	movf	(_INT1_InterruptHandler+1)^0,w,c
 31410  01B644  6EFE               	movwf	tosh,c
 31411  01B646  5006               	movf	(_INT1_InterruptHandler+2)^0,w,c
 31412  01B648  6EFF               	movwf	tosu,c
 31413  01B64A  50FA               	movf	pclath,w,c
 31414  01B64C  0012               	return		;indir
 31415  01B64E                     __end_of_INT1_CallBack:
 31416                           	opt callstack 0
 31417                           
 31418 ;; *************** function _INT1_DefaultInterruptHandler *****************
 31419 ;; Defined at:
 31420 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 31421 ;; Parameters:    Size  Location     Type
 31422 ;;		None
 31423 ;; Auto vars:     Size  Location     Type
 31424 ;;		None
 31425 ;; Return value:  Size  Location     Type
 31426 ;;                  1  [STACK] void 
 31427 ;; Registers used:
 31428 ;;		None
 31429 ;; Tracked objects:
 31430 ;;		On entry : 0/39
 31431 ;;		On exit  : 0/0
 31432 ;;		Unchanged: 0/0
 31433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31438 ;;Total ram usage:        0 bytes
 31439 ;; Hardware stack levels used:    1
 31440 ;; Hardware stack levels required when called:    3
 31441 ;; This function calls:
 31442 ;;		Nothing
 31443 ;; This function is called by:
 31444 ;;		_EXT_INT_Initialize
 31445 ;;		_INT1_CallBack
 31446 ;; This function uses a reentrant model
 31447 ;;
 31448                           
 31449                           	psect	text138
 31450  01B936                     __ptext138:
 31451                           	opt callstack 0
 31452  01B936                     _INT1_DefaultInterruptHandler:
 31453                           	opt callstack 12
 31454                           
 31455                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 31456                           
 31457                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31458                           ;incstack = 0
 31459  01B936  0012               	return		;funcret
 31460  01B938                     __end_of_INT1_DefaultInterruptHandler:
 31461                           	opt callstack 0
 31462                           
 31463 ;; *************** function _switch_handler *****************
 31464 ;; Defined at:
 31465 ;;		line 58 in file "dio.c"
 31466 ;; Parameters:    Size  Location     Type
 31467 ;;		None
 31468 ;; Auto vars:     Size  Location     Type
 31469 ;;  i               1  [STACK] unsigned char 
 31470 ;;  sw_value        1  [STACK] unsigned char 
 31471 ;; Return value:  Size  Location     Type
 31472 ;;                  1  [STACK] void 
 31473 ;; Registers used:
 31474 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 31475 ;; Tracked objects:
 31476 ;;		On entry : 0/39
 31477 ;;		On exit  : 0/0
 31478 ;;		Unchanged: 0/0
 31479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31484 ;;Total ram usage:        0 bytes
 31485 ;; Hardware stack levels used:    1
 31486 ;; Hardware stack levels required when called:    3
 31487 ;; This function calls:
 31488 ;;		Nothing
 31489 ;; This function is called by:
 31490 ;;		_start_switch_handler
 31491 ;;		_INT1_CallBack
 31492 ;; This function uses a reentrant model
 31493 ;;
 31494                           
 31495                           	psect	text139
 31496  018CA8                     __ptext139:
 31497                           	opt callstack 0
 31498  018CA8                     _switch_handler:
 31499                           	opt callstack 0
 31500                           
 31501                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31502  018CA8  52E6               	movf	postinc1,f,c
 31503  018CAA  52E6               	movf	postinc1,f,c
 31504                           
 31505                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 31506                           ;stkvar	_i @ sp[(-2)+0]
 31507                           
 31508                           ;incstack = 0
 31509  018CAC  0EFE               	movlw	-2
 31510  018CAE  6AE3               	clrf	plusw1,c
 31511  018CB0  9EBD               	bcf	189,7,c	;volatile
 31512  018CB2  9ABF               	bcf	191,5,c	;volatile
 31513                           
 31514                           ;dio.c: 73:  __nop();
 31515  018CB4  F000               	nop	
 31516                           
 31517                           ;dio.c: 74:  __nop();
 31518  018CB6  F000               	nop	
 31519                           
 31520                           ;dio.c: 75:  __nop();
 31521  018CB8  F000               	nop	
 31522  018CBA  D019               	goto	l10405
 31523  018CBC                     l10393:
 31524                           
 31525                           ;dio.c: 80:    sw_value = PORTFbits.RF3;
 31526  018CBC  A6CF               	btfss	207,3,c	;volatile
 31527  018CBE  D011               	goto	u961_20
 31528  018CC0  D00D               	goto	u961_21
 31529  018CC2                     u958_28:
 31530                           
 31531                           ;stkvar	_sw_value @ sp[(-2)+1]
 31532  018CC2  0EFF               	movlw	-1
 31533  018CC4  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 31534                           
 31535                           ;dio.c: 81:    break;
 31536  018CCA  D027               	goto	l10407
 31537  018CCC                     l10395:
 31538                           
 31539                           ;dio.c: 83:    sw_value = PORTFbits.RF2;
 31540  018CCC  A4CF               	btfss	207,2,c	;volatile
 31541  018CCE  D009               	goto	u961_20
 31542  018CD0  D005               	goto	u961_21
 31543  018CD2                     l10397:
 31544                           
 31545                           ;dio.c: 86:    sw_value = PORTFbits.RF1;
 31546  018CD2  A2CF               	btfss	207,1,c	;volatile
 31547  018CD4  D006               	goto	u961_20
 31548  018CD6  D002               	goto	u961_21
 31549  018CD8                     l10399:
 31550                           
 31551                           ;dio.c: 89:    sw_value = PORTFbits.RF0;
 31552  018CD8  A0CF               	btfss	207,0,c	;volatile
 31553  018CDA  D003               	goto	u961_20
 31554  018CDC                     u961_21:
 31555  018CDC  6A31               	clrf	(btemp+11)^0,c
 31556  018CDE  2A31               	incf	(btemp+11)^0,f,c
 31557  018CE0  D7F0               	goto	u958_28
 31558  018CE2                     u961_20:
 31559  018CE2  6A31               	clrf	(btemp+11)^0,c
 31560  018CE4  D7EE               	goto	u958_28
 31561  018CE6                     l10401:
 31562                           
 31563                           ;dio.c: 92:    sw_value = 1;
 31564                           ;stkvar	_sw_value @ sp[(-2)+1]
 31565  018CE6  0EFF               	movlw	-1
 31566  018CE8  6AE3               	clrf	plusw1,c
 31567  018CEA  2AE3               	incf	plusw1,f,c
 31568                           
 31569                           ;dio.c: 93:    break;
 31570  018CEC  D016               	goto	l10407
 31571  018CEE                     l10405:
 31572                           
 31573                           ;stkvar	_i @ sp[(-2)+0]
 31574  018CEE  0EFE               	movlw	-2
 31575  018CF0  50E3               	movf	plusw1,w,c
 31576  018CF2  6E30               	movwf	(btemp+10)^0,c
 31577  018CF4  6A31               	clrf	(btemp+11)^0,c
 31578                           
 31579                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 31580                           ; Switch size 1, requested type "simple"
 31581                           ; Number of cases is 1, Range of values is 0 to 0
 31582                           ; switch strategies available:
 31583                           ; Name         Instructions Cycles
 31584                           ; simple_byte            4     3 (average)
 31585                           ;	Chosen strategy is simple_byte
 31586  018CF6  5031               	movf	(btemp+11)^0,w,c
 31587  018CF8  0A00               	xorlw	0	; case 0
 31588  018CFA  A4D8               	btfss	status,2,c
 31589  018CFC  D7F4               	goto	l10401
 31590                           
 31591                           ; Switch size 1, requested type "simple"
 31592                           ; Number of cases is 4, Range of values is 0 to 3
 31593                           ; switch strategies available:
 31594                           ; Name         Instructions Cycles
 31595                           ; simple_byte           13     7 (average)
 31596                           ;	Chosen strategy is simple_byte
 31597  018CFE  5030               	movf	(btemp+10)^0,w,c
 31598  018D00  0A00               	xorlw	0	; case 0
 31599  018D02  B4D8               	btfsc	status,2,c
 31600  018D04  D7E9               	goto	l10399
 31601  018D06  0A01               	xorlw	1	; case 1
 31602  018D08  B4D8               	btfsc	status,2,c
 31603  018D0A  D7E3               	goto	l10397
 31604  018D0C  0A03               	xorlw	3	; case 2
 31605  018D0E  B4D8               	btfsc	status,2,c
 31606  018D10  D7DD               	goto	l10395
 31607  018D12  0A01               	xorlw	1	; case 3
 31608  018D14  B4D8               	btfsc	status,2,c
 31609  018D16  D7D2               	goto	l10393
 31610  018D18  D7E6               	goto	l10401
 31611  018D1A                     l10407:
 31612                           
 31613                           ;dio.c: 97:   if (sw_value) {
 31614                           ;stkvar	_sw_value @ sp[(-2)+1]
 31615  018D1A  0EFF               	movlw	-1
 31616  018D1C  50E3               	movf	plusw1,w,c
 31617  018D1E  B4D8               	btfsc	status,2,c
 31618  018D20  D018               	goto	l10413
 31619                           
 31620                           ;dio.c: 98:    if (S.button[i].sw == SW_ON) {
 31621                           ;stkvar	_i @ sp[(-2)+0]
 31622  018D22  0EFE               	movlw	-2
 31623  018D24  50E3               	movf	plusw1,w,c
 31624  018D26  0D05               	mullw	5
 31625  018D28  0EC6               	movlw	low _S
 31626  018D2A  24F3               	addwf	243,w,c
 31627  018D2C  6ED9               	movwf	fsr2l,c
 31628  018D2E  0E02               	movlw	high _S
 31629  018D30  20F4               	addwfc	prodh,w,c
 31630  018D32  6EDA               	movwf	fsr2h,c
 31631  018D34  04DE               	decf	postinc2,w,c
 31632  018D36  A4D8               	btfss	status,2,c
 31633  018D38  D049               	goto	l10421
 31634                           
 31635                           ;dio.c: 99:     S.button[i].sw = SW_OFF;
 31636                           ;stkvar	_i @ sp[(-2)+0]
 31637  018D3A  0EFE               	movlw	-2
 31638  018D3C  50E3               	movf	plusw1,w,c
 31639  018D3E  0D05               	mullw	5
 31640  018D40  0EC6               	movlw	low _S
 31641  018D42  24F3               	addwf	243,w,c
 31642  018D44  6ED9               	movwf	fsr2l,c
 31643  018D46  0E02               	movlw	high _S
 31644  018D48  20F4               	addwfc	prodh,w,c
 31645  018D4A  6EDA               	movwf	fsr2h,c
 31646  018D4C  0E00               	movlw	0
 31647  018D4E  6EDF               	movwf	indf2,c
 31648  018D50  D03D               	goto	l10421
 31649  018D52                     l10413:
 31650                           
 31651                           ;dio.c: 102:    if (S.button[i].sw == SW_OFF) {
 31652                           ;stkvar	_i @ sp[(-2)+0]
 31653  018D52  0EFE               	movlw	-2
 31654  018D54  50E3               	movf	plusw1,w,c
 31655  018D56  0D05               	mullw	5
 31656  018D58  0EC6               	movlw	low _S
 31657  018D5A  24F3               	addwf	243,w,c
 31658  018D5C  6ED9               	movwf	fsr2l,c
 31659  018D5E  0E02               	movlw	high _S
 31660  018D60  20F4               	addwfc	prodh,w,c
 31661  018D62  6EDA               	movwf	fsr2h,c
 31662  018D64  50DF               	movf	indf2,w,c
 31663  018D66  A4D8               	btfss	status,2,c
 31664  018D68  D031               	goto	l10421
 31665                           
 31666                           ;dio.c: 103:     S.button[i].sw = SW_ON;
 31667                           ;stkvar	_i @ sp[(-2)+0]
 31668  018D6A  0EFE               	movlw	-2
 31669  018D6C  50E3               	movf	plusw1,w,c
 31670  018D6E  0D05               	mullw	5
 31671  018D70  0EC6               	movlw	low _S
 31672  018D72  24F3               	addwf	243,w,c
 31673  018D74  6ED9               	movwf	fsr2l,c
 31674  018D76  0E02               	movlw	high _S
 31675  018D78  20F4               	addwfc	prodh,w,c
 31676  018D7A  6EDA               	movwf	fsr2h,c
 31677  018D7C  0E01               	movlw	1
 31678  018D7E  6EDF               	movwf	indf2,c
 31679                           
 31680                           ;dio.c: 104:     S.button[i].count = V.timerint_count;
 31681  018D80  EE20  F2C2         	lfsr	2,_V+187	;volatile
 31682                           
 31683                           ;stkvar	_i @ sp[(-2)+0]
 31684  018D84  0EFE               	movlw	-2
 31685  018D86  50E3               	movf	plusw1,w,c
 31686  018D88  0D05               	mullw	5
 31687  018D8A  0EC7               	movlw	low (_S+1)
 31688  018D8C  24F3               	addwf	243,w,c
 31689  018D8E  6EE9               	movwf	fsr0l,c
 31690  018D90  0E02               	movlw	high (_S+1)
 31691  018D92  20F4               	addwfc	prodh,w,c
 31692  018D94  6EEA               	movwf	fsr0h,c
 31693  018D96  006F FF7B FFEE     	movff	postinc2,postinc0
 31694  018D9C  006F FF7B FFEE     	movff	postinc2,postinc0
 31695  018DA2  006F FF7B FFEE     	movff	postinc2,postinc0
 31696  018DA8  006F FF7B FFEE     	movff	postinc2,postinc0
 31697                           
 31698                           ;dio.c: 105:     S.sw_bitmap |= 1 << i;
 31699                           ;stkvar	_i @ sp[(-2)+0]
 31700  018DAE  0EFE               	movlw	-2
 31701  018DB0  006F FF8C  F031    	movff	plusw1,btemp+11
 31702  018DB6  0E01               	movlw	1
 31703  018DB8  6E30               	movwf	(btemp+10)^0,c
 31704  018DBA  2A31               	incf	(btemp+11)^0,f,c
 31705  018DBC  D002               	goto	u965_24
 31706  018DBE                     u965_25:
 31707  018DBE  90D8               	bcf	status,0,c
 31708  018DC0  3630               	rlcf	(btemp+10)^0,f,c
 31709  018DC2                     u965_24:
 31710  018DC2  2E31               	decfsz	(btemp+11)^0,f,c
 31711  018DC4  D7FC               	goto	u965_25
 31712  018DC6  5030               	movf	(btemp+10)^0,w,c
 31713  018DC8  0102               	movlb	2	; () banked
 31714  018DCA  13EE               	iorwf	(_S+40)& (0+255),f,b	;volatile
 31715  018DCC                     l10421:
 31716                           
 31717                           ;dio.c: 108:  } while (++i < 4);
 31718                           ;stkvar	_i @ sp[(-2)+0]
 31719  018DCC  0EFE               	movlw	-2
 31720  018DCE  2AE3               	incf	plusw1,f,c
 31721  018DD0  0EFE               	movlw	-2
 31722  018DD2  006F FF8C  F026    	movff	plusw1,btemp
 31723  018DD8  0E03               	movlw	3
 31724  018DDA  6426               	cpfsgt	btemp^0,c
 31725  018DDC  D788               	goto	l10405
 31726                           
 31727                           ;dio.c: 117:  do { LATDbits.LATD7 = 1; } while(0);
 31728  018DDE  8EBD               	bsf	189,7,c	;volatile
 31729                           
 31730                           ;dio.c: 118:  do { LATFbits.LATF5 = 1; } while(0);
 31731  018DE0  8ABF               	bsf	191,5,c	;volatile
 31732                           
 31733                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 31734  018DE2  52E5               	movf	postdec1,f,c
 31735  018DE4  52E5               	movf	postdec1,f,c
 31736  018DE6  0012               	return		;funcret
 31737  018DE8                     __end_of_switch_handler:
 31738                           	opt callstack 0
 31739                           
 31740 ;; *************** function _TMR5_ISR *****************
 31741 ;; Defined at:
 31742 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 31743 ;; Parameters:    Size  Location     Type
 31744 ;;		None
 31745 ;; Auto vars:     Size  Location     Type
 31746 ;;		None
 31747 ;; Return value:  Size  Location     Type
 31748 ;;                  1    wreg      void 
 31749 ;; Registers used:
 31750 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 31751 ;; Tracked objects:
 31752 ;;		On entry : 0/0
 31753 ;;		On exit  : 0/0
 31754 ;;		Unchanged: 0/0
 31755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31758 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31759 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31760 ;;Total ram usage:       15 bytes
 31761 ;; Hardware stack levels used:    1
 31762 ;; Hardware stack levels required when called:    9
 31763 ;; This function calls:
 31764 ;;		_TMR5_CallBack
 31765 ;;		_TMR5_WriteTimer
 31766 ;; This function is called by:
 31767 ;;		Interrupt level 1
 31768 ;; This function uses a non-reentrant model
 31769 ;;
 31770                           
 31771                           	psect	text140
 31772  019A5C                     __ptext140:
 31773                           	opt callstack 0
 31774  019A5C                     _TMR5_ISR:
 31775                           	opt callstack 8
 31776                           
 31777                           ;incstack = 0
 31778  019A5C  006F FF60  F052    	movff	status,??_TMR5_ISR+2
 31779  019A62  0060  F098  F053   	movff	btemp,??_TMR5_ISR+3
 31780  019A68  0060  F09C  F054   	movff	btemp+1,??_TMR5_ISR+4
 31781  019A6E  0060  F0A0  F055   	movff	btemp+2,??_TMR5_ISR+5
 31782  019A74  0060  F0A4  F056   	movff	btemp+3,??_TMR5_ISR+6
 31783  019A7A  0060  F0A8  F057   	movff	btemp+4,??_TMR5_ISR+7
 31784  019A80  0060  F0AC  F058   	movff	btemp+5,??_TMR5_ISR+8
 31785  019A86  0060  F0B0  F059   	movff	btemp+6,??_TMR5_ISR+9
 31786  019A8C  0060  F0B4  F05A   	movff	btemp+7,??_TMR5_ISR+10
 31787  019A92  0060  F0B8  F05B   	movff	btemp+8,??_TMR5_ISR+11
 31788  019A98  0060  F0BC  F05C   	movff	btemp+9,??_TMR5_ISR+12
 31789  019A9E  0060  F0C0  F05D   	movff	btemp+10,??_TMR5_ISR+13
 31790  019AA4  0060  F0C4  F05E   	movff	btemp+11,??_TMR5_ISR+14
 31791  019AAA  EE16  F0A1         	lfsr	1,___intlo_sp
 31792                           
 31793                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 31794  019AAE  0139               	movlb	57	; () banked
 31795  019AB0  9DA8               	bcf	168,6,b	;volatile
 31796                           
 31797                           ; BSR set to: 57
 31798                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 31799  019AB2  0060  F05B  FFE6   	movff	_timer5ReloadVal,postinc1
 31800  019AB8  0060  F05F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 31801  019ABE  EC52  F0D7         	call	_TMR5_WriteTimer	;wreg free
 31802                           
 31803                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 31804  019AC2  0102               	movlb	2	; () banked
 31805  019AC4  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
 31806  019AC6  6E50               	movwf	??_TMR5_ISR^0,c
 31807  019AC8  6A51               	clrf	(??_TMR5_ISR+1)^0,c
 31808  019ACA  0E05               	movlw	5
 31809  019ACC  2650               	addwf	??_TMR5_ISR^0,f,c
 31810  019ACE  0E00               	movlw	0
 31811  019AD0  2251               	addwfc	(??_TMR5_ISR+1)^0,f,c
 31812  019AD2  4A14               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 31813  019AD4  2A15               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 31814  019AD6  5050               	movf	??_TMR5_ISR^0,w,c
 31815  019AD8  5C14               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 31816  019ADA  5051               	movf	(??_TMR5_ISR+1)^0,w,c
 31817  019ADC  5815               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 31818  019ADE  A0D8               	btfss	status,0,c
 31819  019AE0  D004               	goto	i1l1019
 31820                           
 31821                           ; BSR set to: 2
 31822                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 31823  019AE2  ECCF  F0DA         	call	_TMR5_CallBack	;wreg free
 31824                           
 31825                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 31826  019AE6  6A14               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 31827  019AE8  6A15               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 31828  019AEA                     i1l1019:
 31829  019AEA  0060  F178  F031   	movff	??_TMR5_ISR+14,btemp+11
 31830  019AF0  0060  F174  F030   	movff	??_TMR5_ISR+13,btemp+10
 31831  019AF6  0060  F170  F02F   	movff	??_TMR5_ISR+12,btemp+9
 31832  019AFC  0060  F16C  F02E   	movff	??_TMR5_ISR+11,btemp+8
 31833  019B02  0060  F168  F02D   	movff	??_TMR5_ISR+10,btemp+7
 31834  019B08  0060  F164  F02C   	movff	??_TMR5_ISR+9,btemp+6
 31835  019B0E  0060  F160  F02B   	movff	??_TMR5_ISR+8,btemp+5
 31836  019B14  0060  F15C  F02A   	movff	??_TMR5_ISR+7,btemp+4
 31837  019B1A  0060  F158  F029   	movff	??_TMR5_ISR+6,btemp+3
 31838  019B20  0060  F154  F028   	movff	??_TMR5_ISR+5,btemp+2
 31839  019B26  0060  F150  F027   	movff	??_TMR5_ISR+4,btemp+1
 31840  019B2C  0060  F14C  F026   	movff	??_TMR5_ISR+3,btemp
 31841  019B32  0060  F14B  FFD8   	movff	??_TMR5_ISR+2,status
 31842  019B38  0011               	retfie		f
 31843  019B3A                     __end_of_TMR5_ISR:
 31844                           	opt callstack 0
 31845                           
 31846 ;; *************** function _TMR5_WriteTimer *****************
 31847 ;; Defined at:
 31848 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 31849 ;; Parameters:    Size  Location     Type
 31850 ;;  timerVal        2  [STACK] unsigned short 
 31851 ;; Auto vars:     Size  Location     Type
 31852 ;;		None
 31853 ;; Return value:  Size  Location     Type
 31854 ;;                  1  [STACK] void 
 31855 ;; Registers used:
 31856 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 31857 ;; Tracked objects:
 31858 ;;		On entry : 3F/39
 31859 ;;		On exit  : 0/0
 31860 ;;		Unchanged: 0/0
 31861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31866 ;;Total ram usage:        0 bytes
 31867 ;; Hardware stack levels used:    1
 31868 ;; Hardware stack levels required when called:    3
 31869 ;; This function calls:
 31870 ;;		Nothing
 31871 ;; This function is called by:
 31872 ;;		_TMR5_ISR
 31873 ;; This function uses a reentrant model
 31874 ;;
 31875                           
 31876                           	psect	text141
 31877  01AEA4                     __ptext141:
 31878                           	opt callstack 0
 31879  01AEA4                     _TMR5_WriteTimer:
 31880                           	opt callstack 13
 31881                           
 31882                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 31883                           
 31884                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31885                           ;incstack = 0
 31886  01AEA4  A49A               	btfss	154,2,c	;volatile
 31887  01AEA6  D00F               	goto	l10603
 31888                           
 31889                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 31890  01AEA8  909A               	bcf	154,0,c	;volatile
 31891                           
 31892                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 31893                           ;stkvar	_timerVal @ sp[(0)+-2]
 31894  01AEAA  0EFF               	movlw	255
 31895  01AEAC  24E1               	addwf	fsr1l,w,c
 31896  01AEAE  6ED9               	movwf	fsr2l,c
 31897  01AEB0  0EFF               	movlw	255
 31898  01AEB2  20E2               	addwfc	fsr1h,w,c
 31899  01AEB4  6EDA               	movwf	fsr2h,c
 31900  01AEB6  50DF               	movf	indf2,w,c
 31901  01AEB8  6E99               	movwf	153,c	;volatile
 31902                           
 31903                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 31904                           ;stkvar	_timerVal @ sp[(0)+-2]
 31905  01AEBA  0EFE               	movlw	-2
 31906  01AEBC  006F FF8F FF98     	movff	plusw1,16280	;volatile
 31907                           
 31908                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 31909  01AEC2  809A               	bsf	154,0,c	;volatile
 31910                           
 31911                           ;mcc_generated_files/tmr5.c: 144:  } else {
 31912  01AEC4  D00C               	goto	l1002
 31913  01AEC6                     l10603:
 31914                           
 31915                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 31916                           ;stkvar	_timerVal @ sp[(0)+-2]
 31917  01AEC6  0EFF               	movlw	255
 31918  01AEC8  24E1               	addwf	fsr1l,w,c
 31919  01AECA  6ED9               	movwf	fsr2l,c
 31920  01AECC  0EFF               	movlw	255
 31921  01AECE  20E2               	addwfc	fsr1h,w,c
 31922  01AED0  6EDA               	movwf	fsr2h,c
 31923  01AED2  50DF               	movf	indf2,w,c
 31924  01AED4  6E99               	movwf	153,c	;volatile
 31925                           
 31926                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 31927                           ;stkvar	_timerVal @ sp[(0)+-2]
 31928  01AED6  0EFE               	movlw	-2
 31929  01AED8  006F FF8F FF98     	movff	plusw1,16280	;volatile
 31930  01AEDE                     l1002:
 31931                           
 31932                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 31933  01AEDE  52E5               	movf	postdec1,f,c
 31934  01AEE0  52E5               	movf	postdec1,f,c
 31935  01AEE2  0012               	return		;funcret
 31936  01AEE4                     __end_of_TMR5_WriteTimer:
 31937                           	opt callstack 0
 31938                           
 31939 ;; *************** function _TMR5_CallBack *****************
 31940 ;; Defined at:
 31941 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 31942 ;; Parameters:    Size  Location     Type
 31943 ;;		None
 31944 ;; Auto vars:     Size  Location     Type
 31945 ;;		None
 31946 ;; Return value:  Size  Location     Type
 31947 ;;                  1  [STACK] void 
 31948 ;; Registers used:
 31949 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 31950 ;; Tracked objects:
 31951 ;;		On entry : 3F/2
 31952 ;;		On exit  : 0/0
 31953 ;;		Unchanged: 0/0
 31954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31959 ;;Total ram usage:        0 bytes
 31960 ;; Hardware stack levels used:    1
 31961 ;; Hardware stack levels required when called:    8
 31962 ;; This function calls:
 31963 ;;		Absolute function
 31964 ;;		_TMR5_DefaultInterruptHandler
 31965 ;; This function is called by:
 31966 ;;		_TMR5_ISR
 31967 ;; This function uses a reentrant model
 31968 ;;
 31969                           
 31970                           	psect	text142
 31971  01B59E                     __ptext142:
 31972                           	opt callstack 0
 31973  01B59E                     _TMR5_CallBack:
 31974                           	opt callstack 8
 31975                           
 31976                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 31977                           
 31978                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31979                           ;incstack = 0
 31980  01B59E  0100               	movlb	0	; () banked
 31981  01B5A0  519D               	movf	_TMR5_InterruptHandler& (0+255),w,b
 31982  01B5A2  119E               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 31983  01B5A4  119F               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 31984  01B5A6  B4D8               	btfsc	status,2,c
 31985  01B5A8  0012               	return	
 31986                           
 31987                           ; BSR set to: 0
 31988                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 31989  01B5AA  D801               	call	u994_28
 31990  01B5AC  0012               	return	
 31991  01B5AE                     u994_28:
 31992  01B5AE  0005               	push	
 31993  01B5B0  6EFA               	movwf	pclath,c
 31994  01B5B2  519D               	movf	_TMR5_InterruptHandler& (0+255),w,b
 31995  01B5B4  6EFD               	movwf	tosl,c
 31996  01B5B6  519E               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 31997  01B5B8  6EFE               	movwf	tosh,c
 31998  01B5BA  519F               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 31999  01B5BC  6EFF               	movwf	tosu,c
 32000  01B5BE  50FA               	movf	pclath,w,c
 32001  01B5C0  0012               	return		;indir
 32002  01B5C2                     __end_of_TMR5_CallBack:
 32003                           	opt callstack 0
 32004                           
 32005 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 32006 ;; Defined at:
 32007 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 32008 ;; Parameters:    Size  Location     Type
 32009 ;;		None
 32010 ;; Auto vars:     Size  Location     Type
 32011 ;;		None
 32012 ;; Return value:  Size  Location     Type
 32013 ;;                  1  [STACK] void 
 32014 ;; Registers used:
 32015 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 32016 ;; Tracked objects:
 32017 ;;		On entry : 3F/0
 32018 ;;		On exit  : 0/0
 32019 ;;		Unchanged: 0/0
 32020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32025 ;;Total ram usage:        0 bytes
 32026 ;; Hardware stack levels used:    1
 32027 ;; Hardware stack levels required when called:    7
 32028 ;; This function calls:
 32029 ;;		_check_day_time
 32030 ;; This function is called by:
 32031 ;;		_TMR5_Initialize
 32032 ;;		_TMR5_CallBack
 32033 ;; This function uses a reentrant model
 32034 ;;
 32035                           
 32036                           	psect	text143
 32037  01AFD4                     __ptext143:
 32038                           	opt callstack 0
 32039  01AFD4                     _TMR5_DefaultInterruptHandler:
 32040                           	opt callstack 8
 32041                           
 32042                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 32043                           
 32044                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32045                           ;incstack = 0
 32046  01AFD4  A0BE               	btfss	190,0,c	;volatile
 32047  01AFD6  D002               	goto	u942_20
 32048  01AFD8  0E01               	movlw	1
 32049  01AFDA  D001               	goto	u942_26
 32050  01AFDC                     u942_20:
 32051  01AFDC  0E00               	movlw	0
 32052  01AFDE                     u942_26:
 32053  01AFDE  0AFF               	xorlw	255
 32054  01AFE0  6E31               	movwf	(btemp+11)^0,c
 32055  01AFE2  50BE               	movf	190,w,c	;volatile
 32056  01AFE4  1831               	xorwf	(btemp+11)^0,w,c
 32057  01AFE6  0BFE               	andlw	-2
 32058  01AFE8  1831               	xorwf	(btemp+11)^0,w,c
 32059  01AFEA  6EBE               	movwf	190,c	;volatile
 32060                           
 32061                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 32062  01AFEC  0E01               	movlw	1
 32063  01AFEE  0102               	movlb	2	; () banked
 32064  01AFF0  27C2               	addwf	(_V+187)& (0+255),f,b	;volatile
 32065  01AFF2  0E00               	movlw	0
 32066  01AFF4  23C3               	addwfc	(_V+188)& (0+255),f,b	;volatile
 32067  01AFF6  23C4               	addwfc	(_V+189)& (0+255),f,b	;volatile
 32068  01AFF8  23C5               	addwfc	(_V+190)& (0+255),f,b	;volatile
 32069                           
 32070                           ; BSR set to: 2
 32071                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 32072  01AFFA  0E01               	movlw	1
 32073  01AFFC  2788               	addwf	(_V+129)& (0+255),f,b	;volatile
 32074  01AFFE  0E00               	movlw	0
 32075  01B000  2389               	addwfc	(_V+130)& (0+255),f,b	;volatile
 32076  01B002  238A               	addwfc	(_V+131)& (0+255),f,b	;volatile
 32077  01B004  238B               	addwfc	(_V+132)& (0+255),f,b	;volatile
 32078                           
 32079                           ; BSR set to: 2
 32080                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 32081  01B006  EC44  F0CB         	call	_check_day_time	;wreg free
 32082                           
 32083                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32084  01B00A  0012               	return		;funcret
 32085  01B00C                     __end_of_TMR5_DefaultInterruptHandler:
 32086                           	opt callstack 0
 32087                           
 32088 ;; *************** function _check_day_time *****************
 32089 ;; Defined at:
 32090 ;;		line 163 in file "mbmc.c"
 32091 ;; Parameters:    Size  Location     Type
 32092 ;;		None
 32093 ;; Auto vars:     Size  Location     Type
 32094 ;;		None
 32095 ;; Return value:  Size  Location     Type
 32096 ;;                  1  [STACK] _Bool 
 32097 ;; Registers used:
 32098 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 32099 ;; Tracked objects:
 32100 ;;		On entry : 3F/2
 32101 ;;		On exit  : 0/0
 32102 ;;		Unchanged: 0/0
 32103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32108 ;;Total ram usage:        0 bytes
 32109 ;; Hardware stack levels used:    1
 32110 ;; Hardware stack levels required when called:    6
 32111 ;; This function calls:
 32112 ;;		___flge
 32113 ;;		_conv_raw_result
 32114 ;;		_get_ac_charger_relay
 32115 ;;		_set_ac_charger_relay
 32116 ;; This function is called by:
 32117 ;;		_TMR5_DefaultInterruptHandler
 32118 ;; This function uses a reentrant model
 32119 ;;
 32120                           
 32121                           	psect	text144
 32122  019688                     __ptext144:
 32123                           	opt callstack 0
 32124  019688                     _check_day_time:
 32125                           	opt callstack 8
 32126                           
 32127                           ;mbmc.c: 165:  static uint8_t day_delay = 0;;mbmc.c: 167:  if (!day_delay++) {
 32128                           
 32129                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32130                           ;incstack = 0
 32131  019688  2A1B               	incf	check_day_time@day_delay^0,f,c
 32132  01968A  041B               	decf	check_day_time@day_delay^0,w,c
 32133  01968C  A4D8               	btfss	status,2,c
 32134  01968E  D078               	goto	l9757
 32135                           
 32136                           ;mbmc.c: 168:   if (!C.day) {
 32137  019690  0101               	movlb	1	; () banked
 32138  019692  51F7               	movf	(_C+247)& (0+255),w,b	;volatile
 32139  019694  A4D8               	btfss	status,2,c
 32140  019696  D037               	goto	l9743
 32141                           
 32142                           ; BSR set to: 1
 32143                           ;mbmc.c: 169:    if (conv_raw_result(V_LIGHT_SENSOR, CONV) > 22.0) {
 32144  019698  0E00               	movlw	0
 32145  01969A  6EE6               	movwf	postinc1,c
 32146  01969C  0E0D               	movlw	13
 32147  01969E  6EE6               	movwf	postinc1,c
 32148  0196A0  EC95  F0A7         	call	_conv_raw_result	;wreg free
 32149  0196A4  0060  F09B  FFE6   	movff	btemp,postinc1
 32150  0196AA  0060  F09F  FFE6   	movff	btemp+1,postinc1
 32151  0196B0  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 32152  0196B6  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 32153  0196BC  0E00               	movlw	0
 32154  0196BE  6EE6               	movwf	postinc1,c
 32155  0196C0  0E00               	movlw	0
 32156  0196C2  6EE6               	movwf	postinc1,c
 32157  0196C4  0EB0               	movlw	176
 32158  0196C6  6EE6               	movwf	postinc1,c
 32159  0196C8  0E41               	movlw	65
 32160  0196CA  6EE6               	movwf	postinc1,c
 32161  0196CC  ECAD  F0C3         	call	___flge	;wreg free
 32162  0196D0  B026               	btfsc	btemp& (0+255),0,c
 32163  0196D2  D056               	goto	l9757
 32164                           
 32165                           ;mbmc.c: 170:     C.day = 1;
 32166  0196D4  0E01               	movlw	1
 32167  0196D6  0101               	movlb	1	; () banked
 32168  0196D8  6FF7               	movwf	(_C+247)& (0+255),b	;volatile
 32169                           
 32170                           ; BSR set to: 1
 32171                           ;mbmc.c: 171:     C.day_start = V.ticks;
 32172  0196DA  C288  F1F8         	movff	_V+129,_C+248	;volatile
 32173  0196DE  C289  F1F9         	movff	_V+130,_C+249	;volatile
 32174  0196E2  C28A  F1FA         	movff	_V+131,_C+250	;volatile
 32175  0196E6  C28B  F1FB         	movff	_V+132,_C+251	;volatile
 32176                           
 32177                           ; BSR set to: 1
 32178                           ;mbmc.c: 172:     if (get_ac_charger_relay() && V.system_stable) {
 32179  0196EA  EC45  F0DC         	call	_get_ac_charger_relay	;wreg free
 32180  0196EE  5026               	movf	btemp^0,w,c
 32181  0196F0  B4D8               	btfsc	status,2,c
 32182  0196F2  0012               	return	
 32183  0196F4  0102               	movlb	2	; () banked
 32184  0196F6  51B5               	movf	(_V+174)& (0+255),w,b	;volatile
 32185  0196F8  B4D8               	btfsc	status,2,c
 32186  0196FA  0012               	return	
 32187                           
 32188                           ; BSR set to: 2
 32189                           ;mbmc.c: 173:      set_ac_charger_relay(0);
 32190  0196FC  0E00               	movlw	0
 32191  0196FE  6EE6               	movwf	postinc1,c
 32192  019700  EC2F  F0DC         	call	_set_ac_charger_relay	;wreg free
 32193  019704  0012               	return	
 32194  019706                     l9743:
 32195                           
 32196                           ; BSR set to: 1
 32197                           ;mbmc.c: 178:    if (conv_raw_result(V_LIGHT_SENSOR, CONV) < 12.0) {
 32198  019706  0E00               	movlw	0
 32199  019708  6EE6               	movwf	postinc1,c
 32200  01970A  0E00               	movlw	0
 32201  01970C  6EE6               	movwf	postinc1,c
 32202  01970E  0E40               	movlw	64
 32203  019710  6EE6               	movwf	postinc1,c
 32204  019712  0E41               	movlw	65
 32205  019714  6EE6               	movwf	postinc1,c
 32206  019716  0E00               	movlw	0
 32207  019718  6EE6               	movwf	postinc1,c
 32208  01971A  0E0D               	movlw	13
 32209  01971C  6EE6               	movwf	postinc1,c
 32210  01971E  EC95  F0A7         	call	_conv_raw_result	;wreg free
 32211  019722  0060  F09B  FFE6   	movff	btemp,postinc1
 32212  019728  0060  F09F  FFE6   	movff	btemp+1,postinc1
 32213  01972E  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 32214  019734  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 32215  01973A  ECAD  F0C3         	call	___flge	;wreg free
 32216  01973E  B026               	btfsc	btemp& (0+255),0,c
 32217  019740  D01F               	goto	l9757
 32218                           
 32219                           ;mbmc.c: 179:     C.day = 0;
 32220  019742  0101               	movlb	1	; () banked
 32221  019744  6BF7               	clrf	(_C+247)& (0+255),b	;volatile
 32222                           
 32223                           ;mbmc.c: 180:     C.day_end = V.ticks;
 32224  019746  C288  F1FC         	movff	_V+129,_C+252	;volatile
 32225  01974A  C289  F1FD         	movff	_V+130,_C+253	;volatile
 32226  01974E  C28A  F1FE         	movff	_V+131,_C+254	;volatile
 32227  019752  C28B  F1FF         	movff	_V+132,_C+255	;volatile
 32228                           
 32229                           ; BSR set to: 1
 32230                           ;mbmc.c: 184:     if (!get_ac_charger_relay() && V.system_stable && (C.soc < 50)) {
 32231  019756  EC45  F0DC         	call	_get_ac_charger_relay	;wreg free
 32232  01975A  5026               	movf	btemp^0,w,c
 32233  01975C  A4D8               	btfss	status,2,c
 32234  01975E  0012               	return	
 32235  019760  0102               	movlb	2	; () banked
 32236  019762  51B5               	movf	(_V+174)& (0+255),w,b	;volatile
 32237  019764  B4D8               	btfsc	status,2,c
 32238  019766  0012               	return	
 32239                           
 32240                           ; BSR set to: 2
 32241  019768  0101               	movlb	1	; () banked
 32242  01976A  51AF               	movf	(_C+175)& (0+255),w,b	;volatile
 32243  01976C  E10D               	bnz	l1894
 32244  01976E  0E32               	movlw	50
 32245  019770  5DAE               	subwf	(_C+174)& (0+255),w,b	;volatile
 32246  019772  B0D8               	btfsc	status,0,c
 32247  019774  0012               	return	
 32248                           
 32249                           ; BSR set to: 1
 32250                           ;mbmc.c: 185:      set_ac_charger_relay(1);
 32251  019776  0E01               	movlw	1
 32252  019778  6EE6               	movwf	postinc1,c
 32253  01977A  EC2F  F0DC         	call	_set_ac_charger_relay	;wreg free
 32254  01977E  0012               	return	
 32255  019780                     l9757:
 32256                           
 32257                           ;mbmc.c: 191:  if (day_delay >= 240)
 32258  019780  0EEF               	movlw	239
 32259  019782  641B               	cpfsgt	check_day_time@day_delay^0,c
 32260  019784  0012               	return	
 32261                           
 32262                           ;mbmc.c: 192:   day_delay = 0;
 32263  019786  6A1B               	clrf	check_day_time@day_delay^0,c
 32264  019788                     l1894:
 32265                           
 32266                           ; _check_day_time: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 32267  019788  0012               	return		;funcret
 32268  01978A                     __end_of_check_day_time:
 32269                           	opt callstack 0
 32270                           
 32271 ;; *************** function _set_ac_charger_relay *****************
 32272 ;; Defined at:
 32273 ;;		line 133 in file "mbmc.c"
 32274 ;; Parameters:    Size  Location     Type
 32275 ;;  mode            1  [STACK] _Bool 
 32276 ;; Auto vars:     Size  Location     Type
 32277 ;;		None
 32278 ;; Return value:  Size  Location     Type
 32279 ;;                  1  [STACK] void 
 32280 ;; Registers used:
 32281 ;;		wreg, fsr1l, fsr1h
 32282 ;; Tracked objects:
 32283 ;;		On entry : 3C/2
 32284 ;;		On exit  : 0/0
 32285 ;;		Unchanged: 0/0
 32286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32291 ;;Total ram usage:        0 bytes
 32292 ;; Hardware stack levels used:    1
 32293 ;; Hardware stack levels required when called:    3
 32294 ;; This function calls:
 32295 ;;		Nothing
 32296 ;; This function is called by:
 32297 ;;		_check_day_time
 32298 ;; This function uses a reentrant model
 32299 ;;
 32300                           
 32301                           	psect	text145
 32302  01B85E                     __ptext145:
 32303                           	opt callstack 0
 32304  01B85E                     _set_ac_charger_relay:
 32305                           	opt callstack 10
 32306                           
 32307                           ;mbmc.c: 133: void set_ac_charger_relay(_Bool mode);mbmc.c: 134: {;mbmc.c: 135:  LATDbit
      +                          s.LATD6 = mode;
 32308                           ;stkvar	_mode @ sp[(0)+-1]
 32309                           
 32310                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32311                           ;incstack = 0
 32312  01B85E  0EFF               	movlw	-1
 32313  01B860  B0E3               	btfsc	plusw1,0,c
 32314  01B862  D002               	bra	u917_25
 32315  01B864  9CBD               	bcf	189,6,c	;volatile
 32316  01B866  D001               	bra	u917_26
 32317  01B868                     u917_25:
 32318  01B868  8CBD               	bsf	189,6,c	;volatile
 32319  01B86A                     u917_26:
 32320                           
 32321                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 32322  01B86A  52E5               	movf	postdec1,f,c
 32323  01B86C  0012               	return		;funcret
 32324  01B86E                     __end_of_set_ac_charger_relay:
 32325                           	opt callstack 0
 32326                           
 32327 ;; *************** function _get_ac_charger_relay *****************
 32328 ;; Defined at:
 32329 ;;		line 138 in file "mbmc.c"
 32330 ;; Parameters:    Size  Location     Type
 32331 ;;		None
 32332 ;; Auto vars:     Size  Location     Type
 32333 ;;		None
 32334 ;; Return value:  Size  Location     Type
 32335 ;;                  1  [STACK] _Bool 
 32336 ;; Registers used:
 32337 ;;		btemp
 32338 ;; Tracked objects:
 32339 ;;		On entry : 3F/1
 32340 ;;		On exit  : 0/0
 32341 ;;		Unchanged: 0/0
 32342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32347 ;;Total ram usage:        0 bytes
 32348 ;; Hardware stack levels used:    1
 32349 ;; Hardware stack levels required when called:    3
 32350 ;; This function calls:
 32351 ;;		Nothing
 32352 ;; This function is called by:
 32353 ;;		_check_day_time
 32354 ;; This function uses a reentrant model
 32355 ;;
 32356                           
 32357                           	psect	text146
 32358  01B88A                     __ptext146:
 32359                           	opt callstack 0
 32360  01B88A                     _get_ac_charger_relay:
 32361                           	opt callstack 10
 32362                           
 32363                           ;mbmc.c: 140:  return LATDbits.LATD6;
 32364                           
 32365                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32366                           ;incstack = 0
 32367  01B88A  ACBD               	btfss	189,6,c	;volatile
 32368  01B88C  D003               	goto	u918_20
 32369  01B88E  6A26               	clrf	btemp^0,c
 32370  01B890  2A26               	incf	btemp^0,f,c
 32371  01B892  0012               	return	
 32372  01B894                     u918_20:
 32373  01B894  6A26               	clrf	btemp^0,c
 32374                           
 32375                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 32376  01B896  0012               	return		;funcret
 32377  01B898                     __end_of_get_ac_charger_relay:
 32378                           	opt callstack 0
 32379                           
 32380 ;; *************** function _TMR3_ISR *****************
 32381 ;; Defined at:
 32382 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 32383 ;; Parameters:    Size  Location     Type
 32384 ;;		None
 32385 ;; Auto vars:     Size  Location     Type
 32386 ;;		None
 32387 ;; Return value:  Size  Location     Type
 32388 ;;                  1    wreg      void 
 32389 ;; Registers used:
 32390 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 32391 ;; Tracked objects:
 32392 ;;		On entry : 0/0
 32393 ;;		On exit  : 0/0
 32394 ;;		Unchanged: 0/0
 32395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32398 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32399 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32400 ;;Total ram usage:       25 bytes
 32401 ;; Hardware stack levels used:    1
 32402 ;; Hardware stack levels required when called:   14
 32403 ;; This function calls:
 32404 ;;		_TMR3_CallBack
 32405 ;;		_TMR3_WriteTimer
 32406 ;; This function is called by:
 32407 ;;		Interrupt level 1
 32408 ;; This function uses a non-reentrant model
 32409 ;;
 32410                           
 32411                           	psect	text147
 32412  0188BC                     __ptext147:
 32413                           	opt callstack 0
 32414  0188BC                     _TMR3_ISR:
 32415                           	opt callstack 3
 32416                           
 32417                           ;incstack = 0
 32418  0188BC  006F FF60  F0E0    	movff	status,??_TMR3_ISR
 32419  0188C2  006F FFD8  F0E1    	movff	tblptrl,??_TMR3_ISR+1
 32420  0188C8  006F FFDC  F0E2    	movff	tblptrh,??_TMR3_ISR+2
 32421  0188CE  006F FFE0  F0E3    	movff	tblptru,??_TMR3_ISR+3
 32422  0188D4  006F FFD4  F0E4    	movff	tablat,??_TMR3_ISR+4
 32423  0188DA  0060  F098  F0E5   	movff	btemp,??_TMR3_ISR+5
 32424  0188E0  0060  F09C  F0E6   	movff	btemp+1,??_TMR3_ISR+6
 32425  0188E6  0060  F0A0  F0E7   	movff	btemp+2,??_TMR3_ISR+7
 32426  0188EC  0060  F0A4  F0E8   	movff	btemp+3,??_TMR3_ISR+8
 32427  0188F2  0060  F0A8  F0E9   	movff	btemp+4,??_TMR3_ISR+9
 32428  0188F8  0060  F0AC  F0EA   	movff	btemp+5,??_TMR3_ISR+10
 32429  0188FE  0060  F0B0  F0EB   	movff	btemp+6,??_TMR3_ISR+11
 32430  018904  0060  F0B4  F0EC   	movff	btemp+7,??_TMR3_ISR+12
 32431  01890A  0060  F0B8  F0ED   	movff	btemp+8,??_TMR3_ISR+13
 32432  018910  0060  F0BC  F0EE   	movff	btemp+9,??_TMR3_ISR+14
 32433  018916  0060  F0C0  F0EF   	movff	btemp+10,??_TMR3_ISR+15
 32434  01891C  0060  F0C4  F0F0   	movff	btemp+11,??_TMR3_ISR+16
 32435  018922  0060  F0D8  F0F1   	movff	btemp+16,??_TMR3_ISR+17
 32436  018928  0060  F0DC  F0F2   	movff	btemp+17,??_TMR3_ISR+18
 32437  01892E  0060  F0E0  F0F3   	movff	btemp+18,??_TMR3_ISR+19
 32438  018934  0060  F0E4  F0F4   	movff	btemp+19,??_TMR3_ISR+20
 32439  01893A  0060  F0E8  F0F5   	movff	btemp+20,??_TMR3_ISR+21
 32440  018940  0060  F0EC  F0F6   	movff	btemp+21,??_TMR3_ISR+22
 32441  018946  0060  F0F0  F0F7   	movff	btemp+22,??_TMR3_ISR+23
 32442  01894C  0060  F0F4  F0F8   	movff	btemp+23,??_TMR3_ISR+24
 32443  018952  EE16  F0A1         	lfsr	1,___intlo_sp
 32444                           
 32445                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 32446  018956  0139               	movlb	57	; () banked
 32447  018958  9DA6               	bcf	166,6,b	;volatile
 32448                           
 32449                           ; BSR set to: 57
 32450                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 32451  01895A  0060  F04B  FFE6   	movff	_timer3ReloadVal,postinc1
 32452  018960  0060  F04F  FFE6   	movff	_timer3ReloadVal+1,postinc1
 32453  018966  EC72  F0D7         	call	_TMR3_WriteTimer	;wreg free
 32454                           
 32455                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 32456  01896A  4A10               	infsnz	TMR3_ISR@CountCallBack^0,f,c	;volatile
 32457  01896C  2A11               	incf	(TMR3_ISR@CountCallBack+1)^0,f,c	;volatile
 32458  01896E  5011               	movf	(TMR3_ISR@CountCallBack+1)^0,w,c	;volatile
 32459  018970  E104               	bnz	i1u1239_20
 32460  018972  0E28               	movlw	40
 32461  018974  5C10               	subwf	TMR3_ISR@CountCallBack^0,w,c	;volatile
 32462  018976  A0D8               	btfss	status,0,c
 32463  018978  D004               	goto	i1l1207
 32464  01897A                     i1u1239_20:
 32465                           
 32466                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 32467  01897A  ECE1  F0DA         	call	_TMR3_CallBack	;wreg free
 32468                           
 32469                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 32470  01897E  6A10               	clrf	TMR3_ISR@CountCallBack^0,c	;volatile
 32471  018980  6A11               	clrf	(TMR3_ISR@CountCallBack+1)^0,c	;volatile
 32472  018982                     i1l1207:
 32473  018982  0060  F3E0  F03D   	movff	??_TMR3_ISR+24,btemp+23
 32474  018988  0060  F3DC  F03C   	movff	??_TMR3_ISR+23,btemp+22
 32475  01898E  0060  F3D8  F03B   	movff	??_TMR3_ISR+22,btemp+21
 32476  018994  0060  F3D4  F03A   	movff	??_TMR3_ISR+21,btemp+20
 32477  01899A  0060  F3D0  F039   	movff	??_TMR3_ISR+20,btemp+19
 32478  0189A0  0060  F3CC  F038   	movff	??_TMR3_ISR+19,btemp+18
 32479  0189A6  0060  F3C8  F037   	movff	??_TMR3_ISR+18,btemp+17
 32480  0189AC  0060  F3C4  F036   	movff	??_TMR3_ISR+17,btemp+16
 32481  0189B2  0060  F3C0  F031   	movff	??_TMR3_ISR+16,btemp+11
 32482  0189B8  0060  F3BC  F030   	movff	??_TMR3_ISR+15,btemp+10
 32483  0189BE  0060  F3B8  F02F   	movff	??_TMR3_ISR+14,btemp+9
 32484  0189C4  0060  F3B4  F02E   	movff	??_TMR3_ISR+13,btemp+8
 32485  0189CA  0060  F3B0  F02D   	movff	??_TMR3_ISR+12,btemp+7
 32486  0189D0  0060  F3AC  F02C   	movff	??_TMR3_ISR+11,btemp+6
 32487  0189D6  0060  F3A8  F02B   	movff	??_TMR3_ISR+10,btemp+5
 32488  0189DC  0060  F3A4  F02A   	movff	??_TMR3_ISR+9,btemp+4
 32489  0189E2  0060  F3A0  F029   	movff	??_TMR3_ISR+8,btemp+3
 32490  0189E8  0060  F39C  F028   	movff	??_TMR3_ISR+7,btemp+2
 32491  0189EE  0060  F398  F027   	movff	??_TMR3_ISR+6,btemp+1
 32492  0189F4  0060  F394  F026   	movff	??_TMR3_ISR+5,btemp
 32493  0189FA  0060  F393  FFF5   	movff	??_TMR3_ISR+4,tablat
 32494  018A00  0060  F38F  FFF8   	movff	??_TMR3_ISR+3,tblptru
 32495  018A06  0060  F38B  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 32496  018A0C  0060  F387  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 32497  018A12  0060  F383  FFD8   	movff	??_TMR3_ISR,status
 32498  018A18  0011               	retfie		f
 32499  018A1A                     __end_of_TMR3_ISR:
 32500                           	opt callstack 0
 32501                           
 32502 ;; *************** function _TMR3_WriteTimer *****************
 32503 ;; Defined at:
 32504 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 32505 ;; Parameters:    Size  Location     Type
 32506 ;;  timerVal        2  [STACK] unsigned short 
 32507 ;; Auto vars:     Size  Location     Type
 32508 ;;		None
 32509 ;; Return value:  Size  Location     Type
 32510 ;;                  1  [STACK] void 
 32511 ;; Registers used:
 32512 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 32513 ;; Tracked objects:
 32514 ;;		On entry : 3F/39
 32515 ;;		On exit  : 0/0
 32516 ;;		Unchanged: 0/0
 32517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32522 ;;Total ram usage:        0 bytes
 32523 ;; Hardware stack levels used:    1
 32524 ;; Hardware stack levels required when called:    3
 32525 ;; This function calls:
 32526 ;;		Nothing
 32527 ;; This function is called by:
 32528 ;;		_TMR3_ISR
 32529 ;; This function uses a reentrant model
 32530 ;;
 32531                           
 32532                           	psect	text148
 32533  01AEE4                     __ptext148:
 32534                           	opt callstack 0
 32535  01AEE4                     _TMR3_WriteTimer:
 32536                           	opt callstack 13
 32537                           
 32538                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 32539                           
 32540                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32541                           ;incstack = 0
 32542  01AEE4  A4A6               	btfss	166,2,c	;volatile
 32543  01AEE6  D00F               	goto	l6563
 32544                           
 32545                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 32546  01AEE8  90A6               	bcf	166,0,c	;volatile
 32547                           
 32548                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 32549                           ;stkvar	_timerVal @ sp[(0)+-2]
 32550  01AEEA  0EFF               	movlw	255
 32551  01AEEC  24E1               	addwf	fsr1l,w,c
 32552  01AEEE  6ED9               	movwf	fsr2l,c
 32553  01AEF0  0EFF               	movlw	255
 32554  01AEF2  20E2               	addwfc	fsr1h,w,c
 32555  01AEF4  6EDA               	movwf	fsr2h,c
 32556  01AEF6  50DF               	movf	indf2,w,c
 32557  01AEF8  6EA5               	movwf	165,c	;volatile
 32558                           
 32559                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 32560                           ;stkvar	_timerVal @ sp[(0)+-2]
 32561  01AEFA  0EFE               	movlw	-2
 32562  01AEFC  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 32563                           
 32564                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 32565  01AF02  80A6               	bsf	166,0,c	;volatile
 32566                           
 32567                           ;mcc_generated_files/tmr3.c: 141:     }
 32568  01AF04  D00C               	goto	l1190
 32569  01AF06                     l6563:
 32570                           
 32571                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 32572                           ;stkvar	_timerVal @ sp[(0)+-2]
 32573  01AF06  0EFF               	movlw	255
 32574  01AF08  24E1               	addwf	fsr1l,w,c
 32575  01AF0A  6ED9               	movwf	fsr2l,c
 32576  01AF0C  0EFF               	movlw	255
 32577  01AF0E  20E2               	addwfc	fsr1h,w,c
 32578  01AF10  6EDA               	movwf	fsr2h,c
 32579  01AF12  50DF               	movf	indf2,w,c
 32580  01AF14  6EA5               	movwf	165,c	;volatile
 32581                           
 32582                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 32583                           ;stkvar	_timerVal @ sp[(0)+-2]
 32584  01AF16  0EFE               	movlw	-2
 32585  01AF18  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 32586  01AF1E                     l1190:
 32587                           
 32588                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 32589  01AF1E  52E5               	movf	postdec1,f,c
 32590  01AF20  52E5               	movf	postdec1,f,c
 32591  01AF22  0012               	return		;funcret
 32592  01AF24                     __end_of_TMR3_WriteTimer:
 32593                           	opt callstack 0
 32594                           
 32595 ;; *************** function _TMR3_CallBack *****************
 32596 ;; Defined at:
 32597 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 32598 ;; Parameters:    Size  Location     Type
 32599 ;;		None
 32600 ;; Auto vars:     Size  Location     Type
 32601 ;;		None
 32602 ;; Return value:  Size  Location     Type
 32603 ;;                  1  [STACK] void 
 32604 ;; Registers used:
 32605 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 32606 ;; Tracked objects:
 32607 ;;		On entry : 0/39
 32608 ;;		On exit  : 0/0
 32609 ;;		Unchanged: 0/0
 32610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32615 ;;Total ram usage:        0 bytes
 32616 ;; Hardware stack levels used:    1
 32617 ;; Hardware stack levels required when called:   13
 32618 ;; This function calls:
 32619 ;;		Absolute function
 32620 ;;		_TMR3_DefaultInterruptHandler
 32621 ;;		_calc_bsoc
 32622 ;; This function is called by:
 32623 ;;		_TMR3_ISR
 32624 ;; This function uses a reentrant model
 32625 ;;
 32626                           
 32627                           	psect	text149
 32628  01B5C2                     __ptext149:
 32629                           	opt callstack 0
 32630  01B5C2                     _TMR3_CallBack:
 32631                           	opt callstack 3
 32632                           
 32633                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 32634                           
 32635                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32636                           ;incstack = 0
 32637  01B5C2  0100               	movlb	0	; () banked
 32638  01B5C4  519A               	movf	_TMR3_InterruptHandler& (0+255),w,b
 32639  01B5C6  119B               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 32640  01B5C8  119C               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 32641  01B5CA  B4D8               	btfsc	status,2,c
 32642  01B5CC  0012               	return	
 32643                           
 32644                           ; BSR set to: 0
 32645                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 32646  01B5CE  D801               	call	u1228_28
 32647  01B5D0  0012               	return	
 32648  01B5D2                     u1228_28:
 32649  01B5D2  0005               	push	
 32650  01B5D4  6EFA               	movwf	pclath,c
 32651  01B5D6  519A               	movf	_TMR3_InterruptHandler& (0+255),w,b
 32652  01B5D8  6EFD               	movwf	tosl,c
 32653  01B5DA  519B               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 32654  01B5DC  6EFE               	movwf	tosh,c
 32655  01B5DE  519C               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 32656  01B5E0  6EFF               	movwf	tosu,c
 32657  01B5E2  50FA               	movf	pclath,w,c
 32658  01B5E4  0012               	return		;indir
 32659  01B5E6                     __end_of_TMR3_CallBack:
 32660                           	opt callstack 0
 32661                           
 32662 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 32663 ;; Defined at:
 32664 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 32665 ;; Parameters:    Size  Location     Type
 32666 ;;		None
 32667 ;; Auto vars:     Size  Location     Type
 32668 ;;		None
 32669 ;; Return value:  Size  Location     Type
 32670 ;;                  1  [STACK] void 
 32671 ;; Registers used:
 32672 ;;		None
 32673 ;; Tracked objects:
 32674 ;;		On entry : 3F/0
 32675 ;;		On exit  : 0/0
 32676 ;;		Unchanged: 0/0
 32677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32682 ;;Total ram usage:        0 bytes
 32683 ;; Hardware stack levels used:    1
 32684 ;; Hardware stack levels required when called:    3
 32685 ;; This function calls:
 32686 ;;		Nothing
 32687 ;; This function is called by:
 32688 ;;		_TMR3_Initialize
 32689 ;;		_TMR3_CallBack
 32690 ;; This function uses a reentrant model
 32691 ;;
 32692                           
 32693                           	psect	text150
 32694  01B938                     __ptext150:
 32695                           	opt callstack 0
 32696  01B938                     _TMR3_DefaultInterruptHandler:
 32697                           	opt callstack 12
 32698                           
 32699                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32700                           
 32701                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32702                           ;incstack = 0
 32703  01B938  0012               	return		;funcret
 32704  01B93A                     __end_of_TMR3_DefaultInterruptHandler:
 32705                           	opt callstack 0
 32706                           
 32707 ;; *************** function _calc_bsoc *****************
 32708 ;; Defined at:
 32709 ;;		line 39 in file "bsoc.c"
 32710 ;; Parameters:    Size  Location     Type
 32711 ;;		None
 32712 ;; Auto vars:     Size  Location     Type
 32713 ;;  log_ptr         2  [STACK] PTR unsigned char 
 32714 ;;		 -> port_data(512), 
 32715 ;; Return value:  Size  Location     Type
 32716 ;;                  1  [STACK] void 
 32717 ;; Registers used:
 32718 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 32719 ;; Tracked objects:
 32720 ;;		On entry : 3F/0
 32721 ;;		On exit  : 3F/1
 32722 ;;		Unchanged: 0/0
 32723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32728 ;;Total ram usage:        0 bytes
 32729 ;; Hardware stack levels used:    1
 32730 ;; Hardware stack levels required when called:   12
 32731 ;; This function calls:
 32732 ;;		_StartTimer
 32733 ;;		___fladd
 32734 ;;		___fldiv
 32735 ;;		___flge
 32736 ;;		___flmul
 32737 ;;		___flneg
 32738 ;;		___fltol
 32739 ;;		_fabsf
 32740 ;;		_port_data_dma_ptr
 32741 ;;		_send_port_data_dma
 32742 ;;		_sprintf
 32743 ;;		_strlen
 32744 ;; This function is called by:
 32745 ;;		_init_bsoc
 32746 ;;		_TMR3_CallBack
 32747 ;; This function uses a reentrant model
 32748 ;;
 32749                           
 32750                           	psect	text151
 32751  01426E                     __ptext151:
 32752                           	opt callstack 0
 32753  01426E                     _calc_bsoc:
 32754                           	opt callstack 0
 32755                           
 32756                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32757  01426E  52E6               	movf	postinc1,f,c
 32758  014270  52E6               	movf	postinc1,f,c
 32759                           
 32760                           ;incstack = 0
 32761                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 44:  do { LATEbits.LATE1 = 1; } while(0);
 32762  014272  82BE               	bsf	190,1,c	;volatile
 32763                           
 32764                           ;bsoc.c: 46:  C.dynamic_ah += (C.c_bat / 3600.0);
 32765  014274  0E00               	movlw	0
 32766  014276  6EE6               	movwf	postinc1,c
 32767  014278  0E00               	movlw	0
 32768  01427A  6EE6               	movwf	postinc1,c
 32769  01427C  0E61               	movlw	97
 32770  01427E  6EE6               	movwf	postinc1,c
 32771  014280  0E45               	movlw	69
 32772  014282  6EE6               	movwf	postinc1,c
 32773  014284  0060  F513  FFE6   	movff	_C+68,postinc1
 32774  01428A  0060  F517  FFE6   	movff	_C+69,postinc1
 32775  014290  0060  F51B  FFE6   	movff	_C+70,postinc1
 32776  014296  0060  F51F  FFE6   	movff	_C+71,postinc1
 32777  01429C  ECD8  F0A4         	call	___fldiv	;wreg free
 32778  0142A0  0060  F09B  FFE6   	movff	btemp,postinc1
 32779  0142A6  0060  F09F  FFE6   	movff	btemp+1,postinc1
 32780  0142AC  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 32781  0142B2  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 32782  0142B8  0060  F633  FFE6   	movff	_C+140,postinc1
 32783  0142BE  0060  F637  FFE6   	movff	_C+141,postinc1
 32784  0142C4  0060  F63B  FFE6   	movff	_C+142,postinc1
 32785  0142CA  0060  F63F  FFE6   	movff	_C+143,postinc1
 32786  0142D0  EC59  F09D         	call	___fladd	;wreg free
 32787  0142D4  0060  F098  F18C   	movff	btemp,_C+140	;volatile
 32788  0142DA  0060  F09C  F18D   	movff	btemp+1,_C+141	;volatile
 32789  0142E0  0060  F0A0  F18E   	movff	btemp+2,_C+142	;volatile
 32790  0142E6  0060  F0A4  F18F   	movff	btemp+3,_C+143	;volatile
 32791                           
 32792                           ;bsoc.c: 47:  if (C.dynamic_ah > (C.bank_ah))
 32793  0142EC  0060  F633  FFE6   	movff	_C+140,postinc1
 32794  0142F2  0060  F637  FFE6   	movff	_C+141,postinc1
 32795  0142F8  0060  F63B  FFE6   	movff	_C+142,postinc1
 32796  0142FE  0060  F63F  FFE6   	movff	_C+143,postinc1
 32797  014304  0060  F623  FFE6   	movff	_C+136,postinc1
 32798  01430A  0060  F627  FFE6   	movff	_C+137,postinc1
 32799  014310  0060  F62B  FFE6   	movff	_C+138,postinc1
 32800  014316  0060  F62F  FFE6   	movff	_C+139,postinc1
 32801  01431C  ECAD  F0C3         	call	___flge	;wreg free
 32802  014320  B026               	btfsc	btemp& (0+255),0,c
 32803  014322  D008               	goto	l12593
 32804                           
 32805                           ;bsoc.c: 48:   C.dynamic_ah = C.bank_ah;
 32806  014324  C188  F18C         	movff	_C+136,_C+140	;volatile
 32807  014328  C189  F18D         	movff	_C+137,_C+141	;volatile
 32808  01432C  C18A  F18E         	movff	_C+138,_C+142	;volatile
 32809  014330  C18B  F18F         	movff	_C+139,_C+143	;volatile
 32810  014334                     l12593:
 32811                           
 32812                           ;bsoc.c: 49:  if (C.dynamic_ah < 0.1)
 32813  014334  0ECD               	movlw	205
 32814  014336  6EE6               	movwf	postinc1,c
 32815  014338  0ECC               	movlw	204
 32816  01433A  6EE6               	movwf	postinc1,c
 32817  01433C  0ECC               	movlw	204
 32818  01433E  6EE6               	movwf	postinc1,c
 32819  014340  0E3D               	movlw	61
 32820  014342  6EE6               	movwf	postinc1,c
 32821  014344  0060  F633  FFE6   	movff	_C+140,postinc1
 32822  01434A  0060  F637  FFE6   	movff	_C+141,postinc1
 32823  014350  0060  F63B  FFE6   	movff	_C+142,postinc1
 32824  014356  0060  F63F  FFE6   	movff	_C+143,postinc1
 32825  01435C  ECAD  F0C3         	call	___flge	;wreg free
 32826  014360  B026               	btfsc	btemp& (0+255),0,c
 32827  014362  D009               	goto	l12597
 32828                           
 32829                           ;bsoc.c: 50:   C.dynamic_ah = 0.1;
 32830  014364  0ECD               	movlw	205
 32831  014366  0101               	movlb	1	; () banked
 32832  014368  6F8C               	movwf	(_C+140)& (0+255),b	;volatile
 32833  01436A  0ECC               	movlw	204
 32834  01436C  6F8D               	movwf	(_C+141)& (0+255),b	;volatile
 32835  01436E  0ECC               	movlw	204
 32836  014370  6F8E               	movwf	(_C+142)& (0+255),b	;volatile
 32837  014372  0E3D               	movlw	61
 32838  014374  6F8F               	movwf	(_C+143)& (0+255),b	;volatile
 32839  014376                     l12597:
 32840                           
 32841                           ;bsoc.c: 52:  C.pv_ah += (C.c_pv / 3600.0);
 32842  014376  0E00               	movlw	0
 32843  014378  6EE6               	movwf	postinc1,c
 32844  01437A  0E00               	movlw	0
 32845  01437C  6EE6               	movwf	postinc1,c
 32846  01437E  0E61               	movlw	97
 32847  014380  6EE6               	movwf	postinc1,c
 32848  014382  0E45               	movlw	69
 32849  014384  6EE6               	movwf	postinc1,c
 32850  014386  0060  F523  FFE6   	movff	_C+72,postinc1
 32851  01438C  0060  F527  FFE6   	movff	_C+73,postinc1
 32852  014392  0060  F52B  FFE6   	movff	_C+74,postinc1
 32853  014398  0060  F52F  FFE6   	movff	_C+75,postinc1
 32854  01439E  ECD8  F0A4         	call	___fldiv	;wreg free
 32855  0143A2  0060  F09B  FFE6   	movff	btemp,postinc1
 32856  0143A8  0060  F09F  FFE6   	movff	btemp+1,postinc1
 32857  0143AE  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 32858  0143B4  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 32859  0143BA  0060  F643  FFE6   	movff	_C+144,postinc1
 32860  0143C0  0060  F647  FFE6   	movff	_C+145,postinc1
 32861  0143C6  0060  F64B  FFE6   	movff	_C+146,postinc1
 32862  0143CC  0060  F64F  FFE6   	movff	_C+147,postinc1
 32863  0143D2  EC59  F09D         	call	___fladd	;wreg free
 32864  0143D6  0060  F098  F190   	movff	btemp,_C+144	;volatile
 32865  0143DC  0060  F09C  F191   	movff	btemp+1,_C+145	;volatile
 32866  0143E2  0060  F0A0  F192   	movff	btemp+2,_C+146	;volatile
 32867  0143E8  0060  F0A4  F193   	movff	btemp+3,_C+147	;volatile
 32868                           
 32869                           ;bsoc.c: 53:  C.pvkw += (C.p_pv / 3600.0);
 32870  0143EE  0E00               	movlw	0
 32871  0143F0  6EE6               	movwf	postinc1,c
 32872  0143F2  0E00               	movlw	0
 32873  0143F4  6EE6               	movwf	postinc1,c
 32874  0143F6  0E61               	movlw	97
 32875  0143F8  6EE6               	movwf	postinc1,c
 32876  0143FA  0E45               	movlw	69
 32877  0143FC  6EE6               	movwf	postinc1,c
 32878  0143FE  0060  F5E3  FFE6   	movff	_C+120,postinc1
 32879  014404  0060  F5E7  FFE6   	movff	_C+121,postinc1
 32880  01440A  0060  F5EB  FFE6   	movff	_C+122,postinc1
 32881  014410  0060  F5EF  FFE6   	movff	_C+123,postinc1
 32882  014416  ECD8  F0A4         	call	___fldiv	;wreg free
 32883  01441A  0060  F09B  FFE6   	movff	btemp,postinc1
 32884  014420  0060  F09F  FFE6   	movff	btemp+1,postinc1
 32885  014426  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 32886  01442C  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 32887  014432  0060  F683  FFE6   	movff	_C+160,postinc1
 32888  014438  0060  F687  FFE6   	movff	_C+161,postinc1
 32889  01443E  0060  F68B  FFE6   	movff	_C+162,postinc1
 32890  014444  0060  F68F  FFE6   	movff	_C+163,postinc1
 32891  01444A  EC59  F09D         	call	___fladd	;wreg free
 32892  01444E  0060  F098  F1A0   	movff	btemp,_C+160	;volatile
 32893  014454  0060  F09C  F1A1   	movff	btemp+1,_C+161	;volatile
 32894  01445A  0060  F0A0  F1A2   	movff	btemp+2,_C+162	;volatile
 32895  014460  0060  F0A4  F1A3   	movff	btemp+3,_C+163	;volatile
 32896                           
 32897                           ;bsoc.c: 54:  C.invkw += (C.p_inverter / 3600.0);
 32898  014466  0E00               	movlw	0
 32899  014468  6EE6               	movwf	postinc1,c
 32900  01446A  0E00               	movlw	0
 32901  01446C  6EE6               	movwf	postinc1,c
 32902  01446E  0E61               	movlw	97
 32903  014470  6EE6               	movwf	postinc1,c
 32904  014472  0E45               	movlw	69
 32905  014474  6EE6               	movwf	postinc1,c
 32906  014476  0060  F5D3  FFE6   	movff	_C+116,postinc1
 32907  01447C  0060  F5D7  FFE6   	movff	_C+117,postinc1
 32908  014482  0060  F5DB  FFE6   	movff	_C+118,postinc1
 32909  014488  0060  F5DF  FFE6   	movff	_C+119,postinc1
 32910  01448E  ECD8  F0A4         	call	___fldiv	;wreg free
 32911  014492  0060  F09B  FFE6   	movff	btemp,postinc1
 32912  014498  0060  F09F  FFE6   	movff	btemp+1,postinc1
 32913  01449E  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 32914  0144A4  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 32915  0144AA  0060  F693  FFE6   	movff	_C+164,postinc1
 32916  0144B0  0060  F697  FFE6   	movff	_C+165,postinc1
 32917  0144B6  0060  F69B  FFE6   	movff	_C+166,postinc1
 32918  0144BC  0060  F69F  FFE6   	movff	_C+167,postinc1
 32919  0144C2  EC59  F09D         	call	___fladd	;wreg free
 32920  0144C6  0060  F098  F1A4   	movff	btemp,_C+164	;volatile
 32921  0144CC  0060  F09C  F1A5   	movff	btemp+1,_C+165	;volatile
 32922  0144D2  0060  F0A0  F1A6   	movff	btemp+2,_C+166	;volatile
 32923  0144D8  0060  F0A4  F1A7   	movff	btemp+3,_C+167	;volatile
 32924                           
 32925                           ;bsoc.c: 55:  C.loadkw += (C.p_load / 3600.0);
 32926  0144DE  0E00               	movlw	0
 32927  0144E0  6EE6               	movwf	postinc1,c
 32928  0144E2  0E00               	movlw	0
 32929  0144E4  6EE6               	movwf	postinc1,c
 32930  0144E6  0E61               	movlw	97
 32931  0144E8  6EE6               	movwf	postinc1,c
 32932  0144EA  0E45               	movlw	69
 32933  0144EC  6EE6               	movwf	postinc1,c
 32934  0144EE  0060  F5C3  FFE6   	movff	_C+112,postinc1
 32935  0144F4  0060  F5C7  FFE6   	movff	_C+113,postinc1
 32936  0144FA  0060  F5CB  FFE6   	movff	_C+114,postinc1
 32937  014500  0060  F5CF  FFE6   	movff	_C+115,postinc1
 32938  014506  ECD8  F0A4         	call	___fldiv	;wreg free
 32939  01450A  0060  F09B  FFE6   	movff	btemp,postinc1
 32940  014510  0060  F09F  FFE6   	movff	btemp+1,postinc1
 32941  014516  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 32942  01451C  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 32943  014522  0060  F6A3  FFE6   	movff	_C+168,postinc1
 32944  014528  0060  F6A7  FFE6   	movff	_C+169,postinc1
 32945  01452E  0060  F6AB  FFE6   	movff	_C+170,postinc1
 32946  014534  0060  F6AF  FFE6   	movff	_C+171,postinc1
 32947  01453A  EC59  F09D         	call	___fladd	;wreg free
 32948  01453E  0060  F098  F1A8   	movff	btemp,_C+168	;volatile
 32949  014544  0060  F09C  F1A9   	movff	btemp+1,_C+169	;volatile
 32950  01454A  0060  F0A0  F1AA   	movff	btemp+2,_C+170	;volatile
 32951  014550  0060  F0A4  F1AB   	movff	btemp+3,_C+171	;volatile
 32952                           
 32953                           ;bsoc.c: 56:  if (C.p_bat > 0.0)
 32954  014556  0060  F5F3  FFE6   	movff	_C+124,postinc1
 32955  01455C  0060  F5F7  FFE6   	movff	_C+125,postinc1
 32956  014562  0060  F5FB  FFE6   	movff	_C+126,postinc1
 32957  014568  0060  F5FF  FFE6   	movff	_C+127,postinc1
 32958  01456E  0E00               	movlw	0
 32959  014570  6EE6               	movwf	postinc1,c
 32960  014572  0E00               	movlw	0
 32961  014574  6EE6               	movwf	postinc1,c
 32962  014576  0E00               	movlw	0
 32963  014578  6EE6               	movwf	postinc1,c
 32964  01457A  0E00               	movlw	0
 32965  01457C  6EE6               	movwf	postinc1,c
 32966  01457E  ECAD  F0C3         	call	___flge	;wreg free
 32967  014582  B026               	btfsc	btemp& (0+255),0,c
 32968  014584  D03C               	goto	l12609
 32969                           
 32970                           ;bsoc.c: 57:   C.bkwi += (C.p_bat / 3600.0);
 32971  014586  0E00               	movlw	0
 32972  014588  6EE6               	movwf	postinc1,c
 32973  01458A  0E00               	movlw	0
 32974  01458C  6EE6               	movwf	postinc1,c
 32975  01458E  0E61               	movlw	97
 32976  014590  6EE6               	movwf	postinc1,c
 32977  014592  0E45               	movlw	69
 32978  014594  6EE6               	movwf	postinc1,c
 32979  014596  0060  F5F3  FFE6   	movff	_C+124,postinc1
 32980  01459C  0060  F5F7  FFE6   	movff	_C+125,postinc1
 32981  0145A2  0060  F5FB  FFE6   	movff	_C+126,postinc1
 32982  0145A8  0060  F5FF  FFE6   	movff	_C+127,postinc1
 32983  0145AE  ECD8  F0A4         	call	___fldiv	;wreg free
 32984  0145B2  0060  F09B  FFE6   	movff	btemp,postinc1
 32985  0145B8  0060  F09F  FFE6   	movff	btemp+1,postinc1
 32986  0145BE  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 32987  0145C4  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 32988  0145CA  0060  F663  FFE6   	movff	_C+152,postinc1
 32989  0145D0  0060  F667  FFE6   	movff	_C+153,postinc1
 32990  0145D6  0060  F66B  FFE6   	movff	_C+154,postinc1
 32991  0145DC  0060  F66F  FFE6   	movff	_C+155,postinc1
 32992  0145E2  EC59  F09D         	call	___fladd	;wreg free
 32993  0145E6  0060  F098  F198   	movff	btemp,_C+152	;volatile
 32994  0145EC  0060  F09C  F199   	movff	btemp+1,_C+153	;volatile
 32995  0145F2  0060  F0A0  F19A   	movff	btemp+2,_C+154	;volatile
 32996  0145F8  0060  F0A4  F19B   	movff	btemp+3,_C+155	;volatile
 32997  0145FE                     l12609:
 32998                           
 32999                           ;bsoc.c: 58:  if (C.p_bat < 0.0)
 33000  0145FE  0101               	movlb	1	; () banked
 33001  014600  AF7F               	btfss	(_C+127)& (0+255),7,b	;volatile
 33002  014602  D04A               	goto	l12613
 33003                           
 33004                           ; BSR set to: 1
 33005                           ;bsoc.c: 59:   C.bkwo += fabsf(C.p_bat / 3600.0);
 33006  014604  0E00               	movlw	0
 33007  014606  6EE6               	movwf	postinc1,c
 33008  014608  0E00               	movlw	0
 33009  01460A  6EE6               	movwf	postinc1,c
 33010  01460C  0E61               	movlw	97
 33011  01460E  6EE6               	movwf	postinc1,c
 33012  014610  0E45               	movlw	69
 33013  014612  6EE6               	movwf	postinc1,c
 33014  014614  0060  F5F3  FFE6   	movff	_C+124,postinc1
 33015  01461A  0060  F5F7  FFE6   	movff	_C+125,postinc1
 33016  014620  0060  F5FB  FFE6   	movff	_C+126,postinc1
 33017  014626  0060  F5FF  FFE6   	movff	_C+127,postinc1
 33018  01462C  ECD8  F0A4         	call	___fldiv	;wreg free
 33019  014630  0060  F09B  FFE6   	movff	btemp,postinc1
 33020  014636  0060  F09F  FFE6   	movff	btemp+1,postinc1
 33021  01463C  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 33022  014642  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 33023  014648  EC28  F0CF         	call	_fabsf	;wreg free
 33024  01464C  0060  F09B  FFE6   	movff	btemp,postinc1
 33025  014652  0060  F09F  FFE6   	movff	btemp+1,postinc1
 33026  014658  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 33027  01465E  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 33028  014664  0060  F673  FFE6   	movff	_C+156,postinc1
 33029  01466A  0060  F677  FFE6   	movff	_C+157,postinc1
 33030  014670  0060  F67B  FFE6   	movff	_C+158,postinc1
 33031  014676  0060  F67F  FFE6   	movff	_C+159,postinc1
 33032  01467C  EC59  F09D         	call	___fladd	;wreg free
 33033  014680  0060  F098  F19C   	movff	btemp,_C+156	;volatile
 33034  014686  0060  F09C  F19D   	movff	btemp+1,_C+157	;volatile
 33035  01468C  0060  F0A0  F19E   	movff	btemp+2,_C+158	;volatile
 33036  014692  0060  F0A4  F19F   	movff	btemp+3,_C+159	;volatile
 33037  014698                     l12613:
 33038                           
 33039                           ;bsoc.c: 61:  C.soc = ((uint16_t) ((C.dynamic_ah / C.bank_ah)*100.0) + 1);
 33040  014698  0E00               	movlw	0
 33041  01469A  6EE6               	movwf	postinc1,c
 33042  01469C  0E00               	movlw	0
 33043  01469E  6EE6               	movwf	postinc1,c
 33044  0146A0  0EC8               	movlw	200
 33045  0146A2  6EE6               	movwf	postinc1,c
 33046  0146A4  0E42               	movlw	66
 33047  0146A6  6EE6               	movwf	postinc1,c
 33048  0146A8  0060  F623  FFE6   	movff	_C+136,postinc1
 33049  0146AE  0060  F627  FFE6   	movff	_C+137,postinc1
 33050  0146B4  0060  F62B  FFE6   	movff	_C+138,postinc1
 33051  0146BA  0060  F62F  FFE6   	movff	_C+139,postinc1
 33052  0146C0  0060  F633  FFE6   	movff	_C+140,postinc1
 33053  0146C6  0060  F637  FFE6   	movff	_C+141,postinc1
 33054  0146CC  0060  F63B  FFE6   	movff	_C+142,postinc1
 33055  0146D2  0060  F63F  FFE6   	movff	_C+143,postinc1
 33056  0146D8  ECD8  F0A4         	call	___fldiv	;wreg free
 33057  0146DC  0060  F09B  FFE6   	movff	btemp,postinc1
 33058  0146E2  0060  F09F  FFE6   	movff	btemp+1,postinc1
 33059  0146E8  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 33060  0146EE  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 33061  0146F4  EC44  F099         	call	___flmul	;wreg free
 33062  0146F8  0060  F09B  FFE6   	movff	btemp,postinc1
 33063  0146FE  0060  F09F  FFE6   	movff	btemp+1,postinc1
 33064  014704  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 33065  01470A  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 33066  014710  EC3C  F0C2         	call	___fltol	;wreg free
 33067  014714  0060  F098  F030   	movff	btemp,btemp+10
 33068  01471A  0060  F09C  F031   	movff	btemp+1,btemp+11
 33069  014720  0E01               	movlw	1
 33070  014722  2430               	addwf	(btemp+10)^0,w,c
 33071  014724  0101               	movlb	1	; () banked
 33072  014726  6FAE               	movwf	(_C+174)& (0+255),b	;volatile
 33073  014728  0E00               	movlw	0
 33074  01472A  2031               	addwfc	(btemp+11)^0,w,c
 33075  01472C  6FAF               	movwf	(_C+175)& (0+255),b	;volatile
 33076                           
 33077                           ; BSR set to: 1
 33078                           ;bsoc.c: 62:  if (C.soc > 100)
 33079  01472E  51AF               	movf	(_C+175)& (0+255),w,b	;volatile
 33080  014730  E104               	bnz	u1221_20
 33081  014732  0E65               	movlw	101
 33082  014734  5DAE               	subwf	(_C+174)& (0+255),w,b	;volatile
 33083  014736  A0D8               	btfss	status,0,c
 33084  014738  D004               	goto	l12619
 33085  01473A                     u1221_20:
 33086                           
 33087                           ; BSR set to: 1
 33088                           ;bsoc.c: 63:   C.soc = 100;
 33089  01473A  0E00               	movlw	0
 33090  01473C  6FAF               	movwf	(_C+175)& (0+255),b	;volatile
 33091  01473E  0E64               	movlw	100
 33092  014740  6FAE               	movwf	(_C+174)& (0+255),b	;volatile
 33093  014742                     l12619:
 33094                           
 33095                           ; BSR set to: 1
 33096                           ;bsoc.c: 65:  if (C.c_bat < 0.0) {
 33097  014742  AF47               	btfss	(_C+71)& (0+255),7,b	;volatile
 33098  014744  D043               	goto	l12623
 33099                           
 33100                           ; BSR set to: 1
 33101                           ;bsoc.c: 66:   C.runtime = (uint16_t) (-(C.dynamic_ah / C.c_bat));
 33102  014746  0060  F513  FFE6   	movff	_C+68,postinc1
 33103  01474C  0060  F517  FFE6   	movff	_C+69,postinc1
 33104  014752  0060  F51B  FFE6   	movff	_C+70,postinc1
 33105  014758  0060  F51F  FFE6   	movff	_C+71,postinc1
 33106  01475E  0060  F633  FFE6   	movff	_C+140,postinc1
 33107  014764  0060  F637  FFE6   	movff	_C+141,postinc1
 33108  01476A  0060  F63B  FFE6   	movff	_C+142,postinc1
 33109  014770  0060  F63F  FFE6   	movff	_C+143,postinc1
 33110  014776  ECD8  F0A4         	call	___fldiv	;wreg free
 33111  01477A  0060  F09B  FFE6   	movff	btemp,postinc1
 33112  014780  0060  F09F  FFE6   	movff	btemp+1,postinc1
 33113  014786  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 33114  01478C  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 33115  014792  ECFC  F0D5         	call	___flneg	;wreg free
 33116  014796  0060  F09B  FFE6   	movff	btemp,postinc1
 33117  01479C  0060  F09F  FFE6   	movff	btemp+1,postinc1
 33118  0147A2  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 33119  0147A8  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 33120  0147AE  EC3C  F0C2         	call	___fltol	;wreg free
 33121  0147B2  0060  F098  F030   	movff	btemp,btemp+10
 33122  0147B8  0060  F09C  F031   	movff	btemp+1,btemp+11
 33123  0147BE  0060  F0C0  F1AC   	movff	btemp+10,_C+172	;volatile
 33124  0147C4  0060  F0C4  F1AD   	movff	btemp+11,_C+173	;volatile
 33125                           
 33126                           ;bsoc.c: 67:  } else {
 33127  0147CA  D004               	goto	l12625
 33128  0147CC                     l12623:
 33129                           
 33130                           ; BSR set to: 1
 33131                           ;bsoc.c: 68:   C.runtime = 120;
 33132  0147CC  0E00               	movlw	0
 33133  0147CE  6FAD               	movwf	(_C+173)& (0+255),b	;volatile
 33134  0147D0  0E78               	movlw	120
 33135  0147D2  6FAC               	movwf	(_C+172)& (0+255),b	;volatile
 33136  0147D4                     l12625:
 33137                           
 33138                           ;bsoc.c: 70:  if (C.runtime > 120)
 33139  0147D4  0101               	movlb	1	; () banked
 33140  0147D6  51AD               	movf	(_C+173)& (0+255),w,b	;volatile
 33141  0147D8  E104               	bnz	u1223_20
 33142  0147DA  0E79               	movlw	121
 33143  0147DC  5DAC               	subwf	(_C+172)& (0+255),w,b	;volatile
 33144  0147DE  A0D8               	btfss	status,0,c
 33145  0147E0  D004               	goto	l12629
 33146  0147E2                     u1223_20:
 33147                           
 33148                           ; BSR set to: 1
 33149                           ;bsoc.c: 71:   C.runtime = 120;
 33150  0147E2  0E00               	movlw	0
 33151  0147E4  6FAD               	movwf	(_C+173)& (0+255),b	;volatile
 33152  0147E6  0E78               	movlw	120
 33153  0147E8  6FAC               	movwf	(_C+172)& (0+255),b	;volatile
 33154  0147EA                     l12629:
 33155                           
 33156                           ; BSR set to: 1
 33157                           ;bsoc.c: 73:  V.lowint_count++;
 33158  0147EA  0E01               	movlw	1
 33159  0147EC  0102               	movlb	2	; () banked
 33160  0147EE  27BA               	addwf	(_V+179)& (0+255),f,b	;volatile
 33161  0147F0  0E00               	movlw	0
 33162  0147F2  23BB               	addwfc	(_V+180)& (0+255),f,b	;volatile
 33163  0147F4  23BC               	addwfc	(_V+181)& (0+255),f,b	;volatile
 33164  0147F6  23BD               	addwfc	(_V+182)& (0+255),f,b	;volatile
 33165                           
 33166                           ; BSR set to: 2
 33167                           ;bsoc.c: 75:  if (!log_update_wait++) {
 33168  0147F8  2A1A               	incf	calc_bsoc@log_update_wait^0,f,c
 33169  0147FA  041A               	decf	calc_bsoc@log_update_wait^0,w,c
 33170  0147FC  A4D8               	btfss	status,2,c
 33171  0147FE  D0CE               	goto	l12641
 33172                           
 33173                           ; BSR set to: 2
 33174                           ;bsoc.c: 76:   log_ptr = port_data_dma_ptr();
 33175  014800  EC60  F0DC         	call	_port_data_dma_ptr	;wreg free
 33176                           
 33177                           ;stkvar	_log_ptr @ sp[(-2)+0]
 33178  014804  0EFF               	movlw	-1
 33179  014806  0060  F09F  FFE3   	movff	btemp+1,plusw1
 33180  01480C  0EFE               	movlw	-2
 33181  01480E  0060  F09B  FFE3   	movff	btemp,plusw1
 33182                           
 33183                           ;bsoc.c: 77:   sprintf((char*) log_ptr, " %lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4.3f,%4.3f,
      +                          %4.3f,%4.3f,%4.3f,%4.3d,%4.3d,%2.6f\r\n",
 33184  014814  0060  F613  FFE6   	movff	_C+132,postinc1
 33185  01481A  0060  F617  FFE6   	movff	_C+133,postinc1
 33186  014820  0060  F61B  FFE6   	movff	_C+134,postinc1
 33187  014826  0060  F61F  FFE6   	movff	_C+135,postinc1
 33188  01482C  0060  F6B3  FFE6   	movff	_C+172,postinc1
 33189  014832  0060  F6B7  FFE6   	movff	_C+173,postinc1
 33190  014838  0060  F6BB  FFE6   	movff	_C+174,postinc1
 33191  01483E  0060  F6BF  FFE6   	movff	_C+175,postinc1
 33192  014844  0060  F643  FFE6   	movff	_C+144,postinc1
 33193  01484A  0060  F647  FFE6   	movff	_C+145,postinc1
 33194  014850  0060  F64B  FFE6   	movff	_C+146,postinc1
 33195  014856  0060  F64F  FFE6   	movff	_C+147,postinc1
 33196  01485C  0060  F633  FFE6   	movff	_C+140,postinc1
 33197  014862  0060  F637  FFE6   	movff	_C+141,postinc1
 33198  014868  0060  F63B  FFE6   	movff	_C+142,postinc1
 33199  01486E  0060  F63F  FFE6   	movff	_C+143,postinc1
 33200  014874  0060  F5D3  FFE6   	movff	_C+116,postinc1
 33201  01487A  0060  F5D7  FFE6   	movff	_C+117,postinc1
 33202  014880  0060  F5DB  FFE6   	movff	_C+118,postinc1
 33203  014886  0060  F5DF  FFE6   	movff	_C+119,postinc1
 33204  01488C  0060  F5C3  FFE6   	movff	_C+112,postinc1
 33205  014892  0060  F5C7  FFE6   	movff	_C+113,postinc1
 33206  014898  0060  F5CB  FFE6   	movff	_C+114,postinc1
 33207  01489E  0060  F5CF  FFE6   	movff	_C+115,postinc1
 33208  0148A4  0060  F5E3  FFE6   	movff	_C+120,postinc1
 33209  0148AA  0060  F5E7  FFE6   	movff	_C+121,postinc1
 33210  0148B0  0060  F5EB  FFE6   	movff	_C+122,postinc1
 33211  0148B6  0060  F5EF  FFE6   	movff	_C+123,postinc1
 33212  0148BC  0060  F5F3  FFE6   	movff	_C+124,postinc1
 33213  0148C2  0060  F5F7  FFE6   	movff	_C+125,postinc1
 33214  0148C8  0060  F5FB  FFE6   	movff	_C+126,postinc1
 33215  0148CE  0060  F5FF  FFE6   	movff	_C+127,postinc1
 33216  0148D4  0060  F593  FFE6   	movff	_C+100,postinc1
 33217  0148DA  0060  F597  FFE6   	movff	_C+101,postinc1
 33218  0148E0  0060  F59B  FFE6   	movff	_C+102,postinc1
 33219  0148E6  0060  F59F  FFE6   	movff	_C+103,postinc1
 33220  0148EC  0060  F533  FFE6   	movff	_C+76,postinc1
 33221  0148F2  0060  F537  FFE6   	movff	_C+77,postinc1
 33222  0148F8  0060  F53B  FFE6   	movff	_C+78,postinc1
 33223  0148FE  0060  F53F  FFE6   	movff	_C+79,postinc1
 33224  014904  0060  F543  FFE6   	movff	_C+80,postinc1
 33225  01490A  0060  F547  FFE6   	movff	_C+81,postinc1
 33226  014910  0060  F54B  FFE6   	movff	_C+82,postinc1
 33227  014916  0060  F54F  FFE6   	movff	_C+83,postinc1
 33228  01491C  0060  F553  FFE6   	movff	_C+84,postinc1
 33229  014922  0060  F557  FFE6   	movff	_C+85,postinc1
 33230  014928  0060  F55B  FFE6   	movff	_C+86,postinc1
 33231  01492E  0060  F55F  FFE6   	movff	_C+87,postinc1
 33232  014934  0060  FA23  FFE6   	movff	_V+129,postinc1
 33233  01493A  0060  FA27  FFE6   	movff	_V+130,postinc1
 33234  014940  0060  FA2B  FFE6   	movff	_V+131,postinc1
 33235  014946  0060  FA2F  FFE6   	movff	_V+132,postinc1
 33236  01494C  0E65               	movlw	low STR_65
 33237  01494E  6EE6               	movwf	postinc1,c
 33238  014950  0EFC               	movlw	high STR_65
 33239  014952  6EE6               	movwf	postinc1,c
 33240                           
 33241                           ;stkvar	_log_ptr @ sp[(-56)+0]
 33242  014954  0EC8               	movlw	-56
 33243  014956  006F FF8F FFE6     	movff	plusw1,postinc1
 33244  01495C  006F FF8F FFE6     	movff	plusw1,postinc1
 33245  014962  0E38               	movlw	56
 33246  014964  6EE6               	movwf	postinc1,c
 33247  014966  ECBB  F0C9         	call	_sprintf	;wreg free
 33248                           
 33249                           ; BSR set to: 0
 33250                           ;bsoc.c: 83:   StartTimer(TMR_DISPLAY, 125);
 33251  01496A  0E7D               	movlw	125
 33252  01496C  6EE6               	movwf	postinc1,c
 33253  01496E  0E00               	movlw	0
 33254  014970  6EE6               	movwf	postinc1,c
 33255  014972  0E0A               	movlw	10
 33256  014974  6EE6               	movwf	postinc1,c
 33257  014976  EC12  F0D7         	call	_StartTimer	;wreg free
 33258                           
 33259                           ;bsoc.c: 84:   send_port_data_dma(strlen((char*) log_ptr));
 33260                           ;stkvar	_log_ptr @ sp[(-2)+0]
 33261  01497A  0EFE               	movlw	-2
 33262  01497C  006F FF8F FFE6     	movff	plusw1,postinc1
 33263  014982  006F FF8F FFE6     	movff	plusw1,postinc1
 33264  014988  EC7D  F0D0         	call	_strlen	;wreg free
 33265  01498C  0060  F09B  FFE6   	movff	btemp,postinc1
 33266  014992  0060  F09F  FFE6   	movff	btemp+1,postinc1
 33267  014998  EC87  F0D5         	call	_send_port_data_dma	;wreg free
 33268  01499C                     l12641:
 33269                           
 33270                           ;bsoc.c: 86:  if (log_update_wait >= 10)
 33271  01499C  0E09               	movlw	9
 33272  01499E  641A               	cpfsgt	calc_bsoc@log_update_wait^0,c
 33273  0149A0  D001               	goto	l2036
 33274                           
 33275                           ;bsoc.c: 87:   log_update_wait = 0;
 33276  0149A2  6A1A               	clrf	calc_bsoc@log_update_wait^0,c
 33277  0149A4                     l2036:
 33278                           
 33279                           ;bsoc.c: 89:  C.update = 0;
 33280  0149A4  0101               	movlb	1	; () banked
 33281  0149A6  6BB0               	clrf	(_C+176)& (0+255),b	;volatile
 33282                           
 33283                           ; BSR set to: 1
 33284                           
 33285                           ;bsoc.c: 91:  do { LATEbits.LATE1 = 0; } while(0);
 33286  0149A8  92BE               	bcf	190,1,c	;volatile
 33287                           
 33288                           ; BSR set to: 1
 33289                           ; _calc_bsoc: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 33290  0149AA  52E5               	movf	postdec1,f,c
 33291  0149AC  52E5               	movf	postdec1,f,c
 33292  0149AE  0012               	return		;funcret
 33293  0149B0                     __end_of_calc_bsoc:
 33294                           	opt callstack 0
 33295                           
 33296 ;; *************** function _send_port_data_dma *****************
 33297 ;; Defined at:
 33298 ;;		line 258 in file "eadog.c"
 33299 ;; Parameters:    Size  Location     Type
 33300 ;;  dsize           2  [STACK] unsigned short 
 33301 ;; Auto vars:     Size  Location     Type
 33302 ;;		None
 33303 ;; Return value:  Size  Location     Type
 33304 ;;                  1  [STACK] void 
 33305 ;; Registers used:
 33306 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 33307 ;; Tracked objects:
 33308 ;;		On entry : 0/0
 33309 ;;		On exit  : 3F/3B
 33310 ;;		Unchanged: 0/0
 33311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33316 ;;Total ram usage:        0 bytes
 33317 ;; Hardware stack levels used:    1
 33318 ;; Hardware stack levels required when called:    3
 33319 ;; This function calls:
 33320 ;;		Nothing
 33321 ;; This function is called by:
 33322 ;;		_calc_bsoc
 33323 ;; This function uses a reentrant model
 33324 ;;
 33325                           
 33326                           	psect	text152
 33327  01AB0E                     __ptext152:
 33328                           	opt callstack 0
 33329  01AB0E                     _send_port_data_dma:
 33330                           	opt callstack 11
 33331                           
 33332                           ;eadog.c: 258: void send_port_data_dma(uint16_t dsize);eadog.c: 259: {;eadog.c: 260:  if
      +                           (dsize > 512)
 33333                           ;stkvar	_dsize @ sp[(0)+-2]
 33334                           
 33335                           ; BSR set to: 1
 33336                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33337                           ;incstack = 0
 33338  01AB0E  0EFE               	movlw	-2
 33339  01AB10  04E3               	decf	plusw1,w,c
 33340  01AB12  0EFF               	movlw	-1
 33341  01AB14  006F FF8C  F026    	movff	plusw1,btemp
 33342  01AB1A  0E02               	movlw	2
 33343  01AB1C  5A26               	subwfb	btemp^0,f,c
 33344  01AB1E  A0D8               	btfss	status,0,c
 33345  01AB20  D00C               	goto	l9835
 33346                           
 33347                           ;eadog.c: 261:   dsize = 512;
 33348  01AB22  0E00               	movlw	0
 33349  01AB24  6E30               	movwf	(btemp+10)^0,c
 33350  01AB26  0E02               	movlw	2
 33351  01AB28  6E31               	movwf	(btemp+11)^0,c
 33352                           
 33353                           ;stkvar	_dsize @ sp[(0)+-2]
 33354  01AB2A  0EFE               	movlw	-2
 33355  01AB2C  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 33356  01AB32  0EFF               	movlw	-1
 33357  01AB34  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 33358  01AB3A                     l9835:
 33359                           
 33360                           ;eadog.c: 263:  DMA2CON0bits.EN = 0;
 33361  01AB3A  013B               	movlb	59	; () banked
 33362  01AB3C  9FDC               	bcf	220,7,b	;volatile
 33363                           
 33364                           ; BSR set to: 59
 33365                           ;eadog.c: 264:  DMA2SSZ = dsize;
 33366                           ;stkvar	_dsize @ sp[(0)+-2]
 33367  01AB3E  0EFE               	movlw	-2
 33368  01AB40  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 33369  01AB46  0EFF               	movlw	-1
 33370  01AB48  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 33371                           
 33372                           ; BSR set to: 59
 33373                           ;eadog.c: 265:  DMA2DSZ = 1;
 33374  01AB4E  0E00               	movlw	0
 33375  01AB50  6FCF               	movwf	207,b	;volatile
 33376  01AB52  0E01               	movlw	1
 33377  01AB54  6FCE               	movwf	206,b	;volatile
 33378                           
 33379                           ; BSR set to: 59
 33380                           ;eadog.c: 266:  DMA2CON0bits.EN = 1;
 33381  01AB56  8FDC               	bsf	220,7,b	;volatile
 33382                           
 33383                           ; BSR set to: 59
 33384                           ;eadog.c: 267:  DMA2CON0bits.DMA2SIRQEN = 1;
 33385  01AB58  8DDC               	bsf	220,6,b	;volatile
 33386                           
 33387                           ; BSR set to: 59
 33388                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 33389  01AB5A  52E5               	movf	postdec1,f,c
 33390  01AB5C  52E5               	movf	postdec1,f,c
 33391  01AB5E  0012               	return		;funcret
 33392  01AB60                     __end_of_send_port_data_dma:
 33393                           	opt callstack 0
 33394                           
 33395 ;; *************** function _port_data_dma_ptr *****************
 33396 ;; Defined at:
 33397 ;;		line 273 in file "eadog.c"
 33398 ;; Parameters:    Size  Location     Type
 33399 ;;		None
 33400 ;; Auto vars:     Size  Location     Type
 33401 ;;		None
 33402 ;; Return value:  Size  Location     Type
 33403 ;;                  2  [STACK] PTR unsigned char 
 33404 ;; Registers used:
 33405 ;;		wreg, status,2, status,0, btemp, btemp+1
 33406 ;; Tracked objects:
 33407 ;;		On entry : 3F/2
 33408 ;;		On exit  : 0/0
 33409 ;;		Unchanged: 0/0
 33410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33415 ;;Total ram usage:        0 bytes
 33416 ;; Hardware stack levels used:    1
 33417 ;; Hardware stack levels required when called:    3
 33418 ;; This function calls:
 33419 ;;		Nothing
 33420 ;; This function is called by:
 33421 ;;		_calc_bsoc
 33422 ;; This function uses a reentrant model
 33423 ;;
 33424                           
 33425                           	psect	text153
 33426  01B8C0                     __ptext153:
 33427                           	opt callstack 0
 33428  01B8C0                     _port_data_dma_ptr:
 33429                           	opt callstack 11
 33430                           
 33431                           ;eadog.c: 275:  return port_data;
 33432                           
 33433                           ; BSR set to: 59
 33434                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33435                           ;incstack = 0
 33436  01B8C0  0EFF               	movlw	low _port_data
 33437  01B8C2  6E26               	movwf	btemp^0,c
 33438  01B8C4  0E05               	movlw	high _port_data
 33439  01B8C6  6E27               	movwf	(btemp+1)^0,c
 33440                           
 33441                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33442  01B8C8  0012               	return		;funcret
 33443  01B8CA                     __end_of_port_data_dma_ptr:
 33444                           	opt callstack 0
 33445                           
 33446 ;; *************** function _INT0_ISR *****************
 33447 ;; Defined at:
 33448 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 33449 ;; Parameters:    Size  Location     Type
 33450 ;;		None
 33451 ;; Auto vars:     Size  Location     Type
 33452 ;;		None
 33453 ;; Return value:  Size  Location     Type
 33454 ;;                  1    wreg      void 
 33455 ;; Registers used:
 33456 ;;		wreg, status,2, status,0, pclath, tosl
 33457 ;; Tracked objects:
 33458 ;;		On entry : 0/0
 33459 ;;		On exit  : 0/0
 33460 ;;		Unchanged: 0/0
 33461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33466 ;;Total ram usage:        0 bytes
 33467 ;; Hardware stack levels used:    1
 33468 ;; Hardware stack levels required when called:    2
 33469 ;; This function calls:
 33470 ;;		_INT0_CallBack
 33471 ;; This function is called by:
 33472 ;;		Interrupt level 2
 33473 ;; This function uses a non-reentrant model
 33474 ;;
 33475                           
 33476                           	psect	text154
 33477  01B898                     __ptext154:
 33478                           	opt callstack 0
 33479  01B898                     _INT0_ISR:
 33480                           	opt callstack 3
 33481                           
 33482                           ;incstack = 0
 33483  01B898  EE14  F142         	lfsr	1,___inthi_sp
 33484                           
 33485                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 33486  01B89C  0139               	movlb	57	; () banked
 33487  01B89E  91A1               	bcf	161,0,b	;volatile
 33488                           
 33489                           ; BSR set to: 57
 33490                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 33491  01B8A0  EC27  F0DB         	call	_INT0_CallBack	;wreg free
 33492  01B8A4  0011               	retfie		f
 33493  01B8A6                     __end_of_INT0_ISR:
 33494                           	opt callstack 0
 33495                           
 33496 ;; *************** function _INT0_CallBack *****************
 33497 ;; Defined at:
 33498 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 33499 ;; Parameters:    Size  Location     Type
 33500 ;;		None
 33501 ;; Auto vars:     Size  Location     Type
 33502 ;;		None
 33503 ;; Return value:  Size  Location     Type
 33504 ;;                  1  [STACK] void 
 33505 ;; Registers used:
 33506 ;;		wreg, status,2, status,0, pclath, tosl
 33507 ;; Tracked objects:
 33508 ;;		On entry : 3F/39
 33509 ;;		On exit  : 0/0
 33510 ;;		Unchanged: 0/0
 33511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33516 ;;Total ram usage:        0 bytes
 33517 ;; Hardware stack levels used:    1
 33518 ;; Hardware stack levels required when called:    1
 33519 ;; This function calls:
 33520 ;;		Absolute function
 33521 ;;		_INT0_DefaultInterruptHandler
 33522 ;; This function is called by:
 33523 ;;		_INT0_ISR
 33524 ;; This function uses a reentrant model
 33525 ;;
 33526                           
 33527                           	psect	text155
 33528  01B64E                     __ptext155:
 33529                           	opt callstack 0
 33530  01B64E                     _INT0_CallBack:
 33531                           	opt callstack 3
 33532                           
 33533                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 33534                           
 33535                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33536                           ;incstack = 0
 33537  01B64E  5007               	movf	_INT0_InterruptHandler^0,w,c
 33538  01B650  1008               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 33539  01B652  1009               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 33540  01B654  B4D8               	btfsc	status,2,c
 33541  01B656  0012               	return	
 33542                           
 33543                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 33544  01B658  D801               	call	u455_48
 33545  01B65A  0012               	return	
 33546  01B65C                     u455_48:
 33547  01B65C  0005               	push	
 33548  01B65E  6EFA               	movwf	pclath,c
 33549  01B660  5007               	movf	_INT0_InterruptHandler^0,w,c
 33550  01B662  6EFD               	movwf	tosl,c
 33551  01B664  5008               	movf	(_INT0_InterruptHandler+1)^0,w,c
 33552  01B666  6EFE               	movwf	tosh,c
 33553  01B668  5009               	movf	(_INT0_InterruptHandler+2)^0,w,c
 33554  01B66A  6EFF               	movwf	tosu,c
 33555  01B66C  50FA               	movf	pclath,w,c
 33556  01B66E  0012               	return		;indir
 33557  01B670                     __end_of_INT0_CallBack:
 33558                           	opt callstack 0
 33559                           
 33560 ;; *************** function _INT0_DefaultInterruptHandler *****************
 33561 ;; Defined at:
 33562 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 33563 ;; Parameters:    Size  Location     Type
 33564 ;;		None
 33565 ;; Auto vars:     Size  Location     Type
 33566 ;;		None
 33567 ;; Return value:  Size  Location     Type
 33568 ;;                  1  [STACK] void 
 33569 ;; Registers used:
 33570 ;;		None
 33571 ;; Tracked objects:
 33572 ;;		On entry : 0/39
 33573 ;;		On exit  : 0/0
 33574 ;;		Unchanged: 0/0
 33575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33580 ;;Total ram usage:        0 bytes
 33581 ;; Hardware stack levels used:    1
 33582 ;; This function calls:
 33583 ;;		Nothing
 33584 ;; This function is called by:
 33585 ;;		_EXT_INT_Initialize
 33586 ;;		_INT0_CallBack
 33587 ;; This function uses a reentrant model
 33588 ;;
 33589                           
 33590                           	psect	text156
 33591  01B93A                     __ptext156:
 33592                           	opt callstack 0
 33593  01B93A                     _INT0_DefaultInterruptHandler:
 33594                           	opt callstack 3
 33595                           
 33596                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 33597                           
 33598                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33599                           ;incstack = 0
 33600  01B93A  0012               	return		;funcret
 33601  01B93C                     __end_of_INT0_DefaultInterruptHandler:
 33602                           	opt callstack 0
 33603                           
 33604 ;; *************** function _Default_ISR *****************
 33605 ;; Defined at:
 33606 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 33607 ;; Parameters:    Size  Location     Type
 33608 ;;		None
 33609 ;; Auto vars:     Size  Location     Type
 33610 ;;		None
 33611 ;; Return value:  Size  Location     Type
 33612 ;;                  1    wreg      void 
 33613 ;; Registers used:
 33614 ;;		None
 33615 ;; Tracked objects:
 33616 ;;		On entry : 0/0
 33617 ;;		On exit  : 0/0
 33618 ;;		Unchanged: 0/0
 33619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33624 ;;Total ram usage:        0 bytes
 33625 ;; Hardware stack levels used:    1
 33626 ;; This function calls:
 33627 ;;		Nothing
 33628 ;; This function is called by:
 33629 ;;		Interrupt level 2
 33630 ;; This function uses a non-reentrant model
 33631 ;;
 33632                           
 33633                           	psect	text157
 33634  01B930                     __ptext157:
 33635                           	opt callstack 0
 33636  01B930                     _Default_ISR:
 33637                           	opt callstack 5
 33638                           
 33639                           ;incstack = 0
 33640  01B930  EE14  F142         	lfsr	1,___inthi_sp
 33641  01B934  0011               	retfie		f
 33642  01B936                     __end_of_Default_ISR:
 33643                           	opt callstack 0
 33644                           
 33645 ;; *************** function _ADCC_ISR *****************
 33646 ;; Defined at:
 33647 ;;		line 314 in file "mcc_generated_files/adcc.c"
 33648 ;; Parameters:    Size  Location     Type
 33649 ;;		None
 33650 ;; Auto vars:     Size  Location     Type
 33651 ;;		None
 33652 ;; Return value:  Size  Location     Type
 33653 ;;                  1    wreg      void 
 33654 ;; Registers used:
 33655 ;;		wreg, status,2, status,0, pclath, tosl
 33656 ;; Tracked objects:
 33657 ;;		On entry : 0/0
 33658 ;;		On exit  : 0/0
 33659 ;;		Unchanged: 0/0
 33660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33665 ;;Total ram usage:        0 bytes
 33666 ;; Hardware stack levels used:    1
 33667 ;; Hardware stack levels required when called:    1
 33668 ;; This function calls:
 33669 ;;		Absolute function
 33670 ;;		_ADCC_DefaultInterruptHandler
 33671 ;;		_adc_int_handler
 33672 ;; This function is called by:
 33673 ;;		Interrupt level 2
 33674 ;; This function uses a non-reentrant model
 33675 ;;
 33676                           
 33677                           	psect	text158
 33678  01B22C                     __ptext158:
 33679                           	opt callstack 0
 33680  01B22C                     _ADCC_ISR:
 33681                           	opt callstack 4
 33682                           
 33683                           ;incstack = 0
 33684  01B22C  EE14  F142         	lfsr	1,___inthi_sp
 33685                           
 33686                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 33687  01B230  0139               	movlb	57	; () banked
 33688  01B232  95A1               	bcf	161,2,b	;volatile
 33689                           
 33690                           ; BSR set to: 57
 33691                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 33692  01B234  0100               	movlb	0	; () banked
 33693  01B236  51A6               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 33694  01B238  11A7               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 33695  01B23A  11A8               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 33696  01B23C  B4D8               	btfsc	status,2,c
 33697  01B23E  0011               	retfie		f
 33698                           
 33699                           ; BSR set to: 0
 33700                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 33701  01B240  D801               	call	i2u1025_48
 33702  01B242  0011               	retfie		f
 33703  01B244                     i2u1025_48:
 33704  01B244  0005               	push	
 33705  01B246  6EFA               	movwf	pclath,c
 33706  01B248  51A6               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 33707  01B24A  6EFD               	movwf	tosl,c
 33708  01B24C  51A7               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 33709  01B24E  6EFE               	movwf	tosh,c
 33710  01B250  51A8               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 33711  01B252  6EFF               	movwf	tosu,c
 33712  01B254  50FA               	movf	pclath,w,c
 33713  01B256  0012               	return		;indir
 33714  01B258                     __end_of_ADCC_ISR:
 33715                           	opt callstack 0
 33716                           
 33717 ;; *************** function _adc_int_t_handler *****************
 33718 ;; Defined at:
 33719 ;;		line 143 in file "daq.c"
 33720 ;; Parameters:    Size  Location     Type
 33721 ;;		None
 33722 ;; Auto vars:     Size  Location     Type
 33723 ;;		None
 33724 ;; Return value:  Size  Location     Type
 33725 ;;                  1  [STACK] void 
 33726 ;; Registers used:
 33727 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 33728 ;; Tracked objects:
 33729 ;;		On entry : 3F/0
 33730 ;;		On exit  : 1/0
 33731 ;;		Unchanged: 0/0
 33732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33737 ;;Total ram usage:        0 bytes
 33738 ;; Hardware stack levels used:    1
 33739 ;; Hardware stack levels required when called:    1
 33740 ;; This function calls:
 33741 ;;		_ADCC_DischargeSampleCapacitor
 33742 ;;		_ADCC_StartConversion
 33743 ;; This function is called by:
 33744 ;;		_start_adc_scan
 33745 ;;		_ADCC_ThresholdISR
 33746 ;; This function uses a reentrant model
 33747 ;;
 33748                           
 33749                           	psect	text159
 33750  01A60C                     __ptext159:
 33751                           	opt callstack 0
 33752  01A60C                     _adc_int_t_handler:
 33753                           	opt callstack 3
 33754                           
 33755                           ;daq.c: 148:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 33756                           
 33757                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33758                           ;incstack = 0
 33759  01A60C  013E               	movlb	62	; () banked
 33760  01A60E  51E6               	movf	230,w,b	;volatile
 33761  01A610  006F FB9C  F026    	movff	16103,btemp	;volatile
 33762  01A616  6A27               	clrf	(btemp+1)^0,c
 33763  01A618  0060  F098  F027   	movff	btemp,btemp+1
 33764  01A61E  6A26               	clrf	btemp^0,c
 33765  01A620  2626               	addwf	btemp^0,f,c
 33766  01A622  0E00               	movlw	0
 33767  01A624  2227               	addwfc	(btemp+1)^0,f,c
 33768  01A626  0100               	movlb	0	; () banked
 33769  01A628  51D5               	movf	(_R+36)& (0+255),w,b	;volatile
 33770  01A62A  0D02               	mullw	2
 33771  01A62C  50F3               	movf	243,w,c
 33772  01A62E  0FB1               	addlw	low _R
 33773  01A630  6ED9               	movwf	fsr2l,c
 33774  01A632  6ADA               	clrf	fsr2h,c
 33775  01A634  0060  F09B  FFDE   	movff	btemp,postinc2
 33776  01A63A  0060  F09F  FFDD   	movff	btemp+1,postdec2
 33777  01A640                     l10969:
 33778                           
 33779                           ;daq.c: 150:   if (++R.scan_index > 0XD) {
 33780  01A640  0100               	movlb	0	; () banked
 33781  01A642  2BD5               	incf	(_R+36)& (0+255),f,b	;volatile
 33782  01A644  0E0D               	movlw	13
 33783  01A646  65D5               	cpfsgt	(_R+36)& (0+255),b	;volatile
 33784  01A648  D003               	goto	l10975
 33785                           
 33786                           ; BSR set to: 0
 33787                           ;daq.c: 151:    R.done = 1;
 33788  01A64A  0E01               	movlw	1
 33789  01A64C  6FD8               	movwf	(_R+39)& (0+255),b	;volatile
 33790  01A64E  0012               	return	
 33791  01A650                     l10975:
 33792                           
 33793                           ; BSR set to: 0
 33794                           ;daq.c: 157:  } while (!((R.scan_select >> R.scan_index) &0x1));
 33795  01A650  0060  F354  F031   	movff	_R+36,btemp+11	;volatile
 33796  01A656  EE20  F0D6         	lfsr	2,_R+37	;volatile
 33797  01A65A  006F FF78  F02E    	movff	postinc2,btemp+8
 33798  01A660  006F FF74  F02F    	movff	postdec2,btemp+9
 33799  01A666  2A31               	incf	(btemp+11)^0,f,c
 33800  01A668  D003               	goto	u1022_44
 33801  01A66A                     u1022_45:
 33802  01A66A  90D8               	bcf	status,0,c
 33803  01A66C  322F               	rrcf	(btemp+9)^0,f,c
 33804  01A66E  322E               	rrcf	(btemp+8)^0,f,c
 33805  01A670                     u1022_44:
 33806  01A670  2E31               	decfsz	(btemp+11)^0,f,c
 33807  01A672  D7FB               	goto	u1022_45
 33808  01A674  A02E               	btfss	(btemp+8)^0,0,c
 33809  01A676  D7E4               	goto	l10969
 33810                           
 33811                           ;daq.c: 158:  ADCC_DischargeSampleCapacitor();
 33812  01A678  EC77  F0DC         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 33813                           
 33814                           ; BSR set to: 62
 33815                           ;daq.c: 159:  ADCC_StartConversion(R.scan_index & 0xf);
 33816  01A67C  0100               	movlb	0	; () banked
 33817  01A67E  51D5               	movf	(_R+36)& (0+255),w,b	;volatile
 33818  01A680  0B0F               	andlw	15
 33819  01A682  6EE6               	movwf	postinc1,c
 33820  01A684  EC0E  F0DC         	call	_ADCC_StartConversion	;wreg free
 33821                           
 33822                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33823  01A688  0012               	return		;funcret
 33824  01A68A                     __end_of_adc_int_t_handler:
 33825                           	opt callstack 0
 33826                           
 33827 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 33828 ;; Defined at:
 33829 ;;		line 339 in file "mcc_generated_files/adcc.c"
 33830 ;; Parameters:    Size  Location     Type
 33831 ;;		None
 33832 ;; Auto vars:     Size  Location     Type
 33833 ;;		None
 33834 ;; Return value:  Size  Location     Type
 33835 ;;                  1  [STACK] void 
 33836 ;; Registers used:
 33837 ;;		None
 33838 ;; Tracked objects:
 33839 ;;		On entry : 3F/0
 33840 ;;		On exit  : 0/0
 33841 ;;		Unchanged: 0/0
 33842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33847 ;;Total ram usage:        0 bytes
 33848 ;; Hardware stack levels used:    1
 33849 ;; This function calls:
 33850 ;;		Nothing
 33851 ;; This function is called by:
 33852 ;;		_ADCC_Initialize
 33853 ;;		_ADCC_ISR
 33854 ;;		_ADCC_ThresholdISR
 33855 ;; This function uses a reentrant model
 33856 ;;
 33857                           
 33858                           	psect	text160
 33859  01B93C                     __ptext160:
 33860                           	opt callstack 0
 33861  01B93C                     _ADCC_DefaultInterruptHandler:
 33862                           	opt callstack 4
 33863                           
 33864                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 33865                           
 33866                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33867                           ;incstack = 0
 33868  01B93C  0012               	return		;funcret
 33869  01B93E                     __end_of_ADCC_DefaultInterruptHandler:
 33870                           	opt callstack 0
 33871                           
 33872 ;; *************** function _adc_int_handler *****************
 33873 ;; Defined at:
 33874 ;;		line 133 in file "daq.c"
 33875 ;; Parameters:    Size  Location     Type
 33876 ;;		None
 33877 ;; Auto vars:     Size  Location     Type
 33878 ;;		None
 33879 ;; Return value:  Size  Location     Type
 33880 ;;                  1  [STACK] void 
 33881 ;; Registers used:
 33882 ;;		None
 33883 ;; Tracked objects:
 33884 ;;		On entry : 3F/0
 33885 ;;		On exit  : 0/0
 33886 ;;		Unchanged: 0/0
 33887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33892 ;;Total ram usage:        0 bytes
 33893 ;; Hardware stack levels used:    1
 33894 ;; This function calls:
 33895 ;;		Nothing
 33896 ;; This function is called by:
 33897 ;;		_start_adc_scan
 33898 ;;		_ADCC_ISR
 33899 ;; This function uses a reentrant model
 33900 ;;
 33901                           
 33902                           	psect	text161
 33903  01B93E                     __ptext161:
 33904                           	opt callstack 0
 33905  01B93E                     _adc_int_handler:
 33906                           	opt callstack 4
 33907                           
 33908                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 33909                           
 33910                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33911                           ;incstack = 0
 33912  01B93E  0012               	return		;funcret
 33913  01B940                     __end_of_adc_int_handler:
 33914                           	opt callstack 0
 33915                           
 33916 ;; *************** function _ADCC_ThresholdISR *****************
 33917 ;; Defined at:
 33918 ;;		line 327 in file "mcc_generated_files/adcc.c"
 33919 ;; Parameters:    Size  Location     Type
 33920 ;;		None
 33921 ;; Auto vars:     Size  Location     Type
 33922 ;;		None
 33923 ;; Return value:  Size  Location     Type
 33924 ;;                  1    wreg      void 
 33925 ;; Registers used:
 33926 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 33927 ;; Tracked objects:
 33928 ;;		On entry : 0/0
 33929 ;;		On exit  : 0/0
 33930 ;;		Unchanged: 0/0
 33931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33934 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33935 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33936 ;;Total ram usage:        5 bytes
 33937 ;; Hardware stack levels used:    1
 33938 ;; Hardware stack levels required when called:    2
 33939 ;; This function calls:
 33940 ;;		Absolute function
 33941 ;;		_ADCC_DefaultInterruptHandler
 33942 ;;		_adc_int_t_handler
 33943 ;; This function is called by:
 33944 ;;		Interrupt level 2
 33945 ;; This function uses a non-reentrant model
 33946 ;;
 33947                           
 33948                           	psect	text162
 33949  01A760                     __ptext162:
 33950                           	opt callstack 0
 33951  01A760                     _ADCC_ThresholdISR:
 33952                           	opt callstack 3
 33953                           
 33954                           ;incstack = 0
 33955  01A760  0060  F098  F046   	movff	btemp,??_ADCC_ThresholdISR
 33956  01A766  0060  F09C  F047   	movff	btemp+1,??_ADCC_ThresholdISR+1
 33957  01A76C  0060  F0B8  F048   	movff	btemp+8,??_ADCC_ThresholdISR+2
 33958  01A772  0060  F0BC  F049   	movff	btemp+9,??_ADCC_ThresholdISR+3
 33959  01A778  0060  F0C4  F04A   	movff	btemp+11,??_ADCC_ThresholdISR+4
 33960  01A77E  EE14  F142         	lfsr	1,___inthi_sp
 33961                           
 33962                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 33963  01A782  0139               	movlb	57	; () banked
 33964  01A784  97A1               	bcf	161,3,b	;volatile
 33965                           
 33966                           ; BSR set to: 57
 33967                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 33968  01A786  0100               	movlb	0	; () banked
 33969  01A788  51A3               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 33970  01A78A  11A4               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 33971  01A78C  11A5               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 33972  01A78E  B4D8               	btfsc	status,2,c
 33973  01A790  D00C               	goto	i2u1027_49
 33974                           
 33975                           ; BSR set to: 0
 33976                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 33977  01A792  D801               	call	i2u1027_48
 33978  01A794  D00A               	goto	i2u1027_49
 33979  01A796                     i2u1027_48:
 33980  01A796  0005               	push	
 33981  01A798  6EFA               	movwf	pclath,c
 33982  01A79A  51A3               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 33983  01A79C  6EFD               	movwf	tosl,c
 33984  01A79E  51A4               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 33985  01A7A0  6EFE               	movwf	tosh,c
 33986  01A7A2  51A5               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 33987  01A7A4  6EFF               	movwf	tosu,c
 33988  01A7A6  50FA               	movf	pclath,w,c
 33989  01A7A8  0012               	return		;indir
 33990  01A7AA                     i2u1027_49:
 33991  01A7AA  0060  F128  F031   	movff	??_ADCC_ThresholdISR+4,btemp+11
 33992  01A7B0  0060  F124  F02F   	movff	??_ADCC_ThresholdISR+3,btemp+9
 33993  01A7B6  0060  F120  F02E   	movff	??_ADCC_ThresholdISR+2,btemp+8
 33994  01A7BC  0060  F11C  F027   	movff	??_ADCC_ThresholdISR+1,btemp+1
 33995  01A7C2  0060  F118  F026   	movff	??_ADCC_ThresholdISR,btemp
 33996  01A7C8  0011               	retfie		f
 33997  01A7CA                     __end_of_ADCC_ThresholdISR:
 33998                           	opt callstack 0
 33999                           
 34000 ;; *************** function _UART1_rx_vect_isr *****************
 34001 ;; Defined at:
 34002 ;;		line 181 in file "mcc_generated_files/uart1.c"
 34003 ;; Parameters:    Size  Location     Type
 34004 ;;		None
 34005 ;; Auto vars:     Size  Location     Type
 34006 ;;		None
 34007 ;; Return value:  Size  Location     Type
 34008 ;;                  1    wreg      void 
 34009 ;; Registers used:
 34010 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 34011 ;; Tracked objects:
 34012 ;;		On entry : 0/0
 34013 ;;		On exit  : 0/0
 34014 ;;		Unchanged: 0/0
 34015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34020 ;;Total ram usage:        0 bytes
 34021 ;; Hardware stack levels used:    1
 34022 ;; Hardware stack levels required when called:    1
 34023 ;; This function calls:
 34024 ;;		Absolute function
 34025 ;;		_UART1_Receive_ISR
 34026 ;; This function is called by:
 34027 ;;		Interrupt level 2
 34028 ;; This function uses a non-reentrant model
 34029 ;;
 34030                           
 34031                           	psect	text163
 34032  01B4E0                     __ptext163:
 34033                           	opt callstack 0
 34034  01B4E0                     _UART1_rx_vect_isr:
 34035                           	opt callstack 4
 34036                           
 34037                           ;incstack = 0
 34038  01B4E0  EE14  F142         	lfsr	1,___inthi_sp
 34039                           
 34040                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 34041  01B4E4  0100               	movlb	0	; () banked
 34042  01B4E6  51A9               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 34043  01B4E8  11AA               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 34044  01B4EA  11AB               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 34045  01B4EC  B4D8               	btfsc	status,2,c
 34046  01B4EE  0011               	retfie		f
 34047                           
 34048                           ; BSR set to: 0
 34049                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 34050  01B4F0  D801               	call	i2u1238_48
 34051  01B4F2  0011               	retfie		f
 34052  01B4F4                     i2u1238_48:
 34053  01B4F4  0005               	push	
 34054  01B4F6  6EFA               	movwf	pclath,c
 34055  01B4F8  51A9               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 34056  01B4FA  6EFD               	movwf	tosl,c
 34057  01B4FC  51AA               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 34058  01B4FE  6EFE               	movwf	tosh,c
 34059  01B500  51AB               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 34060  01B502  6EFF               	movwf	tosu,c
 34061  01B504  50FA               	movf	pclath,w,c
 34062  01B506  0012               	return		;indir
 34063  01B508                     __end_of_UART1_rx_vect_isr:
 34064                           	opt callstack 0
 34065                           
 34066 ;; *************** function _UART1_Receive_ISR *****************
 34067 ;; Defined at:
 34068 ;;		line 192 in file "mcc_generated_files/uart1.c"
 34069 ;; Parameters:    Size  Location     Type
 34070 ;;		None
 34071 ;; Auto vars:     Size  Location     Type
 34072 ;;		None
 34073 ;; Return value:  Size  Location     Type
 34074 ;;                  1  [STACK] void 
 34075 ;; Registers used:
 34076 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34077 ;; Tracked objects:
 34078 ;;		On entry : 3F/0
 34079 ;;		On exit  : 0/0
 34080 ;;		Unchanged: 0/0
 34081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34086 ;;Total ram usage:        0 bytes
 34087 ;; Hardware stack levels used:    1
 34088 ;; This function calls:
 34089 ;;		Nothing
 34090 ;; This function is called by:
 34091 ;;		_UART1_Initialize
 34092 ;;		_UART1_rx_vect_isr
 34093 ;; This function uses a reentrant model
 34094 ;;
 34095                           
 34096                           	psect	text164
 34097  01B690                     __ptext164:
 34098                           	opt callstack 0
 34099  01B690                     _UART1_Receive_ISR:
 34100                           	opt callstack 4
 34101                           
 34102                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 34103                           
 34104                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34105                           ;incstack = 0
 34106  01B690  0EEF               	movlw	low _uart1RxBuffer
 34107  01B692  2425               	addwf	_uart1RxHead^0,w,c	;volatile
 34108  01B694  6ED9               	movwf	fsr2l,c
 34109  01B696  6ADA               	clrf	fsr2h,c
 34110  01B698  0E02               	movlw	high _uart1RxBuffer
 34111  01B69A  22DA               	addwfc	fsr2h,f,c
 34112  01B69C  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 34113  01B6A2  2A25               	incf	_uart1RxHead^0,f,c	;volatile
 34114                           
 34115                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 34116  01B6A4  0E07               	movlw	7
 34117  01B6A6  6425               	cpfsgt	_uart1RxHead^0,c
 34118  01B6A8  D001               	goto	l12689
 34119                           
 34120                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 34121  01B6AA  6A25               	clrf	_uart1RxHead^0,c	;volatile
 34122  01B6AC                     l12689:
 34123                           
 34124                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 34125  01B6AC  2A23               	incf	_uart1RxCount^0,f,c	;volatile
 34126                           
 34127                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 34128  01B6AE  0012               	return		;funcret
 34129  01B6B0                     __end_of_UART1_Receive_ISR:
 34130                           	opt callstack 0
 34131                           
 34132 ;; *************** function _UART2_tx_vect_isr *****************
 34133 ;; Defined at:
 34134 ;;		line 195 in file "mcc_generated_files/uart2.c"
 34135 ;; Parameters:    Size  Location     Type
 34136 ;;		None
 34137 ;; Auto vars:     Size  Location     Type
 34138 ;;		None
 34139 ;; Return value:  Size  Location     Type
 34140 ;;                  1    wreg      void 
 34141 ;; Registers used:
 34142 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 34143 ;; Tracked objects:
 34144 ;;		On entry : 0/0
 34145 ;;		On exit  : 0/0
 34146 ;;		Unchanged: 0/0
 34147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34152 ;;Total ram usage:        0 bytes
 34153 ;; Hardware stack levels used:    1
 34154 ;; Hardware stack levels required when called:    1
 34155 ;; This function calls:
 34156 ;;		Absolute function
 34157 ;;		_UART2_Transmit_ISR
 34158 ;; This function is called by:
 34159 ;;		Interrupt level 2
 34160 ;; This function uses a non-reentrant model
 34161 ;;
 34162                           
 34163                           	psect	text165
 34164  01B508                     __ptext165:
 34165                           	opt callstack 0
 34166  01B508                     _UART2_tx_vect_isr:
 34167                           	opt callstack 4
 34168                           
 34169                           ;incstack = 0
 34170  01B508  EE14  F142         	lfsr	1,___inthi_sp
 34171                           
 34172                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 34173  01B50C  0100               	movlb	0	; () banked
 34174  01B50E  51AC               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 34175  01B510  11AD               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 34176  01B512  11AE               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 34177  01B514  B4D8               	btfsc	status,2,c
 34178  01B516  0011               	retfie		f
 34179                           
 34180                           ; BSR set to: 0
 34181                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 34182  01B518  D801               	call	i2u1031_48
 34183  01B51A  0011               	retfie		f
 34184  01B51C                     i2u1031_48:
 34185  01B51C  0005               	push	
 34186  01B51E  6EFA               	movwf	pclath,c
 34187  01B520  51AC               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 34188  01B522  6EFD               	movwf	tosl,c
 34189  01B524  51AD               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 34190  01B526  6EFE               	movwf	tosh,c
 34191  01B528  51AE               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 34192  01B52A  6EFF               	movwf	tosu,c
 34193  01B52C  50FA               	movf	pclath,w,c
 34194  01B52E  0012               	return		;indir
 34195  01B530                     __end_of_UART2_tx_vect_isr:
 34196                           	opt callstack 0
 34197                           
 34198 ;; *************** function _UART2_Transmit_ISR *****************
 34199 ;; Defined at:
 34200 ;;		line 213 in file "mcc_generated_files/uart2.c"
 34201 ;; Parameters:    Size  Location     Type
 34202 ;;		None
 34203 ;; Auto vars:     Size  Location     Type
 34204 ;;		None
 34205 ;; Return value:  Size  Location     Type
 34206 ;;                  1  [STACK] void 
 34207 ;; Registers used:
 34208 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34209 ;; Tracked objects:
 34210 ;;		On entry : 3F/0
 34211 ;;		On exit  : 3B/39
 34212 ;;		Unchanged: 0/0
 34213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34218 ;;Total ram usage:        0 bytes
 34219 ;; Hardware stack levels used:    1
 34220 ;; This function calls:
 34221 ;;		Nothing
 34222 ;; This function is called by:
 34223 ;;		_UART2_Initialize
 34224 ;;		_UART2_tx_vect_isr
 34225 ;; This function uses a reentrant model
 34226 ;;
 34227                           
 34228                           	psect	text166
 34229  01B258                     __ptext166:
 34230                           	opt callstack 0
 34231  01B258                     _UART2_Transmit_ISR:
 34232                           	opt callstack 4
 34233                           
 34234                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 34235                           
 34236                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34237                           ;incstack = 0
 34238  01B258  0E40               	movlw	64
 34239  01B25A  6020               	cpfslt	_uart2TxBufferRemaining^0,c
 34240  01B25C  D010               	goto	l673
 34241                           
 34242                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 34243  01B25E  0E54               	movlw	low _uart2TxBuffer
 34244  01B260  2421               	addwf	_uart2TxTail^0,w,c	;volatile
 34245  01B262  6ED9               	movwf	fsr2l,c
 34246  01B264  6ADA               	clrf	fsr2h,c
 34247  01B266  0E03               	movlw	high _uart2TxBuffer
 34248  01B268  22DA               	addwfc	fsr2h,f,c
 34249  01B26A  50DF               	movf	indf2,w,c
 34250  01B26C  013D               	movlb	61	; () banked
 34251  01B26E  6FD2               	movwf	210,b	;volatile
 34252                           
 34253                           ; BSR set to: 61
 34254  01B270  2A21               	incf	_uart2TxTail^0,f,c	;volatile
 34255                           
 34256                           ; BSR set to: 61
 34257                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 34258  01B272  0E3F               	movlw	63
 34259  01B274  6421               	cpfsgt	_uart2TxTail^0,c
 34260  01B276  D001               	goto	l10577
 34261                           
 34262                           ; BSR set to: 61
 34263                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 34264  01B278  6A21               	clrf	_uart2TxTail^0,c	;volatile
 34265  01B27A                     l10577:
 34266                           
 34267                           ; BSR set to: 61
 34268                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 34269  01B27A  2A20               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 34270                           
 34271                           ;mcc_generated_files/uart2.c: 224:     }
 34272  01B27C  0012               	return	
 34273  01B27E                     l673:
 34274                           
 34275                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 34276  01B27E  0139               	movlb	57	; () banked
 34277  01B280  9796               	bcf	150,3,b	;volatile
 34278                           
 34279                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 34280  01B282  0012               	return		;funcret
 34281  01B284                     __end_of_UART2_Transmit_ISR:
 34282                           	opt callstack 0
 34283                           
 34284 ;; *************** function _UART2_rx_vect_isr *****************
 34285 ;; Defined at:
 34286 ;;		line 203 in file "mcc_generated_files/uart2.c"
 34287 ;; Parameters:    Size  Location     Type
 34288 ;;		None
 34289 ;; Auto vars:     Size  Location     Type
 34290 ;;		None
 34291 ;; Return value:  Size  Location     Type
 34292 ;;                  1    wreg      void 
 34293 ;; Registers used:
 34294 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 34295 ;; Tracked objects:
 34296 ;;		On entry : 0/0
 34297 ;;		On exit  : 0/0
 34298 ;;		Unchanged: 0/0
 34299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34304 ;;Total ram usage:        0 bytes
 34305 ;; Hardware stack levels used:    1
 34306 ;; Hardware stack levels required when called:    1
 34307 ;; This function calls:
 34308 ;;		Absolute function
 34309 ;;		_UART2_Receive_ISR
 34310 ;; This function is called by:
 34311 ;;		Interrupt level 2
 34312 ;; This function uses a non-reentrant model
 34313 ;;
 34314                           
 34315                           	psect	text167
 34316  01B530                     __ptext167:
 34317                           	opt callstack 0
 34318  01B530                     _UART2_rx_vect_isr:
 34319                           	opt callstack 4
 34320                           
 34321                           ;incstack = 0
 34322  01B530  EE14  F142         	lfsr	1,___inthi_sp
 34323                           
 34324                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 34325  01B534  5001               	movf	_UART2_RxInterruptHandler^0,w,c
 34326  01B536  1002               	iorwf	(_UART2_RxInterruptHandler+1)^0,w,c
 34327  01B538  1003               	iorwf	(_UART2_RxInterruptHandler+2)^0,w,c
 34328  01B53A  B4D8               	btfsc	status,2,c
 34329  01B53C  0011               	retfie		f
 34330                           
 34331                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 34332  01B53E  D801               	call	i2u1033_48
 34333  01B540  0011               	retfie		f
 34334  01B542                     i2u1033_48:
 34335  01B542  0005               	push	
 34336  01B544  6EFA               	movwf	pclath,c
 34337  01B546  5001               	movf	_UART2_RxInterruptHandler^0,w,c
 34338  01B548  6EFD               	movwf	tosl,c
 34339  01B54A  5002               	movf	(_UART2_RxInterruptHandler+1)^0,w,c
 34340  01B54C  6EFE               	movwf	tosh,c
 34341  01B54E  5003               	movf	(_UART2_RxInterruptHandler+2)^0,w,c
 34342  01B550  6EFF               	movwf	tosu,c
 34343  01B552  50FA               	movf	pclath,w,c
 34344  01B554  0012               	return		;indir
 34345  01B556                     __end_of_UART2_rx_vect_isr:
 34346                           	opt callstack 0
 34347                           
 34348 ;; *************** function _UART2_Receive_ISR *****************
 34349 ;; Defined at:
 34350 ;;		line 233 in file "mcc_generated_files/uart2.c"
 34351 ;; Parameters:    Size  Location     Type
 34352 ;;		None
 34353 ;; Auto vars:     Size  Location     Type
 34354 ;;		None
 34355 ;; Return value:  Size  Location     Type
 34356 ;;                  1  [STACK] void 
 34357 ;; Registers used:
 34358 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34359 ;; Tracked objects:
 34360 ;;		On entry : 0/0
 34361 ;;		On exit  : 0/0
 34362 ;;		Unchanged: 0/0
 34363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34368 ;;Total ram usage:        0 bytes
 34369 ;; Hardware stack levels used:    1
 34370 ;; This function calls:
 34371 ;;		Nothing
 34372 ;; This function is called by:
 34373 ;;		_UART2_Initialize
 34374 ;;		_UART2_rx_vect_isr
 34375 ;; This function uses a reentrant model
 34376 ;;
 34377                           
 34378                           	psect	text168
 34379  01B728                     __ptext168:
 34380                           	opt callstack 0
 34381  01B728                     _UART2_Receive_ISR:
 34382                           	opt callstack 4
 34383                           
 34384                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 34385                           
 34386                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34387                           ;incstack = 0
 34388  01B728  0E00               	movlw	low _uart2RxBuffer
 34389  01B72A  241F               	addwf	_uart2RxHead^0,w,c	;volatile
 34390  01B72C  6ED9               	movwf	fsr2l,c
 34391  01B72E  6ADA               	clrf	fsr2h,c
 34392  01B730  0E05               	movlw	high _uart2RxBuffer
 34393  01B732  22DA               	addwfc	fsr2h,f,c
 34394  01B734  006F F743 FFDF     	movff	15824,indf2	;volatile
 34395  01B73A  2A1F               	incf	_uart2RxHead^0,f,c	;volatile
 34396                           
 34397                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 34398  01B73C  281F               	incf	_uart2RxHead^0,w,c
 34399  01B73E  B4D8               	btfsc	status,2,c
 34400                           
 34401                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 34402  01B740  6A1F               	clrf	_uart2RxHead^0,c	;volatile
 34403                           
 34404                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 34405  01B742  2A1D               	incf	_uart2RxCount^0,f,c	;volatile
 34406                           
 34407                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 34408  01B744  0012               	return		;funcret
 34409  01B746                     __end_of_UART2_Receive_ISR:
 34410                           	opt callstack 0
 34411                           
 34412 ;; *************** function _TMR6_ISR *****************
 34413 ;; Defined at:
 34414 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 34415 ;; Parameters:    Size  Location     Type
 34416 ;;		None
 34417 ;; Auto vars:     Size  Location     Type
 34418 ;;		None
 34419 ;; Return value:  Size  Location     Type
 34420 ;;                  1    wreg      void 
 34421 ;; Registers used:
 34422 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 34423 ;; Tracked objects:
 34424 ;;		On entry : 0/0
 34425 ;;		On exit  : 0/0
 34426 ;;		Unchanged: 0/0
 34427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34430 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34431 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34432 ;;Total ram usage:        1 bytes
 34433 ;; Hardware stack levels used:    1
 34434 ;; Hardware stack levels required when called:    2
 34435 ;; This function calls:
 34436 ;;		_TMR6_CallBack
 34437 ;; This function is called by:
 34438 ;;		Interrupt level 2
 34439 ;; This function uses a non-reentrant model
 34440 ;;
 34441                           
 34442                           	psect	text169
 34443  01B77C                     __ptext169:
 34444                           	opt callstack 0
 34445  01B77C                     _TMR6_ISR:
 34446                           	opt callstack 3
 34447                           
 34448                           ;incstack = 0
 34449  01B77C  0060  F098  F04B   	movff	btemp,??_TMR6_ISR
 34450  01B782  EE14  F142         	lfsr	1,___inthi_sp
 34451                           
 34452                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 34453  01B786  0139               	movlb	57	; () banked
 34454  01B788  91A9               	bcf	169,0,b	;volatile
 34455                           
 34456                           ; BSR set to: 57
 34457                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 34458  01B78A  ECF3  F0DA         	call	_TMR6_CallBack	;wreg free
 34459  01B78E  0060  F12C  F026   	movff	??_TMR6_ISR,btemp
 34460  01B794  0011               	retfie		f
 34461  01B796                     __end_of_TMR6_ISR:
 34462                           	opt callstack 0
 34463                           
 34464 ;; *************** function _TMR6_CallBack *****************
 34465 ;; Defined at:
 34466 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 34467 ;; Parameters:    Size  Location     Type
 34468 ;;		None
 34469 ;; Auto vars:     Size  Location     Type
 34470 ;;		None
 34471 ;; Return value:  Size  Location     Type
 34472 ;;                  1  [STACK] void 
 34473 ;; Registers used:
 34474 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 34475 ;; Tracked objects:
 34476 ;;		On entry : 3F/39
 34477 ;;		On exit  : 0/0
 34478 ;;		Unchanged: 0/0
 34479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34484 ;;Total ram usage:        0 bytes
 34485 ;; Hardware stack levels used:    1
 34486 ;; Hardware stack levels required when called:    1
 34487 ;; This function calls:
 34488 ;;		Absolute function
 34489 ;;		_TMR6_DefaultInterruptHandler
 34490 ;; This function is called by:
 34491 ;;		_TMR6_ISR
 34492 ;; This function uses a reentrant model
 34493 ;;
 34494                           
 34495                           	psect	text170
 34496  01B5E6                     __ptext170:
 34497                           	opt callstack 0
 34498  01B5E6                     _TMR6_CallBack:
 34499                           	opt callstack 3
 34500                           
 34501                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 34502                           
 34503                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34504                           ;incstack = 0
 34505  01B5E6  0100               	movlb	0	; () banked
 34506  01B5E8  51A0               	movf	_TMR6_InterruptHandler& (0+255),w,b
 34507  01B5EA  11A1               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 34508  01B5EC  11A2               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 34509  01B5EE  B4D8               	btfsc	status,2,c
 34510  01B5F0  0012               	return	
 34511                           
 34512                           ; BSR set to: 0
 34513                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 34514  01B5F2  D801               	call	u991_48
 34515  01B5F4  0012               	return	
 34516  01B5F6                     u991_48:
 34517  01B5F6  0005               	push	
 34518  01B5F8  6EFA               	movwf	pclath,c
 34519  01B5FA  51A0               	movf	_TMR6_InterruptHandler& (0+255),w,b
 34520  01B5FC  6EFD               	movwf	tosl,c
 34521  01B5FE  51A1               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 34522  01B600  6EFE               	movwf	tosh,c
 34523  01B602  51A2               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 34524  01B604  6EFF               	movwf	tosu,c
 34525  01B606  50FA               	movf	pclath,w,c
 34526  01B608  0012               	return		;indir
 34527  01B60A                     __end_of_TMR6_CallBack:
 34528                           	opt callstack 0
 34529                           
 34530 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 34531 ;; Defined at:
 34532 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 34533 ;; Parameters:    Size  Location     Type
 34534 ;;		None
 34535 ;; Auto vars:     Size  Location     Type
 34536 ;;  i               1  [STACK] unsigned char 
 34537 ;; Return value:  Size  Location     Type
 34538 ;;                  1  [STACK] void 
 34539 ;; Registers used:
 34540 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 34541 ;; Tracked objects:
 34542 ;;		On entry : 3F/0
 34543 ;;		On exit  : 0/0
 34544 ;;		Unchanged: 0/0
 34545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34550 ;;Total ram usage:        0 bytes
 34551 ;; Hardware stack levels used:    1
 34552 ;; This function calls:
 34553 ;;		Nothing
 34554 ;; This function is called by:
 34555 ;;		_TMR6_Initialize
 34556 ;;		_TMR6_CallBack
 34557 ;; This function uses a reentrant model
 34558 ;;
 34559                           
 34560                           	psect	text171
 34561  01AB60                     __ptext171:
 34562                           	opt callstack 0
 34563  01AB60                     _TMR6_DefaultInterruptHandler:
 34564                           	opt callstack 0
 34565                           
 34566                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34567  01AB60  52E6               	movf	postinc1,f,c
 34568                           
 34569                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 34570                           ;stkvar	_i @ sp[(-1)+0]
 34571                           
 34572                           ;incstack = 0
 34573  01AB62  0EFF               	movlw	-1
 34574  01AB64  6AE3               	clrf	plusw1,c
 34575  01AB66                     l10217:
 34576                           
 34577                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 34578                           ;stkvar	_i @ sp[(-1)+0]
 34579  01AB66  0EFF               	movlw	-1
 34580  01AB68  50E3               	movf	plusw1,w,c
 34581  01AB6A  0D02               	mullw	2
 34582  01AB6C  0E94               	movlw	low _tickCount
 34583  01AB6E  24F3               	addwf	243,w,c
 34584  01AB70  6ED9               	movwf	fsr2l,c
 34585  01AB72  0E03               	movlw	high _tickCount
 34586  01AB74  20F4               	addwfc	prodh,w,c
 34587  01AB76  6EDA               	movwf	fsr2h,c
 34588  01AB78  50DE               	movf	postinc2,w,c
 34589  01AB7A  10DE               	iorwf	postinc2,w,c
 34590  01AB7C  B4D8               	btfsc	status,2,c
 34591  01AB7E  D00C               	goto	l10221
 34592                           
 34593                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 34594                           ;stkvar	_i @ sp[(-1)+0]
 34595  01AB80  0EFF               	movlw	-1
 34596  01AB82  50E3               	movf	plusw1,w,c
 34597  01AB84  0D02               	mullw	2
 34598  01AB86  0E94               	movlw	low _tickCount
 34599  01AB88  24F3               	addwf	243,w,c
 34600  01AB8A  6ED9               	movwf	fsr2l,c
 34601  01AB8C  0E03               	movlw	high _tickCount
 34602  01AB8E  20F4               	addwfc	prodh,w,c
 34603  01AB90  6EDA               	movwf	fsr2h,c
 34604  01AB92  06DE               	decf	postinc2,f,c
 34605  01AB94  0E00               	movlw	0
 34606  01AB96  5ADD               	subwfb	postdec2,f,c
 34607  01AB98                     l10221:
 34608                           
 34609                           ;mcc_generated_files/tmr6.c: 207:  }
 34610                           ;stkvar	_i @ sp[(-1)+0]
 34611  01AB98  0EFF               	movlw	-1
 34612  01AB9A  2AE3               	incf	plusw1,f,c
 34613                           
 34614                           ;stkvar	_i @ sp[(-1)+0]
 34615  01AB9C  0EFF               	movlw	-1
 34616  01AB9E  006F FF8C  F026    	movff	plusw1,btemp
 34617  01ABA4  0E0C               	movlw	12
 34618  01ABA6  6426               	cpfsgt	btemp^0,c
 34619  01ABA8  D7DE               	goto	l10217
 34620                           
 34621                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 34622  01ABAA  52E5               	movf	postdec1,f,c
 34623  01ABAC  0012               	return		;funcret
 34624  01ABAE                     __end_of_TMR6_DefaultInterruptHandler:
 34625                           	opt callstack 0
 34626                           
 34627 ;; *************** function _DMA1_DMASCNT_ISR *****************
 34628 ;; Defined at:
 34629 ;;		line 126 in file "mcc_generated_files/dma1.c"
 34630 ;; Parameters:    Size  Location     Type
 34631 ;;		None
 34632 ;; Auto vars:     Size  Location     Type
 34633 ;;		None
 34634 ;; Return value:  Size  Location     Type
 34635 ;;                  1    wreg      void 
 34636 ;; Registers used:
 34637 ;;		None
 34638 ;; Tracked objects:
 34639 ;;		On entry : 0/0
 34640 ;;		On exit  : 3F/0
 34641 ;;		Unchanged: 0/0
 34642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34647 ;;Total ram usage:        0 bytes
 34648 ;; Hardware stack levels used:    1
 34649 ;; This function calls:
 34650 ;;		Nothing
 34651 ;; This function is called by:
 34652 ;;		Interrupt level 2
 34653 ;; This function uses a non-reentrant model
 34654 ;;
 34655                           
 34656                           	psect	text172
 34657  01B8A8                     __ptext172:
 34658                           	opt callstack 0
 34659  01B8A8                     _DMA1_DMASCNT_ISR:
 34660                           	opt callstack 5
 34661                           
 34662                           ;incstack = 0
 34663  01B8A8  EE14  F142         	lfsr	1,___inthi_sp
 34664                           
 34665                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 34666  01B8AC  0139               	movlb	57	; () banked
 34667  01B8AE  91A2               	bcf	162,0,b	;volatile
 34668                           
 34669                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 34670  01B8B0  0100               	movlb	0	; () banked
 34671  01B8B2  9760               	bcf	_spi_link& (0+255),3,b	;volatile
 34672                           
 34673                           ; BSR set to: 0
 34674  01B8B4  0011               	retfie		f
 34675  01B8B6                     __end_of_DMA1_DMASCNT_ISR:
 34676                           	opt callstack 0
 34677                           
 34678 ;; *************** function _DMA1_DMADCNT_ISR *****************
 34679 ;; Defined at:
 34680 ;;		line 134 in file "mcc_generated_files/dma1.c"
 34681 ;; Parameters:    Size  Location     Type
 34682 ;;		None
 34683 ;; Auto vars:     Size  Location     Type
 34684 ;;		None
 34685 ;; Return value:  Size  Location     Type
 34686 ;;                  1    wreg      void 
 34687 ;; Registers used:
 34688 ;;		None
 34689 ;; Tracked objects:
 34690 ;;		On entry : 0/0
 34691 ;;		On exit  : 3F/39
 34692 ;;		Unchanged: 0/0
 34693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34698 ;;Total ram usage:        0 bytes
 34699 ;; Hardware stack levels used:    1
 34700 ;; This function calls:
 34701 ;;		Nothing
 34702 ;; This function is called by:
 34703 ;;		Interrupt level 2
 34704 ;; This function uses a non-reentrant model
 34705 ;;
 34706                           
 34707                           	psect	text173
 34708  01B8CC                     __ptext173:
 34709                           	opt callstack 0
 34710  01B8CC                     _DMA1_DMADCNT_ISR:
 34711                           	opt callstack 5
 34712                           
 34713                           ; BSR set to: 0
 34714                           ;incstack = 0
 34715  01B8CC  EE14  F142         	lfsr	1,___inthi_sp
 34716                           
 34717                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 34718  01B8D0  0139               	movlb	57	; () banked
 34719  01B8D2  93A2               	bcf	162,1,b	;volatile
 34720                           
 34721                           ; BSR set to: 57
 34722  01B8D4  0011               	retfie		f
 34723  01B8D6                     __end_of_DMA1_DMADCNT_ISR:
 34724                           	opt callstack 0
 34725                           
 34726 ;; *************** function _DMA1_DMAA_ISR *****************
 34727 ;; Defined at:
 34728 ;;		line 144 in file "mcc_generated_files/dma1.c"
 34729 ;; Parameters:    Size  Location     Type
 34730 ;;		None
 34731 ;; Auto vars:     Size  Location     Type
 34732 ;;		None
 34733 ;; Return value:  Size  Location     Type
 34734 ;;                  1    wreg      void 
 34735 ;; Registers used:
 34736 ;;		None
 34737 ;; Tracked objects:
 34738 ;;		On entry : 0/0
 34739 ;;		On exit  : 3F/39
 34740 ;;		Unchanged: 0/0
 34741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34746 ;;Total ram usage:        0 bytes
 34747 ;; Hardware stack levels used:    1
 34748 ;; This function calls:
 34749 ;;		Nothing
 34750 ;; This function is called by:
 34751 ;;		Interrupt level 2
 34752 ;; This function uses a non-reentrant model
 34753 ;;
 34754                           
 34755                           	psect	text174
 34756  01B8D8                     __ptext174:
 34757                           	opt callstack 0
 34758  01B8D8                     _DMA1_DMAA_ISR:
 34759                           	opt callstack 5
 34760                           
 34761                           ; BSR set to: 57
 34762                           ;incstack = 0
 34763  01B8D8  EE14  F142         	lfsr	1,___inthi_sp
 34764                           
 34765                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 34766  01B8DC  0139               	movlb	57	; () banked
 34767  01B8DE  97A2               	bcf	162,3,b	;volatile
 34768                           
 34769                           ; BSR set to: 57
 34770  01B8E0  0011               	retfie		f
 34771  01B8E2                     __end_of_DMA1_DMAA_ISR:
 34772                           	opt callstack 0
 34773                           
 34774 ;; *************** function _DMA1_DMAOR_ISR *****************
 34775 ;; Defined at:
 34776 ;;		line 155 in file "mcc_generated_files/dma1.c"
 34777 ;; Parameters:    Size  Location     Type
 34778 ;;		None
 34779 ;; Auto vars:     Size  Location     Type
 34780 ;;		None
 34781 ;; Return value:  Size  Location     Type
 34782 ;;                  1    wreg      void 
 34783 ;; Registers used:
 34784 ;;		None
 34785 ;; Tracked objects:
 34786 ;;		On entry : 0/0
 34787 ;;		On exit  : 3F/39
 34788 ;;		Unchanged: 0/0
 34789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34794 ;;Total ram usage:        0 bytes
 34795 ;; Hardware stack levels used:    1
 34796 ;; This function calls:
 34797 ;;		Nothing
 34798 ;; This function is called by:
 34799 ;;		Interrupt level 2
 34800 ;; This function uses a non-reentrant model
 34801 ;;
 34802                           
 34803                           	psect	text175
 34804  01B8E4                     __ptext175:
 34805                           	opt callstack 0
 34806  01B8E4                     _DMA1_DMAOR_ISR:
 34807                           	opt callstack 5
 34808                           
 34809                           ; BSR set to: 57
 34810                           ;incstack = 0
 34811  01B8E4  EE14  F142         	lfsr	1,___inthi_sp
 34812                           
 34813                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 34814  01B8E8  0139               	movlb	57	; () banked
 34815  01B8EA  95A2               	bcf	162,2,b	;volatile
 34816                           
 34817                           ; BSR set to: 57
 34818  01B8EC  0011               	retfie		f
 34819  01B8EE                     __end_of_DMA1_DMAOR_ISR:
 34820                           	opt callstack 0
 34821                           
 34822                           ;
 34823                           ; Interrupt Vector Table @ 0x8
 34824                           ;
 34825                           
 34826                           	psect	ivt0x8
 34827  000008                     __pivt0x8:
 34828                           	opt callstack 0
 34829  000008                     ivt0x8_base:
 34830                           	opt callstack 0
 34831                           
 34832                           ; Vector 0 : SWINT
 34833  000008  6E4C               	dw	_Default_ISR shr (0+2)
 34834                           
 34835                           ; Vector 1 : HLVD
 34836  00000A  6E4C               	dw	_Default_ISR shr (0+2)
 34837                           
 34838                           ; Vector 2 : OSF
 34839  00000C  6E4C               	dw	_Default_ISR shr (0+2)
 34840                           
 34841                           ; Vector 3 : CSW
 34842  00000E  6E4C               	dw	_Default_ISR shr (0+2)
 34843                           
 34844                           ; Vector 4 : NVM
 34845  000010  6E4C               	dw	_Default_ISR shr (0+2)
 34846                           
 34847                           ; Vector 5 : SCAN
 34848  000012  6E4C               	dw	_Default_ISR shr (0+2)
 34849                           
 34850                           ; Vector 6 : CRC
 34851  000014  6E4C               	dw	_Default_ISR shr (0+2)
 34852                           
 34853                           ; Vector 7 : IOC
 34854  000016  6E4C               	dw	_Default_ISR shr (0+2)
 34855                           
 34856                           ; Vector 8 : INT0
 34857  000018  6E26               	dw	_INT0_ISR shr (0+2)
 34858                           
 34859                           ; Vector 9 : ZCD
 34860  00001A  6E4C               	dw	_Default_ISR shr (0+2)
 34861                           
 34862                           ; Vector 10 : AD
 34863  00001C  6C8B               	dw	_ADCC_ISR shr (0+2)
 34864                           
 34865                           ; Vector 11 : ADT
 34866  00001E  69D8               	dw	_ADCC_ThresholdISR shr (0+2)
 34867                           
 34868                           ; Vector 12 : CMP1
 34869  000020  6E4C               	dw	_Default_ISR shr (0+2)
 34870                           
 34871                           ; Vector 13 : SMT1
 34872  000022  6E4C               	dw	_Default_ISR shr (0+2)
 34873                           
 34874                           ; Vector 14 : SMT1PRA
 34875  000024  6E4C               	dw	_Default_ISR shr (0+2)
 34876                           
 34877                           ; Vector 15 : SMT1PRW
 34878  000026  6E4C               	dw	_Default_ISR shr (0+2)
 34879                           
 34880                           ; Vector 16 : DMA1SCNT
 34881  000028  6E2A               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 34882                           
 34883                           ; Vector 17 : DMA1DCNT
 34884  00002A  6E33               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 34885                           
 34886                           ; Vector 18 : DMA1OR
 34887  00002C  6E39               	dw	_DMA1_DMAOR_ISR shr (0+2)
 34888                           
 34889                           ; Vector 19 : DMA1A
 34890  00002E  6E36               	dw	_DMA1_DMAA_ISR shr (0+2)
 34891                           
 34892                           ; Vector 20 : SPI1RX
 34893  000030  6E4C               	dw	_Default_ISR shr (0+2)
 34894                           
 34895                           ; Vector 21 : SPI1TX
 34896  000032  6E4C               	dw	_Default_ISR shr (0+2)
 34897                           
 34898                           ; Vector 22 : SPI1
 34899  000034  6E4C               	dw	_Default_ISR shr (0+2)
 34900                           
 34901                           ; Vector 23 : I2C1RX
 34902  000036  6E4C               	dw	_Default_ISR shr (0+2)
 34903                           
 34904                           ; Vector 24 : I2C1TX
 34905  000038  6E4C               	dw	_Default_ISR shr (0+2)
 34906                           
 34907                           ; Vector 25 : I2C1
 34908  00003A  6E4C               	dw	_Default_ISR shr (0+2)
 34909                           
 34910                           ; Vector 26 : I2C1E
 34911  00003C  6E4C               	dw	_Default_ISR shr (0+2)
 34912                           
 34913                           ; Vector 27 : U1RX
 34914  00003E  6D38               	dw	_UART1_rx_vect_isr shr (0+2)
 34915                           
 34916                           ; Vector 28 : U1TX
 34917  000040  6E4C               	dw	_Default_ISR shr (0+2)
 34918                           
 34919                           ; Vector 29 : U1E
 34920  000042  6E4C               	dw	_Default_ISR shr (0+2)
 34921                           
 34922                           ; Vector 30 : U1
 34923  000044  6E4C               	dw	_Default_ISR shr (0+2)
 34924                           
 34925                           ; Vector 31 : TMR0
 34926  000046  6E4C               	dw	_Default_ISR shr (0+2)
 34927                           
 34928                           ; Vector 32 : TMR1
 34929  000048  6E4C               	dw	_Default_ISR shr (0+2)
 34930                           
 34931                           ; Vector 33 : TMR1G
 34932  00004A  6E4C               	dw	_Default_ISR shr (0+2)
 34933                           
 34934                           ; Vector 34 : TMR2
 34935  00004C  6E4C               	dw	_Default_ISR shr (0+2)
 34936                           
 34937                           ; Vector 35 : CCP1
 34938  00004E  6E4C               	dw	_Default_ISR shr (0+2)
 34939                           
 34940                           ; Vector 36 : Undefined
 34941  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 34942                           
 34943                           ; Vector 37 : NCO1
 34944  000052  6E4C               	dw	_Default_ISR shr (0+2)
 34945                           
 34946                           ; Vector 38 : CWG1
 34947  000054  6E4C               	dw	_Default_ISR shr (0+2)
 34948                           
 34949                           ; Vector 39 : CLC1
 34950  000056  6E4C               	dw	_Default_ISR shr (0+2)
 34951                           
 34952                           ; Vector 40 : INT1
 34953  000058  6BC9               	dw	_INT1_ISR shr (0+2)
 34954                           
 34955                           ; Vector 41 : CMP2
 34956  00005A  6E4C               	dw	_Default_ISR shr (0+2)
 34957                           
 34958                           ; Vector 42 : DMA2SCNT
 34959  00005C  6E4C               	dw	_Default_ISR shr (0+2)
 34960                           
 34961                           ; Vector 43 : DMA2DCNT
 34962  00005E  6E4C               	dw	_Default_ISR shr (0+2)
 34963                           
 34964                           ; Vector 44 : DMA2OR
 34965  000060  6E4C               	dw	_Default_ISR shr (0+2)
 34966                           
 34967                           ; Vector 45 : DMA2A
 34968  000062  6E4C               	dw	_Default_ISR shr (0+2)
 34969                           
 34970                           ; Vector 46 : I2C2RX
 34971  000064  6E4C               	dw	_Default_ISR shr (0+2)
 34972                           
 34973                           ; Vector 47 : I2C2TX
 34974  000066  6E4C               	dw	_Default_ISR shr (0+2)
 34975                           
 34976                           ; Vector 48 : I2C2
 34977  000068  6E4C               	dw	_Default_ISR shr (0+2)
 34978                           
 34979                           ; Vector 49 : I2C2E
 34980  00006A  6E4C               	dw	_Default_ISR shr (0+2)
 34981                           
 34982                           ; Vector 50 : U2RX
 34983  00006C  6D4C               	dw	_UART2_rx_vect_isr shr (0+2)
 34984                           
 34985                           ; Vector 51 : U2TX
 34986  00006E  6D42               	dw	_UART2_tx_vect_isr shr (0+2)
 34987                           
 34988                           ; Vector 52 : U2E
 34989  000070  6E4C               	dw	_Default_ISR shr (0+2)
 34990                           
 34991                           ; Vector 53 : U2
 34992  000072  6E4C               	dw	_Default_ISR shr (0+2)
 34993                           
 34994                           ; Vector 54 : TMR3
 34995  000074  622F               	dw	_TMR3_ISR shr (0+2)
 34996                           
 34997                           ; Vector 55 : TMR3G
 34998  000076  6E4C               	dw	_Default_ISR shr (0+2)
 34999                           
 35000                           ; Vector 56 : TMR4
 35001  000078  6E4C               	dw	_Default_ISR shr (0+2)
 35002                           
 35003                           ; Vector 57 : CCP2
 35004  00007A  6E4C               	dw	_Default_ISR shr (0+2)
 35005                           
 35006                           ; Vector 58 : Undefined
 35007  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 35008                           
 35009                           ; Vector 59 : CWG2
 35010  00007E  6E4C               	dw	_Default_ISR shr (0+2)
 35011                           
 35012                           ; Vector 60 : CLC2
 35013  000080  6E4C               	dw	_Default_ISR shr (0+2)
 35014                           
 35015                           ; Vector 61 : INT2
 35016  000082  6E4C               	dw	_Default_ISR shr (0+2)
 35017                           
 35018                           ; Vector 62 : Undefined
 35019  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 35020                           
 35021                           ; Vector 63 : Undefined
 35022  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 35023                           
 35024                           ; Vector 64 : Undefined
 35025  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 35026                           
 35027                           ; Vector 65 : Undefined
 35028  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 35029                           
 35030                           ; Vector 66 : Undefined
 35031  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 35032                           
 35033                           ; Vector 67 : Undefined
 35034  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 35035                           
 35036                           ; Vector 68 : Undefined
 35037  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 35038                           
 35039                           ; Vector 69 : Undefined
 35040  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 35041                           
 35042                           ; Vector 70 : TMR5
 35043  000094  6697               	dw	_TMR5_ISR shr (0+2)
 35044                           
 35045                           ; Vector 71 : TMR5G
 35046  000096  6E4C               	dw	_Default_ISR shr (0+2)
 35047                           
 35048                           ; Vector 72 : TMR6
 35049  000098  6DDF               	dw	_TMR6_ISR shr (0+2)
 35050                           
 35051                           ; Vector 73 : CCP3
 35052  00009A  6E4C               	dw	_Default_ISR shr (0+2)
 35053                           
 35054                           ; Vector 74 : CWG3
 35055  00009C  6E4C               	dw	_Default_ISR shr (0+2)
 35056                           
 35057                           ; Vector 75 : CLC3
 35058  00009E  6E4C               	dw	_Default_ISR shr (0+2)
 35059                           
 35060                           ; Vector 76 : Undefined
 35061  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 35062                           
 35063                           ; Vector 77 : Undefined
 35064  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 35065                           
 35066                           ; Vector 78 : Undefined
 35067  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 35068                           
 35069                           ; Vector 79 : Undefined
 35070  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 35071                           
 35072                           ; Vector 80 : CCP4
 35073  0000A8  6E4C               	dw	_Default_ISR shr (0+2)
 35074                           
 35075                           ; Vector 81 : CLC4
 35076  0000AA  6E4C               	dw	_Default_ISR shr (0+2)
 35077  0000AC                     ivt0x8_undefint:
 35078                           	opt callstack 0
 35079  0000AC  00FF               	reset	
 35080                           
 35081                           	psect	text176
 35082  000000                     __ptext176:
 35083                           	opt callstack 0
 35084                           
 35085                           	psect	rparam
 35086  0000                     
 35087                           	psect	temp
 35088  000026                     btemp:
 35089                           	opt callstack 0
 35090  000026                     	ds	32
 35091  0000                     wtemp0	set	btemp
 35092  0000                     wtemp1	set	btemp+2
 35093  0000                     wtemp2	set	btemp+4
 35094  0000                     wtemp3	set	btemp+6
 35095  0000                     wtemp4	set	btemp+8
 35096  0000                     wtemp5	set	btemp+10
 35097  0000                     wtemp8	set	btemp+1
 35098  0000                     ttemp0	set	btemp
 35099  0000                     ttemp1	set	btemp+3
 35100  0000                     ttemp2	set	btemp+6
 35101  0000                     ttemp3	set	btemp+9
 35102  0000                     ttemp5	set	btemp+1
 35103  0000                     ttemp6	set	btemp+4
 35104  0000                     ttemp7	set	btemp+8
 35105  0000                     ltemp0	set	btemp
 35106  0000                     ltemp1	set	btemp+4
 35107  0000                     ltemp2	set	btemp+8
 35108  0000                     lltemp0	set	btemp
 35109  0000                     lltemp1	set	btemp+8
 35110  0000                     lltemp2	set	btemp+16
 35111  0000                     lltemp3	set	btemp+24
 35112                           tosu	equ	0x3FFF
 35113                           tosh	equ	0x3FFE
 35114                           tosl	equ	0x3FFD
 35115                           stkptr	equ	0x3FFC
 35116                           pclatu	equ	0x3FFB
 35117                           pclath	equ	0x3FFA
 35118                           pcl	equ	0x3FF9
 35119                           tblptru	equ	0x3FF8
 35120                           tblptrh	equ	0x3FF7
 35121                           tblptrl	equ	0x3FF6
 35122                           tablat	equ	0x3FF5
 35123                           prodh	equ	0x3FF4
 35124                           prodl	equ	0x3FF3
 35125                           indf0	equ	0x3FEF
 35126                           postinc0	equ	0x3FEE
 35127                           postdec0	equ	0x3FED
 35128                           preinc0	equ	0x3FEC
 35129                           plusw0	equ	0x3FEB
 35130                           fsr0h	equ	0x3FEA
 35131                           fsr0l	equ	0x3FE9
 35132                           wreg	equ	0x3FE8
 35133                           indf1	equ	0x3FE7
 35134                           postinc1	equ	0x3FE6
 35135                           postdec1	equ	0x3FE5
 35136                           preinc1	equ	0x3FE4
 35137                           plusw1	equ	0x3FE3
 35138                           fsr1h	equ	0x3FE2
 35139                           fsr1l	equ	0x3FE1
 35140                           bsr	equ	0x3FE0
 35141                           indf2	equ	0x3FDF
 35142                           postinc2	equ	0x3FDE
 35143                           postdec2	equ	0x3FDD
 35144                           preinc2	equ	0x3FDC
 35145                           plusw2	equ	0x3FDB
 35146                           fsr2h	equ	0x3FDA
 35147                           fsr2l	equ	0x3FD9
 35148                           status	equ	0x3FD8


Data Sizes:
    Strings     922
    Constant    492
    Data        1013
    BSS         1300
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     25      62
    BANK0           160     25     153
    BANK1           256      0     256
    BANK2           256      0     255
    BANK3           256      0     254
    BANK4           256      0     134
    BANK5           256      0     255
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_102(CODE[1]), STR_64(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_99(CODE[3]), STR_95(CODE[3]), STR_90(CODE[3]), STR_85(CODE[3]), 
		 -> STR_80(CODE[3]), STR_76(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_99(CODE[3]), STR_95(CODE[3]), STR_90(CODE[3]), STR_85(CODE[3]), 
		 -> STR_80(CODE[3]), STR_76(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 85
		 -> ct(STACK[3]), STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), 
		 -> STR_61(CODE[19]), STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), 
		 -> STR_57(CODE[19]), STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), 
		 -> STR_53(CODE[15]), STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), 
		 -> STR_49(CODE[19]), STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), 
		 -> STR_43(CODE[3]), STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), 
		 -> STR_39(CODE[20]), STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), 
		 -> STR_35(CODE[20]), STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), 
		 -> STR_23(CODE[19]), STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    l	PTR const unsigned char  size(2) Largest target is 85
		 -> ct(STACK[3]), STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), 
		 -> STR_61(CODE[19]), STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), 
		 -> STR_57(CODE[19]), STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), 
		 -> STR_53(CODE[15]), STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), 
		 -> STR_49(CODE[19]), STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), 
		 -> STR_43(CODE[3]), STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), 
		 -> STR_39(CODE[20]), STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), 
		 -> STR_35(CODE[20]), STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), 
		 -> STR_23(CODE[19]), STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> spin(CODE[120]), STR_47(CODE[9]), STR_46(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[7]), 
		 -> V(BANK2[191]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> spin(CODE[120]), STR_47(CODE[9]), STR_46(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[7]), 
		 -> V(BANK2[191]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_71(CODE[4]), STR_70(CODE[4]), STR_67(CODE[4]), STR_66(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_71(CODE[4]), STR_70(CODE[4]), STR_67(CODE[4]), STR_66(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 85
		 -> STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), 
		 -> STR_39(CODE[20]), STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), 
		 -> STR_35(CODE[20]), STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), 
		 -> STR_23(CODE[19]), STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK2[191]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK2[191]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S6059_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK2[191]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK2[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR const unsigned char  size(2) Largest target is 85
		 -> STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 85
		 -> STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 85
		 -> STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_47(CODE[9]), STR_46(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[7]), 
		 -> V(BANK2[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_47(CODE[9]), STR_46(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[7]), 
		 -> V(BANK2[191]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_47(CODE[9]), 
		 -> STR_46(CODE[12]), D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), 
		 -> STR_3(CODE[7]), V(BANK2[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    S4514tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_47(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_46(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK2[191]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK2[191]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1995spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    S1995spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  373928
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     290
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8321
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         4     0      4      22
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     474
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1    8599
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31190
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  186232
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   92863
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            66    10     56   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   62814
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   62550
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31159
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (19) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (19) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (19) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                           15    15      0    5476
                                             10 COMRAM    15    15      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0    5386
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0    5386
                     _check_day_time
 ---------------------------------------------------------------------------------
 (17) _check_day_time                                      0     0      0    5386
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
 ---------------------------------------------------------------------------------
 (18) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (19) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (19) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (19) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           25    25      0   35450
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      60
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0   35390
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           2     2      0   35390
                         _StartTimer
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            66    10     56   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (17) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (17) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (27) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (27) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     3E2      69       12.1%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      86      13       52.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      FE      11       99.2%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FF       9       99.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      99       5       95.6%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     19      3E       1       98.4%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     559      58        0.0%
DATA                 0      0     93B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Dec 21 19:55:50 2019

                     _SPI1_Exchange8bit B6B0                __end_of_set_display_info B70A  
                                     _C 0100                                       _D 07FF  
                                     _H 00D9                                       _P 0096  
                                     _R 00B1                                       _S 02C6  
                                     _T FB49                                       _V 0207  
      __end_of_TMR5_SetInterruptHandler B416            __end_of_start_switch_handler B690  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FC51                  __end_of_FVR_Initialize B916  
                        _check_day_time 9688                             __CFG_LVP$ON 000000  
                                   l169 B802                                     l807 B6BE  
                                   l673 B27E                                     _GIE 01FE97  
                                   _abs AC40                                     _pad 9152  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize B7AE  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack B64E  
                     _update_adc_result AF62                           __CFG_BBEN$OFF 000000  
                 __size_of_Volts_to_SOC 0092                           _INT1_CallBack B62C  
                          __CFG_ZCD$OFF 000000                                    l1002 AEDE  
                                  l2036 49A4                                    l1340 18DA  
                                  l1324 12A2                                    l1190 AF1E  
                                  l3014 3AA8                                    l1350 197A  
                                  l1342 18E0                                    l2224 066A  
                                  l2080 6C06                                    l1360 1B64  
                                  l2313 589A                                    l1361 1D66  
                                  l2139 91AE                         _timer3ReloadVal 0012  
                                  l3116 73B2                                    l3054 7C28  
                                  l1606 B024                                    l1366 229C  
                                  l2159 54B4                                    l2239 0B1A  
                                  l1447 A9C0                                    l1722 B706  
                                  l2195 123A                                    l2363 327E  
                                  l3085 AC80                                    l3077 817A  
                                  l2277 6CF4                                    l1591 A3E4  
                                  l1665 AFB8                                    l3185 9030  
                                  l2298 6362                                    l1682 9372  
                                  l1674 78CE                                    l1835 7FE4  
                                  l1587 A04C                                    l1675 7A2A  
                                  l3452 7812                    _ADCC_StartConversion B81C  
                                  l2655 9D8E                                    l1784 53D0  
                                  l3480 A57E                                    l2666 88B2  
                                  l1882 9988                                    l2659 87DE  
                                  l3467 A602                                    l1963 A478  
                                  l1972 9684                                    l2933 4264  
                                  l2693 85E0                                    l1894 9788  
                                  l2945 40F4                                    l8005 7096  
                                  l8201 4F04                                    l8113 4BFC  
                                  l8105 4BE2                                    l8041 754E  
                                  l8033 74A2                                    l8025 741A  
                                  l2978 4F20                                    l8131 4CC2  
                                  l8123 4C8C                                    l8133 4CD4  
                                  l8141 4D2C                                    l8061 4A06  
                                  l8311 38B8                                    l8223 331E  
                                  l8071 4A5C                                    l8305 389C  
                                  l8241 33EC                                    l8225 3324  
                                  l8217 32DE                                    l8153 4D76  
                                  l8081 4AE4                                    l8073 4A8C  
                                  l6563 AF06                                    l8315 38DE  
                                  l8243 33F2                                    l8235 33AC  
                                  l8227 3354                                    l8171 4DEC  
                                  l8147 4D5A                                    l8139 4D28  
                                  l8091 4B3A                                    l8067 4A46  
                                  l8325 3928                                    l8253 3444  
                                  l8245 3422                                    l8181 4E60  
                                  l8157 4D9C                                    l8093 4B6A  
                                  l9221 7224                                    l9205 7162  
                                  l8413 8B4E                                    l8405 8B1A  
                                  l8501 AC16                                    l8343 39E8  
                                  l7711 3E70                                    l7631 3B48  
                                  l8167 4DE6                                    l8087 4B24  
                                  l9231 7306                                    l9223 723C  
                                  l9215 71F8                                    l9207 7184  
                                  l8511 84CA                                    l8329 392E  
                                  l7713 3E82                                    l7721 3EBC  
                                  l7625 3B08                                    l8193 4ECC  
                                  l9241 73A2                                    l9225 7260  
                                  l8433 9084                                    l8425 905A  
                                  l8339 39A2                                    l7811 41C0  
                                  l7707 3E50                                    l7643 3BC6  
                                  l7635 3B5E                                    l8187 4E9C  
                                  l8099 4BA8                                    l9227 729E  
                                  l8451 9138                                    l8443 9104  
                                  l8357 3A56                                    l8349 3A12  
                                  l7821 41EC                                    l7741 3F6A  
                                  l7717 3E8C                                    l7661 3C7E  
                                  l7637 3B8E                                    l8429 906C  
                                  l8359 3A70                                    l7655 3C38  
                                  l8199 4EF4                                    l8391 8A74  
                                  l8463 9D58                                    l8535 8578  
                                  l8527 854C                                    l8551 81D2  
                                  l7833 4244                                    l7825 4204  
                                  l7761 407E                                    l7745 3F74  
                                  l7649 3BF8                                    l8481 882C  
                                  l8385 8A54                                    l8537 858E  
                                  l8529 8568                                    l9257 7684  
                                  l7827 4214                                    l7771 40D8  
                                  l7763 40A4                                    l7739 3F58  
                                  l7667 3CA0                                    l7659 3C4E  
                                  l8475 879C                                    l9523 7AE4  
                                  l9515 7A78                                    l8379 8A3E  
                                  l8467 9D8C                                    l8459 9D16  
                                  l7923 60D0                                    l9259 76F0  
                                  l8563 82A4                                    l7781 4128  
                                  l7749 3FA6                                    l8493 88B0  
                                  l8485 887A                                    l9525 7AF2  
                                  l9613 539E                                    l9621 53B0  
                                  l7597 A120                                    l7909 A5F2  
                                  l9535 7B54                                    l9527 7B08  
                                  l9607 5302                                    l7599 A142  
                                  l7943 6286                                    l8583 8C4E  
                                  l8575 8BA2                                    l7785 4134  
                                  l7697 3DDE                                    l9537 7B72  
                                  l9529 7B26                                    l7881 8118  
                                  l7937 61EE                                    l7795 415C  
                                  l7779 4116                                    l9547 7BA6  
                                  l9539 7B88                                    l7867 AC70  
                                  l7891 8172                                    l7947 62F4  
                                  l7939 623E                                    l9557 7C08  
                                  l9573 4F5C                                    l7981 6F2A  
                                  l7885 811C                                    l7965 A56E  
                                  l9743 9706                                    l7799 4162  
                                  l9583 507A                                    l9567 4F2C  
                                  l9639 B346                                    l8599 AAFE  
                                  l7993 6FC4                                    l9835 AB3A  
                                  l9595 5186                                    l9587 5154  
                                  l7987 6F7E                                    l9827 B210  
                                  l9757 9780                                    l9599 5222  
                                  STR_1 FF50                                    STR_2 FFA2  
                                  l9769 B02E                                    STR_3 FFD0  
                                  STR_4 FF1D                                    STR_5 FE16  
                                  STR_6 FE16                                    STR_7 FE16  
                                  STR_8 FF0B                                    STR_9 FD06  
                                  _LATA 003FBA                                    _LATB 003FBB  
                                  _LATC 003FBC                                    _LATD 003FBD  
                                  _LATE 003FBE                                    _LATF 003FBF  
                                  _T2PR 003FAB                                    u6000 A5B2  
                                  u6020 6068                                    u6030 60B4  
                                  u6200 6F24                                    u7000 9124  
                                  u5400 B166                                    u6120 ADD6  
                                  u6025 605E                                    u6130 ADD8  
                                  _T6PR 003F93                                    u5500 3E04  
                                  u6220 6F7A                                    u7100 AC12  
                                  u6140 A52C                                    _PMD0 0039C0  
                                  _PMD1 0039C1                                    u5510 3E24  
                                  u7110 84AA                                    u6070 6194  
                                  u6150 A52E                                    _PMD2 0039C2  
                                  u5511 3E1E                                    u6231 6F84  
                                  u6055 60EE                                    _PMD3 0039C3  
                                  u5360 A170                                    u6240 6FBE  
                                  u6400 75D8                                    u6320 7414  
                                  u7040 9D88                                    u7200 85C0  
                                  u7120 84BE                                    u6056 60F4  
                                  _PMD4 0039C4                                    u6057 6102  
                                  _PMD5 0039C5                                    u6170 B194  
                                  u6250 6FF0                                    u7130 84F8  
                                  u6090 626C                                    _PMD6 0039C6  
                                  u7115 84A0                                    u6075 618A  
                                  u7211 8192                                    _PMD7 0039C7  
                                  u5700 413A                                    u5620 3F9C  
                                  u6180 B196                                    u6340 746A  
                                  u7220 81CC                                    u7300 8C86  
                                  u5550 3EB4                                    u6270 70CE  
                                  u6350 749C                                    u5390 B164  
                                  u7230 81FE                                    u5367 A162  
                                  u7135 84EE                                    u6095 6262  
                                  u5720 4154                                    u5560 3ED4  
                                  u5528 3E26                                    u7320 AADA  
                                  u6360 74CE                                    u5625 3F8C  
                                  u7330 AAFA                                    u6290 7120  
                                  u7250 82DC                                    u5555 3EA4  
                                  u5660 40C6                                    u6620 4E3A  
                                  u6540 4D54                                    u6380 7586  
                                  u7180 8596                                    u5900 809C  
                                  u6630 4E74                                    u7270 8B9C  
                                  u5830 B134                                    u6800 3920  
                                  u5760 41B0                                    u6640 4EB0  
                                  u7280 8BCE                                    u5840 B136  
                                  u6625 4E2A                                    u5905 8092  
                                  u6730 3432                                    u9114 523C  
                                  u9034 4F46                                    u9115 5236  
                                  u9035 4F40                                    u6580 4DDE  
                                  u9140 5266                                    u8500 734E  
                                  u5765 41A0                                    u5790 41D0  
                                  u9134 525E                                    u9054 4F76  
                                  u6910 8AA0                                    u5950 816A  
                                  u9135 5258                                    u9055 4F70  
                                  u6840 397C                                    u5960 816C  
                                  u6745 35C6                                    u5945 814C  
                                  u6850 39B6                                    u9074 4F98  
                                  u5890 AC54                                    u6930 8B3A  
                                  u6755 368E                                    u9075 4F92  
                                  u9315 AE12                                    u6860 39FC  
                                  u8540 771E                                    u6845 396C  
                                  u6765 3856                                    u9094 516E  
                                  u8470 71F4                                    u5990 A5B0  
                                  u9095 5168                                    u9360 A7D8  
                                  u8490 734C                                    u8547 7710  
                                  u9435 B848                                    u6980 90B0  
                                  u8580 77B8                                    u9436 B84A  
                                  u9445 B838                                    u8590 77E6  
                                  u9446 B83A                                    u9710 A464  
                                  u9480 7E48                                    u9385 A80C  
                                  u8585 77B2                                    u9386 A80E  
                                  u9378 A7DA                                    u9570 B616  
                                  _PLLR 01CEE0                                    u8587 77A4  
                                  u8597 77D8                                    u9576 B618  
                                  u9728 A466                                    u9680 A41E  
                                  u8990 7B9C                                    u9698 A420  
                                  _WPUA 003A41                                    _WPUB 003A51  
                                  _WPUC 003A61                                    _WPUD 003A71  
                                  _WPUE 003A81                                    _WPUF 003A91  
                      __end_of_ADCC_ISR B258                           __CFG_FCMEN$ON 000000  
                                  _dbuf 03AE                                    _cp_h FC61  
                                  _cp_l FC5D                                    _atoi 7148  
                                  _ctoa A47C                                    _main 1244  
                                  _dtoa 53D6                                    _nanf A8F6  
                                  _seed 02F7                                    _prec 000C  
                                  _nout 00AF                                    _spin FBD9  
                                  fsr0h 003FEA                                    fsr1h 003FE2  
                                  indf0 003FEF                                    fsr2h 003FDA  
                                  fsr0l 003FE9                                    indf1 003FE7  
                                  indf2 003FDF                                    fsr1l 003FE1  
                                  fsr2l 003FD9                                    _stoa 6C0A  
                                  btemp 0026                                    _utoa 631E  
                                  _xtoa 5856                  __end_of_check_adc_scan B8FE  
                         ___fpclassifyf 7FEE                                    prodh 003FF4  
                                  prodl 003FF3                                    start 00AE  
                       _timer5ReloadVal 0016               __end_of_SPI1_Exchange8bit B6CE  
             __size_of_clear_hid_pflags 0024                         _TMR3_Initialize AD58  
           __size_of_set_load_relay_one 0010             __size_of_set_load_relay_two 0010  
                         __CFG_CSWEN$ON 000000                       _UART1_rx_vect_isr B4E0  
                          ___param_bank 000000                  __end_of_check_day_time 978A  
                    ?_UART1_rx_vect_isr 0046                        __end_of_INT0_ISR B8A6  
                      __end_of_INT1_ISR AF62          __size_of_OSCILLATOR_Initialize 0016  
              __end_of_ringBufS_put_dma A054           __end_of_OSCILLATOR_Initialize B808  
                                 l10221 AB98                                   l10217 AB66  
                                 l10401 8CE6                                   l12001 0FF0  
                                 l12011 1092                                   l10421 8DCC  
                                 l10413 8D52                                   l10405 8CEE  
                                 l12021 10E2                                   l10407 8D1A  
                                 l10327 AFCE                                   l10281 7E6A  
                                 l10433 A432                                   l10505 A2D0  
                                 l13001 196C                                   l10603 AEC6  
                                 l13011 198A                                   l10293 7EAA  
                                 l12037 119A                                   l12117 63AE  
                                 l12109 6352                                   l10509 A338  
                                 l10703 8452                                   l12127 65A4  
                                 l12303 2878                                   l10711 99A4  
                                 l13023 1A7C                                   l10393 8CBC  
                                 l10289 7E96                                   l11601 917E  
                                 l12081 6D96                                   l12073 6D2A  
                                 l12057 6C76                                   l12209 5BC6  
                                 l12161 5900                                   l10369 AF82  
                                 l10395 8CCC                                   l11611 91F4  
                                 l12091 6E4C                                   l12155 58C4  
                                 l12331 2B12                                   l12307 28CC  
                                 l12243 23BE                                   l13107 22C8  
                                 l13035 1F48                                   l13051 2150  
                                 l10397 8CD2                                   l11605 91A6  
                                 l11621 9B82                                   l12077 6D66  
                                 l12149 588A                                   l12245 23F8  
                                 l10741 6974                                   l10717 9A4A  
                                 l10399 8CD8                                   l11615 923E  
                                 l11607 91B8                                   l11703 54EE  
                                 l12095 6E88                                   l12087 6E20  
                                 l12415 3206                                   l12351 2C72  
                                 l12327 2ADE                                   l12319 2A26  
                                 l12247 240E                                   l10823 9DDC  
                                 l10743 6978                                   l10807 6BCE  
                                 l13039 1FAA                                   l10577 B27A  
                                 l12185 5A56                                   l12169 5960  
                                 l12193 5ADC                                   l12409 31AC  
                                 l12361 2D20                                   l12265 2540  
                                 l12425 322A                                   l10753 69B4  
                                 l10809 6BF6                                   l13065 21A2  
                                 l13049 2126                                   l11707 550C  
                                 l11803 02FC                                   l11811 032A  
                                 l12419 320A                                   l12371 2E42  
                                 l12267 257A                                   l11643 67B4  
                                 l10819 9D9E                                   l10739 6964  
                                 l12613 4698                                   l10909 AE9C  
                                 l11741 580C                                   l11717 571E  
                                 l12381 2EF8                                   l12285 26F4  
                                 l12269 2590                                   l11637 66F6  
                                 l10765 6A06                                   l10749 69A8  
                                 l13093 224C                                   l13085 2216  
                                 l13069 21C6                                   PRLOCK 0039EF  
                                 l12623 47CC                                   l10863 5FA6  
                                 l11591 A1AC                                   l11671 A4C6  
                                 l11823 0406                                   l12295 278C  
                                 l10759 69DE                                   l13087 222E  
                                 l13079 2204                                   l12641 499C  
                                 l12625 47D4                                   l12609 45FE  
                                 l11737 57D0                                   l11921 0B12  
                                 l11913 0A48                                   l11841 0554  
                                 l11825 0470                                   l12481 9F6C  
                                 l11657 68CC                                   l11649 681E  
                                 l12465 A0AC                                   l12553 928A  
                                 l10785 6A86                                   l10777 6A60  
                                 l10769 6A12                                   l10881 95EE  
                                 l13097 2272                                   l12619 4742  
                                 l11579 8F46                                   l11595 A1EA  
                                 l11923 0B34                                   l11819 0396  
                                 l11755 00AC                                   l12395 3074  
                                 l10891 965E                                   l12629 47EA  
                                 l11669 A49A                                   l11861 05F6  
                                 l11853 0594                                   l11845 057C  
                                 l11829 04D2                                   l10869 9592  
                                 l10975 A650                                   l11695 54A4  
                                 l11863 0602                                   l11847 058E  
                                 l11767 00F0                                   l11775 0146  
                                 l12479 9F2A                                   l10969 A640  
                                 l12593 4334                                   l11937 0C32  
                                 l11785 01EA                                   l11793 0258  
                                 l11883 06F0                                   l11787 0216  
                                 l12851 1284                                   l12597 4376  
                                 l11949 0CBA                                   l11957 0D24  
                                 l11965 0D90                                   l11973 0EA2  
                                 l11789 022C                                   l12909 146E  
                                 l12853 128C                                   l11879 06B8  
                                 l12689 B6AC                                   l11985 0F3A  
                                 l11889 077A                                   l12785 789E  
                                 l12857 12AA                                   l11899 0926  
                                 l12859 12BC                                   l12981 1912  
                                 l12957 16C6                                   l11999 0FD6  
                                 l12799 79C6                                   l12993 1946  
                                 l12969 17A0                                   l12979 18E4  
                       __end_of___aodiv 7148                            _Volts_to_SOC A2C8  
                                 _ADCAP 003EF5                                   _ADACT 003EFE  
                       __end_of___fladd 426E                                   _ADCLK 003EFF  
                       __end_of___aomod 75FC                                   _ADPCH 003EF1  
                       __end_of___fldiv 4F2A                                   _ADREF 003EFD  
                       __end_of___awdiv 8B68                         __end_of___flneg AC40  
                                 STR_10 FD33                                   STR_11 FD49  
                                 STR_12 FF2E                                   STR_21 FF61  
                                 STR_13 FF3F                                   STR_14 FF72  
                                 STR_30 FEE5                                   STR_22 FDEC  
                                 STR_23 FEBF                                   STR_31 FE4D  
                                 STR_15 FD5F                                   STR_40 FF83  
                                 STR_24 FEAC                                   STR_32 FE60  
                                 STR_16 FD1D                                   STR_41 FF83  
                                 STR_33 FE73                                   STR_25 FD9C  
                                 STR_17 FCBA                           __CFG_WDTE$OFF 000000  
                                 STR_42 FF61                                   STR_50 FFBD  
                                 STR_26 FE99                                   STR_34 FDB0  
                                 STR_18 FCD4                                   STR_51 FFBD  
                                 STR_43 FFFC                                   STR_19 FF83  
                                 STR_27 FE86                                   STR_35 FE00  
                                 STR_44 FFF9                                   STR_52 FF93  
                                 STR_28 FEF8                                   STR_36 FD88  
                       __end_of___awmod 9152                                   STR_53 FF93  
                                 STR_29 FED2                                   STR_37 FD74  
                                 STR_54 FF93                                   STR_70 FFDB  
                                 STR_46 FFB1                                   STR_38 FDC4  
                                 STR_71 FFE3                                   STR_47 FFC7  
                                 STR_39 FDD8                                   STR_55 FCEE  
                                 STR_64 FCB9                                   STR_80 FFF0  
                                 STR_48 FE27                                   _ADRPT 003EEC  
                                 STR_49 FE27                                   STR_57 FE3A  
                                 STR_65 FC65                                   STR_90 FFF3  
                                 STR_74 FFEA                                   STR_66 FFD7  
                                 STR_58 FE14                                   STR_83 FFED  
                                 STR_67 FFDF                                   STR_76 FFEA  
                                 STR_85 FFED                                   STR_93 FFF6  
                                 STR_78 FFF0                                   STR_95 FFF6  
                                 STR_88 FFF3                         __end_of___flmul 3AB2  
                                 STR_97 FFE7                                   STR_99 FFE7  
                       __end_of___flsub ACCC                         __end_of___fltol 85EA  
                                 u11100 0562                                   u11020 02A6  
                                 u11030 02A8                                   u11130 05C6  
                                 u12020 2BCC                                   u11070 050E  
                                 u12110 30FC                                   u12030 2BCE  
                                 u10600 8F3A                                   u11400 10B8  
                                 u11240 0A18                                   u11170 0648  
                                 u12130 A08C                         __end_of___lodiv 8304  
                                 u10620 8FB6                                   u11420 116E  
                                 u11340 0EE4                                   u11500 6D8C  
                                 u11430 1170                                   u11510 6DD2  
                                 u10800 5478                                   u11600 65FC  
                                 u11601 65FA                                   u11610 6610  
                                 u12090 2F4C                                   _U1P1H 003DED  
                                 u10820 548A                                   u11540 6EAE  
                                 u11620 6614                                   u10740 6940  
                                 _U1P2H 003DEF                                   u11517 6DC4  
                                 u10910 57A6                                   u11710 5A0C  
                                 u12350 7A16                                   u12430 158C  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 _T3CLK 003FA9                                   u10840 54DA  
                                 u10680 9BFC                                   u11560 6338  
                                 u11720 5A0E                                   u11640 5870  
                                 u12360 7A18                                   _T2CON 003FAC  
                                 _U1P2L 003DEE                                   u10850 5732  
                                 u10770 5406                                   u12450 17CE  
                                 _U1P3L 003DF0                                   u10780 5408  
                                 u11740 5AD8                                   u11900 25D8  
                                 u10861 5762                                   u10870 5778  
                                 u10950 00DA                                   u11750 5AF8  
                                 u11670 5958                                   u11910 25DA  
                                 u12550 2192                                   _U2P1L 003DD4  
                                 u10871 5776                                   u10687 9BEE  
                                 u11591 65E6                                   u10880 578C  
                                 u11680 59AC                                   u11920 2600  
                                 u12560 21AC                                   _T3CON 003FA6  
                                 _U2P2L 003DD6                                   u11761 5B28  
                                 u11745 5ABA                                   u10890 5790  
                                 u11770 5B3E                                   u11690 59AE  
                                 u11850 2456                                   u12570 21BE  
                                 _U2P3L 003DD8                                   u11771 5B3C  
                                 u10980 0194                                   u11780 5B52  
                                 u11860 2458                                   u12556 2194  
                                 u10990 0196                                   u11790 5B56  
                                 u11870 247E                                   u12566 21AE  
                                 _T5CLK 003F9D                                   u12576 21C0  
                       __end_of___lomod 8CA8                                   u11970 27E0  
                                 _T2HLT 003FAD                                   u11990 2954  
                                 _T5CON 003F9A                                   _T6CON 003F94  
                        __CFG_DEBUG$OFF 000000                                   _T6HLT 003F95  
            _ADCC_ADTI_InterruptHandler 00A3                                   _T2TMR 003FAA  
                                 _U1UIR 003DF8                                   _T2RST 003FAF  
                                 _U1RXB 003DE8                                   _U2UIR 003DE0  
                                 _U2RXB 003DD0                                   _U2TXB 003DD2  
                                 _T6TMR 003F92                                   _T6RST 003F97  
                   ??_UART1_rx_vect_isr 004B                                   _ISRPR 0039F1  
                                 _OSCEN 0039DD                                   _TMR3H 003FA5  
                                 _TMR5H 003F99                                   _TMR3L 003FA4  
                                 _TMR5L 003F98               __end_of_update_adc_result AF9C  
                                 _TRISA 003FC2                                   _TRISB 003FC3  
                                 _TRISC 003FC4                                   _TRISD 003FC5  
                                 _TRISE 003FC6                                   _TRISF 003FC7  
                           _Default_ISR B930                 __size_of_clear_adc_scan 0006  
     __size_of_TMR3_SetInterruptHandler 0028       __size_of_TMR6_SetInterruptHandler 0028  
                         __CFG_WRTB$OFF 000000                        __end_of_TMR3_ISR 8A1A  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
                      __end_of_TMR5_ISR 9B3A                            _DMA1CON0bits 003BFC  
                      __end_of_TMR6_ISR B796                            _DMA1CON1bits 003BFD  
                                 _fabsf 9E50                                   _flags 000E  
              __size_of_calc_model_data 03A2                            _DMA2CON0bits 003BDC  
                          _DMA2CON1bits 003BDD            __end_of_get_ac_charger_relay B898  
                                 _fputc 8F16              __size_of_send_lcd_cmd_long 0028  
                       __end_of_isalpha ADE2                                   _fputs A19C  
                       __end_of_isdigit B1A0                         __end_of_ivln2_h FC5D  
                    __CFG_MCLRE$EXTMCLR 000000                                   _srand B078  
                                 _width 000A                                   _putch B762  
          __end_of_set_ac_charger_relay B86E                         __end_of_islower B140  
                       __end_of_isspace AB0E                _INT1_SetInterruptHandler B43E  
                       __end_of_isupper B170                                   pclath 003FFA  
                                 tablat 003FF5                                   ltemp0 0026  
                                 ltemp1 002A                                   ltemp2 002E  
              __size_of_DMA1_Initialize 006A                                   plusw1 003FE3  
                                 plusw2 003FDB                                   ttemp0 0026  
                                 ttemp1 0029                                   ttemp2 002C  
                                 ttemp3 002F                                   ttemp5 0027  
                                 ttemp6 002A                                   ttemp7 002E  
                                 status 003FD8     __end_of_UART1_SetRxInterruptHandler B3C6  
           _UART1_SetRxInterruptHandler B39E                                   wtemp0 0026  
                                 wtemp1 0028                                   wtemp2 002A  
                                 wtemp3 002C                                   wtemp4 002E  
                                 wtemp5 0030                                   wtemp8 0027  
                       __end_of_sprintf 9480                         __end_of_tolower A60C  
                       __end_of_strncmp 781C                         __end_of_toupper A588  
             __size_of_DMA1_DMADCNT_ISR 000A               __end_of_UART1_rx_vect_isr B508  
              __size_of_SPI1_Initialize 0016                         _TMR5_Initialize AD12  
                 __end_of_ringBufS_init B326                         __initialization 9480  
                     _UART2_rx_vect_isr B530                            __end_of_cp_h FC65  
                          __end_of_cp_l FC61                            __end_of_atoi 73BC  
                          __end_of_ctoa A504                            __end_of_main 22DC  
                          __end_of_dtoa 5856                            __end_of_nanf A958  
                          __end_of_spin FC51                            __end_of_stoa 6EC8  
                          __end_of_utoa 665E                            __end_of_xtoa 5C10  
                        __CFG_SAFEN$OFF 000000                      ?_UART2_rx_vect_isr 0046  
               __end_of_TMR2_Initialize B7C6                __size_of_DMA2_Initialize 005A  
            __end_of_check_enter_button AEA4                _TMR5_SetInterruptHandler B3EE  
                         __activetblptr 000003               __size_of_DMA1_DMASCNT_ISR 000E  
                 _TMR3_InterruptHandler 009A                       _port_data_dma_ptr B8C0  
                    esr_check@esr_state 0018                     ??_UART2_rx_vect_isr 004B  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize B284  
                       _PWM8_Initialize B7DC                        _UART1_Initialize ACCC  
                     _UART2_tx_vect_isr B508                      _UART2_Transmit_ISR B258  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan A830  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue ADE2  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0046                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _T3GATE 003FA8                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _T3GCON 003FA7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                i1l1019 9AEA                                  _RB6PPS 003A0E  
                                i1l1207 8982                    _start_switch_handler B670  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
               __end_of_TMR3_Initialize AD9E                          __CFG_WDTCCS$SC 000000  
                                _FVRCON 003EC1                        _mode_lamp_bright B87C  
                                _SCANPR 0039F7                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  _IVTADU 00389F  
                                u455_48 B65C            __size_of_eaDogM_WriteCommand 000E  
                                _OSCFRQ 0039DF                                  u917_25 B868  
                                u917_26 B86A                                  u918_20 B894  
                                u942_20 AFDC                                  u942_26 AFDE  
                                u961_20 8CE2                                  u961_21 8CDC  
                  __size_of_hid_display 0102                                  u965_24 8DC2  
                                u965_25 8DBE                                  u958_28 8CC2  
                                u991_48 B5F6                                  u985_28 B63A  
                                u994_28 B5AE                        __end_of___xxtofl 7C32  
 __end_of_ADCC_DischargeSampleCapacitor B8F6  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor B8EE                __end_of_send_lcd_cmd_dma AABC  
                       _TMR3_WriteTimer AEE4                     ??_UART2_tx_vect_isr 004B  
             __end_of_UART2_rx_vect_isr B556              __size_of_SPI1_Exchange8bit 001E  
                __size_of_DMA1_DMAA_ISR 000A                          __CFG_XINST$OFF 000000  
                     _CLKREF_Initialize B8B6                        _UART2_Initialize A958  
                                _WaitMs B00C                         _conv_raw_result 4F2A  
                          _CCPTMRS1bits 003F5F    __size_of_ADCC_SetADIInterruptHandler 0028  
                                ___flge 875A                                  ___fleq 9CD4  
                     _ADCC_ThresholdISR A760                          __CFG_STVREN$ON 000000  
                        _ringBufS_flush A35A                                  _efgtoa 0000  
                                _floorf 5FB2                      ?_ADCC_ThresholdISR 0046  
                                _memset 665E                    __size_of_help_button 0038  
                                clear_0 9518                                  clear_1 952C  
                                clear_2 953E                                  clear_3 954A  
                                clear_4 9556                                  clear_5 9562  
                                clear_6 956E               __end_of_port_data_dma_ptr B8CA  
                                _printf A894                      _eaDogM_WriteString A054  
                                _strcpy 9B3A                               ?_ADCC_ISR 0046  
                                _strlen A0FA                      __size_of_TimerDone 0028  
                          __pdataBIGRAM 05FF                         _ADCC_Initialize A6F4  
                        _PMD_Initialize B808              __size_of_update_adc_result 003A  
             __end_of_UART2_tx_vect_isr B530                                  lltemp0 0026  
                                lltemp1 002E                                  lltemp2 0036  
                                lltemp3 003E                     ??_ADCC_ThresholdISR 0046  
                __end_of_start_adc_scan A894                            __mediumconst FA78  
                                preinc2 003FDC                  __size_of_init_port_dma 0030  
                                tblptrh 003FF7                                  tblptrl 003FF6  
                                tblptru 003FF8                        __end_of_wdtdelay AA10  
                      __end_of_spinners 9A5A                        __end_of_vfprintf 9FAA  
                            _StartTimer AE24           __size_of_INTERRUPT_Initialize 0066  
               __end_of_TMR5_Initialize AD58                       _SYSTEM_Initialize ABAE  
                            __accesstop 0060                 __end_of__initialization 9580  
                             ?_INT0_ISR 0046                               ?_INT1_ISR 0046  
                  __end_of_display_help B90E                    __end_of_display_info B906  
             __end_of_CLKREF_Initialize B8C0                           ___rparam_used 000001  
            __size_of_UART1_rx_vect_isr 0028                         _TMR5_WriteTimer AEA4  
                 _set_temp_display_help B84E                        _clear_hid_pflags B57A  
                 __end_of_TMR3_CallBack B5E6               __end_of_ADCC_ThresholdISR A7CA  
                    __size_of_calc_bsoc 0742                  __end_of_ringBufS_flush A3EC  
                        __pcstackCOMRAM 0046                              ___inthi_sp 1142  
                            ___intlo_sp 18A1                            __pidataBANK0 B1A0  
                          __pidataBANK1 978A                            __pidataBANK2 9C0E  
           __size_of_send_port_data_dma 0052                           __end_of_fabsf 9EFE  
                             ?_TMR3_ISR 0046                               ?_TMR5_ISR 0046  
                             ?_TMR6_ISR 0046                          ivt0x8_undefint 00AC  
                         __end_of_fputc 903A                           __end_of_fputs A234  
                  _get_ac_charger_relay B88A                           __end_of_srand B0AC  
                 __end_of_TMR5_CallBack B5C2                           __end_of_putch B77C  
                  _set_ac_charger_relay B85E                 __end_of_PWM8_Initialize B7F2  
               __end_of_TMR6_Initialize B2AE                       _adc_int_t_handler A60C  
                __end_of_PMD_Initialize B81C                              __end_of_bp FC59  
                            ??_ADCC_ISR 0046                   __end_of_TMR6_CallBack B60A  
           __size_of_EXT_INT_Initialize 0034                calc_bsoc@log_update_wait 001A  
                __size_of_calc_ror_data 0174                           _DMA1_DMAA_ISR B8D8  
                 TMR3_ISR@CountCallBack 0010                          _clear_adc_scan B916  
                    __size_of_hid_input 0090                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 0001               __end_of_SYSTEM_Initialize ABF8  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
               __end_of_TMR3_WriteTimer AF24                              __pbssBANK0 0060  
                            __pbssBANK2 02C6                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              __pbssBANK5 0500  
                            _check_help 781C                 __end_of_conv_raw_result 53D6  
                    __size_of_esr_check 02C0                   _INT0_InterruptHandler 0007  
                            ??_INT0_ISR 0046                              ??_INT1_ISR 004C  
                     __end_of_TimerDone B34E                        _DMA1_DMADCNT_ISR B8CC  
                    __size_of_init_bsoc 0170              __size_of_UART2_rx_vect_isr 0026  
                               IVTBASEH 003FD6                                 IVTBASEL 003FD5  
                               IVTBASEU 003FD7                      __size_of_lp_filter 01BC  
                         _init_port_dma B0E0                   __end_of_wait_lcd_done B762  
      __end_of_TMR3_SetInterruptHandler B43E                         __CFG_PPS1WAY$ON 000000  
      __end_of_TMR6_SetInterruptHandler B3EE                              ??_TMR3_ISR 00E0  
               __end_of_ADCC_Initialize A75E                              ??_TMR5_ISR 0050  
             __end_of_adc_int_t_handler A68A                              ??_TMR6_ISR 004B  
                               _ADFLTRH 003EE7                                 _ADFLTRL 003EE6  
                               _DMA1DSA 003BF0                                 _DMA2DSA 003BD0  
                               _DMA1DSZ 003BEE                                 _DMA2DSZ 003BCE  
                               _DMA1SSA 003BF9                                 _DMA2SSA 003BD9  
  __end_of_ADCC_SetADTIInterruptHandler B4B6   __size_of_ADCC_SetADTIInterruptHandler 0028  
          _ADCC_SetADTIInterruptHandler B48E                                 _DMA1SSZ 003BF7  
                               _DMA2SSZ 003BD7              __size_of_port_data_dma_ptr 000A  
                               _ADSTPTH 003EE5                                 _ADSTPTL 003EE4  
                     _UART1_Receive_ISR B690                                 _CLKRCLK 003CE6  
                               _CLKRCON 003CE5                  __end_of_clear_adc_scan B91C  
                               u1022_44 A670                                 u1022_45 A66A  
                               u1221_20 473A                                 u1223_20 47E2  
                        ?_DMA1_DMAA_ISR 0046                        _DMA1_DMASCNT_ISR B8A8  
                               _U1ERRIE 003DFA                      __size_of_set_vterm 001E  
                               _U1ERRIR 003DF9                                 u1228_28 B5D2  
                               _U2ERRIE 003DE2                                 _U2ERRIR 003DE1  
                               _INT0PPS 003AC0                     __CFG_PWRTS$PWRT_OFF 000000  
                               _INT1PPS 003AC1                            ?_Default_ISR 0046  
            __size_of_UART2_tx_vect_isr 0028                                 _U1RXPPS 003AE5  
                               _U2RXPPS 003AE8                                 _OSCCON1 0039D9  
                               _OSCCON3 0039DB                                 _IVTLOCK 003FD4  
                    __size_of_vfpfcnvrt 0FAC                                 _SPI1CLK 003D1C  
                               _SPI1RXB 003D10                       __end_of_calc_bsoc 49B0  
                               _SPI1TXB 003D11                                 _OSCTUNE 0039DE  
                               _PWM8DCH 003F61                                 _PWM8DCL 003F60  
                               _PWM8CON 003F62                                 _SLRCONA 003A43  
                               _SLRCONB 003A53                                 _SLRCONC 003A63  
                               _SLRCOND 003A73                                 _SLRCONE 003A83  
                               _SLRCONF 003A93                              _get_switch B1FE  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer AEE4  
               __size_of_switch_handler 0140                      __size_of_stop_bsoc 0006  
            __end_of_set_load_relay_one B84E              __end_of_set_load_relay_two B83E  
     __size_of_INT0_SetInterruptHandler 0028              __size_of_CLKREF_Initialize 000A  
                         _calc_ror_data 8304                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 006A  
                         _mode_lamp_dim B796                                 __Lparam 0000  
              __end_of_UART1_Initialize AD12                       __end_of_hid_input A47C  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 6EC8  
                               ___fladd 3AB2                                 ___aomod 73BC  
                               ___fldiv 49B0                                 ___awdiv 8A1A  
                               ___flneg ABF8                                 ___awmod 903A  
                               ___flmul 3288                                 ___flsub AC86  
                               ___fltol 8478                                 ___lodiv 8184  
                               ___lomod 8B68               __end_of_UART1_Receive_ISR B6B0  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display 9974                                 __pcinit 9480  
              __end_of_mode_lamp_bright B88A                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand B86E  
                               __ramtop 2000                                 __ptext0 1244  
                               __ptext1 B556                                 __ptext2 B670  
                               __ptext3 B078                                 __ptext4 9974  
                               __ptext5 B0E0                                 __ptext6 988A  
                               __ptext7 B2AE                                 __ptext8 B2D6  
                               __ptext9 B6B0                       __end_of_esr_check 6C0A  
                     _UART2_Receive_ISR B728                         __size_of_printf 0062  
                       __CFG_WRTAPP$OFF 000000                         __size_of_strcpy 00D4  
                       __size_of_strlen 00A2                   _OSCILLATOR_Initialize B7F2  
                               us630999 7132                            __size_of_abs 0046  
                               us641999 75EA                                 us731999 8C98  
                          __size_of_pad 0114                       __end_of_init_bsoc 875A  
                               us726999 82EE                                 _isalpha AD9E  
                               _isdigit B170                                 _ivln2_h FC59  
                             _T3CONbits 003FA6                                 _mode_sw 001C  
                     __end_of_lp_filter 7FEE                                 _islower B110  
                               _isspace AABC                         __CFG_WRTSAF$OFF 000000  
                             _T5CONbits 003F9A                __end_of_UART2_Initialize A9B6  
                               _isupper B140              __size_of_SYSTEM_Initialize 004A  
                               _sprintf 9376                                 _tolower A588  
                 __size_of_display_help 0008                                 _utctime 008E  
                 __size_of_display_info 0008                                 _strncmp 75FC  
                               _toupper A504                    end_of_initialization 9580  
             __size_of_convert_adc_data 00B8                      _check_enter_button AE64  
                             i1u1239_20 897A     __end_of_UART2_SetRxInterruptHandler B39E  
           _UART2_SetRxInterruptHandler B376                               i2u1031_48 B51C  
                             i2u1033_48 B542                               i2u1025_48 B244  
                             i2u1027_48 A796                               i2u1027_49 A7AA  
               check_day_time@day_delay 001B                               i2u1238_48 B4F4  
                     __end_of_set_vterm B6EC                       __end_of_vfpfcnvrt 3288  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 007E  
                   __size_of_StartTimer 0040                       __end_of_start_lcd B928  
             __end_of_UART2_Receive_ISR B746                          wdtdelay@dcount 0092  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 004C  
                 _INT1_InterruptHandler 0004                               _PORTBbits 003FCB  
                     __end_of_stop_bsoc B92E                _TMR3_SetInterruptHandler B416  
                             _PORTFbits 003FCF                _TMR6_SetInterruptHandler B3C6  
                          _display_help B906                   _TMR5_InterruptHandler 009D  
                          _display_info B8FE    __size_of_UART2_SetTxInterruptHandler 0028  
              __end_of_clear_hid_pflags B59E                       __size_of_ADCC_ISR 002C  
   __end_of_ADCC_SetADIInterruptHandler B4DE             _ADCC_SetADIInterruptHandler B4B6  
                            _update_lcd 9266                         _calc_model_data 5C10  
                __size_of_ringBufS_init 0028                        __CFG_FEXTOSC$ECH 000000  
                            _static_soc B556                         _DMA1_Initialize A68A  
                            _start_bsoc B60A                         _SPI1_Initialize B7C6  
                 __end_of_get_vterm_ptr B1FE                       __size_of_INT0_ISR 000E  
                     __size_of_INT1_ISR 003E                          __end_of_WaitMs B042  
          __end_of_INTERRUPT_Initialize A830                              _vterm_dump 8DE8  
                        __end_of___flge 88BC                          __end_of___fleq 9D98  
  __end_of_INT0_DefaultInterruptHandler B93C   __size_of_INT0_DefaultInterruptHandler 0002  
          _INT0_DefaultInterruptHandler B93A              __size_of_UART1_Receive_ISR 0020  
                       _DMA2_Initialize AA10                           __pidataBIGRAM 7C32  
                        __end_of_efgtoa 1244                       __size_of_TMR3_ISR 015E  
                     __size_of_TMR5_ISR 00DE                       __size_of_TMR6_ISR 001A  
                   __size_of_check_help 0212                          __end_of_floorf 631E  
           __size_of_UART2_Transmit_ISR 002C                              floorf@F524 0072  
                        __end_of_memset 694A                          __end_of_printf A8F6  
              __end_of_DMA1_DMADCNT_ISR B8D6             __size_of_PWM8_LoadDutyValue 0042  
                 __end_of_INT0_CallBack B670                          __end_of_strcpy 9C0E  
                        __end_of_strlen A19C                     start_initialization 9480  
  __end_of_TMR5_DefaultInterruptHandler B00C   __size_of_TMR5_DefaultInterruptHandler 0038  
          _TMR5_DefaultInterruptHandler AFD4         __size_of_PIN_MANAGER_Initialize 0094  
                           __end_of_abs AC86                   __end_of_INT1_CallBack B64E  
             __size_of_set_display_info 001E                             __end_of_pad 9266  
                  __size_of_Default_ISR 0006                    __end_of_send_lcd_cmd B2FE  
                        _switch_handler 8CA8           __size_of_ADCC_StartConversion 0012  
                            ivt0x8_base 0008                           _uart1RxBuffer 02EF  
                 __end_of___fpclassifyf 8184                           _uart2RxBuffer 0500  
              __end_of_DMA1_DMASCNT_ISR B8B6                           _uart2TxBuffer 0354  
                        _DMA1_DMAOR_ISR B8E4                     __end_of_hid_display 9688  
            __end_of_send_port_data_dma AB60                        __CFG_LPBOREN$OFF 000000  
                 __size_of_init_display 00EA             __size_of_eaDogM_WriteString 00A6  
                             _TimerDone B326                           _ringBufS_init B2FE  
                           __pdataBANK0 00B1                             __pdataBANK1 0100  
                           __pdataBANK2 0200              __size_of_UART2_Receive_ISR 001E  
                   __size_of_get_switch 002C              __end_of_EXT_INT_Initialize B0E0  
               __end_of_calc_model_data 5FB2                     __end_of_help_button AFD4  
       __end_of_eaDogM_WriteStringAtPos B078                     __end_of_BVSOC_TABLE FB49  
                  calc_model_data@bcror 0086                             __pbssBIGRAM 07FF  
               __end_of_DMA1_Initialize A6F4                    calc_model_data@bvror 008A  
                           __pbssCOMRAM 0001        __end_of_INT0_SetInterruptHandler B48E  
                         __pcstackBANK0 00E0                __size_of_TMR2_Initialize 0018  
                __size_of_TMR3_CallBack 0024                  __end_of_switch_handler 8DE8  
                     __size_of___xxtofl 0204                 __end_of_SPI1_Initialize B7DC  
              _UART1_RxInterruptHandler 00A9                _UART2_TxInterruptHandler 00AC  
                             __end_of_T FBD9                        _convert_adc_data 9D98  
                             _calc_bsoc 426E               __size_of_ringBufS_put_dma 00AA  
                          _init_display 988A                  __end_of_DMA1_DMAOR_ISR B8EE  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 00A0  
                    calc_ror_data@bcror 007E                  __size_of_TMR6_CallBack 0024  
               __end_of_DMA2_Initialize AA6A                      calc_ror_data@bvror 0082  
                _PIN_MANAGER_Initialize A234                __size_of_TMR3_Initialize 0046  
                  __end_of_wait_lcd_set B922                           __pmediumconst FA78  
                             __ptext100 5C10                               __ptext101 B928  
                             __ptext110 B376                               __ptext102 B60A  
                             __ptext111 ACCC                               __ptext103 7E32  
                             __ptext120 B7C6                               __ptext112 B39E  
                             __ptext104 AC86                               __ptext121 B7DC  
                             __ptext113 B284                               __ptext105 3AB2  
                             __ptext130 AA10                               __ptext122 B808  
                             __ptext114 B3C6                               __ptext106 3288  
                             __ptext131 A68A                               __ptext123 A234  
                             __ptext115 AD12                               __ptext107 ABAE  
                             __ptext140 9A5C                               __ptext132 B8B6  
                             __ptext124 B7F2                               __ptext116 B3EE  
                             __ptext108 A958                               __ptext141 AEA4  
                             __ptext133 A6F4                               __ptext125 A7CA  
                             __ptext117 AD58                               __ptext109 B34E  
                             __ptext150 B938                               __ptext142 B59E  
                             __ptext134 B48E                               __ptext126 B90E  
                             __ptext118 B416                               __ptext151 426E  
                             __ptext143 AFD4                               __ptext135 B4B6  
                             __ptext127 B0AC                               __ptext119 B7AE  
                             __ptext160 B93C                               __ptext152 AB0E  
                             __ptext144 9688                               __ptext136 AF24  
                             __ptext128 B43E                               __ptext161 B93E  
                             __ptext153 B8C0                               __ptext145 B85E  
                             __ptext137 B62C                               __ptext129 B466  
                             __ptext170 B5E6                               __ptext162 A760  
                             __ptext154 B898                               __ptext146 B88A  
                             __ptext138 B936                               __ptext171 AB60  
                             __ptext163 B4E0                               __ptext155 B64E  
                             __ptext147 88BC                               __ptext139 8CA8  
                             __ptext172 B8A8                               __ptext164 B690  
                             __ptext156 B93A                               __ptext148 AEE4  
                             __ptext173 B8CC                               __ptext165 B508  
                             __ptext157 B930                               __ptext149 B5C2  
                             __ptext174 B8D8                               __ptext166 B258  
                             __ptext158 B22C                               __ptext175 B8E4  
                             __ptext167 B530                               __ptext159 A60C  
                             __ptext176 0000                               __ptext168 B728  
                             __ptext169 B77C                               _hid_input A3EC  
                    __end_of_StartTimer AE64                      _set_load_relay_one B83E  
                    _set_load_relay_two B82E                       __size_of_wdtdelay 005A  
                     __size_of_spinners 00E6                       __size_of_vfprintf 00AC  
                              _ADCC_ISR B22C                  __CFG_BBSIZE$BBSIZE_512 000000  
                             fabsf@F463 0076                                _DMA1CON0 003BFC  
                              _DMA1CON1 003BFD                                _DMA1AIRQ 003BFE  
                              _DMA2CON0 003BDC                                _DMA2CON1 003BDD  
                              _DMA2AIRQ 003BDE                                _DMA1SIRQ 003BFF  
                              _DMA2SIRQ 003BDF                               _esr_check 694A  
               __size_of_get_raw_result 001E                          __size_of_fabsf 00AE  
                             _init_bsoc 85EA                  __size_of_wait_lcd_done 001C  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                               _lp_filter 7E32  
                           _hid_display 9586                          __size_of_srand 0034  
                        __size_of_putch 001A                    _INTERRUPT_Initialize A7CA  
                              _T6CLKCON 003F96           __size_of_start_switch_handler 0020  
                       ?_DMA1_DMAOR_ISR 0046                                _INT0_ISR B898  
                              _INT1_ISR AF24                                _LATCbits 003FBC  
                              _LATDbits 003FBD                                _LATEbits 003FBE  
                              _LATFbits 003FBF       __size_of_INT1_SetInterruptHandler 0028  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _PIE2bits 003992                                _IPR5bits 003985  
                              _PIE3bits 003993                               _tickCount 0394  
                              _IPR6bits 003986                                _PIE5bits 003995  
                              _IPR8bits 003988                                _PIE6bits 003996  
                              _IPR9bits 003989                                _PIE8bits 003998  
                   __CFG_BORV$VBOR_2P45 000000                                _PIE9bits 003999  
                             _ring_buf1 0443                               _ring_buf2 0400  
                              _PIR1bits 0039A1                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                           _TMR3_CallBack B5C2  
                              _PIR5bits 0039A5                                _PIR6bits 0039A6  
                              _PIR8bits 0039A8                                _PIR9bits 0039A9  
              __size_of_TMR5_Initialize 0046                               _set_vterm B6CE  
                   __size_of_update_lcd 0110                             _help_button AF9C  
                              _TMR3_ISR 88BC                             _BVSOC_TABLE FA79  
                              _TMR5_ISR 9A5C                                _TMR6_ISR B77C  
                             _port_data 05FF                     __size_of_static_soc 0024  
                             _vfpfcnvrt 22DC                            _SPI1INTFbits 003D1A  
                   __size_of_start_bsoc 0022                           _TMR5_CallBack B59E  
                            _ADCON0bits 003EF8                      __end_of_check_help 7A2E  
                             _start_lcd B922                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 0052                           _TMR6_CallBack B5E6  
                 __size_of_send_lcd_cmd 0028       __size_of_TMR5_SetInterruptHandler 0028  
                             _stop_bsoc B928                        _set_display_info B6EC  
              __size_of_PWM8_Initialize 0016                __size_of_TMR6_Initialize 002A  
                           _INTCON0bits 003FD2                               copy_data0 9494  
                             copy_data1 94BA                               copy_data2 94DC  
                             copy_data3 9502                _INT0_SetInterruptHandler B466  
                   __size_of_vterm_dump 012E     __end_of_UART2_SetTxInterruptHandler B376  
           _UART2_SetTxInterruptHandler B34E                            _uart1RxCount 0023  
                          _uart2RxCount 001D                                __Hrparam 0000  
      __size_of_eaDogM_WriteStringAtPos 0036                 __CFG_RSTOSC$EXTOSC_4PLL 000000  
              __size_of_TMR3_WriteTimer 0040                                __Lrparam 0000  
               __size_of_check_adc_scan 0008                      __CFG_BOREN$SBORDIS 000000  
              __size_of_conv_raw_result 04AC                           _wait_lcd_done B746  
                          _send_lcd_cmd B2D6                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC           __size_of_get_ac_charger_relay 000E  
                      __size_of___aomod 0240                         _adc_int_handler B93E  
                      __size_of___fldiv 057A                        __size_of___awdiv 014E  
                      __size_of___flneg 0048                        __size_of___awmod 0118  
                      __size_of___flmul 082A                        __size_of___flsub 0046  
                      __size_of___fltol 0172                        __size_of___lodiv 0180  
                      __size_of___lomod 0140           __size_of_set_ac_charger_relay 0010  
                    __end_of_get_switch B22A                 __size_of_check_day_time 0102  
                 __end_of_DMA1_DMAA_ISR B8E2                      ___fpclassifyf@F463 007A  
  __size_of_UART1_SetRxInterruptHandler 0028                         lp_filter@smooth 0300  
                              ___xxtofl 7A2E                       ?_DMA1_DMADCNT_ISR 0046  
           __size_of_check_enter_button 0040                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand B87C                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 004C                                __ptext10 B2FE  
                              __ptext11 85EA                                __ptext20 B8EE  
                              __ptext12 A2C8                                __ptext21 B916  
                              __ptext13 9586                                __ptext30 9376  
                              __ptext22 B8F6                                __ptext14 A3EC  
                              __ptext31 B1D0                                __ptext23 B82E  
                              __ptext15 B1FE                                __ptext40 B922  
                              __ptext32 B00C                                __ptext24 B83E  
                              __ptext16 694A                                __ptext41 A35A  
                              __ptext33 9266                                __ptext25 B86E  
                              __ptext17 AF62                                __ptext50 631E  
                              __ptext42 665E                                __ptext34 B042  
                              __ptext26 9D98                                __ptext18 A830  
                              __ptext51 8B68                                __ptext43 A894  
                              __ptext35 AA6A                                __ptext27 B57A  
                              __ptext19 B81C                                __ptext60 7FEE  
                              __ptext52 8184                                __ptext44 9EFE  
                              __ptext36 B746                                __ptext28 781C  
                              __ptext61 8478                                __ptext53 75FC  
                              __ptext45 22DC                                __ptext37 A9B6  
                              __ptext29 8DE8                                __ptext70 A47C  
                              __ptext62 ABF8                                __ptext54 6C0A  
                              __ptext46 5856                                __ptext38 A054  
                              __ptext71 9152                                __ptext63 9CD4  
                              __ptext55 0000                                __ptext47 A504  
                              __ptext39 B91C                                __ptext80 B6CE  
                              __ptext72 A0FA                                __ptext64 903A  
                              __ptext56 A588                                __ptext48 B110  
                              __ptext81 B84E                                __ptext73 A19C  
                              __ptext65 8A1A                                __ptext57 B140  
                              __ptext49 AD9E                                __ptext90 B906  
                              __ptext82 B6EC                                __ptext74 8F16  
                              __ptext66 53D6                                __ptext58 9B3A  
                              __ptext91 AE64                                __ptext83 B796  
                              __ptext75 B762                                __ptext67 AC40  
                              __ptext59 5FB2                                __ptext92 8304  
                              __ptext84 B87C                                __ptext76 9FAA  
                              __ptext68 73BC                                __ptext93 9E50  
                              __ptext85 ADE2                                __ptext77 7148  
                              __ptext69 6EC8                                __ptext94 4F2A  
                              __ptext86 AF9C                                __ptext78 AABC  
                              __ptext95 A8F6                                __ptext87 B326  
                              __ptext79 B170                                __ptext96 B70A  
                              __ptext88 AE24                                __ptext97 7A2E  
                              __ptext89 B8FE                                __ptext98 49B0  
                              __ptext99 875A                        __size_of_isupper 0030  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                              us1145999 6C1C                                us1076999 53F0  
                              us1157999 6384                                us1166999 58D6  
                      __size_of_strncmp 0220                        __size_of_toupper 0084  
                      _ringBufS_put_dma 9FAA                    __end_of_Volts_to_SOC A35A  
                         __size_of_atoi 0274                           __size_of_ctoa 0088  
                         __size_of_main 1098                           __size_of_dtoa 0480  
                         __size_of_nanf 0062                   __size_of_wait_lcd_set 0006  
                         __size_of_stoa 02BE                           __size_of_utoa 0340  
                         __size_of_xtoa 03BA                    __CFG_WDTCWS$WDTCWS_7 000000  
                     ?_DMA1_DMASCNT_ISR 0046                   __end_of_init_port_dma B110  
                           _IVTLOCKbits 003FD4                __size_of_TMR5_WriteTimer 0040  
             _ADCC_ADI_InterruptHandler 00A6                               stoa@F1166 0200  
                    ??_DMA1_DMASCNT_ISR 004C            __end_of_ADCC_StartConversion B82E  
                              _spi_link 0060                                _wdtdelay A9B6  
            __end_of_UART2_Transmit_ISR B284                                _spinners 9974  
                              _vfprintf 9EFE                __end_of_convert_adc_data 9E50  
            __end_of_PWM8_LoadDutyValue AE24    __end_of_TMR3_DefaultInterruptHandler B93A  
 __size_of_TMR3_DefaultInterruptHandler 0002            _TMR3_DefaultInterruptHandler B938  
  __end_of_INT1_DefaultInterruptHandler B938   __size_of_INT1_DefaultInterruptHandler 0002  
          _INT1_DefaultInterruptHandler B936                      _send_port_data_dma AB0E  
                         ??_Default_ISR 0046                             _uart1RxHead 0025  
                __size_of_get_vterm_ptr 002E                             _uart2RxHead 001F  
                           _uart1RxTail 0024                          _get_raw_result B70A  
                           _uart2TxHead 0022                             _uart2RxTail 001E  
                             spinners@s 006C                             _uart2TxTail 0021  
                          _wait_lcd_set B91C                        Volts_to_SOC@slot 0019  
                    _EXT_INT_Initialize B0AC    __end_of_TMR6_DefaultInterruptHandler ABAE  
 __size_of_TMR6_DefaultInterruptHandler 004E            _TMR6_DefaultInterruptHandler AB60  
  __end_of_ADCC_DefaultInterruptHandler B93E   __size_of_ADCC_DefaultInterruptHandler 0002  
          _ADCC_DefaultInterruptHandler B93C                                intlevel1 0000  
                              intlevel2 0000                       _send_lcd_cmd_long B2AE  
        __size_of_set_temp_display_help 0010           __end_of_set_temp_display_help B85E  
                 __end_of_calc_ror_data 8478                       __CFG_CLKOUTEN$OFF 000000  
            __end_of_eaDogM_WriteString A0FA                   __end_of_mode_lamp_dim B7AE  
               __end_of_adc_int_handler B940                  __size_of_INT0_CallBack 0022  
                            _SPI1SCKPPS 003ADE                              _SPI1SDIPPS 003ADF  
                __size_of_INT1_CallBack 0022                      __end_of_update_lcd 9376  
                _uart2TxBufferRemaining 0020                      __end_of_static_soc B57A  
                    __end_of_start_bsoc B62C                          _FVR_Initialize B90E  
                __end_of_get_raw_result B728                        _send_lcd_cmd_dma AA6A  
                __size_of___fpclassifyf 0196                   TMR5_ISR@CountCallBack 0014  
      __end_of_INT1_SetInterruptHandler B466               __size_of_UART1_Initialize 0046  
                      ??_DMA1_DMAOR_ISR 004C               __end_of_send_lcd_cmd_long B2D6  
               __size_of_start_adc_scan 0064                     __end_of_Default_ISR B936  
        __end_of_PIN_MANAGER_Initialize A2C8               __size_of_mode_lamp_bright 000E  
                    __end_of_vterm_dump 8F16                 _eaDogM_WriteStringAtPos B042  
                         _get_vterm_ptr B1D0                          _check_adc_scan B8F6  
             __size_of_UART2_Initialize 005E  
