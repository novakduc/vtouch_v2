

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Dec  5 02:01:10 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1,inline
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1,inline
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=1
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1
   149                           	psect	text125,global,reloc=4,class=CODE,delta=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=4,class=CODE,delta=1
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=4,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1
   162                           	psect	text138,global,reloc=4,class=CODE,delta=1
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1
   164                           	psect	text140,global,reloc=2,class=CODE,delta=1
   165                           	psect	text141,global,reloc=4,class=CODE,delta=1
   166                           	psect	text142,global,reloc=4,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1
   170                           	psect	text146,global,reloc=4,class=CODE,delta=1
   171                           	psect	text147,global,reloc=4,class=CODE,delta=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1
   173                           	psect	text149,global,reloc=4,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=4,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1
   177                           	psect	text153,global,reloc=4,class=CODE,delta=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1
   179                           	psect	text155,global,reloc=4,class=CODE,delta=1
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1
   182                           	psect	text158,global,reloc=4,class=CODE,delta=1
   183                           	psect	text159,global,reloc=4,class=CODE,delta=1
   184                           	psect	text160,global,reloc=4,class=CODE,delta=1
   185                           	psect	text161,global,reloc=4,class=CODE,delta=1
   186                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   187                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   188                           	psect	text162,global,reloc=4,class=CODE,delta=1
   189                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   190                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   191  0000                     
   192                           ; Version 2.10
   193                           ; Generated 31/07/2019 GMT
   194                           ; 
   195                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   196                           ; All rights reserved.
   197                           ; 
   198                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   199                           ; 
   200                           ; Redistribution and use in source and binary forms, with or without modification, are
   201                           ; permitted provided that the following conditions are met:
   202                           ; 
   203                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   204                           ;        conditions and the following disclaimer.
   205                           ; 
   206                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   207                           ;        of conditions and the following disclaimer in the documentation and/or other
   208                           ;        materials provided with the distribution.
   209                           ; 
   210                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   211                           ;        software without specific prior written permission.
   212                           ; 
   213                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   214                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   215                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   216                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   217                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   218                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   219                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   220                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   221                           ; 
   222                           ; 
   223                           ; Code-generator required, PIC18F57K42 Definitions
   224                           ; 
   225                           ; SFR Addresses
   226  0000                     
   227 ;;_k	offset	0
   228 ;;_j	offset	1
   229 ;;_i	offset	2
   230 ;;_inp_index	offset	3
   231 ;;_mode	offset	4
   232 ;;_channel	offset=-1 (param)
   233 ;;_s	offset=-2 (param)
   234 ;;_cmd	offset=-1 (param)
   235 ;;_cmd	offset=-1 (param)
   236 ;;_data	offset=-1 (param)
   237 ;;__this	offset=-2 (param)
   238 ;;_h	offset=-1 (param)
   239 ;;_h	offset=-1 (param)
   240 ;;_i	offset=-1 (param)
   241 ;;_cmd	offset=-1 (param)
   242 ;;_i	offset	0
   243 ;;_chan	offset=-1 (param)
   244 ;;_to_what	offset=-2 (param)
   245 ;;_u	offset	0
   246 ;;_s	offset=-2 (param)
   247 ;;_index	offset=-1 (param)
   248 ;;_arg	offset	0
   249 ;;_exp	offset	4
   250 ;;_sign	offset=-1 (param)
   251 ;;_val	offset=-5 (param)
   252 ;;_h	offset=-1 (param)
   253 ;;_flipper	offset=-1 (param)
   254 ;;_f	offset	0
   255 ;;_ap	offset	6
   256 ;;_s	offset=-3 (param)
   257 ;;_fmt	offset=-5 (param)
   258 ;;_line	offset=-1 (param)
   259 ;;_vterm	offset=-2 (param)
   260 ;;_numMilliseconds	offset=-2 (param)
   261 ;;_vterm	offset=-1 (param)
   262 ;;_r	offset=-1 (param)
   263 ;;_c	offset=-2 (param)
   264 ;;_strPtr	offset=-4 (param)
   265 ;;_strPtr	offset=-1 (param)
   266 ;;_delay	offset=-4 (param)
   267 ;;_strPtr	offset=-2 (param)
   268 ;;__this	offset=-2 (param)
   269 ;;_clearBuffer	offset=-3 (param)
   270 ;;_s	offset	0
   271 ;;_k	offset	2
   272 ;;_dest	offset=-2 (param)
   273 ;;_c	offset=-4 (param)
   274 ;;_n	offset=-6 (param)
   275 ;;_ap	offset	0
   276 ;;_fmt	offset=-3 (param)
   277 ;;_cfmt	offset	0
   278 ;;_fp	offset=-2 (param)
   279 ;;_fmt	offset=-4 (param)
   280 ;;_ap	offset=-6 (param)
   281 ;;_vfpfcnvrt$5025	offset	0
   282 ;;_vfpfcnvrt$5031	offset	2
   283 ;;_vfpfcnvrt$5024	offset	4
   284 ;;_llu	offset	6
   285 ;;_ll	offset	14
   286 ;;_f	offset	22
   287 ;;_ct	offset	26
   288 ;;_cp	offset	29
   289 ;;_c	offset	31
   290 ;;_fp	offset=-2 (param)
   291 ;;_fmt	offset=-4 (param)
   292 ;;_ap	offset=-6 (param)
   293 ;;_xtoa$5010	offset	0
   294 ;;_xtoa$5009	offset	2
   295 ;;_n	offset	4
   296 ;;_c	offset	12
   297 ;;_i	offset	14
   298 ;;_w	offset	16
   299 ;;_p	offset	18
   300 ;;_fp	offset=-2 (param)
   301 ;;_d	offset=-10 (param)
   302 ;;_x	offset=-11 (param)
   303 ;;_toupper$5670	offset	0
   304 ;;_c	offset=-2 (param)
   305 ;;_c	offset=-2 (param)
   306 ;;_c	offset=-2 (param)
   307 ;;_r	offset	0
   308 ;;_l	offset	2
   309 ;;__l	offset=-2 (param)
   310 ;;__r	offset=-4 (param)
   311 ;;_n	offset=-6 (param)
   312 ;;_nuls	offset	0
   313 ;;_l	offset	7
   314 ;;_p	offset	9
   315 ;;_cp	offset	11
   316 ;;_w	offset	13
   317 ;;_i	offset	15
   318 ;;_fp	offset=-2 (param)
   319 ;;_s	offset=-4 (param)
   320 ;;_efgtoa$4989	offset	0
   321 ;;_efgtoa$4988	offset	2
   322 ;;_efgtoa$4987	offset	4
   323 ;;_efgtoa$4983	offset	6
   324 ;;_efgtoa$4979	offset	8
   325 ;;_efgtoa$4978	offset	10
   326 ;;_u	offset	12
   327 ;;_g	offset	16
   328 ;;_l	offset	20
   329 ;;_h	offset	24
   330 ;;_ou	offset	28
   331 ;;_n	offset	32
   332 ;;_e	offset	34
   333 ;;_i	offset	36
   334 ;;_w	offset	38
   335 ;;_p	offset	40
   336 ;;_sign	offset	42
   337 ;;_d	offset	44
   338 ;;_ne	offset	46
   339 ;;_m	offset	48
   340 ;;_pp	offset	50
   341 ;;_t	offset	52
   342 ;;_mode	offset	54
   343 ;;_nmode	offset	55
   344 ;;_fp	offset=-2 (param)
   345 ;;_f	offset=-6 (param)
   346 ;;_c	offset=-7 (param)
   347 ;;_tolower$5655	offset	0
   348 ;;_c	offset=-2 (param)
   349 ;;_c	offset=-2 (param)
   350 ;;_d	offset	0
   351 ;;_s	offset	2
   352 ;;_dest	offset=-2 (param)
   353 ;;_src	offset=-4 (param)
   354 ;;_u	offset	0
   355 ;;_m	offset	4
   356 ;;_e	offset	8
   357 ;;_x	offset=-4 (param)
   358 ;;_u	offset	0
   359 ;;_e	offset	4
   360 ;;_x	offset=-4 (param)
   361 ;;_exp1	offset	0
   362 ;;_sign1	offset	1
   363 ;;_f1	offset=-4 (param)
   364 ;;_f1	offset=-4 (param)
   365 ;;_ff1	offset=-4 (param)
   366 ;;_ff2	offset=-8 (param)
   367 ;;_ff1	offset=-4 (param)
   368 ;;_ff2	offset=-8 (param)
   369 ;;_grs	offset	0
   370 ;;_rem	offset	4
   371 ;;_new_exp	offset	8
   372 ;;_aexp	offset	10
   373 ;;_bexp	offset	11
   374 ;;_sign	offset	12
   375 ;;_b	offset=-4 (param)
   376 ;;_a	offset=-8 (param)
   377 ;;_sign	offset	0
   378 ;;_counter	offset	1
   379 ;;_dividend	offset=-2 (param)
   380 ;;_divisor	offset=-4 (param)
   381 ;;_quotient	offset	0
   382 ;;_sign	offset	2
   383 ;;_counter	offset	3
   384 ;;_dividend	offset=-2 (param)
   385 ;;_divisor	offset=-4 (param)
   386 ;;_dtoa$4955	offset	0
   387 ;;_n	offset	2
   388 ;;_i	offset	10
   389 ;;_s	offset	12
   390 ;;_w	offset	14
   391 ;;_p	offset	16
   392 ;;_fp	offset=-2 (param)
   393 ;;_d	offset=-10 (param)
   394 ;;_a	offset=-2 (param)
   395 ;;_sign	offset	0
   396 ;;_counter	offset	1
   397 ;;_dividend	offset=-8 (param)
   398 ;;_divisor	offset=-16 (param)
   399 ;;_quotient	offset	0
   400 ;;_sign	offset	8
   401 ;;_counter	offset	9
   402 ;;_dividend	offset=-8 (param)
   403 ;;_divisor	offset=-16 (param)
   404 ;;_w	offset	0
   405 ;;_fp	offset=-2 (param)
   406 ;;_c	offset=-3 (param)
   407 ;;_w	offset	0
   408 ;;_i	offset	2
   409 ;;_fp	offset=-2 (param)
   410 ;;_buf	offset=-4 (param)
   411 ;;_p	offset=-6 (param)
   412 ;;_a	offset	0
   413 ;;_s	offset=-2 (param)
   414 ;;_i	offset	0
   415 ;;_c	offset	2
   416 ;;_s	offset=-2 (param)
   417 ;;_fp	offset=-4 (param)
   418 ;;_c	offset=-2 (param)
   419 ;;_fp	offset=-4 (param)
   420 ;;_c	offset=-1 (param)
   421 ;;__this	offset=-2 (param)
   422 ;;_c	offset=-3 (param)
   423 ;;_atoi$5508	offset	0
   424 ;;_atoi$5506	offset	2
   425 ;;_atoi$5507	offset	4
   426 ;;_n	offset	5
   427 ;;_neg	offset	7
   428 ;;_s	offset=-2 (param)
   429 ;;_isspace$5546	offset	0
   430 ;;_c	offset=-2 (param)
   431 ;;_c	offset=-2 (param)
   432 ;;_vterm	offset=-1 (param)
   433 ;;_new_response_info	offset=-1 (param)
   434 ;;_new_response_info	offset=-1 (param)
   435 ;;_level	offset=-2 (param)
   436 ;;_dutyValue	offset=-2 (param)
   437 ;;_timer	offset=-1 (param)
   438 ;;_timer	offset=-1 (param)
   439 ;;_count	offset=-3 (param)
   440 ;;_h	offset=-1 (param)
   441 ;;_lp_speed	offset	0
   442 ;;_new	offset=-4 (param)
   443 ;;_bn	offset=-5 (param)
   444 ;;_slow	offset=-6 (param)
   445 ;;_b	offset=-4 (param)
   446 ;;_a	offset=-8 (param)
   447 ;;_grs	offset	0
   448 ;;_bexp	offset	1
   449 ;;_aexp	offset	2
   450 ;;_signs	offset	3
   451 ;;_b	offset=-4 (param)
   452 ;;_a	offset=-8 (param)
   453 ;;_prod	offset	0
   454 ;;_grs	offset	4
   455 ;;_temp	offset	8
   456 ;;_bexp	offset	10
   457 ;;_aexp	offset	11
   458 ;;_sign	offset	12
   459 ;;_b	offset=-4 (param)
   460 ;;_a	offset=-8 (param)
   461 ;;_InterruptHandler	offset=-3 (param)
   462 ;;_InterruptHandler	offset=-3 (param)
   463 ;;_InterruptHandler	offset=-3 (param)
   464 ;;_InterruptHandler	offset=-3 (param)
   465 ;;_InterruptHandler	offset=-3 (param)
   466 ;;_InterruptHandler	offset=-3 (param)
   467 ;;_InterruptHandler	offset=-3 (param)
   468 ;;_state	offset	0
   469 ;;_InterruptHandler	offset=-3 (param)
   470 ;;_InterruptHandler	offset=-3 (param)
   471 ;;_InterruptHandler	offset=-3 (param)
   472 ;;_InterruptHandler	offset=-3 (param)
   473 ;;_i	offset	0
   474 ;;_sw_value	offset	1
   475 ;;_timerVal	offset=-2 (param)
   476 ;;_timerVal	offset=-2 (param)
   477 ;;_grs	offset	0
   478 ;;_rem	offset	4
   479 ;;_new_exp	offset	8
   480 ;;_aexp	offset	10
   481 ;;_bexp	offset	11
   482 ;;_sign	offset	12
   483 ;;_b	offset=-4 (param)
   484 ;;_a	offset=-8 (param)
   485 ;;_grs	offset	0
   486 ;;_bexp	offset	1
   487 ;;_aexp	offset	2
   488 ;;_signs	offset	3
   489 ;;_b	offset=-4 (param)
   490 ;;_a	offset=-8 (param)
   491 ;;_channel	offset=-1 (param)
   492 ;;_i	offset	0
   493                           
   494                           	psect	idataBANK0
   495  0188DE                     __pidataBANK0:
   496                           	opt callstack 0
   497                           
   498                           ;initializer for _R
   499  0188DE  0000               	dw	0
   500  0188E0  0000               	dw	0
   501  0188E2  0000               	dw	0
   502  0188E4  0000               	dw	0
   503  0188E6  0000               	dw	0
   504  0188E8  0000               	dw	0
   505  0188EA  0000               	dw	0
   506  0188EC  0000               	dw	0
   507  0188EE  0000               	dw	0
   508  0188F0  0000               	dw	0
   509  0188F2  0000               	dw	0
   510  0188F4  0000               	dw	0
   511  0188F6  0000               	dw	0
   512  0188F8  0000               	dw	0
   513  0188FA  0000               	dw	0
   514  0188FC  0000               	dw	0
   515  0188FE  0F67               	dw	3943
   516  018900  0F8F               	dw	3983
   517  018902  00                 	db	0
   518  018903  0000               	dw	0
   519  018905  00                 	db	0
   520                           
   521                           ;initializer for stoa@F1166
   522  018906  28                 	db	40
   523  018907  6E                 	db	110
   524  018908  75                 	db	117
   525  018909  6C                 	db	108
   526  01890A  6C                 	db	108
   527  01890B  29                 	db	41
   528  01890C  00                 	db	0
   529                           
   530                           ;initializer for _H
   531  01890D  00                 	db	0
   532  01890E  00                 	db	0
   533  01890F  01                 	db	1
   534  018910  00                 	db	0
   535  018911  01                 	db	1
   536  018912  00                 	db	0
   537  018913  00                 	db	0
   538                           
   539                           	psect	idataBANK1
   540  017772                     __pidataBANK1:
   541                           	opt callstack 0
   542                           
   543                           ;initializer for _C
   544  017772  0000               	dw	0
   545  017774  0000               	dw	0
   546  017776  0000               	dw	0
   547  017778  0000               	dw	0
   548  01777A  0000               	dw	0
   549  01777C  0000               	dw	0
   550  01777E  0000               	dw	0
   551  017780  0000               	dw	0
   552  017782  0000               	dw	0
   553  017784  0000               	dw	0
   554  017786  0000               	dw	0
   555  017788  0000               	dw	0
   556  01778A  0000               	dw	0
   557  01778C  0000               	dw	0
   558  01778E  0000               	dw	0
   559  017790  0000               	dw	0
   560  017792  0000               	dw	0
   561  017794  0000               	dw	0
   562  017796  0000               	dw	0
   563  017798  0000               	dw	0
   564  01779A  0000               	dw	0
   565  01779C  0000               	dw	0
   566  01779E  0000               	dw	0
   567  0177A0  0000               	dw	0
   568  0177A2  0000               	dw	0
   569  0177A4  0000               	dw	0
   570  0177A6  0000               	dw	0
   571  0177A8  0000               	dw	0
   572  0177AA  0000               	dw	0
   573  0177AC  0000               	dw	0
   574  0177AE  0000               	dw	0
   575  0177B0  0000               	dw	0
   576  0177B2  0000               	dw	0
   577  0177B4  0000               	dw	0
   578  0177B6  0000               	dw	0
   579  0177B8  0000               	dw	0
   580  0177BA  0000               	dw	0
   581  0177BC  0000               	dw	0
   582  0177BE  0000               	dw	0
   583  0177C0  0000               	dw	0
   584  0177C2  0000               	dw	0
   585  0177C4  0000               	dw	0
   586  0177C6  0000               	dw	0
   587  0177C8  0000               	dw	0
   588  0177CA  0000               	dw	0
   589  0177CC  0000               	dw	0
   590  0177CE  0000               	dw	0
   591  0177D0  0000               	dw	0
   592  0177D2  0000               	dw	0
   593  0177D4  0000               	dw	0
   594  0177D6  0000               	dw	0
   595  0177D8  0000               	dw	0
   596  0177DA  0000               	dw	0
   597  0177DC  0000               	dw	0
   598  0177DE  0000               	dw	0
   599  0177E0  0000               	dw	0
   600  0177E2  0000               	dw	0
   601  0177E4  0000               	dw	0
   602  0177E6  0000               	dw	0
   603  0177E8  0000               	dw	0
   604  0177EA  0000               	dw	0
   605  0177EC  0000               	dw	0
   606  0177EE  0000               	dw	0
   607  0177F0  4361               	dw	17249
   608  0177F2  00                 	db	0
   609  0177F3  00                 	db	0
   610  0177F4  00                 	db	0
   611  0177F5  00                 	db	0
   612  0177F6  00                 	db	0
   613  0177F7  00                 	db	0
   614  0177F8  00                 	db	0
   615  0177F9  00                 	db	0
   616  0177FA  00                 	db	0
   617  0177FB  00                 	db	0
   618  0177FC  00                 	db	0
   619  0177FD  00                 	db	0
   620  0177FE  00                 	db	0
   621  0177FF  00                 	db	0
   622  017800  00                 	db	0
   623  017801  00                 	db	0
   624  017802  00                 	db	0
   625  017803  00                 	db	0
   626  017804  00                 	db	0
   627  017805  00                 	db	0
   628  017806  00                 	db	0
   629  017807  00                 	db	0
   630  017808  00                 	db	0
   631  017809  00                 	db	0
   632  01780A  00                 	db	0
   633  01780B  00                 	db	0
   634  01780C  00                 	db	0
   635  01780D  00                 	db	0
   636  01780E  00                 	db	0
   637  01780F  00                 	db	0
   638  017810  00                 	db	0
   639  017811  00                 	db	0
   640  017812  00                 	db	0
   641                           
   642                           ;initializer for _port_data
   643  017813  FF                 	db	255
   644  017814  00                 	db	0
   645  017815  FF                 	db	255
   646  017816  00                 	db	0
   647  017817  FF                 	db	255
   648  017818  00                 	db	0
   649  017819  FF                 	db	255
   650  01781A  00                 	db	0
   651  01781B  FF                 	db	255
   652  01781C  00                 	db	0
   653  01781D  FF                 	db	255
   654  01781E  00                 	db	0
   655  01781F  FF                 	db	255
   656  017820  00                 	db	0
   657  017821  FF                 	db	255
   658  017822  00                 	db	0
   659                           
   660                           	psect	idataBANK2
   661  0175FE                     __pidataBANK2:
   662                           	opt callstack 0
   663                           
   664                           ;initializer for _V
   665  0175FE  00                 	db	0
   666  0175FF  00                 	db	0
   667  017600  00                 	db	0
   668  017601  00                 	db	0
   669  017602  00                 	db	0
   670  017603  00                 	db	0
   671  017604  00                 	db	0
   672  017605  00                 	db	0
   673  017606  00                 	db	0
   674  017607  00                 	db	0
   675  017608  00                 	db	0
   676  017609  00                 	db	0
   677  01760A  00                 	db	0
   678  01760B  00                 	db	0
   679  01760C  00                 	db	0
   680  01760D  00                 	db	0
   681  01760E  00                 	db	0
   682  01760F  00                 	db	0
   683  017610  00                 	db	0
   684  017611  00                 	db	0
   685  017612  00                 	db	0
   686  017613  00                 	db	0
   687  017614  00                 	db	0
   688  017615  00                 	db	0
   689  017616  00                 	db	0
   690  017617  00                 	db	0
   691  017618  00                 	db	0
   692  017619  00                 	db	0
   693  01761A  00                 	db	0
   694  01761B  00                 	db	0
   695  01761C  00                 	db	0
   696  01761D  00                 	db	0
   697  01761E  00                 	db	0
   698  01761F  00                 	db	0
   699  017620  00                 	db	0
   700  017621  00                 	db	0
   701  017622  00                 	db	0
   702  017623  00                 	db	0
   703  017624  00                 	db	0
   704  017625  00                 	db	0
   705  017626  00                 	db	0
   706  017627  00                 	db	0
   707  017628  00                 	db	0
   708  017629  00                 	db	0
   709  01762A  00                 	db	0
   710  01762B  00                 	db	0
   711  01762C  00                 	db	0
   712  01762D  00                 	db	0
   713  01762E  00                 	db	0
   714  01762F  00                 	db	0
   715  017630  00                 	db	0
   716  017631  00                 	db	0
   717  017632  00                 	db	0
   718  017633  00                 	db	0
   719  017634  00                 	db	0
   720  017635  00                 	db	0
   721  017636  00                 	db	0
   722  017637  00                 	db	0
   723  017638  00                 	db	0
   724  017639  00                 	db	0
   725  01763A  00                 	db	0
   726  01763B  00                 	db	0
   727  01763C  00                 	db	0
   728  01763D  00                 	db	0
   729  01763E  00                 	db	0
   730  01763F  00                 	db	0
   731  017640  00                 	db	0
   732  017641  00                 	db	0
   733  017642  00                 	db	0
   734  017643  00                 	db	0
   735  017644  00                 	db	0
   736  017645  00                 	db	0
   737  017646  00                 	db	0
   738  017647  00                 	db	0
   739  017648  00                 	db	0
   740  017649  00                 	db	0
   741  01764A  00                 	db	0
   742  01764B  00                 	db	0
   743  01764C  00                 	db	0
   744  01764D  00                 	db	0
   745  01764E  00                 	db	0
   746  01764F  00                 	db	0
   747  017650  00                 	db	0
   748  017651  00                 	db	0
   749  017652  00                 	db	0
   750  017653  00                 	db	0
   751  017654  00                 	db	0
   752  017655  00                 	db	0
   753  017656  00                 	db	0
   754  017657  00                 	db	0
   755  017658  00                 	db	0
   756  017659  00                 	db	0
   757  01765A  00                 	db	0
   758  01765B  00                 	db	0
   759  01765C  00                 	db	0
   760  01765D  00                 	db	0
   761  01765E  00                 	db	0
   762  01765F  00                 	db	0
   763  017660  00                 	db	0
   764  017661  00                 	db	0
   765  017662  00                 	db	0
   766  017663  00                 	db	0
   767  017664  00                 	db	0
   768  017665  00                 	db	0
   769  017666  00                 	db	0
   770  017667  00                 	db	0
   771  017668  00                 	db	0
   772  017669  00                 	db	0
   773  01766A  00                 	db	0
   774  01766B  00                 	db	0
   775  01766C  00                 	db	0
   776  01766D  00                 	db	0
   777  01766E  00                 	db	0
   778  01766F  00                 	db	0
   779  017670  00                 	db	0
   780  017671  00                 	db	0
   781  017672  00                 	db	0
   782  017673  00                 	db	0
   783  017674  00                 	db	0
   784  017675  00                 	db	0
   785  017676  00                 	db	0
   786  017677  00                 	db	0
   787  017678  00                 	db	0
   788  017679  00                 	db	0
   789  01767A  00                 	db	0
   790  01767B  00                 	db	0
   791  01767C  00                 	db	0
   792  01767D  00                 	db	0
   793  01767E  00                 	db	0
   794  01767F  0000               	dw	0
   795  017681  0000               	dw	0
   796  017683  0000               	dw	0
   797  017685  0000               	dw	0
   798  017687  00                 	db	0
   799  017688  00                 	db	0
   800  017689  00                 	db	0
   801  01768A  00                 	db	0
   802  01768B  00                 	db	0
   803  01768C  00                 	db	0
   804  01768D  0000               	dw	0
   805  01768F  0000               	dw	0
   806  017691  0000               	dw	0
   807  017693  0000               	dw	0
   808  017695  0000               	dw	0
   809  017697  0000               	dw	0
   810  017699  00                 	db	0
   811  01769A  00                 	db	0
   812  01769B  00                 	db	0
   813  01769C  00                 	db	0
   814  01769D  00                 	db	0
   815  01769E  00                 	db	0
   816  01769F  00                 	db	0
   817  0176A0  00                 	db	0
   818  0176A1  00                 	db	0
   819  0176A2  00                 	db	0
   820  0176A3  0000               	dw	0
   821  0176A5  0000               	dw	0
   822  0176A7  2D                 	db	45
   823  0176A8  00                 	db	0
   824  0176A9  00                 	db	0
   825  0176AA  0000               	dw	0
   826  0176AC  0000               	dw	0
   827  0176AE  0000               	dw	0
   828  0176B0  0000               	dw	0
   829  0176B2  0000               	dw	0
   830  0176B4  0000               	dw	0
   831  0176B6  0000               	dw	0
   832  0176B8  0000               	dw	0
   833                           
   834                           	psect	mediumconst
   835  00FDB0                     __pmediumconst:
   836                           	opt callstack 0
   837  00FDB0  00                 	db	0
   838  00FDB1                     _T:
   839                           	opt callstack 0
   840  00FDB1  63                 	db	99
   841  00FDB2  6F                 	db	111
   842  00FDB3  6D                 	db	109
   843  00FDB4  6D                 	db	109
   844  00FDB5  61                 	db	97
   845  00FDB6  6E                 	db	110
   846  00FDB7  64                 	db	100
   847  00FDB8  73                 	db	115
   848  00FDB9  20                 	db	32
   849  00FDBA  31                 	db	49
   850  00FDBB  00                 	db	0
   851  00FDBC  00                 	db	0
   852  00FDBD  00                 	db	0
   853  00FDBE  00                 	db	0
   854  00FDBF  00                 	db	0
   855  00FDC0  00                 	db	0
   856  00FDC1  00                 	db	0
   857  00FDC2  00                 	db	0
   858  00FDC3  64                 	db	100
   859  00FDC4  69                 	db	105
   860  00FDC5  73                 	db	115
   861  00FDC6  70                 	db	112
   862  00FDC7  6C                 	db	108
   863  00FDC8  61                 	db	97
   864  00FDC9  79                 	db	121
   865  00FDCA  73                 	db	115
   866  00FDCB  20                 	db	32
   867  00FDCC  31                 	db	49
   868  00FDCD  00                 	db	0
   869  00FDCE  00                 	db	0
   870  00FDCF  00                 	db	0
   871  00FDD0  00                 	db	0
   872  00FDD1  00                 	db	0
   873  00FDD2  00                 	db	0
   874  00FDD3  00                 	db	0
   875  00FDD4  00                 	db	0
   876  00FDD5  63                 	db	99
   877  00FDD6  6F                 	db	111
   878  00FDD7  6D                 	db	109
   879  00FDD8  6D                 	db	109
   880  00FDD9  61                 	db	97
   881  00FDDA  6E                 	db	110
   882  00FDDB  64                 	db	100
   883  00FDDC  73                 	db	115
   884  00FDDD  20                 	db	32
   885  00FDDE  32                 	db	50
   886  00FDDF  00                 	db	0
   887  00FDE0  00                 	db	0
   888  00FDE1  00                 	db	0
   889  00FDE2  00                 	db	0
   890  00FDE3  00                 	db	0
   891  00FDE4  00                 	db	0
   892  00FDE5  00                 	db	0
   893  00FDE6  00                 	db	0
   894  00FDE7  64                 	db	100
   895  00FDE8  69                 	db	105
   896  00FDE9  73                 	db	115
   897  00FDEA  70                 	db	112
   898  00FDEB  6C                 	db	108
   899  00FDEC  61                 	db	97
   900  00FDED  79                 	db	121
   901  00FDEE  73                 	db	115
   902  00FDEF  20                 	db	32
   903  00FDF0  32                 	db	50
   904  00FDF1  00                 	db	0
   905  00FDF2  00                 	db	0
   906  00FDF3  00                 	db	0
   907  00FDF4  00                 	db	0
   908  00FDF5  00                 	db	0
   909  00FDF6  00                 	db	0
   910  00FDF7  00                 	db	0
   911  00FDF8  00                 	db	0
   912  00FDF9  63                 	db	99
   913  00FDFA  6F                 	db	111
   914  00FDFB  6D                 	db	109
   915  00FDFC  6D                 	db	109
   916  00FDFD  61                 	db	97
   917  00FDFE  6E                 	db	110
   918  00FDFF  64                 	db	100
   919  00FE00  73                 	db	115
   920  00FE01  20                 	db	32
   921  00FE02  33                 	db	51
   922  00FE03  00                 	db	0
   923  00FE04  00                 	db	0
   924  00FE05  00                 	db	0
   925  00FE06  00                 	db	0
   926  00FE07  00                 	db	0
   927  00FE08  00                 	db	0
   928  00FE09  00                 	db	0
   929  00FE0A  00                 	db	0
   930  00FE0B  64                 	db	100
   931  00FE0C  69                 	db	105
   932  00FE0D  73                 	db	115
   933  00FE0E  70                 	db	112
   934  00FE0F  6C                 	db	108
   935  00FE10  61                 	db	97
   936  00FE11  79                 	db	121
   937  00FE12  73                 	db	115
   938  00FE13  20                 	db	32
   939  00FE14  33                 	db	51
   940  00FE15  00                 	db	0
   941  00FE16  00                 	db	0
   942  00FE17  00                 	db	0
   943  00FE18  00                 	db	0
   944  00FE19  00                 	db	0
   945  00FE1A  00                 	db	0
   946  00FE1B  00                 	db	0
   947  00FE1C  00                 	db	0
   948  00FE1D  63                 	db	99
   949  00FE1E  6F                 	db	111
   950  00FE1F  6D                 	db	109
   951  00FE20  6D                 	db	109
   952  00FE21  61                 	db	97
   953  00FE22  6E                 	db	110
   954  00FE23  64                 	db	100
   955  00FE24  73                 	db	115
   956  00FE25  20                 	db	32
   957  00FE26  34                 	db	52
   958  00FE27  00                 	db	0
   959  00FE28  00                 	db	0
   960  00FE29  00                 	db	0
   961  00FE2A  00                 	db	0
   962  00FE2B  00                 	db	0
   963  00FE2C  00                 	db	0
   964  00FE2D  00                 	db	0
   965  00FE2E  00                 	db	0
   966  00FE2F  64                 	db	100
   967  00FE30  69                 	db	105
   968  00FE31  73                 	db	115
   969  00FE32  70                 	db	112
   970  00FE33  6C                 	db	108
   971  00FE34  61                 	db	97
   972  00FE35  79                 	db	121
   973  00FE36  73                 	db	115
   974  00FE37  20                 	db	32
   975  00FE38  34                 	db	52
   976  00FE39  00                 	db	0
   977  00FE3A  00                 	db	0
   978  00FE3B  00                 	db	0
   979  00FE3C  00                 	db	0
   980  00FE3D  00                 	db	0
   981  00FE3E  00                 	db	0
   982  00FE3F  00                 	db	0
   983  00FE40  00                 	db	0
   984  00FE41                     __end_of_T:
   985                           	opt callstack 0
   986  0000                     _IVTADL	set	14493
   987  0000                     _IVTADH	set	14494
   988  0000                     _IVTADU	set	14495
   989  0000                     _PIR6bits	set	14758
   990  0000                     _PIR4bits	set	14756
   991  0000                     _PIE8bits	set	14744
   992  0000                     _PIR8bits	set	14760
   993  0000                     _SCANPR	set	14839
   994  0000                     _DMA2PR	set	14836
   995  0000                     _DMA1PR	set	14835
   996  0000                     _MAINPR	set	14834
   997  0000                     _ISRPR	set	14833
   998  0000                     _PIE2bits	set	14738
   999  0000                     _PIR2bits	set	14754
  1000  0000                     _PIE9bits	set	14745
  1001  0000                     _PIR9bits	set	14761
  1002  0000                     _PIE6bits	set	14742
  1003  0000                     _PIE3bits	set	14739
  1004  0000                     _PMD7	set	14791
  1005  0000                     _PMD6	set	14790
  1006  0000                     _PMD5	set	14789
  1007  0000                     _PMD4	set	14788
  1008  0000                     _PMD3	set	14787
  1009  0000                     _PMD2	set	14786
  1010  0000                     _PMD1	set	14785
  1011  0000                     _PMD0	set	14784
  1012  0000                     _OSCTUNE	set	14814
  1013  0000                     _OSCFRQ	set	14815
  1014  0000                     _OSCEN	set	14813
  1015  0000                     _OSCCON3	set	14811
  1016  0000                     _OSCCON1	set	14809
  1017  0000                     _IPR8bits	set	14728
  1018  0000                     _IPR9bits	set	14729
  1019  0000                     _IPR5bits	set	14725
  1020  0000                     _IPR1bits	set	14721
  1021  0000                     _IPR3bits	set	14723
  1022  0000                     _IPR6bits	set	14726
  1023  0000                     _IPR2bits	set	14722
  1024  0000                     _PIE5bits	set	14741
  1025  0000                     _PIE1bits	set	14737
  1026  0000                     _PIR5bits	set	14757
  1027  0000                     _PIR1bits	set	14753
  1028  0000                     _PLLR	set	118496
  1029  0000                     _SPI1SDIPPS	set	15071
  1030  0000                     _U1RXPPS	set	15077
  1031  0000                     _RC6PPS	set	14870
  1032  0000                     _RC5PPS	set	14869
  1033  0000                     _INT1PPS	set	15041
  1034  0000                     _RD1PPS	set	14873
  1035  0000                     _INT0PPS	set	15040
  1036  0000                     _RC3PPS	set	14867
  1037  0000                     _RB6PPS	set	14862
  1038  0000                     _SPI1SCKPPS	set	15070
  1039  0000                     _U2RXPPS	set	15080
  1040  0000                     _SLRCONF	set	14995
  1041  0000                     _SLRCONE	set	14979
  1042  0000                     _SLRCOND	set	14963
  1043  0000                     _SLRCONC	set	14947
  1044  0000                     _SLRCONB	set	14931
  1045  0000                     _SLRCONA	set	14915
  1046  0000                     _ODCOND	set	14962
  1047  0000                     _ODCONC	set	14946
  1048  0000                     _ODCONB	set	14930
  1049  0000                     _ODCONA	set	14914
  1050  0000                     _ODCONF	set	14994
  1051  0000                     _ODCONE	set	14978
  1052  0000                     _WPUC	set	14945
  1053  0000                     _WPUA	set	14913
  1054  0000                     _WPUB	set	14929
  1055  0000                     _WPUE	set	14977
  1056  0000                     _WPUF	set	14993
  1057  0000                     _WPUD	set	14961
  1058  0000                     _ANSELA	set	14912
  1059  0000                     _ANSELF	set	14992
  1060  0000                     _ANSELE	set	14976
  1061  0000                     _ANSELB	set	14928
  1062  0000                     _ANSELC	set	14944
  1063  0000                     _ANSELD	set	14960
  1064  0000                     _DMA2SSA	set	15321
  1065  0000                     _DMA1SSA	set	15353
  1066  0000                     _DMA2DSZ	set	15310
  1067  0000                     _DMA2SSZ	set	15319
  1068  0000                     _DMA2DSA	set	15312
  1069  0000                     _DMA1DSZ	set	15342
  1070  0000                     _DMA1SSZ	set	15351
  1071  0000                     _DMA1DSA	set	15344
  1072  0000                     _DMA1CON0bits	set	15356
  1073  0000                     _DMA1CON1bits	set	15357
  1074  0000                     _DMA2CON0	set	15324
  1075  0000                     _DMA2AIRQ	set	15326
  1076  0000                     _DMA2SIRQ	set	15327
  1077  0000                     _DMA2CON1	set	15325
  1078  0000                     _DMA1CON0	set	15356
  1079  0000                     _DMA1AIRQ	set	15358
  1080  0000                     _DMA1SIRQ	set	15359
  1081  0000                     _DMA1CON1	set	15357
  1082  0000                     _CLKRCON	set	15589
  1083  0000                     _CLKRCLK	set	15590
  1084  0000                     _SPI1INTFbits	set	15642
  1085  0000                     _SPI1RXB	set	15632
  1086  0000                     _SPI1TXB	set	15633
  1087  0000                     _SPI1TCNTL	set	15634
  1088  0000                     _SPI1CON0	set	15636
  1089  0000                     _SPI1CLK	set	15644
  1090  0000                     _SPI1BAUD	set	15641
  1091  0000                     _SPI1CON2	set	15638
  1092  0000                     _SPI1CON1	set	15637
  1093  0000                     _U2RXB	set	15824
  1094  0000                     _U2TXB	set	15826
  1095  0000                     _U2ERRIE	set	15842
  1096  0000                     _U2ERRIR	set	15841
  1097  0000                     _U2UIR	set	15840
  1098  0000                     _U2FIFO	set	15839
  1099  0000                     _U2BRGH	set	15838
  1100  0000                     _U2BRGL	set	15837
  1101  0000                     _U2CON2	set	15836
  1102  0000                     _U2CON1	set	15835
  1103  0000                     _U2CON0	set	15834
  1104  0000                     _U2P3L	set	15832
  1105  0000                     _U2P2L	set	15830
  1106  0000                     _U2P1L	set	15828
  1107  0000                     _U1RXB	set	15848
  1108  0000                     _U1TXB	set	15850
  1109  0000                     _U1ERRIE	set	15866
  1110  0000                     _U1ERRIR	set	15865
  1111  0000                     _U1UIR	set	15864
  1112  0000                     _U1FIFO	set	15863
  1113  0000                     _U1BRGH	set	15862
  1114  0000                     _U1BRGL	set	15861
  1115  0000                     _U1CON2	set	15860
  1116  0000                     _U1CON1	set	15859
  1117  0000                     _U1CON0	set	15858
  1118  0000                     _U1P3H	set	15857
  1119  0000                     _U1P3L	set	15856
  1120  0000                     _U1P2H	set	15855
  1121  0000                     _U1P2L	set	15854
  1122  0000                     _U1P1H	set	15853
  1123  0000                     _U1P1L	set	15852
  1124  0000                     _FVRCON	set	16065
  1125  0000                     _ADFLTRL	set	16102
  1126  0000                     _ADFLTRH	set	16103
  1127  0000                     _ADCON0bits	set	16120
  1128  0000                     _ADCON0	set	16120
  1129  0000                     _ADCLK	set	16127
  1130  0000                     _ADACT	set	16126
  1131  0000                     _ADREF	set	16125
  1132  0000                     _ADSTAT	set	16124
  1133  0000                     _ADCON3	set	16123
  1134  0000                     _ADCON2	set	16122
  1135  0000                     _ADCON1	set	16121
  1136  0000                     _ADPREH	set	16119
  1137  0000                     _ADPREL	set	16118
  1138  0000                     _ADCAP	set	16117
  1139  0000                     _ADACQH	set	16116
  1140  0000                     _ADACQL	set	16115
  1141  0000                     _ADPCH	set	16113
  1142  0000                     _ADRPT	set	16108
  1143  0000                     _ADACCU	set	16106
  1144  0000                     _ADSTPTH	set	16101
  1145  0000                     _ADSTPTL	set	16100
  1146  0000                     _ADUTHH	set	16097
  1147  0000                     _ADUTHL	set	16096
  1148  0000                     _ADLTHH	set	16095
  1149  0000                     _ADLTHL	set	16094
  1150  0000                     _CCPTMRS1bits	set	16223
  1151  0000                     _PORTFbits	set	16335
  1152  0000                     _LATCbits	set	16316
  1153  0000                     _LATDbits	set	16317
  1154  0000                     _PORTBbits	set	16331
  1155  0000                     _T3CONbits	set	16294
  1156  0000                     _T3CON	set	16294
  1157  0000                     _TMR3L	set	16292
  1158  0000                     _TMR3H	set	16293
  1159  0000                     _T3CLK	set	16297
  1160  0000                     _T3GATE	set	16296
  1161  0000                     _T3GCON	set	16295
  1162  0000                     _T2CON	set	16300
  1163  0000                     _T2TMR	set	16298
  1164  0000                     _T2PR	set	16299
  1165  0000                     _T2RST	set	16303
  1166  0000                     _T2HLT	set	16301
  1167  0000                     _T2CLKCON	set	16302
  1168  0000                     _PWM8DCL	set	16224
  1169  0000                     _PWM8DCH	set	16225
  1170  0000                     _PWM8CON	set	16226
  1171  0000                     _LATEbits	set	16318
  1172  0000                     _T5CONbits	set	16282
  1173  0000                     _T5CON	set	16282
  1174  0000                     _TMR5L	set	16280
  1175  0000                     _TMR5H	set	16281
  1176  0000                     _T5CLK	set	16285
  1177  0000                     _T5GATE	set	16284
  1178  0000                     _T5GCON	set	16283
  1179  0000                     _T6CON	set	16276
  1180  0000                     _T6TMR	set	16274
  1181  0000                     _T6PR	set	16275
  1182  0000                     _T6RST	set	16279
  1183  0000                     _T6HLT	set	16277
  1184  0000                     _T6CLKCON	set	16278
  1185  0000                     _TRISD	set	16325
  1186  0000                     _TRISC	set	16324
  1187  0000                     _TRISB	set	16323
  1188  0000                     _TRISA	set	16322
  1189  0000                     _TRISF	set	16327
  1190  0000                     _TRISE	set	16326
  1191  0000                     _LATC	set	16316
  1192  0000                     _LATB	set	16315
  1193  0000                     _LATF	set	16319
  1194  0000                     _LATA	set	16314
  1195  0000                     _LATD	set	16317
  1196  0000                     _LATE	set	16318
  1197  0000                     _IVTLOCKbits	set	16340
  1198  0000                     _IVTLOCK	set	16340
  1199  0000                     _INTCON0bits	set	16338
  1200  0000                     _GIE	set	130711
  1201  00FE41                     
  1202                           ; BSR set to: 57
  1203  00FE41  20                 	db	32
  1204  00FE42  4D                 	db	77	;'M'
  1205  00FE43  65                 	db	101	;'e'
  1206  00FE44  73                 	db	115	;'s'
  1207  00FE45  67                 	db	103	;'g'
  1208  00FE46  20                 	db	32
  1209  00FE47  25                 	db	37
  1210  00FE48  64                 	db	100	;'d'
  1211  00FE49  20                 	db	32
  1212  00FE4A  53                 	db	83	;'S'
  1213  00FE4B  74                 	db	116	;'t'
  1214  00FE4C  61                 	db	97	;'a'
  1215  00FE4D  63                 	db	99	;'c'
  1216  00FE4E  6B                 	db	107	;'k'
  1217  00FE4F  20                 	db	32
  1218  00FE50  25                 	db	37
  1219  00FE51  64                 	db	100	;'d'
  1220  00FE52  20                 	db	32
  1221  00FE53  20                 	db	32
  1222  00FE54  20                 	db	32
  1223  00FE55  20                 	db	32
  1224  00FE56  20                 	db	32
  1225  00FE57  20                 	db	32
  1226  00FE58  00                 	db	0
  1227  00FE59                     STR_39:
  1228                           
  1229                           ; BSR set to: 57
  1230  00FE59  20                 	db	32
  1231  00FE5A  20                 	db	32
  1232  00FE5B  20                 	db	32
  1233  00FE5C  20                 	db	32
  1234  00FE5D  20                 	db	32
  1235  00FE5E  20                 	db	32
  1236  00FE5F  20                 	db	32
  1237  00FE60  20                 	db	32
  1238  00FE61  20                 	db	32
  1239  00FE62  20                 	db	32
  1240  00FE63  20                 	db	32
  1241  00FE64  20                 	db	32
  1242  00FE65  20                 	db	32
  1243  00FE66  20                 	db	32
  1244  00FE67  20                 	db	32
  1245  00FE68  20                 	db	32
  1246  00FE69  20                 	db	32
  1247  00FE6A  20                 	db	32
  1248  00FE6B  00                 	db	0
  1249  00FE6C                     STR_29:
  1250                           
  1251                           ; BSR set to: 57
  1252  00FE6C  48                 	db	72	;'H'
  1253  00FE6D  45                 	db	69	;'E'
  1254  00FE6E  4C                 	db	76	;'L'
  1255  00FE6F  50                 	db	80	;'P'
  1256  00FE70  20                 	db	32
  1257  00FE71  25                 	db	37
  1258  00FE72  73                 	db	115	;'s'
  1259  00FE73  20                 	db	32
  1260  00FE74  20                 	db	32
  1261  00FE75  20                 	db	32
  1262  00FE76  20                 	db	32
  1263  00FE77  20                 	db	32
  1264  00FE78  20                 	db	32
  1265  00FE79  20                 	db	32
  1266  00FE7A  20                 	db	32
  1267  00FE7B  20                 	db	32
  1268  00FE7C  20                 	db	32
  1269  00FE7D  20                 	db	32
  1270  00FE7E  00                 	db	0
  1271  00FE7F                     
  1272                           ; BSR set to: 57
  1273  00FE7F  44                 	db	68	;'D'
  1274  00FE80  49                 	db	73	;'I'
  1275  00FE81  53                 	db	83	;'S'
  1276  00FE82  50                 	db	80	;'P'
  1277  00FE83  4C                 	db	76	;'L'
  1278  00FE84  41                 	db	65	;'A'
  1279  00FE85  59                 	db	89	;'Y'
  1280  00FE86  20                 	db	32
  1281  00FE87  25                 	db	37
  1282  00FE88  73                 	db	115	;'s'
  1283  00FE89  20                 	db	32
  1284  00FE8A  20                 	db	32
  1285  00FE8B  20                 	db	32
  1286  00FE8C  20                 	db	32
  1287  00FE8D  20                 	db	32
  1288  00FE8E  20                 	db	32
  1289  00FE8F  20                 	db	32
  1290  00FE90  20                 	db	32
  1291  00FE91  00                 	db	0
  1292  00FE92                     STR_20:
  1293                           
  1294                           ; BSR set to: 57
  1295  00FE92  53                 	db	83	;'S'
  1296  00FE93  4F                 	db	79	;'O'
  1297  00FE94  43                 	db	67	;'C'
  1298  00FE95  20                 	db	32
  1299  00FE96  25                 	db	37
  1300  00FE97  64                 	db	100	;'d'
  1301  00FE98  20                 	db	32
  1302  00FE99  52                 	db	82	;'R'
  1303  00FE9A  55                 	db	85	;'U'
  1304  00FE9B  4E                 	db	78	;'N'
  1305  00FE9C  20                 	db	32
  1306  00FE9D  25                 	db	37
  1307  00FE9E  64                 	db	100	;'d'
  1308  00FE9F  20                 	db	32
  1309  00FEA0  20                 	db	32
  1310  00FEA1  20                 	db	32
  1311  00FEA2  20                 	db	32
  1312  00FEA3  20                 	db	32
  1313  00FEA4  00                 	db	0
  1314  00FEA5                     STR_19:
  1315                           
  1316                           ; BSR set to: 57
  1317  00FEA5  42                 	db	66	;'B'
  1318  00FEA6  41                 	db	65	;'A'
  1319  00FEA7  54                 	db	84	;'T'
  1320  00FEA8  20                 	db	32
  1321  00FEA9  41                 	db	65	;'A'
  1322  00FEAA  48                 	db	72	;'H'
  1323  00FEAB  20                 	db	32
  1324  00FEAC  20                 	db	32
  1325  00FEAD  20                 	db	32
  1326  00FEAE  25                 	db	37
  1327  00FEAF  33                 	db	51	;'3'
  1328  00FEB0  2E                 	db	46
  1329  00FEB1  32                 	db	50	;'2'
  1330  00FEB2  66                 	db	102	;'f'
  1331  00FEB3  20                 	db	32
  1332  00FEB4  20                 	db	32
  1333  00FEB5  20                 	db	32
  1334  00FEB6  20                 	db	32
  1335  00FEB7  00                 	db	0
  1336  00FEB8                     STR_12:
  1337                           
  1338                           ; BSR set to: 57
  1339  00FEB8  50                 	db	80	;'P'
  1340  00FEB9  56                 	db	86	;'V'
  1341  00FEBA  20                 	db	32
  1342  00FEBB  20                 	db	32
  1343  00FEBC  20                 	db	32
  1344  00FEBD  50                 	db	80	;'P'
  1345  00FEBE  57                 	db	87	;'W'
  1346  00FEBF  52                 	db	82	;'R'
  1347  00FEC0  20                 	db	32
  1348  00FEC1  25                 	db	37
  1349  00FEC2  33                 	db	51	;'3'
  1350  00FEC3  2E                 	db	46
  1351  00FEC4  32                 	db	50	;'2'
  1352  00FEC5  66                 	db	102	;'f'
  1353  00FEC6  20                 	db	32
  1354  00FEC7  20                 	db	32
  1355  00FEC8  20                 	db	32
  1356  00FEC9  20                 	db	32
  1357  00FECA  00                 	db	0
  1358  00FECB                     STR_18:
  1359                           
  1360                           ; BSR set to: 57
  1361  00FECB  42                 	db	66	;'B'
  1362  00FECC  41                 	db	65	;'A'
  1363  00FECD  54                 	db	84	;'T'
  1364  00FECE  20                 	db	32
  1365  00FECF  20                 	db	32
  1366  00FED0  50                 	db	80	;'P'
  1367  00FED1  57                 	db	87	;'W'
  1368  00FED2  52                 	db	82	;'R'
  1369  00FED3  20                 	db	32
  1370  00FED4  25                 	db	37
  1371  00FED5  33                 	db	51	;'3'
  1372  00FED6  2E                 	db	46
  1373  00FED7  32                 	db	50	;'2'
  1374  00FED8  66                 	db	102	;'f'
  1375  00FED9  20                 	db	32
  1376  00FEDA  20                 	db	32
  1377  00FEDB  20                 	db	32
  1378  00FEDC  20                 	db	32
  1379  00FEDD  00                 	db	0
  1380  00FEDE                     STR_14:
  1381                           
  1382                           ; BSR set to: 57
  1383  00FEDE  49                 	db	73	;'I'
  1384  00FEDF  4E                 	db	78	;'N'
  1385  00FEE0  56                 	db	86	;'V'
  1386  00FEE1  20                 	db	32
  1387  00FEE2  20                 	db	32
  1388  00FEE3  50                 	db	80	;'P'
  1389  00FEE4  57                 	db	87	;'W'
  1390  00FEE5  52                 	db	82	;'R'
  1391  00FEE6  20                 	db	32
  1392  00FEE7  25                 	db	37
  1393  00FEE8  33                 	db	51	;'3'
  1394  00FEE9  2E                 	db	46
  1395  00FEEA  32                 	db	50	;'2'
  1396  00FEEB  66                 	db	102	;'f'
  1397  00FEEC  20                 	db	32
  1398  00FEED  20                 	db	32
  1399  00FEEE  20                 	db	32
  1400  00FEEF  20                 	db	32
  1401  00FEF0  00                 	db	0
  1402  00FEF1                     STR_13:
  1403                           
  1404                           ; BSR set to: 57
  1405  00FEF1  4C                 	db	76	;'L'
  1406  00FEF2  4F                 	db	79	;'O'
  1407  00FEF3  41                 	db	65	;'A'
  1408  00FEF4  44                 	db	68	;'D'
  1409  00FEF5  20                 	db	32
  1410  00FEF6  50                 	db	80	;'P'
  1411  00FEF7  57                 	db	87	;'W'
  1412  00FEF8  52                 	db	82	;'R'
  1413  00FEF9  20                 	db	32
  1414  00FEFA  25                 	db	37
  1415  00FEFB  33                 	db	51	;'3'
  1416  00FEFC  2E                 	db	46
  1417  00FEFD  32                 	db	50	;'2'
  1418  00FEFE  66                 	db	102	;'f'
  1419  00FEFF  20                 	db	32
  1420  00FF00  20                 	db	32
  1421  00FF01  20                 	db	32
  1422  00FF02  20                 	db	32
  1423  00FF03  00                 	db	0
  1424  00FF04                     STR_16:
  1425                           
  1426                           ; BSR set to: 57
  1427  00FF04  42                 	db	66	;'B'
  1428  00FF05  56                 	db	86	;'V'
  1429  00FF06  20                 	db	32
  1430  00FF07  25                 	db	37
  1431  00FF08  32                 	db	50	;'2'
  1432  00FF09  2E                 	db	46
  1433  00FF0A  32                 	db	50	;'2'
  1434  00FF0B  66                 	db	102	;'f'
  1435  00FF0C  20                 	db	32
  1436  00FF0D  42                 	db	66	;'B'
  1437  00FF0E  41                 	db	65	;'A'
  1438  00FF0F  20                 	db	32
  1439  00FF10  25                 	db	37
  1440  00FF11  32                 	db	50	;'2'
  1441  00FF12  2E                 	db	46
  1442  00FF13  32                 	db	50	;'2'
  1443  00FF14  66                 	db	102	;'f'
  1444  00FF15  20                 	db	32
  1445  00FF16  00                 	db	0
  1446  00FF17                     STR_17:
  1447                           
  1448                           ; BSR set to: 57
  1449  00FF17  43                 	db	67	;'C'
  1450  00FF18  56                 	db	86	;'V'
  1451  00FF19  20                 	db	32
  1452  00FF1A  25                 	db	37
  1453  00FF1B  32                 	db	50	;'2'
  1454  00FF1C  2E                 	db	46
  1455  00FF1D  32                 	db	50	;'2'
  1456  00FF1E  66                 	db	102	;'f'
  1457  00FF1F  20                 	db	32
  1458  00FF20  4C                 	db	76	;'L'
  1459  00FF21  41                 	db	65	;'A'
  1460  00FF22  20                 	db	32
  1461  00FF23  25                 	db	37
  1462  00FF24  32                 	db	50	;'2'
  1463  00FF25  2E                 	db	46
  1464  00FF26  32                 	db	50	;'2'
  1465  00FF27  66                 	db	102	;'f'
  1466  00FF28  20                 	db	32
  1467  00FF29  00                 	db	0
  1468  00FF2A                     STR_15:
  1469                           
  1470                           ; BSR set to: 57
  1471  00FF2A  50                 	db	80	;'P'
  1472  00FF2B  56                 	db	86	;'V'
  1473  00FF2C  20                 	db	32
  1474  00FF2D  25                 	db	37
  1475  00FF2E  32                 	db	50	;'2'
  1476  00FF2F  2E                 	db	46
  1477  00FF30  32                 	db	50	;'2'
  1478  00FF31  66                 	db	102	;'f'
  1479  00FF32  20                 	db	32
  1480  00FF33  50                 	db	80	;'P'
  1481  00FF34  41                 	db	65	;'A'
  1482  00FF35  20                 	db	32
  1483  00FF36  25                 	db	37
  1484  00FF37  32                 	db	50	;'2'
  1485  00FF38  2E                 	db	46
  1486  00FF39  32                 	db	50	;'2'
  1487  00FF3A  66                 	db	102	;'f'
  1488  00FF3B  20                 	db	32
  1489  00FF3C  00                 	db	0
  1490  00FF3D                     STR_8:
  1491                           
  1492                           ; BSR set to: 57
  1493  00FF3D  20                 	db	32
  1494  00FF3E  56                 	db	86	;'V'
  1495  00FF3F  54                 	db	84	;'T'
  1496  00FF40  45                 	db	69	;'E'
  1497  00FF41  52                 	db	82	;'R'
  1498  00FF42  4D                 	db	77	;'M'
  1499  00FF43  20                 	db	32
  1500  00FF44  23                 	db	35
  1501  00FF45  32                 	db	50	;'2'
  1502  00FF46  20                 	db	32
  1503  00FF47  20                 	db	32
  1504  00FF48  20                 	db	32
  1505  00FF49  20                 	db	32
  1506  00FF4A  20                 	db	32
  1507  00FF4B  20                 	db	32
  1508  00FF4C  20                 	db	32
  1509  00FF4D  00                 	db	0
  1510  00FF4E                     STR_4:
  1511                           
  1512                           ; BSR set to: 57
  1513  00FF4E  20                 	db	32
  1514  00FF4F  4E                 	db	78	;'N'
  1515  00FF50  53                 	db	83	;'S'
  1516  00FF51  41                 	db	65	;'A'
  1517  00FF52  53                 	db	83	;'S'
  1518  00FF53  50                 	db	80	;'P'
  1519  00FF54  4F                 	db	79	;'O'
  1520  00FF55  4F                 	db	79	;'O'
  1521  00FF56  4B                 	db	75	;'K'
  1522  00FF57  20                 	db	32
  1523  00FF58  20                 	db	32
  1524  00FF59  20                 	db	32
  1525  00FF5A  20                 	db	32
  1526  00FF5B  20                 	db	32
  1527  00FF5C  20                 	db	32
  1528  00FF5D  20                 	db	32
  1529  00FF5E  00                 	db	0
  1530  00FF5F                     STR_1:
  1531                           
  1532                           ; BSR set to: 57
  1533  00FF5F  20                 	db	32
  1534  00FF60  4D                 	db	77	;'M'
  1535  00FF61  42                 	db	66	;'B'
  1536  00FF62  4D                 	db	77	;'M'
  1537  00FF63  43                 	db	67	;'C'
  1538  00FF64  20                 	db	32
  1539  00FF65  53                 	db	83	;'S'
  1540  00FF66  4F                 	db	79	;'O'
  1541  00FF67  4C                 	db	76	;'L'
  1542  00FF68  41                 	db	65	;'A'
  1543  00FF69  52                 	db	82	;'R'
  1544  00FF6A  4D                 	db	77	;'M'
  1545  00FF6B  4F                 	db	79	;'O'
  1546  00FF6C  4E                 	db	78	;'N'
  1547  00FF6D  20                 	db	32
  1548  00FF6E  20                 	db	32
  1549  00FF6F  00                 	db	0
  1550  00FF70                     STR_5:
  1551                           
  1552                           ; BSR set to: 57
  1553  00FF70  20                 	db	32
  1554  00FF71  53                 	db	83	;'S'
  1555  00FF72  45                 	db	69	;'E'
  1556  00FF73  51                 	db	81	;'Q'
  1557  00FF74  55                 	db	85	;'U'
  1558  00FF75  45                 	db	69	;'E'
  1559  00FF76  4E                 	db	78	;'N'
  1560  00FF77  43                 	db	67	;'C'
  1561  00FF78  45                 	db	69	;'E'
  1562  00FF79  20                 	db	32
  1563  00FF7A  54                 	db	84	;'T'
  1564  00FF7B  45                 	db	69	;'E'
  1565  00FF7C  53                 	db	83	;'S'
  1566  00FF7D  54                 	db	84	;'T'
  1567  00FF7E  20                 	db	32
  1568  00FF7F  20                 	db	32
  1569  00FF80  00                 	db	0
  1570  00FF81                     STR_11:
  1571                           
  1572                           ; BSR set to: 57
  1573  00FF81  25                 	db	37
  1574  00FF82  64                 	db	100	;'d'
  1575  00FF83  20                 	db	32
  1576  00FF84  25                 	db	37
  1577  00FF85  32                 	db	50	;'2'
  1578  00FF86  2E                 	db	46
  1579  00FF87  34                 	db	52	;'4'
  1580  00FF88  66                 	db	102	;'f'
  1581  00FF89  2C                 	db	44
  1582  00FF8A  20                 	db	32
  1583  00FF8B  25                 	db	37
  1584  00FF8C  64                 	db	100	;'d'
  1585  00FF8D  20                 	db	32
  1586  00FF8E  20                 	db	32
  1587  00FF8F  20                 	db	32
  1588  00FF90  23                 	db	35
  1589  00FF91  00                 	db	0
  1590  00FF92                     STR_9:
  1591                           
  1592                           ; BSR set to: 57
  1593  00FF92  25                 	db	37
  1594  00FF93  64                 	db	100	;'d'
  1595  00FF94  20                 	db	32
  1596  00FF95  25                 	db	37
  1597  00FF96  32                 	db	50	;'2'
  1598  00FF97  2E                 	db	46
  1599  00FF98  34                 	db	52	;'4'
  1600  00FF99  66                 	db	102	;'f'
  1601  00FF9A  20                 	db	32
  1602  00FF9B  20                 	db	32
  1603  00FF9C  20                 	db	32
  1604  00FF9D  25                 	db	37
  1605  00FF9E  64                 	db	100	;'d'
  1606  00FF9F  20                 	db	32
  1607  00FFA0  20                 	db	32
  1608  00FFA1  00                 	db	0
  1609  00FFA2                     STR_33:
  1610                           
  1611                           ; BSR set to: 57
  1612  00FFA2  76                 	db	118	;'v'
  1613  00FFA3  74                 	db	116	;'t'
  1614  00FFA4  65                 	db	101	;'e'
  1615  00FFA5  72                 	db	114	;'r'
  1616  00FFA6  6D                 	db	109	;'m'
  1617  00FFA7  20                 	db	32
  1618  00FFA8  25                 	db	37
  1619  00FFA9  78                 	db	120	;'x'
  1620  00FFAA  3A                 	db	58	;':'
  1621  00FFAB  25                 	db	37
  1622  00FFAC  78                 	db	120	;'x'
  1623  00FFAD  20                 	db	32
  1624  00FFAE  20                 	db	32
  1625  00FFAF  20                 	db	32
  1626  00FFB0  00                 	db	0
  1627  00FFB1                     STR_2:
  1628                           
  1629                           ; BSR set to: 57
  1630  00FFB1  20                 	db	32
  1631  00FFB2  56                 	db	86	;'V'
  1632  00FFB3  65                 	db	101	;'e'
  1633  00FFB4  72                 	db	114	;'r'
  1634  00FFB5  73                 	db	115	;'s'
  1635  00FFB6  69                 	db	105	;'i'
  1636  00FFB7  6F                 	db	111	;'o'
  1637  00FFB8  6E                 	db	110	;'n'
  1638  00FFB9  20                 	db	32
  1639  00FFBA  25                 	db	37
  1640  00FFBB  73                 	db	115	;'s'
  1641  00FFBC  20                 	db	32
  1642  00FFBD  20                 	db	32
  1643  00FFBE  20                 	db	32
  1644  00FFBF  00                 	db	0
  1645  00FFC0                     STR_27:
  1646                           
  1647                           ; BSR set to: 57
  1648  00FFC0  44                 	db	68	;'D'
  1649  00FFC1  65                 	db	101	;'e'
  1650  00FFC2  63                 	db	99	;'c'
  1651  00FFC3  20                 	db	32
  1652  00FFC4  20                 	db	32
  1653  00FFC5  34                 	db	52	;'4'
  1654  00FFC6  20                 	db	32
  1655  00FFC7  32                 	db	50	;'2'
  1656  00FFC8  30                 	db	48	;'0'
  1657  00FFC9  31                 	db	49	;'1'
  1658  00FFCA  39                 	db	57	;'9'
  1659  00FFCB  00                 	db	0
  1660  00FFCC                     STR_31:
  1661                           
  1662                           ; BSR set to: 57
  1663  00FFCC  25                 	db	37
  1664  00FFCD  73                 	db	115	;'s'
  1665  00FFCE  20                 	db	32
  1666  00FFCF  20                 	db	32
  1667  00FFD0  20                 	db	32
  1668  00FFD1  20                 	db	32
  1669  00FFD2  20                 	db	32
  1670  00FFD3  20                 	db	32
  1671  00FFD4  20                 	db	32
  1672  00FFD5  00                 	db	0
  1673  00FFD6                     STR_28:
  1674                           
  1675                           ; BSR set to: 57
  1676  00FFD6  31                 	db	49	;'1'
  1677  00FFD7  37                 	db	55	;'7'
  1678  00FFD8  3A                 	db	58	;':'
  1679  00FFD9  34                 	db	52	;'4'
  1680  00FFDA  31                 	db	49	;'1'
  1681  00FFDB  3A                 	db	58	;':'
  1682  00FFDC  31                 	db	49	;'1'
  1683  00FFDD  35                 	db	53	;'5'
  1684  00FFDE  00                 	db	0
  1685  00FFDF                     STR_3:
  1686                           
  1687                           ; BSR set to: 57
  1688  00FFDF  30                 	db	48	;'0'
  1689  00FFE0  2E                 	db	46
  1690  00FFE1  39                 	db	57	;'9'
  1691  00FFE2  39                 	db	57	;'9'
  1692  00FFE3  37                 	db	55	;'7'
  1693  00FFE4  00                 	db	0
  1694  00FFE5                     STR_46:
  1695                           
  1696                           ; BSR set to: 57
  1697  00FFE5  49                 	db	73	;'I'
  1698  00FFE6  4E                 	db	78	;'N'
  1699  00FFE7  46                 	db	70	;'F'
  1700  00FFE8  00                 	db	0
  1701  00FFE9                     STR_50:
  1702                           
  1703                           ; BSR set to: 57
  1704  00FFE9  4E                 	db	78	;'N'
  1705  00FFEA  41                 	db	65	;'A'
  1706  00FFEB  4E                 	db	78	;'N'
  1707  00FFEC  00                 	db	0
  1708  00FFED                     STR_47:
  1709                           
  1710                           ; BSR set to: 57
  1711  00FFED  69                 	db	105	;'i'
  1712  00FFEE  6E                 	db	110	;'n'
  1713  00FFEF  66                 	db	102	;'f'
  1714  00FFF0  00                 	db	0
  1715  00FFF1                     STR_51:
  1716                           
  1717                           ; BSR set to: 57
  1718  00FFF1  6E                 	db	110	;'n'
  1719  00FFF2  61                 	db	97	;'a'
  1720  00FFF3  6E                 	db	110	;'n'
  1721  00FFF4  00                 	db	0
  1722  00FFF5                     STR_54:
  1723                           
  1724                           ; BSR set to: 57
  1725  00FFF5  6C                 	db	108	;'l'
  1726  00FFF6  66                 	db	102	;'f'
  1727  00FFF7  00                 	db	0
  1728  00FFF8                     STR_25:
  1729                           
  1730                           ; BSR set to: 57
  1731  00FFF8  25                 	db	37
  1732  00FFF9  63                 	db	99	;'c'
  1733  00FFFA  00                 	db	0
  1734  00FFFB                     STR_24:
  1735                           
  1736                           ; BSR set to: 57
  1737  00FFFB  25                 	db	37
  1738  00FFFC  73                 	db	115	;'s'
  1739  00FFFD  00                 	db	0
  1740  0000                     
  1741                           ; #config settings
  1742  00FFFE  00                 	db	0	; dummy byte at the end
  1743  0000                     
  1744                           	psect	cinit
  1745  0171B2                     __pcinit:
  1746                           	opt callstack 0
  1747  0171B2                     start_initialization:
  1748                           	opt callstack 0
  1749  0171B2                     __initialization:
  1750                           	opt callstack 0
  1751                           
  1752                           ; Initialize objects allocated to BANK2 (188 bytes)
  1753                           ; load TBLPTR registers with __pidataBANK2
  1754  0171B2  0EFE               	movlw	low __pidataBANK2
  1755  0171B4  6EF6               	movwf	tblptrl,c
  1756  0171B6  0E75               	movlw	high __pidataBANK2
  1757  0171B8  6EF7               	movwf	tblptrh,c
  1758  0171BA  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  1759  0171BC  6EF8               	movwf	tblptru,c
  1760  0171BE  EE00  F200         	lfsr	0,__pdataBANK2
  1761  0171C2  EE20 F0BC          	lfsr	2,188
  1762  0171C6                     copy_data0:
  1763  0171C6  0009               	tblrd		*+
  1764  0171C8  006F FFD7 FFEE     	movff	tablat,postinc0
  1765  0171CE  50DD               	movf	postdec2,w,c
  1766  0171D0  50D9               	movf	fsr2l,w,c
  1767  0171D2  E1F9               	bnz	copy_data0
  1768                           
  1769                           ; Initialize objects allocated to BANK1 (177 bytes)
  1770                           ; load TBLPTR registers with __pidataBANK1
  1771  0171D4  0E72               	movlw	low __pidataBANK1
  1772  0171D6  6EF6               	movwf	tblptrl,c
  1773  0171D8  0E77               	movlw	high __pidataBANK1
  1774  0171DA  6EF7               	movwf	tblptrh,c
  1775  0171DC  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1776  0171DE  6EF8               	movwf	tblptru,c
  1777  0171E0  EE00  F100         	lfsr	0,__pdataBANK1
  1778  0171E4  EE20 F0B1          	lfsr	2,177
  1779  0171E8                     copy_data1:
  1780  0171E8  0009               	tblrd		*+
  1781  0171EA  006F FFD7 FFEE     	movff	tablat,postinc0
  1782  0171F0  50DD               	movf	postdec2,w,c
  1783  0171F2  50D9               	movf	fsr2l,w,c
  1784  0171F4  E1F9               	bnz	copy_data1
  1785                           
  1786                           ; Initialize objects allocated to BANK0 (54 bytes)
  1787                           ; load TBLPTR registers with __pidataBANK0
  1788  0171F6  0EDE               	movlw	low __pidataBANK0
  1789  0171F8  6EF6               	movwf	tblptrl,c
  1790  0171FA  0E88               	movlw	high __pidataBANK0
  1791  0171FC  6EF7               	movwf	tblptrh,c
  1792  0171FE  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1793  017200  6EF8               	movwf	tblptru,c
  1794  017202  EE00  F0C3         	lfsr	0,__pdataBANK0
  1795  017206  EE20 F036          	lfsr	2,54
  1796  01720A                     copy_data2:
  1797  01720A  0009               	tblrd		*+
  1798  01720C  006F FFD7 FFEE     	movff	tablat,postinc0
  1799  017212  50DD               	movf	postdec2,w,c
  1800  017214  50D9               	movf	fsr2l,w,c
  1801  017216  E1F9               	bnz	copy_data2
  1802                           
  1803                           ; Clear objects allocated to BIGRAM (290 bytes)
  1804  017218  EE01  F2FF         	lfsr	0,__pbssBIGRAM
  1805  01721C  EE20 F122          	lfsr	2,290
  1806  017220                     clear_0:
  1807  017220  6AEE               	clrf	postinc0,c
  1808  017222  50DD               	movf	postdec2,w,c
  1809  017224  50D9               	movf	fsr2l,w,c
  1810  017226  E1FC               	bnz	clear_0
  1811  017228  50DA               	movf	fsr2h,w,c
  1812  01722A  E1FA               	bnz	clear_0
  1813                           
  1814                           ; Clear objects allocated to BANK6 (255 bytes)
  1815  01722C  EE01  F200         	lfsr	0,__pbssBANK6
  1816  017230  EE20 F0FF          	lfsr	2,255
  1817  017234                     clear_1:
  1818  017234  6AEE               	clrf	postinc0,c
  1819  017236  50DD               	movf	postdec2,w,c
  1820  017238  50D9               	movf	fsr2l,w,c
  1821  01723A  E1FC               	bnz	clear_1
  1822  01723C  50DA               	movf	fsr2h,w,c
  1823  01723E  E1FA               	bnz	clear_1
  1824                           
  1825                           ; Clear objects allocated to BANK5 (255 bytes)
  1826  017240  EE01  F100         	lfsr	0,__pbssBANK5
  1827  017244  EE20 F0FF          	lfsr	2,255
  1828  017248                     clear_2:
  1829  017248  6AEE               	clrf	postinc0,c
  1830  01724A  50DD               	movf	postdec2,w,c
  1831  01724C  50D9               	movf	fsr2l,w,c
  1832  01724E  E1FC               	bnz	clear_2
  1833  017250  50DA               	movf	fsr2h,w,c
  1834  017252  E1FA               	bnz	clear_2
  1835                           
  1836                           ; Clear objects allocated to BANK4 (134 bytes)
  1837  017254  EE01  F000         	lfsr	0,__pbssBANK4
  1838  017258  0E86               	movlw	134
  1839  01725A                     clear_3:
  1840  01725A  6AEE               	clrf	postinc0,c
  1841  01725C  06E8               	decf	wreg,f,c
  1842  01725E  E1FD               	bnz	clear_3
  1843                           
  1844                           ; Clear objects allocated to BANK3 (228 bytes)
  1845  017260  EE00  F300         	lfsr	0,__pbssBANK3
  1846  017264  0EE4               	movlw	228
  1847  017266                     clear_4:
  1848  017266  6AEE               	clrf	postinc0,c
  1849  017268  06E8               	decf	wreg,f,c
  1850  01726A  E1FD               	bnz	clear_4
  1851                           
  1852                           ; Clear objects allocated to BANK2 (64 bytes)
  1853  01726C  EE00  F2BC         	lfsr	0,__pbssBANK2
  1854  017270  0E40               	movlw	64
  1855  017272                     clear_5:
  1856  017272  6AEE               	clrf	postinc0,c
  1857  017274  06E8               	decf	wreg,f,c
  1858  017276  E1FD               	bnz	clear_5
  1859                           
  1860                           ; Clear objects allocated to BANK1 (32 bytes)
  1861  017278  EE00  F1B1         	lfsr	0,__pbssBANK1
  1862  01727C  0E20               	movlw	32
  1863  01727E                     clear_6:
  1864  01727E  6AEE               	clrf	postinc0,c
  1865  017280  06E8               	decf	wreg,f,c
  1866  017282  E1FD               	bnz	clear_6
  1867                           
  1868                           ; Clear objects allocated to BANK0 (99 bytes)
  1869  017284  EE00  F060         	lfsr	0,__pbssBANK0
  1870  017288  0E63               	movlw	99
  1871  01728A                     clear_7:
  1872  01728A  6AEE               	clrf	postinc0,c
  1873  01728C  06E8               	decf	wreg,f,c
  1874  01728E  E1FD               	bnz	clear_7
  1875                           
  1876                           ; Clear objects allocated to COMRAM (36 bytes)
  1877  017290  EE00  F001         	lfsr	0,__pbssCOMRAM
  1878  017294  0E24               	movlw	36
  1879  017296                     clear_8:
  1880  017296  6AEE               	clrf	postinc0,c
  1881  017298  06E8               	decf	wreg,f,c
  1882  01729A  E1FD               	bnz	clear_8
  1883                           
  1884                           ;
  1885                           ; Setup IVTBASE
  1886                           ;
  1887  01729C  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1888  01729E  6ED5               	movwf	213,c
  1889  0172A0  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1890  0172A2  6ED6               	movwf	214,c
  1891  0172A4  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1892  0172A6  6ED7               	movwf	215,c
  1893  0172A8                     end_of_initialization:
  1894                           	opt callstack 0
  1895  0172A8                     __end_of__initialization:
  1896                           	opt callstack 0
  1897  0172A8  0100               	movlb	0
  1898  0172AA  EFC1  F08E         	goto	_main	;jump to C main() function
  1899                           
  1900                           	psect	bssCOMRAM
  1901  000001                     __pbssCOMRAM:
  1902                           	opt callstack 0
  1903  000001                     _UART2_RxInterruptHandler:
  1904                           	opt callstack 0
  1905  000001                     	ds	3
  1906  000004                     _INT1_InterruptHandler:
  1907                           	opt callstack 0
  1908  000004                     	ds	3
  1909  000007                     _INT0_InterruptHandler:
  1910                           	opt callstack 0
  1911  000007                     	ds	3
  1912  00000A                     _width:
  1913                           	opt callstack 0
  1914  00000A                     	ds	2
  1915  00000C                     _prec:
  1916                           	opt callstack 0
  1917  00000C                     	ds	2
  1918  00000E                     _flags:
  1919                           	opt callstack 0
  1920  00000E                     	ds	2
  1921  000010                     TMR3_ISR@CountCallBack:
  1922                           	opt callstack 0
  1923  000010                     	ds	2
  1924  000012                     _timer3ReloadVal:
  1925                           	opt callstack 0
  1926  000012                     	ds	2
  1927  000014                     TMR5_ISR@CountCallBack:
  1928                           	opt callstack 0
  1929  000014                     	ds	2
  1930  000016                     _timer5ReloadVal:
  1931                           	opt callstack 0
  1932  000016                     	ds	2
  1933  000018                     _mode_sw:
  1934                           	opt callstack 0
  1935  000018                     	ds	1
  1936  000019                     _uart2RxCount:
  1937                           	opt callstack 0
  1938  000019                     	ds	1
  1939  00001A                     _uart2RxTail:
  1940                           	opt callstack 0
  1941  00001A                     	ds	1
  1942  00001B                     _uart2RxHead:
  1943                           	opt callstack 0
  1944  00001B                     	ds	1
  1945  00001C                     _uart2TxBufferRemaining:
  1946                           	opt callstack 0
  1947  00001C                     	ds	1
  1948  00001D                     _uart2TxTail:
  1949                           	opt callstack 0
  1950  00001D                     	ds	1
  1951  00001E                     _uart2TxHead:
  1952                           	opt callstack 0
  1953  00001E                     	ds	1
  1954  00001F                     _uart1RxCount:
  1955                           	opt callstack 0
  1956  00001F                     	ds	1
  1957  000020                     _uart1RxTail:
  1958                           	opt callstack 0
  1959  000020                     	ds	1
  1960  000021                     _uart1RxHead:
  1961                           	opt callstack 0
  1962  000021                     	ds	1
  1963  000022                     _uart1TxBufferRemaining:
  1964                           	opt callstack 0
  1965  000022                     	ds	1
  1966  000023                     _uart1TxTail:
  1967                           	opt callstack 0
  1968  000023                     	ds	1
  1969  000024                     _uart1TxHead:
  1970                           	opt callstack 0
  1971  000024                     	ds	1
  1972                           
  1973                           	psect	bssBANK0
  1974  000060                     __pbssBANK0:
  1975                           	opt callstack 0
  1976  000060                     _S:
  1977                           	opt callstack 0
  1978  000060                     	ds	41
  1979  000089                     _spi_link:
  1980                           	opt callstack 0
  1981  000089                     	ds	12
  1982  000095                     floorf@F524:
  1983                           	opt callstack 0
  1984  000095                     	ds	4
  1985  000099                     ___fpclassifyf@F463:
  1986                           	opt callstack 0
  1987  000099                     	ds	4
  1988  00009D                     _utctime:
  1989                           	opt callstack 0
  1990  00009D                     	ds	4
  1991  0000A1                     wdtdelay@dcount:
  1992                           	opt callstack 0
  1993  0000A1                     	ds	4
  1994  0000A5                     _P:
  1995                           	opt callstack 0
  1996  0000A5                     	ds	4
  1997  0000A9                     _TMR3_InterruptHandler:
  1998                           	opt callstack 0
  1999  0000A9                     	ds	3
  2000  0000AC                     _TMR5_InterruptHandler:
  2001                           	opt callstack 0
  2002  0000AC                     	ds	3
  2003  0000AF                     _TMR6_InterruptHandler:
  2004                           	opt callstack 0
  2005  0000AF                     	ds	3
  2006  0000B2                     _ADCC_ADTI_InterruptHandler:
  2007                           	opt callstack 0
  2008  0000B2                     	ds	3
  2009  0000B5                     _ADCC_ADI_InterruptHandler:
  2010                           	opt callstack 0
  2011  0000B5                     	ds	3
  2012  0000B8                     _UART1_TxInterruptHandler:
  2013                           	opt callstack 0
  2014  0000B8                     	ds	3
  2015  0000BB                     _UART1_RxInterruptHandler:
  2016                           	opt callstack 0
  2017  0000BB                     	ds	3
  2018  0000BE                     _UART2_TxInterruptHandler:
  2019                           	opt callstack 0
  2020  0000BE                     	ds	3
  2021  0000C1                     _nout:
  2022                           	opt callstack 0
  2023  0000C1                     	ds	2
  2024                           
  2025                           	psect	dataBANK0
  2026  0000C3                     __pdataBANK0:
  2027                           	opt callstack 0
  2028  0000C3                     _R:
  2029                           	opt callstack 0
  2030  0000C3                     	ds	40
  2031  0000EB                     stoa@F1166:
  2032                           	opt callstack 0
  2033  0000EB                     	ds	7
  2034  0000F2                     _H:
  2035                           	opt callstack 0
  2036  0000F2                     	ds	7
  2037                           
  2038                           	psect	bssBANK1
  2039  0001B1                     __pbssBANK1:
  2040                           	opt callstack 0
  2041  0001B1                     _tickCount:
  2042                           	opt callstack 0
  2043  0001B1                     	ds	24
  2044  0001C9                     _seed:
  2045                           	opt callstack 0
  2046  0001C9                     	ds	8
  2047                           
  2048                           	psect	dataBANK1
  2049  000100                     __pdataBANK1:
  2050                           	opt callstack 0
  2051  000100                     _C:
  2052                           	opt callstack 0
  2053  000100                     	ds	161
  2054  0001A1                     _port_data:
  2055                           	opt callstack 0
  2056  0001A1                     	ds	16
  2057                           
  2058                           	psect	bssBANK2
  2059  0002BC                     __pbssBANK2:
  2060                           	opt callstack 0
  2061  0002BC                     _uart1TxBuffer:
  2062                           	opt callstack 0
  2063  0002BC                     	ds	64
  2064                           
  2065                           	psect	dataBANK2
  2066  000200                     __pdataBANK2:
  2067                           	opt callstack 0
  2068  000200                     _V:
  2069                           	opt callstack 0
  2070  000200                     	ds	188
  2071                           
  2072                           	psect	bssBANK3
  2073  000300                     __pbssBANK3:
  2074                           	opt callstack 0
  2075  000300                     lp_filter@smooth:
  2076                           	opt callstack 0
  2077  000300                     	ds	84
  2078  000354                     _uart2TxBuffer:
  2079                           	opt callstack 0
  2080  000354                     	ds	64
  2081  000394                     _dbuf:
  2082                           	opt callstack 0
  2083  000394                     	ds	80
  2084                           
  2085                           	psect	bssBANK4
  2086  000400                     __pbssBANK4:
  2087                           	opt callstack 0
  2088  000400                     _ring_buf2:
  2089                           	opt callstack 0
  2090  000400                     	ds	67
  2091  000443                     _ring_buf1:
  2092                           	opt callstack 0
  2093  000443                     	ds	67
  2094                           
  2095                           	psect	bssBANK5
  2096  000500                     __pbssBANK5:
  2097                           	opt callstack 0
  2098  000500                     _uart1RxBuffer:
  2099                           	opt callstack 0
  2100  000500                     	ds	255
  2101                           
  2102                           	psect	bssBANK6
  2103  000600                     __pbssBANK6:
  2104                           	opt callstack 0
  2105  000600                     _uart2RxBuffer:
  2106                           	opt callstack 0
  2107  000600                     	ds	255
  2108                           
  2109                           	psect	bssBIGRAM
  2110  0006FF                     __pbssBIGRAM:
  2111                           	opt callstack 0
  2112  0006FF                     _D:
  2113                           	opt callstack 0
  2114  0006FF                     	ds	290
  2115                           
  2116                           	psect	cstackBANK1
  2117  0001D1                     __pcstackBANK1:
  2118                           	opt callstack 0
  2119  0001D1                     ??_TMR3_ISR:
  2120                           
  2121                           ; 1 bytes @ 0x0
  2122  0001D1                     	ds	13
  2123                           
  2124                           	psect	cstackCOMRAM
  2125  000045                     __pcstackCOMRAM:
  2126                           	opt callstack 0
  2127  000045                     ??_ADCC_ThresholdISR:
  2128  000045                     
  2129                           ; 1 bytes @ 0x0
  2130  000045                     	ds	5
  2131  00004A                     ??_TMR6_ISR:
  2132                           
  2133                           ; 1 bytes @ 0x5
  2134  00004A                     	ds	1
  2135  00004B                     ??_INT1_ISR:
  2136  00004B                     
  2137                           ; 1 bytes @ 0x6
  2138  00004B                     	ds	4
  2139  00004F                     ??_TMR5_ISR:
  2140                           
  2141                           ; 1 bytes @ 0xA
  2142  00004F                     	ds	4
  2143                           
  2144 ;;
  2145 ;;Main: autosize = 5, tempsize = 0, incstack = 0, save=0
  2146 ;;
  2147 ;; *************** function _main *****************
  2148 ;; Defined at:
  2149 ;;		line 171 in file "main.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;		None
  2152 ;; Auto vars:     Size  Location     Type
  2153 ;;  k               1  [STACK] unsigned char 
  2154 ;;  j               1  [STACK] unsigned char 
  2155 ;;  i               1  [STACK] unsigned char 
  2156 ;;  inp_index       1  [STACK] unsigned char 
  2157 ;;  mode            1  [STACK] enum E17022
  2158 ;; Return value:  Size  Location     Type
  2159 ;;                  1  [STACK] void 
  2160 ;; Registers used:
  2161 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  2162 ;; Tracked objects:
  2163 ;;		On entry : 0/0
  2164 ;;		On exit  : 0/0
  2165 ;;		Unchanged: 0/0
  2166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2171 ;;Total ram usage:        0 bytes
  2172 ;; Hardware stack levels required when called:   20
  2173 ;; This function calls:
  2174 ;;		_SYSTEM_Initialize
  2175 ;;		_StartTimer
  2176 ;;		_TimerDone
  2177 ;;		_WaitMs
  2178 ;;		_calc_model_data
  2179 ;;		_check_adc_scan
  2180 ;;		_check_enter_button
  2181 ;;		_check_help
  2182 ;;		_clear_adc_scan
  2183 ;;		_clear_hid_pflags
  2184 ;;		_convert_adc_data
  2185 ;;		_eaDogM_WriteCommand
  2186 ;;		_get_raw_result
  2187 ;;		_get_switch
  2188 ;;		_get_vterm_ptr
  2189 ;;		_hid_display
  2190 ;;		_init_bsoc
  2191 ;;		_init_display
  2192 ;;		_lp_filter
  2193 ;;		_mode_lamp_dim
  2194 ;;		_set_display_info
  2195 ;;		_set_vterm
  2196 ;;		_sprintf
  2197 ;;		_srand
  2198 ;;		_start_adc_scan
  2199 ;;		_start_switch_handler
  2200 ;;		_static_soc
  2201 ;;		_update_lcd
  2202 ;; This function is called by:
  2203 ;;		Startup code after reset
  2204 ;; This function uses a reentrant model
  2205 ;;
  2206                           
  2207                           	psect	text0
  2208  011D82                     __ptext0:
  2209                           	opt callstack 0
  2210  011D82                     _main:
  2211                           	opt callstack 0
  2212                           
  2213                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2214  011D82  0E05               	movlw	5
  2215  011D84  26E1               	addwf	fsr1l,f,c
  2216  011D86  0E00               	movlw	0
  2217  011D88  22E2               	addwfc	fsr1h,f,c
  2218                           
  2219                           ;main.c: 173:  UI_STATES mode;;main.c: 174:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC;
  2220                           ;stkvar	_inp_index @ sp[(-5)+3]
  2221                           
  2222                           ;incstack = 0
  2223  011D8A  0EFE               	movlw	-2
  2224  011D8C  6AE3               	clrf	plusw1,c
  2225                           
  2226                           ;stkvar	_i @ sp[(-5)+2]
  2227  011D8E  0EFD               	movlw	-3
  2228  011D90  6AE3               	clrf	plusw1,c
  2229                           
  2230                           ;stkvar	_j @ sp[(-5)+1]
  2231  011D92  0EFC               	movlw	-4
  2232  011D94  6AE3               	clrf	plusw1,c
  2233  011D96  2AE3               	incf	plusw1,f,c
  2234                           
  2235                           ;stkvar	_k @ sp[(-5)+0]
  2236  011D98  0EFB               	movlw	-5
  2237  011D9A  6AE3               	clrf	plusw1,c
  2238  011D9C  82E3               	bsf	plusw1,1,c
  2239                           
  2240                           ;main.c: 177:  SYSTEM_Initialize();
  2241  011D9E  EC9C  F0C2         	call	_SYSTEM_Initialize	;wreg free
  2242                           
  2243                           ; BSR set to: 60
  2244                           ;main.c: 180:  (INTCON0bits.GIEH = 1);
  2245  011DA2  8ED2               	bsf	210,7,c	;volatile
  2246                           
  2247                           ; BSR set to: 60
  2248                           ;main.c: 183:  (INTCON0bits.GIEL = 1);
  2249  011DA4  8CD2               	bsf	210,6,c	;volatile
  2250                           
  2251                           ; BSR set to: 60
  2252                           ;main.c: 185:  V.ui_state = UI_STATE_INIT;
  2253  011DA6  0102               	movlb	2	; () banked
  2254  011DA8  6B00               	clrf	_V& (0+255),b	;volatile
  2255                           
  2256                           ; BSR set to: 2
  2257                           ;main.c: 190:  WaitMs(300);
  2258  011DAA  0E2C               	movlw	44
  2259  011DAC  6EE6               	movwf	postinc1,c
  2260  011DAE  0E01               	movlw	1
  2261  011DB0  6EE6               	movwf	postinc1,c
  2262  011DB2  EC8A  F0C4         	call	_WaitMs	;wreg free
  2263                           
  2264                           ;main.c: 191:  if (PORTBbits.RB0) {
  2265  011DB6  A0CB               	btfss	203,0,c	;volatile
  2266  011DB8  D004               	goto	l11022
  2267                           
  2268                           ;main.c: 192:   mode = UI_STATE_HOST;
  2269                           ;stkvar	_mode @ sp[(-5)+4]
  2270  011DBA  0EFF               	movlw	-1
  2271  011DBC  6AE3               	clrf	plusw1,c
  2272  011DBE  2AE3               	incf	plusw1,f,c
  2273                           
  2274                           ;main.c: 193:  } else {
  2275  011DC0  D004               	goto	l11024
  2276  011DC2                     l11022:
  2277                           
  2278                           ;main.c: 194:   mode = UI_STATE_LOG;
  2279                           ;stkvar	_mode @ sp[(-5)+4]
  2280  011DC2  0EFF               	movlw	-1
  2281  011DC4  6AE3               	clrf	plusw1,c
  2282  011DC6  80E3               	bsf	plusw1,0,c
  2283  011DC8  82E3               	bsf	plusw1,1,c	;indir
  2284  011DCA                     l11024:
  2285                           
  2286                           ;main.c: 197:  if (mode == UI_STATE_HOST) {
  2287                           ;stkvar	_mode @ sp[(-5)+4]
  2288  011DCA  0EFF               	movlw	-1
  2289  011DCC  04E3               	decf	plusw1,w,c
  2290  011DCE  A4D8               	btfss	status,2,c
  2291  011DD0  D007               	goto	l1338
  2292                           
  2293                           ;main.c: 198:   do { LATDbits.LATD0 = 1; } while(0);
  2294  011DD2  80BD               	bsf	189,0,c	;volatile
  2295                           
  2296                           ;main.c: 199:   V.mode_pwm = 70;
  2297  011DD4  0E00               	movlw	0
  2298  011DD6  0102               	movlb	2	; () banked
  2299  011DD8  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  2300  011DDA  0E46               	movlw	70
  2301  011DDC  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  2302                           
  2303                           ;main.c: 200:  } else {
  2304  011DDE  D004               	goto	l11028
  2305  011DE0                     l1338:
  2306  011DE0  90BD               	bcf	189,0,c	;volatile
  2307                           
  2308                           ;main.c: 202:   V.mode_pwm = 0;
  2309  011DE2  0102               	movlb	2	; () banked
  2310  011DE4  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  2311  011DE6  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  2312  011DE8                     l11028:
  2313                           
  2314                           ; BSR set to: 2
  2315                           ;main.c: 204:  mode_lamp_dim(V.mode_pwm);
  2316  011DE8  0060  FA57  FFE6   	movff	_V+149,postinc1
  2317  011DEE  0060  FA5B  FFE6   	movff	_V+150,postinc1
  2318  011DF4  EC65  F0C8         	call	_mode_lamp_dim	;wreg free
  2319  011DF8  D0D4               	goto	l11076
  2320  011DFA                     l11030:
  2321                           
  2322                           ; BSR set to: 2
  2323                           ;main.c: 215:    init_display();
  2324  011DFA  EC57  F0B9         	call	_init_display	;wreg free
  2325                           
  2326                           ; BSR set to: 61
  2327                           ;main.c: 216:    eaDogM_WriteCommand(0b00001100);
  2328  011DFE  0E0C               	movlw	12
  2329  011E00  6EE6               	movwf	postinc1,c
  2330  011E02  ECC2  F0C8         	call	_eaDogM_WriteCommand	;wreg free
  2331                           
  2332                           ; BSR set to: 0
  2333                           ;main.c: 218:    V.ui_state = mode;
  2334                           ;stkvar	_mode @ sp[(-5)+4]
  2335  011E06  0EFF               	movlw	-1
  2336  011E08  006F FF8C  F200    	movff	plusw1,_V	;volatile
  2337                           
  2338                           ; BSR set to: 0
  2339                           ;main.c: 219:    srand(1957);
  2340  011E0E  0EA5               	movlw	165
  2341  011E10  6EE6               	movwf	postinc1,c
  2342  011E12  0E07               	movlw	7
  2343  011E14  6EE6               	movwf	postinc1,c
  2344  011E16  ECDA  F0C4         	call	_srand	;wreg free
  2345                           
  2346                           ; BSR set to: 1
  2347                           ;main.c: 220:    set_vterm(0);
  2348  011E1A  0E00               	movlw	0
  2349  011E1C  6EE6               	movwf	postinc1,c
  2350  011E1E  EC01  F0C8         	call	_set_vterm	;wreg free
  2351                           
  2352                           ;main.c: 221:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  2353  011E22  0E5F               	movlw	low STR_1
  2354  011E24  6EE6               	movwf	postinc1,c
  2355  011E26  0EFF               	movlw	high STR_1
  2356  011E28  6EE6               	movwf	postinc1,c
  2357  011E2A  0E00               	movlw	0
  2358  011E2C  6EE6               	movwf	postinc1,c
  2359  011E2E  0E00               	movlw	0
  2360  011E30  6EE6               	movwf	postinc1,c
  2361  011E32  EC56  F0C5         	call	_get_vterm_ptr	;wreg free
  2362  011E36  0060  F097  FFE6   	movff	btemp,postinc1
  2363  011E3C  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2364  011E42  0E04               	movlw	4
  2365  011E44  6EE6               	movwf	postinc1,c
  2366  011E46  ECD3  F0B7         	call	_sprintf	;wreg free
  2367                           
  2368                           ; BSR set to: 0
  2369                           ;main.c: 222:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.997");
  2370  011E4A  0EDF               	movlw	low STR_3
  2371  011E4C  6EE6               	movwf	postinc1,c
  2372  011E4E  0EFF               	movlw	high STR_3
  2373  011E50  6EE6               	movwf	postinc1,c
  2374  011E52  0EB1               	movlw	low STR_2
  2375  011E54  6EE6               	movwf	postinc1,c
  2376  011E56  0EFF               	movlw	high STR_2
  2377  011E58  6EE6               	movwf	postinc1,c
  2378  011E5A  0E00               	movlw	0
  2379  011E5C  6EE6               	movwf	postinc1,c
  2380  011E5E  0E01               	movlw	1
  2381  011E60  6EE6               	movwf	postinc1,c
  2382  011E62  EC56  F0C5         	call	_get_vterm_ptr	;wreg free
  2383  011E66  0060  F097  FFE6   	movff	btemp,postinc1
  2384  011E6C  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2385  011E72  0E06               	movlw	6
  2386  011E74  6EE6               	movwf	postinc1,c
  2387  011E76  ECD3  F0B7         	call	_sprintf	;wreg free
  2388                           
  2389                           ; BSR set to: 0
  2390                           ;main.c: 223:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  2391  011E7A  0E4E               	movlw	low STR_4
  2392  011E7C  6EE6               	movwf	postinc1,c
  2393  011E7E  0EFF               	movlw	high STR_4
  2394  011E80  6EE6               	movwf	postinc1,c
  2395  011E82  0E00               	movlw	0
  2396  011E84  6EE6               	movwf	postinc1,c
  2397  011E86  0E02               	movlw	2
  2398  011E88  6EE6               	movwf	postinc1,c
  2399  011E8A  EC56  F0C5         	call	_get_vterm_ptr	;wreg free
  2400  011E8E  0060  F097  FFE6   	movff	btemp,postinc1
  2401  011E94  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2402  011E9A  0E04               	movlw	4
  2403  011E9C  6EE6               	movwf	postinc1,c
  2404  011E9E  ECD3  F0B7         	call	_sprintf	;wreg free
  2405                           
  2406                           ; BSR set to: 0
  2407                           ;main.c: 224:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  2408  011EA2  0E70               	movlw	low STR_5
  2409  011EA4  6EE6               	movwf	postinc1,c
  2410  011EA6  0EFF               	movlw	high STR_5
  2411  011EA8  6EE6               	movwf	postinc1,c
  2412  011EAA  0E02               	movlw	2
  2413  011EAC  6EE6               	movwf	postinc1,c
  2414  011EAE  0E00               	movlw	0
  2415  011EB0  6EE6               	movwf	postinc1,c
  2416  011EB2  EC56  F0C5         	call	_get_vterm_ptr	;wreg free
  2417  011EB6  0060  F097  FFE6   	movff	btemp,postinc1
  2418  011EBC  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2419  011EC2  0E04               	movlw	4
  2420  011EC4  6EE6               	movwf	postinc1,c
  2421  011EC6  ECD3  F0B7         	call	_sprintf	;wreg free
  2422                           
  2423                           ; BSR set to: 0
  2424                           ;main.c: 225:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.997");
  2425  011ECA  0EDF               	movlw	low STR_3
  2426  011ECC  6EE6               	movwf	postinc1,c
  2427  011ECE  0EFF               	movlw	high STR_3
  2428  011ED0  6EE6               	movwf	postinc1,c
  2429  011ED2  0EB1               	movlw	low STR_2
  2430  011ED4  6EE6               	movwf	postinc1,c
  2431  011ED6  0EFF               	movlw	high STR_2
  2432  011ED8  6EE6               	movwf	postinc1,c
  2433  011EDA  0E02               	movlw	2
  2434  011EDC  6EE6               	movwf	postinc1,c
  2435  011EDE  0E01               	movlw	1
  2436  011EE0  6EE6               	movwf	postinc1,c
  2437  011EE2  EC56  F0C5         	call	_get_vterm_ptr	;wreg free
  2438  011EE6  0060  F097  FFE6   	movff	btemp,postinc1
  2439  011EEC  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2440  011EF2  0E06               	movlw	6
  2441  011EF4  6EE6               	movwf	postinc1,c
  2442  011EF6  ECD3  F0B7         	call	_sprintf	;wreg free
  2443                           
  2444                           ; BSR set to: 0
  2445                           ;main.c: 226:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  2446  011EFA  0E3D               	movlw	low STR_8
  2447  011EFC  6EE6               	movwf	postinc1,c
  2448  011EFE  0EFF               	movlw	high STR_8
  2449  011F00  6EE6               	movwf	postinc1,c
  2450  011F02  0E02               	movlw	2
  2451  011F04  6EE6               	movwf	postinc1,c
  2452  011F06  0E02               	movlw	2
  2453  011F08  6EE6               	movwf	postinc1,c
  2454  011F0A  EC56  F0C5         	call	_get_vterm_ptr	;wreg free
  2455  011F0E  0060  F097  FFE6   	movff	btemp,postinc1
  2456  011F14  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2457  011F1A  0E04               	movlw	4
  2458  011F1C  6EE6               	movwf	postinc1,c
  2459  011F1E  ECD3  F0B7         	call	_sprintf	;wreg free
  2460                           
  2461                           ; BSR set to: 0
  2462                           ;main.c: 227:    update_lcd(0);
  2463  011F22  0E00               	movlw	0
  2464  011F24  6EE6               	movwf	postinc1,c
  2465  011F26  EC4B  F0B7         	call	_update_lcd	;wreg free
  2466                           
  2467                           ;main.c: 228:    WaitMs(3000);
  2468  011F2A  0EB8               	movlw	184
  2469  011F2C  6EE6               	movwf	postinc1,c
  2470  011F2E  0E0B               	movlw	11
  2471  011F30  6EE6               	movwf	postinc1,c
  2472  011F32  EC8A  F0C4         	call	_WaitMs	;wreg free
  2473                           
  2474                           ;main.c: 229:    StartTimer(TMR_DISPLAY, 250);
  2475  011F36  0EFA               	movlw	250
  2476  011F38  6EE6               	movwf	postinc1,c
  2477  011F3A  0E00               	movlw	0
  2478  011F3C  6EE6               	movwf	postinc1,c
  2479  011F3E  0E0A               	movlw	10
  2480  011F40  6EE6               	movwf	postinc1,c
  2481  011F42  ECB4  F0C3         	call	_StartTimer	;wreg free
  2482                           
  2483                           ;main.c: 230:    StartTimer(TMR_ADC, 200);
  2484  011F46  0EC8               	movlw	200
  2485  011F48  6EE6               	movwf	postinc1,c
  2486  011F4A  0E00               	movlw	0
  2487  011F4C  6EE6               	movwf	postinc1,c
  2488  011F4E  0E01               	movlw	1
  2489  011F50  6EE6               	movwf	postinc1,c
  2490  011F52  ECB4  F0C3         	call	_StartTimer	;wreg free
  2491                           
  2492                           ;main.c: 231:    StartTimer(TMR_INFO, 3000);
  2493  011F56  0EB8               	movlw	184
  2494  011F58  6EE6               	movwf	postinc1,c
  2495  011F5A  0E0B               	movlw	11
  2496  011F5C  6EE6               	movwf	postinc1,c
  2497  011F5E  0E07               	movlw	7
  2498  011F60  6EE6               	movwf	postinc1,c
  2499  011F62  ECB4  F0C3         	call	_StartTimer	;wreg free
  2500                           
  2501                           ;main.c: 232:    StartTimer(TMR_FLIPPER, 1500);
  2502  011F66  0EDC               	movlw	220
  2503  011F68  6EE6               	movwf	postinc1,c
  2504  011F6A  0E05               	movlw	5
  2505  011F6C  6EE6               	movwf	postinc1,c
  2506  011F6E  0E0B               	movlw	11
  2507  011F70  6EE6               	movwf	postinc1,c
  2508  011F72  ECB4  F0C3         	call	_StartTimer	;wreg free
  2509                           
  2510                           ;main.c: 233:    StartTimer(TMR_HELPDIS, 3000);
  2511  011F76  0EB8               	movlw	184
  2512  011F78  6EE6               	movwf	postinc1,c
  2513  011F7A  0E0B               	movlw	11
  2514  011F7C  6EE6               	movwf	postinc1,c
  2515  011F7E  0E09               	movlw	9
  2516  011F80  6EE6               	movwf	postinc1,c
  2517  011F82  ECB4  F0C3         	call	_StartTimer	;wreg free
  2518                           
  2519                           ;main.c: 235:    start_adc_scan();
  2520  011F86  ECA7  F0C0         	call	_start_adc_scan	;wreg free
  2521                           
  2522                           ;main.c: 236:    start_switch_handler();
  2523  011F8A  ECD3  F0C7         	call	_start_switch_handler	;wreg free
  2524                           
  2525                           ; BSR set to: 57
  2526                           ;main.c: 237:    static_soc();
  2527  011F8E  ECC0  F0C4         	call	_static_soc	;wreg free
  2528                           
  2529                           ; BSR set to: 1
  2530                           ;main.c: 238:    init_bsoc();
  2531  011F92  ECB1  F0C8         	call	_init_bsoc	;wreg free
  2532                           
  2533                           ;main.c: 240:    break;
  2534  011F96  D01C               	goto	l11078
  2535  011F98                     l1346:
  2536                           
  2537                           ; BSR set to: 2
  2538                           ;main.c: 246:    P.SYSTEM_STABLE = 1;
  2539  011F98  0100               	movlb	0	; () banked
  2540  011F9A  81A6               	bsf	(_P+1)& (0+255),0,b	;volatile
  2541                           
  2542                           ;main.c: 247:    break;
  2543  011F9C  D019               	goto	l11078
  2544  011F9E                     l1348:
  2545                           
  2546                           ; BSR set to: 2
  2547                           ;main.c: 250:    V.ui_state = UI_STATE_INIT;
  2548  011F9E  6B00               	clrf	_V& (0+255),b	;volatile
  2549                           
  2550                           ;main.c: 251:    break;
  2551  011FA0  D017               	goto	l11078
  2552  011FA2                     l11076:
  2553  011FA2  0102               	movlb	2	; () banked
  2554  011FA4  5100               	movf	_V& (0+255),w,b	;volatile
  2555  011FA6  6E2F               	movwf	(btemp+10)^0,c
  2556  011FA8  6A30               	clrf	(btemp+11)^0,c
  2557                           
  2558                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2559                           ; Switch size 1, requested type "simple"
  2560                           ; Number of cases is 1, Range of values is 0 to 0
  2561                           ; switch strategies available:
  2562                           ; Name         Instructions Cycles
  2563                           ; simple_byte            4     3 (average)
  2564                           ;	Chosen strategy is simple_byte
  2565  011FAA  5030               	movf	(btemp+11)^0,w,c
  2566  011FAC  0A00               	xorlw	0	; case 0
  2567  011FAE  A4D8               	btfss	status,2,c
  2568  011FB0  D7F6               	goto	l1348
  2569                           
  2570                           ; BSR set to: 2
  2571                           ; Switch size 1, requested type "simple"
  2572                           ; Number of cases is 5, Range of values is 0 to 5
  2573                           ; switch strategies available:
  2574                           ; Name         Instructions Cycles
  2575                           ; simple_byte           16     9 (average)
  2576                           ;	Chosen strategy is simple_byte
  2577  011FB2  502F               	movf	(btemp+10)^0,w,c
  2578  011FB4  0A00               	xorlw	0	; case 0
  2579  011FB6  B4D8               	btfsc	status,2,c
  2580  011FB8  D720               	goto	l11030
  2581  011FBA  0A01               	xorlw	1	; case 1
  2582  011FBC  B4D8               	btfsc	status,2,c
  2583  011FBE  D008               	goto	l11078
  2584  011FC0  0A02               	xorlw	2	; case 3
  2585  011FC2  B4D8               	btfsc	status,2,c
  2586  011FC4  D005               	goto	l11078
  2587  011FC6  0A07               	xorlw	7	; case 4
  2588  011FC8  B4D8               	btfsc	status,2,c
  2589  011FCA  D7E6               	goto	l1346
  2590  011FCC  0A01               	xorlw	1	; case 5
  2591  011FCE  D7E7               	goto	l1348
  2592  011FD0                     l11078:
  2593                           
  2594                           ;main.c: 254:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  2595  011FD0  0E01               	movlw	1
  2596  011FD2  6EE6               	movwf	postinc1,c
  2597  011FD4  EC15  F0C6         	call	_TimerDone	;wreg free
  2598  011FD8  5025               	movf	btemp^0,w,c
  2599  011FDA  B4D8               	btfsc	status,2,c
  2600  011FDC  D013               	goto	l11090
  2601  011FDE  EC01  F0C9         	call	_check_adc_scan	;wreg free
  2602  011FE2  5025               	movf	btemp^0,w,c
  2603  011FE4  B4D8               	btfsc	status,2,c
  2604  011FE6  D00E               	goto	l11090
  2605                           
  2606                           ;main.c: 258:    convert_adc_data();
  2607  011FE8  EC5D  F0BB         	call	_convert_adc_data	;wreg free
  2608                           
  2609                           ;main.c: 262:    clear_adc_scan();
  2610  011FEC  EC09  F0C9         	call	_clear_adc_scan	;wreg free
  2611                           
  2612                           ; BSR set to: 0
  2613                           ;main.c: 263:    start_adc_scan();
  2614  011FF0  ECA7  F0C0         	call	_start_adc_scan	;wreg free
  2615                           
  2616                           ;main.c: 264:    StartTimer(TMR_ADC, 200);
  2617  011FF4  0EC8               	movlw	200
  2618  011FF6  6EE6               	movwf	postinc1,c
  2619  011FF8  0E00               	movlw	0
  2620  011FFA  6EE6               	movwf	postinc1,c
  2621  011FFC  0E01               	movlw	1
  2622  011FFE  6EE6               	movwf	postinc1,c
  2623  012000  ECB4  F0C3         	call	_StartTimer	;wreg free
  2624  012004                     l11090:
  2625                           
  2626                           ;main.c: 271:   if (TimerDone(TMR_DISPLAY)) {
  2627                           
  2628                           ;main.c: 267:   if (V.ticks) {
  2629  012004  0E0A               	movlw	10
  2630  012006  6EE6               	movwf	postinc1,c
  2631  012008  EC15  F0C6         	call	_TimerDone	;wreg free
  2632  01200C  5025               	movf	btemp^0,w,c
  2633  01200E  B4D8               	btfsc	status,2,c
  2634  012010  D273               	goto	l11132
  2635                           
  2636                           ;main.c: 272:    if (TimerDone(TMR_HELPDIS)) {
  2637  012012  0E09               	movlw	9
  2638  012014  6EE6               	movwf	postinc1,c
  2639  012016  EC15  F0C6         	call	_TimerDone	;wreg free
  2640  01201A  5025               	movf	btemp^0,w,c
  2641  01201C  B4D8               	btfsc	status,2,c
  2642  01201E  D004               	goto	l11098
  2643                           
  2644                           ;main.c: 273:     set_display_info(DIS_STR);
  2645  012020  0E00               	movlw	0
  2646  012022  6EE6               	movwf	postinc1,c
  2647  012024  EC10  F0C8         	call	_set_display_info	;wreg free
  2648  012028                     l11098:
  2649                           
  2650                           ;main.c: 275:    calc_model_data();
  2651  012028  EC57  F0A7         	call	_calc_model_data	;wreg free
  2652                           
  2653                           ; BSR set to: 1
  2654                           ;main.c: 282:     hid_display(&H);
  2655                           
  2656                           ;main.c: 277:    if (0) {
  2657  01202C  0EF2               	movlw	_H& (0+255)
  2658  01202E  6EE6               	movwf	postinc1,c
  2659  012030  EC58  F0B8         	call	_hid_display	;wreg free
  2660                           
  2661                           ;main.c: 283:     switch (H.hid_display) {
  2662  012034  D23C               	goto	l11124
  2663  012036                     l1356:
  2664                           
  2665                           ; BSR set to: 0
  2666                           ;main.c: 285:      V.calib = 0;
  2667  012036  0102               	movlb	2	; () banked
  2668  012038  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  2669                           
  2670                           ; BSR set to: 2
  2671                           ;main.c: 286:      sprintf(get_vterm_ptr(0, 0), "PV   PWR %3.2f    ", C.p_pv);
  2672  01203A  0060  F5C3  FFE6   	movff	_C+112,postinc1
  2673  012040  0060  F5C7  FFE6   	movff	_C+113,postinc1
  2674  012046  0060  F5CB  FFE6   	movff	_C+114,postinc1
  2675  01204C  0060  F5CF  FFE6   	movff	_C+115,postinc1
  2676  012052  0EB8               	movlw	low STR_12
  2677  012054  6EE6               	movwf	postinc1,c
  2678  012056  0EFE               	movlw	high STR_12
  2679  012058  6EE6               	movwf	postinc1,c
  2680  01205A  0E00               	movlw	0
  2681  01205C  6EE6               	movwf	postinc1,c
  2682  01205E  0E00               	movlw	0
  2683  012060  6EE6               	movwf	postinc1,c
  2684  012062  EC56  F0C5         	call	_get_vterm_ptr	;wreg free
  2685  012066  0060  F097  FFE6   	movff	btemp,postinc1
  2686  01206C  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2687  012072  0E08               	movlw	8
  2688  012074  6EE6               	movwf	postinc1,c
  2689  012076  ECD3  F0B7         	call	_sprintf	;wreg free
  2690                           
  2691                           ;main.c: 287:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  2692  01207A  0060  F5A3  FFE6   	movff	_C+104,postinc1
  2693  012080  0060  F5A7  FFE6   	movff	_C+105,postinc1
  2694  012086  0060  F5AB  FFE6   	movff	_C+106,postinc1
  2695  01208C  0060  F5AF  FFE6   	movff	_C+107,postinc1
  2696  012092  0EF1               	movlw	low STR_13
  2697  012094  6EE6               	movwf	postinc1,c
  2698  012096  0EFE               	movlw	high STR_13
  2699  012098  6EE6               	movwf	postinc1,c
  2700  01209A  0E00               	movlw	0
  2701  01209C  6EE6               	movwf	postinc1,c
  2702  01209E  0E01               	movlw	1
  2703  0120A0  6EE6               	movwf	postinc1,c
  2704  0120A2  EC56  F0C5         	call	_get_vterm_ptr	;wreg free
  2705  0120A6  0060  F097  FFE6   	movff	btemp,postinc1
  2706  0120AC  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2707  0120B2  0E08               	movlw	8
  2708  0120B4  6EE6               	movwf	postinc1,c
  2709  0120B6  ECD3  F0B7         	call	_sprintf	;wreg free
  2710                           
  2711                           ;main.c: 288:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  2712  0120BA  0060  F5B3  FFE6   	movff	_C+108,postinc1
  2713  0120C0  0060  F5B7  FFE6   	movff	_C+109,postinc1
  2714  0120C6  0060  F5BB  FFE6   	movff	_C+110,postinc1
  2715  0120CC  0060  F5BF  FFE6   	movff	_C+111,postinc1
  2716  0120D2  0EDE               	movlw	low STR_14
  2717  0120D4  6EE6               	movwf	postinc1,c
  2718  0120D6  0EFE               	movlw	high STR_14
  2719  0120D8  6EE6               	movwf	postinc1,c
  2720  0120DA  0E00               	movlw	0
  2721  0120DC  6EE6               	movwf	postinc1,c
  2722  0120DE  0E02               	movlw	2
  2723  0120E0  6EE6               	movwf	postinc1,c
  2724  0120E2  EC56  F0C5         	call	_get_vterm_ptr	;wreg free
  2725  0120E6  0060  F097  FFE6   	movff	btemp,postinc1
  2726  0120EC  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2727  0120F2  0E08               	movlw	8
  2728  0120F4  6EE6               	movwf	postinc1,c
  2729  0120F6  ECD3  F0B7         	call	_sprintf	;wreg free
  2730                           
  2731                           ;main.c: 289:      break;
  2732  0120FA  D1EE               	goto	l11126
  2733  0120FC                     l1358:
  2734                           
  2735                           ; BSR set to: 0
  2736                           ;main.c: 291:      V.calib = 0;
  2737  0120FC  0102               	movlb	2	; () banked
  2738  0120FE  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  2739                           
  2740                           ; BSR set to: 2
  2741                           ;main.c: 292:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.ca
      +                          lc[C_PV]);
  2742  012100  0060  F413  FFE6   	movff	_C+4,postinc1
  2743  012106  0060  F417  FFE6   	movff	_C+5,postinc1
  2744  01210C  0060  F41B  FFE6   	movff	_C+6,postinc1
  2745  012112  0060  F41F  FFE6   	movff	_C+7,postinc1
  2746  012118  0060  F453  FFE6   	movff	_C+20,postinc1
  2747  01211E  0060  F457  FFE6   	movff	_C+21,postinc1
  2748  012124  0060  F45B  FFE6   	movff	_C+22,postinc1
  2749  01212A  0060  F45F  FFE6   	movff	_C+23,postinc1
  2750  012130  0E2A               	movlw	low STR_15
  2751  012132  6EE6               	movwf	postinc1,c
  2752  012134  0EFF               	movlw	high STR_15
  2753  012136  6EE6               	movwf	postinc1,c
  2754  012138  0E00               	movlw	0
  2755  01213A  6EE6               	movwf	postinc1,c
  2756  01213C  0E00               	movlw	0
  2757  01213E  6EE6               	movwf	postinc1,c
  2758  012140  EC56  F0C5         	call	_get_vterm_ptr	;wreg free
  2759  012144  0060  F097  FFE6   	movff	btemp,postinc1
  2760  01214A  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2761  012150  0E0C               	movlw	12
  2762  012152  6EE6               	movwf	postinc1,c
  2763  012154  ECD3  F0B7         	call	_sprintf	;wreg free
  2764                           
  2765                           ;main.c: 293:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.c
      +                          alc[C_BATT]);
  2766  012158  0060  F403  FFE6   	movff	_C,postinc1
  2767  01215E  0060  F407  FFE6   	movff	_C+1,postinc1
  2768  012164  0060  F40B  FFE6   	movff	_C+2,postinc1
  2769  01216A  0060  F40F  FFE6   	movff	_C+3,postinc1
  2770  012170  0060  F443  FFE6   	movff	_C+16,postinc1
  2771  012176  0060  F447  FFE6   	movff	_C+17,postinc1
  2772  01217C  0060  F44B  FFE6   	movff	_C+18,postinc1
  2773  012182  0060  F44F  FFE6   	movff	_C+19,postinc1
  2774  012188  0E04               	movlw	low STR_16
  2775  01218A  6EE6               	movwf	postinc1,c
  2776  01218C  0EFF               	movlw	high STR_16
  2777  01218E  6EE6               	movwf	postinc1,c
  2778  012190  0E00               	movlw	0
  2779  012192  6EE6               	movwf	postinc1,c
  2780  012194  0E01               	movlw	1
  2781  012196  6EE6               	movwf	postinc1,c
  2782  012198  EC56  F0C5         	call	_get_vterm_ptr	;wreg free
  2783  01219C  0060  F097  FFE6   	movff	btemp,postinc1
  2784  0121A2  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2785  0121A8  0E0C               	movlw	12
  2786  0121AA  6EE6               	movwf	postinc1,c
  2787  0121AC  ECD3  F0B7         	call	_sprintf	;wreg free
  2788                           
  2789                           ;main.c: 294:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_
      +                          load);
  2790  0121B0  0060  F503  FFE6   	movff	_C+64,postinc1
  2791  0121B6  0060  F507  FFE6   	movff	_C+65,postinc1
  2792  0121BC  0060  F50B  FFE6   	movff	_C+66,postinc1
  2793  0121C2  0060  F50F  FFE6   	movff	_C+67,postinc1
  2794  0121C8  0060  F423  FFE6   	movff	_C+8,postinc1
  2795  0121CE  0060  F427  FFE6   	movff	_C+9,postinc1
  2796  0121D4  0060  F42B  FFE6   	movff	_C+10,postinc1
  2797  0121DA  0060  F42F  FFE6   	movff	_C+11,postinc1
  2798  0121E0  0E17               	movlw	low STR_17
  2799  0121E2  6EE6               	movwf	postinc1,c
  2800  0121E4  0EFF               	movlw	high STR_17
  2801  0121E6  6EE6               	movwf	postinc1,c
  2802  0121E8  0E00               	movlw	0
  2803  0121EA  6EE6               	movwf	postinc1,c
  2804  0121EC  0E02               	movlw	2
  2805  0121EE  6EE6               	movwf	postinc1,c
  2806  0121F0  EC56  F0C5         	call	_get_vterm_ptr	;wreg free
  2807  0121F4  0060  F097  FFE6   	movff	btemp,postinc1
  2808  0121FA  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2809  012200  0E0C               	movlw	12
  2810  012202  6EE6               	movwf	postinc1,c
  2811  012204  ECD3  F0B7         	call	_sprintf	;wreg free
  2812                           
  2813                           ;main.c: 295:      break;
  2814  012208  D167               	goto	l11126
  2815  01220A                     l1359:
  2816                           
  2817                           ; BSR set to: 0
  2818                           ;main.c: 297:      V.calib = 0;
  2819  01220A  0102               	movlb	2	; () banked
  2820  01220C  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  2821                           
  2822                           ; BSR set to: 2
  2823                           ;main.c: 298:      sprintf(get_vterm_ptr(0, 0), "BAT  PWR %3.2f    ", C.p_bat);
  2824  01220E  0060  F5D3  FFE6   	movff	_C+116,postinc1
  2825  012214  0060  F5D7  FFE6   	movff	_C+117,postinc1
  2826  01221A  0060  F5DB  FFE6   	movff	_C+118,postinc1
  2827  012220  0060  F5DF  FFE6   	movff	_C+119,postinc1
  2828  012226  0ECB               	movlw	low STR_18
  2829  012228  6EE6               	movwf	postinc1,c
  2830  01222A  0EFE               	movlw	high STR_18
  2831  01222C  6EE6               	movwf	postinc1,c
  2832  01222E  0E00               	movlw	0
  2833  012230  6EE6               	movwf	postinc1,c
  2834  012232  0E00               	movlw	0
  2835  012234  6EE6               	movwf	postinc1,c
  2836  012236  EC56  F0C5         	call	_get_vterm_ptr	;wreg free
  2837  01223A  0060  F097  FFE6   	movff	btemp,postinc1
  2838  012240  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2839  012246  0E08               	movlw	8
  2840  012248  6EE6               	movwf	postinc1,c
  2841  01224A  ECD3  F0B7         	call	_sprintf	;wreg free
  2842                           
  2843                           ;main.c: 299:      sprintf(get_vterm_ptr(1, 0), "BAT AH   %3.2f    ", C.dynamic_ah);
  2844  01224E  0060  F613  FFE6   	movff	_C+132,postinc1
  2845  012254  0060  F617  FFE6   	movff	_C+133,postinc1
  2846  01225A  0060  F61B  FFE6   	movff	_C+134,postinc1
  2847  012260  0060  F61F  FFE6   	movff	_C+135,postinc1
  2848  012266  0EA5               	movlw	low STR_19
  2849  012268  6EE6               	movwf	postinc1,c
  2850  01226A  0EFE               	movlw	high STR_19
  2851  01226C  6EE6               	movwf	postinc1,c
  2852  01226E  0E00               	movlw	0
  2853  012270  6EE6               	movwf	postinc1,c
  2854  012272  0E01               	movlw	1
  2855  012274  6EE6               	movwf	postinc1,c
  2856  012276  EC56  F0C5         	call	_get_vterm_ptr	;wreg free
  2857  01227A  0060  F097  FFE6   	movff	btemp,postinc1
  2858  012280  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2859  012286  0E08               	movlw	8
  2860  012288  6EE6               	movwf	postinc1,c
  2861  01228A  ECD3  F0B7         	call	_sprintf	;wreg free
  2862                           
  2863                           ;main.c: 300:      sprintf(get_vterm_ptr(2, 0), "SOC %d RUN %d     ", C.soc, C.runtime);
  2864  01228E  0060  F673  FFE6   	movff	_C+156,postinc1
  2865  012294  0060  F677  FFE6   	movff	_C+157,postinc1
  2866  01229A  0060  F67B  FFE6   	movff	_C+158,postinc1
  2867  0122A0  0060  F67F  FFE6   	movff	_C+159,postinc1
  2868  0122A6  0E92               	movlw	low STR_20
  2869  0122A8  6EE6               	movwf	postinc1,c
  2870  0122AA  0EFE               	movlw	high STR_20
  2871  0122AC  6EE6               	movwf	postinc1,c
  2872  0122AE  0E00               	movlw	0
  2873  0122B0  6EE6               	movwf	postinc1,c
  2874  0122B2  0E02               	movlw	2
  2875  0122B4  6EE6               	movwf	postinc1,c
  2876  0122B6  EC56  F0C5         	call	_get_vterm_ptr	;wreg free
  2877  0122BA  0060  F097  FFE6   	movff	btemp,postinc1
  2878  0122C0  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2879  0122C6  0E08               	movlw	8
  2880  0122C8  6EE6               	movwf	postinc1,c
  2881  0122CA  ECD3  F0B7         	call	_sprintf	;wreg free
  2882                           
  2883                           ;main.c: 301:      break;
  2884  0122CE  D104               	goto	l11126
  2885  0122D0                     l11110:
  2886                           
  2887                           ; BSR set to: 0
  2888                           ;main.c: 303:      if (!V.calib) {
  2889  0122D0  0102               	movlb	2	; () banked
  2890  0122D2  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  2891  0122D4  A4D8               	btfss	status,2,c
  2892  0122D6  D02D               	goto	l11114
  2893                           
  2894                           ; BSR set to: 2
  2895                           ;main.c: 304:       lp_filter(0.0, i, -1);
  2896  0122D8  0EFF               	movlw	255
  2897  0122DA  6EE6               	movwf	postinc1,c
  2898                           
  2899                           ;stkvar	_i @ sp[(-6)+2]
  2900  0122DC  0EFC               	movlw	-4
  2901  0122DE  50E3               	movf	plusw1,w,c
  2902  0122E0  6EE6               	movwf	postinc1,c
  2903  0122E2  0E00               	movlw	0
  2904  0122E4  6EE6               	movwf	postinc1,c
  2905  0122E6  0E00               	movlw	0
  2906  0122E8  6EE6               	movwf	postinc1,c
  2907  0122EA  0E00               	movlw	0
  2908  0122EC  6EE6               	movwf	postinc1,c
  2909  0122EE  0E00               	movlw	0
  2910  0122F0  6EE6               	movwf	postinc1,c
  2911  0122F2  ECAC  F0B0         	call	_lp_filter	;wreg free
  2912                           
  2913                           ;main.c: 305:       lp_filter(0.0, j, -1);
  2914  0122F6  0EFF               	movlw	255
  2915  0122F8  6EE6               	movwf	postinc1,c
  2916                           
  2917                           ;stkvar	_j @ sp[(-6)+1]
  2918  0122FA  0EFB               	movlw	-5
  2919  0122FC  50E3               	movf	plusw1,w,c
  2920  0122FE  6EE6               	movwf	postinc1,c
  2921  012300  0E00               	movlw	0
  2922  012302  6EE6               	movwf	postinc1,c
  2923  012304  0E00               	movlw	0
  2924  012306  6EE6               	movwf	postinc1,c
  2925  012308  0E00               	movlw	0
  2926  01230A  6EE6               	movwf	postinc1,c
  2927  01230C  0E00               	movlw	0
  2928  01230E  6EE6               	movwf	postinc1,c
  2929  012310  ECAC  F0B0         	call	_lp_filter	;wreg free
  2930                           
  2931                           ;main.c: 306:       lp_filter(0.0, k, -1);
  2932  012314  0EFF               	movlw	255
  2933  012316  6EE6               	movwf	postinc1,c
  2934                           
  2935                           ;stkvar	_k @ sp[(-6)+0]
  2936  012318  0EFA               	movlw	-6
  2937  01231A  50E3               	movf	plusw1,w,c
  2938  01231C  6EE6               	movwf	postinc1,c
  2939  01231E  0E00               	movlw	0
  2940  012320  6EE6               	movwf	postinc1,c
  2941  012322  0E00               	movlw	0
  2942  012324  6EE6               	movwf	postinc1,c
  2943  012326  0E00               	movlw	0
  2944  012328  6EE6               	movwf	postinc1,c
  2945  01232A  0E00               	movlw	0
  2946  01232C  6EE6               	movwf	postinc1,c
  2947  01232E  ECAC  F0B0         	call	_lp_filter	;wreg free
  2948  012332                     l11114:
  2949                           
  2950                           ;main.c: 308:      V.calib = 1;
  2951  012332  0E01               	movlw	1
  2952  012334  0102               	movlb	2	; () banked
  2953  012336  6FAB               	movwf	(_V+171)& (0+255),b	;volatile
  2954                           
  2955                           ; BSR set to: 2
  2956                           ;main.c: 309:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d  ", get_raw_result(i), C.
      +                          calc[i], get_switch(SSELECT));
  2957  012338  0E02               	movlw	2
  2958  01233A  6EE6               	movwf	postinc1,c
  2959  01233C  EC01  F0C6         	call	_get_switch	;wreg free
  2960  012340  5025               	movf	btemp^0,w,c
  2961  012342  6EE6               	movwf	postinc1,c
  2962  012344  0E00               	movlw	0
  2963  012346  6EE6               	movwf	postinc1,c
  2964                           
  2965                           ;stkvar	_i @ sp[(-7)+2]
  2966  012348  0EFB               	movlw	-5
  2967  01234A  50E3               	movf	plusw1,w,c
  2968  01234C  0D04               	mullw	4
  2969  01234E  0E00               	movlw	low _C
  2970  012350  24F3               	addwf	243,w,c
  2971  012352  6ED9               	movwf	fsr2l,c
  2972  012354  0E01               	movlw	high _C
  2973  012356  20F4               	addwfc	prodh,w,c
  2974  012358  6EDA               	movwf	fsr2h,c
  2975  01235A  006F FF7B FFE6     	movff	postinc2,postinc1
  2976  012360  006F FF7B FFE6     	movff	postinc2,postinc1
  2977  012366  006F FF7B FFE6     	movff	postinc2,postinc1
  2978  01236C  006F FF7B FFE6     	movff	postinc2,postinc1
  2979                           
  2980                           ;stkvar	_i @ sp[(-11)+2]
  2981  012372  0EF7               	movlw	-9
  2982  012374  50E3               	movf	plusw1,w,c
  2983  012376  6EE6               	movwf	postinc1,c
  2984  012378  ECF2  F0C7         	call	_get_raw_result	;wreg free
  2985  01237C  0060  F097  FFE6   	movff	btemp,postinc1
  2986  012382  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2987  012388  0E92               	movlw	low STR_9
  2988  01238A  6EE6               	movwf	postinc1,c
  2989  01238C  0EFF               	movlw	high STR_9
  2990  01238E  6EE6               	movwf	postinc1,c
  2991  012390  0E00               	movlw	0
  2992  012392  6EE6               	movwf	postinc1,c
  2993  012394  0E00               	movlw	0
  2994  012396  6EE6               	movwf	postinc1,c
  2995  012398  EC56  F0C5         	call	_get_vterm_ptr	;wreg free
  2996  01239C  0060  F097  FFE6   	movff	btemp,postinc1
  2997  0123A2  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2998  0123A8  0E0C               	movlw	12
  2999  0123AA  6EE6               	movwf	postinc1,c
  3000  0123AC  ECD3  F0B7         	call	_sprintf	;wreg free
  3001                           
  3002                           ; BSR set to: 0
  3003                           ;main.c: 310:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d  ", get_raw_result(j), C.
      +                          calc[j], get_switch(SENTER));
  3004  0123B0  0E03               	movlw	3
  3005  0123B2  6EE6               	movwf	postinc1,c
  3006  0123B4  EC01  F0C6         	call	_get_switch	;wreg free
  3007  0123B8  5025               	movf	btemp^0,w,c
  3008  0123BA  6EE6               	movwf	postinc1,c
  3009  0123BC  0E00               	movlw	0
  3010  0123BE  6EE6               	movwf	postinc1,c
  3011                           
  3012                           ;stkvar	_j @ sp[(-7)+1]
  3013  0123C0  0EFA               	movlw	-6
  3014  0123C2  50E3               	movf	plusw1,w,c
  3015  0123C4  0D04               	mullw	4
  3016  0123C6  0E00               	movlw	low _C
  3017  0123C8  24F3               	addwf	243,w,c
  3018  0123CA  6ED9               	movwf	fsr2l,c
  3019  0123CC  0E01               	movlw	high _C
  3020  0123CE  20F4               	addwfc	prodh,w,c
  3021  0123D0  6EDA               	movwf	fsr2h,c
  3022  0123D2  006F FF7B FFE6     	movff	postinc2,postinc1
  3023  0123D8  006F FF7B FFE6     	movff	postinc2,postinc1
  3024  0123DE  006F FF7B FFE6     	movff	postinc2,postinc1
  3025  0123E4  006F FF7B FFE6     	movff	postinc2,postinc1
  3026                           
  3027                           ;stkvar	_j @ sp[(-11)+1]
  3028  0123EA  0EF6               	movlw	-10
  3029  0123EC  50E3               	movf	plusw1,w,c
  3030  0123EE  6EE6               	movwf	postinc1,c
  3031  0123F0  ECF2  F0C7         	call	_get_raw_result	;wreg free
  3032  0123F4  0060  F097  FFE6   	movff	btemp,postinc1
  3033  0123FA  0060  F09B  FFE6   	movff	btemp+1,postinc1
  3034  012400  0E92               	movlw	low STR_9
  3035  012402  6EE6               	movwf	postinc1,c
  3036  012404  0EFF               	movlw	high STR_9
  3037  012406  6EE6               	movwf	postinc1,c
  3038  012408  0E00               	movlw	0
  3039  01240A  6EE6               	movwf	postinc1,c
  3040  01240C  0E01               	movlw	1
  3041  01240E  6EE6               	movwf	postinc1,c
  3042  012410  EC56  F0C5         	call	_get_vterm_ptr	;wreg free
  3043  012414  0060  F097  FFE6   	movff	btemp,postinc1
  3044  01241A  0060  F09B  FFE6   	movff	btemp+1,postinc1
  3045  012420  0E0C               	movlw	12
  3046  012422  6EE6               	movwf	postinc1,c
  3047  012424  ECD3  F0B7         	call	_sprintf	;wreg free
  3048                           
  3049                           ; BSR set to: 0
  3050                           ;main.c: 311:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(k), C
      +                          .calc[k], inp_index + 1);
  3051                           ;stkvar	_inp_index @ sp[(-5)+3]
  3052  012428  0EFE               	movlw	-2
  3053  01242A  50E3               	movf	plusw1,w,c
  3054  01242C  6E2F               	movwf	(btemp+10)^0,c
  3055  01242E  6A30               	clrf	(btemp+11)^0,c
  3056  012430  0E01               	movlw	1
  3057  012432  262F               	addwf	(btemp+10)^0,f,c
  3058  012434  0E00               	movlw	0
  3059  012436  2230               	addwfc	(btemp+11)^0,f,c
  3060  012438  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  3061  01243E  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  3062                           
  3063                           ;stkvar	_k @ sp[(-7)+0]
  3064  012444  0EF9               	movlw	-7
  3065  012446  50E3               	movf	plusw1,w,c
  3066  012448  0D04               	mullw	4
  3067  01244A  0E00               	movlw	low _C
  3068  01244C  24F3               	addwf	243,w,c
  3069  01244E  6ED9               	movwf	fsr2l,c
  3070  012450  0E01               	movlw	high _C
  3071  012452  20F4               	addwfc	prodh,w,c
  3072  012454  6EDA               	movwf	fsr2h,c
  3073  012456  006F FF7B FFE6     	movff	postinc2,postinc1
  3074  01245C  006F FF7B FFE6     	movff	postinc2,postinc1
  3075  012462  006F FF7B FFE6     	movff	postinc2,postinc1
  3076  012468  006F FF7B FFE6     	movff	postinc2,postinc1
  3077                           
  3078                           ;stkvar	_k @ sp[(-11)+0]
  3079  01246E  0EF5               	movlw	-11
  3080  012470  50E3               	movf	plusw1,w,c
  3081  012472  6EE6               	movwf	postinc1,c
  3082  012474  ECF2  F0C7         	call	_get_raw_result	;wreg free
  3083  012478  0060  F097  FFE6   	movff	btemp,postinc1
  3084  01247E  0060  F09B  FFE6   	movff	btemp+1,postinc1
  3085  012484  0E81               	movlw	low STR_11
  3086  012486  6EE6               	movwf	postinc1,c
  3087  012488  0EFF               	movlw	high STR_11
  3088  01248A  6EE6               	movwf	postinc1,c
  3089  01248C  0E00               	movlw	0
  3090  01248E  6EE6               	movwf	postinc1,c
  3091  012490  0E02               	movlw	2
  3092  012492  6EE6               	movwf	postinc1,c
  3093  012494  EC56  F0C5         	call	_get_vterm_ptr	;wreg free
  3094  012498  0060  F097  FFE6   	movff	btemp,postinc1
  3095  01249E  0060  F09B  FFE6   	movff	btemp+1,postinc1
  3096  0124A4  0E0C               	movlw	12
  3097  0124A6  6EE6               	movwf	postinc1,c
  3098  0124A8  ECD3  F0B7         	call	_sprintf	;wreg free
  3099                           
  3100                           ;main.c: 312:      break;
  3101  0124AC  D015               	goto	l11126
  3102  0124AE                     l11124:
  3103  0124AE  0100               	movlb	0	; () banked
  3104  0124B0  51F2               	movf	_H& (0+255),w,b
  3105  0124B2  6E2F               	movwf	(btemp+10)^0,c
  3106  0124B4  6A30               	clrf	(btemp+11)^0,c
  3107                           
  3108                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3109                           ; Switch size 1, requested type "simple"
  3110                           ; Number of cases is 1, Range of values is 0 to 0
  3111                           ; switch strategies available:
  3112                           ; Name         Instructions Cycles
  3113                           ; simple_byte            4     3 (average)
  3114                           ;	Chosen strategy is simple_byte
  3115  0124B6  5030               	movf	(btemp+11)^0,w,c
  3116  0124B8  0A00               	xorlw	0	; case 0
  3117  0124BA  A4D8               	btfss	status,2,c
  3118  0124BC  D00D               	goto	l11126
  3119                           
  3120                           ; BSR set to: 0
  3121                           ; Switch size 1, requested type "simple"
  3122                           ; Number of cases is 4, Range of values is 0 to 3
  3123                           ; switch strategies available:
  3124                           ; Name         Instructions Cycles
  3125                           ; simple_byte           13     7 (average)
  3126                           ;	Chosen strategy is simple_byte
  3127  0124BE  502F               	movf	(btemp+10)^0,w,c
  3128  0124C0  0A00               	xorlw	0	; case 0
  3129  0124C2  B4D8               	btfsc	status,2,c
  3130  0124C4  D61B               	goto	l1358
  3131  0124C6  0A01               	xorlw	1	; case 1
  3132  0124C8  B4D8               	btfsc	status,2,c
  3133  0124CA  D5B5               	goto	l1356
  3134  0124CC  0A03               	xorlw	3	; case 2
  3135  0124CE  B4D8               	btfsc	status,2,c
  3136  0124D0  D69C               	goto	l1359
  3137  0124D2  0A01               	xorlw	1	; case 3
  3138  0124D4  B4D8               	btfsc	status,2,c
  3139  0124D6  D6FC               	goto	l11110
  3140  0124D8                     l11126:
  3141                           
  3142                           ; BSR set to: 0
  3143                           ;main.c: 316:     clear_hid_pflags(&H);
  3144  0124D8  0EF2               	movlw	_H& (0+255)
  3145  0124DA  6EE6               	movwf	postinc1,c
  3146  0124DC  EC69  F0C7         	call	_clear_hid_pflags	;wreg free
  3147                           
  3148                           ;main.c: 318:    StartTimer(TMR_DISPLAY, 250);
  3149  0124E0  0EFA               	movlw	250
  3150  0124E2  6EE6               	movwf	postinc1,c
  3151  0124E4  0E00               	movlw	0
  3152  0124E6  6EE6               	movwf	postinc1,c
  3153  0124E8  0E0A               	movlw	10
  3154  0124EA  6EE6               	movwf	postinc1,c
  3155  0124EC  ECB4  F0C3         	call	_StartTimer	;wreg free
  3156                           
  3157                           ;main.c: 319:    update_lcd(0);
  3158  0124F0  0E00               	movlw	0
  3159  0124F2  6EE6               	movwf	postinc1,c
  3160  0124F4  EC4B  F0B7         	call	_update_lcd	;wreg free
  3161  0124F8                     l11132:
  3162                           
  3163                           ;main.c: 325:   check_help(V.flipper);
  3164  0124F8  0102               	movlb	2	; () banked
  3165  0124FA  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  3166  0124FC  6EE6               	movwf	postinc1,c
  3167  0124FE  ECBD  F0AD         	call	_check_help	;wreg free
  3168                           
  3169                           ;main.c: 327:   if (check_enter_button(&H)) {
  3170  012502  0EF2               	movlw	_H& (0+255)
  3171  012504  6EE6               	movwf	postinc1,c
  3172  012506  ECD4  F0C3         	call	_check_enter_button	;wreg free
  3173  01250A  5025               	movf	btemp^0,w,c
  3174  01250C  B4D8               	btfsc	status,2,c
  3175  01250E  D062               	goto	l1363
  3176                           
  3177                           ;main.c: 328:    V.calib = 0;
  3178  012510  0102               	movlb	2	; () banked
  3179  012512  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  3180                           
  3181                           ; BSR set to: 2
  3182                           ;main.c: 329:    inp_index += 3;
  3183                           ;stkvar	_inp_index @ sp[(-5)+3]
  3184  012514  0EFE               	movlw	-2
  3185  012516  006F FF8C  F025    	movff	plusw1,btemp
  3186  01251C  0E03               	movlw	3
  3187  01251E  2625               	addwf	btemp^0,f,c
  3188  012520  0EFE               	movlw	-2
  3189  012522  0060  F097  FFE3   	movff	btemp,plusw1
  3190                           
  3191                           ;main.c: 330:    if (inp_index > 9)
  3192                           ;stkvar	_inp_index @ sp[(-5)+3]
  3193  012528  0EFE               	movlw	-2
  3194  01252A  006F FF8C  F025    	movff	plusw1,btemp
  3195  012530  0E09               	movlw	9
  3196  012532  6425               	cpfsgt	btemp^0,c
  3197  012534  D03A               	goto	l11160
  3198                           
  3199                           ; BSR set to: 2
  3200                           ;main.c: 331:     inp_index = 0;
  3201                           ;stkvar	_inp_index @ sp[(-5)+3]
  3202  012536  0EFE               	movlw	-2
  3203  012538  6AE3               	clrf	plusw1,c
  3204  01253A  D037               	goto	l11160
  3205  01253C                     l11142:
  3206                           
  3207                           ; BSR set to: 2
  3208                           ;main.c: 334:     i = C_BATT;
  3209                           ;stkvar	_i @ sp[(-5)+2]
  3210  01253C  0EFD               	movlw	-3
  3211  01253E  6AE3               	clrf	plusw1,c
  3212                           
  3213                           ; BSR set to: 2
  3214                           ;main.c: 335:     j = C_PV;
  3215                           ;stkvar	_j @ sp[(-5)+1]
  3216  012540  0EFC               	movlw	-4
  3217  012542  6AE3               	clrf	plusw1,c
  3218  012544  2AE3               	incf	plusw1,f,c
  3219                           
  3220                           ; BSR set to: 2
  3221                           ;main.c: 336:     k = V_CC;
  3222                           ;stkvar	_k @ sp[(-5)+0]
  3223  012546  0EFB               	movlw	-5
  3224  012548  6AE3               	clrf	plusw1,c
  3225  01254A  82E3               	bsf	plusw1,1,c
  3226                           
  3227                           ;main.c: 337:     break;
  3228  01254C  D043               	goto	l1363
  3229  01254E                     l11148:
  3230                           
  3231                           ; BSR set to: 2
  3232                           ;main.c: 339:     i = V_BAT;
  3233                           ;stkvar	_i @ sp[(-5)+2]
  3234  01254E  0EFD               	movlw	-3
  3235  012550  6AE3               	clrf	plusw1,c
  3236  012552  84E3               	bsf	plusw1,2,c
  3237                           
  3238                           ;main.c: 340:     j = V_PV;
  3239                           ;stkvar	_j @ sp[(-5)+1]
  3240  012554  0EFC               	movlw	-4
  3241  012556  6AE3               	clrf	plusw1,c
  3242  012558  80E3               	bsf	plusw1,0,c
  3243  01255A  84E3               	bsf	plusw1,2,c	;indir
  3244                           
  3245                           ;main.c: 341:     k = V_CBUS;
  3246                           ;stkvar	_k @ sp[(-5)+0]
  3247  01255C  0EFB               	movlw	-5
  3248  01255E  6AE3               	clrf	plusw1,c
  3249  012560  82E3               	bsf	plusw1,1,c
  3250  012562  84E3               	bsf	plusw1,2,c	;indir
  3251                           
  3252                           ;main.c: 342:     break;
  3253  012564  D037               	goto	l1363
  3254  012566                     l11150:
  3255                           
  3256                           ; BSR set to: 2
  3257                           ;main.c: 344:     i = V_BBAT;
  3258                           ;stkvar	_i @ sp[(-5)+2]
  3259  012566  0EFD               	movlw	-3
  3260  012568  6AE3               	clrf	plusw1,c
  3261  01256A  82E3               	bsf	plusw1,1,c
  3262  01256C  86E3               	bsf	plusw1,3,c	;indir
  3263                           
  3264                           ; BSR set to: 2
  3265                           ;main.c: 345:     j = V_TEMP;
  3266  01256E  0E0B               	movlw	11
  3267  012570  6E30               	movwf	(btemp+11)^0,c
  3268                           
  3269                           ;stkvar	_j @ sp[(-5)+1]
  3270  012572  0EFC               	movlw	-4
  3271  012574  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  3272                           
  3273                           ; BSR set to: 2
  3274                           ;main.c: 346:     k = V_INVERTER;
  3275                           ;stkvar	_k @ sp[(-5)+0]
  3276  01257A  0EFB               	movlw	-5
  3277  01257C  6AE3               	clrf	plusw1,c
  3278  01257E  84E3               	bsf	plusw1,2,c
  3279  012580  86E3               	bsf	plusw1,3,c	;indir
  3280                           
  3281                           ;main.c: 347:     break;
  3282  012582  D028               	goto	l1363
  3283  012584                     l11156:
  3284                           
  3285                           ; BSR set to: 2
  3286                           ;main.c: 349:     i = channel_ANB5;
  3287  012584  0E0D               	movlw	13
  3288  012586  6E30               	movwf	(btemp+11)^0,c
  3289                           
  3290                           ;stkvar	_i @ sp[(-5)+2]
  3291  012588  0EFD               	movlw	-3
  3292  01258A  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  3293                           
  3294                           ;main.c: 350:     j = channel_ANB5;
  3295  012590  0E0D               	movlw	13
  3296  012592  6E30               	movwf	(btemp+11)^0,c
  3297                           
  3298                           ;stkvar	_j @ sp[(-5)+1]
  3299  012594  0EFC               	movlw	-4
  3300  012596  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  3301                           
  3302                           ;main.c: 351:     k = channel_ANB5;
  3303  01259C  0E0D               	movlw	13
  3304  01259E  6E30               	movwf	(btemp+11)^0,c
  3305                           
  3306                           ;stkvar	_k @ sp[(-5)+0]
  3307  0125A0  0EFB               	movlw	-5
  3308  0125A2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  3309                           
  3310                           ;main.c: 352:     break;
  3311  0125A8  D015               	goto	l1363
  3312  0125AA                     l11160:
  3313                           
  3314                           ; BSR set to: 2
  3315                           ;stkvar	_inp_index @ sp[(-5)+3]
  3316  0125AA  0EFE               	movlw	-2
  3317  0125AC  50E3               	movf	plusw1,w,c
  3318  0125AE  6E2F               	movwf	(btemp+10)^0,c
  3319  0125B0  6A30               	clrf	(btemp+11)^0,c
  3320                           
  3321                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3322                           ; Switch size 1, requested type "simple"
  3323                           ; Number of cases is 1, Range of values is 0 to 0
  3324                           ; switch strategies available:
  3325                           ; Name         Instructions Cycles
  3326                           ; simple_byte            4     3 (average)
  3327                           ;	Chosen strategy is simple_byte
  3328  0125B2  5030               	movf	(btemp+11)^0,w,c
  3329  0125B4  0A00               	xorlw	0	; case 0
  3330  0125B6  A4D8               	btfss	status,2,c
  3331  0125B8  D00D               	goto	l1363
  3332                           
  3333                           ; BSR set to: 2
  3334                           ; Switch size 1, requested type "simple"
  3335                           ; Number of cases is 4, Range of values is 0 to 9
  3336                           ; switch strategies available:
  3337                           ; Name         Instructions Cycles
  3338                           ; simple_byte           13     7 (average)
  3339                           ;	Chosen strategy is simple_byte
  3340  0125BA  502F               	movf	(btemp+10)^0,w,c
  3341  0125BC  0A00               	xorlw	0	; case 0
  3342  0125BE  B4D8               	btfsc	status,2,c
  3343  0125C0  D7BD               	goto	l11142
  3344  0125C2  0A03               	xorlw	3	; case 3
  3345  0125C4  B4D8               	btfsc	status,2,c
  3346  0125C6  D7C3               	goto	l11148
  3347  0125C8  0A05               	xorlw	5	; case 6
  3348  0125CA  B4D8               	btfsc	status,2,c
  3349  0125CC  D7CC               	goto	l11150
  3350  0125CE  0A0F               	xorlw	15	; case 9
  3351  0125D0  B4D8               	btfsc	status,2,c
  3352  0125D2  D7D8               	goto	l11156
  3353  0125D4                     l1363:
  3354                           
  3355                           ;main.c: 361:   if (V.set_sequ) {
  3356  0125D4  0102               	movlb	2	; () banked
  3357  0125D6  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  3358  0125D8  D4E4               	goto	l11076
  3359                           
  3360                           ; BSR set to: 2
  3361                           ;main.c: 362:    if (TimerDone(TMR_INFO)) {
  3362  0125DA  0E07               	movlw	7
  3363  0125DC  6EE6               	movwf	postinc1,c
  3364  0125DE  EC15  F0C6         	call	_TimerDone	;wreg free
  3365  0125E2  5025               	movf	btemp^0,w,c
  3366  0125E4  B4D8               	btfsc	status,2,c
  3367  0125E6  D00B               	goto	l11170
  3368                           
  3369                           ;main.c: 363:     V.set_sequ = 0;
  3370  0125E8  0102               	movlb	2	; () banked
  3371  0125EA  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  3372                           
  3373                           ; BSR set to: 2
  3374                           ;main.c: 364:     set_vterm(0);
  3375  0125EC  0E00               	movlw	0
  3376  0125EE  6EE6               	movwf	postinc1,c
  3377  0125F0  EC01  F0C8         	call	_set_vterm	;wreg free
  3378                           
  3379                           ;main.c: 365:     update_lcd(0);
  3380  0125F4  0E00               	movlw	0
  3381  0125F6  6EE6               	movwf	postinc1,c
  3382  0125F8  EC4B  F0B7         	call	_update_lcd	;wreg free
  3383                           
  3384                           ;main.c: 366:    } else {
  3385  0125FC  D4D2               	goto	l11076
  3386  0125FE                     l11170:
  3387                           
  3388                           ;main.c: 367:     set_vterm(2);
  3389  0125FE  0E02               	movlw	2
  3390  012600  6EE6               	movwf	postinc1,c
  3391  012602  EC01  F0C8         	call	_set_vterm	;wreg free
  3392                           
  3393                           ;main.c: 368:     update_lcd(2);
  3394  012606  0E02               	movlw	2
  3395  012608  6EE6               	movwf	postinc1,c
  3396  01260A  EC4B  F0B7         	call	_update_lcd	;wreg free
  3397  01260E  D4C9               	goto	l11076
  3398  012610                     __end_of_main:
  3399                           	opt callstack 0
  3400                           
  3401 ;; *************** function _static_soc *****************
  3402 ;; Defined at:
  3403 ;;		line 84 in file "mbmc.c"
  3404 ;; Parameters:    Size  Location     Type
  3405 ;;		None
  3406 ;; Auto vars:     Size  Location     Type
  3407 ;;		None
  3408 ;; Return value:  Size  Location     Type
  3409 ;;                  1  [STACK] void 
  3410 ;; Registers used:
  3411 ;;		wreg, status,2
  3412 ;; Tracked objects:
  3413 ;;		On entry : 3F/39
  3414 ;;		On exit  : 3F/1
  3415 ;;		Unchanged: 0/0
  3416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3421 ;;Total ram usage:        0 bytes
  3422 ;; Hardware stack levels used:    1
  3423 ;; Hardware stack levels required when called:    7
  3424 ;; This function calls:
  3425 ;;		Nothing
  3426 ;; This function is called by:
  3427 ;;		_main
  3428 ;; This function uses a reentrant model
  3429 ;;
  3430                           
  3431                           	psect	text1
  3432  018980                     __ptext1:
  3433                           	opt callstack 0
  3434  018980                     _static_soc:
  3435                           	opt callstack 23
  3436                           
  3437                           ;mbmc.c: 86:  C.static_ah = C.bank_ah;
  3438                           
  3439                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3440                           ;incstack = 0
  3441  018980  C17C  F180         	movff	_C+124,_C+128	;volatile
  3442  018984  C17D  F181         	movff	_C+125,_C+129	;volatile
  3443  018988  C17E  F182         	movff	_C+126,_C+130	;volatile
  3444  01898C  C17F  F183         	movff	_C+127,_C+131	;volatile
  3445                           
  3446                           ;mbmc.c: 87:  C.runtime = 120;
  3447  018990  0E00               	movlw	0
  3448  018992  0101               	movlb	1	; () banked
  3449  018994  6F9D               	movwf	(_C+157)& (0+255),b	;volatile
  3450  018996  0E78               	movlw	120
  3451  018998  6F9C               	movwf	(_C+156)& (0+255),b	;volatile
  3452                           
  3453                           ;mbmc.c: 88:  C.soc = 100;
  3454  01899A  0E00               	movlw	0
  3455  01899C  6F9F               	movwf	(_C+159)& (0+255),b	;volatile
  3456  01899E  0E64               	movlw	100
  3457  0189A0  6F9E               	movwf	(_C+158)& (0+255),b	;volatile
  3458                           
  3459                           ; BSR set to: 1
  3460                           ;mbmc.c: 89:  C.dynamic_ah = C.static_ah;
  3461  0189A2  C180  F184         	movff	_C+128,_C+132	;volatile
  3462  0189A6  C181  F185         	movff	_C+129,_C+133	;volatile
  3463  0189AA  C182  F186         	movff	_C+130,_C+134	;volatile
  3464  0189AE  C183  F187         	movff	_C+131,_C+135	;volatile
  3465                           
  3466                           ; BSR set to: 1
  3467                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  3468  0189B2  0012               	return		;funcret
  3469  0189B4                     __end_of_static_soc:
  3470                           	opt callstack 0
  3471                           
  3472 ;; *************** function _start_switch_handler *****************
  3473 ;; Defined at:
  3474 ;;		line 119 in file "dio.c"
  3475 ;; Parameters:    Size  Location     Type
  3476 ;;		None
  3477 ;; Auto vars:     Size  Location     Type
  3478 ;;		None
  3479 ;; Return value:  Size  Location     Type
  3480 ;;                  1  [STACK] void 
  3481 ;; Registers used:
  3482 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  3483 ;; Tracked objects:
  3484 ;;		On entry : 1/0
  3485 ;;		On exit  : 3F/39
  3486 ;;		Unchanged: 0/0
  3487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3492 ;;Total ram usage:        0 bytes
  3493 ;; Hardware stack levels used:    1
  3494 ;; Hardware stack levels required when called:    8
  3495 ;; This function calls:
  3496 ;;		_INT1_SetInterruptHandler
  3497 ;; This function is called by:
  3498 ;;		_main
  3499 ;; This function uses a reentrant model
  3500 ;;
  3501                           
  3502                           	psect	text2
  3503  018FA6                     __ptext2:
  3504                           	opt callstack 0
  3505  018FA6                     _start_switch_handler:
  3506                           	opt callstack 22
  3507                           
  3508                           ;dio.c: 121:  (PIE5bits.INT1IE = 0);
  3509                           
  3510                           ; BSR set to: 1
  3511                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3512                           ;incstack = 0
  3513  018FA6  0139               	movlb	57	; () banked
  3514  018FA8  9195               	bcf	149,0,b	;volatile
  3515                           
  3516                           ; BSR set to: 57
  3517                           ;dio.c: 122:  INT1_SetInterruptHandler(switch_handler);
  3518  018FAA  0ED0               	movlw	low _switch_handler
  3519  018FAC  6EE6               	movwf	postinc1,c
  3520  018FAE  0E68               	movlw	high _switch_handler
  3521  018FB0  6EE6               	movwf	postinc1,c
  3522  018FB2  0E01               	movlw	low (_switch_handler shr (0+16))
  3523  018FB4  6EE6               	movwf	postinc1,c
  3524  018FB6  ECB5  F0C6         	call	_INT1_SetInterruptHandler	;wreg free
  3525                           
  3526                           ;dio.c: 123:  S.button[SNULL].sw = SW_INVALID;
  3527  018FBA  0E02               	movlw	2
  3528  018FBC  0100               	movlb	0	; () banked
  3529  018FBE  6F83               	movwf	(_S+35)& (0+255),b	;volatile
  3530                           
  3531                           ; BSR set to: 0
  3532                           ;dio.c: 124:  (PIE5bits.INT1IE = 1);
  3533  018FC0  0139               	movlb	57	; () banked
  3534  018FC2  8195               	bsf	149,0,b	;volatile
  3535                           
  3536                           ; BSR set to: 57
  3537                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  3538  018FC4  0012               	return		;funcret
  3539  018FC6                     __end_of_start_switch_handler:
  3540                           	opt callstack 0
  3541                           
  3542 ;; *************** function _start_adc_scan *****************
  3543 ;; Defined at:
  3544 ;;		line 33 in file "daq.c"
  3545 ;; Parameters:    Size  Location     Type
  3546 ;;		None
  3547 ;; Auto vars:     Size  Location     Type
  3548 ;;		None
  3549 ;; Return value:  Size  Location     Type
  3550 ;;                  1  [STACK] _Bool 
  3551 ;; Registers used:
  3552 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  3553 ;; Tracked objects:
  3554 ;;		On entry : 0/0
  3555 ;;		On exit  : 1/0
  3556 ;;		Unchanged: 0/0
  3557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3562 ;;Total ram usage:        0 bytes
  3563 ;; Hardware stack levels used:    1
  3564 ;; Hardware stack levels required when called:    8
  3565 ;; This function calls:
  3566 ;;		_ADCC_DischargeSampleCapacitor
  3567 ;;		_ADCC_SetADIInterruptHandler
  3568 ;;		_ADCC_SetADTIInterruptHandler
  3569 ;;		_ADCC_StartConversion
  3570 ;; This function is called by:
  3571 ;;		_main
  3572 ;; This function uses a reentrant model
  3573 ;;
  3574                           
  3575                           	psect	text3
  3576  01814E                     __ptext3:
  3577                           	opt callstack 0
  3578  01814E                     _start_adc_scan:
  3579                           	opt callstack 22
  3580                           
  3581                           ;daq.c: 35:  if (R.done)
  3582                           
  3583                           ; BSR set to: 57
  3584                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3585                           ;incstack = 0
  3586  01814E  0100               	movlb	0	; () banked
  3587  018150  51EA               	movf	(_R+39)& (0+255),w,b	;volatile
  3588  018152  A4D8               	btfss	status,2,c
  3589  018154  0012               	return	
  3590                           
  3591                           ; BSR set to: 0
  3592                           ;daq.c: 38:  R.scan_index = 0;
  3593  018156  6BE7               	clrf	(_R+36)& (0+255),b	;volatile
  3594                           
  3595                           ; BSR set to: 0
  3596                           ;daq.c: 39:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  3597  018158  013A               	movlb	58	; () banked
  3598  01815A  5140               	movf	64,w,b	;volatile
  3599  01815C  006E F940  F025    	movff	14928,btemp	;volatile
  3600  018162  6A26               	clrf	(btemp+1)^0,c
  3601  018164  0060  F094  F026   	movff	btemp,btemp+1
  3602  01816A  6A25               	clrf	btemp^0,c
  3603  01816C  2625               	addwf	btemp^0,f,c
  3604  01816E  0E00               	movlw	0
  3605  018170  2226               	addwfc	(btemp+1)^0,f,c
  3606  018172  0E77               	movlw	119
  3607  018174  1425               	andwf	btemp^0,w,c
  3608  018176  0100               	movlb	0	; () banked
  3609  018178  6FE8               	movwf	(_R+37)& (0+255),b	;volatile
  3610  01817A  0E3C               	movlw	60
  3611  01817C  1426               	andwf	(btemp+1)^0,w,c
  3612  01817E  6FE9               	movwf	(_R+38)& (0+255),b	;volatile
  3613                           
  3614                           ; BSR set to: 0
  3615                           ;daq.c: 40:  ADCC_SetADIInterruptHandler(adc_int_handler);
  3616  018180  0E3E               	movlw	low _adc_int_handler
  3617  018182  6EE6               	movwf	postinc1,c
  3618  018184  0E92               	movlw	high _adc_int_handler
  3619  018186  6EE6               	movwf	postinc1,c
  3620  018188  0E01               	movlw	low (_adc_int_handler shr (0+16))
  3621  01818A  6EE6               	movwf	postinc1,c
  3622  01818C  ECF1  F0C6         	call	_ADCC_SetADIInterruptHandler	;wreg free
  3623                           
  3624                           ;daq.c: 41:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  3625  018190  0E2A               	movlw	low _adc_int_t_handler
  3626  018192  6EE6               	movwf	postinc1,c
  3627  018194  0E7F               	movlw	high _adc_int_t_handler
  3628  018196  6EE6               	movwf	postinc1,c
  3629  018198  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  3630  01819A  6EE6               	movwf	postinc1,c
  3631  01819C  ECDD  F0C6         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  3632                           
  3633                           ;daq.c: 42:  ADCC_DischargeSampleCapacitor();
  3634  0181A0  ECF5  F0C8         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  3635                           
  3636                           ; BSR set to: 62
  3637                           ;daq.c: 43:  ADCC_StartConversion(R.scan_index & 0xf);
  3638  0181A4  0100               	movlb	0	; () banked
  3639  0181A6  51E7               	movf	(_R+36)& (0+255),w,b	;volatile
  3640  0181A8  0B0F               	andlw	15
  3641  0181AA  6EE6               	movwf	postinc1,c
  3642  0181AC  ECA8  F0C8         	call	_ADCC_StartConversion	;wreg free
  3643                           
  3644                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  3645  0181B0  0012               	return		;funcret
  3646  0181B2                     __end_of_start_adc_scan:
  3647                           	opt callstack 0
  3648                           
  3649 ;; *************** function _ADCC_StartConversion *****************
  3650 ;; Defined at:
  3651 ;;		line 128 in file "mcc_generated_files/adcc.c"
  3652 ;; Parameters:    Size  Location     Type
  3653 ;;  channel         1  [STACK] enum E16136
  3654 ;; Auto vars:     Size  Location     Type
  3655 ;;		None
  3656 ;; Return value:  Size  Location     Type
  3657 ;;                  1  [STACK] void 
  3658 ;; Registers used:
  3659 ;;		fsr1l, fsr1h
  3660 ;; Tracked objects:
  3661 ;;		On entry : 3F/0
  3662 ;;		On exit  : 3F/3E
  3663 ;;		Unchanged: 0/0
  3664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3669 ;;Total ram usage:        0 bytes
  3670 ;; Hardware stack levels used:    1
  3671 ;; Hardware stack levels required when called:    7
  3672 ;; This function calls:
  3673 ;;		Nothing
  3674 ;; This function is called by:
  3675 ;;		_start_adc_scan
  3676 ;;		_adc_int_t_handler
  3677 ;; This function uses a reentrant model
  3678 ;;
  3679                           
  3680                           	psect	text4
  3681  019150                     __ptext4:
  3682                           	opt callstack 0
  3683  019150                     _ADCC_StartConversion:
  3684                           	opt callstack 4
  3685                           
  3686                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  3687                           ;stkvar	_channel @ sp[(0)+-1]
  3688                           
  3689                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3690                           ;incstack = 0
  3691  019150  0EFF               	movlw	-1
  3692  019152  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  3693                           
  3694                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  3695  019158  013E               	movlb	62	; () banked
  3696  01915A  8FF8               	bsf	248,7,b	;volatile
  3697                           
  3698                           ; BSR set to: 62
  3699                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  3700  01915C  81F8               	bsf	248,0,b	;volatile
  3701                           
  3702                           ; BSR set to: 62
  3703                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  3704  01915E  52E5               	movf	postdec1,f,c
  3705  019160  0012               	return		;funcret
  3706  019162                     __end_of_ADCC_StartConversion:
  3707                           	opt callstack 0
  3708                           
  3709 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  3710 ;; Defined at:
  3711 ;;		line 189 in file "mcc_generated_files/adcc.c"
  3712 ;; Parameters:    Size  Location     Type
  3713 ;;		None
  3714 ;; Auto vars:     Size  Location     Type
  3715 ;;		None
  3716 ;; Return value:  Size  Location     Type
  3717 ;;                  1  [STACK] void 
  3718 ;; Registers used:
  3719 ;;		wreg, status,2
  3720 ;; Tracked objects:
  3721 ;;		On entry : 0/0
  3722 ;;		On exit  : 3F/3E
  3723 ;;		Unchanged: 0/0
  3724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3729 ;;Total ram usage:        0 bytes
  3730 ;; Hardware stack levels used:    1
  3731 ;; Hardware stack levels required when called:    7
  3732 ;; This function calls:
  3733 ;;		Nothing
  3734 ;; This function is called by:
  3735 ;;		_start_adc_scan
  3736 ;;		_adc_int_t_handler
  3737 ;; This function uses a reentrant model
  3738 ;;
  3739                           
  3740                           	psect	text5
  3741  0191EA                     __ptext5:
  3742                           	opt callstack 0
  3743  0191EA                     _ADCC_DischargeSampleCapacitor:
  3744                           	opt callstack 4
  3745                           
  3746                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  3747                           
  3748                           ; BSR set to: 62
  3749                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3750                           ;incstack = 0
  3751  0191EA  0E3B               	movlw	59
  3752  0191EC  013E               	movlb	62	; () banked
  3753  0191EE  6FF1               	movwf	241,b	;volatile
  3754                           
  3755                           ; BSR set to: 62
  3756                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  3757  0191F0  0012               	return		;funcret
  3758  0191F2                     __end_of_ADCC_DischargeSampleCapacitor:
  3759                           	opt callstack 0
  3760                           
  3761 ;; *************** function _srand *****************
  3762 ;; Defined at:
  3763 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  3764 ;; Parameters:    Size  Location     Type
  3765 ;;  s               2  [STACK] unsigned int 
  3766 ;; Auto vars:     Size  Location     Type
  3767 ;;		None
  3768 ;; Return value:  Size  Location     Type
  3769 ;;                  1  [STACK] void 
  3770 ;; Registers used:
  3771 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  3772 ;; Tracked objects:
  3773 ;;		On entry : 3F/0
  3774 ;;		On exit  : 3F/1
  3775 ;;		Unchanged: 0/0
  3776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3781 ;;Total ram usage:        0 bytes
  3782 ;; Hardware stack levels used:    1
  3783 ;; Hardware stack levels required when called:    7
  3784 ;; This function calls:
  3785 ;;		Nothing
  3786 ;; This function is called by:
  3787 ;;		_main
  3788 ;; This function uses a reentrant model
  3789 ;;
  3790                           
  3791                           	psect	text6
  3792  0189B4                     __ptext6:
  3793                           	opt callstack 0
  3794  0189B4                     _srand:
  3795                           	opt callstack 23
  3796                           
  3797                           ;stkvar	_s @ sp[(0)+-2]
  3798                           
  3799                           ; BSR set to: 62
  3800                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3801                           ;incstack = 0
  3802  0189B4  0EFE               	movlw	-2
  3803  0189B6  50E3               	movf	plusw1,w,c
  3804  0189B8  0FFF               	addlw	255
  3805  0189BA  6E2F               	movwf	(btemp+10)^0,c
  3806  0189BC  0EFF               	movlw	-1
  3807  0189BE  006F FF8C  F030    	movff	plusw1,btemp+11
  3808  0189C4  0EFF               	movlw	255
  3809  0189C6  2230               	addwfc	(btemp+11)^0,f,c
  3810  0189C8  0060  F0BC  F1C9   	movff	btemp+10,_seed
  3811  0189CE  0060  F0C0  F1CA   	movff	btemp+11,_seed+1
  3812  0189D4  0101               	movlb	1	; () banked
  3813  0189D6  6BCB               	clrf	(_seed+2)& (0+255),b
  3814  0189D8  6BCC               	clrf	(_seed+3)& (0+255),b
  3815  0189DA  6BCD               	clrf	(_seed+4)& (0+255),b
  3816  0189DC  6BCE               	clrf	(_seed+5)& (0+255),b
  3817  0189DE  6BCF               	clrf	(_seed+6)& (0+255),b
  3818  0189E0  6BD0               	clrf	(_seed+7)& (0+255),b
  3819                           
  3820                           ; BSR set to: 1
  3821                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  3822  0189E2  52E5               	movf	postdec1,f,c
  3823  0189E4  52E5               	movf	postdec1,f,c
  3824  0189E6  0012               	return		;funcret
  3825  0189E8                     __end_of_srand:
  3826                           	opt callstack 0
  3827                           
  3828 ;; *************** function _init_display *****************
  3829 ;; Defined at:
  3830 ;;		line 37 in file "eadog.c"
  3831 ;; Parameters:    Size  Location     Type
  3832 ;;		None
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;		None
  3835 ;; Return value:  Size  Location     Type
  3836 ;;                  1  [STACK] void 
  3837 ;; Registers used:
  3838 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  3839 ;; Tracked objects:
  3840 ;;		On entry : 0/2
  3841 ;;		On exit  : 3F/3D
  3842 ;;		Unchanged: 0/0
  3843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3848 ;;Total ram usage:        0 bytes
  3849 ;; Hardware stack levels used:    1
  3850 ;; Hardware stack levels required when called:    9
  3851 ;; This function calls:
  3852 ;;		_ringBufS_init
  3853 ;;		_send_lcd_cmd
  3854 ;;		_send_lcd_cmd_long
  3855 ;;		_wdtdelay
  3856 ;; This function is called by:
  3857 ;;		_main
  3858 ;; This function uses a reentrant model
  3859 ;;
  3860                           
  3861                           	psect	text7
  3862  0172AE                     __ptext7:
  3863                           	opt callstack 0
  3864  0172AE                     _init_display:
  3865                           	opt callstack 21
  3866                           
  3867                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
  3868                           
  3869                           ; BSR set to: 1
  3870                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3871                           ;incstack = 0
  3872  0172AE  0E43               	movlw	low _ring_buf1
  3873  0172B0  0100               	movlb	0	; () banked
  3874  0172B2  6F8F               	movwf	(_spi_link+6)& (0+255),b	;volatile
  3875  0172B4  0E04               	movlw	high _ring_buf1
  3876  0172B6  6F90               	movwf	(_spi_link+7)& (0+255),b	;volatile
  3877                           
  3878                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
  3879  0172B8  0E00               	movlw	low _ring_buf2
  3880  0172BA  6F8D               	movwf	(_spi_link+4)& (0+255),b	;volatile
  3881  0172BC  0E04               	movlw	high _ring_buf2
  3882  0172BE  6F8E               	movwf	(_spi_link+5)& (0+255),b	;volatile
  3883                           
  3884                           ; BSR set to: 0
  3885                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
  3886  0172C0  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
  3887  0172C6  0060  F243  FFE6   	movff	_spi_link+7,postinc1
  3888  0172CC  ECED  F0C5         	call	_ringBufS_init	;wreg free
  3889                           
  3890                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
  3891  0172D0  0060  F237  FFE6   	movff	_spi_link+4,postinc1
  3892  0172D6  0060  F23B  FFE6   	movff	_spi_link+5,postinc1
  3893  0172DC  ECED  F0C5         	call	_ringBufS_init	;wreg free
  3894                           
  3895                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
  3896  0172E0  84BE               	bsf	190,2,c	;volatile
  3897  0172E2  84BC               	bsf	188,2,c	;volatile
  3898                           
  3899                           ;eadog.c: 58:  wdtdelay(350000);
  3900  0172E4  0E30               	movlw	48
  3901  0172E6  6EE6               	movwf	postinc1,c
  3902  0172E8  0E57               	movlw	87
  3903  0172EA  6EE6               	movwf	postinc1,c
  3904  0172EC  0E05               	movlw	5
  3905  0172EE  6EE6               	movwf	postinc1,c
  3906  0172F0  0E00               	movlw	0
  3907  0172F2  6EE6               	movwf	postinc1,c
  3908  0172F4  EC9C  F0C1         	call	_wdtdelay	;wreg free
  3909                           
  3910                           ; BSR set to: 0
  3911                           ;eadog.c: 59:  send_lcd_cmd(0x39);
  3912  0172F8  0E39               	movlw	57
  3913  0172FA  6EE6               	movwf	postinc1,c
  3914  0172FC  ECD9  F0C5         	call	_send_lcd_cmd	;wreg free
  3915                           
  3916                           ; BSR set to: 0
  3917                           ;eadog.c: 60:  send_lcd_cmd(0x1d);
  3918  017300  0E1D               	movlw	29
  3919  017302  6EE6               	movwf	postinc1,c
  3920  017304  ECD9  F0C5         	call	_send_lcd_cmd	;wreg free
  3921                           
  3922                           ; BSR set to: 0
  3923                           ;eadog.c: 61:  send_lcd_cmd(0x50);
  3924  017308  0E50               	movlw	80
  3925  01730A  6EE6               	movwf	postinc1,c
  3926  01730C  ECD9  F0C5         	call	_send_lcd_cmd	;wreg free
  3927                           
  3928                           ; BSR set to: 0
  3929                           ;eadog.c: 62:  send_lcd_cmd(0x6c);
  3930  017310  0E6C               	movlw	108
  3931  017312  6EE6               	movwf	postinc1,c
  3932  017314  ECD9  F0C5         	call	_send_lcd_cmd	;wreg free
  3933                           
  3934                           ; BSR set to: 0
  3935                           ;eadog.c: 63:  send_lcd_cmd(0x76);
  3936  017318  0E76               	movlw	118
  3937  01731A  6EE6               	movwf	postinc1,c
  3938  01731C  ECD9  F0C5         	call	_send_lcd_cmd	;wreg free
  3939                           
  3940                           ; BSR set to: 0
  3941                           ;eadog.c: 64:  send_lcd_cmd_long(0x38);
  3942  017320  0E38               	movlw	56
  3943  017322  6EE6               	movwf	postinc1,c
  3944  017324  ECC5  F0C5         	call	_send_lcd_cmd_long	;wreg free
  3945                           
  3946                           ; BSR set to: 0
  3947                           ;eadog.c: 65:  send_lcd_cmd(0x0f);
  3948  017328  0E0F               	movlw	15
  3949  01732A  6EE6               	movwf	postinc1,c
  3950  01732C  ECD9  F0C5         	call	_send_lcd_cmd	;wreg free
  3951                           
  3952                           ; BSR set to: 0
  3953                           ;eadog.c: 66:  send_lcd_cmd_long(0x01);
  3954  017330  0E01               	movlw	1
  3955  017332  6EE6               	movwf	postinc1,c
  3956  017334  ECC5  F0C5         	call	_send_lcd_cmd_long	;wreg free
  3957                           
  3958                           ; BSR set to: 0
  3959                           ;eadog.c: 67:  send_lcd_cmd(0x02);
  3960  017338  0E02               	movlw	2
  3961  01733A  6EE6               	movwf	postinc1,c
  3962  01733C  ECD9  F0C5         	call	_send_lcd_cmd	;wreg free
  3963                           
  3964                           ; BSR set to: 0
  3965                           ;eadog.c: 68:  send_lcd_cmd(0x06);
  3966  017340  0E06               	movlw	6
  3967  017342  6EE6               	movwf	postinc1,c
  3968  017344  ECD9  F0C5         	call	_send_lcd_cmd	;wreg free
  3969                           
  3970                           ; BSR set to: 0
  3971                           ;eadog.c: 69:  wdtdelay(30);
  3972  017348  0E1E               	movlw	30
  3973  01734A  6EE6               	movwf	postinc1,c
  3974  01734C  0E00               	movlw	0
  3975  01734E  6EE6               	movwf	postinc1,c
  3976  017350  0E00               	movlw	0
  3977  017352  6EE6               	movwf	postinc1,c
  3978  017354  0E00               	movlw	0
  3979  017356  6EE6               	movwf	postinc1,c
  3980  017358  EC9C  F0C1         	call	_wdtdelay	;wreg free
  3981                           
  3982                           ; BSR set to: 0
  3983                           ;eadog.c: 70:  SPI1CON2 = 0x02;
  3984  01735C  0E02               	movlw	2
  3985  01735E  013D               	movlb	61	; () banked
  3986  017360  6F16               	movwf	22,b	;volatile
  3987                           
  3988                           ; BSR set to: 61
  3989                           ;eadog.c: 71:  SPI1CON1 = 0x40;
  3990  017362  0E40               	movlw	64
  3991  017364  6F15               	movwf	21,b	;volatile
  3992                           
  3993                           ; BSR set to: 61
  3994                           ;eadog.c: 72:  SPI1CON0 = 0x83;
  3995  017366  0E83               	movlw	131
  3996  017368  6F14               	movwf	20,b	;volatile
  3997                           
  3998                           ; BSR set to: 61
  3999                           ;eadog.c: 74:  SPI1INTFbits.SPI1TXUIF = 0;
  4000  01736A  931A               	bcf	26,1,b	;volatile
  4001                           
  4002                           ; BSR set to: 61
  4003                           ;eadog.c: 75:  DMA1CON1bits.DMODE = 0;
  4004  01736C  0E3F               	movlw	-193
  4005  01736E  013B               	movlb	59	; () banked
  4006  017370  17FD               	andwf	253,f,b	;volatile
  4007                           
  4008                           ; BSR set to: 59
  4009                           ;eadog.c: 76:  DMA1CON1bits.DSTP = 0;
  4010  017372  9BFD               	bcf	253,5,b	;volatile
  4011                           
  4012                           ; BSR set to: 59
  4013                           ;eadog.c: 77:  DMA1CON1bits.SMODE = 1;
  4014  017374  51FD               	movf	253,w,b	;volatile
  4015  017376  0BF9               	andlw	-7
  4016  017378  0902               	iorlw	2
  4017  01737A  6FFD               	movwf	253,b	;volatile
  4018                           
  4019                           ; BSR set to: 59
  4020                           ;eadog.c: 78:  DMA1CON1bits.SMR = 0;
  4021  01737C  0EE7               	movlw	-25
  4022  01737E  17FD               	andwf	253,f,b	;volatile
  4023                           
  4024                           ; BSR set to: 59
  4025                           ;eadog.c: 79:  DMA1CON1bits.SSTP = 1;
  4026  017380  81FD               	bsf	253,0,b	;volatile
  4027                           
  4028                           ; BSR set to: 59
  4029                           ;eadog.c: 80:  DMA1SSA = (uint32_t) & ring_buf1;
  4030  017382  0E43               	movlw	low _ring_buf1
  4031  017384  6FF9               	movwf	249,b	;volatile
  4032  017386  0E04               	movlw	high _ring_buf1
  4033  017388  6FFA               	movwf	250,b	;volatile
  4034  01738A  0E00               	movlw	low (_ring_buf1 shr (0+16))
  4035  01738C  6FFB               	movwf	251,b	;volatile
  4036                           
  4037                           ; BSR set to: 59
  4038                           ;eadog.c: 81:  DMA1CON0bits.DGO = 0;
  4039  01738E  9BFC               	bcf	252,5,b	;volatile
  4040                           
  4041                           ; BSR set to: 59
  4042                           ;eadog.c: 82:  SPI1INTFbits.SPI1TXUIF = 1;
  4043  017390  013D               	movlb	61	; () banked
  4044  017392  831A               	bsf	26,1,b	;volatile
  4045                           
  4046                           ; BSR set to: 61
  4047                           ;eadog.c: 83:  LATEbits.LATE2 = 0;
  4048  017394  94BE               	bcf	190,2,c	;volatile
  4049                           
  4050                           ; BSR set to: 61
  4051                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  4052  017396  0012               	return		;funcret
  4053  017398                     __end_of_init_display:
  4054                           	opt callstack 0
  4055                           
  4056 ;; *************** function _send_lcd_cmd_long *****************
  4057 ;; Defined at:
  4058 ;;		line 127 in file "eadog.c"
  4059 ;; Parameters:    Size  Location     Type
  4060 ;;  cmd             1  [STACK] const unsigned char 
  4061 ;; Auto vars:     Size  Location     Type
  4062 ;;		None
  4063 ;; Return value:  Size  Location     Type
  4064 ;;                  1  [STACK] void 
  4065 ;; Registers used:
  4066 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  4067 ;; Tracked objects:
  4068 ;;		On entry : 3F/0
  4069 ;;		On exit  : 3F/0
  4070 ;;		Unchanged: 0/0
  4071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4076 ;;Total ram usage:        0 bytes
  4077 ;; Hardware stack levels used:    1
  4078 ;; Hardware stack levels required when called:    8
  4079 ;; This function calls:
  4080 ;;		_SPI1_Exchange8bit
  4081 ;;		_wdtdelay
  4082 ;; This function is called by:
  4083 ;;		_init_display
  4084 ;; This function uses a reentrant model
  4085 ;;
  4086                           
  4087                           	psect	text8
  4088  018B8A                     __ptext8:
  4089                           	opt callstack 0
  4090  018B8A                     _send_lcd_cmd_long:
  4091                           	opt callstack 21
  4092                           
  4093                           ; BSR set to: 61
  4094                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4095                           ;incstack = 0
  4096                           ;eadog.c: 127: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 128: {;eadog.c:
      +                           129:  do { LATCbits.LATC1 = 0; } while(0);
  4097  018B8A  92BC               	bcf	188,1,c	;volatile
  4098                           
  4099                           ;eadog.c: 130:  do { LATCbits.LATC2 = 0; } while(0);
  4100  018B8C  94BC               	bcf	188,2,c	;volatile
  4101                           
  4102                           ;eadog.c: 131:  SPI1_Exchange8bit(cmd);
  4103                           ;stkvar	_cmd @ sp[(0)+-1]
  4104  018B8E  0EFF               	movlw	-1
  4105  018B90  50E3               	movf	plusw1,w,c
  4106  018B92  6EE6               	movwf	postinc1,c
  4107  018B94  ECE3  F0C7         	call	_SPI1_Exchange8bit	;wreg free
  4108                           
  4109                           ; BSR set to: 57
  4110                           ;eadog.c: 132:  wdtdelay(800);
  4111  018B98  0E20               	movlw	32
  4112  018B9A  6EE6               	movwf	postinc1,c
  4113  018B9C  0E03               	movlw	3
  4114  018B9E  6EE6               	movwf	postinc1,c
  4115  018BA0  0E00               	movlw	0
  4116  018BA2  6EE6               	movwf	postinc1,c
  4117  018BA4  0E00               	movlw	0
  4118  018BA6  6EE6               	movwf	postinc1,c
  4119  018BA8  EC9C  F0C1         	call	_wdtdelay	;wreg free
  4120                           
  4121                           ; BSR set to: 0
  4122  018BAC  82BC               	bsf	188,1,c	;volatile
  4123                           
  4124                           ; BSR set to: 0
  4125                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  4126  018BAE  52E5               	movf	postdec1,f,c
  4127  018BB0  0012               	return		;funcret
  4128  018BB2                     __end_of_send_lcd_cmd_long:
  4129                           	opt callstack 0
  4130                           
  4131 ;; *************** function _send_lcd_cmd *****************
  4132 ;; Defined at:
  4133 ;;		line 115 in file "eadog.c"
  4134 ;; Parameters:    Size  Location     Type
  4135 ;;  cmd             1  [STACK] const unsigned char 
  4136 ;; Auto vars:     Size  Location     Type
  4137 ;;		None
  4138 ;; Return value:  Size  Location     Type
  4139 ;;                  1  [STACK] void 
  4140 ;; Registers used:
  4141 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  4142 ;; Tracked objects:
  4143 ;;		On entry : 3F/0
  4144 ;;		On exit  : 3F/0
  4145 ;;		Unchanged: 0/0
  4146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4151 ;;Total ram usage:        0 bytes
  4152 ;; Hardware stack levels used:    1
  4153 ;; Hardware stack levels required when called:    8
  4154 ;; This function calls:
  4155 ;;		_SPI1_Exchange8bit
  4156 ;;		_wdtdelay
  4157 ;; This function is called by:
  4158 ;;		_init_display
  4159 ;; This function uses a reentrant model
  4160 ;;
  4161                           
  4162                           	psect	text9
  4163  018BB2                     __ptext9:
  4164                           	opt callstack 0
  4165  018BB2                     _send_lcd_cmd:
  4166                           	opt callstack 21
  4167                           
  4168                           ; BSR set to: 0
  4169                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4170                           ;incstack = 0
  4171                           ;eadog.c: 115: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 116: {;eadog.c: 117:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  4172  018BB2  92BC               	bcf	188,1,c	;volatile
  4173                           
  4174                           ;eadog.c: 118:  do { LATCbits.LATC2 = 0; } while(0);
  4175  018BB4  94BC               	bcf	188,2,c	;volatile
  4176                           
  4177                           ;eadog.c: 119:  SPI1_Exchange8bit(cmd);
  4178                           ;stkvar	_cmd @ sp[(0)+-1]
  4179  018BB6  0EFF               	movlw	-1
  4180  018BB8  50E3               	movf	plusw1,w,c
  4181  018BBA  6EE6               	movwf	postinc1,c
  4182  018BBC  ECE3  F0C7         	call	_SPI1_Exchange8bit	;wreg free
  4183                           
  4184                           ; BSR set to: 57
  4185                           ;eadog.c: 120:  wdtdelay(30);
  4186  018BC0  0E1E               	movlw	30
  4187  018BC2  6EE6               	movwf	postinc1,c
  4188  018BC4  0E00               	movlw	0
  4189  018BC6  6EE6               	movwf	postinc1,c
  4190  018BC8  0E00               	movlw	0
  4191  018BCA  6EE6               	movwf	postinc1,c
  4192  018BCC  0E00               	movlw	0
  4193  018BCE  6EE6               	movwf	postinc1,c
  4194  018BD0  EC9C  F0C1         	call	_wdtdelay	;wreg free
  4195                           
  4196                           ; BSR set to: 0
  4197  018BD4  82BC               	bsf	188,1,c	;volatile
  4198                           
  4199                           ; BSR set to: 0
  4200                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  4201  018BD6  52E5               	movf	postdec1,f,c
  4202  018BD8  0012               	return		;funcret
  4203  018BDA                     __end_of_send_lcd_cmd:
  4204                           	opt callstack 0
  4205                           
  4206 ;; *************** function _SPI1_Exchange8bit *****************
  4207 ;; Defined at:
  4208 ;;		line 79 in file "mcc_generated_files/spi1.c"
  4209 ;; Parameters:    Size  Location     Type
  4210 ;;  data            1  [STACK] unsigned char 
  4211 ;; Auto vars:     Size  Location     Type
  4212 ;;		None
  4213 ;; Return value:  Size  Location     Type
  4214 ;;                  1  [STACK] unsigned char 
  4215 ;; Registers used:
  4216 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  4217 ;; Tracked objects:
  4218 ;;		On entry : 0/0
  4219 ;;		On exit  : 3F/39
  4220 ;;		Unchanged: 0/0
  4221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4226 ;;Total ram usage:        0 bytes
  4227 ;; Hardware stack levels used:    1
  4228 ;; Hardware stack levels required when called:    7
  4229 ;; This function calls:
  4230 ;;		Nothing
  4231 ;; This function is called by:
  4232 ;;		_send_lcd_cmd
  4233 ;;		_send_lcd_cmd_long
  4234 ;; This function uses a reentrant model
  4235 ;;
  4236                           
  4237                           	psect	text10
  4238  018FC6                     __ptext10:
  4239                           	opt callstack 0
  4240  018FC6                     _SPI1_Exchange8bit:
  4241                           	opt callstack 21
  4242                           
  4243                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  4244                           
  4245                           ; BSR set to: 0
  4246                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4247                           ;incstack = 0
  4248  018FC6  0E01               	movlw	1
  4249  018FC8  013D               	movlb	61	; () banked
  4250  018FCA  6F12               	movwf	18,b	;volatile
  4251                           
  4252                           ; BSR set to: 61
  4253                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  4254                           ;stkvar	_data @ sp[(0)+-1]
  4255  018FCC  0EFF               	movlw	-1
  4256  018FCE  006F FF8F FD11     	movff	plusw1,15633	;volatile
  4257  018FD4                     l837:
  4258                           
  4259                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  4260  018FD4  0139               	movlb	57	; () banked
  4261  018FD6  A9A2               	btfss	162,4,b	;volatile
  4262  018FD8  D7FD               	goto	l837
  4263                           
  4264                           ; BSR set to: 57
  4265                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  4266  018FDA  006F F440  F025    	movff	15632,btemp	;volatile
  4267                           
  4268                           ; BSR set to: 57
  4269                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  4270  018FE0  52E5               	movf	postdec1,f,c
  4271  018FE2  0012               	return		;funcret
  4272  018FE4                     __end_of_SPI1_Exchange8bit:
  4273                           	opt callstack 0
  4274                           
  4275 ;; *************** function _ringBufS_init *****************
  4276 ;; Defined at:
  4277 ;;		line 22 in file "ringbufs.c"
  4278 ;; Parameters:    Size  Location     Type
  4279 ;;  _this           2  [STACK] PTR volatile struct ring
  4280 ;;		 -> ring_buf2(67), ring_buf1(67), 
  4281 ;; Auto vars:     Size  Location     Type
  4282 ;;		None
  4283 ;; Return value:  Size  Location     Type
  4284 ;;                  1  [STACK] void 
  4285 ;; Registers used:
  4286 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  4287 ;; Tracked objects:
  4288 ;;		On entry : 0/0
  4289 ;;		On exit  : 0/0
  4290 ;;		Unchanged: 0/0
  4291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4296 ;;Total ram usage:        0 bytes
  4297 ;; Hardware stack levels used:    1
  4298 ;; Hardware stack levels required when called:    8
  4299 ;; This function calls:
  4300 ;;		_memset
  4301 ;; This function is called by:
  4302 ;;		_init_display
  4303 ;; This function uses a reentrant model
  4304 ;;
  4305                           
  4306                           	psect	text11
  4307  018BDA                     __ptext11:
  4308                           	opt callstack 0
  4309  018BDA                     _ringBufS_init:
  4310                           	opt callstack 21
  4311                           
  4312                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  4313                           
  4314                           ; BSR set to: 57
  4315                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4316                           ;incstack = 0
  4317  018BDA  0E43               	movlw	67
  4318  018BDC  6EE6               	movwf	postinc1,c
  4319  018BDE  0E00               	movlw	0
  4320  018BE0  6EE6               	movwf	postinc1,c
  4321  018BE2  0E00               	movlw	0
  4322  018BE4  6EE6               	movwf	postinc1,c
  4323  018BE6  0E00               	movlw	0
  4324  018BE8  6EE6               	movwf	postinc1,c
  4325                           
  4326                           ;stkvar	__this @ sp[(-4)+-2]
  4327  018BEA  0EFA               	movlw	-6
  4328  018BEC  006F FF8F FFE6     	movff	plusw1,postinc1
  4329  018BF2  006F FF8F FFE6     	movff	plusw1,postinc1
  4330  018BF8  ECE1  F0A5         	call	_memset	;wreg free
  4331                           
  4332                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  4333  018BFC  52E5               	movf	postdec1,f,c
  4334  018BFE  52E5               	movf	postdec1,f,c
  4335  018C00  0012               	return		;funcret
  4336  018C02                     __end_of_ringBufS_init:
  4337                           	opt callstack 0
  4338                           
  4339 ;; *************** function _init_bsoc *****************
  4340 ;; Defined at:
  4341 ;;		line 15 in file "bsoc.c"
  4342 ;; Parameters:    Size  Location     Type
  4343 ;;		None
  4344 ;; Auto vars:     Size  Location     Type
  4345 ;;		None
  4346 ;; Return value:  Size  Location     Type
  4347 ;;                  1  [STACK] void 
  4348 ;; Registers used:
  4349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
  4350 ;; Tracked objects:
  4351 ;;		On entry : 3F/1
  4352 ;;		On exit  : 0/0
  4353 ;;		Unchanged: 0/0
  4354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4359 ;;Total ram usage:        0 bytes
  4360 ;; Hardware stack levels used:    1
  4361 ;; Hardware stack levels required when called:    8
  4362 ;; This function calls:
  4363 ;;		_TMR3_SetInterruptHandler
  4364 ;; This function is called by:
  4365 ;;		_main
  4366 ;; This function uses a reentrant model
  4367 ;;
  4368                           
  4369                           	psect	text12
  4370  019162                     __ptext12:
  4371                           	opt callstack 0
  4372  019162                     _init_bsoc:
  4373                           	opt callstack 22
  4374                           
  4375                           ;bsoc.c: 17:  TMR3_SetInterruptHandler(calc_bsoc);
  4376                           
  4377                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4378                           ;incstack = 0
  4379  019162  0E0E               	movlw	low _calc_bsoc
  4380  019164  6EE6               	movwf	postinc1,c
  4381  019166  0E7D               	movlw	high _calc_bsoc
  4382  019168  6EE6               	movwf	postinc1,c
  4383  01916A  0E01               	movlw	low (_calc_bsoc shr (0+16))
  4384  01916C  6EE6               	movwf	postinc1,c
  4385  01916E  ECA1  F0C6         	call	_TMR3_SetInterruptHandler	;wreg free
  4386                           
  4387                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  4388  019172  0012               	return		;funcret
  4389  019174                     __end_of_init_bsoc:
  4390                           	opt callstack 0
  4391                           
  4392 ;; *************** function _hid_display *****************
  4393 ;; Defined at:
  4394 ;;		line 17 in file "hid.c"
  4395 ;; Parameters:    Size  Location     Type
  4396 ;;  h               1  [STACK] PTR struct H_data
  4397 ;;		 -> H(7), 
  4398 ;; Auto vars:     Size  Location     Type
  4399 ;;		None
  4400 ;; Return value:  Size  Location     Type
  4401 ;;                  1  [STACK] PTR struct H_data
  4402 ;; Registers used:
  4403 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  4404 ;; Tracked objects:
  4405 ;;		On entry : 3F/1
  4406 ;;		On exit  : 0/0
  4407 ;;		Unchanged: 0/0
  4408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4413 ;;Total ram usage:        0 bytes
  4414 ;; Hardware stack levels used:    1
  4415 ;; Hardware stack levels required when called:    9
  4416 ;; This function calls:
  4417 ;;		_hid_input
  4418 ;; This function is called by:
  4419 ;;		_main
  4420 ;; This function uses a reentrant model
  4421 ;;
  4422                           
  4423                           	psect	text13
  4424  0170B0                     __ptext13:
  4425                           	opt callstack 0
  4426  0170B0                     _hid_display:
  4427                           	opt callstack 21
  4428                           
  4429                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  4430                           ;stkvar	_h @ sp[(0)+-1]
  4431                           
  4432                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4433                           ;incstack = 0
  4434  0170B0  0EFF               	movlw	-1
  4435  0170B2  50E3               	movf	plusw1,w,c
  4436  0170B4  6EE6               	movwf	postinc1,c
  4437  0170B6  EC3F  F0BE         	call	_hid_input	;wreg free
  4438                           
  4439                           ;hid.c: 21:  switch (h->h_state) {
  4440  0170BA  D066               	goto	l9450
  4441  0170BC                     l9428:
  4442                           
  4443                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  4444                           ;stkvar	_h @ sp[(0)+-1]
  4445  0170BC  0EFF               	movlw	-1
  4446  0170BE  50E3               	movf	plusw1,w,c
  4447  0170C0  6ED9               	movwf	fsr2l,c
  4448  0170C2  6ADA               	clrf	fsr2h,c
  4449  0170C4  0E01               	movlw	1
  4450  0170C6  26D9               	addwf	fsr2l,f,c
  4451  0170C8  0E01               	movlw	1
  4452  0170CA  6EDF               	movwf	indf2,c
  4453                           
  4454                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  4455                           ;stkvar	_h @ sp[(0)+-1]
  4456  0170CC  0EFF               	movlw	-1
  4457  0170CE  50E3               	movf	plusw1,w,c
  4458  0170D0  6ED9               	movwf	fsr2l,c
  4459  0170D2  6ADA               	clrf	fsr2h,c
  4460  0170D4  0E00               	movlw	0
  4461  0170D6  6EDF               	movwf	indf2,c
  4462                           
  4463                           ;hid.c: 25:   h->wait_enter = 1;
  4464                           ;stkvar	_h @ sp[(0)+-1]
  4465  0170D8  0EFF               	movlw	-1
  4466  0170DA  50E3               	movf	plusw1,w,c
  4467  0170DC  6ED9               	movwf	fsr2l,c
  4468  0170DE  6ADA               	clrf	fsr2h,c
  4469  0170E0  0E04               	movlw	4
  4470  0170E2  26D9               	addwf	fsr2l,f,c
  4471  0170E4  0E01               	movlw	1
  4472  0170E6  6EDF               	movwf	indf2,c
  4473                           
  4474                           ;hid.c: 26:   h->wait_select = 1;
  4475                           ;stkvar	_h @ sp[(0)+-1]
  4476  0170E8  0EFF               	movlw	-1
  4477  0170EA  50E3               	movf	plusw1,w,c
  4478  0170EC  6ED9               	movwf	fsr2l,c
  4479  0170EE  6ADA               	clrf	fsr2h,c
  4480  0170F0  0E02               	movlw	2
  4481  0170F2  26D9               	addwf	fsr2l,f,c
  4482  0170F4  0E01               	movlw	1
  4483  0170F6  6EDF               	movwf	indf2,c
  4484                           
  4485                           ;hid.c: 27:   h->select_p = SW_OFF;
  4486                           ;stkvar	_h @ sp[(0)+-1]
  4487  0170F8  0EFF               	movlw	-1
  4488  0170FA  50E3               	movf	plusw1,w,c
  4489  0170FC  6ED9               	movwf	fsr2l,c
  4490  0170FE  6ADA               	clrf	fsr2h,c
  4491  017100  0E03               	movlw	3
  4492  017102  26D9               	addwf	fsr2l,f,c
  4493  017104  0E00               	movlw	0
  4494  017106  6EDF               	movwf	indf2,c
  4495                           
  4496                           ;hid.c: 28:   h->enter_p = SW_OFF;
  4497                           ;stkvar	_h @ sp[(0)+-1]
  4498  017108  0EFF               	movlw	-1
  4499  01710A  50E3               	movf	plusw1,w,c
  4500  01710C  6ED9               	movwf	fsr2l,c
  4501  01710E  6ADA               	clrf	fsr2h,c
  4502  017110  0E05               	movlw	5
  4503  017112  26D9               	addwf	fsr2l,f,c
  4504  017114  0E00               	movlw	0
  4505  017116  D036               	goto	L1
  4506  017118                     l9440:
  4507                           
  4508                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  4509                           ;stkvar	_h @ sp[(0)+-1]
  4510  017118  0EFF               	movlw	-1
  4511  01711A  50E3               	movf	plusw1,w,c
  4512  01711C  6ED9               	movwf	fsr2l,c
  4513  01711E  6ADA               	clrf	fsr2h,c
  4514  017120  0E02               	movlw	2
  4515  017122  26D9               	addwf	fsr2l,f,c
  4516  017124  50DF               	movf	indf2,w,c
  4517  017126  A4D8               	btfss	status,2,c
  4518  017128  D042               	goto	l1902
  4519                           
  4520                           ;stkvar	_h @ sp[(0)+-1]
  4521  01712A  0EFF               	movlw	-1
  4522  01712C  50E3               	movf	plusw1,w,c
  4523  01712E  6ED9               	movwf	fsr2l,c
  4524  017130  6ADA               	clrf	fsr2h,c
  4525  017132  0E03               	movlw	3
  4526  017134  26D9               	addwf	fsr2l,f,c
  4527  017136  50DF               	movf	indf2,w,c
  4528  017138  A4D8               	btfss	status,2,c
  4529  01713A  D039               	goto	l1902
  4530                           
  4531                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  4532                           ;stkvar	_h @ sp[(0)+-1]
  4533  01713C  0EFF               	movlw	-1
  4534  01713E  50E3               	movf	plusw1,w,c
  4535  017140  6ED9               	movwf	fsr2l,c
  4536  017142  6ADA               	clrf	fsr2h,c
  4537  017144  0E06               	movlw	6
  4538  017146  26D9               	addwf	fsr2l,f,c
  4539                           
  4540                           ;stkvar	_h @ sp[(0)+-1]
  4541  017148  0EFF               	movlw	-1
  4542  01714A  50E3               	movf	plusw1,w,c
  4543  01714C  6EE9               	movwf	fsr0l,c
  4544  01714E  6AEA               	clrf	fsr0h,c
  4545  017150  0E06               	movlw	6
  4546  017152  26E9               	addwf	fsr0l,f,c
  4547  017154  2AEF               	incf	indf0,f,c
  4548  017156  50EF               	movf	indf0,w,c
  4549  017158  0B03               	andlw	3
  4550  01715A  6EDF               	movwf	indf2,c
  4551                           
  4552                           ;hid.c: 34:    h->hid_display = h->sequence;
  4553                           ;stkvar	_h @ sp[(0)+-1]
  4554  01715C  0EFF               	movlw	-1
  4555  01715E  50E3               	movf	plusw1,w,c
  4556  017160  6ED9               	movwf	fsr2l,c
  4557  017162  6ADA               	clrf	fsr2h,c
  4558  017164  0E06               	movlw	6
  4559  017166  26D9               	addwf	fsr2l,f,c
  4560                           
  4561                           ;stkvar	_h @ sp[(0)+-1]
  4562  017168  0EFF               	movlw	-1
  4563  01716A  50E3               	movf	plusw1,w,c
  4564  01716C  6EE9               	movwf	fsr0l,c
  4565  01716E  6AEA               	clrf	fsr0h,c
  4566  017170  006F FF7F FFEF     	movff	indf2,indf0
  4567                           
  4568                           ;hid.c: 35:    h->wait_select = 1;
  4569                           ;stkvar	_h @ sp[(0)+-1]
  4570  017176  0EFF               	movlw	-1
  4571  017178  50E3               	movf	plusw1,w,c
  4572  01717A  6ED9               	movwf	fsr2l,c
  4573  01717C  6ADA               	clrf	fsr2h,c
  4574  01717E  0E02               	movlw	2
  4575  017180  26D9               	addwf	fsr2l,f,c
  4576  017182  0E01               	movlw	1
  4577  017184                     L1:
  4578  017184  6EDF               	movwf	indf2,c
  4579  017186  D013               	goto	l1902
  4580  017188                     l9450:
  4581                           
  4582                           ;stkvar	_h @ sp[(0)+-1]
  4583  017188  0EFF               	movlw	-1
  4584  01718A  50E3               	movf	plusw1,w,c
  4585  01718C  6ED9               	movwf	fsr2l,c
  4586  01718E  6ADA               	clrf	fsr2h,c
  4587  017190  0E01               	movlw	1
  4588  017192  26D9               	addwf	fsr2l,f,c
  4589  017194  50DF               	movf	indf2,w,c
  4590  017196  6E2F               	movwf	(btemp+10)^0,c
  4591  017198  6A30               	clrf	(btemp+11)^0,c
  4592                           
  4593                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4594                           ; Switch size 1, requested type "simple"
  4595                           ; Number of cases is 1, Range of values is 0 to 0
  4596                           ; switch strategies available:
  4597                           ; Name         Instructions Cycles
  4598                           ; simple_byte            4     3 (average)
  4599                           ;	Chosen strategy is simple_byte
  4600  01719A  5030               	movf	(btemp+11)^0,w,c
  4601  01719C  0A00               	xorlw	0	; case 0
  4602  01719E  A4D8               	btfss	status,2,c
  4603  0171A0  D7BB               	goto	l9440
  4604                           
  4605                           ; Switch size 1, requested type "simple"
  4606                           ; Number of cases is 2, Range of values is 0 to 1
  4607                           ; switch strategies available:
  4608                           ; Name         Instructions Cycles
  4609                           ; simple_byte            7     4 (average)
  4610                           ;	Chosen strategy is simple_byte
  4611  0171A2  502F               	movf	(btemp+10)^0,w,c
  4612  0171A4  0A00               	xorlw	0	; case 0
  4613  0171A6  B4D8               	btfsc	status,2,c
  4614  0171A8  D789               	goto	l9428
  4615  0171AA  0A01               	xorlw	1	; case 1
  4616  0171AC  D7B5               	goto	l9440
  4617  0171AE                     l1902:
  4618                           
  4619                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  4620  0171AE  52E5               	movf	postdec1,f,c
  4621  0171B0  0012               	return		;funcret
  4622  0171B2                     __end_of_hid_display:
  4623                           	opt callstack 0
  4624                           
  4625 ;; *************** function _hid_input *****************
  4626 ;; Defined at:
  4627 ;;		line 3 in file "hid.c"
  4628 ;; Parameters:    Size  Location     Type
  4629 ;;  h               1  [STACK] PTR struct H_data
  4630 ;;		 -> H(7), 
  4631 ;; Auto vars:     Size  Location     Type
  4632 ;;		None
  4633 ;; Return value:  Size  Location     Type
  4634 ;;                  1  [STACK] PTR struct H_data
  4635 ;; Registers used:
  4636 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  4637 ;; Tracked objects:
  4638 ;;		On entry : 0/1
  4639 ;;		On exit  : 0/0
  4640 ;;		Unchanged: 0/0
  4641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4646 ;;Total ram usage:        0 bytes
  4647 ;; Hardware stack levels used:    1
  4648 ;; Hardware stack levels required when called:    8
  4649 ;; This function calls:
  4650 ;;		_get_switch
  4651 ;; This function is called by:
  4652 ;;		_hid_display
  4653 ;; This function uses a reentrant model
  4654 ;;
  4655                           
  4656                           	psect	text14
  4657  017C7E                     __ptext14:
  4658                           	opt callstack 0
  4659  017C7E                     _hid_input:
  4660                           	opt callstack 21
  4661                           
  4662                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  4663                           
  4664                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4665                           ;incstack = 0
  4666  017C7E  0E02               	movlw	2
  4667  017C80  6EE6               	movwf	postinc1,c
  4668  017C82  EC01  F0C6         	call	_get_switch	;wreg free
  4669  017C86  5025               	movf	btemp^0,w,c
  4670  017C88  B4D8               	btfsc	status,2,c
  4671  017C8A  D01C               	goto	l9176
  4672                           
  4673                           ;hid.c: 6:   h->wait_select = 0;
  4674                           ;stkvar	_h @ sp[(0)+-1]
  4675  017C8C  0EFF               	movlw	-1
  4676  017C8E  50E3               	movf	plusw1,w,c
  4677  017C90  6ED9               	movwf	fsr2l,c
  4678  017C92  6ADA               	clrf	fsr2h,c
  4679  017C94  0E02               	movlw	2
  4680  017C96  26D9               	addwf	fsr2l,f,c
  4681  017C98  0E00               	movlw	0
  4682  017C9A  6EDF               	movwf	indf2,c
  4683                           
  4684                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  4685  017C9C  0E02               	movlw	2
  4686  017C9E  6EE6               	movwf	postinc1,c
  4687  017CA0  EC01  F0C6         	call	_get_switch	;wreg free
  4688  017CA4  5025               	movf	btemp^0,w,c
  4689  017CA6  B4D8               	btfsc	status,2,c
  4690  017CA8  D003               	goto	u8510
  4691  017CAA  6A30               	clrf	(btemp+11)^0,c
  4692  017CAC  2A30               	incf	(btemp+11)^0,f,c
  4693  017CAE  D001               	goto	u8528
  4694  017CB0                     u8510:
  4695  017CB0  6A30               	clrf	(btemp+11)^0,c
  4696  017CB2                     u8528:
  4697                           
  4698                           ;stkvar	_h @ sp[(0)+-1]
  4699  017CB2  0EFF               	movlw	-1
  4700  017CB4  50E3               	movf	plusw1,w,c
  4701  017CB6  6ED9               	movwf	fsr2l,c
  4702  017CB8  6ADA               	clrf	fsr2h,c
  4703  017CBA  0E03               	movlw	3
  4704  017CBC  26D9               	addwf	fsr2l,f,c
  4705  017CBE  0060  F0C3  FFDF   	movff	btemp+11,indf2
  4706  017CC4                     l9176:
  4707                           
  4708                           ;hid.c: 10:  if (get_switch(SENTER)) {
  4709  017CC4  0E03               	movlw	3
  4710  017CC6  6EE6               	movwf	postinc1,c
  4711  017CC8  EC01  F0C6         	call	_get_switch	;wreg free
  4712  017CCC  5025               	movf	btemp^0,w,c
  4713  017CCE  B4D8               	btfsc	status,2,c
  4714  017CD0  D01C               	goto	l1893
  4715                           
  4716                           ;hid.c: 11:   h->wait_enter = 0;
  4717                           ;stkvar	_h @ sp[(0)+-1]
  4718  017CD2  0EFF               	movlw	-1
  4719  017CD4  50E3               	movf	plusw1,w,c
  4720  017CD6  6ED9               	movwf	fsr2l,c
  4721  017CD8  6ADA               	clrf	fsr2h,c
  4722  017CDA  0E04               	movlw	4
  4723  017CDC  26D9               	addwf	fsr2l,f,c
  4724  017CDE  0E00               	movlw	0
  4725  017CE0  6EDF               	movwf	indf2,c
  4726                           
  4727                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  4728  017CE2  0E03               	movlw	3
  4729  017CE4  6EE6               	movwf	postinc1,c
  4730  017CE6  EC01  F0C6         	call	_get_switch	;wreg free
  4731  017CEA  5025               	movf	btemp^0,w,c
  4732  017CEC  B4D8               	btfsc	status,2,c
  4733  017CEE  D003               	goto	u8540
  4734  017CF0  6A30               	clrf	(btemp+11)^0,c
  4735  017CF2  2A30               	incf	(btemp+11)^0,f,c
  4736  017CF4  D001               	goto	u8558
  4737  017CF6                     u8540:
  4738  017CF6  6A30               	clrf	(btemp+11)^0,c
  4739  017CF8                     u8558:
  4740                           
  4741                           ;stkvar	_h @ sp[(0)+-1]
  4742  017CF8  0EFF               	movlw	-1
  4743  017CFA  50E3               	movf	plusw1,w,c
  4744  017CFC  6ED9               	movwf	fsr2l,c
  4745  017CFE  6ADA               	clrf	fsr2h,c
  4746  017D00  0E05               	movlw	5
  4747  017D02  26D9               	addwf	fsr2l,f,c
  4748  017D04  0060  F0C3  FFDF   	movff	btemp+11,indf2
  4749  017D0A                     l1893:
  4750                           
  4751                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  4752  017D0A  52E5               	movf	postdec1,f,c
  4753  017D0C  0012               	return		;funcret
  4754  017D0E                     __end_of_hid_input:
  4755                           	opt callstack 0
  4756                           
  4757 ;; *************** function _get_switch *****************
  4758 ;; Defined at:
  4759 ;;		line 18 in file "dio.c"
  4760 ;; Parameters:    Size  Location     Type
  4761 ;;  i               1  [STACK] unsigned char 
  4762 ;; Auto vars:     Size  Location     Type
  4763 ;;		None
  4764 ;; Return value:  Size  Location     Type
  4765 ;;                  1  [STACK] enum E17030
  4766 ;; Registers used:
  4767 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  4768 ;; Tracked objects:
  4769 ;;		On entry : 0/2
  4770 ;;		On exit  : 0/0
  4771 ;;		Unchanged: 0/0
  4772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4777 ;;Total ram usage:        0 bytes
  4778 ;; Hardware stack levels used:    1
  4779 ;; Hardware stack levels required when called:    7
  4780 ;; This function calls:
  4781 ;;		Nothing
  4782 ;; This function is called by:
  4783 ;;		_main
  4784 ;;		_hid_input
  4785 ;; This function uses a reentrant model
  4786 ;;
  4787                           
  4788                           	psect	text15
  4789  018C02                     __ptext15:
  4790                           	opt callstack 0
  4791  018C02                     _get_switch:
  4792                           	opt callstack 21
  4793                           
  4794                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  4795                           ;stkvar	_i @ sp[(0)+-1]
  4796                           
  4797                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4798                           ;incstack = 0
  4799  018C02  0EFF               	movlw	-1
  4800  018C04  006F FF8C  F025    	movff	plusw1,btemp
  4801  018C0A  0E03               	movlw	3
  4802  018C0C  6425               	cpfsgt	btemp^0,c
  4803  018C0E  D002               	goto	l8096
  4804                           
  4805                           ;dio.c: 21:   return SW_OFF;
  4806  018C10  0E00               	movlw	0
  4807  018C12  D008               	goto	L2
  4808  018C14                     l8096:
  4809                           
  4810                           ;dio.c: 23:  return S.button[i].sw;
  4811                           ;stkvar	_i @ sp[(0)+-1]
  4812  018C14  0EFF               	movlw	-1
  4813  018C16  50E3               	movf	plusw1,w,c
  4814  018C18  0D05               	mullw	5
  4815  018C1A  50F3               	movf	243,w,c
  4816  018C1C  0F60               	addlw	low _S
  4817  018C1E  6ED9               	movwf	fsr2l,c
  4818  018C20  6ADA               	clrf	fsr2h,c
  4819  018C22  50DF               	movf	indf2,w,c
  4820  018C24                     L2:
  4821  018C24  6E25               	movwf	btemp^0,c
  4822                           
  4823                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  4824  018C26  52E5               	movf	postdec1,f,c
  4825  018C28  0012               	return		;funcret
  4826  018C2A                     __end_of_get_switch:
  4827                           	opt callstack 0
  4828                           
  4829 ;; *************** function _eaDogM_WriteCommand *****************
  4830 ;; Defined at:
  4831 ;;		line 173 in file "eadog.c"
  4832 ;; Parameters:    Size  Location     Type
  4833 ;;  cmd             1  [STACK] const unsigned char 
  4834 ;; Auto vars:     Size  Location     Type
  4835 ;;		None
  4836 ;; Return value:  Size  Location     Type
  4837 ;;                  1  [STACK] void 
  4838 ;; Registers used:
  4839 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4840 ;; Tracked objects:
  4841 ;;		On entry : 3F/3D
  4842 ;;		On exit  : 3F/0
  4843 ;;		Unchanged: 0/0
  4844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4849 ;;Total ram usage:        0 bytes
  4850 ;; Hardware stack levels used:    1
  4851 ;; Hardware stack levels required when called:   17
  4852 ;; This function calls:
  4853 ;;		_send_lcd_cmd_dma
  4854 ;; This function is called by:
  4855 ;;		_main
  4856 ;; This function uses a reentrant model
  4857 ;;
  4858                           
  4859                           	psect	text16
  4860  019184                     __ptext16:
  4861                           	opt callstack 0
  4862  019184                     _eaDogM_WriteCommand:
  4863                           	opt callstack 13
  4864                           
  4865                           ;eadog.c: 173: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 174: {;eadog.c: 175:
      +                            send_lcd_cmd_dma(cmd);
  4866                           ;stkvar	_cmd @ sp[(0)+-1]
  4867                           
  4868                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4869                           ;incstack = 0
  4870  019184  0EFF               	movlw	-1
  4871  019186  50E3               	movf	plusw1,w,c
  4872  019188  6EE6               	movwf	postinc1,c
  4873  01918A  EC23  F0C2         	call	_send_lcd_cmd_dma	;wreg free
  4874                           
  4875                           ; BSR set to: 0
  4876                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  4877  01918E  52E5               	movf	postdec1,f,c
  4878  019190  0012               	return		;funcret
  4879  019192                     __end_of_eaDogM_WriteCommand:
  4880                           	opt callstack 0
  4881                           
  4882 ;; *************** function _convert_adc_data *****************
  4883 ;; Defined at:
  4884 ;;		line 40 in file "mbmc.c"
  4885 ;; Parameters:    Size  Location     Type
  4886 ;;		None
  4887 ;; Auto vars:     Size  Location     Type
  4888 ;;  i               1  [STACK] unsigned char 
  4889 ;; Return value:  Size  Location     Type
  4890 ;;                  1  [STACK] void 
  4891 ;; Registers used:
  4892 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4893 ;; Tracked objects:
  4894 ;;		On entry : 0/1
  4895 ;;		On exit  : 0/0
  4896 ;;		Unchanged: 0/0
  4897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4902 ;;Total ram usage:        0 bytes
  4903 ;; Hardware stack levels used:    1
  4904 ;; Hardware stack levels required when called:   10
  4905 ;; This function calls:
  4906 ;;		_conv_raw_result
  4907 ;;		_lp_filter
  4908 ;; This function is called by:
  4909 ;;		_main
  4910 ;; This function uses a reentrant model
  4911 ;;
  4912                           
  4913                           	psect	text17
  4914  0176BA                     __ptext17:
  4915                           	opt callstack 0
  4916  0176BA                     _convert_adc_data:
  4917                           	opt callstack 0
  4918                           
  4919                           ; BSR set to: 0
  4920                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4921  0176BA  52E6               	movf	postinc1,f,c
  4922                           
  4923                           ;mbmc.c: 42:  uint8_t i = 0;
  4924                           ;stkvar	_i @ sp[(-1)+0]
  4925                           
  4926                           ;incstack = 0
  4927  0176BC  0EFF               	movlw	-1
  4928  0176BE  6AE3               	clrf	plusw1,c
  4929  0176C0                     l9402:
  4930                           
  4931                           ;mbmc.c: 45:   if (V.calib) {
  4932  0176C0  0102               	movlb	2	; () banked
  4933  0176C2  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  4934  0176C4  B4D8               	btfsc	status,2,c
  4935  0176C6  D01B               	goto	l9406
  4936                           
  4937                           ; BSR set to: 2
  4938                           ;mbmc.c: 46:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  4939  0176C8  0E01               	movlw	1
  4940  0176CA  6EE6               	movwf	postinc1,c
  4941                           
  4942                           ;stkvar	_i @ sp[(-2)+0]
  4943  0176CC  0EFE               	movlw	-2
  4944  0176CE  50E3               	movf	plusw1,w,c
  4945  0176D0  6EE6               	movwf	postinc1,c
  4946  0176D2  0E01               	movlw	1
  4947  0176D4  6EE6               	movwf	postinc1,c
  4948                           
  4949                           ;stkvar	_i @ sp[(-4)+0]
  4950  0176D6  0EFC               	movlw	-4
  4951  0176D8  50E3               	movf	plusw1,w,c
  4952  0176DA  6EE6               	movwf	postinc1,c
  4953  0176DC  ECB8  F09D         	call	_conv_raw_result	;wreg free
  4954  0176E0  0060  F097  FFE6   	movff	btemp,postinc1
  4955  0176E6  0060  F09B  FFE6   	movff	btemp+1,postinc1
  4956  0176EC  0060  F09F  FFE6   	movff	btemp+2,postinc1
  4957  0176F2  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  4958  0176F8  ECAC  F0B0         	call	_lp_filter	;wreg free
  4959  0176FC  D01A               	goto	L3
  4960  0176FE                     l9406:
  4961                           
  4962                           ; BSR set to: 2
  4963                           ;mbmc.c: 48:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  4964  0176FE  0E00               	movlw	0
  4965  017700  6EE6               	movwf	postinc1,c
  4966                           
  4967                           ;stkvar	_i @ sp[(-2)+0]
  4968  017702  0EFE               	movlw	-2
  4969  017704  50E3               	movf	plusw1,w,c
  4970  017706  6EE6               	movwf	postinc1,c
  4971  017708  0E00               	movlw	0
  4972  01770A  6EE6               	movwf	postinc1,c
  4973                           
  4974                           ;stkvar	_i @ sp[(-4)+0]
  4975  01770C  0EFC               	movlw	-4
  4976  01770E  50E3               	movf	plusw1,w,c
  4977  017710  6EE6               	movwf	postinc1,c
  4978  017712  ECB8  F09D         	call	_conv_raw_result	;wreg free
  4979  017716  0060  F097  FFE6   	movff	btemp,postinc1
  4980  01771C  0060  F09B  FFE6   	movff	btemp+1,postinc1
  4981  017722  0060  F09F  FFE6   	movff	btemp+2,postinc1
  4982  017728  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  4983  01772E  ECAC  F0B0         	call	_lp_filter	;wreg free
  4984  017732                     L3:
  4985                           
  4986                           ;stkvar	_i @ sp[(-1)+0]
  4987  017732  0EFF               	movlw	-1
  4988  017734  50E3               	movf	plusw1,w,c
  4989  017736  0D04               	mullw	4
  4990  017738  0E00               	movlw	low _C
  4991  01773A  24F3               	addwf	243,w,c
  4992  01773C  6ED9               	movwf	fsr2l,c
  4993  01773E  0E01               	movlw	high _C
  4994  017740  20F4               	addwfc	prodh,w,c
  4995  017742  6EDA               	movwf	fsr2h,c
  4996  017744  0060  F097  FFDE   	movff	btemp,postinc2
  4997  01774A  0060  F09B  FFDE   	movff	btemp+1,postinc2
  4998  017750  0060  F09F  FFDE   	movff	btemp+2,postinc2
  4999  017756  0060  F0A3  FFDE   	movff	btemp+3,postinc2
  5000                           
  5001                           ;mbmc.c: 50:  } while (++i < 16);
  5002                           ;stkvar	_i @ sp[(-1)+0]
  5003  01775C  0EFF               	movlw	-1
  5004  01775E  2AE3               	incf	plusw1,f,c
  5005  017760  0EFF               	movlw	-1
  5006  017762  006F FF8C  F025    	movff	plusw1,btemp
  5007  017768  0E0F               	movlw	15
  5008  01776A  6425               	cpfsgt	btemp^0,c
  5009  01776C  D7A9               	goto	l9402
  5010                           
  5011                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  5012  01776E  52E5               	movf	postdec1,f,c
  5013  017770  0012               	return		;funcret
  5014  017772                     __end_of_convert_adc_data:
  5015                           	opt callstack 0
  5016                           
  5017 ;; *************** function _conv_raw_result *****************
  5018 ;; Defined at:
  5019 ;;		line 80 in file "daq.c"
  5020 ;; Parameters:    Size  Location     Type
  5021 ;;  chan            1  [STACK] const enum E16136
  5022 ;;  to_what         1  [STACK] const enum E16198
  5023 ;; Auto vars:     Size  Location     Type
  5024 ;;		None
  5025 ;; Return value:  Size  Location     Type
  5026 ;;                  4  [STACK] float 
  5027 ;; Registers used:
  5028 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  5029 ;; Tracked objects:
  5030 ;;		On entry : 3F/2
  5031 ;;		On exit  : 0/0
  5032 ;;		Unchanged: 0/0
  5033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5038 ;;Total ram usage:        0 bytes
  5039 ;; Hardware stack levels used:    1
  5040 ;; Hardware stack levels required when called:    9
  5041 ;; This function calls:
  5042 ;;		___fldiv
  5043 ;;		___flmul
  5044 ;;		___flsub
  5045 ;;		___xxtofl
  5046 ;;		_get_raw_result
  5047 ;;		_nanf
  5048 ;; This function is called by:
  5049 ;;		_convert_adc_data
  5050 ;; This function uses a reentrant model
  5051 ;;
  5052                           
  5053                           	psect	text18
  5054  013B70                     __ptext18:
  5055                           	opt callstack 0
  5056  013B70                     _conv_raw_result:
  5057                           	opt callstack 20
  5058                           
  5059                           ;daq.c: 80: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 81: {;daq.c: 83:  switch (to_what) {
  5060                           
  5061                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5062                           ;incstack = 0
  5063  013B70  D242               	goto	l9106
  5064  013B72                     l9052:
  5065                           
  5066                           ;daq.c: 85:   if (!(0b0011110001110111 >> chan & 0x1))
  5067                           ;stkvar	_chan @ sp[(0)+-1]
  5068  013B72  0EFF               	movlw	-1
  5069  013B74  006F FF8C  F030    	movff	plusw1,btemp+11
  5070  013B7A  0E77               	movlw	119
  5071  013B7C  6E2D               	movwf	(btemp+8)^0,c
  5072  013B7E  0E3C               	movlw	60
  5073  013B80  6E2E               	movwf	(btemp+9)^0,c
  5074  013B82  2A30               	incf	(btemp+11)^0,f,c
  5075  013B84  D003               	goto	u8284
  5076  013B86                     u8285:
  5077  013B86  342E               	rlcf	(btemp+9)^0,w,c
  5078  013B88  322E               	rrcf	(btemp+9)^0,f,c
  5079  013B8A  322D               	rrcf	(btemp+8)^0,f,c
  5080  013B8C                     u8284:
  5081  013B8C  2E30               	decfsz	(btemp+11)^0,f,c
  5082  013B8E  D7FB               	goto	u8285
  5083  013B90  B02D               	btfsc	(btemp+8)^0,0,c
  5084  013B92  D007               	goto	l9058
  5085                           
  5086                           ;daq.c: 86:    return nanf("");
  5087  013B94  0E6B               	movlw	low (STR_39+18)
  5088  013B96  6EE6               	movwf	postinc1,c
  5089  013B98  0EFE               	movlw	high (STR_39+18)
  5090  013B9A  6EE6               	movwf	postinc1,c
  5091  013B9C  EC0B  F0C1         	call	_nanf	;wreg free
  5092  013BA0  D23A               	goto	l1765
  5093  013BA2                     l9058:
  5094                           
  5095                           ;daq.c: 88:   if (0b0000000000000011 >> chan & 0x1) {
  5096                           ;stkvar	_chan @ sp[(0)+-1]
  5097  013BA2  0EFF               	movlw	-1
  5098  013BA4  006F FF8C  F030    	movff	plusw1,btemp+11
  5099  013BAA  0E03               	movlw	3
  5100  013BAC  6E2D               	movwf	(btemp+8)^0,c
  5101  013BAE  0E00               	movlw	0
  5102  013BB0  6E2E               	movwf	(btemp+9)^0,c
  5103  013BB2  2A30               	incf	(btemp+11)^0,f,c
  5104  013BB4  D003               	goto	u8304
  5105  013BB6                     u8305:
  5106  013BB6  342E               	rlcf	(btemp+9)^0,w,c
  5107  013BB8  322E               	rrcf	(btemp+9)^0,f,c
  5108  013BBA  322D               	rrcf	(btemp+8)^0,f,c
  5109  013BBC                     u8304:
  5110  013BBC  2E30               	decfsz	(btemp+11)^0,f,c
  5111  013BBE  D7FB               	goto	u8305
  5112  013BC0  A02D               	btfss	(btemp+8)^0,0,c
  5113  013BC2  D0EB               	goto	l9072
  5114                           
  5115                           ;daq.c: 89:    if (0b0000000000000001 >> chan & 0x1) {
  5116                           ;stkvar	_chan @ sp[(0)+-1]
  5117  013BC4  0EFF               	movlw	-1
  5118  013BC6  006F FF8C  F030    	movff	plusw1,btemp+11
  5119  013BCC  0E01               	movlw	1
  5120  013BCE  6E2D               	movwf	(btemp+8)^0,c
  5121  013BD0  0E00               	movlw	0
  5122  013BD2  6E2E               	movwf	(btemp+9)^0,c
  5123  013BD4  2A30               	incf	(btemp+11)^0,f,c
  5124  013BD6  D003               	goto	u8324
  5125  013BD8                     u8325:
  5126  013BD8  342E               	rlcf	(btemp+9)^0,w,c
  5127  013BDA  322E               	rrcf	(btemp+9)^0,f,c
  5128  013BDC  322D               	rrcf	(btemp+8)^0,f,c
  5129  013BDE                     u8324:
  5130  013BDE  2E30               	decfsz	(btemp+11)^0,f,c
  5131  013BE0  D7FB               	goto	u8325
  5132  013BE2  A02D               	btfss	(btemp+8)^0,0,c
  5133  013BE4  D06D               	goto	l9068
  5134                           
  5135                           ;daq.c: 90:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.08500
      +                          00;
  5136  013BE6  0E7B               	movlw	123
  5137  013BE8  6EE6               	movwf	postinc1,c
  5138  013BEA  0E14               	movlw	20
  5139  013BEC  6EE6               	movwf	postinc1,c
  5140  013BEE  0EAE               	movlw	174
  5141  013BF0  6EE6               	movwf	postinc1,c
  5142  013BF2  0E3D               	movlw	61
  5143  013BF4  6EE6               	movwf	postinc1,c
  5144  013BF6  0060  F38C  F02D   	movff	_R+32,btemp+8	;volatile
  5145  013BFC  0060  F390  F02E   	movff	_R+33,btemp+9	;volatile
  5146  013C02  0E00               	movlw	0
  5147  013C04  BE2E               	btfsc	(btemp+9)^0,7,c
  5148  013C06  0EFF               	movlw	255
  5149  013C08  6E2F               	movwf	(btemp+10)^0,c
  5150  013C0A  6E30               	movwf	(btemp+11)^0,c
  5151  013C0C  0060  F0B7  FFE6   	movff	btemp+8,postinc1
  5152  013C12  0060  F0BB  FFE6   	movff	btemp+9,postinc1
  5153  013C18  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  5154  013C1E  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  5155  013C24  0E01               	movlw	1
  5156  013C26  6EE6               	movwf	postinc1,c
  5157  013C28  ECC6  F0AE         	call	___xxtofl	;wreg free
  5158  013C2C  0060  F097  FFE6   	movff	btemp,postinc1
  5159  013C32  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5160  013C38  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5161  013C3E  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5162                           
  5163                           ;stkvar	_chan @ sp[(-8)+-1]
  5164  013C44  0EF7               	movlw	-9
  5165  013C46  50E3               	movf	plusw1,w,c
  5166  013C48  6EE6               	movwf	postinc1,c
  5167  013C4A  ECF2  F0C7         	call	_get_raw_result	;wreg free
  5168  013C4E  0060  F094  F02F   	movff	btemp,btemp+10
  5169  013C54  0060  F098  F030   	movff	btemp+1,btemp+11
  5170  013C5A  502F               	movf	(btemp+10)^0,w,c
  5171  013C5C  6E29               	movwf	(btemp+4)^0,c
  5172  013C5E  5030               	movf	(btemp+11)^0,w,c
  5173  013C60  6E2A               	movwf	(btemp+5)^0,c
  5174  013C62  6A2B               	clrf	(btemp+6)^0,c
  5175  013C64  6A2C               	clrf	(btemp+7)^0,c
  5176  013C66  0060  F0A7  FFE6   	movff	btemp+4,postinc1
  5177  013C6C  0060  F0AB  FFE6   	movff	btemp+5,postinc1
  5178  013C72  0060  F0AF  FFE6   	movff	btemp+6,postinc1
  5179  013C78  0060  F0B3  FFE6   	movff	btemp+7,postinc1
  5180  013C7E  0E00               	movlw	0
  5181  013C80  6EE6               	movwf	postinc1,c
  5182  013C82  ECC6  F0AE         	call	___xxtofl	;wreg free
  5183  013C86  0060  F097  FFE6   	movff	btemp,postinc1
  5184  013C8C  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5185  013C92  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5186  013C98  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5187  013C9E  EC08  F0C3         	call	___flsub	;wreg free
  5188  013CA2  0060  F097  FFE6   	movff	btemp,postinc1
  5189  013CA8  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5190  013CAE  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5191  013CB4  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5192  013CBA  EC08  F093         	call	___flmul	;wreg free
  5193  013CBE  D1AB               	goto	l1765
  5194  013CC0                     l9068:
  5195                           
  5196                           ;daq.c: 92:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.03500
      +                          00;
  5197  013CC0  0E29               	movlw	41
  5198  013CC2  6EE6               	movwf	postinc1,c
  5199  013CC4  0E5C               	movlw	92
  5200  013CC6  6EE6               	movwf	postinc1,c
  5201  013CC8  0E0F               	movlw	15
  5202  013CCA  6EE6               	movwf	postinc1,c
  5203  013CCC  0E3D               	movlw	61
  5204  013CCE  6EE6               	movwf	postinc1,c
  5205  013CD0  0060  F394  F02D   	movff	_R+34,btemp+8	;volatile
  5206  013CD6  0060  F398  F02E   	movff	_R+35,btemp+9	;volatile
  5207  013CDC  0E00               	movlw	0
  5208  013CDE  BE2E               	btfsc	(btemp+9)^0,7,c
  5209  013CE0  0EFF               	movlw	255
  5210  013CE2  6E2F               	movwf	(btemp+10)^0,c
  5211  013CE4  6E30               	movwf	(btemp+11)^0,c
  5212  013CE6  0060  F0B7  FFE6   	movff	btemp+8,postinc1
  5213  013CEC  0060  F0BB  FFE6   	movff	btemp+9,postinc1
  5214  013CF2  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  5215  013CF8  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  5216  013CFE  0E01               	movlw	1
  5217  013D00  6EE6               	movwf	postinc1,c
  5218  013D02  ECC6  F0AE         	call	___xxtofl	;wreg free
  5219  013D06  0060  F097  FFE6   	movff	btemp,postinc1
  5220  013D0C  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5221  013D12  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5222  013D18  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5223                           
  5224                           ;stkvar	_chan @ sp[(-8)+-1]
  5225  013D1E  0EF7               	movlw	-9
  5226  013D20  50E3               	movf	plusw1,w,c
  5227  013D22  6EE6               	movwf	postinc1,c
  5228  013D24  ECF2  F0C7         	call	_get_raw_result	;wreg free
  5229  013D28  0060  F094  F02F   	movff	btemp,btemp+10
  5230  013D2E  0060  F098  F030   	movff	btemp+1,btemp+11
  5231  013D34  502F               	movf	(btemp+10)^0,w,c
  5232  013D36  6E29               	movwf	(btemp+4)^0,c
  5233  013D38  5030               	movf	(btemp+11)^0,w,c
  5234  013D3A  6E2A               	movwf	(btemp+5)^0,c
  5235  013D3C  6A2B               	clrf	(btemp+6)^0,c
  5236  013D3E  6A2C               	clrf	(btemp+7)^0,c
  5237  013D40  0060  F0A7  FFE6   	movff	btemp+4,postinc1
  5238  013D46  0060  F0AB  FFE6   	movff	btemp+5,postinc1
  5239  013D4C  0060  F0AF  FFE6   	movff	btemp+6,postinc1
  5240  013D52  0060  F0B3  FFE6   	movff	btemp+7,postinc1
  5241  013D58  0E00               	movlw	0
  5242  013D5A  6EE6               	movwf	postinc1,c
  5243  013D5C  ECC6  F0AE         	call	___xxtofl	;wreg free
  5244  013D60  0060  F097  FFE6   	movff	btemp,postinc1
  5245  013D66  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5246  013D6C  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5247  013D72  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5248  013D78  EC08  F0C3         	call	___flsub	;wreg free
  5249  013D7C  0060  F097  FFE6   	movff	btemp,postinc1
  5250  013D82  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5251  013D88  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5252  013D8E  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5253  013D94  EC08  F093         	call	___flmul	;wreg free
  5254  013D98  D13E               	goto	l1765
  5255  013D9A                     l9072:
  5256                           
  5257                           ;daq.c: 95:    if (0b0000100000000000 >> chan & 0x1) {
  5258                           ;stkvar	_chan @ sp[(0)+-1]
  5259  013D9A  0EFF               	movlw	-1
  5260  013D9C  006F FF8C  F030    	movff	plusw1,btemp+11
  5261  013DA2  0E00               	movlw	0
  5262  013DA4  6E2D               	movwf	(btemp+8)^0,c
  5263  013DA6  0E08               	movlw	8
  5264  013DA8  6E2E               	movwf	(btemp+9)^0,c
  5265  013DAA  2A30               	incf	(btemp+11)^0,f,c
  5266  013DAC  D003               	goto	u8344
  5267  013DAE                     u8345:
  5268  013DAE  342E               	rlcf	(btemp+9)^0,w,c
  5269  013DB0  322E               	rrcf	(btemp+9)^0,f,c
  5270  013DB2  322D               	rrcf	(btemp+8)^0,f,c
  5271  013DB4                     u8344:
  5272  013DB4  2E30               	decfsz	(btemp+11)^0,f,c
  5273  013DB6  D7FB               	goto	u8345
  5274  013DB8  A02D               	btfss	(btemp+8)^0,0,c
  5275  013DBA  D008               	goto	l9080
  5276                           
  5277                           ;daq.c: 96:     return 25.0;
  5278  013DBC  0E00               	movlw	0
  5279  013DBE  6E25               	movwf	btemp^0,c
  5280  013DC0  0E00               	movlw	0
  5281  013DC2  6E26               	movwf	(btemp+1)^0,c
  5282  013DC4  0EC8               	movlw	200
  5283  013DC6  6E27               	movwf	(btemp+2)^0,c
  5284  013DC8  0E41               	movlw	65
  5285  013DCA  D113               	goto	L4
  5286  013DCC                     l9080:
  5287                           
  5288                           ;daq.c: 98:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  5289  013DCC  0E00               	movlw	0
  5290  013DCE  6EE6               	movwf	postinc1,c
  5291  013DD0  0E00               	movlw	0
  5292  013DD2  6EE6               	movwf	postinc1,c
  5293  013DD4  0E7A               	movlw	122
  5294  013DD6  6EE6               	movwf	postinc1,c
  5295  013DD8  0E44               	movlw	68
  5296  013DDA  6EE6               	movwf	postinc1,c
  5297  013DDC  0E61               	movlw	97
  5298  013DDE  6EE6               	movwf	postinc1,c
  5299  013DE0  0E03               	movlw	3
  5300  013DE2  6EE6               	movwf	postinc1,c
  5301  013DE4  0E84               	movlw	132
  5302  013DE6  6EE6               	movwf	postinc1,c
  5303  013DE8  0E40               	movlw	64
  5304  013DEA  6EE6               	movwf	postinc1,c
  5305                           
  5306                           ;stkvar	_chan @ sp[(-8)+-1]
  5307  013DEC  0EF7               	movlw	-9
  5308  013DEE  50E3               	movf	plusw1,w,c
  5309  013DF0  6EE6               	movwf	postinc1,c
  5310  013DF2  ECF2  F0C7         	call	_get_raw_result	;wreg free
  5311  013DF6  0060  F094  F02F   	movff	btemp,btemp+10
  5312  013DFC  0060  F098  F030   	movff	btemp+1,btemp+11
  5313  013E02  502F               	movf	(btemp+10)^0,w,c
  5314  013E04  6E29               	movwf	(btemp+4)^0,c
  5315  013E06  5030               	movf	(btemp+11)^0,w,c
  5316  013E08  6E2A               	movwf	(btemp+5)^0,c
  5317  013E0A  6A2B               	clrf	(btemp+6)^0,c
  5318  013E0C  6A2C               	clrf	(btemp+7)^0,c
  5319  013E0E  0060  F0A7  FFE6   	movff	btemp+4,postinc1
  5320  013E14  0060  F0AB  FFE6   	movff	btemp+5,postinc1
  5321  013E1A  0060  F0AF  FFE6   	movff	btemp+6,postinc1
  5322  013E20  0060  F0B3  FFE6   	movff	btemp+7,postinc1
  5323  013E26  0E00               	movlw	0
  5324  013E28  6EE6               	movwf	postinc1,c
  5325  013E2A  ECC6  F0AE         	call	___xxtofl	;wreg free
  5326  013E2E  0060  F097  FFE6   	movff	btemp,postinc1
  5327  013E34  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5328  013E3A  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5329  013E40  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5330  013E46  EC08  F093         	call	___flmul	;wreg free
  5331  013E4A  0060  F097  FFE6   	movff	btemp,postinc1
  5332  013E50  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5333  013E56  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5334  013E5C  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5335  013E62  ECFB  F09A         	call	___fldiv	;wreg free
  5336  013E66  D0D7               	goto	l1765
  5337  013E68                     l9084:
  5338                           
  5339                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
  5340                           ;stkvar	_chan @ sp[(0)+-1]
  5341  013E68  0EFF               	movlw	-1
  5342  013E6A  006F FF8C  F030    	movff	plusw1,btemp+11
  5343  013E70  0E03               	movlw	3
  5344  013E72  6E2D               	movwf	(btemp+8)^0,c
  5345  013E74  0E00               	movlw	0
  5346  013E76  6E2E               	movwf	(btemp+9)^0,c
  5347  013E78  2A30               	incf	(btemp+11)^0,f,c
  5348  013E7A  D003               	goto	u8364
  5349  013E7C                     u8365:
  5350  013E7C  342E               	rlcf	(btemp+9)^0,w,c
  5351  013E7E  322E               	rrcf	(btemp+9)^0,f,c
  5352  013E80  322D               	rrcf	(btemp+8)^0,f,c
  5353  013E82                     u8364:
  5354  013E82  2E30               	decfsz	(btemp+11)^0,f,c
  5355  013E84  D7FB               	goto	u8365
  5356  013E86  B02D               	btfsc	(btemp+8)^0,0,c
  5357  013E88  D011               	goto	u8390
  5358                           
  5359                           ;stkvar	_chan @ sp[(0)+-1]
  5360  013E8A  0EFF               	movlw	-1
  5361  013E8C  006F FF8C  F030    	movff	plusw1,btemp+11
  5362  013E92  0E00               	movlw	0
  5363  013E94  6E2D               	movwf	(btemp+8)^0,c
  5364  013E96  0E08               	movlw	8
  5365  013E98  6E2E               	movwf	(btemp+9)^0,c
  5366  013E9A  2A30               	incf	(btemp+11)^0,f,c
  5367  013E9C  D003               	goto	u8384
  5368  013E9E                     u8385:
  5369  013E9E  342E               	rlcf	(btemp+9)^0,w,c
  5370  013EA0  322E               	rrcf	(btemp+9)^0,f,c
  5371  013EA2  322D               	rrcf	(btemp+8)^0,f,c
  5372  013EA4                     u8384:
  5373  013EA4  2E30               	decfsz	(btemp+11)^0,f,c
  5374  013EA6  D7FB               	goto	u8385
  5375  013EA8  A02D               	btfss	(btemp+8)^0,0,c
  5376  013EAA  D04E               	goto	l9092
  5377  013EAC                     u8390:
  5378                           
  5379                           ;daq.c: 104:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
  5380  013EAC  0E00               	movlw	0
  5381  013EAE  6EE6               	movwf	postinc1,c
  5382  013EB0  0E00               	movlw	0
  5383  013EB2  6EE6               	movwf	postinc1,c
  5384  013EB4  0E7A               	movlw	122
  5385  013EB6  6EE6               	movwf	postinc1,c
  5386  013EB8  0E44               	movlw	68
  5387  013EBA  6EE6               	movwf	postinc1,c
  5388  013EBC  0E00               	movlw	0
  5389  013EBE  6EE6               	movwf	postinc1,c
  5390  013EC0  0E00               	movlw	0
  5391  013EC2  6EE6               	movwf	postinc1,c
  5392  013EC4  0E20               	movlw	32
  5393  013EC6  6EE6               	movwf	postinc1,c
  5394  013EC8  0E3F               	movlw	63
  5395  013ECA  6EE6               	movwf	postinc1,c
  5396                           
  5397                           ;stkvar	_chan @ sp[(-8)+-1]
  5398  013ECC  0EF7               	movlw	-9
  5399  013ECE  50E3               	movf	plusw1,w,c
  5400  013ED0  6EE6               	movwf	postinc1,c
  5401  013ED2  ECF2  F0C7         	call	_get_raw_result	;wreg free
  5402  013ED6  0060  F094  F02F   	movff	btemp,btemp+10
  5403  013EDC  0060  F098  F030   	movff	btemp+1,btemp+11
  5404  013EE2  502F               	movf	(btemp+10)^0,w,c
  5405  013EE4  6E29               	movwf	(btemp+4)^0,c
  5406  013EE6  5030               	movf	(btemp+11)^0,w,c
  5407  013EE8  6E2A               	movwf	(btemp+5)^0,c
  5408  013EEA  6A2B               	clrf	(btemp+6)^0,c
  5409  013EEC  6A2C               	clrf	(btemp+7)^0,c
  5410  013EEE  0060  F0A7  FFE6   	movff	btemp+4,postinc1
  5411  013EF4  0060  F0AB  FFE6   	movff	btemp+5,postinc1
  5412  013EFA  0060  F0AF  FFE6   	movff	btemp+6,postinc1
  5413  013F00  0060  F0B3  FFE6   	movff	btemp+7,postinc1
  5414  013F06  0E00               	movlw	0
  5415  013F08  6EE6               	movwf	postinc1,c
  5416  013F0A  ECC6  F0AE         	call	___xxtofl	;wreg free
  5417  013F0E  0060  F097  FFE6   	movff	btemp,postinc1
  5418  013F14  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5419  013F1A  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5420  013F20  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5421  013F26  EC08  F093         	call	___flmul	;wreg free
  5422  013F2A  0060  F097  FFE6   	movff	btemp,postinc1
  5423  013F30  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5424  013F36  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5425  013F3C  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5426  013F42  ECFB  F09A         	call	___fldiv	;wreg free
  5427  013F46  D067               	goto	l1765
  5428  013F48                     l9092:
  5429                           
  5430                           ;daq.c: 106:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  5431  013F48  0E00               	movlw	0
  5432  013F4A  6EE6               	movwf	postinc1,c
  5433  013F4C  0E00               	movlw	0
  5434  013F4E  6EE6               	movwf	postinc1,c
  5435  013F50  0E7A               	movlw	122
  5436  013F52  6EE6               	movwf	postinc1,c
  5437  013F54  0E44               	movlw	68
  5438  013F56  6EE6               	movwf	postinc1,c
  5439  013F58  0E61               	movlw	97
  5440  013F5A  6EE6               	movwf	postinc1,c
  5441  013F5C  0E03               	movlw	3
  5442  013F5E  6EE6               	movwf	postinc1,c
  5443  013F60  0E84               	movlw	132
  5444  013F62  6EE6               	movwf	postinc1,c
  5445  013F64  0E40               	movlw	64
  5446  013F66  6EE6               	movwf	postinc1,c
  5447                           
  5448                           ;stkvar	_chan @ sp[(-8)+-1]
  5449  013F68  0EF7               	movlw	-9
  5450  013F6A  50E3               	movf	plusw1,w,c
  5451  013F6C  6EE6               	movwf	postinc1,c
  5452  013F6E  ECF2  F0C7         	call	_get_raw_result	;wreg free
  5453  013F72  0060  F094  F02F   	movff	btemp,btemp+10
  5454  013F78  0060  F098  F030   	movff	btemp+1,btemp+11
  5455  013F7E  502F               	movf	(btemp+10)^0,w,c
  5456  013F80  6E29               	movwf	(btemp+4)^0,c
  5457  013F82  5030               	movf	(btemp+11)^0,w,c
  5458  013F84  6E2A               	movwf	(btemp+5)^0,c
  5459  013F86  6A2B               	clrf	(btemp+6)^0,c
  5460  013F88  6A2C               	clrf	(btemp+7)^0,c
  5461  013F8A  0060  F0A7  FFE6   	movff	btemp+4,postinc1
  5462  013F90  0060  F0AB  FFE6   	movff	btemp+5,postinc1
  5463  013F96  0060  F0AF  FFE6   	movff	btemp+6,postinc1
  5464  013F9C  0060  F0B3  FFE6   	movff	btemp+7,postinc1
  5465  013FA2  0E00               	movlw	0
  5466  013FA4  6EE6               	movwf	postinc1,c
  5467  013FA6  ECC6  F0AE         	call	___xxtofl	;wreg free
  5468  013FAA  0060  F097  FFE6   	movff	btemp,postinc1
  5469  013FB0  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5470  013FB6  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5471  013FBC  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5472  013FC2  EC08  F093         	call	___flmul	;wreg free
  5473  013FC6  0060  F097  FFE6   	movff	btemp,postinc1
  5474  013FCC  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5475  013FD2  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5476  013FD8  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5477  013FDE  ECFB  F09A         	call	___fldiv	;wreg free
  5478  013FE2  D019               	goto	l1765
  5479  013FE4                     l9098:
  5480                           
  5481                           ;daq.c: 109:   return 0.0;
  5482  013FE4  0E00               	movlw	0
  5483  013FE6  6E25               	movwf	btemp^0,c
  5484  013FE8  0E00               	movlw	0
  5485  013FEA  6E26               	movwf	(btemp+1)^0,c
  5486  013FEC  0E00               	movlw	0
  5487  013FEE  6E27               	movwf	(btemp+2)^0,c
  5488  013FF0  0E00               	movlw	0
  5489  013FF2                     L4:
  5490  013FF2  6E28               	movwf	(btemp+3)^0,c
  5491  013FF4  D010               	goto	l1765
  5492  013FF6                     l9106:
  5493                           
  5494                           ;stkvar	_to_what @ sp[(0)+-2]
  5495  013FF6  0EFE               	movlw	-2
  5496  013FF8  50E3               	movf	plusw1,w,c
  5497  013FFA  6E2F               	movwf	(btemp+10)^0,c
  5498  013FFC  6A30               	clrf	(btemp+11)^0,c
  5499                           
  5500                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5501                           ; Switch size 1, requested type "simple"
  5502                           ; Number of cases is 1, Range of values is 0 to 0
  5503                           ; switch strategies available:
  5504                           ; Name         Instructions Cycles
  5505                           ; simple_byte            4     3 (average)
  5506                           ;	Chosen strategy is simple_byte
  5507  013FFE  5030               	movf	(btemp+11)^0,w,c
  5508  014000  0A00               	xorlw	0	; case 0
  5509  014002  A4D8               	btfss	status,2,c
  5510  014004  D7EF               	goto	l9098
  5511                           
  5512                           ; Switch size 1, requested type "simple"
  5513                           ; Number of cases is 2, Range of values is 0 to 1
  5514                           ; switch strategies available:
  5515                           ; Name         Instructions Cycles
  5516                           ; simple_byte            7     4 (average)
  5517                           ;	Chosen strategy is simple_byte
  5518  014006  502F               	movf	(btemp+10)^0,w,c
  5519  014008  0A00               	xorlw	0	; case 0
  5520  01400A  B4D8               	btfsc	status,2,c
  5521  01400C  D5B2               	goto	l9052
  5522  01400E  0A01               	xorlw	1	; case 1
  5523  014010  B4D8               	btfsc	status,2,c
  5524  014012  D72A               	goto	l9084
  5525  014014  D7E7               	goto	l9098
  5526  014016                     l1765:
  5527                           
  5528                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  5529  014016  52E5               	movf	postdec1,f,c
  5530  014018  52E5               	movf	postdec1,f,c
  5531  01401A  0012               	return		;funcret
  5532  01401C                     __end_of_conv_raw_result:
  5533                           	opt callstack 0
  5534                           
  5535 ;; *************** function _nanf *****************
  5536 ;; Defined at:
  5537 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
  5538 ;; Parameters:    Size  Location     Type
  5539 ;;  s               2  [STACK] PTR const unsigned char 
  5540 ;;		 -> STR_45(1), 
  5541 ;; Auto vars:     Size  Location     Type
  5542 ;;  u               4  [STACK] struct .
  5543 ;; Return value:  Size  Location     Type
  5544 ;;                  4  [STACK] float 
  5545 ;; Registers used:
  5546 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
  5547 ;; Tracked objects:
  5548 ;;		On entry : 0/2
  5549 ;;		On exit  : 0/0
  5550 ;;		Unchanged: 0/0
  5551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5556 ;;Total ram usage:        0 bytes
  5557 ;; Hardware stack levels used:    1
  5558 ;; Hardware stack levels required when called:    7
  5559 ;; This function calls:
  5560 ;;		Nothing
  5561 ;; This function is called by:
  5562 ;;		_conv_raw_result
  5563 ;; This function uses a reentrant model
  5564 ;;
  5565                           
  5566                           	psect	text19
  5567  018216                     __ptext19:
  5568                           	opt callstack 0
  5569  018216                     _nanf:
  5570                           	opt callstack 0
  5571                           
  5572                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5573  018216  52E6               	movf	postinc1,f,c
  5574  018218  52E6               	movf	postinc1,f,c
  5575  01821A  52E6               	movf	postinc1,f,c
  5576  01821C  52E6               	movf	postinc1,f,c
  5577                           
  5578                           ;incstack = 0
  5579  01821E  0EFF               	movlw	255
  5580  018220  6E2D               	movwf	(btemp+8)^0,c
  5581  018222  0EFF               	movlw	255
  5582  018224  6E2E               	movwf	(btemp+9)^0,c
  5583  018226  0EFF               	movlw	255
  5584  018228  6E2F               	movwf	(btemp+10)^0,c
  5585  01822A  0E7F               	movlw	127
  5586  01822C  6E30               	movwf	(btemp+11)^0,c
  5587                           
  5588                           ;stkvar	_u @ sp[(-4)+0]
  5589  01822E  0EFC               	movlw	-4
  5590  018230  0060  F0B7  FFE3   	movff	btemp+8,plusw1
  5591  018236  0EFD               	movlw	-3
  5592  018238  0060  F0BB  FFE3   	movff	btemp+9,plusw1
  5593  01823E  0EFE               	movlw	-2
  5594  018240  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  5595  018246  0EFF               	movlw	-1
  5596  018248  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  5597                           
  5598                           ;stkvar	_u @ sp[(-4)+0]
  5599  01824E  0EFC               	movlw	-4
  5600  018250  006F FF8C  F025    	movff	plusw1,btemp
  5601  018256  0EFD               	movlw	-3
  5602  018258  006F FF8C  F026    	movff	plusw1,btemp+1
  5603  01825E  0EFE               	movlw	-2
  5604  018260  006F FF8C  F027    	movff	plusw1,btemp+2
  5605  018266  0EFF               	movlw	-1
  5606  018268  006F FF8C  F028    	movff	plusw1,btemp+3
  5607                           
  5608                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
  5609  01826E  0EFA               	movlw	250
  5610  018270  26E1               	addwf	fsr1l,f,c
  5611  018272  0EFF               	movlw	255
  5612  018274  22E2               	addwfc	fsr1h,f,c
  5613  018276  0012               	return		;funcret
  5614  018278                     __end_of_nanf:
  5615                           	opt callstack 0
  5616                           
  5617 ;; *************** function _get_raw_result *****************
  5618 ;; Defined at:
  5619 ;;		line 72 in file "daq.c"
  5620 ;; Parameters:    Size  Location     Type
  5621 ;;  index           1  [STACK] const enum E16136
  5622 ;; Auto vars:     Size  Location     Type
  5623 ;;		None
  5624 ;; Return value:  Size  Location     Type
  5625 ;;                  2  [STACK] unsigned short 
  5626 ;; Registers used:
  5627 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  5628 ;; Tracked objects:
  5629 ;;		On entry : 0/2
  5630 ;;		On exit  : 0/0
  5631 ;;		Unchanged: 0/0
  5632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5637 ;;Total ram usage:        0 bytes
  5638 ;; Hardware stack levels used:    1
  5639 ;; Hardware stack levels required when called:    7
  5640 ;; This function calls:
  5641 ;;		Nothing
  5642 ;; This function is called by:
  5643 ;;		_main
  5644 ;;		_conv_raw_result
  5645 ;; This function uses a reentrant model
  5646 ;;
  5647                           
  5648                           	psect	text20
  5649  018FE4                     __ptext20:
  5650                           	opt callstack 0
  5651  018FE4                     _get_raw_result:
  5652                           	opt callstack 23
  5653                           
  5654                           ;daq.c: 72: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 73: {;daq.c: 
      +                          74:  return R.raw_adc[index];
  5655                           ;stkvar	_index @ sp[(0)+-1]
  5656                           
  5657                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5658                           ;incstack = 0
  5659  018FE4  0EFF               	movlw	-1
  5660  018FE6  50E3               	movf	plusw1,w,c
  5661  018FE8  0D02               	mullw	2
  5662  018FEA  50F3               	movf	243,w,c
  5663  018FEC  0FC3               	addlw	low _R
  5664  018FEE  6ED9               	movwf	fsr2l,c
  5665  018FF0  6ADA               	clrf	fsr2h,c
  5666  018FF2  006F FF78  F025    	movff	postinc2,btemp
  5667  018FF8  006F FF74  F026    	movff	postdec2,btemp+1
  5668                           
  5669                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  5670  018FFE  52E5               	movf	postdec1,f,c
  5671  019000  0012               	return		;funcret
  5672  019002                     __end_of_get_raw_result:
  5673                           	opt callstack 0
  5674                           
  5675 ;; *************** function ___xxtofl *****************
  5676 ;; Defined at:
  5677 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  5678 ;; Parameters:    Size  Location     Type
  5679 ;;  sign            1  [STACK] unsigned char 
  5680 ;;  val             4  [STACK] long 
  5681 ;; Auto vars:     Size  Location     Type
  5682 ;;  arg             4  [STACK] unsigned long 
  5683 ;;  exp             1  [STACK] unsigned char 
  5684 ;; Return value:  Size  Location     Type
  5685 ;;                  4  [STACK] unsigned char 
  5686 ;; Registers used:
  5687 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  5688 ;; Tracked objects:
  5689 ;;		On entry : 0/2
  5690 ;;		On exit  : 0/0
  5691 ;;		Unchanged: 0/0
  5692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5697 ;;Total ram usage:        0 bytes
  5698 ;; Hardware stack levels used:    1
  5699 ;; Hardware stack levels required when called:    7
  5700 ;; This function calls:
  5701 ;;		Nothing
  5702 ;; This function is called by:
  5703 ;;		_conv_raw_result
  5704 ;; This function uses a reentrant model
  5705 ;;
  5706                           
  5707                           	psect	text21
  5708  015D8C                     __ptext21:
  5709                           	opt callstack 0
  5710  015D8C                     ___xxtofl:
  5711                           	opt callstack 0
  5712                           
  5713                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5714  015D8C  0E05               	movlw	5
  5715  015D8E  26E1               	addwf	fsr1l,f,c
  5716  015D90  0E00               	movlw	0
  5717  015D92  22E2               	addwfc	fsr1h,f,c
  5718                           
  5719                           ;stkvar	_sign @ sp[(-5)+-1]
  5720                           
  5721                           ;incstack = 0
  5722  015D94  0EFA               	movlw	-6
  5723  015D96  50E3               	movf	plusw1,w,c
  5724  015D98  B4D8               	btfsc	status,2,c
  5725  015D9A  D01D               	goto	l8490
  5726                           
  5727                           ;stkvar	_val @ sp[(-5)+-5]
  5728  015D9C  0EF9               	movlw	-7
  5729  015D9E  AEE3               	btfss	plusw1,7,c
  5730  015DA0  D01A               	goto	l8490
  5731                           
  5732                           ;stkvar	_val @ sp[(-5)+-5]
  5733  015DA2  0EF6               	movlw	-10
  5734  015DA4  006F FF8C  F02D    	movff	plusw1,btemp+8
  5735  015DAA  0EF7               	movlw	-9
  5736  015DAC  006F FF8C  F02E    	movff	plusw1,btemp+9
  5737  015DB2  0EF8               	movlw	-8
  5738  015DB4  006F FF8C  F02F    	movff	plusw1,btemp+10
  5739  015DBA  0EF9               	movlw	-7
  5740  015DBC  006F FF8C  F030    	movff	plusw1,btemp+11
  5741  015DC2  1E2D               	comf	(btemp+8)^0,f,c
  5742  015DC4  1E2E               	comf	(btemp+9)^0,f,c
  5743  015DC6  1E2F               	comf	(btemp+10)^0,f,c
  5744  015DC8  1E30               	comf	(btemp+11)^0,f,c
  5745  015DCA  2A2D               	incf	(btemp+8)^0,f,c
  5746  015DCC  0E00               	movlw	0
  5747  015DCE  222E               	addwfc	(btemp+9)^0,f,c
  5748  015DD0  222F               	addwfc	(btemp+10)^0,f,c
  5749  015DD2  2230               	addwfc	(btemp+11)^0,f,c
  5750  015DD4  D010               	goto	L5
  5751  015DD6                     l8490:
  5752                           
  5753                           ;stkvar	_val @ sp[(-5)+-5]
  5754  015DD6  0EF6               	movlw	-10
  5755  015DD8  006F FF8C  F02D    	movff	plusw1,btemp+8
  5756  015DDE  0EF7               	movlw	-9
  5757  015DE0  006F FF8C  F02E    	movff	plusw1,btemp+9
  5758  015DE6  0EF8               	movlw	-8
  5759  015DE8  006F FF8C  F02F    	movff	plusw1,btemp+10
  5760  015DEE  0EF9               	movlw	-7
  5761  015DF0  006F FF8C  F030    	movff	plusw1,btemp+11
  5762  015DF6                     L5:
  5763                           
  5764                           ;stkvar	_arg @ sp[(-5)+0]
  5765  015DF6  0EFB               	movlw	-5
  5766  015DF8  0060  F0B7  FFE3   	movff	btemp+8,plusw1
  5767  015DFE  0EFC               	movlw	-4
  5768  015E00  0060  F0BB  FFE3   	movff	btemp+9,plusw1
  5769  015E06  0EFD               	movlw	-3
  5770  015E08  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  5771  015E0E  0EFE               	movlw	-2
  5772  015E10  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  5773                           
  5774                           ;stkvar	_val @ sp[(-5)+-5]
  5775  015E16  0EF6               	movlw	-10
  5776  015E18  50E3               	movf	plusw1,w,c
  5777  015E1A  E113               	bnz	l8498
  5778  015E1C  0EF7               	movlw	-9
  5779  015E1E  50E3               	movf	plusw1,w,c
  5780  015E20  E110               	bnz	l8498
  5781  015E22  0EF8               	movlw	-8
  5782  015E24  50E3               	movf	plusw1,w,c
  5783  015E26  E10D               	bnz	l8498
  5784  015E28  0EF9               	movlw	-7
  5785  015E2A  50E3               	movf	plusw1,w,c
  5786  015E2C  A4D8               	btfss	status,2,c
  5787  015E2E  D009               	goto	l8498
  5788  015E30  0E00               	movlw	0
  5789  015E32  6E25               	movwf	btemp^0,c
  5790  015E34  0E00               	movlw	0
  5791  015E36  6E26               	movwf	(btemp+1)^0,c
  5792  015E38  0E00               	movlw	0
  5793  015E3A  6E27               	movwf	(btemp+2)^0,c
  5794  015E3C  0E00               	movlw	0
  5795  015E3E  6E28               	movwf	(btemp+3)^0,c
  5796  015E40  D0A2               	goto	l2871
  5797  015E42                     l8498:
  5798  015E42  0E96               	movlw	150
  5799  015E44  6E30               	movwf	(btemp+11)^0,c
  5800                           
  5801                           ;stkvar	_exp @ sp[(-5)+4]
  5802  015E46  0EFF               	movlw	-1
  5803  015E48  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  5804  015E4E  D00B               	goto	l8502
  5805  015E50                     l8500:
  5806                           
  5807                           ;stkvar	_exp @ sp[(-5)+4]
  5808  015E50  0EFF               	movlw	-1
  5809  015E52  2AE3               	incf	plusw1,f,c
  5810                           
  5811                           ;stkvar	_arg @ sp[(-5)+0]
  5812  015E54  90D8               	bcf	status,0,c
  5813  015E56  0EFE               	movlw	-2
  5814  015E58  32E3               	rrcf	plusw1,f,c
  5815  015E5A  0EFD               	movlw	-3
  5816  015E5C  32E3               	rrcf	plusw1,f,c
  5817  015E5E  0EFC               	movlw	-4
  5818  015E60  32E3               	rrcf	plusw1,f,c
  5819  015E62  0EFB               	movlw	-5
  5820  015E64  32E3               	rrcf	plusw1,f,c
  5821  015E66                     l8502:
  5822                           
  5823                           ;stkvar	_arg @ sp[(-5)+0]
  5824  015E66  50E1               	movf	fsr1l,w,c
  5825  015E68  0FFB               	addlw	-5
  5826  015E6A  6ED9               	movwf	fsr2l,c
  5827  015E6C  50E2               	movf	fsr1h,w,c
  5828  015E6E  6EDA               	movwf	fsr2h,c
  5829  015E70  0EFF               	movlw	255
  5830  015E72  22DA               	addwfc	fsr2h,f,c
  5831  015E74  52DE               	movf	postinc2,f,c
  5832  015E76  52DE               	movf	postinc2,f,c
  5833  015E78  52DE               	movf	postinc2,f,c
  5834  015E7A  0EFE               	movlw	254
  5835  015E7C  14DD               	andwf	postdec2,w,c
  5836  015E7E  B4D8               	btfsc	status,2,c
  5837  015E80  D018               	goto	l8510
  5838  015E82  D7E6               	goto	l8500
  5839  015E84                     l8504:
  5840                           
  5841                           ;stkvar	_exp @ sp[(-5)+4]
  5842  015E84  0EFF               	movlw	-1
  5843  015E86  2AE3               	incf	plusw1,f,c
  5844                           
  5845                           ;stkvar	_arg @ sp[(-5)+0]
  5846  015E88  50E1               	movf	fsr1l,w,c
  5847  015E8A  0FFB               	addlw	-5
  5848  015E8C  6ED9               	movwf	fsr2l,c
  5849  015E8E  50E2               	movf	fsr1h,w,c
  5850  015E90  6EDA               	movwf	fsr2h,c
  5851  015E92  0EFF               	movlw	255
  5852  015E94  22DA               	addwfc	fsr2h,f,c
  5853  015E96  2ADE               	incf	postinc2,f,c
  5854  015E98  0E00               	movlw	0
  5855  015E9A  22DE               	addwfc	postinc2,f,c
  5856  015E9C  22DE               	addwfc	postinc2,f,c
  5857  015E9E  22DE               	addwfc	postinc2,f,c
  5858                           
  5859                           ;stkvar	_arg @ sp[(-5)+0]
  5860  015EA0  90D8               	bcf	status,0,c
  5861  015EA2  0EFE               	movlw	-2
  5862  015EA4  32E3               	rrcf	plusw1,f,c
  5863  015EA6  0EFD               	movlw	-3
  5864  015EA8  32E3               	rrcf	plusw1,f,c
  5865  015EAA  0EFC               	movlw	-4
  5866  015EAC  32E3               	rrcf	plusw1,f,c
  5867  015EAE  0EFB               	movlw	-5
  5868  015EB0  32E3               	rrcf	plusw1,f,c
  5869  015EB2                     l8510:
  5870                           
  5871                           ;stkvar	_arg @ sp[(-5)+0]
  5872  015EB2  50E1               	movf	fsr1l,w,c
  5873  015EB4  0FFB               	addlw	-5
  5874  015EB6  6ED9               	movwf	fsr2l,c
  5875  015EB8  50E2               	movf	fsr1h,w,c
  5876  015EBA  6EDA               	movwf	fsr2h,c
  5877  015EBC  0EFF               	movlw	255
  5878  015EBE  22DA               	addwfc	fsr2h,f,c
  5879  015EC0  52DE               	movf	postinc2,f,c
  5880  015EC2  52DE               	movf	postinc2,f,c
  5881  015EC4  52DE               	movf	postinc2,f,c
  5882  015EC6  0EFF               	movlw	255
  5883  015EC8  14DD               	andwf	postdec2,w,c
  5884  015ECA  B4D8               	btfsc	status,2,c
  5885  015ECC  D00C               	goto	l8514
  5886  015ECE  D7DA               	goto	l8504
  5887  015ED0                     l8512:
  5888                           
  5889                           ;stkvar	_exp @ sp[(-5)+4]
  5890  015ED0  0EFF               	movlw	-1
  5891  015ED2  06E3               	decf	plusw1,f,c
  5892                           
  5893                           ;stkvar	_arg @ sp[(-5)+0]
  5894  015ED4  90D8               	bcf	status,0,c
  5895  015ED6  0EFB               	movlw	-5
  5896  015ED8  36E3               	rlcf	plusw1,f,c
  5897  015EDA  0EFC               	movlw	-4
  5898  015EDC  36E3               	rlcf	plusw1,f,c
  5899  015EDE  0EFD               	movlw	-3
  5900  015EE0  36E3               	rlcf	plusw1,f,c
  5901  015EE2  0EFE               	movlw	-2
  5902  015EE4  36E3               	rlcf	plusw1,f,c
  5903  015EE6                     l8514:
  5904                           
  5905                           ;stkvar	_arg @ sp[(-5)+0]
  5906  015EE6  0EFD               	movlw	-3
  5907  015EE8  BEE3               	btfsc	plusw1,7,c
  5908  015EEA  D007               	goto	u8080
  5909                           
  5910                           ;stkvar	_exp @ sp[(-5)+4]
  5911  015EEC  0EFF               	movlw	-1
  5912  015EEE  006F FF8C  F025    	movff	plusw1,btemp
  5913  015EF4  0E02               	movlw	2
  5914  015EF6  6025               	cpfslt	btemp^0,c
  5915  015EF8  D7EB               	goto	l8512
  5916  015EFA                     u8080:
  5917                           
  5918                           ;stkvar	_exp @ sp[(-5)+4]
  5919  015EFA  0EFF               	movlw	-1
  5920  015EFC  B0E3               	btfsc	plusw1,0,c
  5921  015EFE  D002               	goto	l8522
  5922                           
  5923                           ;stkvar	_arg @ sp[(-5)+0]
  5924  015F00  0EFD               	movlw	-3
  5925  015F02  9EE3               	bcf	plusw1,7,c
  5926  015F04                     l8522:
  5927                           
  5928                           ;stkvar	_exp @ sp[(-5)+4]
  5929  015F04  50E1               	movf	fsr1l,w,c
  5930  015F06  0FFF               	addlw	-1
  5931  015F08  6ED9               	movwf	fsr2l,c
  5932  015F0A  50E2               	movf	fsr1h,w,c
  5933  015F0C  6EDA               	movwf	fsr2h,c
  5934  015F0E  0EFF               	movlw	255
  5935  015F10  22DA               	addwfc	fsr2h,f,c
  5936  015F12  90D8               	bcf	status,0,c
  5937  015F14  32DF               	rrcf	indf2,f,c
  5938                           
  5939                           ;stkvar	_exp @ sp[(-5)+4]
  5940  015F16  0EFF               	movlw	-1
  5941  015F18  006F FF8C  F030    	movff	plusw1,btemp+11
  5942  015F1E  0060  F0C0  F029   	movff	btemp+11,btemp+4
  5943  015F24  6A2A               	clrf	(btemp+5)^0,c
  5944  015F26  6A2B               	clrf	(btemp+6)^0,c
  5945  015F28  6A2C               	clrf	(btemp+7)^0,c
  5946  015F2A  0060  F0A4  F02C   	movff	btemp+4,btemp+7
  5947  015F30  6A2B               	clrf	(btemp+6)^0,c
  5948  015F32  6A2A               	clrf	(btemp+5)^0,c
  5949  015F34  6A29               	clrf	(btemp+4)^0,c
  5950                           
  5951                           ;stkvar	_arg @ sp[(-5)+0]
  5952  015F36  50E1               	movf	fsr1l,w,c
  5953  015F38  0FFB               	addlw	-5
  5954  015F3A  6ED9               	movwf	fsr2l,c
  5955  015F3C  50E2               	movf	fsr1h,w,c
  5956  015F3E  6EDA               	movwf	fsr2h,c
  5957  015F40  0EFF               	movlw	255
  5958  015F42  22DA               	addwfc	fsr2h,f,c
  5959  015F44  5029               	movf	(btemp+4)^0,w,c
  5960  015F46  12DE               	iorwf	postinc2,f,c
  5961  015F48  502A               	movf	(btemp+5)^0,w,c
  5962  015F4A  12DE               	iorwf	postinc2,f,c
  5963  015F4C  502B               	movf	(btemp+6)^0,w,c
  5964  015F4E  12DE               	iorwf	postinc2,f,c
  5965  015F50  502C               	movf	(btemp+7)^0,w,c
  5966  015F52  12DE               	iorwf	postinc2,f,c
  5967                           
  5968                           ;stkvar	_sign @ sp[(-5)+-1]
  5969  015F54  0EFA               	movlw	-6
  5970  015F56  50E3               	movf	plusw1,w,c
  5971  015F58  B4D8               	btfsc	status,2,c
  5972  015F5A  D005               	goto	l8532
  5973                           
  5974                           ;stkvar	_val @ sp[(-5)+-5]
  5975  015F5C  0EF9               	movlw	-7
  5976  015F5E  AEE3               	btfss	plusw1,7,c
  5977  015F60  D002               	goto	l8532
  5978                           
  5979                           ;stkvar	_arg @ sp[(-5)+0]
  5980  015F62  0EFE               	movlw	-2
  5981  015F64  8EE3               	bsf	plusw1,7,c
  5982  015F66                     l8532:
  5983                           
  5984                           ;stkvar	_arg @ sp[(-5)+0]
  5985  015F66  0EFB               	movlw	-5
  5986  015F68  006F FF8C  F025    	movff	plusw1,btemp
  5987  015F6E  0EFC               	movlw	-4
  5988  015F70  006F FF8C  F026    	movff	plusw1,btemp+1
  5989  015F76  0EFD               	movlw	-3
  5990  015F78  006F FF8C  F027    	movff	plusw1,btemp+2
  5991  015F7E  0EFE               	movlw	-2
  5992  015F80  006F FF8C  F028    	movff	plusw1,btemp+3
  5993  015F86                     l2871:
  5994                           
  5995                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  5996  015F86  0EF6               	movlw	246
  5997  015F88  26E1               	addwf	fsr1l,f,c
  5998  015F8A  0EFF               	movlw	255
  5999  015F8C  22E2               	addwfc	fsr1h,f,c
  6000  015F8E  0012               	return		;funcret
  6001  015F90                     __end_of___xxtofl:
  6002                           	opt callstack 0
  6003                           
  6004 ;; *************** function _clear_hid_pflags *****************
  6005 ;; Defined at:
  6006 ;;		line 51 in file "hid.c"
  6007 ;; Parameters:    Size  Location     Type
  6008 ;;  h               1  [STACK] PTR struct H_data
  6009 ;;		 -> H(7), 
  6010 ;; Auto vars:     Size  Location     Type
  6011 ;;		None
  6012 ;; Return value:  Size  Location     Type
  6013 ;;                  1  [STACK] void 
  6014 ;; Registers used:
  6015 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6016 ;; Tracked objects:
  6017 ;;		On entry : 3F/0
  6018 ;;		On exit  : 0/0
  6019 ;;		Unchanged: 0/0
  6020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6025 ;;Total ram usage:        0 bytes
  6026 ;; Hardware stack levels used:    1
  6027 ;; Hardware stack levels required when called:    7
  6028 ;; This function calls:
  6029 ;;		Nothing
  6030 ;; This function is called by:
  6031 ;;		_main
  6032 ;; This function uses a reentrant model
  6033 ;;
  6034                           
  6035                           	psect	text22
  6036  018ED2                     __ptext22:
  6037                           	opt callstack 0
  6038  018ED2                     _clear_hid_pflags:
  6039                           	opt callstack 23
  6040                           
  6041                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  6042                           ;stkvar	_h @ sp[(0)+-1]
  6043                           
  6044                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6045                           ;incstack = 0
  6046  018ED2  0EFF               	movlw	-1
  6047  018ED4  50E3               	movf	plusw1,w,c
  6048  018ED6  6ED9               	movwf	fsr2l,c
  6049  018ED8  6ADA               	clrf	fsr2h,c
  6050  018EDA  0E03               	movlw	3
  6051  018EDC  26D9               	addwf	fsr2l,f,c
  6052  018EDE  0E00               	movlw	0
  6053  018EE0  6EDF               	movwf	indf2,c
  6054                           
  6055                           ;hid.c: 54:  h->enter_p = SW_OFF;
  6056                           ;stkvar	_h @ sp[(0)+-1]
  6057  018EE2  0EFF               	movlw	-1
  6058  018EE4  50E3               	movf	plusw1,w,c
  6059  018EE6  6ED9               	movwf	fsr2l,c
  6060  018EE8  6ADA               	clrf	fsr2h,c
  6061  018EEA  0E05               	movlw	5
  6062  018EEC  26D9               	addwf	fsr2l,f,c
  6063  018EEE  0E00               	movlw	0
  6064  018EF0  6EDF               	movwf	indf2,c
  6065                           
  6066                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  6067  018EF2  52E5               	movf	postdec1,f,c
  6068  018EF4  0012               	return		;funcret
  6069  018EF6                     __end_of_clear_hid_pflags:
  6070                           	opt callstack 0
  6071                           
  6072 ;; *************** function _clear_adc_scan *****************
  6073 ;; Defined at:
  6074 ;;		line 64 in file "daq.c"
  6075 ;; Parameters:    Size  Location     Type
  6076 ;;		None
  6077 ;; Auto vars:     Size  Location     Type
  6078 ;;		None
  6079 ;; Return value:  Size  Location     Type
  6080 ;;                  1  [STACK] void 
  6081 ;; Registers used:
  6082 ;;		None
  6083 ;; Tracked objects:
  6084 ;;		On entry : 0/1
  6085 ;;		On exit  : 3F/0
  6086 ;;		Unchanged: 0/0
  6087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6092 ;;Total ram usage:        0 bytes
  6093 ;; Hardware stack levels used:    1
  6094 ;; Hardware stack levels required when called:    7
  6095 ;; This function calls:
  6096 ;;		Nothing
  6097 ;; This function is called by:
  6098 ;;		_main
  6099 ;; This function uses a reentrant model
  6100 ;;
  6101                           
  6102                           	psect	text23
  6103  019212                     __ptext23:
  6104                           	opt callstack 0
  6105  019212                     _clear_adc_scan:
  6106                           	opt callstack 23
  6107                           
  6108                           ;daq.c: 66:  R.done = 0;
  6109                           
  6110                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6111                           ;incstack = 0
  6112  019212  0100               	movlb	0	; () banked
  6113  019214  6BEA               	clrf	(_R+39)& (0+255),b	;volatile
  6114                           
  6115                           ; BSR set to: 0
  6116                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  6117  019216  0012               	return		;funcret
  6118  019218                     __end_of_clear_adc_scan:
  6119                           	opt callstack 0
  6120                           
  6121 ;; *************** function _check_help *****************
  6122 ;; Defined at:
  6123 ;;		line 40 in file "mconfig.c"
  6124 ;; Parameters:    Size  Location     Type
  6125 ;;  flipper         1  [STACK] const _Bool 
  6126 ;; Auto vars:     Size  Location     Type
  6127 ;;  estatus         1    0        _Bool 
  6128 ;; Return value:  Size  Location     Type
  6129 ;;                  1  [STACK] _Bool 
  6130 ;; Registers used:
  6131 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6132 ;; Tracked objects:
  6133 ;;		On entry : 3F/2
  6134 ;;		On exit  : 0/0
  6135 ;;		Unchanged: 0/0
  6136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6141 ;;Total ram usage:        0 bytes
  6142 ;; Hardware stack levels used:    1
  6143 ;; Hardware stack levels required when called:   19
  6144 ;; This function calls:
  6145 ;;		_StartTimer
  6146 ;;		_TimerDone
  6147 ;;		_display_help
  6148 ;;		_display_info
  6149 ;;		_get_vterm_ptr
  6150 ;;		_help_button
  6151 ;;		_mode_lamp_bright
  6152 ;;		_mode_lamp_dim
  6153 ;;		_set_display_info
  6154 ;;		_set_temp_display_help
  6155 ;;		_set_vterm
  6156 ;;		_sprintf
  6157 ;;		_update_lcd
  6158 ;;		_vterm_dump
  6159 ;; This function is called by:
  6160 ;;		_main
  6161 ;; This function uses a reentrant model
  6162 ;;
  6163                           
  6164                           	psect	text24
  6165  015B7A                     __ptext24:
  6166                           	opt callstack 0
  6167  015B7A                     _check_help:
  6168                           	opt callstack 11
  6169                           
  6170                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  6171                           
  6172                           ; BSR set to: 0
  6173                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6174                           ;incstack = 0
  6175  015B7A  EC53  F0C4         	call	_help_button	;wreg free
  6176  015B7E  5025               	movf	btemp^0,w,c
  6177  015B80  B4D8               	btfsc	status,2,c
  6178  015B82  D0D0               	goto	l10974
  6179  015B84  ECF9  F0C8         	call	_display_info	;wreg free
  6180  015B88  0425               	decf	btemp^0,w,c
  6181  015B8A  B4D8               	btfsc	status,2,c
  6182  015B8C  D0CB               	goto	l10974
  6183                           
  6184                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  6185  015B8E  0EDC               	movlw	220
  6186  015B90  6EE6               	movwf	postinc1,c
  6187  015B92  0E05               	movlw	5
  6188  015B94  6EE6               	movwf	postinc1,c
  6189  015B96  0E0B               	movlw	11
  6190  015B98  6EE6               	movwf	postinc1,c
  6191  015B9A  ECB4  F0C3         	call	_StartTimer	;wreg free
  6192                           
  6193                           ;mconfig.c: 48:   if (V.debug)
  6194  015B9E  0102               	movlb	2	; () banked
  6195  015BA0  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  6196                           
  6197                           ; BSR set to: 2
  6198                           ;mconfig.c: 49:    vterm_dump();
  6199  015BA2  EC0C  F0B5         	call	_vterm_dump	;wreg free
  6200                           
  6201                           ;mconfig.c: 51:   set_vterm(1);
  6202  015BA6  0E01               	movlw	1
  6203  015BA8  6EE6               	movwf	postinc1,c
  6204  015BAA  EC01  F0C8         	call	_set_vterm	;wreg free
  6205                           
  6206                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  6207  015BAE  ECF9  F0C8         	call	_display_info	;wreg free
  6208  015BB2  5025               	movf	btemp^0,w,c
  6209  015BB4  6EE6               	movwf	postinc1,c
  6210  015BB6  ECBA  F0C8         	call	_set_temp_display_help	;wreg free
  6211                           
  6212                           ; BSR set to: 2
  6213                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  6214  015BBA  0E01               	movlw	1
  6215  015BBC  6EE6               	movwf	postinc1,c
  6216  015BBE  EC10  F0C8         	call	_set_display_info	;wreg free
  6217                           
  6218                           ;mconfig.c: 54:   if (flipper) {
  6219                           ;stkvar	_flipper @ sp[(0)+-1]
  6220  015BC2  0EFF               	movlw	-1
  6221  015BC4  50E3               	movf	plusw1,w,c
  6222  015BC6  B4D8               	btfsc	status,2,c
  6223  015BC8  D019               	goto	l10960
  6224                           
  6225                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  6226  015BCA  0EC0               	movlw	low STR_27
  6227  015BCC  6EE6               	movwf	postinc1,c
  6228  015BCE  0EFF               	movlw	high STR_27
  6229  015BD0  6EE6               	movwf	postinc1,c
  6230  015BD2  0E6C               	movlw	low STR_29
  6231  015BD4  6EE6               	movwf	postinc1,c
  6232  015BD6  0EFE               	movlw	high STR_29
  6233  015BD8  6EE6               	movwf	postinc1,c
  6234  015BDA  0E01               	movlw	1
  6235  015BDC  6EE6               	movwf	postinc1,c
  6236  015BDE  0E00               	movlw	0
  6237  015BE0  6EE6               	movwf	postinc1,c
  6238  015BE2  EC56  F0C5         	call	_get_vterm_ptr	;wreg free
  6239  015BE6  0060  F097  FFE6   	movff	btemp,postinc1
  6240  015BEC  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6241  015BF2  0E06               	movlw	6
  6242  015BF4  6EE6               	movwf	postinc1,c
  6243  015BF6  ECD3  F0B7         	call	_sprintf	;wreg free
  6244                           
  6245                           ;mconfig.c: 56:   } else {
  6246  015BFA  D018               	goto	l1669
  6247  015BFC                     l10960:
  6248                           
  6249                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  6250  015BFC  0ED6               	movlw	low STR_28
  6251  015BFE  6EE6               	movwf	postinc1,c
  6252  015C00  0EFF               	movlw	high STR_28
  6253  015C02  6EE6               	movwf	postinc1,c
  6254  015C04  0E6C               	movlw	low STR_29
  6255  015C06  6EE6               	movwf	postinc1,c
  6256  015C08  0EFE               	movlw	high STR_29
  6257  015C0A  6EE6               	movwf	postinc1,c
  6258  015C0C  0E01               	movlw	1
  6259  015C0E  6EE6               	movwf	postinc1,c
  6260  015C10  0E00               	movlw	0
  6261  015C12  6EE6               	movwf	postinc1,c
  6262  015C14  EC56  F0C5         	call	_get_vterm_ptr	;wreg free
  6263  015C18  0060  F097  FFE6   	movff	btemp,postinc1
  6264  015C1E  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6265  015C24  0E06               	movlw	6
  6266  015C26  6EE6               	movwf	postinc1,c
  6267  015C28  ECD3  F0B7         	call	_sprintf	;wreg free
  6268  015C2C                     l1669:
  6269                           
  6270                           ; BSR set to: 0
  6271                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  6272  015C2C  0102               	movlb	2	; () banked
  6273  015C2E  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  6274  015C30  32E8               	rrcf	wreg,f,c
  6275  015C32  32E8               	rrcf	wreg,f,c
  6276  015C34  0B03               	andlw	3
  6277  015C36  0D24               	mullw	36
  6278  015C38  0E12               	movlw	18
  6279  015C3A  26F3               	addwf	243,f,c
  6280  015C3C  0E00               	movlw	0
  6281  015C3E  22F4               	addwfc	244,f,c
  6282  015C40  0EB1               	movlw	low _T
  6283  015C42  6E2F               	movwf	(btemp+10)^0,c
  6284  015C44  0EFD               	movlw	high _T
  6285  015C46  6E30               	movwf	(btemp+11)^0,c
  6286  015C48  50F3               	movf	243,w,c
  6287  015C4A  262F               	addwf	(btemp+10)^0,f,c
  6288  015C4C  50F4               	movf	244,w,c
  6289  015C4E  2230               	addwfc	(btemp+11)^0,f,c
  6290  015C50  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  6291  015C56  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  6292  015C5C  0ECC               	movlw	low STR_31
  6293  015C5E  6EE6               	movwf	postinc1,c
  6294  015C60  0EFF               	movlw	high STR_31
  6295  015C62  6EE6               	movwf	postinc1,c
  6296  015C64  0E01               	movlw	1
  6297  015C66  6EE6               	movwf	postinc1,c
  6298  015C68  0E01               	movlw	1
  6299  015C6A  6EE6               	movwf	postinc1,c
  6300  015C6C  EC56  F0C5         	call	_get_vterm_ptr	;wreg free
  6301  015C70  0060  F097  FFE6   	movff	btemp,postinc1
  6302  015C76  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6303  015C7C  0E06               	movlw	6
  6304  015C7E  6EE6               	movwf	postinc1,c
  6305  015C80  ECD3  F0B7         	call	_sprintf	;wreg free
  6306                           
  6307                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  6308  015C84  0102               	movlb	2	; () banked
  6309  015C86  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  6310  015C88  32E8               	rrcf	wreg,f,c
  6311  015C8A  32E8               	rrcf	wreg,f,c
  6312  015C8C  0B03               	andlw	3
  6313  015C8E  0D24               	mullw	36
  6314  015C90  0EB1               	movlw	low _T
  6315  015C92  6E2F               	movwf	(btemp+10)^0,c
  6316  015C94  0EFD               	movlw	high _T
  6317  015C96  6E30               	movwf	(btemp+11)^0,c
  6318  015C98  50F3               	movf	243,w,c
  6319  015C9A  262F               	addwf	(btemp+10)^0,f,c
  6320  015C9C  50F4               	movf	244,w,c
  6321  015C9E  2230               	addwfc	(btemp+11)^0,f,c
  6322  015CA0  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  6323  015CA6  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  6324  015CAC  0ECC               	movlw	low STR_31
  6325  015CAE  6EE6               	movwf	postinc1,c
  6326  015CB0  0EFF               	movlw	high STR_31
  6327  015CB2  6EE6               	movwf	postinc1,c
  6328  015CB4  0E01               	movlw	1
  6329  015CB6  6EE6               	movwf	postinc1,c
  6330  015CB8  0E02               	movlw	2
  6331  015CBA  6EE6               	movwf	postinc1,c
  6332  015CBC  EC56  F0C5         	call	_get_vterm_ptr	;wreg free
  6333  015CC0  0060  F097  FFE6   	movff	btemp,postinc1
  6334  015CC6  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6335  015CCC  0E06               	movlw	6
  6336  015CCE  6EE6               	movwf	postinc1,c
  6337  015CD0  ECD3  F0B7         	call	_sprintf	;wreg free
  6338                           
  6339                           ; BSR set to: 0
  6340                           ;mconfig.c: 61:   V.help_id++;
  6341  015CD4  EE20  F29B         	lfsr	2,_V+155	;volatile
  6342  015CD8  38DF               	swapf	223,w,c
  6343  015CDA  6E30               	movwf	(btemp+11)^0,c
  6344  015CDC  3230               	rrcf	(btemp+11)^0,f,c
  6345  015CDE  3030               	rrcf	(btemp+11)^0,w,c
  6346  015CE0  0B03               	andlw	3
  6347  015CE2  6E30               	movwf	(btemp+11)^0,c
  6348  015CE4  2A30               	incf	(btemp+11)^0,f,c
  6349  015CE6  3A30               	swapf	(btemp+11)^0,f,c
  6350  015CE8  3630               	rlcf	(btemp+11)^0,f,c
  6351  015CEA  3630               	rlcf	(btemp+11)^0,f,c
  6352  015CEC  50DF               	movf	223,w,c
  6353  015CEE  1830               	xorwf	(btemp+11)^0,w,c
  6354  015CF0  0B3F               	andlw	-193
  6355  015CF2  1830               	xorwf	(btemp+11)^0,w,c
  6356  015CF4  6EDF               	movwf	223,c
  6357                           
  6358                           ; BSR set to: 0
  6359                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  6360  015CF6  0EB8               	movlw	184
  6361  015CF8  6EE6               	movwf	postinc1,c
  6362  015CFA  0E0B               	movlw	11
  6363  015CFC  6EE6               	movwf	postinc1,c
  6364  015CFE  0E09               	movlw	9
  6365  015D00  6EE6               	movwf	postinc1,c
  6366  015D02  ECB4  F0C3         	call	_StartTimer	;wreg free
  6367                           
  6368                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  6369  015D06  0EB8               	movlw	184
  6370  015D08  6EE6               	movwf	postinc1,c
  6371  015D0A  0E0B               	movlw	11
  6372  015D0C  6EE6               	movwf	postinc1,c
  6373  015D0E  0E07               	movlw	7
  6374  015D10  6EE6               	movwf	postinc1,c
  6375  015D12  ECB4  F0C3         	call	_StartTimer	;wreg free
  6376                           
  6377                           ;mconfig.c: 64:   mode_lamp_bright();
  6378  015D16  ECC9  F0C8         	call	_mode_lamp_bright	;wreg free
  6379                           
  6380                           ;mconfig.c: 65:   update_lcd(1);
  6381  015D1A  0E01               	movlw	1
  6382  015D1C  6EE6               	movwf	postinc1,c
  6383  015D1E  EC4B  F0B7         	call	_update_lcd	;wreg free
  6384                           
  6385                           ;mconfig.c: 67:  } else {
  6386  015D22  D032               	goto	l1670
  6387  015D24                     l10974:
  6388                           
  6389                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  6390  015D24  0E09               	movlw	9
  6391  015D26  6EE6               	movwf	postinc1,c
  6392  015D28  EC15  F0C6         	call	_TimerDone	;wreg free
  6393  015D2C  5025               	movf	btemp^0,w,c
  6394  015D2E  B4D8               	btfsc	status,2,c
  6395  015D30  D02B               	goto	l1670
  6396                           
  6397                           ;mconfig.c: 69:    set_vterm(0);
  6398  015D32  0E00               	movlw	0
  6399  015D34  6EE6               	movwf	postinc1,c
  6400  015D36  EC01  F0C8         	call	_set_vterm	;wreg free
  6401                           
  6402                           ;mconfig.c: 70:    V.help = 0;
  6403  015D3A  0102               	movlb	2	; () banked
  6404  015D3C  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  6405                           
  6406                           ; BSR set to: 2
  6407                           ;mconfig.c: 71:    set_display_info(display_help());
  6408  015D3E  ECFD  F0C8         	call	_display_help	;wreg free
  6409  015D42  5025               	movf	btemp^0,w,c
  6410  015D44  6EE6               	movwf	postinc1,c
  6411  015D46  EC10  F0C8         	call	_set_display_info	;wreg free
  6412                           
  6413                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  6414  015D4A  0060  FA57  FFE6   	movff	_V+149,postinc1
  6415  015D50  0060  FA5B  FFE6   	movff	_V+150,postinc1
  6416  015D56  EC65  F0C8         	call	_mode_lamp_dim	;wreg free
  6417                           
  6418                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  6419  015D5A  0E0B               	movlw	11
  6420  015D5C  6EE6               	movwf	postinc1,c
  6421  015D5E  EC15  F0C6         	call	_TimerDone	;wreg free
  6422  015D62  5025               	movf	btemp^0,w,c
  6423  015D64  B4D8               	btfsc	status,2,c
  6424  015D66  D010               	goto	l1670
  6425                           
  6426                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  6427  015D68  0102               	movlb	2	; () banked
  6428  015D6A  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  6429  015D6C  A4D8               	btfss	status,2,c
  6430  015D6E  D002               	goto	u10670
  6431  015D70  0E01               	movlw	1
  6432  015D72  D001               	goto	u10680
  6433  015D74                     u10670:
  6434  015D74  0E00               	movlw	0
  6435  015D76                     u10680:
  6436  015D76  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  6437                           
  6438                           ; BSR set to: 2
  6439                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  6440  015D78  0EDC               	movlw	220
  6441  015D7A  6EE6               	movwf	postinc1,c
  6442  015D7C  0E05               	movlw	5
  6443  015D7E  6EE6               	movwf	postinc1,c
  6444  015D80  0E0B               	movlw	11
  6445  015D82  6EE6               	movwf	postinc1,c
  6446  015D84  ECB4  F0C3         	call	_StartTimer	;wreg free
  6447  015D88                     l1670:
  6448                           
  6449                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  6450  015D88  52E5               	movf	postdec1,f,c
  6451  015D8A  0012               	return		;funcret
  6452  015D8C                     __end_of_check_help:
  6453                           	opt callstack 0
  6454                           
  6455 ;; *************** function _vterm_dump *****************
  6456 ;; Defined at:
  6457 ;;		line 121 in file "mconfig.c"
  6458 ;; Parameters:    Size  Location     Type
  6459 ;;		None
  6460 ;; Auto vars:     Size  Location     Type
  6461 ;;		None
  6462 ;; Return value:  Size  Location     Type
  6463 ;;                  1  [STACK] void 
  6464 ;; Registers used:
  6465 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6466 ;; Tracked objects:
  6467 ;;		On entry : 3F/2
  6468 ;;		On exit  : 0/0
  6469 ;;		Unchanged: 0/0
  6470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6475 ;;Total ram usage:        0 bytes
  6476 ;; Hardware stack levels used:    1
  6477 ;; Hardware stack levels required when called:   18
  6478 ;; This function calls:
  6479 ;;		_WaitMs
  6480 ;;		_eaDogM_WriteStringAtPos
  6481 ;;		_get_vterm_ptr
  6482 ;;		_sprintf
  6483 ;;		_wait_lcd_done
  6484 ;; This function is called by:
  6485 ;;		_check_help
  6486 ;; This function uses a reentrant model
  6487 ;;
  6488                           
  6489                           	psect	text25
  6490  016A18                     __ptext25:
  6491                           	opt callstack 0
  6492  016A18                     _vterm_dump:
  6493                           	opt callstack 11
  6494                           
  6495                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  6496                           
  6497                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6498                           ;incstack = 0
  6499  016A18  0E01               	movlw	1
  6500  016A1A  6EE6               	movwf	postinc1,c
  6501  016A1C  0E00               	movlw	0
  6502  016A1E  6EE6               	movwf	postinc1,c
  6503  016A20  EC56  F0C5         	call	_get_vterm_ptr	;wreg free
  6504  016A24  0060  F097  FFE6   	movff	btemp,postinc1
  6505  016A2A  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6506  016A30  0E00               	movlw	0
  6507  016A32  6EE6               	movwf	postinc1,c
  6508  016A34  0E00               	movlw	0
  6509  016A36  6EE6               	movwf	postinc1,c
  6510  016A38  EC56  F0C5         	call	_get_vterm_ptr	;wreg free
  6511  016A3C  0060  F097  FFE6   	movff	btemp,postinc1
  6512  016A42  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6513  016A48  0EA2               	movlw	low STR_33
  6514  016A4A  6EE6               	movwf	postinc1,c
  6515  016A4C  0EFF               	movlw	high STR_33
  6516  016A4E  6EE6               	movwf	postinc1,c
  6517  016A50  0E01               	movlw	low (_V+1)
  6518  016A52  6EE6               	movwf	postinc1,c
  6519  016A54  0E02               	movlw	high (_V+1)
  6520  016A56  6EE6               	movwf	postinc1,c
  6521  016A58  0E08               	movlw	8
  6522  016A5A  6EE6               	movwf	postinc1,c
  6523  016A5C  ECD3  F0B7         	call	_sprintf	;wreg free
  6524                           
  6525                           ; BSR set to: 0
  6526                           ;mconfig.c: 124:  wait_lcd_done();
  6527  016A60  EC3D  F0C8         	call	_wait_lcd_done	;wreg free
  6528                           
  6529                           ; BSR set to: 0
  6530                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  6531  016A64  0E01               	movlw	low (_V+1)
  6532  016A66  6EE6               	movwf	postinc1,c
  6533  016A68  0E02               	movlw	high (_V+1)
  6534  016A6A  6EE6               	movwf	postinc1,c
  6535  016A6C  0E00               	movlw	0
  6536  016A6E  6EE6               	movwf	postinc1,c
  6537  016A70  0E00               	movlw	0
  6538  016A72  6EE6               	movwf	postinc1,c
  6539  016A74  ECA5  F0C4         	call	_eaDogM_WriteStringAtPos	;wreg free
  6540                           
  6541                           ; BSR set to: 59
  6542                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  6543  016A78  0E01               	movlw	1
  6544  016A7A  6EE6               	movwf	postinc1,c
  6545  016A7C  0E01               	movlw	1
  6546  016A7E  6EE6               	movwf	postinc1,c
  6547  016A80  EC56  F0C5         	call	_get_vterm_ptr	;wreg free
  6548  016A84  0060  F097  FFE6   	movff	btemp,postinc1
  6549  016A8A  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6550  016A90  0E00               	movlw	0
  6551  016A92  6EE6               	movwf	postinc1,c
  6552  016A94  0E01               	movlw	1
  6553  016A96  6EE6               	movwf	postinc1,c
  6554  016A98  EC56  F0C5         	call	_get_vterm_ptr	;wreg free
  6555  016A9C  0060  F097  FFE6   	movff	btemp,postinc1
  6556  016AA2  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6557  016AA8  0EA2               	movlw	low STR_33
  6558  016AAA  6EE6               	movwf	postinc1,c
  6559  016AAC  0EFF               	movlw	high STR_33
  6560  016AAE  6EE6               	movwf	postinc1,c
  6561  016AB0  0E01               	movlw	low (_V+1)
  6562  016AB2  6EE6               	movwf	postinc1,c
  6563  016AB4  0E02               	movlw	high (_V+1)
  6564  016AB6  6EE6               	movwf	postinc1,c
  6565  016AB8  0E08               	movlw	8
  6566  016ABA  6EE6               	movwf	postinc1,c
  6567  016ABC  ECD3  F0B7         	call	_sprintf	;wreg free
  6568                           
  6569                           ; BSR set to: 0
  6570                           ;mconfig.c: 127:  wait_lcd_done();
  6571  016AC0  EC3D  F0C8         	call	_wait_lcd_done	;wreg free
  6572                           
  6573                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  6574  016AC4  0E01               	movlw	low (_V+1)
  6575  016AC6  6EE6               	movwf	postinc1,c
  6576  016AC8  0E02               	movlw	high (_V+1)
  6577  016ACA  6EE6               	movwf	postinc1,c
  6578  016ACC  0E00               	movlw	0
  6579  016ACE  6EE6               	movwf	postinc1,c
  6580  016AD0  0E01               	movlw	1
  6581  016AD2  6EE6               	movwf	postinc1,c
  6582  016AD4  ECA5  F0C4         	call	_eaDogM_WriteStringAtPos	;wreg free
  6583                           
  6584                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  6585  016AD8  0E01               	movlw	1
  6586  016ADA  6EE6               	movwf	postinc1,c
  6587  016ADC  0E02               	movlw	2
  6588  016ADE  6EE6               	movwf	postinc1,c
  6589  016AE0  EC56  F0C5         	call	_get_vterm_ptr	;wreg free
  6590  016AE4  0060  F097  FFE6   	movff	btemp,postinc1
  6591  016AEA  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6592  016AF0  0E00               	movlw	0
  6593  016AF2  6EE6               	movwf	postinc1,c
  6594  016AF4  0E02               	movlw	2
  6595  016AF6  6EE6               	movwf	postinc1,c
  6596  016AF8  EC56  F0C5         	call	_get_vterm_ptr	;wreg free
  6597  016AFC  0060  F097  FFE6   	movff	btemp,postinc1
  6598  016B02  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6599  016B08  0EA2               	movlw	low STR_33
  6600  016B0A  6EE6               	movwf	postinc1,c
  6601  016B0C  0EFF               	movlw	high STR_33
  6602  016B0E  6EE6               	movwf	postinc1,c
  6603  016B10  0E01               	movlw	low (_V+1)
  6604  016B12  6EE6               	movwf	postinc1,c
  6605  016B14  0E02               	movlw	high (_V+1)
  6606  016B16  6EE6               	movwf	postinc1,c
  6607  016B18  0E08               	movlw	8
  6608  016B1A  6EE6               	movwf	postinc1,c
  6609  016B1C  ECD3  F0B7         	call	_sprintf	;wreg free
  6610                           
  6611                           ; BSR set to: 0
  6612                           ;mconfig.c: 130:  wait_lcd_done();
  6613  016B20  EC3D  F0C8         	call	_wait_lcd_done	;wreg free
  6614                           
  6615                           ; BSR set to: 0
  6616                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  6617  016B24  0E01               	movlw	low (_V+1)
  6618  016B26  6EE6               	movwf	postinc1,c
  6619  016B28  0E02               	movlw	high (_V+1)
  6620  016B2A  6EE6               	movwf	postinc1,c
  6621  016B2C  0E00               	movlw	0
  6622  016B2E  6EE6               	movwf	postinc1,c
  6623  016B30  0E02               	movlw	2
  6624  016B32  6EE6               	movwf	postinc1,c
  6625  016B34  ECA5  F0C4         	call	_eaDogM_WriteStringAtPos	;wreg free
  6626                           
  6627                           ; BSR set to: 59
  6628                           ;mconfig.c: 132:  WaitMs(3000);
  6629  016B38  0EB8               	movlw	184
  6630  016B3A  6EE6               	movwf	postinc1,c
  6631  016B3C  0E0B               	movlw	11
  6632  016B3E  6EE6               	movwf	postinc1,c
  6633  016B40  EC8A  F0C4         	call	_WaitMs	;wreg free
  6634                           
  6635                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6636  016B44  0012               	return		;funcret
  6637  016B46                     __end_of_vterm_dump:
  6638                           	opt callstack 0
  6639                           
  6640 ;; *************** function _sprintf *****************
  6641 ;; Defined at:
  6642 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  6643 ;; Parameters:    Size  Location     Type
  6644 ;;  s               2  [STACK] PTR unsigned char 
  6645 ;;		 -> D.lcd(288), D(290), V(188), 
  6646 ;;  fmt             2  [STACK] PTR const unsigned char 
  6647 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
  6648 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
  6649 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
  6650 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
  6651 ;;		 -> STR_23(17), STR_22(16), STR_21(16), STR_20(19), 
  6652 ;;		 -> STR_19(19), STR_18(19), STR_17(19), STR_16(19), 
  6653 ;;		 -> STR_15(19), STR_14(19), STR_13(19), STR_12(19), 
  6654 ;;		 -> STR_11(17), STR_10(16), STR_9(16), STR_8(17), 
  6655 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
  6656 ;;		 -> STR_1(17), 
  6657 ;; Auto vars:     Size  Location     Type
  6658 ;;  f               6  [STACK] struct _IO_FILE
  6659 ;;  ap              2  [STACK] PTR void [1]
  6660 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6661 ;;  ret             2    0        int 
  6662 ;; Return value:  Size  Location     Type
  6663 ;;                  2  [STACK] int 
  6664 ;; Registers used:
  6665 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6666 ;; Tracked objects:
  6667 ;;		On entry : 0/1
  6668 ;;		On exit  : 3F/0
  6669 ;;		Unchanged: 0/0
  6670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6675 ;;Total ram usage:        0 bytes
  6676 ;; Hardware stack levels used:    1
  6677 ;; Hardware stack levels required when called:   15
  6678 ;; This function calls:
  6679 ;;		_vfprintf
  6680 ;; This function is called by:
  6681 ;;		_main
  6682 ;;		_check_help
  6683 ;;		_vterm_dump
  6684 ;; This function uses a reentrant model
  6685 ;;
  6686                           
  6687                           	psect	text26
  6688  016FA6                     __ptext26:
  6689                           	opt callstack 0
  6690  016FA6                     _sprintf:
  6691                           	opt callstack 0
  6692                           
  6693                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  6694  016FA6  0E08               	movlw	8
  6695  016FA8  26E1               	addwf	fsr1l,f,c
  6696  016FAA  0E00               	movlw	0
  6697  016FAC  22E2               	addwfc	fsr1h,f,c
  6698                           
  6699                           ;incstack = 0
  6700  016FAE  0EFE               	movlw	254
  6701  016FB0  6E2F               	movwf	(btemp+10)^0,c
  6702  016FB2  0EFF               	movlw	255
  6703  016FB4  6E30               	movwf	(btemp+11)^0,c
  6704                           
  6705                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  6706  016FB6  0EF5               	movlw	245
  6707  016FB8  24E1               	addwf	fsr1l,w,c
  6708  016FBA  6E2D               	movwf	(btemp+8)^0,c
  6709  016FBC  0EFF               	movlw	255
  6710  016FBE  20E2               	addwfc	fsr1h,w,c
  6711  016FC0  6E2E               	movwf	(btemp+9)^0,c
  6712  016FC2  502F               	movf	(btemp+10)^0,w,c
  6713  016FC4  262D               	addwf	(btemp+8)^0,f,c
  6714  016FC6  5030               	movf	(btemp+11)^0,w,c
  6715  016FC8  222E               	addwfc	(btemp+9)^0,f,c
  6716                           
  6717                           ;stkvar	_ap @ sp[(-8)+6]
  6718  016FCA  0EFF               	movlw	-1
  6719  016FCC  0060  F0BB  FFE3   	movff	btemp+9,plusw1
  6720  016FD2  0EFE               	movlw	-2
  6721  016FD4  0060  F0B7  FFE3   	movff	btemp+8,plusw1
  6722                           
  6723                           ;stkvar	_s @ sp[(-8)+-3]
  6724  016FDA  0EF5               	movlw	-11
  6725  016FDC  006F FF8C  F02F    	movff	plusw1,btemp+10
  6726  016FE2  0EF6               	movlw	-10
  6727  016FE4  006F FF8C  F030    	movff	plusw1,btemp+11
  6728                           
  6729                           ;stkvar	_f @ sp[(-8)+0]
  6730  016FEA  0EF9               	movlw	-7
  6731  016FEC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  6732  016FF2  0EF8               	movlw	-8
  6733  016FF4  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  6734                           
  6735                           ;stkvar	_f @ sp[(-8)+0]
  6736  016FFA  0EFA               	movlw	250
  6737  016FFC  24E1               	addwf	fsr1l,w,c
  6738  016FFE  6ED9               	movwf	fsr2l,c
  6739  017000  0EFF               	movlw	255
  6740  017002  20E2               	addwfc	fsr1h,w,c
  6741  017004  6EDA               	movwf	fsr2h,c
  6742  017006  0E00               	movlw	0
  6743  017008  6EDE               	movwf	postinc2,c
  6744  01700A  0E00               	movlw	0
  6745  01700C  6EDD               	movwf	postdec2,c
  6746                           
  6747                           ;stkvar	_f @ sp[(-8)+0]
  6748  01700E  0EFC               	movlw	252
  6749  017010  24E1               	addwf	fsr1l,w,c
  6750  017012  6ED9               	movwf	fsr2l,c
  6751  017014  0EFF               	movlw	255
  6752  017016  20E2               	addwfc	fsr1h,w,c
  6753  017018  6EDA               	movwf	fsr2h,c
  6754  01701A  0E00               	movlw	0
  6755  01701C  6EDE               	movwf	postinc2,c
  6756  01701E  0E00               	movlw	0
  6757  017020  6EDD               	movwf	postdec2,c
  6758                           
  6759                           ;stkvar	_ap @ sp[(-8)+6]
  6760  017022  0EFE               	movlw	254
  6761  017024  24E1               	addwf	fsr1l,w,c
  6762  017026  6E25               	movwf	btemp^0,c
  6763  017028  0EFF               	movlw	255
  6764  01702A  20E2               	addwfc	fsr1h,w,c
  6765  01702C  6E26               	movwf	(btemp+1)^0,c
  6766  01702E  0060  F097  FFE6   	movff	btemp,postinc1
  6767  017034  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6768                           
  6769                           ;stkvar	_fmt @ sp[(-10)+-5]
  6770  01703A  0EF1               	movlw	-15
  6771  01703C  006F FF8F FFE6     	movff	plusw1,postinc1
  6772  017042  006F FF8F FFE6     	movff	plusw1,postinc1
  6773                           
  6774                           ;stkvar	_f @ sp[(-12)+0]
  6775  017048  0EF4               	movlw	244
  6776  01704A  24E1               	addwf	fsr1l,w,c
  6777  01704C  6E25               	movwf	btemp^0,c
  6778  01704E  0EFF               	movlw	255
  6779  017050  20E2               	addwfc	fsr1h,w,c
  6780  017052  6E26               	movwf	(btemp+1)^0,c
  6781  017054  0060  F097  FFE6   	movff	btemp,postinc1
  6782  01705A  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6783  017060  EC12  F0BC         	call	_vfprintf	;wreg free
  6784                           
  6785                           ; BSR set to: 0
  6786                           ;stkvar	_f @ sp[(-8)+0]
  6787  017064  0EFA               	movlw	250
  6788  017066  24E1               	addwf	fsr1l,w,c
  6789  017068  6ED9               	movwf	fsr2l,c
  6790  01706A  0EFF               	movlw	255
  6791  01706C  20E2               	addwfc	fsr1h,w,c
  6792  01706E  6EDA               	movwf	fsr2h,c
  6793  017070  006F FF78  F02F    	movff	postinc2,btemp+10
  6794  017076  006F FF74  F030    	movff	postdec2,btemp+11
  6795                           
  6796                           ;stkvar	_s @ sp[(-8)+-3]
  6797  01707C  0EF5               	movlw	-11
  6798  01707E  006F FF8C  F02D    	movff	plusw1,btemp+8
  6799  017084  0EF6               	movlw	-10
  6800  017086  006F FF8C  F02E    	movff	plusw1,btemp+9
  6801  01708C  502F               	movf	(btemp+10)^0,w,c
  6802  01708E  242D               	addwf	(btemp+8)^0,w,c
  6803  017090  6ED9               	movwf	fsr2l,c
  6804  017092  5030               	movf	(btemp+11)^0,w,c
  6805  017094  202E               	addwfc	(btemp+9)^0,w,c
  6806  017096  6EDA               	movwf	fsr2h,c
  6807  017098  0E00               	movlw	0
  6808  01709A  6EDF               	movwf	indf2,c
  6809                           
  6810                           ; BSR set to: 0
  6811                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, args
      +                          ize = 4, vargsize = 0
  6812  01709C  0EF8               	movlw	248
  6813  01709E  26E1               	addwf	fsr1l,f,c
  6814  0170A0  0EFF               	movlw	255
  6815  0170A2  22E2               	addwfc	fsr1h,f,c
  6816  0170A4  52E5               	movf	postdec1,f,c
  6817  0170A6  50E7               	movf	indf1,w,c
  6818  0170A8  5EE1               	subwf	fsr1l,f,c
  6819  0170AA  0E00               	movlw	0
  6820  0170AC  5AE2               	subwfb	fsr1h,f,c
  6821  0170AE  0012               	return		;funcret
  6822  0170B0                     __end_of_sprintf:
  6823                           	opt callstack 0
  6824                           
  6825 ;; *************** function _get_vterm_ptr *****************
  6826 ;; Defined at:
  6827 ;;		line 116 in file "mconfig.c"
  6828 ;; Parameters:    Size  Location     Type
  6829 ;;  line            1  [STACK] const unsigned char 
  6830 ;;  vterm           1  [STACK] const unsigned char 
  6831 ;; Auto vars:     Size  Location     Type
  6832 ;;		None
  6833 ;; Return value:  Size  Location     Type
  6834 ;;                  2  [STACK] PTR unsigned char 
  6835 ;; Registers used:
  6836 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  6837 ;; Tracked objects:
  6838 ;;		On entry : 0/1
  6839 ;;		On exit  : 0/0
  6840 ;;		Unchanged: 0/0
  6841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6846 ;;Total ram usage:        0 bytes
  6847 ;; Hardware stack levels used:    1
  6848 ;; Hardware stack levels required when called:    7
  6849 ;; This function calls:
  6850 ;;		Nothing
  6851 ;; This function is called by:
  6852 ;;		_main
  6853 ;;		_check_help
  6854 ;;		_vterm_dump
  6855 ;; This function uses a reentrant model
  6856 ;;
  6857                           
  6858                           	psect	text27
  6859  018AAC                     __ptext27:
  6860                           	opt callstack 0
  6861  018AAC                     _get_vterm_ptr:
  6862                           	opt callstack 23
  6863                           
  6864                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  6865                           ;stkvar	_vterm @ sp[(0)+-2]
  6866                           
  6867                           ; BSR set to: 0
  6868                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6869                           ;incstack = 0
  6870  018AAC  0EFE               	movlw	-2
  6871  018AAE  50E3               	movf	plusw1,w,c
  6872  018AB0  0B03               	andlw	3
  6873  018AB2  0D48               	mullw	72
  6874  018AB4  0EFF               	movlw	low _D
  6875  018AB6  6E25               	movwf	btemp^0,c
  6876  018AB8  0E06               	movlw	high _D
  6877  018ABA  6E26               	movwf	(btemp+1)^0,c
  6878  018ABC  50F3               	movf	243,w,c
  6879  018ABE  2625               	addwf	btemp^0,f,c
  6880  018AC0  50F4               	movf	244,w,c
  6881  018AC2  2226               	addwfc	(btemp+1)^0,f,c
  6882                           
  6883                           ;stkvar	_line @ sp[(0)+-1]
  6884  018AC4  0EFF               	movlw	-1
  6885  018AC6  50E3               	movf	plusw1,w,c
  6886  018AC8  0B03               	andlw	3
  6887  018ACA  0D18               	mullw	24
  6888  018ACC  50F3               	movf	243,w,c
  6889  018ACE  2625               	addwf	btemp^0,f,c
  6890  018AD0  50F4               	movf	244,w,c
  6891  018AD2  2226               	addwfc	(btemp+1)^0,f,c
  6892                           
  6893                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  6894  018AD4  52E5               	movf	postdec1,f,c
  6895  018AD6  52E5               	movf	postdec1,f,c
  6896  018AD8  0012               	return		;funcret
  6897  018ADA                     __end_of_get_vterm_ptr:
  6898                           	opt callstack 0
  6899                           
  6900 ;; *************** function _WaitMs *****************
  6901 ;; Defined at:
  6902 ;;		line 32 in file "timers.c"
  6903 ;; Parameters:    Size  Location     Type
  6904 ;;  numMilliseco    2  [STACK] const unsigned short 
  6905 ;; Auto vars:     Size  Location     Type
  6906 ;;		None
  6907 ;; Return value:  Size  Location     Type
  6908 ;;                  1  [STACK] void 
  6909 ;; Registers used:
  6910 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6911 ;; Tracked objects:
  6912 ;;		On entry : 0/2
  6913 ;;		On exit  : 0/0
  6914 ;;		Unchanged: 0/0
  6915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6920 ;;Total ram usage:        0 bytes
  6921 ;; Hardware stack levels used:    1
  6922 ;; Hardware stack levels required when called:    8
  6923 ;; This function calls:
  6924 ;;		_StartTimer
  6925 ;;		_TimerDone
  6926 ;; This function is called by:
  6927 ;;		_main
  6928 ;;		_vterm_dump
  6929 ;; This function uses a reentrant model
  6930 ;;
  6931                           
  6932                           	psect	text28
  6933  018914                     __ptext28:
  6934                           	opt callstack 0
  6935  018914                     _WaitMs:
  6936                           	opt callstack 20
  6937                           
  6938                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  6939                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  6940                           
  6941                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6942                           ;incstack = 0
  6943  018914  0EFE               	movlw	-2
  6944  018916  006F FF8F FFE6     	movff	plusw1,postinc1
  6945  01891C  006F FF8F FFE6     	movff	plusw1,postinc1
  6946  018922  0E00               	movlw	0
  6947  018924  6EE6               	movwf	postinc1,c
  6948  018926  ECB4  F0C3         	call	_StartTimer	;wreg free
  6949                           
  6950                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  6951  01892A  D005               	goto	l8066
  6952  01892C                     l1599:
  6953                           
  6954                           ;timers.c: 36:   __nop();
  6955  01892C  F000               	nop	
  6956                           
  6957                           ;timers.c: 37:   __nop();
  6958  01892E  F000               	nop	
  6959                           
  6960                           ;timers.c: 38:   __nop();
  6961  018930  F000               	nop	
  6962                           
  6963                           ;timers.c: 39:   __nop();
  6964  018932  F000               	nop	
  6965  018934  0004               	clrwdt		;# 
  6966  018936                     l8066:
  6967                           
  6968                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  6969  018936  0E00               	movlw	0
  6970  018938  6EE6               	movwf	postinc1,c
  6971  01893A  EC15  F0C6         	call	_TimerDone	;wreg free
  6972  01893E  5025               	movf	btemp^0,w,c
  6973  018940  B4D8               	btfsc	status,2,c
  6974  018942  D7F4               	goto	l1599
  6975                           
  6976                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  6977  018944  52E5               	movf	postdec1,f,c
  6978  018946  52E5               	movf	postdec1,f,c
  6979  018948  0012               	return		;funcret
  6980  01894A                     __end_of_WaitMs:
  6981                           	opt callstack 0
  6982                           
  6983 ;; *************** function _update_lcd *****************
  6984 ;; Defined at:
  6985 ;;		line 85 in file "mconfig.c"
  6986 ;; Parameters:    Size  Location     Type
  6987 ;;  vterm           1  [STACK] unsigned char 
  6988 ;; Auto vars:     Size  Location     Type
  6989 ;;		None
  6990 ;; Return value:  Size  Location     Type
  6991 ;;                  1  [STACK] unsigned char 
  6992 ;; Registers used:
  6993 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6994 ;; Tracked objects:
  6995 ;;		On entry : 0/0
  6996 ;;		On exit  : 0/0
  6997 ;;		Unchanged: 0/0
  6998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7003 ;;Total ram usage:        0 bytes
  7004 ;; Hardware stack levels used:    1
  7005 ;; Hardware stack levels required when called:   18
  7006 ;; This function calls:
  7007 ;;		_eaDogM_WriteStringAtPos
  7008 ;;		_wait_lcd_done
  7009 ;; This function is called by:
  7010 ;;		_main
  7011 ;;		_check_help
  7012 ;; This function uses a reentrant model
  7013 ;;
  7014                           
  7015                           	psect	text29
  7016  016E96                     __ptext29:
  7017                           	opt callstack 0
  7018  016E96                     _update_lcd:
  7019                           	opt callstack 12
  7020                           
  7021                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  7022                           ;stkvar	_vterm @ sp[(0)+-1]
  7023                           
  7024                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7025                           ;incstack = 0
  7026  016E96  0EFF               	movlw	-1
  7027  016E98  006F FF8C  F025    	movff	plusw1,btemp
  7028  016E9E  0E03               	movlw	3
  7029  016EA0  1625               	andwf	btemp^0,f,c
  7030  016EA2  0EFF               	movlw	-1
  7031  016EA4  0060  F097  FFE3   	movff	btemp,plusw1
  7032                           
  7033                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  7034  016EAA  EE22  F01F         	lfsr	2,_D+288
  7035  016EAE  A0DF               	btfss	indf2,0,c
  7036  016EB0  D004               	goto	l10840
  7037                           
  7038                           ;stkvar	_vterm @ sp[(0)+-1]
  7039  016EB2  0EFF               	movlw	-1
  7040  016EB4  50E3               	movf	plusw1,w,c
  7041  016EB6  B4D8               	btfsc	status,2,c
  7042  016EB8  D074               	goto	l1677
  7043  016EBA                     l10840:
  7044                           
  7045                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  7046                           ;stkvar	_vterm @ sp[(0)+-1]
  7047  016EBA  0EFF               	movlw	-1
  7048  016EBC  50E3               	movf	plusw1,w,c
  7049  016EBE  0D48               	mullw	72
  7050  016EC0  0E0F               	movlw	low (_D+16)
  7051  016EC2  24F3               	addwf	243,w,c
  7052  016EC4  6ED9               	movwf	fsr2l,c
  7053  016EC6  0E07               	movlw	high (_D+16)
  7054  016EC8  20F4               	addwfc	prodh,w,c
  7055  016ECA  6EDA               	movwf	fsr2h,c
  7056  016ECC  0E00               	movlw	0
  7057  016ECE  6EDF               	movwf	indf2,c
  7058                           
  7059                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  7060                           ;stkvar	_vterm @ sp[(0)+-1]
  7061  016ED0  0EFF               	movlw	-1
  7062  016ED2  50E3               	movf	plusw1,w,c
  7063  016ED4  0D48               	mullw	72
  7064  016ED6  0E27               	movlw	low (_D+40)
  7065  016ED8  24F3               	addwf	243,w,c
  7066  016EDA  6ED9               	movwf	fsr2l,c
  7067  016EDC  0E07               	movlw	high (_D+40)
  7068  016EDE  20F4               	addwfc	prodh,w,c
  7069  016EE0  6EDA               	movwf	fsr2h,c
  7070  016EE2  0E00               	movlw	0
  7071  016EE4  6EDF               	movwf	indf2,c
  7072                           
  7073                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  7074                           ;stkvar	_vterm @ sp[(0)+-1]
  7075  016EE6  0EFF               	movlw	-1
  7076  016EE8  50E3               	movf	plusw1,w,c
  7077  016EEA  0D48               	mullw	72
  7078  016EEC  0E3F               	movlw	low (_D+64)
  7079  016EEE  24F3               	addwf	243,w,c
  7080  016EF0  6ED9               	movwf	fsr2l,c
  7081  016EF2  0E07               	movlw	high (_D+64)
  7082  016EF4  20F4               	addwfc	prodh,w,c
  7083  016EF6  6EDA               	movwf	fsr2h,c
  7084  016EF8  0E00               	movlw	0
  7085  016EFA  6EDF               	movwf	indf2,c
  7086                           
  7087                           ;mconfig.c: 95:  wait_lcd_done();
  7088  016EFC  EC3D  F0C8         	call	_wait_lcd_done	;wreg free
  7089                           
  7090                           ; BSR set to: 0
  7091                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  7092                           ;stkvar	_vterm @ sp[(0)+-1]
  7093  016F00  0EFF               	movlw	-1
  7094  016F02  50E3               	movf	plusw1,w,c
  7095  016F04  0D48               	mullw	72
  7096  016F06  0EFF               	movlw	low _D
  7097  016F08  6E2F               	movwf	(btemp+10)^0,c
  7098  016F0A  0E06               	movlw	high _D
  7099  016F0C  6E30               	movwf	(btemp+11)^0,c
  7100  016F0E  50F3               	movf	243,w,c
  7101  016F10  262F               	addwf	(btemp+10)^0,f,c
  7102  016F12  50F4               	movf	244,w,c
  7103  016F14  2230               	addwfc	(btemp+11)^0,f,c
  7104  016F16  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  7105  016F1C  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  7106  016F22  0E00               	movlw	0
  7107  016F24  6EE6               	movwf	postinc1,c
  7108  016F26  0E00               	movlw	0
  7109  016F28  6EE6               	movwf	postinc1,c
  7110  016F2A  ECA5  F0C4         	call	_eaDogM_WriteStringAtPos	;wreg free
  7111                           
  7112                           ; BSR set to: 59
  7113                           ;mconfig.c: 97:  wait_lcd_done();
  7114  016F2E  EC3D  F0C8         	call	_wait_lcd_done	;wreg free
  7115                           
  7116                           ; BSR set to: 0
  7117                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  7118                           ;stkvar	_vterm @ sp[(0)+-1]
  7119  016F32  0EFF               	movlw	-1
  7120  016F34  50E3               	movf	plusw1,w,c
  7121  016F36  0D48               	mullw	72
  7122  016F38  0EFF               	movlw	low _D
  7123  016F3A  6E2F               	movwf	(btemp+10)^0,c
  7124  016F3C  0E06               	movlw	high _D
  7125  016F3E  6E30               	movwf	(btemp+11)^0,c
  7126  016F40  0E18               	movlw	24
  7127  016F42  262F               	addwf	(btemp+10)^0,f,c
  7128  016F44  0E00               	movlw	0
  7129  016F46  2230               	addwfc	(btemp+11)^0,f,c
  7130  016F48  50F3               	movf	243,w,c
  7131  016F4A  262F               	addwf	(btemp+10)^0,f,c
  7132  016F4C  50F4               	movf	244,w,c
  7133  016F4E  2230               	addwfc	(btemp+11)^0,f,c
  7134  016F50  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  7135  016F56  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  7136  016F5C  0E00               	movlw	0
  7137  016F5E  6EE6               	movwf	postinc1,c
  7138  016F60  0E01               	movlw	1
  7139  016F62  6EE6               	movwf	postinc1,c
  7140  016F64  ECA5  F0C4         	call	_eaDogM_WriteStringAtPos	;wreg free
  7141                           
  7142                           ; BSR set to: 59
  7143                           ;mconfig.c: 99:  wait_lcd_done();
  7144  016F68  EC3D  F0C8         	call	_wait_lcd_done	;wreg free
  7145                           
  7146                           ; BSR set to: 0
  7147                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  7148                           ;stkvar	_vterm @ sp[(0)+-1]
  7149  016F6C  0EFF               	movlw	-1
  7150  016F6E  50E3               	movf	plusw1,w,c
  7151  016F70  0D48               	mullw	72
  7152  016F72  0EFF               	movlw	low _D
  7153  016F74  6E2F               	movwf	(btemp+10)^0,c
  7154  016F76  0E06               	movlw	high _D
  7155  016F78  6E30               	movwf	(btemp+11)^0,c
  7156  016F7A  0E30               	movlw	48
  7157  016F7C  262F               	addwf	(btemp+10)^0,f,c
  7158  016F7E  0E00               	movlw	0
  7159  016F80  2230               	addwfc	(btemp+11)^0,f,c
  7160  016F82  50F3               	movf	243,w,c
  7161  016F84  262F               	addwf	(btemp+10)^0,f,c
  7162  016F86  50F4               	movf	244,w,c
  7163  016F88  2230               	addwfc	(btemp+11)^0,f,c
  7164  016F8A  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  7165  016F90  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  7166  016F96  0E00               	movlw	0
  7167  016F98  6EE6               	movwf	postinc1,c
  7168  016F9A  0E02               	movlw	2
  7169  016F9C  6EE6               	movwf	postinc1,c
  7170  016F9E  ECA5  F0C4         	call	_eaDogM_WriteStringAtPos	;wreg free
  7171  016FA2                     l1677:
  7172                           
  7173                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  7174  016FA2  52E5               	movf	postdec1,f,c
  7175  016FA4  0012               	return		;funcret
  7176  016FA6                     __end_of_update_lcd:
  7177                           	opt callstack 0
  7178                           
  7179 ;; *************** function _eaDogM_WriteStringAtPos *****************
  7180 ;; Defined at:
  7181 ;;		line 265 in file "eadog.c"
  7182 ;; Parameters:    Size  Location     Type
  7183 ;;  r               1  [STACK] const unsigned char 
  7184 ;;  c               1  [STACK] const unsigned char 
  7185 ;;  strPtr          2  [STACK] PTR unsigned char 
  7186 ;;		 -> D.lcd(288), D(290), V(188), 
  7187 ;; Auto vars:     Size  Location     Type
  7188 ;;		None
  7189 ;; Return value:  Size  Location     Type
  7190 ;;                  1  [STACK] void 
  7191 ;; Registers used:
  7192 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7193 ;; Tracked objects:
  7194 ;;		On entry : 3F/0
  7195 ;;		On exit  : 3F/3B
  7196 ;;		Unchanged: 0/0
  7197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7202 ;;Total ram usage:        0 bytes
  7203 ;; Hardware stack levels used:    1
  7204 ;; Hardware stack levels required when called:   17
  7205 ;; This function calls:
  7206 ;;		_eaDogM_WriteString
  7207 ;;		_send_lcd_cmd_dma
  7208 ;; This function is called by:
  7209 ;;		_update_lcd
  7210 ;;		_vterm_dump
  7211 ;; This function uses a reentrant model
  7212 ;;
  7213                           
  7214                           	psect	text30
  7215  01894A                     __ptext30:
  7216                           	opt callstack 0
  7217  01894A                     _eaDogM_WriteStringAtPos:
  7218                           	opt callstack 12
  7219                           
  7220                           ;eadog.c: 265: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 266: {;eadog.c: 267:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  7221                           ;stkvar	_c @ sp[(0)+-2]
  7222                           
  7223                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7224                           ;incstack = 0
  7225  01894A  0EFE               	movlw	-2
  7226  01894C  006F FF8C  F030    	movff	plusw1,btemp+11
  7227                           
  7228                           ;stkvar	_r @ sp[(0)+-1]
  7229  018952  0EFF               	movlw	-1
  7230  018954  50E3               	movf	plusw1,w,c
  7231  018956  0D10               	mullw	16
  7232  018958  50F3               	movf	243,w,c
  7233  01895A  2430               	addwf	(btemp+11)^0,w,c
  7234  01895C  0F80               	addlw	128
  7235  01895E  6EE6               	movwf	postinc1,c
  7236  018960  EC23  F0C2         	call	_send_lcd_cmd_dma	;wreg free
  7237                           
  7238                           ;eadog.c: 268:  eaDogM_WriteString(strPtr);
  7239                           ;stkvar	_strPtr @ sp[(0)+-4]
  7240  018964  0EFC               	movlw	-4
  7241  018966  006F FF8F FFE6     	movff	plusw1,postinc1
  7242  01896C  006F FF8F FFE6     	movff	plusw1,postinc1
  7243  018972  ECBD  F0BC         	call	_eaDogM_WriteString	;wreg free
  7244                           
  7245                           ; BSR set to: 59
  7246                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  7247  018976  52E5               	movf	postdec1,f,c
  7248  018978  52E5               	movf	postdec1,f,c
  7249  01897A  52E5               	movf	postdec1,f,c
  7250  01897C  52E5               	movf	postdec1,f,c
  7251  01897E  0012               	return		;funcret
  7252  018980                     __end_of_eaDogM_WriteStringAtPos:
  7253                           	opt callstack 0
  7254                           
  7255 ;; *************** function _send_lcd_cmd_dma *****************
  7256 ;; Defined at:
  7257 ;;		line 218 in file "eadog.c"
  7258 ;; Parameters:    Size  Location     Type
  7259 ;;  strPtr          1  [STACK] unsigned char 
  7260 ;; Auto vars:     Size  Location     Type
  7261 ;;		None
  7262 ;; Return value:  Size  Location     Type
  7263 ;;                  1  [STACK] void 
  7264 ;; Registers used:
  7265 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7266 ;; Tracked objects:
  7267 ;;		On entry : 0/3D
  7268 ;;		On exit  : 3F/0
  7269 ;;		Unchanged: 0/0
  7270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7275 ;;Total ram usage:        0 bytes
  7276 ;; Hardware stack levels used:    1
  7277 ;; Hardware stack levels required when called:   16
  7278 ;; This function calls:
  7279 ;;		_printf
  7280 ;;		_ringBufS_flush
  7281 ;;		_start_lcd
  7282 ;;		_wait_lcd_done
  7283 ;;		_wait_lcd_set
  7284 ;; This function is called by:
  7285 ;;		_eaDogM_WriteCommand
  7286 ;;		_eaDogM_WriteStringAtPos
  7287 ;; This function uses a reentrant model
  7288 ;;
  7289                           
  7290                           	psect	text31
  7291  018446                     __ptext31:
  7292                           	opt callstack 0
  7293  018446                     _send_lcd_cmd_dma:
  7294                           	opt callstack 12
  7295                           
  7296                           ;eadog.c: 218: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 219: {;eadog.c: 221:  wait
      +                          _lcd_set();
  7297                           
  7298                           ; BSR set to: 59
  7299                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7300                           ;incstack = 0
  7301  018446  EC0C  F0C9         	call	_wait_lcd_set	;wreg free
  7302                           
  7303                           ; BSR set to: 0
  7304                           ;eadog.c: 223:  ringBufS_flush(spi_link.tx1a, 0);
  7305  01844A  0E00               	movlw	0
  7306  01844C  6EE6               	movwf	postinc1,c
  7307  01844E  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
  7308  018454  0060  F243  FFE6   	movff	_spi_link+7,postinc1
  7309  01845A  ECAD  F0BD         	call	_ringBufS_flush	;wreg free
  7310  01845E  92BC               	bcf	188,1,c	;volatile
  7311  018460  94BC               	bcf	188,2,c	;volatile
  7312                           
  7313                           ;eadog.c: 226:  DMA1CON0bits.EN = 0;
  7314  018462  013B               	movlb	59	; () banked
  7315  018464  9FFC               	bcf	252,7,b	;volatile
  7316                           
  7317                           ; BSR set to: 59
  7318                           ;eadog.c: 227:  DMA1SSZ = 1;
  7319  018466  0E00               	movlw	0
  7320  018468  6FF8               	movwf	248,b	;volatile
  7321  01846A  0E01               	movlw	1
  7322  01846C  6FF7               	movwf	247,b	;volatile
  7323                           
  7324                           ; BSR set to: 59
  7325                           ;eadog.c: 228:  DMA1CON0bits.EN = 1;
  7326  01846E  8FFC               	bsf	252,7,b	;volatile
  7327                           
  7328                           ; BSR set to: 59
  7329                           ;eadog.c: 229:  printf("%c", strPtr);
  7330                           ;stkvar	_strPtr @ sp[(0)+-1]
  7331  018470  0EFF               	movlw	-1
  7332  018472  50E3               	movf	plusw1,w,c
  7333  018474  6EE6               	movwf	postinc1,c
  7334  018476  0E00               	movlw	0
  7335  018478  6EE6               	movwf	postinc1,c
  7336  01847A  0EF8               	movlw	low STR_25
  7337  01847C  6EE6               	movwf	postinc1,c
  7338  01847E  0EFF               	movlw	high STR_25
  7339  018480  6EE6               	movwf	postinc1,c
  7340  018482  0E04               	movlw	4
  7341  018484  6EE6               	movwf	postinc1,c
  7342  018486  EC3C  F0C1         	call	_printf	;wreg free
  7343                           
  7344                           ; BSR set to: 0
  7345                           ;eadog.c: 230:  start_lcd();
  7346  01848A  EC0F  F0C9         	call	_start_lcd	;wreg free
  7347                           
  7348                           ; BSR set to: 59
  7349                           ;eadog.c: 231:  wait_lcd_done();
  7350  01848E  EC3D  F0C8         	call	_wait_lcd_done	;wreg free
  7351                           
  7352                           ; BSR set to: 0
  7353  018492  82BC               	bsf	188,1,c	;volatile
  7354                           
  7355                           ; BSR set to: 0
  7356                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  7357  018494  52E5               	movf	postdec1,f,c
  7358  018496  0012               	return		;funcret
  7359  018498                     __end_of_send_lcd_cmd_dma:
  7360                           	opt callstack 0
  7361                           
  7362 ;; *************** function _wait_lcd_done *****************
  7363 ;; Defined at:
  7364 ;;		line 154 in file "eadog.c"
  7365 ;; Parameters:    Size  Location     Type
  7366 ;;		None
  7367 ;; Auto vars:     Size  Location     Type
  7368 ;;		None
  7369 ;; Return value:  Size  Location     Type
  7370 ;;                  1  [STACK] void 
  7371 ;; Registers used:
  7372 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7373 ;; Tracked objects:
  7374 ;;		On entry : 0/0
  7375 ;;		On exit  : 3F/0
  7376 ;;		Unchanged: 0/0
  7377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7382 ;;Total ram usage:        0 bytes
  7383 ;; Hardware stack levels used:    1
  7384 ;; Hardware stack levels required when called:    8
  7385 ;; This function calls:
  7386 ;;		_wdtdelay
  7387 ;; This function is called by:
  7388 ;;		_send_lcd_cmd_dma
  7389 ;;		_update_lcd
  7390 ;;		_vterm_dump
  7391 ;; This function uses a reentrant model
  7392 ;;
  7393                           
  7394                           	psect	text32
  7395  01907A                     __ptext32:
  7396                           	opt callstack 0
  7397  01907A                     _wait_lcd_done:
  7398                           	opt callstack 21
  7399                           
  7400                           ;eadog.c: 156:  while (spi_link.LCD_DATA);
  7401                           
  7402                           ; BSR set to: 0
  7403                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7404                           ;incstack = 0
  7405  01907A  0100               	movlb	0	; () banked
  7406  01907C  B789               	btfsc	_spi_link& (0+255),3,b	;volatile
  7407  01907E  D7FD               	goto	_wait_lcd_done
  7408                           
  7409                           ; BSR set to: 0
  7410                           ;eadog.c: 157:  wdtdelay(50);
  7411  019080  0E32               	movlw	50
  7412  019082  6EE6               	movwf	postinc1,c
  7413  019084  0E00               	movlw	0
  7414  019086  6EE6               	movwf	postinc1,c
  7415  019088  0E00               	movlw	0
  7416  01908A  6EE6               	movwf	postinc1,c
  7417  01908C  0E00               	movlw	0
  7418  01908E  6EE6               	movwf	postinc1,c
  7419  019090  EC9C  F0C1         	call	_wdtdelay	;wreg free
  7420                           
  7421                           ; BSR set to: 0
  7422                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  7423  019094  0012               	return		;funcret
  7424  019096                     __end_of_wait_lcd_done:
  7425                           	opt callstack 0
  7426                           
  7427 ;; *************** function _wdtdelay *****************
  7428 ;; Defined at:
  7429 ;;		line 22 in file "eadog.c"
  7430 ;; Parameters:    Size  Location     Type
  7431 ;;  delay           4  [STACK] const unsigned long 
  7432 ;; Auto vars:     Size  Location     Type
  7433 ;;		None
  7434 ;; Return value:  Size  Location     Type
  7435 ;;                  1  [STACK] void 
  7436 ;; Registers used:
  7437 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7438 ;; Tracked objects:
  7439 ;;		On entry : 0/0
  7440 ;;		On exit  : 3F/0
  7441 ;;		Unchanged: 0/0
  7442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7447 ;;Total ram usage:        0 bytes
  7448 ;; Hardware stack levels used:    1
  7449 ;; Hardware stack levels required when called:    7
  7450 ;; This function calls:
  7451 ;;		Nothing
  7452 ;; This function is called by:
  7453 ;;		_init_display
  7454 ;;		_send_lcd_cmd
  7455 ;;		_send_lcd_cmd_long
  7456 ;;		_wait_lcd_done
  7457 ;; This function uses a reentrant model
  7458 ;;
  7459                           
  7460                           	psect	text33
  7461  018338                     __ptext33:
  7462                           	opt callstack 0
  7463  018338                     _wdtdelay:
  7464                           	opt callstack 21
  7465                           
  7466                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
  7467                           
  7468                           ; BSR set to: 0
  7469                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7470                           ;incstack = 0
  7471  018338  0100               	movlb	0	; () banked
  7472  01833A  6BA1               	clrf	wdtdelay@dcount& (0+255),b
  7473  01833C  6BA2               	clrf	(wdtdelay@dcount+1)& (0+255),b
  7474  01833E  6BA3               	clrf	(wdtdelay@dcount+2)& (0+255),b
  7475  018340  6BA4               	clrf	(wdtdelay@dcount+3)& (0+255),b
  7476  018342                     l1444:
  7477                           
  7478                           ; BSR set to: 0
  7479                           ;eadog.c: 27:   __nop();
  7480  018342  F000               	nop	
  7481  018344  0004               	clrwdt		;# 
  7482                           
  7483                           ;eadog.c: 29:  };
  7484  018346  0E01               	movlw	1
  7485  018348  0100               	movlb	0	; () banked
  7486  01834A  27A1               	addwf	wdtdelay@dcount& (0+255),f,b
  7487  01834C  0E00               	movlw	0
  7488  01834E  23A2               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  7489  018350  23A3               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  7490  018352  23A4               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  7491                           
  7492                           ; BSR set to: 0
  7493                           ;stkvar	_delay @ sp[(0)+-4]
  7494  018354  0EFC               	movlw	-4
  7495  018356  006F FF8C  F025    	movff	plusw1,btemp
  7496  01835C  51A1               	movf	wdtdelay@dcount& (0+255),w,b
  7497  01835E  5C25               	subwf	btemp^0,w,c
  7498  018360  0EFD               	movlw	-3
  7499  018362  006F FF8C  F025    	movff	plusw1,btemp
  7500  018368  51A2               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  7501  01836A  5825               	subwfb	btemp^0,w,c
  7502  01836C  0EFE               	movlw	-2
  7503  01836E  006F FF8C  F025    	movff	plusw1,btemp
  7504  018374  51A3               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  7505  018376  5825               	subwfb	btemp^0,w,c
  7506  018378  0EFF               	movlw	-1
  7507  01837A  006F FF8C  F025    	movff	plusw1,btemp
  7508  018380  51A4               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  7509  018382  5825               	subwfb	btemp^0,w,c
  7510  018384  B0D8               	btfsc	status,0,c
  7511  018386  D7DD               	goto	l1444
  7512                           
  7513                           ; BSR set to: 0
  7514                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  7515  018388  52E5               	movf	postdec1,f,c
  7516  01838A  52E5               	movf	postdec1,f,c
  7517  01838C  52E5               	movf	postdec1,f,c
  7518  01838E  52E5               	movf	postdec1,f,c
  7519  018390  0012               	return		;funcret
  7520  018392                     __end_of_wdtdelay:
  7521                           	opt callstack 0
  7522                           
  7523 ;; *************** function _eaDogM_WriteString *****************
  7524 ;; Defined at:
  7525 ;;		line 197 in file "eadog.c"
  7526 ;; Parameters:    Size  Location     Type
  7527 ;;  strPtr          2  [STACK] PTR unsigned char 
  7528 ;;		 -> D.lcd(288), D(290), V(188), 
  7529 ;; Auto vars:     Size  Location     Type
  7530 ;;		None
  7531 ;; Return value:  Size  Location     Type
  7532 ;;                  1  [STACK] void 
  7533 ;; Registers used:
  7534 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7535 ;; Tracked objects:
  7536 ;;		On entry : 3F/0
  7537 ;;		On exit  : 3F/3B
  7538 ;;		Unchanged: 0/0
  7539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7544 ;;Total ram usage:        0 bytes
  7545 ;; Hardware stack levels used:    1
  7546 ;; Hardware stack levels required when called:   16
  7547 ;; This function calls:
  7548 ;;		_printf
  7549 ;;		_ringBufS_flush
  7550 ;;		_start_lcd
  7551 ;;		_strlen
  7552 ;;		_wait_lcd_set
  7553 ;; This function is called by:
  7554 ;;		_eaDogM_WriteStringAtPos
  7555 ;; This function uses a reentrant model
  7556 ;;
  7557                           
  7558                           	psect	text34
  7559  01797A                     __ptext34:
  7560                           	opt callstack 0
  7561  01797A                     _eaDogM_WriteString:
  7562                           	opt callstack 12
  7563                           
  7564                           ;eadog.c: 197: void eaDogM_WriteString(char *strPtr);eadog.c: 198: {;eadog.c: 200:  wait
      +                          _lcd_set();
  7565                           
  7566                           ; BSR set to: 0
  7567                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7568                           ;incstack = 0
  7569  01797A  EC0C  F0C9         	call	_wait_lcd_set	;wreg free
  7570                           
  7571                           ; BSR set to: 0
  7572                           ;eadog.c: 202:  ringBufS_flush(spi_link.tx1a, 0);
  7573  01797E  0E00               	movlw	0
  7574  017980  6EE6               	movwf	postinc1,c
  7575  017982  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
  7576  017988  0060  F243  FFE6   	movff	_spi_link+7,postinc1
  7577  01798E  ECAD  F0BD         	call	_ringBufS_flush	;wreg free
  7578  017992  94BC               	bcf	188,2,c	;volatile
  7579                           
  7580                           ;eadog.c: 204:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  7581                           ;stkvar	_strPtr @ sp[(0)+-2]
  7582  017994  0EFE               	movlw	-2
  7583  017996  006F FF8F FFE6     	movff	plusw1,postinc1
  7584  01799C  006F FF8F FFE6     	movff	plusw1,postinc1
  7585  0179A2  EC10  F0BD         	call	_strlen	;wreg free
  7586  0179A6  5026               	movf	(btemp+1)^0,w,c
  7587  0179A8  E104               	bnz	u10580
  7588  0179AA  0E41               	movlw	65
  7589  0179AC  5C25               	subwf	btemp^0,w,c
  7590  0179AE  A0D8               	btfss	status,0,c
  7591  0179B0  D010               	goto	l10806
  7592  0179B2                     u10580:
  7593                           
  7594                           ;stkvar	_strPtr @ sp[(0)+-2]
  7595  0179B2  0EFE               	movlw	-2
  7596  0179B4  006F FF8C  F02F    	movff	plusw1,btemp+10
  7597  0179BA  0EFF               	movlw	-1
  7598  0179BC  006F FF8C  F030    	movff	plusw1,btemp+11
  7599  0179C2  0E40               	movlw	64
  7600  0179C4  242F               	addwf	(btemp+10)^0,w,c
  7601  0179C6  6ED9               	movwf	fsr2l,c
  7602  0179C8  0E00               	movlw	0
  7603  0179CA  2030               	addwfc	(btemp+11)^0,w,c
  7604  0179CC  6EDA               	movwf	fsr2h,c
  7605  0179CE  0E00               	movlw	0
  7606  0179D0  6EDF               	movwf	indf2,c
  7607  0179D2                     l10806:
  7608                           
  7609                           ;eadog.c: 205:  DMA1CON0bits.EN = 0;
  7610  0179D2  013B               	movlb	59	; () banked
  7611  0179D4  9FFC               	bcf	252,7,b	;volatile
  7612                           
  7613                           ; BSR set to: 59
  7614                           ;eadog.c: 206:  DMA1SSZ = strlen(strPtr);
  7615                           ;stkvar	_strPtr @ sp[(0)+-2]
  7616  0179D6  0EFE               	movlw	-2
  7617  0179D8  006F FF8F FFE6     	movff	plusw1,postinc1
  7618  0179DE  006F FF8F FFE6     	movff	plusw1,postinc1
  7619  0179E4  EC10  F0BD         	call	_strlen	;wreg free
  7620  0179E8  0060  F097  FBF7   	movff	btemp,15351	;volatile
  7621  0179EE  0060  F09B  FBF8   	movff	btemp+1,15352	;volatile
  7622                           
  7623                           ;eadog.c: 207:  DMA1CON0bits.EN = 1;
  7624  0179F4  013B               	movlb	59	; () banked
  7625  0179F6  8FFC               	bsf	252,7,b	;volatile
  7626                           
  7627                           ; BSR set to: 59
  7628                           ;eadog.c: 208:  printf("%s", strPtr);
  7629                           ;stkvar	_strPtr @ sp[(0)+-2]
  7630  0179F8  0EFE               	movlw	-2
  7631  0179FA  006F FF8F FFE6     	movff	plusw1,postinc1
  7632  017A00  006F FF8F FFE6     	movff	plusw1,postinc1
  7633  017A06  0EFB               	movlw	low STR_24
  7634  017A08  6EE6               	movwf	postinc1,c
  7635  017A0A  0EFF               	movlw	high STR_24
  7636  017A0C  6EE6               	movwf	postinc1,c
  7637  017A0E  0E04               	movlw	4
  7638  017A10  6EE6               	movwf	postinc1,c
  7639  017A12  EC3C  F0C1         	call	_printf	;wreg free
  7640                           
  7641                           ; BSR set to: 0
  7642                           ;eadog.c: 209:  start_lcd();
  7643  017A16  EC0F  F0C9         	call	_start_lcd	;wreg free
  7644                           
  7645                           ; BSR set to: 59
  7646                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  7647  017A1A  52E5               	movf	postdec1,f,c
  7648  017A1C  52E5               	movf	postdec1,f,c
  7649  017A1E  0012               	return		;funcret
  7650  017A20                     __end_of_eaDogM_WriteString:
  7651                           	opt callstack 0
  7652                           
  7653 ;; *************** function _wait_lcd_set *****************
  7654 ;; Defined at:
  7655 ;;		line 144 in file "eadog.c"
  7656 ;; Parameters:    Size  Location     Type
  7657 ;;		None
  7658 ;; Auto vars:     Size  Location     Type
  7659 ;;		None
  7660 ;; Return value:  Size  Location     Type
  7661 ;;                  1  [STACK] void 
  7662 ;; Registers used:
  7663 ;;		None
  7664 ;; Tracked objects:
  7665 ;;		On entry : 0/3D
  7666 ;;		On exit  : 3F/0
  7667 ;;		Unchanged: 0/0
  7668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7673 ;;Total ram usage:        0 bytes
  7674 ;; Hardware stack levels used:    1
  7675 ;; Hardware stack levels required when called:    7
  7676 ;; This function calls:
  7677 ;;		Nothing
  7678 ;; This function is called by:
  7679 ;;		_eaDogM_WriteString
  7680 ;;		_send_lcd_cmd_dma
  7681 ;; This function uses a reentrant model
  7682 ;;
  7683                           
  7684                           	psect	text35
  7685  019218                     __ptext35:
  7686                           	opt callstack 0
  7687  019218                     _wait_lcd_set:
  7688                           	opt callstack 20
  7689                           
  7690                           ;eadog.c: 146:  spi_link.LCD_DATA = 1;
  7691                           
  7692                           ; BSR set to: 59
  7693                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7694                           ;incstack = 0
  7695  019218  0100               	movlb	0	; () banked
  7696  01921A  8789               	bsf	_spi_link& (0+255),3,b	;volatile
  7697                           
  7698                           ; BSR set to: 0
  7699                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  7700  01921C  0012               	return		;funcret
  7701  01921E                     __end_of_wait_lcd_set:
  7702                           	opt callstack 0
  7703                           
  7704 ;; *************** function _start_lcd *****************
  7705 ;; Defined at:
  7706 ;;		line 139 in file "eadog.c"
  7707 ;; Parameters:    Size  Location     Type
  7708 ;;		None
  7709 ;; Auto vars:     Size  Location     Type
  7710 ;;		None
  7711 ;; Return value:  Size  Location     Type
  7712 ;;                  1  [STACK] void 
  7713 ;; Registers used:
  7714 ;;		None
  7715 ;; Tracked objects:
  7716 ;;		On entry : 3F/0
  7717 ;;		On exit  : 3F/3B
  7718 ;;		Unchanged: 0/0
  7719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7724 ;;Total ram usage:        0 bytes
  7725 ;; Hardware stack levels used:    1
  7726 ;; Hardware stack levels required when called:    7
  7727 ;; This function calls:
  7728 ;;		Nothing
  7729 ;; This function is called by:
  7730 ;;		_eaDogM_WriteString
  7731 ;;		_send_lcd_cmd_dma
  7732 ;; This function uses a reentrant model
  7733 ;;
  7734                           
  7735                           	psect	text36
  7736  01921E                     __ptext36:
  7737                           	opt callstack 0
  7738  01921E                     _start_lcd:
  7739                           	opt callstack 20
  7740                           
  7741                           ;eadog.c: 141:  DMA1CON0bits.DMA1SIRQEN = 1;
  7742                           
  7743                           ; BSR set to: 0
  7744                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7745                           ;incstack = 0
  7746  01921E  013B               	movlb	59	; () banked
  7747  019220  8DFC               	bsf	252,6,b	;volatile
  7748                           
  7749                           ; BSR set to: 59
  7750                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  7751  019222  0012               	return		;funcret
  7752  019224                     __end_of_start_lcd:
  7753                           	opt callstack 0
  7754                           
  7755 ;; *************** function _ringBufS_flush *****************
  7756 ;; Defined at:
  7757 ;;		line 76 in file "ringbufs.c"
  7758 ;; Parameters:    Size  Location     Type
  7759 ;;  _this           2  [STACK] PTR struct ringBufS_t
  7760 ;;		 -> ring_buf1(67), 
  7761 ;;  clearBuffer     1  [STACK] const char 
  7762 ;; Auto vars:     Size  Location     Type
  7763 ;;		None
  7764 ;; Return value:  Size  Location     Type
  7765 ;;                  1  [STACK] void 
  7766 ;; Registers used:
  7767 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7768 ;; Tracked objects:
  7769 ;;		On entry : 3F/0
  7770 ;;		On exit  : 0/0
  7771 ;;		Unchanged: 0/0
  7772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7777 ;;Total ram usage:        0 bytes
  7778 ;; Hardware stack levels used:    1
  7779 ;; Hardware stack levels required when called:    8
  7780 ;; This function calls:
  7781 ;;		_memset
  7782 ;; This function is called by:
  7783 ;;		_eaDogM_WriteString
  7784 ;;		_send_lcd_cmd_dma
  7785 ;; This function uses a reentrant model
  7786 ;;
  7787                           
  7788                           	psect	text37
  7789  017B5A                     __ptext37:
  7790                           	opt callstack 0
  7791  017B5A                     _ringBufS_flush:
  7792                           	opt callstack 19
  7793                           
  7794                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  7795                           ;stkvar	__this @ sp[(0)+-2]
  7796                           
  7797                           ; BSR set to: 59
  7798                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7799                           ;incstack = 0
  7800  017B5A  0EFE               	movlw	-2
  7801  017B5C  006F FF8C  F02F    	movff	plusw1,btemp+10
  7802  017B62  0EFF               	movlw	-1
  7803  017B64  006F FF8C  F030    	movff	plusw1,btemp+11
  7804  017B6A  0E42               	movlw	66
  7805  017B6C  242F               	addwf	(btemp+10)^0,w,c
  7806  017B6E  6ED9               	movwf	fsr2l,c
  7807  017B70  0E00               	movlw	0
  7808  017B72  2030               	addwfc	(btemp+11)^0,w,c
  7809  017B74  6EDA               	movwf	fsr2h,c
  7810  017B76  0E00               	movlw	0
  7811  017B78  6EDF               	movwf	indf2,c
  7812                           
  7813                           ;ringbufs.c: 79:  _this->head = 0;
  7814                           ;stkvar	__this @ sp[(0)+-2]
  7815  017B7A  0EFE               	movlw	-2
  7816  017B7C  006F FF8C  F02F    	movff	plusw1,btemp+10
  7817  017B82  0EFF               	movlw	-1
  7818  017B84  006F FF8C  F030    	movff	plusw1,btemp+11
  7819  017B8A  0E40               	movlw	64
  7820  017B8C  242F               	addwf	(btemp+10)^0,w,c
  7821  017B8E  6ED9               	movwf	fsr2l,c
  7822  017B90  0E00               	movlw	0
  7823  017B92  2030               	addwfc	(btemp+11)^0,w,c
  7824  017B94  6EDA               	movwf	fsr2h,c
  7825  017B96  0E00               	movlw	0
  7826  017B98  6EDF               	movwf	indf2,c
  7827                           
  7828                           ;ringbufs.c: 80:  _this->tail = 0;
  7829                           ;stkvar	__this @ sp[(0)+-2]
  7830  017B9A  0EFE               	movlw	-2
  7831  017B9C  006F FF8C  F02F    	movff	plusw1,btemp+10
  7832  017BA2  0EFF               	movlw	-1
  7833  017BA4  006F FF8C  F030    	movff	plusw1,btemp+11
  7834  017BAA  0E41               	movlw	65
  7835  017BAC  242F               	addwf	(btemp+10)^0,w,c
  7836  017BAE  6ED9               	movwf	fsr2l,c
  7837  017BB0  0E00               	movlw	0
  7838  017BB2  2030               	addwfc	(btemp+11)^0,w,c
  7839  017BB4  6EDA               	movwf	fsr2h,c
  7840  017BB6  0E00               	movlw	0
  7841  017BB8  6EDF               	movwf	indf2,c
  7842                           
  7843                           ;ringbufs.c: 81:  if (clearBuffer) {
  7844                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  7845  017BBA  0EFD               	movlw	-3
  7846  017BBC  50E3               	movf	plusw1,w,c
  7847  017BBE  B4D8               	btfsc	status,2,c
  7848  017BC0  D011               	goto	l1584
  7849                           
  7850                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  7851  017BC2  0E40               	movlw	64
  7852  017BC4  6EE6               	movwf	postinc1,c
  7853  017BC6  0E00               	movlw	0
  7854  017BC8  6EE6               	movwf	postinc1,c
  7855  017BCA  0E00               	movlw	0
  7856  017BCC  6EE6               	movwf	postinc1,c
  7857  017BCE  0E00               	movlw	0
  7858  017BD0  6EE6               	movwf	postinc1,c
  7859                           
  7860                           ;stkvar	__this @ sp[(-4)+-2]
  7861  017BD2  0EFA               	movlw	-6
  7862  017BD4  006F FF8F FFE6     	movff	plusw1,postinc1
  7863  017BDA  006F FF8F FFE6     	movff	plusw1,postinc1
  7864  017BE0  ECE1  F0A5         	call	_memset	;wreg free
  7865  017BE4                     l1584:
  7866                           
  7867                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  7868  017BE4  52E5               	movf	postdec1,f,c
  7869  017BE6  52E5               	movf	postdec1,f,c
  7870  017BE8  52E5               	movf	postdec1,f,c
  7871  017BEA  0012               	return		;funcret
  7872  017BEC                     __end_of_ringBufS_flush:
  7873                           	opt callstack 0
  7874                           
  7875 ;; *************** function _memset *****************
  7876 ;; Defined at:
  7877 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  7878 ;; Parameters:    Size  Location     Type
  7879 ;;  dest            2  [STACK] PTR void 
  7880 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7881 ;;  c               2  [STACK] int 
  7882 ;;  n               2  [STACK] unsigned int 
  7883 ;; Auto vars:     Size  Location     Type
  7884 ;;  s               2  [STACK] PTR unsigned char 
  7885 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7886 ;;  k               2  [STACK] unsigned int 
  7887 ;; Return value:  Size  Location     Type
  7888 ;;                  2  [STACK] PTR void 
  7889 ;; Registers used:
  7890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7891 ;; Tracked objects:
  7892 ;;		On entry : 0/0
  7893 ;;		On exit  : 0/0
  7894 ;;		Unchanged: 0/0
  7895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7900 ;;Total ram usage:        0 bytes
  7901 ;; Hardware stack levels used:    1
  7902 ;; Hardware stack levels required when called:    7
  7903 ;; This function calls:
  7904 ;;		Nothing
  7905 ;; This function is called by:
  7906 ;;		_ringBufS_init
  7907 ;;		_ringBufS_flush
  7908 ;; This function uses a reentrant model
  7909 ;;
  7910                           
  7911                           	psect	text38
  7912  014BC2                     __ptext38:
  7913                           	opt callstack 0
  7914  014BC2                     _memset:
  7915                           	opt callstack 0
  7916                           
  7917                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7918  014BC2  52E6               	movf	postinc1,f,c
  7919  014BC4  52E6               	movf	postinc1,f,c
  7920  014BC6  52E6               	movf	postinc1,f,c
  7921  014BC8  52E6               	movf	postinc1,f,c
  7922                           
  7923                           ;stkvar	_dest @ sp[(-4)+-2]
  7924                           
  7925                           ;incstack = 0
  7926  014BCA  0EFA               	movlw	-6
  7927  014BCC  006F FF8C  F02F    	movff	plusw1,btemp+10
  7928  014BD2  0EFB               	movlw	-5
  7929  014BD4  006F FF8C  F030    	movff	plusw1,btemp+11
  7930                           
  7931                           ;stkvar	_s @ sp[(-4)+0]
  7932  014BDA  0EFD               	movlw	-3
  7933  014BDC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  7934  014BE2  0EFC               	movlw	-4
  7935  014BE4  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  7936                           
  7937                           ;stkvar	_n @ sp[(-4)+-6]
  7938  014BEA  0EF6               	movlw	-10
  7939  014BEC  006F FF8C  F025    	movff	plusw1,btemp
  7940  014BF2  0EF7               	movlw	-9
  7941  014BF4  50E3               	movf	plusw1,w,c
  7942  014BF6  1025               	iorwf	btemp^0,w,c
  7943  014BF8  B4D8               	btfsc	status,2,c
  7944  014BFA  D154               	goto	u10550
  7945                           
  7946                           ;stkvar	_c @ sp[(-4)+-4]
  7947                           ;stkvar	_s @ sp[(-4)+0]
  7948  014BFC  0EFC               	movlw	-4
  7949  014BFE  006F FF8F FFD9     	movff	plusw1,fsr2l
  7950  014C04  0EFD               	movlw	-3
  7951  014C06  006F FF8F FFDA     	movff	plusw1,fsr2h
  7952  014C0C  0EF8               	movlw	-8
  7953  014C0E  006F FF8F FFDF     	movff	plusw1,indf2
  7954                           
  7955                           ;stkvar	_c @ sp[(-4)+-4]
  7956                           ;stkvar	_n @ sp[(-4)+-6]
  7957                           ;stkvar	_s @ sp[(-4)+0]
  7958  014C14  0EFC               	movlw	-4
  7959  014C16  006F FF8C  F02F    	movff	plusw1,btemp+10
  7960  014C1C  0EFD               	movlw	-3
  7961  014C1E  006F FF8C  F030    	movff	plusw1,btemp+11
  7962  014C24  0EF6               	movlw	-10
  7963  014C26  50E3               	movf	plusw1,w,c
  7964  014C28  262F               	addwf	(btemp+10)^0,f,c
  7965  014C2A  0EF7               	movlw	-9
  7966  014C2C  50E3               	movf	plusw1,w,c
  7967  014C2E  2230               	addwfc	(btemp+11)^0,f,c
  7968  014C30  0EFF               	movlw	255
  7969  014C32  242F               	addwf	(btemp+10)^0,w,c
  7970  014C34  6ED9               	movwf	fsr2l,c
  7971  014C36  0EFF               	movlw	255
  7972  014C38  2030               	addwfc	(btemp+11)^0,w,c
  7973  014C3A  6EDA               	movwf	fsr2h,c
  7974  014C3C  0EF8               	movlw	-8
  7975  014C3E  006F FF8F FFDF     	movff	plusw1,indf2
  7976                           
  7977                           ;stkvar	_n @ sp[(-4)+-6]
  7978  014C44  0EF7               	movlw	-9
  7979  014C46  50E3               	movf	plusw1,w,c
  7980  014C48  E108               	bnz	l10722
  7981  014C4A  0EF6               	movlw	-10
  7982  014C4C  006F FF8C  F025    	movff	plusw1,btemp
  7983  014C52  0E03               	movlw	3
  7984  014C54  5E25               	subwf	btemp^0,f,c
  7985  014C56  A0D8               	btfss	status,0,c
  7986  014C58  D125               	goto	u10550
  7987  014C5A                     l10722:
  7988                           
  7989                           ;stkvar	_c @ sp[(-4)+-4]
  7990                           ;stkvar	_s @ sp[(-4)+0]
  7991  014C5A  0EFC               	movlw	-4
  7992  014C5C  006F FF8C  F02F    	movff	plusw1,btemp+10
  7993  014C62  0EFD               	movlw	-3
  7994  014C64  006F FF8C  F030    	movff	plusw1,btemp+11
  7995  014C6A  0E01               	movlw	1
  7996  014C6C  242F               	addwf	(btemp+10)^0,w,c
  7997  014C6E  6ED9               	movwf	fsr2l,c
  7998  014C70  0E00               	movlw	0
  7999  014C72  2030               	addwfc	(btemp+11)^0,w,c
  8000  014C74  6EDA               	movwf	fsr2h,c
  8001  014C76  0EF8               	movlw	-8
  8002  014C78  006F FF8F FFDF     	movff	plusw1,indf2
  8003                           
  8004                           ;stkvar	_c @ sp[(-4)+-4]
  8005                           ;stkvar	_s @ sp[(-4)+0]
  8006  014C7E  0EFC               	movlw	-4
  8007  014C80  006F FF8C  F02F    	movff	plusw1,btemp+10
  8008  014C86  0EFD               	movlw	-3
  8009  014C88  006F FF8C  F030    	movff	plusw1,btemp+11
  8010  014C8E  0E02               	movlw	2
  8011  014C90  242F               	addwf	(btemp+10)^0,w,c
  8012  014C92  6ED9               	movwf	fsr2l,c
  8013  014C94  0E00               	movlw	0
  8014  014C96  2030               	addwfc	(btemp+11)^0,w,c
  8015  014C98  6EDA               	movwf	fsr2h,c
  8016  014C9A  0EF8               	movlw	-8
  8017  014C9C  006F FF8F FFDF     	movff	plusw1,indf2
  8018                           
  8019                           ;stkvar	_c @ sp[(-4)+-4]
  8020                           ;stkvar	_n @ sp[(-4)+-6]
  8021                           ;stkvar	_s @ sp[(-4)+0]
  8022  014CA2  0EFC               	movlw	-4
  8023  014CA4  006F FF8C  F02F    	movff	plusw1,btemp+10
  8024  014CAA  0EFD               	movlw	-3
  8025  014CAC  006F FF8C  F030    	movff	plusw1,btemp+11
  8026  014CB2  0EF6               	movlw	-10
  8027  014CB4  50E3               	movf	plusw1,w,c
  8028  014CB6  262F               	addwf	(btemp+10)^0,f,c
  8029  014CB8  0EF7               	movlw	-9
  8030  014CBA  50E3               	movf	plusw1,w,c
  8031  014CBC  2230               	addwfc	(btemp+11)^0,f,c
  8032  014CBE  0EFE               	movlw	254
  8033  014CC0  242F               	addwf	(btemp+10)^0,w,c
  8034  014CC2  6ED9               	movwf	fsr2l,c
  8035  014CC4  0EFF               	movlw	255
  8036  014CC6  2030               	addwfc	(btemp+11)^0,w,c
  8037  014CC8  6EDA               	movwf	fsr2h,c
  8038  014CCA  0EF8               	movlw	-8
  8039  014CCC  006F FF8F FFDF     	movff	plusw1,indf2
  8040                           
  8041                           ;stkvar	_c @ sp[(-4)+-4]
  8042                           ;stkvar	_n @ sp[(-4)+-6]
  8043                           ;stkvar	_s @ sp[(-4)+0]
  8044  014CD2  0EFC               	movlw	-4
  8045  014CD4  006F FF8C  F02F    	movff	plusw1,btemp+10
  8046  014CDA  0EFD               	movlw	-3
  8047  014CDC  006F FF8C  F030    	movff	plusw1,btemp+11
  8048  014CE2  0EF6               	movlw	-10
  8049  014CE4  50E3               	movf	plusw1,w,c
  8050  014CE6  262F               	addwf	(btemp+10)^0,f,c
  8051  014CE8  0EF7               	movlw	-9
  8052  014CEA  50E3               	movf	plusw1,w,c
  8053  014CEC  2230               	addwfc	(btemp+11)^0,f,c
  8054  014CEE  0EFD               	movlw	253
  8055  014CF0  242F               	addwf	(btemp+10)^0,w,c
  8056  014CF2  6ED9               	movwf	fsr2l,c
  8057  014CF4  0EFF               	movlw	255
  8058  014CF6  2030               	addwfc	(btemp+11)^0,w,c
  8059  014CF8  6EDA               	movwf	fsr2h,c
  8060  014CFA  0EF8               	movlw	-8
  8061  014CFC  006F FF8F FFDF     	movff	plusw1,indf2
  8062                           
  8063                           ;stkvar	_n @ sp[(-4)+-6]
  8064  014D02  0EF7               	movlw	-9
  8065  014D04  50E3               	movf	plusw1,w,c
  8066  014D06  E108               	bnz	l10728
  8067  014D08  0EF6               	movlw	-10
  8068  014D0A  006F FF8C  F025    	movff	plusw1,btemp
  8069  014D10  0E07               	movlw	7
  8070  014D12  5E25               	subwf	btemp^0,f,c
  8071  014D14  A0D8               	btfss	status,0,c
  8072  014D16  D0C6               	goto	u10550
  8073  014D18                     l10728:
  8074                           
  8075                           ;stkvar	_c @ sp[(-4)+-4]
  8076                           ;stkvar	_s @ sp[(-4)+0]
  8077  014D18  0EFC               	movlw	-4
  8078  014D1A  006F FF8C  F02F    	movff	plusw1,btemp+10
  8079  014D20  0EFD               	movlw	-3
  8080  014D22  006F FF8C  F030    	movff	plusw1,btemp+11
  8081  014D28  0E03               	movlw	3
  8082  014D2A  242F               	addwf	(btemp+10)^0,w,c
  8083  014D2C  6ED9               	movwf	fsr2l,c
  8084  014D2E  0E00               	movlw	0
  8085  014D30  2030               	addwfc	(btemp+11)^0,w,c
  8086  014D32  6EDA               	movwf	fsr2h,c
  8087  014D34  0EF8               	movlw	-8
  8088  014D36  006F FF8F FFDF     	movff	plusw1,indf2
  8089                           
  8090                           ;stkvar	_c @ sp[(-4)+-4]
  8091                           ;stkvar	_n @ sp[(-4)+-6]
  8092                           ;stkvar	_s @ sp[(-4)+0]
  8093  014D3C  0EFC               	movlw	-4
  8094  014D3E  006F FF8C  F02F    	movff	plusw1,btemp+10
  8095  014D44  0EFD               	movlw	-3
  8096  014D46  006F FF8C  F030    	movff	plusw1,btemp+11
  8097  014D4C  0EF6               	movlw	-10
  8098  014D4E  50E3               	movf	plusw1,w,c
  8099  014D50  262F               	addwf	(btemp+10)^0,f,c
  8100  014D52  0EF7               	movlw	-9
  8101  014D54  50E3               	movf	plusw1,w,c
  8102  014D56  2230               	addwfc	(btemp+11)^0,f,c
  8103  014D58  0EFC               	movlw	252
  8104  014D5A  242F               	addwf	(btemp+10)^0,w,c
  8105  014D5C  6ED9               	movwf	fsr2l,c
  8106  014D5E  0EFF               	movlw	255
  8107  014D60  2030               	addwfc	(btemp+11)^0,w,c
  8108  014D62  6EDA               	movwf	fsr2h,c
  8109  014D64  0EF8               	movlw	-8
  8110  014D66  006F FF8F FFDF     	movff	plusw1,indf2
  8111                           
  8112                           ;stkvar	_n @ sp[(-4)+-6]
  8113  014D6C  0EF7               	movlw	-9
  8114  014D6E  50E3               	movf	plusw1,w,c
  8115  014D70  E108               	bnz	l10734
  8116  014D72  0EF6               	movlw	-10
  8117  014D74  006F FF8C  F025    	movff	plusw1,btemp
  8118  014D7A  0E09               	movlw	9
  8119  014D7C  5E25               	subwf	btemp^0,f,c
  8120  014D7E  A0D8               	btfss	status,0,c
  8121  014D80  D091               	goto	u10550
  8122  014D82                     l10734:
  8123                           
  8124                           ;stkvar	_s @ sp[(-4)+0]
  8125  014D82  0EFC               	movlw	-4
  8126  014D84  006F FF8C  F02F    	movff	plusw1,btemp+10
  8127  014D8A  1E2F               	comf	(btemp+10)^0,f,c
  8128  014D8C  0EFD               	movlw	-3
  8129  014D8E  006F FF8C  F030    	movff	plusw1,btemp+11
  8130  014D94  1E30               	comf	(btemp+11)^0,f,c
  8131  014D96  2A2F               	incf	(btemp+10)^0,f,c
  8132  014D98  B4D8               	btfsc	status,2,c
  8133  014D9A  2A30               	incf	(btemp+11)^0,f,c
  8134  014D9C  0E03               	movlw	3
  8135  014D9E  162F               	andwf	(btemp+10)^0,f,c
  8136  014DA0  0E00               	movlw	0
  8137  014DA2  1630               	andwf	(btemp+11)^0,f,c
  8138                           
  8139                           ;stkvar	_k @ sp[(-4)+2]
  8140  014DA4  0EFE               	movlw	-2
  8141  014DA6  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  8142  014DAC  0EFF               	movlw	-1
  8143  014DAE  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  8144                           
  8145                           ;stkvar	_k @ sp[(-4)+2]
  8146                           ;stkvar	_s @ sp[(-4)+0]
  8147  014DB4  0EFC               	movlw	-4
  8148  014DB6  50E3               	movf	plusw1,w,c
  8149  014DB8  6E25               	movwf	btemp^0,c
  8150  014DBA  0EFE               	movlw	-2
  8151  014DBC  50E3               	movf	plusw1,w,c
  8152  014DBE  2625               	addwf	btemp^0,f,c
  8153  014DC0  0EFC               	movlw	-4
  8154  014DC2  0060  F097  FFE3   	movff	btemp,plusw1
  8155  014DC8  0EFD               	movlw	-3
  8156  014DCA  50E3               	movf	plusw1,w,c
  8157  014DCC  6E25               	movwf	btemp^0,c
  8158  014DCE  0EFF               	movlw	-1
  8159  014DD0  50E3               	movf	plusw1,w,c
  8160  014DD2  2225               	addwfc	btemp^0,f,c
  8161  014DD4  0EFD               	movlw	-3
  8162  014DD6  0060  F097  FFE3   	movff	btemp,plusw1
  8163                           
  8164                           ;stkvar	_k @ sp[(-4)+2]
  8165                           ;stkvar	_n @ sp[(-4)+-6]
  8166  014DDC  0EF6               	movlw	-10
  8167  014DDE  50E3               	movf	plusw1,w,c
  8168  014DE0  6E25               	movwf	btemp^0,c
  8169  014DE2  0EFE               	movlw	-2
  8170  014DE4  50E3               	movf	plusw1,w,c
  8171  014DE6  5E25               	subwf	btemp^0,f,c
  8172  014DE8  0EF6               	movlw	-10
  8173  014DEA  0060  F097  FFE3   	movff	btemp,plusw1
  8174  014DF0  0EF7               	movlw	-9
  8175  014DF2  50E3               	movf	plusw1,w,c
  8176  014DF4  6E25               	movwf	btemp^0,c
  8177  014DF6  0EFF               	movlw	-1
  8178  014DF8  50E3               	movf	plusw1,w,c
  8179  014DFA  5A25               	subwfb	btemp^0,f,c
  8180  014DFC  0EF7               	movlw	-9
  8181  014DFE  0060  F097  FFE3   	movff	btemp,plusw1
  8182  014E04  0EFC               	movlw	252
  8183  014E06  6E2F               	movwf	(btemp+10)^0,c
  8184  014E08  0EFF               	movlw	255
  8185  014E0A  6E30               	movwf	(btemp+11)^0,c
  8186                           
  8187                           ;stkvar	_n @ sp[(-4)+-6]
  8188  014E0C  0EF6               	movlw	-10
  8189  014E0E  006F FF8C  F025    	movff	plusw1,btemp
  8190  014E14  502F               	movf	(btemp+10)^0,w,c
  8191  014E16  1625               	andwf	btemp^0,f,c
  8192  014E18  0EF6               	movlw	-10
  8193  014E1A  0060  F097  FFE3   	movff	btemp,plusw1
  8194  014E20  0EF7               	movlw	-9
  8195  014E22  006F FF8C  F025    	movff	plusw1,btemp
  8196  014E28  5030               	movf	(btemp+11)^0,w,c
  8197  014E2A  1625               	andwf	btemp^0,f,c
  8198  014E2C  0EF7               	movlw	-9
  8199  014E2E  D02E               	goto	L6
  8200  014E30                     l10742:
  8201                           
  8202                           ;stkvar	_c @ sp[(-4)+-4]
  8203                           ;stkvar	_s @ sp[(-4)+0]
  8204  014E30  0EFC               	movlw	-4
  8205  014E32  006F FF8F FFD9     	movff	plusw1,fsr2l
  8206  014E38  0EFD               	movlw	-3
  8207  014E3A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8208  014E40  0EF8               	movlw	-8
  8209  014E42  006F FF8F FFDF     	movff	plusw1,indf2
  8210                           
  8211                           ;stkvar	_n @ sp[(-4)+-6]
  8212  014E48  0EF6               	movlw	-10
  8213  014E4A  006F FF8C  F025    	movff	plusw1,btemp
  8214  014E50  0E01               	movlw	1
  8215  014E52  5E25               	subwf	btemp^0,f,c
  8216  014E54  0EF6               	movlw	-10
  8217  014E56  0060  F097  FFE3   	movff	btemp,plusw1
  8218  014E5C  0EF7               	movlw	-9
  8219  014E5E  006F FF8C  F025    	movff	plusw1,btemp
  8220  014E64  0E00               	movlw	0
  8221  014E66  5A25               	subwfb	btemp^0,f,c
  8222  014E68  0EF7               	movlw	-9
  8223  014E6A  0060  F097  FFE3   	movff	btemp,plusw1
  8224                           
  8225                           ;stkvar	_s @ sp[(-4)+0]
  8226  014E70  0EFC               	movlw	-4
  8227  014E72  50E3               	movf	plusw1,w,c
  8228  014E74  0F01               	addlw	1
  8229  014E76  6E25               	movwf	btemp^0,c
  8230  014E78  0EFC               	movlw	-4
  8231  014E7A  0060  F097  FFE3   	movff	btemp,plusw1
  8232  014E80  6A25               	clrf	btemp^0,c
  8233  014E82  0EFD               	movlw	-3
  8234  014E84  50E3               	movf	plusw1,w,c
  8235  014E86  2025               	addwfc	btemp^0,w,c
  8236  014E88  6E25               	movwf	btemp^0,c
  8237  014E8A  0EFD               	movlw	-3
  8238  014E8C                     L6:
  8239  014E8C  0060  F097  FFE3   	movff	btemp,plusw1
  8240                           
  8241                           ;stkvar	_n @ sp[(-4)+-6]
  8242  014E92  0EF6               	movlw	-10
  8243  014E94  006F FF8C  F025    	movff	plusw1,btemp
  8244  014E9A  0EF7               	movlw	-9
  8245  014E9C  50E3               	movf	plusw1,w,c
  8246  014E9E  1025               	iorwf	btemp^0,w,c
  8247  014EA0  A4D8               	btfss	status,2,c
  8248  014EA2  D7C6               	goto	l10742
  8249  014EA4                     u10550:
  8250                           
  8251                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  8252  014EA4  0EF6               	movlw	246
  8253  014EA6  26E1               	addwf	fsr1l,f,c
  8254  014EA8  0EFF               	movlw	255
  8255  014EAA  22E2               	addwfc	fsr1h,f,c
  8256  014EAC  0012               	return		;funcret
  8257  014EAE                     __end_of_memset:
  8258                           	opt callstack 0
  8259                           
  8260 ;; *************** function _printf *****************
  8261 ;; Defined at:
  8262 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  8263 ;; Parameters:    Size  Location     Type
  8264 ;;  fmt             2  [STACK] PTR const unsigned char 
  8265 ;;		 -> STR_26(3), STR_25(3), STR_24(3), 
  8266 ;; Auto vars:     Size  Location     Type
  8267 ;;  ap              2  [STACK] PTR void [1]
  8268 ;;		 -> ?_printf(2), ?_sprintf(2), 
  8269 ;;  ret             2    0        int 
  8270 ;; Return value:  Size  Location     Type
  8271 ;;                  2  [STACK] int 
  8272 ;; Registers used:
  8273 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8274 ;; Tracked objects:
  8275 ;;		On entry : 3F/3B
  8276 ;;		On exit  : 3F/0
  8277 ;;		Unchanged: 0/0
  8278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8283 ;;Total ram usage:        0 bytes
  8284 ;; Hardware stack levels used:    1
  8285 ;; Hardware stack levels required when called:   15
  8286 ;; This function calls:
  8287 ;;		_vfprintf
  8288 ;; This function is called by:
  8289 ;;		_eaDogM_WriteString
  8290 ;;		_send_lcd_cmd_dma
  8291 ;; This function uses a reentrant model
  8292 ;;
  8293                           
  8294                           	psect	text39
  8295  018278                     __ptext39:
  8296                           	opt callstack 0
  8297  018278                     _printf:
  8298                           	opt callstack 0
  8299                           
  8300                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8301  018278  52E6               	movf	postinc1,f,c
  8302  01827A  52E6               	movf	postinc1,f,c
  8303                           
  8304                           ;stkvar	?_printf @ sp[(-2)+-3]
  8305                           
  8306                           ;incstack = 0
  8307  01827C  0EFB               	movlw	251
  8308  01827E  24E1               	addwf	fsr1l,w,c
  8309  018280  6E2F               	movwf	(btemp+10)^0,c
  8310  018282  0EFF               	movlw	255
  8311  018284  20E2               	addwfc	fsr1h,w,c
  8312  018286  6E30               	movwf	(btemp+11)^0,c
  8313                           
  8314                           ;stkvar	_ap @ sp[(-2)+0]
  8315  018288  0EFF               	movlw	-1
  8316  01828A  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  8317  018290  0EFE               	movlw	-2
  8318  018292  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  8319                           
  8320                           ;stkvar	_ap @ sp[(-2)+0]
  8321  018298  0EFE               	movlw	254
  8322  01829A  24E1               	addwf	fsr1l,w,c
  8323  01829C  6E25               	movwf	btemp^0,c
  8324  01829E  0EFF               	movlw	255
  8325  0182A0  20E2               	addwfc	fsr1h,w,c
  8326  0182A2  6E26               	movwf	(btemp+1)^0,c
  8327  0182A4  0060  F097  FFE6   	movff	btemp,postinc1
  8328  0182AA  0060  F09B  FFE6   	movff	btemp+1,postinc1
  8329                           
  8330                           ;stkvar	_fmt @ sp[(-4)+-3]
  8331  0182B0  0EF9               	movlw	-7
  8332  0182B2  006F FF8F FFE6     	movff	plusw1,postinc1
  8333  0182B8  006F FF8F FFE6     	movff	plusw1,postinc1
  8334  0182BE  0E00               	movlw	0
  8335  0182C0  6EE6               	movwf	postinc1,c
  8336  0182C2  0E00               	movlw	0
  8337  0182C4  6EE6               	movwf	postinc1,c
  8338  0182C6  EC12  F0BC         	call	_vfprintf	;wreg free
  8339                           
  8340                           ; BSR set to: 0
  8341                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  8342  0182CA  52E5               	movf	postdec1,f,c
  8343  0182CC  52E5               	movf	postdec1,f,c
  8344  0182CE  52E5               	movf	postdec1,f,c
  8345  0182D0  50E7               	movf	indf1,w,c
  8346  0182D2  5EE1               	subwf	fsr1l,f,c
  8347  0182D4  0E00               	movlw	0
  8348  0182D6  5AE2               	subwfb	fsr1h,f,c
  8349  0182D8  0012               	return		;funcret
  8350  0182DA                     __end_of_printf:
  8351                           	opt callstack 0
  8352                           
  8353 ;; *************** function _vfprintf *****************
  8354 ;; Defined at:
  8355 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8356 ;; Parameters:    Size  Location     Type
  8357 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8358 ;;		 -> f(6), NULL(0), 
  8359 ;;  fmt             2  [STACK] PTR const unsigned char 
  8360 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
  8361 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
  8362 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
  8363 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
  8364 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(17), 
  8365 ;;		 -> STR_22(16), STR_21(16), STR_20(19), STR_19(19), 
  8366 ;;		 -> STR_18(19), STR_17(19), STR_16(19), STR_15(19), 
  8367 ;;		 -> STR_14(19), STR_13(19), STR_12(19), STR_11(17), 
  8368 ;;		 -> STR_10(16), STR_9(16), STR_8(17), STR_6(15), 
  8369 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  8370 ;;  ap              2  [STACK] PTR PTR void 
  8371 ;;		 -> ap(2), ap(2), 
  8372 ;; Auto vars:     Size  Location     Type
  8373 ;;  cfmt            2  [STACK] PTR unsigned char 
  8374 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
  8375 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
  8376 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
  8377 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
  8378 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(17), 
  8379 ;;		 -> STR_22(16), STR_21(16), STR_20(19), STR_19(19), 
  8380 ;;		 -> STR_18(19), STR_17(19), STR_16(19), STR_15(19), 
  8381 ;;		 -> STR_14(19), STR_13(19), STR_12(19), STR_11(17), 
  8382 ;;		 -> STR_10(16), STR_9(16), STR_8(17), STR_6(15), 
  8383 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  8384 ;; Return value:  Size  Location     Type
  8385 ;;                  2  [STACK] int 
  8386 ;; Registers used:
  8387 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8388 ;; Tracked objects:
  8389 ;;		On entry : 0/1
  8390 ;;		On exit  : 3F/0
  8391 ;;		Unchanged: 0/0
  8392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8397 ;;Total ram usage:        0 bytes
  8398 ;; Hardware stack levels used:    1
  8399 ;; Hardware stack levels required when called:   14
  8400 ;; This function calls:
  8401 ;;		_vfpfcnvrt
  8402 ;; This function is called by:
  8403 ;;		_sprintf
  8404 ;;		_printf
  8405 ;; This function uses a reentrant model
  8406 ;;
  8407                           
  8408                           	psect	text40
  8409  017824                     __ptext40:
  8410                           	opt callstack 0
  8411  017824                     _vfprintf:
  8412                           	opt callstack 0
  8413                           
  8414                           ; BSR set to: 0
  8415                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8416  017824  52E6               	movf	postinc1,f,c
  8417  017826  52E6               	movf	postinc1,f,c
  8418                           
  8419                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  8420                           ;stkvar	_fmt @ sp[(-2)+-4]
  8421                           
  8422                           ;incstack = 0
  8423  017828  0EFA               	movlw	-6
  8424  01782A  006F FF8C  F02F    	movff	plusw1,btemp+10
  8425  017830  0EFB               	movlw	-5
  8426  017832  006F FF8C  F030    	movff	plusw1,btemp+11
  8427                           
  8428                           ;stkvar	_cfmt @ sp[(-2)+0]
  8429  017838  0EFF               	movlw	-1
  8430  01783A  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  8431  017840  0EFE               	movlw	-2
  8432  017842  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  8433                           
  8434                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  8435  017848  0100               	movlb	0	; () banked
  8436  01784A  6BC1               	clrf	_nout& (0+255),b
  8437  01784C  6BC2               	clrf	(_nout+1)& (0+255),b
  8438                           
  8439                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  8440  01784E  D021               	goto	l10756
  8441  017850                     l10754:
  8442                           
  8443                           ; BSR set to: 0
  8444                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  8445                           ;stkvar	_ap @ sp[(-2)+-6]
  8446  017850  0EF8               	movlw	-8
  8447  017852  006F FF8F FFE6     	movff	plusw1,postinc1
  8448  017858  006F FF8F FFE6     	movff	plusw1,postinc1
  8449                           
  8450                           ;stkvar	_cfmt @ sp[(-4)+0]
  8451  01785E  0EFC               	movlw	252
  8452  017860  24E1               	addwf	fsr1l,w,c
  8453  017862  6E25               	movwf	btemp^0,c
  8454  017864  0EFF               	movlw	255
  8455  017866  20E2               	addwfc	fsr1h,w,c
  8456  017868  6E26               	movwf	(btemp+1)^0,c
  8457  01786A  0060  F097  FFE6   	movff	btemp,postinc1
  8458  017870  0060  F09B  FFE6   	movff	btemp+1,postinc1
  8459                           
  8460                           ;stkvar	_fp @ sp[(-6)+-2]
  8461  017876  0EF8               	movlw	-8
  8462  017878  006F FF8F FFE6     	movff	plusw1,postinc1
  8463  01787E  006F FF8F FFE6     	movff	plusw1,postinc1
  8464  017884  EC22  F089         	call	_vfpfcnvrt	;wreg free
  8465  017888  5025               	movf	btemp^0,w,c
  8466  01788A  0100               	movlb	0	; () banked
  8467  01788C  27C1               	addwf	_nout& (0+255),f,b
  8468  01788E  5026               	movf	(btemp+1)^0,w,c
  8469  017890  23C2               	addwfc	(_nout+1)& (0+255),f,b
  8470  017892                     l10756:
  8471                           
  8472                           ; BSR set to: 0
  8473                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  8474                           ;stkvar	_cfmt @ sp[(-2)+0]
  8475  017892  50E1               	movf	fsr1l,w,c
  8476  017894  0FFE               	addlw	-2
  8477  017896  6ED9               	movwf	fsr2l,c
  8478  017898  50E2               	movf	fsr1h,w,c
  8479  01789A  6EDA               	movwf	fsr2h,c
  8480  01789C  0EFF               	movlw	255
  8481  01789E  22DA               	addwfc	fsr2h,f,c
  8482  0178A0  006F FF7B FFF6     	movff	postinc2,tblptrl
  8483  0178A6  006F FF77 FFF7     	movff	postdec2,tblptrh
  8484  0178AC                     	if	0	;tblptru may be non-zero
  8485  0178AC                     	endif
  8486  0178AC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8487  0178AC  0E00               	movlw	low (__mediumconst shr (0+16))
  8488  0178AE  6EF8               	movwf	tblptru,c
  8489  0178B0                     	endif
  8490  0178B0  0008               	tblrd		*
  8491  0178B2  50F5               	movf	tablat,w,c
  8492  0178B4  0900               	iorlw	0
  8493  0178B6  A4D8               	btfss	status,2,c
  8494  0178B8  D7CB               	goto	l10754
  8495                           
  8496                           ; BSR set to: 0
  8497                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  8498  0178BA  0060  F304  F025   	movff	_nout,btemp
  8499  0178C0  0060  F308  F026   	movff	_nout+1,btemp+1
  8500                           
  8501                           ; BSR set to: 0
  8502                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  8503  0178C6  0EF8               	movlw	248
  8504  0178C8  26E1               	addwf	fsr1l,f,c
  8505  0178CA  0EFF               	movlw	255
  8506  0178CC  22E2               	addwfc	fsr1h,f,c
  8507  0178CE  0012               	return		;funcret
  8508  0178D0                     __end_of_vfprintf:
  8509                           	opt callstack 0
  8510                           
  8511 ;; *************** function _vfpfcnvrt *****************
  8512 ;; Defined at:
  8513 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8514 ;; Parameters:    Size  Location     Type
  8515 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8516 ;;		 -> f(6), NULL(0), 
  8517 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  8518 ;;		 -> cfmt(2), 
  8519 ;;  ap              2  [STACK] PTR PTR void 
  8520 ;;		 -> ap(2), ap(2), 
  8521 ;; Auto vars:     Size  Location     Type
  8522 ;;  llu             8  [STACK] unsigned long long 
  8523 ;;  ll              8  [STACK] long long 
  8524 ;;  f               4  [STACK] long long 
  8525 ;;  ct              3  [STACK] unsigned char [3]
  8526 ;;  vp              3    0        PTR void 
  8527 ;;  cp              2  [STACK] PTR unsigned char 
  8528 ;;		 -> ?_printf(2), ?_sprintf(2), STR_28(9), STR_27(12), 
  8529 ;;		 -> D.lcd(288), D(290), T(144), STR_7(6), 
  8530 ;;		 -> STR_3(6), V(188), 
  8531 ;;  i               2    0        int 
  8532 ;;  done            2    0        int 
  8533 ;;  c               1  [STACK] unsigned char 
  8534 ;; Return value:  Size  Location     Type
  8535 ;;                  2  [STACK] int 
  8536 ;; Registers used:
  8537 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8538 ;; Tracked objects:
  8539 ;;		On entry : 0/0
  8540 ;;		On exit  : 0/0
  8541 ;;		Unchanged: 0/0
  8542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8547 ;;Total ram usage:        0 bytes
  8548 ;; Hardware stack levels used:    1
  8549 ;; Hardware stack levels required when called:   13
  8550 ;; This function calls:
  8551 ;;		_atoi
  8552 ;;		_ctoa
  8553 ;;		_dtoa
  8554 ;;		_efgtoa
  8555 ;;		_fputc
  8556 ;;		_isdigit
  8557 ;;		_isupper
  8558 ;;		_stoa
  8559 ;;		_strncmp
  8560 ;;		_tolower
  8561 ;;		_xtoa
  8562 ;; This function is called by:
  8563 ;;		_vfprintf
  8564 ;; This function uses a reentrant model
  8565 ;;
  8566                           
  8567                           	psect	text41
  8568  011244                     __ptext41:
  8569                           	opt callstack 0
  8570  011244                     _vfpfcnvrt:
  8571                           	opt callstack 0
  8572                           
  8573                           ; BSR set to: 0
  8574                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  8575  011244  0E20               	movlw	32
  8576  011246  26E1               	addwf	fsr1l,f,c
  8577  011248  0E00               	movlw	0
  8578  01124A  22E2               	addwfc	fsr1h,f,c
  8579                           
  8580                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  8581                           ;stkvar	_fmt @ sp[(-32)+-4]
  8582                           
  8583                           ;incstack = 0
  8584  01124C  0EDC               	movlw	-36
  8585  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8586  011254  0EDD               	movlw	-35
  8587  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  8588  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8589  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  8590  011268                     	if	0	;tblptru may be non-zero
  8591  011268                     	endif
  8592  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8593  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  8594  01126A  6EF8               	movwf	tblptru,c
  8595  01126C                     	endif
  8596  01126C  0008               	tblrd		*
  8597  01126E  50F5               	movf	tablat,w,c
  8598  011270  0A25               	xorlw	37
  8599  011272  A4D8               	btfss	status,2,c
  8600  011274  EF92  F08E         	goto	l10700
  8601                           
  8602                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  8603                           ;stkvar	_fmt @ sp[(-32)+-4]
  8604  011278  0EDC               	movlw	-36
  8605  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8606  011280  0EDD               	movlw	-35
  8607  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  8608  011288  2ADE               	incf	postinc2,f,c
  8609  01128A  0E00               	movlw	0
  8610  01128C  22DD               	addwfc	postdec2,f,c
  8611                           
  8612                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  8613  01128E  6A0A               	clrf	_width^0,c
  8614  011290  6A0B               	clrf	(_width+1)^0,c
  8615  011292  6A0E               	clrf	_flags^0,c
  8616  011294  6A0F               	clrf	(_flags+1)^0,c
  8617                           
  8618                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  8619  011296  680C               	setf	_prec^0,c
  8620  011298  680D               	setf	(_prec+1)^0,c
  8621                           
  8622                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  8623                           ;stkvar	_fmt @ sp[(-32)+-4]
  8624  01129A  0EDC               	movlw	-36
  8625  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8626  0112A2  0EDD               	movlw	-35
  8627  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8628  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  8629  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  8630  0112B6                     	if	0	;tblptru may be non-zero
  8631  0112B6                     	endif
  8632  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8633  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  8634  0112B8  6EF8               	movwf	tblptru,c
  8635  0112BA                     	endif
  8636  0112BA  0008               	tblrd		*
  8637  0112BC  50F5               	movf	tablat,w,c
  8638  0112BE  0A2A               	xorlw	42
  8639  0112C0  A4D8               	btfss	status,2,c
  8640  0112C2  D031               	goto	l10564
  8641                           
  8642                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  8643                           ;stkvar	_fmt @ sp[(-32)+-4]
  8644  0112C4  0EDC               	movlw	-36
  8645  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  8646  0112CC  0EDD               	movlw	-35
  8647  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  8648  0112D4  2ADE               	incf	postinc2,f,c
  8649  0112D6  0E00               	movlw	0
  8650  0112D8  22DD               	addwfc	postdec2,f,c
  8651                           
  8652                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  8653                           ;stkvar	_ap @ sp[(-32)+-6]
  8654  0112DA  0EDA               	movlw	-38
  8655  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8656  0112E2  0EDB               	movlw	-37
  8657  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8658  0112EA  0E02               	movlw	2
  8659  0112EC  5EDE               	subwf	postinc2,f,c
  8660  0112EE  0E00               	movlw	0
  8661  0112F0  5ADD               	subwfb	postdec2,f,c
  8662  0112F2  006F FF78  F02F    	movff	postinc2,btemp+10
  8663  0112F8  006F FF74  F030    	movff	postdec2,btemp+11
  8664  0112FE  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  8665  011304  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  8666  01130A  006F FF78  F00A    	movff	postinc2,_width
  8667  011310  006F FF74  F00B    	movff	postdec2,_width+1
  8668                           
  8669                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  8670  011316  AE0B               	btfss	(_width+1)^0,7,c
  8671  011318  D066               	goto	u10310
  8672                           
  8673                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  8674  01131A  800E               	bsf	_flags^0,0,c
  8675                           
  8676                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  8677  01131C  6C0A               	negf	_width^0,c
  8678  01131E  1E0B               	comf	(_width+1)^0,f,c
  8679  011320  B0D8               	btfsc	status,0,c
  8680  011322  2A0B               	incf	(_width+1)^0,f,c
  8681  011324  D060               	goto	u10310
  8682  011326                     l10564:
  8683                           
  8684                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  8685                           ;stkvar	_fmt @ sp[(-32)+-4]
  8686  011326  0EDC               	movlw	-36
  8687  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
  8688  01132E  0EDD               	movlw	-35
  8689  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
  8690  011336  006F FF78  F02F    	movff	postinc2,btemp+10
  8691  01133C  006F FF74  F030    	movff	postdec2,btemp+11
  8692  011342  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  8693  011348  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  8694  01134E  EC63  F0AB         	call	_atoi	;wreg free
  8695  011352  0060  F094  F00A   	movff	btemp,_width
  8696  011358  0060  F098  F00B   	movff	btemp+1,_width+1
  8697                           
  8698                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8699  01135E  D00B               	goto	l10568
  8700  011360                     l10566:
  8701                           
  8702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  8703                           ;stkvar	_fmt @ sp[(-32)+-4]
  8704  011360  0EDC               	movlw	-36
  8705  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
  8706  011368  0EDD               	movlw	-35
  8707  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8708  011370  2ADE               	incf	postinc2,f,c
  8709  011372  0E00               	movlw	0
  8710  011374  22DD               	addwfc	postdec2,f,c
  8711  011376                     l10568:
  8712  011376  0ED0               	movlw	208
  8713  011378  6E2F               	movwf	(btemp+10)^0,c
  8714  01137A  0EFF               	movlw	255
  8715  01137C  6E30               	movwf	(btemp+11)^0,c
  8716                           
  8717                           ;stkvar	_fmt @ sp[(-32)+-4]
  8718  01137E  0EDC               	movlw	-36
  8719  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
  8720  011386  0EDD               	movlw	-35
  8721  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
  8722  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
  8723  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
  8724  01139A                     	if	0	;tblptru may be non-zero
  8725  01139A                     	endif
  8726  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8727  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
  8728  01139C  6EF8               	movwf	tblptru,c
  8729  01139E                     	endif
  8730  01139E  0008               	tblrd		*
  8731  0113A0  50F5               	movf	tablat,w,c
  8732  0113A2  6E2D               	movwf	(btemp+8)^0,c
  8733  0113A4  6A2E               	clrf	(btemp+9)^0,c
  8734  0113A6  502F               	movf	(btemp+10)^0,w,c
  8735  0113A8  262D               	addwf	(btemp+8)^0,f,c
  8736  0113AA  5030               	movf	(btemp+11)^0,w,c
  8737  0113AC  222E               	addwfc	(btemp+9)^0,f,c
  8738  0113AE  502E               	movf	(btemp+9)^0,w,c
  8739  0113B0  E106               	bnz	u10290
  8740  0113B2  0E0A               	movlw	10
  8741  0113B4  5C2D               	subwf	(btemp+8)^0,w,c
  8742  0113B6  B0D8               	btfsc	status,0,c
  8743  0113B8  D002               	goto	u10290
  8744  0113BA  0E01               	movlw	1
  8745  0113BC  D001               	goto	u10300
  8746  0113BE                     u10290:
  8747  0113BE  0E00               	movlw	0
  8748  0113C0                     u10300:
  8749  0113C0  6E2F               	movwf	(btemp+10)^0,c
  8750  0113C2  6A30               	clrf	(btemp+11)^0,c
  8751                           
  8752                           ;stkvar	_vfpfcnvrt$5024 @ sp[(-32)+4]
  8753  0113C4  0EE4               	movlw	-28
  8754  0113C6  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  8755  0113CC  0EE5               	movlw	-27
  8756  0113CE  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  8757                           
  8758                           ;stkvar	_vfpfcnvrt$5024 @ sp[(-32)+4]
  8759  0113D4  0EE4               	movlw	-28
  8760  0113D6  006F FF8C  F025    	movff	plusw1,btemp
  8761  0113DC  0EE5               	movlw	-27
  8762  0113DE  50E3               	movf	plusw1,w,c
  8763  0113E0  1025               	iorwf	btemp^0,w,c
  8764  0113E2  A4D8               	btfss	status,2,c
  8765  0113E4  D7BD               	goto	l10566
  8766  0113E6                     u10310:
  8767                           
  8768                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  8769                           ;stkvar	_fmt @ sp[(-32)+-4]
  8770  0113E6  0EDC               	movlw	-36
  8771  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8772  0113EE  0EDD               	movlw	-35
  8773  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8774  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
  8775  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
  8776  011402                     	if	0	;tblptru may be non-zero
  8777  011402                     	endif
  8778  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8779  011402  0E00               	movlw	low (__mediumconst shr (0+16))
  8780  011404  6EF8               	movwf	tblptru,c
  8781  011406                     	endif
  8782  011406  0008               	tblrd		*
  8783  011408  50F5               	movf	tablat,w,c
  8784  01140A  0A2E               	xorlw	46
  8785  01140C  A4D8               	btfss	status,2,c
  8786  01140E  D0AC               	goto	u10360
  8787                           
  8788                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  8789  011410  6A0C               	clrf	_prec^0,c
  8790  011412  6A0D               	clrf	(_prec+1)^0,c
  8791                           
  8792                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  8793                           ;stkvar	_fmt @ sp[(-32)+-4]
  8794  011414  0EDC               	movlw	-36
  8795  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
  8796  01141C  0EDD               	movlw	-35
  8797  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8798  011424  2ADE               	incf	postinc2,f,c
  8799  011426  0E00               	movlw	0
  8800  011428  22DD               	addwfc	postdec2,f,c
  8801                           
  8802                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  8803                           ;stkvar	_fmt @ sp[(-32)+-4]
  8804  01142A  0EDC               	movlw	-36
  8805  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8806  011432  0EDD               	movlw	-35
  8807  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
  8808  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
  8809  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
  8810  011446                     	if	0	;tblptru may be non-zero
  8811  011446                     	endif
  8812  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8813  011446  0E00               	movlw	low (__mediumconst shr (0+16))
  8814  011448  6EF8               	movwf	tblptru,c
  8815  01144A                     	endif
  8816  01144A  0008               	tblrd		*
  8817  01144C  50F5               	movf	tablat,w,c
  8818  01144E  0A2A               	xorlw	42
  8819  011450  A4D8               	btfss	status,2,c
  8820  011452  D02A               	goto	l10586
  8821                           
  8822                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  8823                           ;stkvar	_fmt @ sp[(-32)+-4]
  8824  011454  0EDC               	movlw	-36
  8825  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
  8826  01145C  0EDD               	movlw	-35
  8827  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8828  011464  2ADE               	incf	postinc2,f,c
  8829  011466  0E00               	movlw	0
  8830  011468  22DD               	addwfc	postdec2,f,c
  8831                           
  8832                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  8833                           ;stkvar	_ap @ sp[(-32)+-6]
  8834  01146A  0EDA               	movlw	-38
  8835  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8836  011472  0EDB               	movlw	-37
  8837  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
  8838  01147A  0E02               	movlw	2
  8839  01147C  5EDE               	subwf	postinc2,f,c
  8840  01147E  0E00               	movlw	0
  8841  011480  5ADD               	subwfb	postdec2,f,c
  8842  011482  006F FF78  F02F    	movff	postinc2,btemp+10
  8843  011488  006F FF74  F030    	movff	postdec2,btemp+11
  8844  01148E  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  8845  011494  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  8846  01149A  006F FF78  F00C    	movff	postinc2,_prec
  8847  0114A0  006F FF74  F00D    	movff	postdec2,_prec+1
  8848                           
  8849                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
  8850  0114A6  D060               	goto	u10360
  8851  0114A8                     l10586:
  8852                           
  8853                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  8854                           ;stkvar	_fmt @ sp[(-32)+-4]
  8855  0114A8  0EDC               	movlw	-36
  8856  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  8857  0114B0  0EDD               	movlw	-35
  8858  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  8859  0114B8  006F FF78  F02F    	movff	postinc2,btemp+10
  8860  0114BE  006F FF74  F030    	movff	postdec2,btemp+11
  8861  0114C4  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  8862  0114CA  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  8863  0114D0  EC63  F0AB         	call	_atoi	;wreg free
  8864  0114D4  0060  F094  F00C   	movff	btemp,_prec
  8865  0114DA  0060  F098  F00D   	movff	btemp+1,_prec+1
  8866                           
  8867                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8868  0114E0  D00B               	goto	l10590
  8869  0114E2                     l10588:
  8870                           
  8871                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  8872                           ;stkvar	_fmt @ sp[(-32)+-4]
  8873  0114E2  0EDC               	movlw	-36
  8874  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  8875  0114EA  0EDD               	movlw	-35
  8876  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  8877  0114F2  2ADE               	incf	postinc2,f,c
  8878  0114F4  0E00               	movlw	0
  8879  0114F6  22DD               	addwfc	postdec2,f,c
  8880  0114F8                     l10590:
  8881  0114F8  0ED0               	movlw	208
  8882  0114FA  6E2F               	movwf	(btemp+10)^0,c
  8883  0114FC  0EFF               	movlw	255
  8884  0114FE  6E30               	movwf	(btemp+11)^0,c
  8885                           
  8886                           ;stkvar	_fmt @ sp[(-32)+-4]
  8887  011500  0EDC               	movlw	-36
  8888  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
  8889  011508  0EDD               	movlw	-35
  8890  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8891  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
  8892  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
  8893  01151C                     	if	0	;tblptru may be non-zero
  8894  01151C                     	endif
  8895  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8896  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
  8897  01151E  6EF8               	movwf	tblptru,c
  8898  011520                     	endif
  8899  011520  0008               	tblrd		*
  8900  011522  50F5               	movf	tablat,w,c
  8901  011524  6E2D               	movwf	(btemp+8)^0,c
  8902  011526  6A2E               	clrf	(btemp+9)^0,c
  8903  011528  502F               	movf	(btemp+10)^0,w,c
  8904  01152A  262D               	addwf	(btemp+8)^0,f,c
  8905  01152C  5030               	movf	(btemp+11)^0,w,c
  8906  01152E  222E               	addwfc	(btemp+9)^0,f,c
  8907  011530  502E               	movf	(btemp+9)^0,w,c
  8908  011532  E106               	bnz	u10340
  8909  011534  0E0A               	movlw	10
  8910  011536  5C2D               	subwf	(btemp+8)^0,w,c
  8911  011538  B0D8               	btfsc	status,0,c
  8912  01153A  D002               	goto	u10340
  8913  01153C  0E01               	movlw	1
  8914  01153E  D001               	goto	u10350
  8915  011540                     u10340:
  8916  011540  0E00               	movlw	0
  8917  011542                     u10350:
  8918  011542  6E2F               	movwf	(btemp+10)^0,c
  8919  011544  6A30               	clrf	(btemp+11)^0,c
  8920                           
  8921                           ;stkvar	_vfpfcnvrt$5025 @ sp[(-32)+0]
  8922  011546  0EE0               	movlw	-32
  8923  011548  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  8924  01154E  0EE1               	movlw	-31
  8925  011550  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  8926                           
  8927                           ;stkvar	_vfpfcnvrt$5025 @ sp[(-32)+0]
  8928  011556  0EE0               	movlw	-32
  8929  011558  006F FF8C  F025    	movff	plusw1,btemp
  8930  01155E  0EE1               	movlw	-31
  8931  011560  50E3               	movf	plusw1,w,c
  8932  011562  1025               	iorwf	btemp^0,w,c
  8933  011564  A4D8               	btfss	status,2,c
  8934  011566  D7BD               	goto	l10588
  8935  011568                     u10360:
  8936                           
  8937                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  8938                           ;stkvar	_fmt @ sp[(-32)+-4]
  8939  011568  0EDC               	movlw	-36
  8940  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8941  011570  0EDD               	movlw	-35
  8942  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
  8943  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
  8944  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
  8945  011584                     	if	0	;tblptru may be non-zero
  8946  011584                     	endif
  8947  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8948  011584  0E00               	movlw	low (__mediumconst shr (0+16))
  8949  011586  6EF8               	movwf	tblptru,c
  8950  011588                     	endif
  8951  011588  0008               	tblrd		*
  8952  01158A  50F5               	movf	tablat,w,c
  8953  01158C  6EE6               	movwf	postinc1,c
  8954  01158E  0E00               	movlw	0
  8955  011590  6EE6               	movwf	postinc1,c
  8956  011592  EC53  F0BF         	call	_tolower	;wreg free
  8957                           
  8958                           ;stkvar	_ct @ sp[(-32)+26]
  8959  011596  0EFA               	movlw	-6
  8960  011598  0060  F097  FFE3   	movff	btemp,plusw1
  8961                           
  8962                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  8963                           ;stkvar	_ct @ sp[(-32)+26]
  8964  01159E  0EFA               	movlw	-6
  8965  0115A0  50E3               	movf	plusw1,w,c
  8966  0115A2  B4D8               	btfsc	status,2,c
  8967  0115A4  D05B               	goto	l10606
  8968                           
  8969                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  8970                           ;stkvar	_ct @ sp[(-32)+26]
  8971  0115A6  0EFB               	movlw	251
  8972  0115A8  24E1               	addwf	fsr1l,w,c
  8973  0115AA  6ED9               	movwf	fsr2l,c
  8974  0115AC  0EFF               	movlw	255
  8975  0115AE  20E2               	addwfc	fsr1h,w,c
  8976  0115B0  6EDA               	movwf	fsr2h,c
  8977                           
  8978                           ;stkvar	_fmt @ sp[(-32)+-4]
  8979  0115B2  0EDC               	movlw	-36
  8980  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
  8981  0115BA  0EDD               	movlw	-35
  8982  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
  8983  0115C2  006F FFB8  F02F    	movff	postinc0,btemp+10
  8984  0115C8  006F FFB4  F030    	movff	postdec0,btemp+11
  8985  0115CE  0E01               	movlw	1
  8986  0115D0  262F               	addwf	(btemp+10)^0,f,c
  8987  0115D2  0E00               	movlw	0
  8988  0115D4  2230               	addwfc	(btemp+11)^0,f,c
  8989  0115D6  0060  F0BF  FFF6   	movff	btemp+10,tblptrl
  8990  0115DC  0060  F0C3  FFF7   	movff	btemp+11,tblptrh
  8991  0115E2                     	if	0	;tblptru may be non-zero
  8992  0115E2                     	endif
  8993  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8994  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
  8995  0115E4  6EF8               	movwf	tblptru,c
  8996  0115E6                     	endif
  8997  0115E6  0008               	tblrd		*
  8998  0115E8  50F5               	movf	tablat,w,c
  8999  0115EA  6EE6               	movwf	postinc1,c
  9000  0115EC  0E00               	movlw	0
  9001  0115EE  6EE6               	movwf	postinc1,c
  9002  0115F0  EC53  F0BF         	call	_tolower	;wreg free
  9003  0115F4  5025               	movf	btemp^0,w,c
  9004  0115F6  6EDF               	movwf	indf2,c
  9005                           
  9006                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  9007                           ;stkvar	_ct @ sp[(-32)+26]
  9008  0115F8  0EFB               	movlw	251
  9009  0115FA  24E1               	addwf	fsr1l,w,c
  9010  0115FC  6ED9               	movwf	fsr2l,c
  9011  0115FE  0EFF               	movlw	255
  9012  011600  20E2               	addwfc	fsr1h,w,c
  9013  011602  6EDA               	movwf	fsr2h,c
  9014  011604  50DF               	movf	indf2,w,c
  9015  011606  B4D8               	btfsc	status,2,c
  9016  011608  D029               	goto	l10606
  9017                           
  9018                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  9019                           ;stkvar	_ct @ sp[(-32)+26]
  9020  01160A  0EFC               	movlw	252
  9021  01160C  24E1               	addwf	fsr1l,w,c
  9022  01160E  6ED9               	movwf	fsr2l,c
  9023  011610  0EFF               	movlw	255
  9024  011612  20E2               	addwfc	fsr1h,w,c
  9025  011614  6EDA               	movwf	fsr2h,c
  9026                           
  9027                           ;stkvar	_fmt @ sp[(-32)+-4]
  9028  011616  0EDC               	movlw	-36
  9029  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
  9030  01161E  0EDD               	movlw	-35
  9031  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
  9032  011626  006F FFB8  F02F    	movff	postinc0,btemp+10
  9033  01162C  006F FFB4  F030    	movff	postdec0,btemp+11
  9034  011632  0E02               	movlw	2
  9035  011634  262F               	addwf	(btemp+10)^0,f,c
  9036  011636  0E00               	movlw	0
  9037  011638  2230               	addwfc	(btemp+11)^0,f,c
  9038  01163A  0060  F0BF  FFF6   	movff	btemp+10,tblptrl
  9039  011640  0060  F0C3  FFF7   	movff	btemp+11,tblptrh
  9040  011646                     	if	0	;tblptru may be non-zero
  9041  011646                     	endif
  9042  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9043  011646  0E00               	movlw	low (__mediumconst shr (0+16))
  9044  011648  6EF8               	movwf	tblptru,c
  9045  01164A                     	endif
  9046  01164A  0008               	tblrd		*
  9047  01164C  50F5               	movf	tablat,w,c
  9048  01164E  6EE6               	movwf	postinc1,c
  9049  011650  0E00               	movlw	0
  9050  011652  6EE6               	movwf	postinc1,c
  9051  011654  EC53  F0BF         	call	_tolower	;wreg free
  9052  011658  5025               	movf	btemp^0,w,c
  9053  01165A  6EDF               	movwf	indf2,c
  9054  01165C                     l10606:
  9055                           
  9056                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  9057                           ;stkvar	_fmt @ sp[(-32)+-4]
  9058  01165C  0EDC               	movlw	-36
  9059  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9060  011664  0EDD               	movlw	-35
  9061  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
  9062  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
  9063  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
  9064  011678                     	if	0	;tblptru may be non-zero
  9065  011678                     	endif
  9066  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9067  011678  0E00               	movlw	low (__mediumconst shr (0+16))
  9068  01167A  6EF8               	movwf	tblptru,c
  9069  01167C                     	endif
  9070  01167C  0008               	tblrd		*
  9071  01167E  50F5               	movf	tablat,w,c
  9072  011680  0A63               	xorlw	99
  9073  011682  A4D8               	btfss	status,2,c
  9074  011684  D036               	goto	l10616
  9075                           
  9076                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  9077                           ;stkvar	_fmt @ sp[(-32)+-4]
  9078  011686  0EDC               	movlw	-36
  9079  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
  9080  01168E  0EDD               	movlw	-35
  9081  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
  9082  011696  2ADE               	incf	postinc2,f,c
  9083  011698  0E00               	movlw	0
  9084  01169A  22DD               	addwfc	postdec2,f,c
  9085                           
  9086                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  9087                           ;stkvar	_ap @ sp[(-32)+-6]
  9088  01169C  0EDA               	movlw	-38
  9089  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9090  0116A4  0EDB               	movlw	-37
  9091  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
  9092  0116AC  0E02               	movlw	2
  9093  0116AE  5EDE               	subwf	postinc2,f,c
  9094  0116B0  0E00               	movlw	0
  9095  0116B2  5ADD               	subwfb	postdec2,f,c
  9096  0116B4  006F FF78  F02F    	movff	postinc2,btemp+10
  9097  0116BA  006F FF74  F030    	movff	postdec2,btemp+11
  9098  0116C0  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  9099  0116C6  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  9100  0116CC  50DF               	movf	indf2,w,c
  9101  0116CE  6E30               	movwf	(btemp+11)^0,c
  9102                           
  9103                           ;stkvar	_c @ sp[(-32)+31]
  9104  0116D0  0EFF               	movlw	-1
  9105  0116D2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9106                           
  9107                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  9108                           ;stkvar	_c @ sp[(-32)+31]
  9109  0116D8  0EFF               	movlw	-1
  9110  0116DA  50E3               	movf	plusw1,w,c
  9111  0116DC  6EE6               	movwf	postinc1,c
  9112                           
  9113                           ;stkvar	_fp @ sp[(-33)+-2]
  9114  0116DE  0EDD               	movlw	-35
  9115  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  9116  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  9117  0116EC  ECCD  F0BE         	call	_ctoa	;wreg free
  9118  0116F0  D343               	goto	l2188
  9119  0116F2                     l10616:
  9120                           
  9121                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  9122                           ;stkvar	_fmt @ sp[(-32)+-4]
  9123  0116F2  0EDC               	movlw	-36
  9124  0116F4  006F FF8F FFD9     	movff	plusw1,fsr2l
  9125  0116FA  0EDD               	movlw	-35
  9126  0116FC  006F FF8F FFDA     	movff	plusw1,fsr2h
  9127  011702  006F FF7B FFF6     	movff	postinc2,tblptrl
  9128  011708  006F FF77 FFF7     	movff	postdec2,tblptrh
  9129  01170E                     	if	0	;tblptru may be non-zero
  9130  01170E                     	endif
  9131  01170E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9132  01170E  0E00               	movlw	low (__mediumconst shr (0+16))
  9133  011710  6EF8               	movwf	tblptru,c
  9134  011712                     	endif
  9135  011712  0008               	tblrd		*
  9136  011714  50F5               	movf	tablat,w,c
  9137  011716  0A64               	xorlw	100
  9138  011718  B4D8               	btfsc	status,2,c
  9139  01171A  D015               	goto	u10410
  9140                           
  9141                           ;stkvar	_fmt @ sp[(-32)+-4]
  9142  01171C  0EDC               	movlw	-36
  9143  01171E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9144  011724  0EDD               	movlw	-35
  9145  011726  006F FF8F FFDA     	movff	plusw1,fsr2h
  9146  01172C  006F FF7B FFF6     	movff	postinc2,tblptrl
  9147  011732  006F FF77 FFF7     	movff	postdec2,tblptrh
  9148  011738                     	if	0	;tblptru may be non-zero
  9149  011738                     	endif
  9150  011738                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9151  011738  0E00               	movlw	low (__mediumconst shr (0+16))
  9152  01173A  6EF8               	movwf	tblptru,c
  9153  01173C                     	endif
  9154  01173C  0008               	tblrd		*
  9155  01173E  50F5               	movf	tablat,w,c
  9156  011740  0A69               	xorlw	105
  9157  011742  A4D8               	btfss	status,2,c
  9158  011744  D075               	goto	l10628
  9159  011746                     u10410:
  9160                           
  9161                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  9162                           ;stkvar	_fmt @ sp[(-32)+-4]
  9163  011746  0EDC               	movlw	-36
  9164  011748  006F FF8F FFD9     	movff	plusw1,fsr2l
  9165  01174E  0EDD               	movlw	-35
  9166  011750  006F FF8F FFDA     	movff	plusw1,fsr2h
  9167  011756  2ADE               	incf	postinc2,f,c
  9168  011758  0E00               	movlw	0
  9169  01175A  22DD               	addwfc	postdec2,f,c
  9170                           
  9171                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  9172                           ;stkvar	_ap @ sp[(-32)+-6]
  9173  01175C  0EDA               	movlw	-38
  9174  01175E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9175  011764  0EDB               	movlw	-37
  9176  011766  006F FF8F FFDA     	movff	plusw1,fsr2h
  9177  01176C  0E02               	movlw	2
  9178  01176E  5EDE               	subwf	postinc2,f,c
  9179  011770  0E00               	movlw	0
  9180  011772  5ADD               	subwfb	postdec2,f,c
  9181  011774  006F FF78  F02F    	movff	postinc2,btemp+10
  9182  01177A  006F FF74  F030    	movff	postdec2,btemp+11
  9183  011780  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  9184  011786  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  9185  01178C  006F FF78  F02F    	movff	postinc2,btemp+10
  9186  011792  006F FF74  F030    	movff	postdec2,btemp+11
  9187                           
  9188                           ;stkvar	_ll @ sp[(-32)+14]
  9189  011798  0EEE               	movlw	-18
  9190  01179A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9191  0117A0  0EEF               	movlw	-17
  9192  0117A2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9193  0117A8  6A25               	clrf	btemp^0,c
  9194  0117AA  BEE3               	btfsc	plusw1,7,c
  9195  0117AC  6825               	setf	btemp^0,c
  9196  0117AE  0EF0               	movlw	-16
  9197  0117B0  0060  F097  FFE3   	movff	btemp,plusw1
  9198  0117B6  0EF1               	movlw	-15
  9199  0117B8  0060  F097  FFE3   	movff	btemp,plusw1
  9200  0117BE  0EF2               	movlw	-14
  9201  0117C0  0060  F097  FFE3   	movff	btemp,plusw1
  9202  0117C6  0EF3               	movlw	-13
  9203  0117C8  0060  F097  FFE3   	movff	btemp,plusw1
  9204  0117CE  0EF4               	movlw	-12
  9205  0117D0  0060  F097  FFE3   	movff	btemp,plusw1
  9206  0117D6  0EF5               	movlw	-11
  9207  0117D8  0060  F097  FFE3   	movff	btemp,plusw1
  9208                           
  9209                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  9210                           ;stkvar	_ll @ sp[(-32)+14]
  9211  0117DE  50E1               	movf	fsr1l,w,c
  9212  0117E0  0FEE               	addlw	-18
  9213  0117E2  6ED9               	movwf	fsr2l,c
  9214  0117E4  50E2               	movf	fsr1h,w,c
  9215  0117E6  6EDA               	movwf	fsr2h,c
  9216  0117E8  0EFF               	movlw	255
  9217  0117EA  22DA               	addwfc	fsr2h,f,c
  9218  0117EC  006F FF7B FFE6     	movff	postinc2,postinc1
  9219  0117F2  006F FF7B FFE6     	movff	postinc2,postinc1
  9220  0117F8  006F FF7B FFE6     	movff	postinc2,postinc1
  9221  0117FE  006F FF7B FFE6     	movff	postinc2,postinc1
  9222  011804  006F FF7B FFE6     	movff	postinc2,postinc1
  9223  01180A  006F FF7B FFE6     	movff	postinc2,postinc1
  9224  011810  006F FF7B FFE6     	movff	postinc2,postinc1
  9225  011816  006F FF7B FFE6     	movff	postinc2,postinc1
  9226                           
  9227                           ;stkvar	_fp @ sp[(-40)+-2]
  9228  01181C  0ED6               	movlw	-42
  9229  01181E  006F FF8F FFE6     	movff	plusw1,postinc1
  9230  011824  006F FF8F FFE6     	movff	plusw1,postinc1
  9231  01182A  EC0E  F0A0         	call	_dtoa	;wreg free
  9232  01182E  D2A4               	goto	l2188
  9233  011830                     l10628:
  9234                           
  9235                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  9236                           ;stkvar	_ct @ sp[(-32)+26]
  9237  011830  0EFA               	movlw	-6
  9238  011832  006F FF8C  F025    	movff	plusw1,btemp
  9239  011838  0E66               	movlw	102
  9240  01183A  1825               	xorwf	btemp^0,w,c
  9241  01183C  A4D8               	btfss	status,2,c
  9242  01183E  D06E               	goto	l10640
  9243                           
  9244                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  9245                           ;stkvar	_fmt @ sp[(-32)+-4]
  9246  011840  0EDC               	movlw	-36
  9247  011842  006F FF8F FFD9     	movff	plusw1,fsr2l
  9248  011848  0EDD               	movlw	-35
  9249  01184A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9250  011850  006F FF7B FFF6     	movff	postinc2,tblptrl
  9251  011856  006F FF77 FFF7     	movff	postdec2,tblptrh
  9252  01185C                     	if	0	;tblptru may be non-zero
  9253  01185C                     	endif
  9254  01185C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9255  01185C  0E00               	movlw	low (__mediumconst shr (0+16))
  9256  01185E  6EF8               	movwf	tblptru,c
  9257  011860                     	endif
  9258                           
  9259                           ;stkvar	_c @ sp[(-32)+31]
  9260  011860  0008               	tblrd		*
  9261  011862  0EFF               	movlw	-1
  9262  011864  006F FFD7 FFE3     	movff	tablat,plusw1
  9263                           
  9264                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  9265                           ;stkvar	_fmt @ sp[(-32)+-4]
  9266  01186A  0EDC               	movlw	-36
  9267  01186C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9268  011872  0EDD               	movlw	-35
  9269  011874  006F FF8F FFDA     	movff	plusw1,fsr2h
  9270  01187A  2ADE               	incf	postinc2,f,c
  9271  01187C  0E00               	movlw	0
  9272  01187E  22DD               	addwfc	postdec2,f,c
  9273                           
  9274                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  9275                           ;stkvar	_ap @ sp[(-32)+-6]
  9276  011880  0EDA               	movlw	-38
  9277  011882  006F FF8F FFD9     	movff	plusw1,fsr2l
  9278  011888  0EDB               	movlw	-37
  9279  01188A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9280  011890  0E04               	movlw	4
  9281  011892  5EDE               	subwf	postinc2,f,c
  9282  011894  0E00               	movlw	0
  9283  011896  5ADD               	subwfb	postdec2,f,c
  9284  011898  006F FF78  F02F    	movff	postinc2,btemp+10
  9285  01189E  006F FF74  F030    	movff	postdec2,btemp+11
  9286  0118A4  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  9287  0118AA  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  9288  0118B0  006F FF78  F02D    	movff	postinc2,btemp+8
  9289  0118B6  006F FF78  F02E    	movff	postinc2,btemp+9
  9290  0118BC  006F FF78  F02F    	movff	postinc2,btemp+10
  9291  0118C2  006F FF78  F030    	movff	postinc2,btemp+11
  9292                           
  9293                           ;stkvar	_f @ sp[(-32)+22]
  9294  0118C8  0EF6               	movlw	-10
  9295  0118CA  0060  F0B7  FFE3   	movff	btemp+8,plusw1
  9296  0118D0  0EF7               	movlw	-9
  9297  0118D2  0060  F0BB  FFE3   	movff	btemp+9,plusw1
  9298  0118D8  0EF8               	movlw	-8
  9299  0118DA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9300  0118E0  0EF9               	movlw	-7
  9301  0118E2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9302  0118E8                     l10636:
  9303                           
  9304                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  9305                           ;stkvar	_c @ sp[(-32)+31]
  9306  0118E8  0EFF               	movlw	-1
  9307  0118EA  50E3               	movf	plusw1,w,c
  9308  0118EC  6EE6               	movwf	postinc1,c
  9309                           
  9310                           ;stkvar	_f @ sp[(-33)+22]
  9311  0118EE  0EF5               	movlw	-11
  9312  0118F0  006F FF8F FFE6     	movff	plusw1,postinc1
  9313  0118F6  006F FF8F FFE6     	movff	plusw1,postinc1
  9314  0118FC  006F FF8F FFE6     	movff	plusw1,postinc1
  9315  011902  006F FF8F FFE6     	movff	plusw1,postinc1
  9316                           
  9317                           ;stkvar	_fp @ sp[(-37)+-2]
  9318  011908  0ED9               	movlw	-39
  9319  01190A  006F FF8F FFE6     	movff	plusw1,postinc1
  9320  011910  006F FF8F FFE6     	movff	plusw1,postinc1
  9321  011916  EC00  F080         	call	_efgtoa	;wreg free
  9322  01191A  D22E               	goto	l2188
  9323  01191C                     l10640:
  9324                           
  9325                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  9326  01191C  0E02               	movlw	2
  9327  01191E  6EE6               	movwf	postinc1,c
  9328  011920  0E00               	movlw	0
  9329  011922  6EE6               	movwf	postinc1,c
  9330  011924  0EF5               	movlw	low STR_54
  9331  011926  6EE6               	movwf	postinc1,c
  9332  011928  0EFF               	movlw	high STR_54
  9333  01192A  6EE6               	movwf	postinc1,c
  9334                           
  9335                           ;stkvar	_ct @ sp[(-36)+26]
  9336  01192C  0EF6               	movlw	246
  9337  01192E  24E1               	addwf	fsr1l,w,c
  9338  011930  6E25               	movwf	btemp^0,c
  9339  011932  0EFF               	movlw	255
  9340  011934  20E2               	addwfc	fsr1h,w,c
  9341  011936  6E26               	movwf	(btemp+1)^0,c
  9342  011938  0060  F097  FFE6   	movff	btemp,postinc1
  9343  01193E  0060  F09B  FFE6   	movff	btemp+1,postinc1
  9344  011944  ECC8  F0AF         	call	_strncmp	;wreg free
  9345  011948  5025               	movf	btemp^0,w,c
  9346  01194A  1026               	iorwf	(btemp+1)^0,w,c
  9347  01194C  A4D8               	btfss	status,2,c
  9348  01194E  D096               	goto	l10660
  9349                           
  9350                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  9351                           ;stkvar	_fmt @ sp[(-32)+-4]
  9352  011950  0EDC               	movlw	-36
  9353  011952  006F FF8F FFD9     	movff	plusw1,fsr2l
  9354  011958  0EDD               	movlw	-35
  9355  01195A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9356  011960  006F FF78  F02F    	movff	postinc2,btemp+10
  9357  011966  006F FF74  F030    	movff	postdec2,btemp+11
  9358  01196C  0E01               	movlw	1
  9359  01196E  262F               	addwf	(btemp+10)^0,f,c
  9360  011970  0E00               	movlw	0
  9361  011972  2230               	addwfc	(btemp+11)^0,f,c
  9362  011974  0060  F0BF  FFF6   	movff	btemp+10,tblptrl
  9363  01197A  0060  F0C3  FFF7   	movff	btemp+11,tblptrh
  9364  011980                     	if	0	;tblptru may be non-zero
  9365  011980                     	endif
  9366  011980                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9367  011980  0E00               	movlw	low (__mediumconst shr (0+16))
  9368  011982  6EF8               	movwf	tblptru,c
  9369  011984                     	endif
  9370                           
  9371                           ;stkvar	_c @ sp[(-32)+31]
  9372  011984  0008               	tblrd		*
  9373  011986  0EFF               	movlw	-1
  9374  011988  006F FFD7 FFE3     	movff	tablat,plusw1
  9375  01198E  0EBF               	movlw	191
  9376  011990  6E2F               	movwf	(btemp+10)^0,c
  9377  011992  0EFF               	movlw	255
  9378  011994  6E30               	movwf	(btemp+11)^0,c
  9379                           
  9380                           ;stkvar	_fmt @ sp[(-32)+-4]
  9381  011996  0EDC               	movlw	-36
  9382  011998  006F FF8F FFD9     	movff	plusw1,fsr2l
  9383  01199E  0EDD               	movlw	-35
  9384  0119A0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9385  0119A6  006F FF7B FFF6     	movff	postinc2,tblptrl
  9386  0119AC  006F FF77 FFF7     	movff	postdec2,tblptrh
  9387  0119B2                     	if	0	;tblptru may be non-zero
  9388  0119B2                     	endif
  9389  0119B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9390  0119B2  0E00               	movlw	low (__mediumconst shr (0+16))
  9391  0119B4  6EF8               	movwf	tblptru,c
  9392  0119B6                     	endif
  9393  0119B6  0008               	tblrd		*
  9394  0119B8  50F5               	movf	tablat,w,c
  9395  0119BA  6E2D               	movwf	(btemp+8)^0,c
  9396  0119BC  6A2E               	clrf	(btemp+9)^0,c
  9397  0119BE  502F               	movf	(btemp+10)^0,w,c
  9398  0119C0  262D               	addwf	(btemp+8)^0,f,c
  9399  0119C2  5030               	movf	(btemp+11)^0,w,c
  9400  0119C4  222E               	addwfc	(btemp+9)^0,f,c
  9401  0119C6  502E               	movf	(btemp+9)^0,w,c
  9402  0119C8  E106               	bnz	u10440
  9403  0119CA  0E1A               	movlw	26
  9404  0119CC  5C2D               	subwf	(btemp+8)^0,w,c
  9405  0119CE  B0D8               	btfsc	status,0,c
  9406  0119D0  D002               	goto	u10440
  9407  0119D2  0E01               	movlw	1
  9408  0119D4  D001               	goto	u10450
  9409  0119D6                     u10440:
  9410  0119D6  0E00               	movlw	0
  9411  0119D8                     u10450:
  9412  0119D8  6E2F               	movwf	(btemp+10)^0,c
  9413  0119DA  6A30               	clrf	(btemp+11)^0,c
  9414                           
  9415                           ;stkvar	_vfpfcnvrt$5031 @ sp[(-32)+2]
  9416  0119DC  0EE2               	movlw	-30
  9417  0119DE  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9418  0119E4  0EE3               	movlw	-29
  9419  0119E6  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9420                           
  9421                           ;stkvar	_vfpfcnvrt$5031 @ sp[(-32)+2]
  9422  0119EC  0EE2               	movlw	-30
  9423  0119EE  006F FF8C  F025    	movff	plusw1,btemp
  9424  0119F4  0EE3               	movlw	-29
  9425  0119F6  50E3               	movf	plusw1,w,c
  9426  0119F8  1025               	iorwf	btemp^0,w,c
  9427                           
  9428                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  9429                           ;stkvar	_ap @ sp[(-32)+-6]
  9430                           
  9431                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
  9432                           
  9433                           ;stkvar	_f @ sp[(-32)+22]
  9434                           
  9435                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  9436                           ;stkvar	_ap @ sp[(-32)+-6]
  9437  0119FA  0EDA               	movlw	-38
  9438  0119FC  006F FF8F FFD9     	movff	plusw1,fsr2l
  9439  011A02  0EDB               	movlw	-37
  9440  011A04  006F FF8F FFDA     	movff	plusw1,fsr2h
  9441  011A0A  0E04               	movlw	4
  9442  011A0C  5EDE               	subwf	postinc2,f,c
  9443  011A0E  0E00               	movlw	0
  9444  011A10  5ADD               	subwfb	postdec2,f,c
  9445  011A12  006F FF78  F02F    	movff	postinc2,btemp+10
  9446  011A18  006F FF74  F030    	movff	postdec2,btemp+11
  9447  011A1E  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  9448  011A24  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  9449  011A2A  006F FF78  F02D    	movff	postinc2,btemp+8
  9450  011A30  006F FF78  F02E    	movff	postinc2,btemp+9
  9451  011A36  006F FF78  F02F    	movff	postinc2,btemp+10
  9452  011A3C  006F FF78  F030    	movff	postinc2,btemp+11
  9453                           
  9454                           ;stkvar	_f @ sp[(-32)+22]
  9455  011A42  0EF6               	movlw	-10
  9456  011A44  0060  F0B7  FFE3   	movff	btemp+8,plusw1
  9457  011A4A  0EF7               	movlw	-9
  9458  011A4C  0060  F0BB  FFE3   	movff	btemp+9,plusw1
  9459  011A52  0EF8               	movlw	-8
  9460  011A54  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9461  011A5A  0EF9               	movlw	-7
  9462  011A5C  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9463                           
  9464                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  9465                           ;stkvar	_fmt @ sp[(-32)+-4]
  9466  011A62  0EDC               	movlw	-36
  9467  011A64  006F FF8F FFD9     	movff	plusw1,fsr2l
  9468  011A6A  0EDD               	movlw	-35
  9469  011A6C  006F FF8F FFDA     	movff	plusw1,fsr2h
  9470  011A72  0E02               	movlw	2
  9471  011A74  26DE               	addwf	postinc2,f,c
  9472  011A76  0E00               	movlw	0
  9473  011A78  22DD               	addwfc	postdec2,f,c
  9474  011A7A  D736               	goto	l10636
  9475  011A7C                     l10660:
  9476                           
  9477                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  9478                           ;stkvar	_fmt @ sp[(-32)+-4]
  9479  011A7C  0EDC               	movlw	-36
  9480  011A7E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9481  011A84  0EDD               	movlw	-35
  9482  011A86  006F FF8F FFDA     	movff	plusw1,fsr2h
  9483  011A8C  006F FF7B FFF6     	movff	postinc2,tblptrl
  9484  011A92  006F FF77 FFF7     	movff	postdec2,tblptrh
  9485  011A98                     	if	0	;tblptru may be non-zero
  9486  011A98                     	endif
  9487  011A98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9488  011A98  0E00               	movlw	low (__mediumconst shr (0+16))
  9489  011A9A  6EF8               	movwf	tblptru,c
  9490  011A9C                     	endif
  9491  011A9C  0008               	tblrd		*
  9492  011A9E  50F5               	movf	tablat,w,c
  9493  011AA0  0A73               	xorlw	115
  9494  011AA2  A4D8               	btfss	status,2,c
  9495  011AA4  D042               	goto	l10670
  9496                           
  9497                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  9498                           ;stkvar	_fmt @ sp[(-32)+-4]
  9499  011AA6  0EDC               	movlw	-36
  9500  011AA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  9501  011AAE  0EDD               	movlw	-35
  9502  011AB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9503  011AB6  2ADE               	incf	postinc2,f,c
  9504  011AB8  0E00               	movlw	0
  9505  011ABA  22DD               	addwfc	postdec2,f,c
  9506                           
  9507                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  9508                           ;stkvar	_ap @ sp[(-32)+-6]
  9509  011ABC  0EDA               	movlw	-38
  9510  011ABE  006F FF8F FFD9     	movff	plusw1,fsr2l
  9511  011AC4  0EDB               	movlw	-37
  9512  011AC6  006F FF8F FFDA     	movff	plusw1,fsr2h
  9513  011ACC  0E02               	movlw	2
  9514  011ACE  5EDE               	subwf	postinc2,f,c
  9515  011AD0  0E00               	movlw	0
  9516  011AD2  5ADD               	subwfb	postdec2,f,c
  9517  011AD4  006F FF78  F02F    	movff	postinc2,btemp+10
  9518  011ADA  006F FF74  F030    	movff	postdec2,btemp+11
  9519  011AE0  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  9520  011AE6  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  9521  011AEC  006F FF78  F02F    	movff	postinc2,btemp+10
  9522  011AF2  006F FF74  F030    	movff	postdec2,btemp+11
  9523                           
  9524                           ;stkvar	_cp @ sp[(-32)+29]
  9525  011AF8  0EFE               	movlw	-2
  9526  011AFA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9527  011B00  0EFD               	movlw	-3
  9528  011B02  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9529                           
  9530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  9531                           ;stkvar	_cp @ sp[(-32)+29]
  9532  011B08  0EFD               	movlw	-3
  9533  011B0A  006F FF8F FFE6     	movff	plusw1,postinc1
  9534  011B10  006F FF8F FFE6     	movff	plusw1,postinc1
  9535                           
  9536                           ;stkvar	_fp @ sp[(-34)+-2]
  9537  011B16  0EDC               	movlw	-36
  9538  011B18  006F FF8F FFE6     	movff	plusw1,postinc1
  9539  011B1E  006F FF8F FFE6     	movff	plusw1,postinc1
  9540  011B24  ECC4  F0A8         	call	_stoa	;wreg free
  9541  011B28  D127               	goto	l2188
  9542  011B2A                     l10670:
  9543                           
  9544                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  9545                           ;stkvar	_fmt @ sp[(-32)+-4]
  9546  011B2A  0EDC               	movlw	-36
  9547  011B2C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9548  011B32  0EDD               	movlw	-35
  9549  011B34  006F FF8F FFDA     	movff	plusw1,fsr2h
  9550  011B3A  006F FF7B FFF6     	movff	postinc2,tblptrl
  9551  011B40  006F FF77 FFF7     	movff	postdec2,tblptrh
  9552  011B46                     	if	0	;tblptru may be non-zero
  9553  011B46                     	endif
  9554  011B46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9555  011B46  0E00               	movlw	low (__mediumconst shr (0+16))
  9556  011B48  6EF8               	movwf	tblptru,c
  9557  011B4A                     	endif
  9558  011B4A  0008               	tblrd		*
  9559  011B4C  50F5               	movf	tablat,w,c
  9560  011B4E  0A78               	xorlw	120
  9561  011B50  B4D8               	btfsc	status,2,c
  9562  011B52  D015               	goto	u10490
  9563                           
  9564                           ;stkvar	_fmt @ sp[(-32)+-4]
  9565  011B54  0EDC               	movlw	-36
  9566  011B56  006F FF8F FFD9     	movff	plusw1,fsr2l
  9567  011B5C  0EDD               	movlw	-35
  9568  011B5E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9569  011B64  006F FF7B FFF6     	movff	postinc2,tblptrl
  9570  011B6A  006F FF77 FFF7     	movff	postdec2,tblptrh
  9571  011B70                     	if	0	;tblptru may be non-zero
  9572  011B70                     	endif
  9573  011B70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9574  011B70  0E00               	movlw	low (__mediumconst shr (0+16))
  9575  011B72  6EF8               	movwf	tblptru,c
  9576  011B74                     	endif
  9577  011B74  0008               	tblrd		*
  9578  011B76  50F5               	movf	tablat,w,c
  9579  011B78  0A58               	xorlw	88
  9580  011B7A  A4D8               	btfss	status,2,c
  9581  011B7C  D094               	goto	l10684
  9582  011B7E                     u10490:
  9583                           
  9584                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  9585                           ;stkvar	_fmt @ sp[(-32)+-4]
  9586  011B7E  0EDC               	movlw	-36
  9587  011B80  006F FF8F FFD9     	movff	plusw1,fsr2l
  9588  011B86  0EDD               	movlw	-35
  9589  011B88  006F FF8F FFDA     	movff	plusw1,fsr2h
  9590  011B8E  006F FF7B FFF6     	movff	postinc2,tblptrl
  9591  011B94  006F FF77 FFF7     	movff	postdec2,tblptrh
  9592  011B9A                     	if	0	;tblptru may be non-zero
  9593  011B9A                     	endif
  9594  011B9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9595  011B9A  0E00               	movlw	low (__mediumconst shr (0+16))
  9596  011B9C  6EF8               	movwf	tblptru,c
  9597  011B9E                     	endif
  9598                           
  9599                           ;stkvar	_c @ sp[(-32)+31]
  9600  011B9E  0008               	tblrd		*
  9601  011BA0  0EFF               	movlw	-1
  9602  011BA2  006F FFD7 FFE3     	movff	tablat,plusw1
  9603                           
  9604                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  9605                           ;stkvar	_fmt @ sp[(-32)+-4]
  9606  011BA8  0EDC               	movlw	-36
  9607  011BAA  006F FF8F FFD9     	movff	plusw1,fsr2l
  9608  011BB0  0EDD               	movlw	-35
  9609  011BB2  006F FF8F FFDA     	movff	plusw1,fsr2h
  9610  011BB8  2ADE               	incf	postinc2,f,c
  9611  011BBA  0E00               	movlw	0
  9612  011BBC  22DD               	addwfc	postdec2,f,c
  9613                           
  9614                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  9615                           ;stkvar	_ap @ sp[(-32)+-6]
  9616  011BBE  0EDA               	movlw	-38
  9617  011BC0  006F FF8F FFD9     	movff	plusw1,fsr2l
  9618  011BC6  0EDB               	movlw	-37
  9619  011BC8  006F FF8F FFDA     	movff	plusw1,fsr2h
  9620  011BCE  0E02               	movlw	2
  9621  011BD0  5EDE               	subwf	postinc2,f,c
  9622  011BD2  0E00               	movlw	0
  9623  011BD4  5ADD               	subwfb	postdec2,f,c
  9624  011BD6  006F FF78  F02F    	movff	postinc2,btemp+10
  9625  011BDC  006F FF74  F030    	movff	postdec2,btemp+11
  9626  011BE2  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  9627  011BE8  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  9628  011BEE  006F FF78  F02F    	movff	postinc2,btemp+10
  9629  011BF4  006F FF74  F030    	movff	postdec2,btemp+11
  9630  011BFA  502F               	movf	(btemp+10)^0,w,c
  9631  011BFC  6E35               	movwf	(btemp+16)^0,c
  9632  011BFE  5030               	movf	(btemp+11)^0,w,c
  9633  011C00  6E36               	movwf	(btemp+17)^0,c
  9634  011C02  6A37               	clrf	(btemp+18)^0,c
  9635  011C04  6A38               	clrf	(btemp+19)^0,c
  9636  011C06  6A39               	clrf	(btemp+20)^0,c
  9637  011C08  6A3A               	clrf	(btemp+21)^0,c
  9638  011C0A  6A3B               	clrf	(btemp+22)^0,c
  9639  011C0C  6A3C               	clrf	(btemp+23)^0,c
  9640                           
  9641                           ;stkvar	_llu @ sp[(-32)+6]
  9642  011C0E  0EE6               	movlw	-26
  9643  011C10  0060  F0D7  FFE3   	movff	btemp+16,plusw1
  9644  011C16  0EE7               	movlw	-25
  9645  011C18  0060  F0DB  FFE3   	movff	btemp+17,plusw1
  9646  011C1E  0EE8               	movlw	-24
  9647  011C20  0060  F0DF  FFE3   	movff	btemp+18,plusw1
  9648  011C26  0EE9               	movlw	-23
  9649  011C28  0060  F0E3  FFE3   	movff	btemp+19,plusw1
  9650  011C2E  0EEA               	movlw	-22
  9651  011C30  0060  F0E7  FFE3   	movff	btemp+20,plusw1
  9652  011C36  0EEB               	movlw	-21
  9653  011C38  0060  F0EB  FFE3   	movff	btemp+21,plusw1
  9654  011C3E  0EEC               	movlw	-20
  9655  011C40  0060  F0EF  FFE3   	movff	btemp+22,plusw1
  9656  011C46  0EED               	movlw	-19
  9657  011C48  0060  F0F3  FFE3   	movff	btemp+23,plusw1
  9658                           
  9659                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  9660                           ;stkvar	_c @ sp[(-32)+31]
  9661  011C4E  0EFF               	movlw	-1
  9662  011C50  50E3               	movf	plusw1,w,c
  9663  011C52  6EE6               	movwf	postinc1,c
  9664                           
  9665                           ;stkvar	_llu @ sp[(-33)+6]
  9666  011C54  50E1               	movf	fsr1l,w,c
  9667  011C56  0FE5               	addlw	-27
  9668  011C58  6ED9               	movwf	fsr2l,c
  9669  011C5A  50E2               	movf	fsr1h,w,c
  9670  011C5C  6EDA               	movwf	fsr2h,c
  9671  011C5E  0EFF               	movlw	255
  9672  011C60  22DA               	addwfc	fsr2h,f,c
  9673  011C62  006F FF7B FFE6     	movff	postinc2,postinc1
  9674  011C68  006F FF7B FFE6     	movff	postinc2,postinc1
  9675  011C6E  006F FF7B FFE6     	movff	postinc2,postinc1
  9676  011C74  006F FF7B FFE6     	movff	postinc2,postinc1
  9677  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
  9678  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
  9679  011C86  006F FF7B FFE6     	movff	postinc2,postinc1
  9680  011C8C  006F FF7B FFE6     	movff	postinc2,postinc1
  9681                           
  9682                           ;stkvar	_fp @ sp[(-41)+-2]
  9683  011C92  0ED5               	movlw	-43
  9684  011C94  006F FF8F FFE6     	movff	plusw1,postinc1
  9685  011C9A  006F FF8F FFE6     	movff	plusw1,postinc1
  9686  011CA0  EC4E  F0A2         	call	_xtoa	;wreg free
  9687  011CA4  D069               	goto	l2188
  9688  011CA6                     l10684:
  9689                           
  9690                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  9691                           ;stkvar	_fmt @ sp[(-32)+-4]
  9692  011CA6  0EDC               	movlw	-36
  9693  011CA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  9694  011CAE  0EDD               	movlw	-35
  9695  011CB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9696  011CB6  006F FF7B FFF6     	movff	postinc2,tblptrl
  9697  011CBC  006F FF77 FFF7     	movff	postdec2,tblptrh
  9698  011CC2                     	if	0	;tblptru may be non-zero
  9699  011CC2                     	endif
  9700  011CC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9701  011CC2  0E00               	movlw	low (__mediumconst shr (0+16))
  9702  011CC4  6EF8               	movwf	tblptru,c
  9703  011CC6                     	endif
  9704  011CC6  0008               	tblrd		*
  9705  011CC8  50F5               	movf	tablat,w,c
  9706  011CCA  0A25               	xorlw	37
  9707  011CCC  A4D8               	btfss	status,2,c
  9708  011CCE  D01A               	goto	l10694
  9709                           
  9710                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  9711                           ;stkvar	_fmt @ sp[(-32)+-4]
  9712  011CD0  0EDC               	movlw	-36
  9713  011CD2  006F FF8F FFD9     	movff	plusw1,fsr2l
  9714  011CD8  0EDD               	movlw	-35
  9715  011CDA  006F FF8F FFDA     	movff	plusw1,fsr2h
  9716  011CE0  2ADE               	incf	postinc2,f,c
  9717  011CE2  0E00               	movlw	0
  9718  011CE4  22DD               	addwfc	postdec2,f,c
  9719                           
  9720                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  9721                           ;stkvar	_fp @ sp[(-32)+-2]
  9722  011CE6  0EDE               	movlw	-34
  9723  011CE8  006F FF8F FFE6     	movff	plusw1,postinc1
  9724  011CEE  006F FF8F FFE6     	movff	plusw1,postinc1
  9725  011CF4  0E25               	movlw	37
  9726  011CF6  6EE6               	movwf	postinc1,c
  9727  011CF8  0E00               	movlw	0
  9728  011CFA  6EE6               	movwf	postinc1,c
  9729  011CFC  ECA3  F0B5         	call	_fputc	;wreg free
  9730  011D00                     l10690:
  9731                           
  9732                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  9733  011D00  0E01               	movlw	1
  9734  011D02  D00C               	goto	L7
  9735  011D04                     l10694:
  9736                           
  9737                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  9738                           ;stkvar	_fmt @ sp[(-32)+-4]
  9739  011D04  0EDC               	movlw	-36
  9740  011D06  006F FF8F FFD9     	movff	plusw1,fsr2l
  9741  011D0C  0EDD               	movlw	-35
  9742  011D0E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9743  011D14  2ADE               	incf	postinc2,f,c
  9744  011D16  0E00               	movlw	0
  9745  011D18  22DD               	addwfc	postdec2,f,c
  9746                           
  9747                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  9748  011D1A  0E00               	movlw	0
  9749  011D1C                     L7:
  9750  011D1C  6E25               	movwf	btemp^0,c
  9751  011D1E  0E00               	movlw	0
  9752  011D20  6E26               	movwf	(btemp+1)^0,c
  9753  011D22  D02A               	goto	l2188
  9754  011D24                     l10700:
  9755                           
  9756                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  9757                           ;stkvar	_fp @ sp[(-32)+-2]
  9758  011D24  0EDE               	movlw	-34
  9759  011D26  006F FF8F FFE6     	movff	plusw1,postinc1
  9760  011D2C  006F FF8F FFE6     	movff	plusw1,postinc1
  9761                           
  9762                           ;stkvar	_fmt @ sp[(-34)+-4]
  9763  011D32  0EDA               	movlw	-38
  9764  011D34  006F FF8F FFD9     	movff	plusw1,fsr2l
  9765  011D3A  0EDB               	movlw	-37
  9766  011D3C  006F FF8F FFDA     	movff	plusw1,fsr2h
  9767  011D42  006F FF7B FFF6     	movff	postinc2,tblptrl
  9768  011D48  006F FF77 FFF7     	movff	postdec2,tblptrh
  9769  011D4E                     	if	0	;tblptru may be non-zero
  9770  011D4E                     	endif
  9771  011D4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9772  011D4E  0E00               	movlw	low (__mediumconst shr (0+16))
  9773  011D50  6EF8               	movwf	tblptru,c
  9774  011D52                     	endif
  9775  011D52  0008               	tblrd		*
  9776  011D54  50F5               	movf	tablat,w,c
  9777  011D56  6EE6               	movwf	postinc1,c
  9778  011D58  0E00               	movlw	0
  9779  011D5A  6EE6               	movwf	postinc1,c
  9780  011D5C  ECA3  F0B5         	call	_fputc	;wreg free
  9781                           
  9782                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  9783                           ;stkvar	_fmt @ sp[(-32)+-4]
  9784  011D60  0EDC               	movlw	-36
  9785  011D62  006F FF8F FFD9     	movff	plusw1,fsr2l
  9786  011D68  0EDD               	movlw	-35
  9787  011D6A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9788  011D70  2ADE               	incf	postinc2,f,c
  9789  011D72  0E00               	movlw	0
  9790  011D74  22DD               	addwfc	postdec2,f,c
  9791  011D76  D7C4               	goto	l10690
  9792  011D78                     l2188:
  9793                           
  9794                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  9795  011D78  0EDA               	movlw	218
  9796  011D7A  26E1               	addwf	fsr1l,f,c
  9797  011D7C  0EFF               	movlw	255
  9798  011D7E  22E2               	addwfc	fsr1h,f,c
  9799  011D80  0012               	return		;funcret
  9800  011D82                     __end_of_vfpfcnvrt:
  9801                           	opt callstack 0
  9802                           
  9803 ;; *************** function _xtoa *****************
  9804 ;; Defined at:
  9805 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9806 ;; Parameters:    Size  Location     Type
  9807 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9808 ;;		 -> f(6), NULL(0), 
  9809 ;;  d               8  [STACK] unsigned long long 
  9810 ;;  x               1  [STACK] unsigned char 
  9811 ;; Auto vars:     Size  Location     Type
  9812 ;;  n               8  [STACK] unsigned long long 
  9813 ;;  c               2  [STACK] int 
  9814 ;;  i               2  [STACK] int 
  9815 ;;  w               2  [STACK] int 
  9816 ;;  p               2  [STACK] int 
  9817 ;; Return value:  Size  Location     Type
  9818 ;;                  2  [STACK] int 
  9819 ;; Registers used:
  9820 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  9821 ;; Tracked objects:
  9822 ;;		On entry : 0/0
  9823 ;;		On exit  : 0/0
  9824 ;;		Unchanged: 0/0
  9825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9830 ;;Total ram usage:        0 bytes
  9831 ;; Hardware stack levels used:    1
  9832 ;; Hardware stack levels required when called:   12
  9833 ;; This function calls:
  9834 ;;		_isalpha
  9835 ;;		_isupper
  9836 ;;		_pad
  9837 ;;		_toupper
  9838 ;; This function is called by:
  9839 ;;		_vfpfcnvrt
  9840 ;; This function uses a reentrant model
  9841 ;;
  9842                           
  9843                           	psect	text42
  9844  01449C                     __ptext42:
  9845                           	opt callstack 0
  9846  01449C                     _xtoa:
  9847                           	opt callstack 0
  9848                           
  9849                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  9850  01449C  0E14               	movlw	20
  9851  01449E  26E1               	addwf	fsr1l,f,c
  9852  0144A0  0E00               	movlw	0
  9853  0144A2  22E2               	addwfc	fsr1h,f,c
  9854                           
  9855                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  9856                           
  9857                           ;incstack = 0
  9858  0144A4  AE0D               	btfss	(_prec+1)^0,7,c
  9859                           
  9860                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  9861  0144A6  920E               	bcf	_flags^0,1,c
  9862                           
  9863                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  9864  0144A8  BE0D               	btfsc	(_prec+1)^0,7,c
  9865  0144AA  D005               	goto	u10090
  9866  0144AC  500D               	movf	(_prec+1)^0,w,c
  9867  0144AE  E110               	bnz	l10482
  9868  0144B0  040C               	decf	_prec^0,w,c
  9869  0144B2  B0D8               	btfsc	status,0,c
  9870  0144B4  D00D               	goto	l10482
  9871  0144B6                     u10090:
  9872  0144B6  0E01               	movlw	1
  9873  0144B8  6E2F               	movwf	(btemp+10)^0,c
  9874  0144BA  0E00               	movlw	0
  9875  0144BC  6E30               	movwf	(btemp+11)^0,c
  9876                           
  9877                           ;stkvar	_p @ sp[(-20)+18]
  9878  0144BE  0EFE               	movlw	-2
  9879  0144C0  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9880  0144C6  0EFF               	movlw	-1
  9881  0144C8  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9882  0144CE  D008               	goto	l2138
  9883  0144D0                     l10482:
  9884                           
  9885                           ;stkvar	_p @ sp[(-20)+18]
  9886  0144D0  0EFE               	movlw	-2
  9887  0144D2  0060  F033  FFE3   	movff	_prec,plusw1
  9888  0144D8  0EFF               	movlw	-1
  9889  0144DA  0060  F037  FFE3   	movff	_prec+1,plusw1
  9890  0144E0                     l2138:
  9891                           
  9892                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
  9893                           ;stkvar	_w @ sp[(-20)+16]
  9894  0144E0  0EFC               	movlw	-4
  9895  0144E2  0060  F02B  FFE3   	movff	_width,plusw1
  9896  0144E8  0EFD               	movlw	-3
  9897  0144EA  0060  F02F  FFE3   	movff	_width+1,plusw1
  9898                           
  9899                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  9900  0144F0  A80E               	btfss	_flags^0,4,c
  9901  0144F2  D00B               	goto	l10488
  9902                           
  9903                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  9904                           ;stkvar	_w @ sp[(-20)+16]
  9905  0144F4  50E1               	movf	fsr1l,w,c
  9906  0144F6  0FFC               	addlw	-4
  9907  0144F8  6ED9               	movwf	fsr2l,c
  9908  0144FA  50E2               	movf	fsr1h,w,c
  9909  0144FC  6EDA               	movwf	fsr2h,c
  9910  0144FE  0EFF               	movlw	255
  9911  014500  22DA               	addwfc	fsr2h,f,c
  9912  014502  0EFE               	movlw	254
  9913  014504  26DE               	addwf	postinc2,f,c
  9914  014506  0EFF               	movlw	255
  9915  014508  22DD               	addwfc	postdec2,f,c
  9916  01450A                     l10488:
  9917                           
  9918                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
  9919                           ;stkvar	_d @ sp[(-20)+-10]
  9920  01450A  0EE2               	movlw	226
  9921  01450C  24E1               	addwf	fsr1l,w,c
  9922  01450E  6ED9               	movwf	fsr2l,c
  9923  014510  0EFF               	movlw	255
  9924  014512  20E2               	addwfc	fsr1h,w,c
  9925  014514  6EDA               	movwf	fsr2h,c
  9926                           
  9927                           ;stkvar	_n @ sp[(-20)+4]
  9928  014516  0E08               	movlw	8
  9929  014518  6E25               	movwf	btemp^0,c
  9930  01451A  0EF0               	movlw	-16
  9931  01451C                     us1011999:
  9932  01451C  006F FF7B FFE3     	movff	postinc2,plusw1
  9933  014522  28E8               	incf	wreg,w,c
  9934  014524  2E25               	decfsz	btemp^0,f,c
  9935  014526  D7FA               	bra	us1011999
  9936                           
  9937                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  9938  014528  0E4F               	movlw	79
  9939  01452A  6E2F               	movwf	(btemp+10)^0,c
  9940  01452C  0E00               	movlw	0
  9941  01452E  6E30               	movwf	(btemp+11)^0,c
  9942                           
  9943                           ;stkvar	_i @ sp[(-20)+14]
  9944  014530  0EFA               	movlw	-6
  9945  014532  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9946  014538  0EFB               	movlw	-5
  9947  01453A  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9948                           
  9949                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  9950  014540  0103               	movlb	3	; () banked
  9951  014542  6BE3               	clrf	(_dbuf+79)& (0+255),b
  9952                           
  9953                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9954  014544  D0EE               	goto	l10526
  9955  014546                     l10494:
  9956                           
  9957                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
  9958                           ;stkvar	_i @ sp[(-20)+14]
  9959  014546  50E1               	movf	fsr1l,w,c
  9960  014548  0FFA               	addlw	-6
  9961  01454A  6ED9               	movwf	fsr2l,c
  9962  01454C  50E2               	movf	fsr1h,w,c
  9963  01454E  6EDA               	movwf	fsr2h,c
  9964  014550  0EFF               	movlw	255
  9965  014552  22DA               	addwfc	fsr2h,f,c
  9966  014554  06DE               	decf	postinc2,f,c
  9967  014556  0E00               	movlw	0
  9968  014558  5ADD               	subwfb	postdec2,f,c
  9969                           
  9970                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  9971                           ;stkvar	_n @ sp[(-20)+4]
  9972  01455A  0EF0               	movlw	-16
  9973  01455C  006F FF8C  F02F    	movff	plusw1,btemp+10
  9974  014562  0EF1               	movlw	-15
  9975  014564  006F FF8C  F030    	movff	plusw1,btemp+11
  9976  01456A  0E0F               	movlw	15
  9977  01456C  162F               	andwf	(btemp+10)^0,f,c
  9978  01456E  0E00               	movlw	0
  9979  014570  1630               	andwf	(btemp+11)^0,f,c
  9980                           
  9981                           ;stkvar	_c @ sp[(-20)+12]
  9982  014572  0EF8               	movlw	-8
  9983  014574  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9984  01457A  0EF9               	movlw	-7
  9985  01457C  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9986                           
  9987                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  9988                           ;stkvar	_c @ sp[(-20)+12]
  9989  014582  0EF9               	movlw	-7
  9990  014584  BEE3               	btfsc	plusw1,7,c
  9991  014586  D00F               	goto	l10502
  9992  014588  0EF9               	movlw	-7
  9993  01458A  50E3               	movf	plusw1,w,c
  9994  01458C  E108               	bnz	u10120
  9995  01458E  0EF8               	movlw	-8
  9996  014590  006F FF8C  F025    	movff	plusw1,btemp
  9997  014596  0E0A               	movlw	10
  9998  014598  5E25               	subwf	btemp^0,f,c
  9999  01459A  A0D8               	btfss	status,0,c
 10000  01459C  D004               	goto	l10502
 10001  01459E                     u10120:
 10002                           
 10003                           ;stkvar	_c @ sp[(-20)+12]
 10004  01459E  0EF8               	movlw	-8
 10005  0145A0  50E3               	movf	plusw1,w,c
 10006  0145A2  0F57               	addlw	87
 10007  0145A4  D003               	goto	L8
 10008  0145A6                     l10502:
 10009                           
 10010                           ;stkvar	_c @ sp[(-20)+12]
 10011  0145A6  0EF8               	movlw	-8
 10012  0145A8  50E3               	movf	plusw1,w,c
 10013  0145AA  0F30               	addlw	48
 10014  0145AC                     L8:
 10015  0145AC  6E2F               	movwf	(btemp+10)^0,c
 10016  0145AE  0EF9               	movlw	-7
 10017  0145B0  006F FF8C  F030    	movff	plusw1,btemp+11
 10018  0145B6  0E00               	movlw	0
 10019  0145B8  2230               	addwfc	(btemp+11)^0,f,c
 10020                           
 10021                           ;stkvar	_c @ sp[(-20)+12]
 10022  0145BA  0EF8               	movlw	-8
 10023  0145BC  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10024  0145C2  0EF9               	movlw	-7
 10025  0145C4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10026  0145CA  0EBF               	movlw	191
 10027  0145CC  6E2F               	movwf	(btemp+10)^0,c
 10028  0145CE  0EFF               	movlw	255
 10029  0145D0  6E30               	movwf	(btemp+11)^0,c
 10030                           
 10031                           ;stkvar	_x @ sp[(-20)+-11]
 10032  0145D2  0EE1               	movlw	-31
 10033  0145D4  50E3               	movf	plusw1,w,c
 10034  0145D6  6E2D               	movwf	(btemp+8)^0,c
 10035  0145D8  6A2E               	clrf	(btemp+9)^0,c
 10036  0145DA  502F               	movf	(btemp+10)^0,w,c
 10037  0145DC  262D               	addwf	(btemp+8)^0,f,c
 10038  0145DE  5030               	movf	(btemp+11)^0,w,c
 10039  0145E0  222E               	addwfc	(btemp+9)^0,f,c
 10040  0145E2  502E               	movf	(btemp+9)^0,w,c
 10041  0145E4  E106               	bnz	u10130
 10042  0145E6  0E1A               	movlw	26
 10043  0145E8  5C2D               	subwf	(btemp+8)^0,w,c
 10044  0145EA  B0D8               	btfsc	status,0,c
 10045  0145EC  D002               	goto	u10130
 10046  0145EE  0E01               	movlw	1
 10047  0145F0  D001               	goto	u10140
 10048  0145F2                     u10130:
 10049  0145F2  0E00               	movlw	0
 10050  0145F4                     u10140:
 10051  0145F4  6E2F               	movwf	(btemp+10)^0,c
 10052  0145F6  6A30               	clrf	(btemp+11)^0,c
 10053                           
 10054                           ;stkvar	_xtoa$5009 @ sp[(-20)+2]
 10055  0145F8  0EEE               	movlw	-18
 10056  0145FA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10057  014600  0EEF               	movlw	-17
 10058  014602  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10059                           
 10060                           ;stkvar	_xtoa$5009 @ sp[(-20)+2]
 10061  014608  0EEE               	movlw	-18
 10062  01460A  006F FF8C  F025    	movff	plusw1,btemp
 10063  014610  0EEF               	movlw	-17
 10064  014612  50E3               	movf	plusw1,w,c
 10065  014614  1025               	iorwf	btemp^0,w,c
 10066  014616  B4D8               	btfsc	status,2,c
 10067  014618  D041               	goto	l10518
 10068  01461A  0E9F               	movlw	159
 10069  01461C  6E2F               	movwf	(btemp+10)^0,c
 10070  01461E  0EFF               	movlw	255
 10071  014620  6E30               	movwf	(btemp+11)^0,c
 10072                           
 10073                           ;stkvar	_c @ sp[(-20)+12]
 10074  014622  0EF8               	movlw	-8
 10075  014624  006F FF8C  F02D    	movff	plusw1,btemp+8
 10076  01462A  0EF9               	movlw	-7
 10077  01462C  006F FF8C  F02E    	movff	plusw1,btemp+9
 10078  014632  0E20               	movlw	32
 10079  014634  122D               	iorwf	(btemp+8)^0,f,c
 10080  014636  0E00               	movlw	0
 10081  014638  122E               	iorwf	(btemp+9)^0,f,c
 10082  01463A  502F               	movf	(btemp+10)^0,w,c
 10083  01463C  262D               	addwf	(btemp+8)^0,f,c
 10084  01463E  5030               	movf	(btemp+11)^0,w,c
 10085  014640  222E               	addwfc	(btemp+9)^0,f,c
 10086  014642  502E               	movf	(btemp+9)^0,w,c
 10087  014644  E106               	bnz	u10160
 10088  014646  0E1A               	movlw	26
 10089  014648  5C2D               	subwf	(btemp+8)^0,w,c
 10090  01464A  B0D8               	btfsc	status,0,c
 10091  01464C  D002               	goto	u10160
 10092  01464E  0E01               	movlw	1
 10093  014650  D001               	goto	u10170
 10094  014652                     u10160:
 10095  014652  0E00               	movlw	0
 10096  014654                     u10170:
 10097  014654  6E2F               	movwf	(btemp+10)^0,c
 10098  014656  6A30               	clrf	(btemp+11)^0,c
 10099                           
 10100                           ;stkvar	_xtoa$5010 @ sp[(-20)+0]
 10101  014658  0EEC               	movlw	-20
 10102  01465A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10103  014660  0EED               	movlw	-19
 10104  014662  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10105                           
 10106                           ;stkvar	_xtoa$5010 @ sp[(-20)+0]
 10107  014668  0EEC               	movlw	-20
 10108  01466A  006F FF8C  F025    	movff	plusw1,btemp
 10109  014670  0EED               	movlw	-19
 10110  014672  50E3               	movf	plusw1,w,c
 10111  014674  1025               	iorwf	btemp^0,w,c
 10112  014676  B4D8               	btfsc	status,2,c
 10113  014678  D011               	goto	l10518
 10114                           
 10115                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 10116                           ;stkvar	_c @ sp[(-20)+12]
 10117  01467A  0EF8               	movlw	-8
 10118  01467C  006F FF8F FFE6     	movff	plusw1,postinc1
 10119  014682  006F FF8F FFE6     	movff	plusw1,postinc1
 10120  014688  EC11  F0BF         	call	_toupper	;wreg free
 10121                           
 10122                           ;stkvar	_c @ sp[(-20)+12]
 10123  01468C  0EF8               	movlw	-8
 10124  01468E  0060  F097  FFE3   	movff	btemp,plusw1
 10125  014694  0EF9               	movlw	-7
 10126  014696  0060  F09B  FFE3   	movff	btemp+1,plusw1
 10127  01469C                     l10518:
 10128                           
 10129                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 10130                           ;stkvar	_c @ sp[(-20)+12]
 10131                           ;stkvar	_i @ sp[(-20)+14]
 10132  01469C  0EFA               	movlw	-6
 10133  01469E  006F FF8C  F02F    	movff	plusw1,btemp+10
 10134  0146A4  0EFB               	movlw	-5
 10135  0146A6  006F FF8C  F030    	movff	plusw1,btemp+11
 10136  0146AC  0E94               	movlw	low _dbuf
 10137  0146AE  242F               	addwf	(btemp+10)^0,w,c
 10138  0146B0  6ED9               	movwf	fsr2l,c
 10139  0146B2  0E03               	movlw	high _dbuf
 10140  0146B4  2030               	addwfc	(btemp+11)^0,w,c
 10141  0146B6  6EDA               	movwf	fsr2h,c
 10142  0146B8  0EF8               	movlw	-8
 10143  0146BA  006F FF8F FFDF     	movff	plusw1,indf2
 10144                           
 10145                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 10146                           ;stkvar	_p @ sp[(-20)+18]
 10147  0146C0  50E1               	movf	fsr1l,w,c
 10148  0146C2  0FFE               	addlw	-2
 10149  0146C4  6ED9               	movwf	fsr2l,c
 10150  0146C6  50E2               	movf	fsr1h,w,c
 10151  0146C8  6EDA               	movwf	fsr2h,c
 10152  0146CA  0EFF               	movlw	255
 10153  0146CC  22DA               	addwfc	fsr2h,f,c
 10154  0146CE  06DE               	decf	postinc2,f,c
 10155  0146D0  0E00               	movlw	0
 10156  0146D2  5ADD               	subwfb	postdec2,f,c
 10157                           
 10158                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 10159                           ;stkvar	_w @ sp[(-20)+16]
 10160  0146D4  50E1               	movf	fsr1l,w,c
 10161  0146D6  0FFC               	addlw	-4
 10162  0146D8  6ED9               	movwf	fsr2l,c
 10163  0146DA  50E2               	movf	fsr1h,w,c
 10164  0146DC  6EDA               	movwf	fsr2h,c
 10165  0146DE  0EFF               	movlw	255
 10166  0146E0  22DA               	addwfc	fsr2h,f,c
 10167  0146E2  06DE               	decf	postinc2,f,c
 10168  0146E4  0E00               	movlw	0
 10169  0146E6  5ADD               	subwfb	postdec2,f,c
 10170                           
 10171                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 10172  0146E8  0E04               	movlw	4
 10173  0146EA  6E30               	movwf	(btemp+11)^0,c
 10174                           
 10175                           ;stkvar	_n @ sp[(-20)+4]
 10176  0146EC  50E1               	movf	fsr1l,w,c
 10177  0146EE  0FF0               	addlw	-16
 10178  0146F0  6ED9               	movwf	fsr2l,c
 10179  0146F2  50E2               	movf	fsr1h,w,c
 10180  0146F4  6EDA               	movwf	fsr2h,c
 10181  0146F6  0EFF               	movlw	255
 10182  0146F8  22DA               	addwfc	fsr2h,f,c
 10183  0146FA  2830               	incf	(btemp+11)^0,w,c
 10184  0146FC  52DE               	movf	postinc2,f,c
 10185  0146FE  D00F               	goto	u10190
 10186  014700                     u10195:
 10187  014700  52DE               	movf	postinc2,f,c
 10188  014702  52DE               	movf	postinc2,f,c
 10189  014704  52DE               	movf	postinc2,f,c
 10190  014706  52DE               	movf	postinc2,f,c
 10191  014708  52DE               	movf	postinc2,f,c
 10192  01470A  52DE               	movf	postinc2,f,c
 10193  01470C  90D8               	bcf	status,0,c
 10194  01470E  32DD               	rrcf	postdec2,f,c
 10195  014710  32DD               	rrcf	postdec2,f,c
 10196  014712  32DD               	rrcf	postdec2,f,c
 10197  014714  32DD               	rrcf	postdec2,f,c
 10198  014716  32DD               	rrcf	postdec2,f,c
 10199  014718  32DD               	rrcf	postdec2,f,c
 10200  01471A  32DD               	rrcf	postdec2,f,c
 10201  01471C  32DE               	rrcf	postinc2,f,c
 10202  01471E                     u10190:
 10203  01471E  2EE8               	decfsz	wreg,f,c
 10204  014720  D7EF               	goto	u10195
 10205  014722                     l10526:
 10206                           
 10207                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10208                           ;stkvar	_i @ sp[(-20)+14]
 10209  014722  0EFB               	movlw	-5
 10210  014724  BEE3               	btfsc	plusw1,7,c
 10211  014726  D03A               	goto	u10240
 10212  014728  0EFB               	movlw	-5
 10213  01472A  50E3               	movf	plusw1,w,c
 10214  01472C  E108               	bnz	u10200
 10215  01472E  0EFA               	movlw	-6
 10216  014730  006F FF8C  F025    	movff	plusw1,btemp
 10217  014736  0E02               	movlw	2
 10218  014738  5E25               	subwf	btemp^0,f,c
 10219  01473A  A0D8               	btfss	status,0,c
 10220  01473C  D02F               	goto	u10240
 10221  01473E                     u10200:
 10222                           
 10223                           ;stkvar	_n @ sp[(-20)+4]
 10224  01473E  0EF0               	movlw	-16
 10225  014740  50E3               	movf	plusw1,w,c
 10226  014742  E115               	bnz	u10211
 10227  014744  0EF1               	movlw	-15
 10228  014746  50E3               	movf	plusw1,w,c
 10229  014748  E112               	bnz	u10211
 10230  01474A  0EF2               	movlw	-14
 10231  01474C  50E3               	movf	plusw1,w,c
 10232  01474E  E10F               	bnz	u10211
 10233  014750  0EF3               	movlw	-13
 10234  014752  50E3               	movf	plusw1,w,c
 10235  014754  E10C               	bnz	u10211
 10236  014756  0EF4               	movlw	-12
 10237  014758  50E3               	movf	plusw1,w,c
 10238  01475A  E109               	bnz	u10211
 10239  01475C  0EF5               	movlw	-11
 10240  01475E  50E3               	movf	plusw1,w,c
 10241  014760  E106               	bnz	u10211
 10242  014762  0EF6               	movlw	-10
 10243  014764  50E3               	movf	plusw1,w,c
 10244  014766  E103               	bnz	u10211
 10245  014768  0EF7               	movlw	-9
 10246  01476A  50E3               	movf	plusw1,w,c
 10247  01476C  A4D8               	btfss	status,2,c
 10248  01476E                     u10211:
 10249  01476E  D6EB               	goto	l10494
 10250                           
 10251                           ;stkvar	_p @ sp[(-20)+18]
 10252  014770  0EFF               	movlw	-1
 10253  014772  BEE3               	btfsc	plusw1,7,c
 10254  014774  D007               	goto	u10220
 10255  014776  0EFF               	movlw	-1
 10256  014778  50E3               	movf	plusw1,w,c
 10257  01477A  E103               	bnz	u10221
 10258  01477C  0EFE               	movlw	-2
 10259  01477E  04E3               	decf	plusw1,w,c
 10260  014780  B0D8               	btfsc	status,0,c
 10261  014782                     u10221:
 10262  014782  D6E1               	goto	l10494
 10263  014784                     u10220:
 10264                           
 10265                           ;stkvar	_w @ sp[(-20)+16]
 10266  014784  0EFD               	movlw	-3
 10267  014786  BEE3               	btfsc	plusw1,7,c
 10268  014788  D009               	goto	u10240
 10269  01478A  0EFD               	movlw	-3
 10270  01478C  50E3               	movf	plusw1,w,c
 10271  01478E  E104               	bnz	u10230
 10272  014790  0EFC               	movlw	-4
 10273  014792  04E3               	decf	plusw1,w,c
 10274  014794  A0D8               	btfss	status,0,c
 10275  014796  D002               	goto	u10240
 10276  014798                     u10230:
 10277  014798  B20E               	btfsc	_flags^0,1,c
 10278  01479A  D6D5               	goto	l10494
 10279  01479C                     u10240:
 10280                           
 10281                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 10282  01479C  A80E               	btfss	_flags^0,4,c
 10283  01479E  D036               	goto	l10542
 10284                           
 10285                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 10286                           ;stkvar	_i @ sp[(-20)+14]
 10287  0147A0  50E1               	movf	fsr1l,w,c
 10288  0147A2  0FFA               	addlw	-6
 10289  0147A4  6ED9               	movwf	fsr2l,c
 10290  0147A6  50E2               	movf	fsr1h,w,c
 10291  0147A8  6EDA               	movwf	fsr2h,c
 10292  0147AA  0EFF               	movlw	255
 10293  0147AC  22DA               	addwfc	fsr2h,f,c
 10294  0147AE  06DE               	decf	postinc2,f,c
 10295  0147B0  0E00               	movlw	0
 10296  0147B2  5ADD               	subwfb	postdec2,f,c
 10297                           
 10298                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 10299                           ;stkvar	_x @ sp[(-20)+-11]
 10300                           ;stkvar	_i @ sp[(-20)+14]
 10301  0147B4  0EFA               	movlw	-6
 10302  0147B6  006F FF8C  F02F    	movff	plusw1,btemp+10
 10303  0147BC  0EFB               	movlw	-5
 10304  0147BE  006F FF8C  F030    	movff	plusw1,btemp+11
 10305  0147C4  0E94               	movlw	low _dbuf
 10306  0147C6  242F               	addwf	(btemp+10)^0,w,c
 10307  0147C8  6ED9               	movwf	fsr2l,c
 10308  0147CA  0E03               	movlw	high _dbuf
 10309  0147CC  2030               	addwfc	(btemp+11)^0,w,c
 10310  0147CE  6EDA               	movwf	fsr2h,c
 10311  0147D0  0EE1               	movlw	-31
 10312  0147D2  006F FF8F FFDF     	movff	plusw1,indf2
 10313                           
 10314                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 10315                           ;stkvar	_i @ sp[(-20)+14]
 10316  0147D8  50E1               	movf	fsr1l,w,c
 10317  0147DA  0FFA               	addlw	-6
 10318  0147DC  6ED9               	movwf	fsr2l,c
 10319  0147DE  50E2               	movf	fsr1h,w,c
 10320  0147E0  6EDA               	movwf	fsr2h,c
 10321  0147E2  0EFF               	movlw	255
 10322  0147E4  22DA               	addwfc	fsr2h,f,c
 10323  0147E6  06DE               	decf	postinc2,f,c
 10324  0147E8  0E00               	movlw	0
 10325  0147EA  5ADD               	subwfb	postdec2,f,c
 10326                           
 10327                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 10328                           ;stkvar	_i @ sp[(-20)+14]
 10329  0147EC  0EFA               	movlw	-6
 10330  0147EE  006F FF8C  F02F    	movff	plusw1,btemp+10
 10331  0147F4  0EFB               	movlw	-5
 10332  0147F6  006F FF8C  F030    	movff	plusw1,btemp+11
 10333  0147FC  0E94               	movlw	low _dbuf
 10334  0147FE  242F               	addwf	(btemp+10)^0,w,c
 10335  014800  6ED9               	movwf	fsr2l,c
 10336  014802  0E03               	movlw	high _dbuf
 10337  014804  2030               	addwfc	(btemp+11)^0,w,c
 10338  014806  6EDA               	movwf	fsr2h,c
 10339  014808  0E30               	movlw	48
 10340  01480A  6EDF               	movwf	indf2,c
 10341  01480C                     l10542:
 10342                           
 10343                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 10344                           ;stkvar	_w @ sp[(-20)+16]
 10345  01480C  0EFC               	movlw	-4
 10346  01480E  006F FF8F FFE6     	movff	plusw1,postinc1
 10347  014814  006F FF8F FFE6     	movff	plusw1,postinc1
 10348                           
 10349                           ;stkvar	_i @ sp[(-22)+14]
 10350  01481A  0E94               	movlw	low _dbuf
 10351  01481C  6E2F               	movwf	(btemp+10)^0,c
 10352  01481E  0E03               	movlw	high _dbuf
 10353  014820  6E30               	movwf	(btemp+11)^0,c
 10354  014822  0EF8               	movlw	-8
 10355  014824  50E3               	movf	plusw1,w,c
 10356  014826  262F               	addwf	(btemp+10)^0,f,c
 10357  014828  0EF9               	movlw	-7
 10358  01482A  50E3               	movf	plusw1,w,c
 10359  01482C  2230               	addwfc	(btemp+11)^0,f,c
 10360  01482E  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 10361  014834  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 10362                           
 10363                           ;stkvar	_fp @ sp[(-24)+-2]
 10364  01483A  0EE6               	movlw	-26
 10365  01483C  006F FF8F FFE6     	movff	plusw1,postinc1
 10366  014842  006F FF8F FFE6     	movff	plusw1,postinc1
 10367  014848  ECC1  F0B6         	call	_pad	;wreg free
 10368                           
 10369                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 10370  01484C  0EE1               	movlw	225
 10371  01484E  26E1               	addwf	fsr1l,f,c
 10372  014850  0EFF               	movlw	255
 10373  014852  22E2               	addwfc	fsr1h,f,c
 10374  014854  0012               	return		;funcret
 10375  014856                     __end_of_xtoa:
 10376                           	opt callstack 0
 10377                           
 10378 ;; *************** function _toupper *****************
 10379 ;; Defined at:
 10380 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 10381 ;; Parameters:    Size  Location     Type
 10382 ;;  c               2  [STACK] int 
 10383 ;; Auto vars:     Size  Location     Type
 10384 ;;		None
 10385 ;; Return value:  Size  Location     Type
 10386 ;;                  2  [STACK] int 
 10387 ;; Registers used:
 10388 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 10389 ;; Tracked objects:
 10390 ;;		On entry : 0/3
 10391 ;;		On exit  : 0/0
 10392 ;;		Unchanged: 0/0
 10393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10398 ;;Total ram usage:        0 bytes
 10399 ;; Hardware stack levels used:    1
 10400 ;; Hardware stack levels required when called:    8
 10401 ;; This function calls:
 10402 ;;		_islower
 10403 ;; This function is called by:
 10404 ;;		_xtoa
 10405 ;; This function uses a reentrant model
 10406 ;;
 10407                           
 10408                           	psect	text43
 10409  017E22                     __ptext43:
 10410                           	opt callstack 0
 10411  017E22                     _toupper:
 10412                           	opt callstack 0
 10413                           
 10414                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10415  017E22  52E6               	movf	postinc1,f,c
 10416  017E24  52E6               	movf	postinc1,f,c
 10417                           
 10418                           ;stkvar	_c @ sp[(-2)+-2]
 10419                           
 10420                           ;incstack = 0
 10421  017E26  0EFC               	movlw	-4
 10422  017E28  50E3               	movf	plusw1,w,c
 10423  017E2A  0F9F               	addlw	159
 10424  017E2C  6E2F               	movwf	(btemp+10)^0,c
 10425  017E2E  0EFD               	movlw	-3
 10426  017E30  006F FF8C  F030    	movff	plusw1,btemp+11
 10427  017E36  0EFF               	movlw	255
 10428  017E38  2230               	addwfc	(btemp+11)^0,f,c
 10429  017E3A  5030               	movf	(btemp+11)^0,w,c
 10430  017E3C  E106               	bnz	u5010
 10431  017E3E  0E1A               	movlw	26
 10432  017E40  5C2F               	subwf	(btemp+10)^0,w,c
 10433  017E42  B0D8               	btfsc	status,0,c
 10434  017E44  D002               	goto	u5010
 10435  017E46  0E01               	movlw	1
 10436  017E48  D001               	goto	u5020
 10437  017E4A                     u5010:
 10438  017E4A  0E00               	movlw	0
 10439  017E4C                     u5020:
 10440  017E4C  6E2F               	movwf	(btemp+10)^0,c
 10441  017E4E  6A30               	clrf	(btemp+11)^0,c
 10442                           
 10443                           ;stkvar	_toupper$5670 @ sp[(-2)+0]
 10444  017E50  0EFE               	movlw	-2
 10445  017E52  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10446  017E58  0EFF               	movlw	-1
 10447  017E5A  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10448                           
 10449                           ;stkvar	_toupper$5670 @ sp[(-2)+0]
 10450  017E60  0EFE               	movlw	-2
 10451  017E62  006F FF8C  F025    	movff	plusw1,btemp
 10452  017E68  0EFF               	movlw	-1
 10453  017E6A  50E3               	movf	plusw1,w,c
 10454  017E6C  1025               	iorwf	btemp^0,w,c
 10455  017E6E  B4D8               	btfsc	status,2,c
 10456  017E70  D00D               	goto	l6714
 10457                           
 10458                           ;stkvar	_c @ sp[(-2)+-2]
 10459  017E72  0EFC               	movlw	-4
 10460  017E74  006F FF8C  F025    	movff	plusw1,btemp
 10461  017E7A  0EFD               	movlw	-3
 10462  017E7C  006F FF8C  F026    	movff	plusw1,btemp+1
 10463  017E82  0E5F               	movlw	95
 10464  017E84  1625               	andwf	btemp^0,f,c
 10465  017E86  0E00               	movlw	0
 10466  017E88  1626               	andwf	(btemp+1)^0,f,c
 10467  017E8A  D008               	goto	l3071
 10468  017E8C                     l6714:
 10469                           
 10470                           ;stkvar	_c @ sp[(-2)+-2]
 10471  017E8C  0EFC               	movlw	-4
 10472  017E8E  006F FF8C  F025    	movff	plusw1,btemp
 10473  017E94  0EFD               	movlw	-3
 10474  017E96  006F FF8C  F026    	movff	plusw1,btemp+1
 10475  017E9C                     l3071:
 10476                           
 10477                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 10478  017E9C  52E5               	movf	postdec1,f,c
 10479  017E9E  52E5               	movf	postdec1,f,c
 10480  017EA0  52E5               	movf	postdec1,f,c
 10481  017EA2  52E5               	movf	postdec1,f,c
 10482  017EA4  0012               	return		;funcret
 10483  017EA6                     __end_of_toupper:
 10484                           	opt callstack 0
 10485                           
 10486 ;; *************** function _islower *****************
 10487 ;; Defined at:
 10488 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 10489 ;; Parameters:    Size  Location     Type
 10490 ;;  c               2  [STACK] int 
 10491 ;; Auto vars:     Size  Location     Type
 10492 ;;		None
 10493 ;; Return value:  Size  Location     Type
 10494 ;;                  2  [STACK] int 
 10495 ;; Registers used:
 10496 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 10497 ;; Tracked objects:
 10498 ;;		On entry : 0/0
 10499 ;;		On exit  : 0/0
 10500 ;;		Unchanged: 0/0
 10501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10506 ;;Total ram usage:        0 bytes
 10507 ;; Hardware stack levels used:    1
 10508 ;; Hardware stack levels required when called:    7
 10509 ;; This function calls:
 10510 ;;		Nothing
 10511 ;; This function is called by:
 10512 ;;		_toupper
 10513 ;; This function uses a reentrant model
 10514 ;;
 10515                           
 10516                           	psect	text44
 10517  018A1C                     __ptext44:
 10518                           	opt callstack 0
 10519  018A1C                     _islower:
 10520                           	opt callstack 15
 10521                           
 10522                           ;stkvar	_c @ sp[(0)+-2]
 10523                           
 10524                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10525                           ;incstack = 0
 10526  018A1C  0EFE               	movlw	-2
 10527  018A1E  50E3               	movf	plusw1,w,c
 10528  018A20  0F9F               	addlw	159
 10529  018A22  6E2F               	movwf	(btemp+10)^0,c
 10530  018A24  0EFF               	movlw	-1
 10531  018A26  006F FF8C  F030    	movff	plusw1,btemp+11
 10532  018A2C  0EFF               	movlw	255
 10533  018A2E  2230               	addwfc	(btemp+11)^0,f,c
 10534  018A30  5030               	movf	(btemp+11)^0,w,c
 10535  018A32  E106               	bnz	u4700
 10536  018A34  0E1A               	movlw	26
 10537  018A36  5C2F               	subwf	(btemp+10)^0,w,c
 10538  018A38  B0D8               	btfsc	status,0,c
 10539  018A3A  D002               	goto	u4700
 10540  018A3C  0E01               	movlw	1
 10541  018A3E  D001               	goto	u4710
 10542  018A40                     u4700:
 10543  018A40  0E00               	movlw	0
 10544  018A42                     u4710:
 10545  018A42  6E25               	movwf	btemp^0,c
 10546  018A44  6A26               	clrf	(btemp+1)^0,c
 10547                           
 10548                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 10549  018A46  52E5               	movf	postdec1,f,c
 10550  018A48  52E5               	movf	postdec1,f,c
 10551  018A4A  0012               	return		;funcret
 10552  018A4C                     __end_of_islower:
 10553                           	opt callstack 0
 10554                           
 10555 ;; *************** function _isalpha *****************
 10556 ;; Defined at:
 10557 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 10558 ;; Parameters:    Size  Location     Type
 10559 ;;  c               2  [STACK] int 
 10560 ;; Auto vars:     Size  Location     Type
 10561 ;;		None
 10562 ;; Return value:  Size  Location     Type
 10563 ;;                  2  [STACK] int 
 10564 ;; Registers used:
 10565 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 10566 ;; Tracked objects:
 10567 ;;		On entry : 0/0
 10568 ;;		On exit  : 0/0
 10569 ;;		Unchanged: 0/0
 10570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10575 ;;Total ram usage:        0 bytes
 10576 ;; Hardware stack levels used:    1
 10577 ;; Hardware stack levels required when called:    7
 10578 ;; This function calls:
 10579 ;;		Nothing
 10580 ;; This function is called by:
 10581 ;;		_xtoa
 10582 ;; This function uses a reentrant model
 10583 ;;
 10584                           
 10585                           	psect	text45
 10586  0186E2                     __ptext45:
 10587                           	opt callstack 0
 10588  0186E2                     _isalpha:
 10589                           	opt callstack 16
 10590                           
 10591                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10592                           ;incstack = 0
 10593  0186E2  0E9F               	movlw	159
 10594  0186E4  6E2F               	movwf	(btemp+10)^0,c
 10595  0186E6  0EFF               	movlw	255
 10596  0186E8  6E30               	movwf	(btemp+11)^0,c
 10597                           
 10598                           ;stkvar	_c @ sp[(0)+-2]
 10599  0186EA  0EFE               	movlw	-2
 10600  0186EC  006F FF8C  F02D    	movff	plusw1,btemp+8
 10601  0186F2  0EFF               	movlw	-1
 10602  0186F4  006F FF8C  F02E    	movff	plusw1,btemp+9
 10603  0186FA  0E20               	movlw	32
 10604  0186FC  122D               	iorwf	(btemp+8)^0,f,c
 10605  0186FE  0E00               	movlw	0
 10606  018700  122E               	iorwf	(btemp+9)^0,f,c
 10607  018702  502F               	movf	(btemp+10)^0,w,c
 10608  018704  262D               	addwf	(btemp+8)^0,f,c
 10609  018706  5030               	movf	(btemp+11)^0,w,c
 10610  018708  222E               	addwfc	(btemp+9)^0,f,c
 10611  01870A  502E               	movf	(btemp+9)^0,w,c
 10612  01870C  E106               	bnz	u4990
 10613  01870E  0E1A               	movlw	26
 10614  018710  5C2D               	subwf	(btemp+8)^0,w,c
 10615  018712  B0D8               	btfsc	status,0,c
 10616  018714  D002               	goto	u4990
 10617  018716  0E01               	movlw	1
 10618  018718  D001               	goto	u5000
 10619  01871A                     u4990:
 10620  01871A  0E00               	movlw	0
 10621  01871C                     u5000:
 10622  01871C  6E25               	movwf	btemp^0,c
 10623  01871E  6A26               	clrf	(btemp+1)^0,c
 10624                           
 10625                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 10626  018720  52E5               	movf	postdec1,f,c
 10627  018722  52E5               	movf	postdec1,f,c
 10628  018724  0012               	return		;funcret
 10629  018726                     __end_of_isalpha:
 10630                           	opt callstack 0
 10631                           
 10632 ;; *************** function _strncmp *****************
 10633 ;; Defined at:
 10634 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 10635 ;; Parameters:    Size  Location     Type
 10636 ;;  _l              2  [STACK] PTR const unsigned char 
 10637 ;;		 -> ct(3), 
 10638 ;;  _r              2  [STACK] PTR const unsigned char 
 10639 ;;		 -> STR_56(3), 
 10640 ;;  n               2  [STACK] unsigned int 
 10641 ;; Auto vars:     Size  Location     Type
 10642 ;;  r               2  [STACK] PTR const unsigned char 
 10643 ;;		 -> STR_56(3), 
 10644 ;;  l               2  [STACK] PTR const unsigned char 
 10645 ;;		 -> ct(3), 
 10646 ;; Return value:  Size  Location     Type
 10647 ;;                  2  [STACK] int 
 10648 ;; Registers used:
 10649 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru,
      + prodl
 10650 ;; Tracked objects:
 10651 ;;		On entry : 0/0
 10652 ;;		On exit  : 0/0
 10653 ;;		Unchanged: 0/0
 10654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10659 ;;Total ram usage:        0 bytes
 10660 ;; Hardware stack levels used:    1
 10661 ;; Hardware stack levels required when called:    7
 10662 ;; This function calls:
 10663 ;;		Nothing
 10664 ;; This function is called by:
 10665 ;;		_vfpfcnvrt
 10666 ;; This function uses a reentrant model
 10667 ;;
 10668                           
 10669                           	psect	text46
 10670  015F90                     __ptext46:
 10671                           	opt callstack 0
 10672  015F90                     _strncmp:
 10673                           	opt callstack 0
 10674                           
 10675                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10676  015F90  52E6               	movf	postinc1,f,c
 10677  015F92  52E6               	movf	postinc1,f,c
 10678  015F94  52E6               	movf	postinc1,f,c
 10679  015F96  52E6               	movf	postinc1,f,c
 10680                           
 10681                           ;stkvar	__l @ sp[(-4)+-2]
 10682                           
 10683                           ;incstack = 0
 10684  015F98  0EFA               	movlw	-6
 10685  015F9A  006F FF8C  F02F    	movff	plusw1,btemp+10
 10686  015FA0  0EFB               	movlw	-5
 10687  015FA2  006F FF8C  F030    	movff	plusw1,btemp+11
 10688                           
 10689                           ;stkvar	_l @ sp[(-4)+2]
 10690  015FA8  0EFF               	movlw	-1
 10691  015FAA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10692  015FB0  0EFE               	movlw	-2
 10693  015FB2  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10694                           
 10695                           ;stkvar	__r @ sp[(-4)+-4]
 10696  015FB8  0EF8               	movlw	-8
 10697  015FBA  006F FF8C  F02F    	movff	plusw1,btemp+10
 10698  015FC0  0EF9               	movlw	-7
 10699  015FC2  006F FF8C  F030    	movff	plusw1,btemp+11
 10700                           
 10701                           ;stkvar	_r @ sp[(-4)+0]
 10702  015FC8  0EFD               	movlw	-3
 10703  015FCA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10704  015FD0  0EFC               	movlw	-4
 10705  015FD2  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10706                           
 10707                           ;stkvar	_n @ sp[(-4)+-6]
 10708  015FD8  0EF6               	movlw	-10
 10709  015FDA  006F FF8C  F025    	movff	plusw1,btemp
 10710  015FE0  0E01               	movlw	1
 10711  015FE2  5E25               	subwf	btemp^0,f,c
 10712  015FE4  0EF6               	movlw	-10
 10713  015FE6  0060  F097  FFE3   	movff	btemp,plusw1
 10714  015FEC  0EF7               	movlw	-9
 10715  015FEE  006F FF8C  F025    	movff	plusw1,btemp
 10716  015FF4  0E00               	movlw	0
 10717  015FF6  5A25               	subwfb	btemp^0,f,c
 10718  015FF8  0EF7               	movlw	-9
 10719  015FFA  0060  F097  FFE3   	movff	btemp,plusw1
 10720  016000  0EF6               	movlw	-10
 10721  016002  28E3               	incf	plusw1,w,c
 10722  016004  E13F               	bnz	l7716
 10723  016006  0EF7               	movlw	-9
 10724  016008  28E3               	incf	plusw1,w,c
 10725  01600A  A4D8               	btfss	status,2,c
 10726  01600C  D03B               	goto	l7716
 10727  01600E  0E00               	movlw	0
 10728  016010  6E25               	movwf	btemp^0,c
 10729  016012  0E00               	movlw	0
 10730  016014  6E26               	movwf	(btemp+1)^0,c
 10731  016016  D09B               	goto	l3043
 10732  016018                     l7714:
 10733                           
 10734                           ;stkvar	_l @ sp[(-4)+2]
 10735  016018  0EFE               	movlw	-2
 10736  01601A  50E3               	movf	plusw1,w,c
 10737  01601C  0F01               	addlw	1
 10738  01601E  6E25               	movwf	btemp^0,c
 10739  016020  0EFE               	movlw	-2
 10740  016022  0060  F097  FFE3   	movff	btemp,plusw1
 10741  016028  6A25               	clrf	btemp^0,c
 10742  01602A  0EFF               	movlw	-1
 10743  01602C  50E3               	movf	plusw1,w,c
 10744  01602E  2025               	addwfc	btemp^0,w,c
 10745  016030  6E25               	movwf	btemp^0,c
 10746  016032  0EFF               	movlw	-1
 10747  016034  0060  F097  FFE3   	movff	btemp,plusw1
 10748                           
 10749                           ;stkvar	_r @ sp[(-4)+0]
 10750  01603A  0EFC               	movlw	-4
 10751  01603C  50E3               	movf	plusw1,w,c
 10752  01603E  0F01               	addlw	1
 10753  016040  6E25               	movwf	btemp^0,c
 10754  016042  0EFC               	movlw	-4
 10755  016044  0060  F097  FFE3   	movff	btemp,plusw1
 10756  01604A  6A25               	clrf	btemp^0,c
 10757  01604C  0EFD               	movlw	-3
 10758  01604E  50E3               	movf	plusw1,w,c
 10759  016050  2025               	addwfc	btemp^0,w,c
 10760  016052  6E25               	movwf	btemp^0,c
 10761  016054  0EFD               	movlw	-3
 10762  016056  0060  F097  FFE3   	movff	btemp,plusw1
 10763                           
 10764                           ;stkvar	_n @ sp[(-4)+-6]
 10765  01605C  0EF6               	movlw	-10
 10766  01605E  006F FF8C  F025    	movff	plusw1,btemp
 10767  016064  0E01               	movlw	1
 10768  016066  5E25               	subwf	btemp^0,f,c
 10769  016068  0EF6               	movlw	-10
 10770  01606A  0060  F097  FFE3   	movff	btemp,plusw1
 10771  016070  0EF7               	movlw	-9
 10772  016072  006F FF8C  F025    	movff	plusw1,btemp
 10773  016078  0E00               	movlw	0
 10774  01607A  5A25               	subwfb	btemp^0,f,c
 10775  01607C  0EF7               	movlw	-9
 10776  01607E  0060  F097  FFE3   	movff	btemp,plusw1
 10777  016084                     l7716:
 10778                           
 10779                           ;stkvar	_l @ sp[(-4)+2]
 10780  016084  0EFE               	movlw	-2
 10781  016086  006F FF8F FFD9     	movff	plusw1,fsr2l
 10782  01608C  0EFF               	movlw	-1
 10783  01608E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10784  016094  50DF               	movf	indf2,w,c
 10785  016096  B4D8               	btfsc	status,2,c
 10786  016098  D03B               	goto	u6950
 10787                           
 10788                           ;stkvar	_r @ sp[(-4)+0]
 10789  01609A  50E1               	movf	fsr1l,w,c
 10790  01609C  0FFC               	addlw	-4
 10791  01609E  6ED9               	movwf	fsr2l,c
 10792  0160A0  50E2               	movf	fsr1h,w,c
 10793  0160A2  6EDA               	movwf	fsr2h,c
 10794  0160A4  0EFF               	movlw	255
 10795  0160A6  22DA               	addwfc	fsr2h,f,c
 10796  0160A8  006F FF7B FFF6     	movff	postinc2,tblptrl
 10797  0160AE  006F FF77 FFF7     	movff	postdec2,tblptrh
 10798  0160B4                     	if	0	;tblptru may be non-zero
 10799  0160B4                     	endif
 10800  0160B4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10801  0160B4  0E00               	movlw	low (__mediumconst shr (0+16))
 10802  0160B6  6EF8               	movwf	tblptru,c
 10803  0160B8                     	endif
 10804  0160B8  0008               	tblrd		*
 10805  0160BA  50F5               	movf	tablat,w,c
 10806  0160BC  0900               	iorlw	0
 10807  0160BE  B4D8               	btfsc	status,2,c
 10808  0160C0  D027               	goto	u6950
 10809                           
 10810                           ;stkvar	_n @ sp[(-4)+-6]
 10811  0160C2  0EF6               	movlw	-10
 10812  0160C4  006F FF8C  F025    	movff	plusw1,btemp
 10813  0160CA  0EF7               	movlw	-9
 10814  0160CC  50E3               	movf	plusw1,w,c
 10815  0160CE  1025               	iorwf	btemp^0,w,c
 10816  0160D0  B4D8               	btfsc	status,2,c
 10817  0160D2  D01E               	goto	u6950
 10818                           
 10819                           ;stkvar	_l @ sp[(-4)+2]
 10820  0160D4  0EFE               	movlw	-2
 10821  0160D6  006F FF8F FFD9     	movff	plusw1,fsr2l
 10822  0160DC  0EFF               	movlw	-1
 10823  0160DE  006F FF8F FFDA     	movff	plusw1,fsr2h
 10824  0160E4  50DF               	movf	indf2,w,c
 10825  0160E6  6E30               	movwf	(btemp+11)^0,c
 10826                           
 10827                           ;stkvar	_r @ sp[(-4)+0]
 10828  0160E8  50E1               	movf	fsr1l,w,c
 10829  0160EA  0FFC               	addlw	-4
 10830  0160EC  6ED9               	movwf	fsr2l,c
 10831  0160EE  50E2               	movf	fsr1h,w,c
 10832  0160F0  6EDA               	movwf	fsr2h,c
 10833  0160F2  0EFF               	movlw	255
 10834  0160F4  22DA               	addwfc	fsr2h,f,c
 10835  0160F6  006F FF7B FFF6     	movff	postinc2,tblptrl
 10836  0160FC  006F FF77 FFF7     	movff	postdec2,tblptrh
 10837  016102                     	if	0	;tblptru may be non-zero
 10838  016102                     	endif
 10839  016102                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10840  016102  0E00               	movlw	low (__mediumconst shr (0+16))
 10841  016104  6EF8               	movwf	tblptru,c
 10842  016106                     	endif
 10843  016106  0008               	tblrd		*
 10844  016108  50F5               	movf	tablat,w,c
 10845  01610A  1830               	xorwf	(btemp+11)^0,w,c
 10846  01610C  B4D8               	btfsc	status,2,c
 10847  01610E  D784               	goto	l7714
 10848  016110                     u6950:
 10849                           
 10850                           ;stkvar	_l @ sp[(-4)+2]
 10851  016110  0EFE               	movlw	-2
 10852  016112  006F FF8F FFD9     	movff	plusw1,fsr2l
 10853  016118  0EFF               	movlw	-1
 10854  01611A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10855  016120  50DF               	movf	indf2,w,c
 10856  016122  6E25               	movwf	btemp^0,c
 10857  016124  6A26               	clrf	(btemp+1)^0,c
 10858                           
 10859                           ;stkvar	_r @ sp[(-4)+0]
 10860  016126  50E1               	movf	fsr1l,w,c
 10861  016128  0FFC               	addlw	-4
 10862  01612A  6ED9               	movwf	fsr2l,c
 10863  01612C  50E2               	movf	fsr1h,w,c
 10864  01612E  6EDA               	movwf	fsr2h,c
 10865  016130  0EFF               	movlw	255
 10866  016132  22DA               	addwfc	fsr2h,f,c
 10867  016134  006F FF7B FFF6     	movff	postinc2,tblptrl
 10868  01613A  006F FF77 FFF7     	movff	postdec2,tblptrh
 10869  016140                     	if	0	;tblptru may be non-zero
 10870  016140                     	endif
 10871  016140                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10872  016140  0E00               	movlw	low (__mediumconst shr (0+16))
 10873  016142  6EF8               	movwf	tblptru,c
 10874  016144                     	endif
 10875  016144  0008               	tblrd		*
 10876  016146  50F5               	movf	tablat,w,c
 10877  016148  5E25               	subwf	btemp^0,f,c
 10878  01614A  0E00               	movlw	0
 10879  01614C  5A26               	subwfb	(btemp+1)^0,f,c
 10880  01614E                     l3043:
 10881                           
 10882                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 10883  01614E  0EF6               	movlw	246
 10884  016150  26E1               	addwf	fsr1l,f,c
 10885  016152  0EFF               	movlw	255
 10886  016154  22E2               	addwfc	fsr1h,f,c
 10887  016156  0012               	return		;funcret
 10888  016158                     __end_of_strncmp:
 10889                           	opt callstack 0
 10890                           
 10891 ;; *************** function _stoa *****************
 10892 ;; Defined at:
 10893 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10894 ;; Parameters:    Size  Location     Type
 10895 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10896 ;;		 -> f(6), NULL(0), 
 10897 ;;  s               2  [STACK] PTR unsigned char 
 10898 ;;		 -> ?_printf(2), ?_sprintf(2), STR_28(9), STR_27(12), 
 10899 ;;		 -> D.lcd(288), D(290), T(144), STR_7(6), 
 10900 ;;		 -> STR_3(6), V(188), 
 10901 ;; Auto vars:     Size  Location     Type
 10902 ;;  nuls            7  [STACK] unsigned char [7]
 10903 ;;  l               2  [STACK] int 
 10904 ;;  p               2  [STACK] int 
 10905 ;;  cp              2  [STACK] PTR unsigned char 
 10906 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_28(9), 
 10907 ;;		 -> STR_27(12), D.lcd(288), D(290), T(144), 
 10908 ;;		 -> STR_7(6), STR_3(6), V(188), 
 10909 ;;  w               2  [STACK] int 
 10910 ;;  i               2  [STACK] int 
 10911 ;; Return value:  Size  Location     Type
 10912 ;;                  2  [STACK] int 
 10913 ;; Registers used:
 10914 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 10915 ;; Tracked objects:
 10916 ;;		On entry : 0/0
 10917 ;;		On exit  : 0/0
 10918 ;;		Unchanged: 0/0
 10919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10924 ;;Total ram usage:        0 bytes
 10925 ;; Hardware stack levels used:    1
 10926 ;; Hardware stack levels required when called:   10
 10927 ;; This function calls:
 10928 ;;		_fputc
 10929 ;;		_strlen
 10930 ;; This function is called by:
 10931 ;;		_vfpfcnvrt
 10932 ;; This function uses a reentrant model
 10933 ;;
 10934                           
 10935                           	psect	text47
 10936  015188                     __ptext47:
 10937                           	opt callstack 0
 10938  015188                     _stoa:
 10939                           	opt callstack 0
 10940                           
 10941                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10942  015188  0E11               	movlw	17
 10943  01518A  26E1               	addwf	fsr1l,f,c
 10944  01518C  0E00               	movlw	0
 10945  01518E  22E2               	addwfc	fsr1h,f,c
 10946                           
 10947                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 10948                           
 10949                           ;incstack = 0
 10950  015190  EE20  F0EB         	lfsr	2,stoa@F1166
 10951                           
 10952                           ;stkvar	_nuls @ sp[(-17)+0]
 10953  015194  0E07               	movlw	7
 10954  015196  6E25               	movwf	btemp^0,c
 10955  015198  0EEF               	movlw	-17
 10956  01519A                     us998999:
 10957  01519A  006F FF7B FFE3     	movff	postinc2,plusw1
 10958  0151A0  28E8               	incf	wreg,w,c
 10959  0151A2  2E25               	decfsz	btemp^0,f,c
 10960  0151A4  D7FA               	bra	us998999
 10961                           
 10962                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 10963                           ;stkvar	_s @ sp[(-17)+-4]
 10964  0151A6  0EEB               	movlw	-21
 10965  0151A8  006F FF8C  F02F    	movff	plusw1,btemp+10
 10966  0151AE  0EEC               	movlw	-20
 10967  0151B0  006F FF8C  F030    	movff	plusw1,btemp+11
 10968                           
 10969                           ;stkvar	_cp @ sp[(-17)+11]
 10970  0151B6  0EFB               	movlw	-5
 10971  0151B8  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10972  0151BE  0EFA               	movlw	-6
 10973  0151C0  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10974                           
 10975                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 10976                           ;stkvar	_cp @ sp[(-17)+11]
 10977  0151C6  0EFA               	movlw	-6
 10978  0151C8  006F FF8C  F025    	movff	plusw1,btemp
 10979  0151CE  0EFB               	movlw	-5
 10980  0151D0  50E3               	movf	plusw1,w,c
 10981  0151D2  1025               	iorwf	btemp^0,w,c
 10982  0151D4  A4D8               	btfss	status,2,c
 10983  0151D6  D00E               	goto	l10430
 10984                           
 10985                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 10986                           ;stkvar	_nuls @ sp[(-17)+0]
 10987  0151D8  0EEF               	movlw	239
 10988  0151DA  24E1               	addwf	fsr1l,w,c
 10989  0151DC  6E2F               	movwf	(btemp+10)^0,c
 10990  0151DE  0EFF               	movlw	255
 10991  0151E0  20E2               	addwfc	fsr1h,w,c
 10992  0151E2  6E30               	movwf	(btemp+11)^0,c
 10993                           
 10994                           ;stkvar	_cp @ sp[(-17)+11]
 10995  0151E4  0EFB               	movlw	-5
 10996  0151E6  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10997  0151EC  0EFA               	movlw	-6
 10998  0151EE  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10999  0151F4                     l10430:
 11000                           
 11001                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 11002                           ;stkvar	_cp @ sp[(-17)+11]
 11003  0151F4  0EFA               	movlw	-6
 11004  0151F6  006F FF8F FFE6     	movff	plusw1,postinc1
 11005  0151FC  006F FF8F FFE6     	movff	plusw1,postinc1
 11006  015202  EC10  F0BD         	call	_strlen	;wreg free
 11007                           
 11008                           ;stkvar	_l @ sp[(-17)+7]
 11009  015206  0EF6               	movlw	-10
 11010  015208  0060  F097  FFE3   	movff	btemp,plusw1
 11011  01520E  0EF7               	movlw	-9
 11012  015210  0060  F09B  FFE3   	movff	btemp+1,plusw1
 11013                           
 11014                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 11015                           ;stkvar	_p @ sp[(-17)+9]
 11016  015216  0EF8               	movlw	-8
 11017  015218  0060  F033  FFE3   	movff	_prec,plusw1
 11018  01521E  0EF9               	movlw	-7
 11019  015220  0060  F037  FFE3   	movff	_prec+1,plusw1
 11020                           
 11021                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 11022                           ;stkvar	_p @ sp[(-17)+9]
 11023  015226  0EF9               	movlw	-7
 11024  015228  BEE3               	btfsc	plusw1,7,c
 11025  01522A  D023               	goto	l2117
 11026                           
 11027                           ;stkvar	_l @ sp[(-17)+7]
 11028                           ;stkvar	_p @ sp[(-17)+9]
 11029  01522C  50E1               	movf	fsr1l,w,c
 11030  01522E  0FF8               	addlw	-8
 11031  015230  6ED9               	movwf	fsr2l,c
 11032  015232  50E2               	movf	fsr1h,w,c
 11033  015234  6EDA               	movwf	fsr2h,c
 11034  015236  0EFF               	movlw	255
 11035  015238  22DA               	addwfc	fsr2h,f,c
 11036  01523A  0EF6               	movlw	-10
 11037  01523C  50E3               	movf	plusw1,w,c
 11038  01523E  5CDE               	subwf	postinc2,w,c
 11039  015240  50DE               	movf	postinc2,w,c
 11040  015242  0A80               	xorlw	128
 11041  015244  6E25               	movwf	btemp^0,c
 11042  015246  0EF7               	movlw	-9
 11043  015248  50E3               	movf	plusw1,w,c
 11044  01524A  0A80               	xorlw	128
 11045  01524C  5825               	subwfb	btemp^0,w,c
 11046  01524E  B0D8               	btfsc	status,0,c
 11047  015250  D010               	goto	l2117
 11048                           
 11049                           ;stkvar	_p @ sp[(-17)+9]
 11050                           ;stkvar	_l @ sp[(-17)+7]
 11051  015252  0EF8               	movlw	-8
 11052  015254  006F FF8C  F025    	movff	plusw1,btemp
 11053  01525A  0EF6               	movlw	-10
 11054  01525C  0060  F097  FFE3   	movff	btemp,plusw1
 11055  015262  0EF9               	movlw	-7
 11056  015264  006F FF8C  F025    	movff	plusw1,btemp
 11057  01526A  0EF7               	movlw	-9
 11058  01526C  0060  F097  FFE3   	movff	btemp,plusw1
 11059  015272                     l2117:
 11060                           
 11061                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 11062                           ;stkvar	_l @ sp[(-17)+7]
 11063                           ;stkvar	_p @ sp[(-17)+9]
 11064  015272  0EF6               	movlw	-10
 11065  015274  006F FF8C  F025    	movff	plusw1,btemp
 11066  01527A  0EF8               	movlw	-8
 11067  01527C  0060  F097  FFE3   	movff	btemp,plusw1
 11068  015282  0EF7               	movlw	-9
 11069  015284  006F FF8C  F025    	movff	plusw1,btemp
 11070  01528A  0EF9               	movlw	-7
 11071  01528C  0060  F097  FFE3   	movff	btemp,plusw1
 11072                           
 11073                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 11074                           ;stkvar	_w @ sp[(-17)+13]
 11075  015292  0EFC               	movlw	-4
 11076  015294  0060  F02B  FFE3   	movff	_width,plusw1
 11077  01529A  0EFD               	movlw	-3
 11078  01529C  0060  F02F  FFE3   	movff	_width+1,plusw1
 11079                           
 11080                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 11081  0152A2  A00E               	btfss	_flags^0,0,c
 11082  0152A4  D01F               	goto	l10450
 11083  0152A6  D031               	goto	u10030
 11084  0152A8                     l10446:
 11085                           
 11086                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 11087                           ;stkvar	_fp @ sp[(-17)+-2]
 11088  0152A8  0EED               	movlw	-19
 11089  0152AA  006F FF8F FFE6     	movff	plusw1,postinc1
 11090  0152B0  006F FF8F FFE6     	movff	plusw1,postinc1
 11091  0152B6  0E20               	movlw	32
 11092  0152B8  6EE6               	movwf	postinc1,c
 11093  0152BA  0E00               	movlw	0
 11094  0152BC  6EE6               	movwf	postinc1,c
 11095  0152BE  ECA3  F0B5         	call	_fputc	;wreg free
 11096                           
 11097                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 11098                           ;stkvar	_l @ sp[(-17)+7]
 11099  0152C2  0EF6               	movlw	-10
 11100  0152C4  50E3               	movf	plusw1,w,c
 11101  0152C6  0F01               	addlw	1
 11102  0152C8  6E25               	movwf	btemp^0,c
 11103  0152CA  0EF6               	movlw	-10
 11104  0152CC  0060  F097  FFE3   	movff	btemp,plusw1
 11105  0152D2  6A25               	clrf	btemp^0,c
 11106  0152D4  0EF7               	movlw	-9
 11107  0152D6  50E3               	movf	plusw1,w,c
 11108  0152D8  2025               	addwfc	btemp^0,w,c
 11109  0152DA  6E25               	movwf	btemp^0,c
 11110  0152DC  0EF7               	movlw	-9
 11111  0152DE  0060  F097  FFE3   	movff	btemp,plusw1
 11112  0152E4                     l10450:
 11113                           
 11114                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 11115                           ;stkvar	_w @ sp[(-17)+13]
 11116                           ;stkvar	_l @ sp[(-17)+7]
 11117  0152E4  50E1               	movf	fsr1l,w,c
 11118  0152E6  0FF6               	addlw	-10
 11119  0152E8  6ED9               	movwf	fsr2l,c
 11120  0152EA  50E2               	movf	fsr1h,w,c
 11121  0152EC  6EDA               	movwf	fsr2h,c
 11122  0152EE  0EFF               	movlw	255
 11123  0152F0  22DA               	addwfc	fsr2h,f,c
 11124  0152F2  0EFC               	movlw	-4
 11125  0152F4  50E3               	movf	plusw1,w,c
 11126  0152F6  5CDE               	subwf	postinc2,w,c
 11127  0152F8  50DE               	movf	postinc2,w,c
 11128  0152FA  0A80               	xorlw	128
 11129  0152FC  6E25               	movwf	btemp^0,c
 11130  0152FE  0EFD               	movlw	-3
 11131  015300  50E3               	movf	plusw1,w,c
 11132  015302  0A80               	xorlw	128
 11133  015304  5825               	subwfb	btemp^0,w,c
 11134  015306  A0D8               	btfss	status,0,c
 11135  015308  D7CF               	goto	l10446
 11136  01530A                     u10030:
 11137                           
 11138                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 11139                           ;stkvar	_i @ sp[(-17)+15]
 11140  01530A  0EFE               	movlw	-2
 11141  01530C  6AE3               	clrf	plusw1,c
 11142  01530E  0EFF               	movlw	-1
 11143  015310  6AE3               	clrf	plusw1,c
 11144                           
 11145                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 11146  015312  D045               	goto	l10460
 11147  015314                     l10454:
 11148                           
 11149                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 11150                           ;stkvar	_fp @ sp[(-17)+-2]
 11151  015314  0EED               	movlw	-19
 11152  015316  006F FF8F FFE6     	movff	plusw1,postinc1
 11153  01531C  006F FF8F FFE6     	movff	plusw1,postinc1
 11154                           
 11155                           ;stkvar	_cp @ sp[(-19)+11]
 11156  015322  0EF8               	movlw	-8
 11157  015324  006F FF8F FFF6     	movff	plusw1,tblptrl
 11158  01532A  0EF9               	movlw	-7
 11159  01532C  006F FF8F FFF7     	movff	plusw1,tblptrh
 11160  015332  0E00               	movlw	low (__mediumconst shr (0+16))
 11161  015334  6EF8               	movwf	tblptru,c
 11162  015336  0E1F               	movlw	(high __ramtop+-1)
 11163  015338  64F7               	cpfsgt	tblptrh,c
 11164  01533A  D003               	bra	u10047
 11165  01533C  0008               	tblrd		*
 11166  01533E  50F5               	movf	tablat,w,c
 11167  015340  D007               	bra	u10040
 11168  015342                     u10047:
 11169  015342  006F FFDB FFE9     	movff	tblptrl,fsr0l
 11170  015348  006F FFDF FFEA     	movff	tblptrh,fsr0h
 11171  01534E  50EF               	movf	indf0,w,c
 11172  015350                     u10040:
 11173  015350  6EE6               	movwf	postinc1,c
 11174  015352  0E00               	movlw	0
 11175  015354  6EE6               	movwf	postinc1,c
 11176  015356  ECA3  F0B5         	call	_fputc	;wreg free
 11177                           
 11178                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 11179                           ;stkvar	_cp @ sp[(-17)+11]
 11180  01535A  0EFA               	movlw	-6
 11181  01535C  50E3               	movf	plusw1,w,c
 11182  01535E  0F01               	addlw	1
 11183  015360  6E25               	movwf	btemp^0,c
 11184  015362  0EFA               	movlw	-6
 11185  015364  0060  F097  FFE3   	movff	btemp,plusw1
 11186  01536A  6A25               	clrf	btemp^0,c
 11187  01536C  0EFB               	movlw	-5
 11188  01536E  50E3               	movf	plusw1,w,c
 11189  015370  2025               	addwfc	btemp^0,w,c
 11190  015372  6E25               	movwf	btemp^0,c
 11191  015374  0EFB               	movlw	-5
 11192  015376  0060  F097  FFE3   	movff	btemp,plusw1
 11193                           
 11194                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 11195                           ;stkvar	_i @ sp[(-17)+15]
 11196  01537C  0EFE               	movlw	-2
 11197  01537E  50E3               	movf	plusw1,w,c
 11198  015380  0F01               	addlw	1
 11199  015382  6E25               	movwf	btemp^0,c
 11200  015384  0EFE               	movlw	-2
 11201  015386  0060  F097  FFE3   	movff	btemp,plusw1
 11202  01538C  6A25               	clrf	btemp^0,c
 11203  01538E  0EFF               	movlw	-1
 11204  015390  50E3               	movf	plusw1,w,c
 11205  015392  2025               	addwfc	btemp^0,w,c
 11206  015394  6E25               	movwf	btemp^0,c
 11207  015396  0EFF               	movlw	-1
 11208  015398  0060  F097  FFE3   	movff	btemp,plusw1
 11209  01539E                     l10460:
 11210                           
 11211                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 11212                           ;stkvar	_p @ sp[(-17)+9]
 11213                           ;stkvar	_i @ sp[(-17)+15]
 11214  01539E  50E1               	movf	fsr1l,w,c
 11215  0153A0  0FFE               	addlw	-2
 11216  0153A2  6ED9               	movwf	fsr2l,c
 11217  0153A4  50E2               	movf	fsr1h,w,c
 11218  0153A6  6EDA               	movwf	fsr2h,c
 11219  0153A8  0EFF               	movlw	255
 11220  0153AA  22DA               	addwfc	fsr2h,f,c
 11221  0153AC  0EF8               	movlw	-8
 11222  0153AE  50E3               	movf	plusw1,w,c
 11223  0153B0  5CDE               	subwf	postinc2,w,c
 11224  0153B2  50DE               	movf	postinc2,w,c
 11225  0153B4  0A80               	xorlw	128
 11226  0153B6  6E25               	movwf	btemp^0,c
 11227  0153B8  0EF9               	movlw	-7
 11228  0153BA  50E3               	movf	plusw1,w,c
 11229  0153BC  0A80               	xorlw	128
 11230  0153BE  5825               	subwfb	btemp^0,w,c
 11231  0153C0  A0D8               	btfss	status,0,c
 11232  0153C2  D7A8               	goto	l10454
 11233                           
 11234                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 11235  0153C4  B00E               	btfsc	_flags^0,0,c
 11236  0153C6  D01F               	goto	l10468
 11237  0153C8  D031               	goto	u10070
 11238  0153CA                     l10464:
 11239                           
 11240                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 11241                           ;stkvar	_fp @ sp[(-17)+-2]
 11242  0153CA  0EED               	movlw	-19
 11243  0153CC  006F FF8F FFE6     	movff	plusw1,postinc1
 11244  0153D2  006F FF8F FFE6     	movff	plusw1,postinc1
 11245  0153D8  0E20               	movlw	32
 11246  0153DA  6EE6               	movwf	postinc1,c
 11247  0153DC  0E00               	movlw	0
 11248  0153DE  6EE6               	movwf	postinc1,c
 11249  0153E0  ECA3  F0B5         	call	_fputc	;wreg free
 11250                           
 11251                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 11252                           ;stkvar	_l @ sp[(-17)+7]
 11253  0153E4  0EF6               	movlw	-10
 11254  0153E6  50E3               	movf	plusw1,w,c
 11255  0153E8  0F01               	addlw	1
 11256  0153EA  6E25               	movwf	btemp^0,c
 11257  0153EC  0EF6               	movlw	-10
 11258  0153EE  0060  F097  FFE3   	movff	btemp,plusw1
 11259  0153F4  6A25               	clrf	btemp^0,c
 11260  0153F6  0EF7               	movlw	-9
 11261  0153F8  50E3               	movf	plusw1,w,c
 11262  0153FA  2025               	addwfc	btemp^0,w,c
 11263  0153FC  6E25               	movwf	btemp^0,c
 11264  0153FE  0EF7               	movlw	-9
 11265  015400  0060  F097  FFE3   	movff	btemp,plusw1
 11266  015406                     l10468:
 11267                           
 11268                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 11269                           ;stkvar	_w @ sp[(-17)+13]
 11270                           ;stkvar	_l @ sp[(-17)+7]
 11271  015406  50E1               	movf	fsr1l,w,c
 11272  015408  0FF6               	addlw	-10
 11273  01540A  6ED9               	movwf	fsr2l,c
 11274  01540C  50E2               	movf	fsr1h,w,c
 11275  01540E  6EDA               	movwf	fsr2h,c
 11276  015410  0EFF               	movlw	255
 11277  015412  22DA               	addwfc	fsr2h,f,c
 11278  015414  0EFC               	movlw	-4
 11279  015416  50E3               	movf	plusw1,w,c
 11280  015418  5CDE               	subwf	postinc2,w,c
 11281  01541A  50DE               	movf	postinc2,w,c
 11282  01541C  0A80               	xorlw	128
 11283  01541E  6E25               	movwf	btemp^0,c
 11284  015420  0EFD               	movlw	-3
 11285  015422  50E3               	movf	plusw1,w,c
 11286  015424  0A80               	xorlw	128
 11287  015426  5825               	subwfb	btemp^0,w,c
 11288  015428  A0D8               	btfss	status,0,c
 11289  01542A  D7CF               	goto	l10464
 11290  01542C                     u10070:
 11291                           
 11292                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 11293                           ;stkvar	_l @ sp[(-17)+7]
 11294  01542C  0EF6               	movlw	-10
 11295  01542E  006F FF8C  F025    	movff	plusw1,btemp
 11296  015434  0EF7               	movlw	-9
 11297  015436  006F FF8C  F026    	movff	plusw1,btemp+1
 11298                           
 11299                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 11300  01543C  0EEB               	movlw	235
 11301  01543E  26E1               	addwf	fsr1l,f,c
 11302  015440  0EFF               	movlw	255
 11303  015442  22E2               	addwfc	fsr1h,f,c
 11304  015444  0012               	return		;funcret
 11305  015446                     __end_of_stoa:
 11306                           	opt callstack 0
 11307                           
 11308 ;; *************** function _efgtoa *****************
 11309 ;; Defined at:
 11310 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11311 ;; Parameters:    Size  Location     Type
 11312 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11313 ;;		 -> f(6), NULL(0), 
 11314 ;;  f               4  [STACK] PTR struct _IO_FILE
 11315 ;;  c               1  [STACK] unsigned char 
 11316 ;; Auto vars:     Size  Location     Type
 11317 ;;  u               4  [STACK] unsigned char 
 11318 ;;  g               4  [STACK] unsigned char 
 11319 ;;  l               4  [STACK] unsigned char 
 11320 ;;  h               4  [STACK] unsigned char 
 11321 ;;  ou              4  [STACK] unsigned char 
 11322 ;;  n               2  [STACK] int 
 11323 ;;  e               2  [STACK] int 
 11324 ;;  i               2  [STACK] int 
 11325 ;;  w               2  [STACK] int 
 11326 ;;  p               2  [STACK] int 
 11327 ;;  sign            2  [STACK] int 
 11328 ;;  d               2  [STACK] int 
 11329 ;;  ne              2  [STACK] int 
 11330 ;;  m               2  [STACK] int 
 11331 ;;  pp              2  [STACK] int 
 11332 ;;  t               2  [STACK] int 
 11333 ;;  mode            1  [STACK] unsigned char 
 11334 ;;  nmode           1  [STACK] unsigned char 
 11335 ;; Return value:  Size  Location     Type
 11336 ;;                  2  [STACK] int 
 11337 ;; Registers used:
 11338 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 11339 ;; Tracked objects:
 11340 ;;		On entry : 0/0
 11341 ;;		On exit  : 0/0
 11342 ;;		Unchanged: 0/0
 11343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11348 ;;Total ram usage:        0 bytes
 11349 ;; Hardware stack levels used:    1
 11350 ;; Hardware stack levels required when called:   12
 11351 ;; This function calls:
 11352 ;;		___awdiv
 11353 ;;		___awmod
 11354 ;;		___fladd
 11355 ;;		___fldiv
 11356 ;;		___fleq
 11357 ;;		___flge
 11358 ;;		___flmul
 11359 ;;		___flneg
 11360 ;;		___flsub
 11361 ;;		___fltol
 11362 ;;		___fpclassifyf
 11363 ;;		_floorf
 11364 ;;		_isupper
 11365 ;;		_pad
 11366 ;;		_strcpy
 11367 ;;		_tolower
 11368 ;; This function is called by:
 11369 ;;		_vfpfcnvrt
 11370 ;; This function uses a reentrant model
 11371 ;;
 11372                           
 11373                           	psect	text48
 11374  010000                     __ptext48:
 11375                           	opt callstack 0
 11376  010000                     _efgtoa:
 11377                           	opt callstack 0
 11378                           
 11379                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11380  010000  0E38               	movlw	56
 11381  010002  26E1               	addwf	fsr1l,f,c
 11382  010004  0E00               	movlw	0
 11383  010006  22E2               	addwfc	fsr1h,f,c
 11384                           
 11385                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 11386                           ;stkvar	_sign @ sp[(-56)+42]
 11387                           
 11388                           ;incstack = 0
 11389  010008  0EF2               	movlw	-14
 11390  01000A  6AE3               	clrf	plusw1,c
 11391  01000C  0EF3               	movlw	-13
 11392  01000E  6AE3               	clrf	plusw1,c
 11393                           
 11394                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 11395                           ;stkvar	_f @ sp[(-56)+-6]
 11396  010010  0EC2               	movlw	-62
 11397  010012  006F FF8C  F02D    	movff	plusw1,btemp+8
 11398  010018  0EC3               	movlw	-61
 11399  01001A  006F FF8C  F02E    	movff	plusw1,btemp+9
 11400  010020  0EC4               	movlw	-60
 11401  010022  006F FF8C  F02F    	movff	plusw1,btemp+10
 11402  010028  0EC5               	movlw	-59
 11403  01002A  006F FF8C  F030    	movff	plusw1,btemp+11
 11404                           
 11405                           ;stkvar	_g @ sp[(-56)+16]
 11406  010030  0ED8               	movlw	-40
 11407  010032  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 11408  010038  0ED9               	movlw	-39
 11409  01003A  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 11410  010040  0EDA               	movlw	-38
 11411  010042  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 11412  010048  0EDB               	movlw	-37
 11413  01004A  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 11414                           
 11415                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 11416                           ;stkvar	_g @ sp[(-56)+16]
 11417  010050  0EDB               	movlw	-37
 11418  010052  AEE3               	btfss	plusw1,7,c
 11419  010054  D02B               	goto	l10128
 11420                           
 11421                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 11422  010056  0E01               	movlw	1
 11423  010058  6E2F               	movwf	(btemp+10)^0,c
 11424  01005A  0E00               	movlw	0
 11425  01005C  6E30               	movwf	(btemp+11)^0,c
 11426                           
 11427                           ;stkvar	_sign @ sp[(-56)+42]
 11428  01005E  0EF2               	movlw	-14
 11429  010060  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 11430  010066  0EF3               	movlw	-13
 11431  010068  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 11432                           
 11433                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 11434                           ;stkvar	_g @ sp[(-56)+16]
 11435  01006E  0ED8               	movlw	-40
 11436  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 11437  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 11438  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 11439  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 11440  010088  ECC1  F0C2         	call	___flneg	;wreg free
 11441                           
 11442                           ;stkvar	_g @ sp[(-56)+16]
 11443  01008C  0ED8               	movlw	-40
 11444  01008E  0060  F097  FFE3   	movff	btemp,plusw1
 11445  010094  0ED9               	movlw	-39
 11446  010096  0060  F09B  FFE3   	movff	btemp+1,plusw1
 11447  01009C  0EDA               	movlw	-38
 11448  01009E  0060  F09F  FFE3   	movff	btemp+2,plusw1
 11449  0100A4  0EDB               	movlw	-37
 11450  0100A6  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 11451  0100AC                     l10128:
 11452                           
 11453                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 11454                           ;stkvar	_n @ sp[(-56)+32]
 11455  0100AC  0EE8               	movlw	-24
 11456  0100AE  6AE3               	clrf	plusw1,c
 11457  0100B0  0EE9               	movlw	-23
 11458  0100B2  6AE3               	clrf	plusw1,c
 11459                           
 11460                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 11461                           ;stkvar	_w @ sp[(-56)+38]
 11462  0100B4  0EEE               	movlw	-18
 11463  0100B6  0060  F02B  FFE3   	movff	_width,plusw1
 11464  0100BC  0EEF               	movlw	-17
 11465  0100BE  0060  F02F  FFE3   	movff	_width+1,plusw1
 11466                           
 11467                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 11468                           ;stkvar	_sign @ sp[(-56)+42]
 11469  0100C4  0EF2               	movlw	-14
 11470  0100C6  006F FF8C  F025    	movff	plusw1,btemp
 11471  0100CC  0EF3               	movlw	-13
 11472  0100CE  50E3               	movf	plusw1,w,c
 11473  0100D0  1025               	iorwf	btemp^0,w,c
 11474  0100D2  A4D8               	btfss	status,2,c
 11475  0100D4  D002               	goto	u9480
 11476  0100D6  A40E               	btfss	_flags^0,2,c
 11477  0100D8  D036               	goto	l10148
 11478  0100DA                     u9480:
 11479                           
 11480                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 11481                           ;stkvar	_sign @ sp[(-56)+42]
 11482  0100DA  0EF2               	movlw	-14
 11483  0100DC  006F FF8C  F025    	movff	plusw1,btemp
 11484  0100E2  0EF3               	movlw	-13
 11485  0100E4  50E3               	movf	plusw1,w,c
 11486  0100E6  1025               	iorwf	btemp^0,w,c
 11487  0100E8  A4D8               	btfss	status,2,c
 11488  0100EA  D002               	goto	l10140
 11489  0100EC  0E2B               	movlw	43
 11490  0100EE  D001               	goto	L9
 11491  0100F0                     l10140:
 11492  0100F0  0E2D               	movlw	45
 11493  0100F2                     L9:
 11494  0100F2  6E2F               	movwf	(btemp+10)^0,c
 11495  0100F4  0E00               	movlw	0
 11496  0100F6  6E30               	movwf	(btemp+11)^0,c
 11497                           
 11498                           ;stkvar	_efgtoa$4978 @ sp[(-56)+10]
 11499  0100F8  0ED2               	movlw	-46
 11500  0100FA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 11501  010100  0ED3               	movlw	-45
 11502  010102  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 11503                           
 11504                           ;stkvar	_efgtoa$4978 @ sp[(-56)+10]
 11505  010108  0ED2               	movlw	-46
 11506  01010A  006F FF8C  F394    	movff	plusw1,_dbuf
 11507                           
 11508                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 11509                           ;stkvar	_n @ sp[(-56)+32]
 11510  010110  0EE8               	movlw	-24
 11511  010112  50E3               	movf	plusw1,w,c
 11512  010114  0F01               	addlw	1
 11513  010116  6E25               	movwf	btemp^0,c
 11514  010118  0EE8               	movlw	-24
 11515  01011A  0060  F097  FFE3   	movff	btemp,plusw1
 11516  010120  6A25               	clrf	btemp^0,c
 11517  010122  0EE9               	movlw	-23
 11518  010124  50E3               	movf	plusw1,w,c
 11519  010126  2025               	addwfc	btemp^0,w,c
 11520  010128  6E25               	movwf	btemp^0,c
 11521  01012A  0EE9               	movlw	-23
 11522  01012C  0060  F097  FFE3   	movff	btemp,plusw1
 11523                           
 11524                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 11525                           ;stkvar	_w @ sp[(-56)+38]
 11526  010132  50E1               	movf	fsr1l,w,c
 11527  010134  0FEE               	addlw	-18
 11528  010136  6ED9               	movwf	fsr2l,c
 11529  010138  50E2               	movf	fsr1h,w,c
 11530  01013A  6EDA               	movwf	fsr2h,c
 11531  01013C  0EFF               	movlw	255
 11532  01013E  22DA               	addwfc	fsr2h,f,c
 11533  010140  06DE               	decf	postinc2,f,c
 11534  010142  0E00               	movlw	0
 11535  010144  5ADD               	subwfb	postdec2,f,c
 11536  010146                     l10148:
 11537                           
 11538                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 11539                           ;stkvar	_g @ sp[(-56)+16]
 11540  010146  0ED8               	movlw	-40
 11541  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 11542  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 11543  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 11544  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 11545  010160  EC8C  F0B1         	call	___fpclassifyf	;wreg free
 11546  010164  0425               	decf	btemp^0,w,c
 11547  010166  1026               	iorwf	(btemp+1)^0,w,c
 11548  010168  A4D8               	btfss	status,2,c
 11549  01016A  D076               	goto	l10166
 11550  01016C  0EBF               	movlw	191
 11551  01016E  6E2F               	movwf	(btemp+10)^0,c
 11552  010170  0EFF               	movlw	255
 11553  010172  6E30               	movwf	(btemp+11)^0,c
 11554                           
 11555                           ;stkvar	_c @ sp[(-56)+-7]
 11556  010174  0EC1               	movlw	-63
 11557  010176  50E3               	movf	plusw1,w,c
 11558  010178  6E2D               	movwf	(btemp+8)^0,c
 11559  01017A  6A2E               	clrf	(btemp+9)^0,c
 11560  01017C  502F               	movf	(btemp+10)^0,w,c
 11561  01017E  262D               	addwf	(btemp+8)^0,f,c
 11562  010180  5030               	movf	(btemp+11)^0,w,c
 11563  010182  222E               	addwfc	(btemp+9)^0,f,c
 11564  010184  502E               	movf	(btemp+9)^0,w,c
 11565  010186  E106               	bnz	u9510
 11566  010188  0E1A               	movlw	26
 11567  01018A  5C2D               	subwf	(btemp+8)^0,w,c
 11568  01018C  B0D8               	btfsc	status,0,c
 11569  01018E  D002               	goto	u9510
 11570  010190  0E01               	movlw	1
 11571  010192  D001               	goto	u9520
 11572  010194                     u9510:
 11573  010194  0E00               	movlw	0
 11574  010196                     u9520:
 11575  010196  6E2F               	movwf	(btemp+10)^0,c
 11576  010198  6A30               	clrf	(btemp+11)^0,c
 11577                           
 11578                           ;stkvar	_efgtoa$4979 @ sp[(-56)+8]
 11579  01019A  0ED0               	movlw	-48
 11580  01019C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 11581  0101A2  0ED1               	movlw	-47
 11582  0101A4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 11583                           
 11584                           ;stkvar	_efgtoa$4979 @ sp[(-56)+8]
 11585  0101AA  0ED0               	movlw	-48
 11586  0101AC  006F FF8C  F025    	movff	plusw1,btemp
 11587  0101B2  0ED1               	movlw	-47
 11588  0101B4  50E3               	movf	plusw1,w,c
 11589  0101B6  1025               	iorwf	btemp^0,w,c
 11590  0101B8  B4D8               	btfsc	status,2,c
 11591  0101BA  D017               	goto	l10158
 11592                           
 11593                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 11594  0101BC  0EE5               	movlw	low STR_46
 11595  0101BE  6EE6               	movwf	postinc1,c
 11596  0101C0  0EFF               	movlw	high STR_46
 11597  0101C2  6EE6               	movwf	postinc1,c
 11598                           
 11599                           ;stkvar	_n @ sp[(-58)+32]
 11600  0101C4  0E94               	movlw	low _dbuf
 11601  0101C6  6E2F               	movwf	(btemp+10)^0,c
 11602  0101C8  0E03               	movlw	high _dbuf
 11603  0101CA  6E30               	movwf	(btemp+11)^0,c
 11604  0101CC  0EE6               	movlw	-26
 11605  0101CE  50E3               	movf	plusw1,w,c
 11606  0101D0  262F               	addwf	(btemp+10)^0,f,c
 11607  0101D2  0EE7               	movlw	-25
 11608  0101D4  50E3               	movf	plusw1,w,c
 11609  0101D6  2230               	addwfc	(btemp+11)^0,f,c
 11610  0101D8  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 11611  0101DE  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 11612  0101E4  ECCC  F0B9         	call	_strcpy	;wreg free
 11613                           
 11614                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 11615  0101E8  D016               	goto	l10160
 11616  0101EA                     l10158:
 11617                           
 11618                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 11619  0101EA  0EED               	movlw	low STR_47
 11620  0101EC  6EE6               	movwf	postinc1,c
 11621  0101EE  0EFF               	movlw	high STR_47
 11622  0101F0  6EE6               	movwf	postinc1,c
 11623                           
 11624                           ;stkvar	_n @ sp[(-58)+32]
 11625  0101F2  0E94               	movlw	low _dbuf
 11626  0101F4  6E2F               	movwf	(btemp+10)^0,c
 11627  0101F6  0E03               	movlw	high _dbuf
 11628  0101F8  6E30               	movwf	(btemp+11)^0,c
 11629  0101FA  0EE6               	movlw	-26
 11630  0101FC  50E3               	movf	plusw1,w,c
 11631  0101FE  262F               	addwf	(btemp+10)^0,f,c
 11632  010200  0EE7               	movlw	-25
 11633  010202  50E3               	movf	plusw1,w,c
 11634  010204  2230               	addwfc	(btemp+11)^0,f,c
 11635  010206  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 11636  01020C  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 11637  010212  ECCC  F0B9         	call	_strcpy	;wreg free
 11638  010216                     l10160:
 11639                           
 11640                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 11641                           ;stkvar	_w @ sp[(-56)+38]
 11642  010216  50E1               	movf	fsr1l,w,c
 11643  010218  0FEE               	addlw	-18
 11644  01021A  6ED9               	movwf	fsr2l,c
 11645  01021C  50E2               	movf	fsr1h,w,c
 11646  01021E  6EDA               	movwf	fsr2h,c
 11647  010220  0EFF               	movlw	255
 11648  010222  22DA               	addwfc	fsr2h,f,c
 11649  010224  0EFD               	movlw	253
 11650  010226  26DE               	addwf	postinc2,f,c
 11651  010228  0EFF               	movlw	255
 11652  01022A  22DD               	addwfc	postdec2,f,c
 11653  01022C                     l10162:
 11654                           
 11655                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 11656                           ;stkvar	_w @ sp[(-56)+38]
 11657  01022C  0EEE               	movlw	-18
 11658  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 11659  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 11660  01023A  0E94               	movlw	low _dbuf
 11661  01023C  6EE6               	movwf	postinc1,c
 11662  01023E  0E03               	movlw	high _dbuf
 11663  010240  6EE6               	movwf	postinc1,c
 11664                           
 11665                           ;stkvar	_fp @ sp[(-60)+-2]
 11666  010242  0EC2               	movlw	-62
 11667  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 11668  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 11669  010250  ECC1  F0B6         	call	_pad	;wreg free
 11670  010254  EF1D  F089         	goto	l2035
 11671  010258                     l10166:
 11672                           
 11673                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 11674                           ;stkvar	_g @ sp[(-56)+16]
 11675  010258  0ED8               	movlw	-40
 11676  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 11677  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 11678  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 11679  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 11680  010272  EC8C  F0B1         	call	___fpclassifyf	;wreg free
 11681  010276  5025               	movf	btemp^0,w,c
 11682  010278  1026               	iorwf	(btemp+1)^0,w,c
 11683  01027A  A4D8               	btfss	status,2,c
 11684  01027C  D056               	goto	l10184
 11685  01027E  0EBF               	movlw	191
 11686  010280  6E2F               	movwf	(btemp+10)^0,c
 11687  010282  0EFF               	movlw	255
 11688  010284  6E30               	movwf	(btemp+11)^0,c
 11689                           
 11690                           ;stkvar	_c @ sp[(-56)+-7]
 11691  010286  0EC1               	movlw	-63
 11692  010288  50E3               	movf	plusw1,w,c
 11693  01028A  6E2D               	movwf	(btemp+8)^0,c
 11694  01028C  6A2E               	clrf	(btemp+9)^0,c
 11695  01028E  502F               	movf	(btemp+10)^0,w,c
 11696  010290  262D               	addwf	(btemp+8)^0,f,c
 11697  010292  5030               	movf	(btemp+11)^0,w,c
 11698  010294  222E               	addwfc	(btemp+9)^0,f,c
 11699  010296  502E               	movf	(btemp+9)^0,w,c
 11700  010298  E106               	bnz	u9550
 11701  01029A  0E1A               	movlw	26
 11702  01029C  5C2D               	subwf	(btemp+8)^0,w,c
 11703  01029E  B0D8               	btfsc	status,0,c
 11704  0102A0  D002               	goto	u9550
 11705  0102A2  0E01               	movlw	1
 11706  0102A4  D001               	goto	u9560
 11707  0102A6                     u9550:
 11708  0102A6  0E00               	movlw	0
 11709  0102A8                     u9560:
 11710  0102A8  6E2F               	movwf	(btemp+10)^0,c
 11711  0102AA  6A30               	clrf	(btemp+11)^0,c
 11712                           
 11713                           ;stkvar	_efgtoa$4983 @ sp[(-56)+6]
 11714  0102AC  0ECE               	movlw	-50
 11715  0102AE  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 11716  0102B4  0ECF               	movlw	-49
 11717  0102B6  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 11718                           
 11719                           ;stkvar	_efgtoa$4983 @ sp[(-56)+6]
 11720  0102BC  0ECE               	movlw	-50
 11721  0102BE  006F FF8C  F025    	movff	plusw1,btemp
 11722  0102C4  0ECF               	movlw	-49
 11723  0102C6  50E3               	movf	plusw1,w,c
 11724  0102C8  1025               	iorwf	btemp^0,w,c
 11725  0102CA  B4D8               	btfsc	status,2,c
 11726  0102CC  D017               	goto	l10176
 11727                           
 11728                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 11729  0102CE  0EE9               	movlw	low STR_50
 11730  0102D0  6EE6               	movwf	postinc1,c
 11731  0102D2  0EFF               	movlw	high STR_50
 11732  0102D4  6EE6               	movwf	postinc1,c
 11733                           
 11734                           ;stkvar	_n @ sp[(-58)+32]
 11735  0102D6  0E94               	movlw	low _dbuf
 11736  0102D8  6E2F               	movwf	(btemp+10)^0,c
 11737  0102DA  0E03               	movlw	high _dbuf
 11738  0102DC  6E30               	movwf	(btemp+11)^0,c
 11739  0102DE  0EE6               	movlw	-26
 11740  0102E0  50E3               	movf	plusw1,w,c
 11741  0102E2  262F               	addwf	(btemp+10)^0,f,c
 11742  0102E4  0EE7               	movlw	-25
 11743  0102E6  50E3               	movf	plusw1,w,c
 11744  0102E8  2230               	addwfc	(btemp+11)^0,f,c
 11745  0102EA  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 11746  0102F0  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 11747  0102F6  ECCC  F0B9         	call	_strcpy	;wreg free
 11748                           
 11749                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 11750  0102FA  D78D               	goto	l10160
 11751  0102FC                     l10176:
 11752                           
 11753                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 11754  0102FC  0EF1               	movlw	low STR_51
 11755  0102FE  6EE6               	movwf	postinc1,c
 11756  010300  0EFF               	movlw	high STR_51
 11757  010302  6EE6               	movwf	postinc1,c
 11758                           
 11759                           ;stkvar	_n @ sp[(-58)+32]
 11760  010304  0E94               	movlw	low _dbuf
 11761  010306  6E2F               	movwf	(btemp+10)^0,c
 11762  010308  0E03               	movlw	high _dbuf
 11763  01030A  6E30               	movwf	(btemp+11)^0,c
 11764  01030C  0EE6               	movlw	-26
 11765  01030E  50E3               	movf	plusw1,w,c
 11766  010310  262F               	addwf	(btemp+10)^0,f,c
 11767  010312  0EE7               	movlw	-25
 11768  010314  50E3               	movf	plusw1,w,c
 11769  010316  2230               	addwfc	(btemp+11)^0,f,c
 11770  010318  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 11771  01031E  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 11772  010324  ECCC  F0B9         	call	_strcpy	;wreg free
 11773  010328  D776               	goto	l10160
 11774  01032A                     l10184:
 11775                           
 11776                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 11777  01032A  0E00               	movlw	0
 11778  01032C  6E2D               	movwf	(btemp+8)^0,c
 11779  01032E  0E00               	movlw	0
 11780  010330  6E2E               	movwf	(btemp+9)^0,c
 11781  010332  0E80               	movlw	128
 11782  010334  6E2F               	movwf	(btemp+10)^0,c
 11783  010336  0E3F               	movlw	63
 11784  010338  6E30               	movwf	(btemp+11)^0,c
 11785                           
 11786                           ;stkvar	_u @ sp[(-56)+12]
 11787  01033A  0ED4               	movlw	-44
 11788  01033C  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 11789  010342  0ED5               	movlw	-43
 11790  010344  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 11791  01034A  0ED6               	movlw	-42
 11792  01034C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 11793  010352  0ED7               	movlw	-41
 11794  010354  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 11795                           
 11796                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 11797                           ;stkvar	_e @ sp[(-56)+34]
 11798  01035A  0EEA               	movlw	-22
 11799  01035C  6AE3               	clrf	plusw1,c
 11800  01035E  0EEB               	movlw	-21
 11801  010360  6AE3               	clrf	plusw1,c
 11802                           
 11803                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 11804  010362  0E00               	movlw	0
 11805  010364  6EE6               	movwf	postinc1,c
 11806  010366  0E00               	movlw	0
 11807  010368  6EE6               	movwf	postinc1,c
 11808  01036A  0E00               	movlw	0
 11809  01036C  6EE6               	movwf	postinc1,c
 11810  01036E  0E00               	movlw	0
 11811  010370  6EE6               	movwf	postinc1,c
 11812                           
 11813                           ;stkvar	_g @ sp[(-60)+16]
 11814  010372  0ED4               	movlw	-44
 11815  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 11816  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 11817  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 11818  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 11819  01038C  EC9D  F0BA         	call	___fleq	;wreg free
 11820  010390  A025               	btfss	btemp& (0+255),0,c
 11821  010392  D039               	goto	l10196
 11822  010394  D0BC               	goto	u9600
 11823  010396                     l10192:
 11824                           
 11825                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 11826  010396  0E00               	movlw	0
 11827  010398  6EE6               	movwf	postinc1,c
 11828  01039A  0E00               	movlw	0
 11829  01039C  6EE6               	movwf	postinc1,c
 11830  01039E  0E20               	movlw	32
 11831  0103A0  6EE6               	movwf	postinc1,c
 11832  0103A2  0E41               	movlw	65
 11833  0103A4  6EE6               	movwf	postinc1,c
 11834                           
 11835                           ;stkvar	_u @ sp[(-60)+12]
 11836  0103A6  0ED0               	movlw	-48
 11837  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11838  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 11839  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 11840  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 11841  0103C0  EC08  F093         	call	___flmul	;wreg free
 11842                           
 11843                           ;stkvar	_u @ sp[(-56)+12]
 11844  0103C4  0ED4               	movlw	-44
 11845  0103C6  0060  F097  FFE3   	movff	btemp,plusw1
 11846  0103CC  0ED5               	movlw	-43
 11847  0103CE  0060  F09B  FFE3   	movff	btemp+1,plusw1
 11848  0103D4  0ED6               	movlw	-42
 11849  0103D6  0060  F09F  FFE3   	movff	btemp+2,plusw1
 11850  0103DC  0ED7               	movlw	-41
 11851  0103DE  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 11852                           
 11853                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 11854                           ;stkvar	_e @ sp[(-56)+34]
 11855  0103E4  0EEA               	movlw	-22
 11856  0103E6  50E3               	movf	plusw1,w,c
 11857  0103E8  0F01               	addlw	1
 11858  0103EA  6E25               	movwf	btemp^0,c
 11859  0103EC  0EEA               	movlw	-22
 11860  0103EE  0060  F097  FFE3   	movff	btemp,plusw1
 11861  0103F4  6A25               	clrf	btemp^0,c
 11862  0103F6  0EEB               	movlw	-21
 11863  0103F8  50E3               	movf	plusw1,w,c
 11864  0103FA  2025               	addwfc	btemp^0,w,c
 11865  0103FC  6E25               	movwf	btemp^0,c
 11866  0103FE  0EEB               	movlw	-21
 11867  010400  0060  F097  FFE3   	movff	btemp,plusw1
 11868  010406                     l10196:
 11869                           
 11870                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 11871  010406  0E00               	movlw	0
 11872  010408  6EE6               	movwf	postinc1,c
 11873  01040A  0E00               	movlw	0
 11874  01040C  6EE6               	movwf	postinc1,c
 11875  01040E  0E20               	movlw	32
 11876  010410  6EE6               	movwf	postinc1,c
 11877  010412  0E41               	movlw	65
 11878  010414  6EE6               	movwf	postinc1,c
 11879                           
 11880                           ;stkvar	_u @ sp[(-60)+12]
 11881  010416  0ED0               	movlw	-48
 11882  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 11883  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 11884  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 11885  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 11886  010430  EC08  F093         	call	___flmul	;wreg free
 11887  010434  0060  F097  FFE6   	movff	btemp,postinc1
 11888  01043A  0060  F09B  FFE6   	movff	btemp+1,postinc1
 11889  010440  0060  F09F  FFE6   	movff	btemp+2,postinc1
 11890  010446  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 11891                           
 11892                           ;stkvar	_g @ sp[(-60)+16]
 11893  01044C  0ED4               	movlw	-44
 11894  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 11895  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 11896  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 11897  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 11898  010466  EC10  F0B3         	call	___flge	;wreg free
 11899  01046A  A025               	btfss	btemp& (0+255),0,c
 11900  01046C  D032               	goto	l10202
 11901  01046E  D793               	goto	l10192
 11902  010470                     l10198:
 11903                           
 11904                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 11905  010470  0E00               	movlw	0
 11906  010472  6EE6               	movwf	postinc1,c
 11907  010474  0E00               	movlw	0
 11908  010476  6EE6               	movwf	postinc1,c
 11909  010478  0E20               	movlw	32
 11910  01047A  6EE6               	movwf	postinc1,c
 11911  01047C  0E41               	movlw	65
 11912  01047E  6EE6               	movwf	postinc1,c
 11913                           
 11914                           ;stkvar	_u @ sp[(-60)+12]
 11915  010480  0ED0               	movlw	-48
 11916  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 11917  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 11918  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 11919  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 11920  01049A  ECFB  F09A         	call	___fldiv	;wreg free
 11921                           
 11922                           ;stkvar	_u @ sp[(-56)+12]
 11923  01049E  0ED4               	movlw	-44
 11924  0104A0  0060  F097  FFE3   	movff	btemp,plusw1
 11925  0104A6  0ED5               	movlw	-43
 11926  0104A8  0060  F09B  FFE3   	movff	btemp+1,plusw1
 11927  0104AE  0ED6               	movlw	-42
 11928  0104B0  0060  F09F  FFE3   	movff	btemp+2,plusw1
 11929  0104B6  0ED7               	movlw	-41
 11930  0104B8  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 11931                           
 11932                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 11933                           ;stkvar	_e @ sp[(-56)+34]
 11934  0104BE  50E1               	movf	fsr1l,w,c
 11935  0104C0  0FEA               	addlw	-22
 11936  0104C2  6ED9               	movwf	fsr2l,c
 11937  0104C4  50E2               	movf	fsr1h,w,c
 11938  0104C6  6EDA               	movwf	fsr2h,c
 11939  0104C8  0EFF               	movlw	255
 11940  0104CA  22DA               	addwfc	fsr2h,f,c
 11941  0104CC  06DE               	decf	postinc2,f,c
 11942  0104CE  0E00               	movlw	0
 11943  0104D0  5ADD               	subwfb	postdec2,f,c
 11944  0104D2                     l10202:
 11945                           
 11946                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 11947                           ;stkvar	_u @ sp[(-56)+12]
 11948  0104D2  0ED4               	movlw	-44
 11949  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 11950  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 11951  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 11952  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 11953                           
 11954                           ;stkvar	_g @ sp[(-60)+16]
 11955  0104EC  0ED4               	movlw	-44
 11956  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 11957  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 11958  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 11959  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 11960  010506  EC10  F0B3         	call	___flge	;wreg free
 11961  01050A  A025               	btfss	btemp& (0+255),0,c
 11962  01050C  D7B1               	goto	l10198
 11963  01050E                     u9600:
 11964                           
 11965                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 11966                           ;stkvar	_c @ sp[(-56)+-7]
 11967  01050E  0EC1               	movlw	-63
 11968  010510  50E3               	movf	plusw1,w,c
 11969  010512  6EE6               	movwf	postinc1,c
 11970  010514  0E00               	movlw	0
 11971  010516  6EE6               	movwf	postinc1,c
 11972  010518  EC53  F0BF         	call	_tolower	;wreg free
 11973                           
 11974                           ;stkvar	_mode @ sp[(-56)+54]
 11975  01051C  0EFE               	movlw	-2
 11976  01051E  0060  F097  FFE3   	movff	btemp,plusw1
 11977                           
 11978                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 11979                           ;stkvar	_mode @ sp[(-56)+54]
 11980                           ;stkvar	_nmode @ sp[(-56)+55]
 11981  010524  0EFE               	movlw	-2
 11982  010526  006F FF8C  F025    	movff	plusw1,btemp
 11983  01052C  0EFF               	movlw	-1
 11984  01052E  0060  F097  FFE3   	movff	btemp,plusw1
 11985                           
 11986                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 11987                           ;stkvar	_mode @ sp[(-56)+54]
 11988  010534  0EFE               	movlw	-2
 11989  010536  006F FF8C  F025    	movff	plusw1,btemp
 11990  01053C  0E67               	movlw	103
 11991  01053E  1825               	xorwf	btemp^0,w,c
 11992  010540  A4D8               	btfss	status,2,c
 11993  010542  D025               	goto	l10220
 11994                           
 11995                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 11996  010544  500C               	movf	_prec^0,w,c
 11997  010546  100D               	iorwf	(_prec+1)^0,w,c
 11998  010548  A4D8               	btfss	status,2,c
 11999  01054A  D004               	goto	l10214
 12000                           
 12001                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 12002  01054C  0E00               	movlw	0
 12003  01054E  6E0D               	movwf	(_prec+1)^0,c
 12004  010550  0E01               	movlw	1
 12005  010552  6E0C               	movwf	_prec^0,c
 12006  010554                     l10214:
 12007                           
 12008                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 12009  010554  BE0D               	btfsc	(_prec+1)^0,7,c
 12010  010556  D005               	goto	u9630
 12011  010558  500D               	movf	(_prec+1)^0,w,c
 12012  01055A  E110               	bnz	l10218
 12013  01055C  040C               	decf	_prec^0,w,c
 12014  01055E  B0D8               	btfsc	status,0,c
 12015  010560  D00D               	goto	l10218
 12016  010562                     u9630:
 12017  010562  0E06               	movlw	6
 12018  010564  6E2F               	movwf	(btemp+10)^0,c
 12019  010566  0E00               	movlw	0
 12020  010568  6E30               	movwf	(btemp+11)^0,c
 12021                           
 12022                           ;stkvar	_p @ sp[(-56)+40]
 12023  01056A  0EF0               	movlw	-16
 12024  01056C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12025  010572  0EF1               	movlw	-15
 12026  010574  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12027  01057A  D00C               	goto	l10226
 12028  01057C                     l10218:
 12029                           
 12030                           ;stkvar	_p @ sp[(-56)+40]
 12031  01057C  0EF0               	movlw	-16
 12032  01057E  0060  F033  FFE3   	movff	_prec,plusw1
 12033  010584  0EF1               	movlw	-15
 12034  010586  0060  F037  FFE3   	movff	_prec+1,plusw1
 12035  01058C  D003               	goto	l10226
 12036  01058E                     l10220:
 12037                           
 12038                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 12039  01058E  AE0D               	btfss	(_prec+1)^0,7,c
 12040  010590  D7F5               	goto	l10218
 12041  010592  D7E7               	goto	u9630
 12042  010594                     l10226:
 12043                           
 12044                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 12045                           ;stkvar	_mode @ sp[(-56)+54]
 12046  010594  0EFE               	movlw	-2
 12047  010596  006F FF8C  F025    	movff	plusw1,btemp
 12048  01059C  0E67               	movlw	103
 12049  01059E  1825               	xorwf	btemp^0,w,c
 12050  0105A0  A4D8               	btfss	status,2,c
 12051  0105A2  D02F               	goto	l10236
 12052                           
 12053                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 12054                           ;stkvar	_e @ sp[(-56)+34]
 12055  0105A4  0EEB               	movlw	-21
 12056  0105A6  AEE3               	btfss	plusw1,7,c
 12057  0105A8  D00E               	goto	u9660
 12058  0105AA  0EEA               	movlw	-22
 12059  0105AC  006F FF8C  F025    	movff	plusw1,btemp
 12060  0105B2  0EFC               	movlw	252
 12061  0105B4  5E25               	subwf	btemp^0,f,c
 12062  0105B6  0EEB               	movlw	-21
 12063  0105B8  006F FF8C  F025    	movff	plusw1,btemp
 12064  0105BE  0EFF               	movlw	255
 12065  0105C0  5A25               	subwfb	btemp^0,f,c
 12066  0105C2  A0D8               	btfss	status,0,c
 12067  0105C4  D018               	goto	l10234
 12068  0105C6                     u9660:
 12069                           
 12070                           ;stkvar	_e @ sp[(-56)+34]
 12071                           ;stkvar	_p @ sp[(-56)+40]
 12072  0105C6  0EF0               	movlw	-16
 12073  0105C8  50E3               	movf	plusw1,w,c
 12074  0105CA  0FFF               	addlw	255
 12075  0105CC  6E2F               	movwf	(btemp+10)^0,c
 12076  0105CE  0EF1               	movlw	-15
 12077  0105D0  006F FF8C  F030    	movff	plusw1,btemp+11
 12078  0105D6  0EFF               	movlw	255
 12079  0105D8  2230               	addwfc	(btemp+11)^0,f,c
 12080  0105DA  0EEA               	movlw	-22
 12081  0105DC  50E3               	movf	plusw1,w,c
 12082  0105DE  5C2F               	subwf	(btemp+10)^0,w,c
 12083  0105E0  5030               	movf	(btemp+11)^0,w,c
 12084  0105E2  0A80               	xorlw	128
 12085  0105E4  6E25               	movwf	btemp^0,c
 12086  0105E6  0EEB               	movlw	-21
 12087  0105E8  50E3               	movf	plusw1,w,c
 12088  0105EA  0A80               	xorlw	128
 12089  0105EC  5825               	subwfb	btemp^0,w,c
 12090  0105EE  A0D8               	btfss	status,0,c
 12091  0105F0  D002               	goto	l10234
 12092                           
 12093                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 12094  0105F2  0E66               	movlw	102
 12095  0105F4  D001               	goto	L10
 12096  0105F6                     l10234:
 12097                           
 12098                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 12099  0105F6  0E65               	movlw	101
 12100  0105F8                     L10:
 12101  0105F8  6E30               	movwf	(btemp+11)^0,c
 12102                           
 12103                           ;stkvar	_nmode @ sp[(-56)+55]
 12104  0105FA  0EFF               	movlw	-1
 12105  0105FC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12106  010602                     l10236:
 12107                           
 12108                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 12109                           ;stkvar	_p @ sp[(-56)+40]
 12110                           ;stkvar	_m @ sp[(-56)+48]
 12111  010602  0EF0               	movlw	-16
 12112  010604  006F FF8C  F025    	movff	plusw1,btemp
 12113  01060A  0EF8               	movlw	-8
 12114  01060C  0060  F097  FFE3   	movff	btemp,plusw1
 12115  010612  0EF1               	movlw	-15
 12116  010614  006F FF8C  F025    	movff	plusw1,btemp
 12117  01061A  0EF9               	movlw	-7
 12118  01061C  0060  F097  FFE3   	movff	btemp,plusw1
 12119                           
 12120                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 12121                           ;stkvar	_mode @ sp[(-56)+54]
 12122  010622  0EFE               	movlw	-2
 12123  010624  006F FF8C  F025    	movff	plusw1,btemp
 12124  01062A  0E67               	movlw	103
 12125  01062C  1825               	xorwf	btemp^0,w,c
 12126  01062E  A4D8               	btfss	status,2,c
 12127  010630  D00B               	goto	u9700
 12128                           
 12129                           ;stkvar	_nmode @ sp[(-56)+55]
 12130  010632  0EFF               	movlw	-1
 12131  010634  006F FF8C  F025    	movff	plusw1,btemp
 12132  01063A  0E66               	movlw	102
 12133  01063C  1825               	xorwf	btemp^0,w,c
 12134  01063E  A4D8               	btfss	status,2,c
 12135  010640  D014               	goto	l2064
 12136                           
 12137                           ;stkvar	_e @ sp[(-56)+34]
 12138  010642  0EEB               	movlw	-21
 12139  010644  AEE3               	btfss	plusw1,7,c
 12140  010646  D011               	goto	l2064
 12141  010648                     u9700:
 12142                           
 12143                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 12144                           ;stkvar	_m @ sp[(-56)+48]
 12145  010648  0EF8               	movlw	-8
 12146  01064A  50E3               	movf	plusw1,w,c
 12147  01064C  0F01               	addlw	1
 12148  01064E  6E25               	movwf	btemp^0,c
 12149  010650  0EF8               	movlw	-8
 12150  010652  0060  F097  FFE3   	movff	btemp,plusw1
 12151  010658  6A25               	clrf	btemp^0,c
 12152  01065A  0EF9               	movlw	-7
 12153  01065C  50E3               	movf	plusw1,w,c
 12154  01065E  2025               	addwfc	btemp^0,w,c
 12155  010660  6E25               	movwf	btemp^0,c
 12156  010662  0EF9               	movlw	-7
 12157  010664  0060  F097  FFE3   	movff	btemp,plusw1
 12158  01066A                     l2064:
 12159                           
 12160                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 12161                           ;stkvar	_nmode @ sp[(-56)+55]
 12162  01066A  0EFF               	movlw	-1
 12163  01066C  006F FF8C  F025    	movff	plusw1,btemp
 12164  010672  0E66               	movlw	102
 12165  010674  1825               	xorwf	btemp^0,w,c
 12166  010676  A4D8               	btfss	status,2,c
 12167  010678  D03B               	goto	l10256
 12168                           
 12169                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 12170                           ;stkvar	_e @ sp[(-56)+34]
 12171  01067A  0EEB               	movlw	-21
 12172  01067C  AEE3               	btfss	plusw1,7,c
 12173  01067E  D01C               	goto	l10252
 12174                           
 12175                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 12176  010680  0E00               	movlw	0
 12177  010682  6E2D               	movwf	(btemp+8)^0,c
 12178  010684  0E00               	movlw	0
 12179  010686  6E2E               	movwf	(btemp+9)^0,c
 12180  010688  0E80               	movlw	128
 12181  01068A  6E2F               	movwf	(btemp+10)^0,c
 12182  01068C  0E3F               	movlw	63
 12183  01068E  6E30               	movwf	(btemp+11)^0,c
 12184                           
 12185                           ;stkvar	_u @ sp[(-56)+12]
 12186  010690  0ED4               	movlw	-44
 12187  010692  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 12188  010698  0ED5               	movlw	-43
 12189  01069A  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 12190  0106A0  0ED6               	movlw	-42
 12191  0106A2  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12192  0106A8  0ED7               	movlw	-41
 12193  0106AA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12194                           
 12195                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 12196                           ;stkvar	_e @ sp[(-56)+34]
 12197  0106B0  0EEA               	movlw	-22
 12198  0106B2  6AE3               	clrf	plusw1,c
 12199  0106B4  0EEB               	movlw	-21
 12200  0106B6  6AE3               	clrf	plusw1,c
 12201  0106B8                     l10252:
 12202                           
 12203                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 12204                           ;stkvar	_mode @ sp[(-56)+54]
 12205  0106B8  0EFE               	movlw	-2
 12206  0106BA  006F FF8C  F025    	movff	plusw1,btemp
 12207  0106C0  0E67               	movlw	103
 12208  0106C2  1825               	xorwf	btemp^0,w,c
 12209  0106C4  B4D8               	btfsc	status,2,c
 12210  0106C6  D014               	goto	l10256
 12211                           
 12212                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 12213                           ;stkvar	_e @ sp[(-56)+34]
 12214                           ;stkvar	_m @ sp[(-56)+48]
 12215  0106C8  0EF8               	movlw	-8
 12216  0106CA  50E3               	movf	plusw1,w,c
 12217  0106CC  6E25               	movwf	btemp^0,c
 12218  0106CE  0EEA               	movlw	-22
 12219  0106D0  50E3               	movf	plusw1,w,c
 12220  0106D2  2625               	addwf	btemp^0,f,c
 12221  0106D4  0EF8               	movlw	-8
 12222  0106D6  0060  F097  FFE3   	movff	btemp,plusw1
 12223  0106DC  0EF9               	movlw	-7
 12224  0106DE  50E3               	movf	plusw1,w,c
 12225  0106E0  6E25               	movwf	btemp^0,c
 12226  0106E2  0EEB               	movlw	-21
 12227  0106E4  50E3               	movf	plusw1,w,c
 12228  0106E6  2225               	addwfc	btemp^0,f,c
 12229  0106E8  0EF9               	movlw	-7
 12230  0106EA  0060  F097  FFE3   	movff	btemp,plusw1
 12231  0106F0                     l10256:
 12232                           
 12233                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 12234                           ;stkvar	_i @ sp[(-56)+36]
 12235  0106F0  0EEC               	movlw	-20
 12236  0106F2  6AE3               	clrf	plusw1,c
 12237  0106F4  0EED               	movlw	-19
 12238  0106F6  6AE3               	clrf	plusw1,c
 12239                           
 12240                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 12241                           ;stkvar	_g @ sp[(-56)+16]
 12242  0106F8  0ED8               	movlw	-40
 12243  0106FA  006F FF8C  F02D    	movff	plusw1,btemp+8
 12244  010700  0ED9               	movlw	-39
 12245  010702  006F FF8C  F02E    	movff	plusw1,btemp+9
 12246  010708  0EDA               	movlw	-38
 12247  01070A  006F FF8C  F02F    	movff	plusw1,btemp+10
 12248  010710  0EDB               	movlw	-37
 12249  010712  006F FF8C  F030    	movff	plusw1,btemp+11
 12250                           
 12251                           ;stkvar	_h @ sp[(-56)+24]
 12252  010718  0EE0               	movlw	-32
 12253  01071A  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 12254  010720  0EE1               	movlw	-31
 12255  010722  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 12256  010728  0EE2               	movlw	-30
 12257  01072A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12258  010730  0EE3               	movlw	-29
 12259  010732  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12260                           
 12261                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 12262                           ;stkvar	_u @ sp[(-56)+12]
 12263  010738  0ED4               	movlw	-44
 12264  01073A  006F FF8C  F02D    	movff	plusw1,btemp+8
 12265  010740  0ED5               	movlw	-43
 12266  010742  006F FF8C  F02E    	movff	plusw1,btemp+9
 12267  010748  0ED6               	movlw	-42
 12268  01074A  006F FF8C  F02F    	movff	plusw1,btemp+10
 12269  010750  0ED7               	movlw	-41
 12270  010752  006F FF8C  F030    	movff	plusw1,btemp+11
 12271                           
 12272                           ;stkvar	_ou @ sp[(-56)+28]
 12273  010758  0EE4               	movlw	-28
 12274  01075A  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 12275  010760  0EE5               	movlw	-27
 12276  010762  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 12277  010768  0EE6               	movlw	-26
 12278  01076A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12279  010770  0EE7               	movlw	-25
 12280  010772  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12281                           
 12282                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 12283  010778  D0D6               	goto	l10272
 12284  01077A                     l10262:
 12285                           
 12286                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 12287                           ;stkvar	_u @ sp[(-56)+12]
 12288  01077A  0ED4               	movlw	-44
 12289  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 12290  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 12291  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 12292  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 12293                           
 12294                           ;stkvar	_h @ sp[(-60)+24]
 12295  010794  0EDC               	movlw	-36
 12296  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 12297  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 12298  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 12299  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 12300  0107AE  ECFB  F09A         	call	___fldiv	;wreg free
 12301  0107B2  0060  F097  FFE6   	movff	btemp,postinc1
 12302  0107B8  0060  F09B  FFE6   	movff	btemp+1,postinc1
 12303  0107BE  0060  F09F  FFE6   	movff	btemp+2,postinc1
 12304  0107C4  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 12305  0107CA  EC2B  F0A4         	call	_floorf	;wreg free
 12306                           
 12307                           ;stkvar	_l @ sp[(-56)+20]
 12308  0107CE  0EDC               	movlw	-36
 12309  0107D0  0060  F097  FFE3   	movff	btemp,plusw1
 12310  0107D6  0EDD               	movlw	-35
 12311  0107D8  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12312  0107DE  0EDE               	movlw	-34
 12313  0107E0  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12314  0107E6  0EDF               	movlw	-33
 12315  0107E8  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12316                           
 12317                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 12318                           ;stkvar	_l @ sp[(-56)+20]
 12319  0107EE  0EDC               	movlw	-36
 12320  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 12321  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 12322  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 12323  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 12324  010808  EC57  F0B2         	call	___fltol	;wreg free
 12325  01080C  0060  F094  F02F   	movff	btemp,btemp+10
 12326  010812  0060  F098  F030   	movff	btemp+1,btemp+11
 12327                           
 12328                           ;stkvar	_d @ sp[(-56)+44]
 12329  010818  0EF4               	movlw	-12
 12330  01081A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12331  010820  0EF5               	movlw	-11
 12332  010822  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12333                           
 12334                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 12335                           ;stkvar	_u @ sp[(-56)+12]
 12336  010828  0ED4               	movlw	-44
 12337  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 12338  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 12339  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 12340  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 12341                           
 12342                           ;stkvar	_l @ sp[(-60)+20]
 12343  010842  0ED8               	movlw	-40
 12344  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 12345  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 12346  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 12347  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 12348  01085C  EC08  F093         	call	___flmul	;wreg free
 12349  010860  0060  F097  FFE6   	movff	btemp,postinc1
 12350  010866  0060  F09B  FFE6   	movff	btemp+1,postinc1
 12351  01086C  0060  F09F  FFE6   	movff	btemp+2,postinc1
 12352  010872  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 12353                           
 12354                           ;stkvar	_h @ sp[(-60)+24]
 12355  010878  0EDC               	movlw	-36
 12356  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 12357  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 12358  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 12359  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 12360  010892  EC08  F0C3         	call	___flsub	;wreg free
 12361                           
 12362                           ;stkvar	_h @ sp[(-56)+24]
 12363  010896  0EE0               	movlw	-32
 12364  010898  0060  F097  FFE3   	movff	btemp,plusw1
 12365  01089E  0EE1               	movlw	-31
 12366  0108A0  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12367  0108A6  0EE2               	movlw	-30
 12368  0108A8  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12369  0108AE  0EE3               	movlw	-29
 12370  0108B0  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12371                           
 12372                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 12373  0108B6  0E00               	movlw	0
 12374  0108B8  6EE6               	movwf	postinc1,c
 12375  0108BA  0E00               	movlw	0
 12376  0108BC  6EE6               	movwf	postinc1,c
 12377  0108BE  0E20               	movlw	32
 12378  0108C0  6EE6               	movwf	postinc1,c
 12379  0108C2  0E41               	movlw	65
 12380  0108C4  6EE6               	movwf	postinc1,c
 12381                           
 12382                           ;stkvar	_u @ sp[(-60)+12]
 12383  0108C6  0ED0               	movlw	-48
 12384  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12385  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 12386  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 12387  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 12388  0108E0  ECFB  F09A         	call	___fldiv	;wreg free
 12389                           
 12390                           ;stkvar	_u @ sp[(-56)+12]
 12391  0108E4  0ED4               	movlw	-44
 12392  0108E6  0060  F097  FFE3   	movff	btemp,plusw1
 12393  0108EC  0ED5               	movlw	-43
 12394  0108EE  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12395  0108F4  0ED6               	movlw	-42
 12396  0108F6  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12397  0108FC  0ED7               	movlw	-41
 12398  0108FE  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12399                           
 12400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 12401                           ;stkvar	_i @ sp[(-56)+36]
 12402  010904  0EEC               	movlw	-20
 12403  010906  50E3               	movf	plusw1,w,c
 12404  010908  0F01               	addlw	1
 12405  01090A  6E25               	movwf	btemp^0,c
 12406  01090C  0EEC               	movlw	-20
 12407  01090E  0060  F097  FFE3   	movff	btemp,plusw1
 12408  010914  6A25               	clrf	btemp^0,c
 12409  010916  0EED               	movlw	-19
 12410  010918  50E3               	movf	plusw1,w,c
 12411  01091A  2025               	addwfc	btemp^0,w,c
 12412  01091C  6E25               	movwf	btemp^0,c
 12413  01091E  0EED               	movlw	-19
 12414  010920  0060  F097  FFE3   	movff	btemp,plusw1
 12415  010926                     l10272:
 12416                           
 12417                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 12418                           ;stkvar	_m @ sp[(-56)+48]
 12419                           ;stkvar	_i @ sp[(-56)+36]
 12420  010926  50E1               	movf	fsr1l,w,c
 12421  010928  0FEC               	addlw	-20
 12422  01092A  6ED9               	movwf	fsr2l,c
 12423  01092C  50E2               	movf	fsr1h,w,c
 12424  01092E  6EDA               	movwf	fsr2h,c
 12425  010930  0EFF               	movlw	255
 12426  010932  22DA               	addwfc	fsr2h,f,c
 12427  010934  0EF8               	movlw	-8
 12428  010936  50E3               	movf	plusw1,w,c
 12429  010938  5CDE               	subwf	postinc2,w,c
 12430  01093A  50DE               	movf	postinc2,w,c
 12431  01093C  0A80               	xorlw	128
 12432  01093E  6E25               	movwf	btemp^0,c
 12433  010940  0EF9               	movlw	-7
 12434  010942  50E3               	movf	plusw1,w,c
 12435  010944  0A80               	xorlw	128
 12436  010946  5825               	subwfb	btemp^0,w,c
 12437  010948  A0D8               	btfss	status,0,c
 12438  01094A  D717               	goto	l10262
 12439                           
 12440                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 12441  01094C  0E00               	movlw	0
 12442  01094E  6EE6               	movwf	postinc1,c
 12443  010950  0E00               	movlw	0
 12444  010952  6EE6               	movwf	postinc1,c
 12445  010954  0EA0               	movlw	160
 12446  010956  6EE6               	movwf	postinc1,c
 12447  010958  0E40               	movlw	64
 12448  01095A  6EE6               	movwf	postinc1,c
 12449                           
 12450                           ;stkvar	_u @ sp[(-60)+12]
 12451  01095C  0ED0               	movlw	-48
 12452  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 12453  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 12454  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 12455  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 12456  010976  EC08  F093         	call	___flmul	;wreg free
 12457                           
 12458                           ;stkvar	_l @ sp[(-56)+20]
 12459  01097A  0EDC               	movlw	-36
 12460  01097C  0060  F097  FFE3   	movff	btemp,plusw1
 12461  010982  0EDD               	movlw	-35
 12462  010984  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12463  01098A  0EDE               	movlw	-34
 12464  01098C  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12465  010992  0EDF               	movlw	-33
 12466  010994  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12467                           
 12468                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 12469                           ;stkvar	_l @ sp[(-56)+20]
 12470  01099A  0EDC               	movlw	-36
 12471  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 12472  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 12473  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 12474  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 12475                           
 12476                           ;stkvar	_h @ sp[(-60)+24]
 12477  0109B4  0EDC               	movlw	-36
 12478  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 12479  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 12480  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 12481  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12482  0109CE  EC10  F0B3         	call	___flge	;wreg free
 12483  0109D2  A025               	btfss	btemp& (0+255),0,c
 12484  0109D4  D021               	goto	u9770
 12485                           
 12486                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 12487                           ;stkvar	_l @ sp[(-56)+20]
 12488                           
 12489                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 12490                           
 12491                           ;stkvar	_l @ sp[(-56)+20]
 12492                           
 12493                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 12494  0109D6  0EDC               	movlw	-36
 12495  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 12496  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 12497  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 12498  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 12499                           
 12500                           ;stkvar	_h @ sp[(-60)+24]
 12501  0109F0  0EDC               	movlw	-36
 12502  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 12503  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 12504  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 12505  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 12506  010A0A  EC9D  F0BA         	call	___fleq	;wreg free
 12507  010A0E  A025               	btfss	btemp& (0+255),0,c
 12508  010A10  D01B               	goto	l10286
 12509                           
 12510                           ;stkvar	_d @ sp[(-56)+44]
 12511  010A12  0EF4               	movlw	-12
 12512  010A14  B0E3               	btfsc	plusw1,0,c
 12513  010A16  D018               	goto	l10286
 12514  010A18                     u9770:
 12515                           
 12516                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 12517  010A18  0E00               	movlw	0
 12518  010A1A  6E2D               	movwf	(btemp+8)^0,c
 12519  010A1C  0E00               	movlw	0
 12520  010A1E  6E2E               	movwf	(btemp+9)^0,c
 12521  010A20  0E00               	movlw	0
 12522  010A22  6E2F               	movwf	(btemp+10)^0,c
 12523  010A24  0E00               	movlw	0
 12524  010A26  6E30               	movwf	(btemp+11)^0,c
 12525                           
 12526                           ;stkvar	_l @ sp[(-56)+20]
 12527  010A28  0EDC               	movlw	-36
 12528  010A2A  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 12529  010A30  0EDD               	movlw	-35
 12530  010A32  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 12531  010A38  0EDE               	movlw	-34
 12532  010A3A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12533  010A40  0EDF               	movlw	-33
 12534  010A42  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12535  010A48                     l10286:
 12536                           
 12537                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 12538                           ;stkvar	_l @ sp[(-56)+20]
 12539  010A48  0EDC               	movlw	-36
 12540  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 12541  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 12542  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 12543  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 12544                           
 12545                           ;stkvar	_g @ sp[(-60)+16]
 12546  010A62  0ED4               	movlw	-44
 12547  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 12548  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 12549  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 12550  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 12551  010A7C  EC1D  F097         	call	___fladd	;wreg free
 12552                           
 12553                           ;stkvar	_h @ sp[(-56)+24]
 12554  010A80  0EE0               	movlw	-32
 12555  010A82  0060  F097  FFE3   	movff	btemp,plusw1
 12556  010A88  0EE1               	movlw	-31
 12557  010A8A  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12558  010A90  0EE2               	movlw	-30
 12559  010A92  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12560  010A98  0EE3               	movlw	-29
 12561  010A9A  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12562                           
 12563                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 12564                           ;stkvar	_ou @ sp[(-56)+28]
 12565  010AA0  0EE4               	movlw	-28
 12566  010AA2  006F FF8C  F02D    	movff	plusw1,btemp+8
 12567  010AA8  0EE5               	movlw	-27
 12568  010AAA  006F FF8C  F02E    	movff	plusw1,btemp+9
 12569  010AB0  0EE6               	movlw	-26
 12570  010AB2  006F FF8C  F02F    	movff	plusw1,btemp+10
 12571  010AB8  0EE7               	movlw	-25
 12572  010ABA  006F FF8C  F030    	movff	plusw1,btemp+11
 12573                           
 12574                           ;stkvar	_u @ sp[(-56)+12]
 12575  010AC0  0ED4               	movlw	-44
 12576  010AC2  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 12577  010AC8  0ED5               	movlw	-43
 12578  010ACA  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 12579  010AD0  0ED6               	movlw	-42
 12580  010AD2  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12581  010AD8  0ED7               	movlw	-41
 12582  010ADA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12583                           
 12584                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 12585                           ;stkvar	_nmode @ sp[(-56)+55]
 12586  010AE0  0EFF               	movlw	-1
 12587  010AE2  006F FF8C  F025    	movff	plusw1,btemp
 12588  010AE8  0E65               	movlw	101
 12589  010AEA  1825               	xorwf	btemp^0,w,c
 12590  010AEC  B4D8               	btfsc	status,2,c
 12591  010AEE  D011               	goto	l10294
 12592                           
 12593                           ;stkvar	_e @ sp[(-56)+34]
 12594                           ;stkvar	_ne @ sp[(-56)+46]
 12595  010AF0  0EEA               	movlw	-22
 12596  010AF2  006F FF8C  F025    	movff	plusw1,btemp
 12597  010AF8  0EF6               	movlw	-10
 12598  010AFA  0060  F097  FFE3   	movff	btemp,plusw1
 12599  010B00  0EEB               	movlw	-21
 12600  010B02  006F FF8C  F025    	movff	plusw1,btemp
 12601  010B08  0EF7               	movlw	-9
 12602  010B0A  0060  F097  FFE3   	movff	btemp,plusw1
 12603  010B10  D004               	goto	l2079
 12604  010B12                     l10294:
 12605                           
 12606                           ;stkvar	_ne @ sp[(-56)+46]
 12607  010B12  0EF6               	movlw	-10
 12608  010B14  6AE3               	clrf	plusw1,c
 12609  010B16  0EF7               	movlw	-9
 12610  010B18  6AE3               	clrf	plusw1,c
 12611  010B1A                     l2079:
 12612                           
 12613                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 12614                           ;stkvar	_pp @ sp[(-56)+50]
 12615  010B1A  0EFA               	movlw	-6
 12616  010B1C  6AE3               	clrf	plusw1,c
 12617  010B1E  0EFB               	movlw	-5
 12618  010B20  6AE3               	clrf	plusw1,c
 12619                           
 12620                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 12621                           ;stkvar	_t @ sp[(-56)+52]
 12622  010B22  0EFC               	movlw	-4
 12623  010B24  6AE3               	clrf	plusw1,c
 12624  010B26  0EFD               	movlw	-3
 12625  010B28  6AE3               	clrf	plusw1,c
 12626                           
 12627                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 12628                           ;stkvar	_i @ sp[(-56)+36]
 12629  010B2A  0EEC               	movlw	-20
 12630  010B2C  6AE3               	clrf	plusw1,c
 12631  010B2E  0EED               	movlw	-19
 12632  010B30  6AE3               	clrf	plusw1,c
 12633                           
 12634                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 12635  010B32  D1B7               	goto	l10346
 12636  010B34                     l10296:
 12637                           
 12638                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 12639                           ;stkvar	_u @ sp[(-56)+12]
 12640  010B34  0ED4               	movlw	-44
 12641  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 12642  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 12643  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 12644  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 12645                           
 12646                           ;stkvar	_h @ sp[(-60)+24]
 12647  010B4E  0EDC               	movlw	-36
 12648  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 12649  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 12650  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 12651  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 12652  010B68  ECFB  F09A         	call	___fldiv	;wreg free
 12653  010B6C  0060  F097  FFE6   	movff	btemp,postinc1
 12654  010B72  0060  F09B  FFE6   	movff	btemp+1,postinc1
 12655  010B78  0060  F09F  FFE6   	movff	btemp+2,postinc1
 12656  010B7E  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 12657  010B84  EC2B  F0A4         	call	_floorf	;wreg free
 12658                           
 12659                           ;stkvar	_l @ sp[(-56)+20]
 12660  010B88  0EDC               	movlw	-36
 12661  010B8A  0060  F097  FFE3   	movff	btemp,plusw1
 12662  010B90  0EDD               	movlw	-35
 12663  010B92  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12664  010B98  0EDE               	movlw	-34
 12665  010B9A  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12666  010BA0  0EDF               	movlw	-33
 12667  010BA2  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12668                           
 12669                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 12670                           ;stkvar	_l @ sp[(-56)+20]
 12671  010BA8  0EDC               	movlw	-36
 12672  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 12673  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 12674  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 12675  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 12676  010BC2  EC57  F0B2         	call	___fltol	;wreg free
 12677  010BC6  0060  F094  F02F   	movff	btemp,btemp+10
 12678  010BCC  0060  F098  F030   	movff	btemp+1,btemp+11
 12679                           
 12680                           ;stkvar	_d @ sp[(-56)+44]
 12681  010BD2  0EF4               	movlw	-12
 12682  010BD4  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12683  010BDA  0EF5               	movlw	-11
 12684  010BDC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12685                           
 12686                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 12687  010BE2  B80E               	btfsc	_flags^0,4,c
 12688  010BE4  D026               	goto	l10310
 12689                           
 12690                           ;stkvar	_d @ sp[(-56)+44]
 12691  010BE6  0EF4               	movlw	-12
 12692  010BE8  006F FF8C  F025    	movff	plusw1,btemp
 12693  010BEE  0EF5               	movlw	-11
 12694  010BF0  50E3               	movf	plusw1,w,c
 12695  010BF2  1025               	iorwf	btemp^0,w,c
 12696  010BF4  A4D8               	btfss	status,2,c
 12697  010BF6  D01D               	goto	l10310
 12698                           
 12699                           ;stkvar	_mode @ sp[(-56)+54]
 12700  010BF8  0EFE               	movlw	-2
 12701  010BFA  006F FF8C  F025    	movff	plusw1,btemp
 12702  010C00  0E67               	movlw	103
 12703  010C02  1825               	xorwf	btemp^0,w,c
 12704  010C04  A4D8               	btfss	status,2,c
 12705  010C06  D015               	goto	l10310
 12706                           
 12707                           ;stkvar	_ne @ sp[(-56)+46]
 12708  010C08  0EF7               	movlw	-9
 12709  010C0A  AEE3               	btfss	plusw1,7,c
 12710  010C0C  D012               	goto	l10310
 12711                           
 12712                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 12713                           ;stkvar	_t @ sp[(-56)+52]
 12714  010C0E  0EFC               	movlw	-4
 12715  010C10  50E3               	movf	plusw1,w,c
 12716  010C12  0F01               	addlw	1
 12717  010C14  6E25               	movwf	btemp^0,c
 12718  010C16  0EFC               	movlw	-4
 12719  010C18  0060  F097  FFE3   	movff	btemp,plusw1
 12720  010C1E  6A25               	clrf	btemp^0,c
 12721  010C20  0EFD               	movlw	-3
 12722  010C22  50E3               	movf	plusw1,w,c
 12723  010C24  2025               	addwfc	btemp^0,w,c
 12724  010C26  6E25               	movwf	btemp^0,c
 12725  010C28  0EFD               	movlw	-3
 12726  010C2A  0060  F097  FFE3   	movff	btemp,plusw1
 12727                           
 12728                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 12729  010C30  D0AF               	goto	l10338
 12730  010C32                     l10310:
 12731                           
 12732                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 12733                           ;stkvar	_pp @ sp[(-56)+50]
 12734  010C32  0EFA               	movlw	-6
 12735  010C34  006F FF8C  F025    	movff	plusw1,btemp
 12736  010C3A  0EFB               	movlw	-5
 12737  010C3C  50E3               	movf	plusw1,w,c
 12738  010C3E  1025               	iorwf	btemp^0,w,c
 12739  010C40  A4D8               	btfss	status,2,c
 12740  010C42  D070               	goto	l10330
 12741                           
 12742                           ;stkvar	_ne @ sp[(-56)+46]
 12743  010C44  0EF7               	movlw	-9
 12744  010C46  AEE3               	btfss	plusw1,7,c
 12745  010C48  D06D               	goto	l10330
 12746                           
 12747                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 12748                           ;stkvar	_n @ sp[(-56)+32]
 12749  010C4A  0EE8               	movlw	-24
 12750  010C4C  006F FF8C  F02F    	movff	plusw1,btemp+10
 12751  010C52  0EE9               	movlw	-23
 12752  010C54  006F FF8C  F030    	movff	plusw1,btemp+11
 12753  010C5A  0E94               	movlw	low _dbuf
 12754  010C5C  242F               	addwf	(btemp+10)^0,w,c
 12755  010C5E  6ED9               	movwf	fsr2l,c
 12756  010C60  0E03               	movlw	high _dbuf
 12757  010C62  2030               	addwfc	(btemp+11)^0,w,c
 12758  010C64  6EDA               	movwf	fsr2h,c
 12759  010C66  0E2E               	movlw	46
 12760  010C68  6EDF               	movwf	indf2,c
 12761                           
 12762                           ;stkvar	_n @ sp[(-56)+32]
 12763  010C6A  0EE8               	movlw	-24
 12764  010C6C  50E3               	movf	plusw1,w,c
 12765  010C6E  0F01               	addlw	1
 12766  010C70  6E25               	movwf	btemp^0,c
 12767  010C72  0EE8               	movlw	-24
 12768  010C74  0060  F097  FFE3   	movff	btemp,plusw1
 12769  010C7A  6A25               	clrf	btemp^0,c
 12770  010C7C  0EE9               	movlw	-23
 12771  010C7E  50E3               	movf	plusw1,w,c
 12772  010C80  2025               	addwfc	btemp^0,w,c
 12773  010C82  6E25               	movwf	btemp^0,c
 12774  010C84  0EE9               	movlw	-23
 12775  010C86  0060  F097  FFE3   	movff	btemp,plusw1
 12776                           
 12777                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 12778                           ;stkvar	_w @ sp[(-56)+38]
 12779  010C8C  50E1               	movf	fsr1l,w,c
 12780  010C8E  0FEE               	addlw	-18
 12781  010C90  6ED9               	movwf	fsr2l,c
 12782  010C92  50E2               	movf	fsr1h,w,c
 12783  010C94  6EDA               	movwf	fsr2h,c
 12784  010C96  0EFF               	movlw	255
 12785  010C98  22DA               	addwfc	fsr2h,f,c
 12786  010C9A  06DE               	decf	postinc2,f,c
 12787  010C9C  0E00               	movlw	0
 12788  010C9E  5ADD               	subwfb	postdec2,f,c
 12789                           
 12790                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 12791  010CA0  0E01               	movlw	1
 12792  010CA2  6E2F               	movwf	(btemp+10)^0,c
 12793  010CA4  0E00               	movlw	0
 12794  010CA6  6E30               	movwf	(btemp+11)^0,c
 12795                           
 12796                           ;stkvar	_pp @ sp[(-56)+50]
 12797  010CA8  0EFA               	movlw	-6
 12798  010CAA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12799  010CB0  0EFB               	movlw	-5
 12800  010CB2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12801  010CB8  D035               	goto	l10330
 12802  010CBA                     l10322:
 12803                           
 12804                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 12805                           ;stkvar	_n @ sp[(-56)+32]
 12806  010CBA  0EE8               	movlw	-24
 12807  010CBC  006F FF8C  F02F    	movff	plusw1,btemp+10
 12808  010CC2  0EE9               	movlw	-23
 12809  010CC4  006F FF8C  F030    	movff	plusw1,btemp+11
 12810  010CCA  0E94               	movlw	low _dbuf
 12811  010CCC  242F               	addwf	(btemp+10)^0,w,c
 12812  010CCE  6ED9               	movwf	fsr2l,c
 12813  010CD0  0E03               	movlw	high _dbuf
 12814  010CD2  2030               	addwfc	(btemp+11)^0,w,c
 12815  010CD4  6EDA               	movwf	fsr2h,c
 12816  010CD6  0E30               	movlw	48
 12817  010CD8  6EDF               	movwf	indf2,c
 12818                           
 12819                           ;stkvar	_n @ sp[(-56)+32]
 12820  010CDA  0EE8               	movlw	-24
 12821  010CDC  50E3               	movf	plusw1,w,c
 12822  010CDE  0F01               	addlw	1
 12823  010CE0  6E25               	movwf	btemp^0,c
 12824  010CE2  0EE8               	movlw	-24
 12825  010CE4  0060  F097  FFE3   	movff	btemp,plusw1
 12826  010CEA  6A25               	clrf	btemp^0,c
 12827  010CEC  0EE9               	movlw	-23
 12828  010CEE  50E3               	movf	plusw1,w,c
 12829  010CF0  2025               	addwfc	btemp^0,w,c
 12830  010CF2  6E25               	movwf	btemp^0,c
 12831  010CF4  0EE9               	movlw	-23
 12832  010CF6  0060  F097  FFE3   	movff	btemp,plusw1
 12833                           
 12834                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 12835                           ;stkvar	_w @ sp[(-56)+38]
 12836  010CFC  50E1               	movf	fsr1l,w,c
 12837  010CFE  0FEE               	addlw	-18
 12838  010D00  6ED9               	movwf	fsr2l,c
 12839  010D02  50E2               	movf	fsr1h,w,c
 12840  010D04  6EDA               	movwf	fsr2h,c
 12841  010D06  0EFF               	movlw	255
 12842  010D08  22DA               	addwfc	fsr2h,f,c
 12843  010D0A  06DE               	decf	postinc2,f,c
 12844  010D0C  0E00               	movlw	0
 12845  010D0E  5ADD               	subwfb	postdec2,f,c
 12846                           
 12847                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 12848                           ;stkvar	_t @ sp[(-56)+52]
 12849  010D10  50E1               	movf	fsr1l,w,c
 12850  010D12  0FFC               	addlw	-4
 12851  010D14  6ED9               	movwf	fsr2l,c
 12852  010D16  50E2               	movf	fsr1h,w,c
 12853  010D18  6EDA               	movwf	fsr2h,c
 12854  010D1A  0EFF               	movlw	255
 12855  010D1C  22DA               	addwfc	fsr2h,f,c
 12856  010D1E  06DE               	decf	postinc2,f,c
 12857  010D20  0E00               	movlw	0
 12858  010D22  5ADD               	subwfb	postdec2,f,c
 12859  010D24                     l10330:
 12860                           
 12861                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 12862                           ;stkvar	_t @ sp[(-56)+52]
 12863  010D24  0EFC               	movlw	-4
 12864  010D26  006F FF8C  F025    	movff	plusw1,btemp
 12865  010D2C  0EFD               	movlw	-3
 12866  010D2E  50E3               	movf	plusw1,w,c
 12867  010D30  1025               	iorwf	btemp^0,w,c
 12868  010D32  A4D8               	btfss	status,2,c
 12869  010D34  D7C2               	goto	l10322
 12870                           
 12871                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 12872                           ;stkvar	_n @ sp[(-56)+32]
 12873  010D36  0EE8               	movlw	-24
 12874  010D38  006F FF8C  F02F    	movff	plusw1,btemp+10
 12875  010D3E  0EE9               	movlw	-23
 12876  010D40  006F FF8C  F030    	movff	plusw1,btemp+11
 12877  010D46  0E94               	movlw	low _dbuf
 12878  010D48  242F               	addwf	(btemp+10)^0,w,c
 12879  010D4A  6ED9               	movwf	fsr2l,c
 12880  010D4C  0E03               	movlw	high _dbuf
 12881  010D4E  2030               	addwfc	(btemp+11)^0,w,c
 12882  010D50  6EDA               	movwf	fsr2h,c
 12883                           
 12884                           ;stkvar	_d @ sp[(-56)+44]
 12885  010D52  0EF4               	movlw	-12
 12886  010D54  50E3               	movf	plusw1,w,c
 12887  010D56  0F30               	addlw	48
 12888  010D58  6EDF               	movwf	indf2,c
 12889                           
 12890                           ;stkvar	_n @ sp[(-56)+32]
 12891  010D5A  0EE8               	movlw	-24
 12892  010D5C  50E3               	movf	plusw1,w,c
 12893  010D5E  0F01               	addlw	1
 12894  010D60  6E25               	movwf	btemp^0,c
 12895  010D62  0EE8               	movlw	-24
 12896  010D64  0060  F097  FFE3   	movff	btemp,plusw1
 12897  010D6A  6A25               	clrf	btemp^0,c
 12898  010D6C  0EE9               	movlw	-23
 12899  010D6E  50E3               	movf	plusw1,w,c
 12900  010D70  2025               	addwfc	btemp^0,w,c
 12901  010D72  6E25               	movwf	btemp^0,c
 12902  010D74  0EE9               	movlw	-23
 12903  010D76  0060  F097  FFE3   	movff	btemp,plusw1
 12904                           
 12905                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 12906                           ;stkvar	_w @ sp[(-56)+38]
 12907  010D7C  50E1               	movf	fsr1l,w,c
 12908  010D7E  0FEE               	addlw	-18
 12909  010D80  6ED9               	movwf	fsr2l,c
 12910  010D82  50E2               	movf	fsr1h,w,c
 12911  010D84  6EDA               	movwf	fsr2h,c
 12912  010D86  0EFF               	movlw	255
 12913  010D88  22DA               	addwfc	fsr2h,f,c
 12914  010D8A  06DE               	decf	postinc2,f,c
 12915  010D8C  0E00               	movlw	0
 12916  010D8E  5ADD               	subwfb	postdec2,f,c
 12917  010D90                     l10338:
 12918                           
 12919                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 12920                           ;stkvar	_u @ sp[(-56)+12]
 12921  010D90  0ED4               	movlw	-44
 12922  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 12923  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 12924  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 12925  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 12926                           
 12927                           ;stkvar	_l @ sp[(-60)+20]
 12928  010DAA  0ED8               	movlw	-40
 12929  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 12930  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 12931  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 12932  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 12933  010DC4  EC08  F093         	call	___flmul	;wreg free
 12934  010DC8  0060  F097  FFE6   	movff	btemp,postinc1
 12935  010DCE  0060  F09B  FFE6   	movff	btemp+1,postinc1
 12936  010DD4  0060  F09F  FFE6   	movff	btemp+2,postinc1
 12937  010DDA  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 12938                           
 12939                           ;stkvar	_h @ sp[(-60)+24]
 12940  010DE0  0EDC               	movlw	-36
 12941  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 12942  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 12943  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 12944  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 12945  010DFA  EC08  F0C3         	call	___flsub	;wreg free
 12946                           
 12947                           ;stkvar	_h @ sp[(-56)+24]
 12948  010DFE  0EE0               	movlw	-32
 12949  010E00  0060  F097  FFE3   	movff	btemp,plusw1
 12950  010E06  0EE1               	movlw	-31
 12951  010E08  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12952  010E0E  0EE2               	movlw	-30
 12953  010E10  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12954  010E16  0EE3               	movlw	-29
 12955  010E18  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12956                           
 12957                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 12958  010E1E  0E00               	movlw	0
 12959  010E20  6EE6               	movwf	postinc1,c
 12960  010E22  0E00               	movlw	0
 12961  010E24  6EE6               	movwf	postinc1,c
 12962  010E26  0E20               	movlw	32
 12963  010E28  6EE6               	movwf	postinc1,c
 12964  010E2A  0E41               	movlw	65
 12965  010E2C  6EE6               	movwf	postinc1,c
 12966                           
 12967                           ;stkvar	_u @ sp[(-60)+12]
 12968  010E2E  0ED0               	movlw	-48
 12969  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 12970  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 12971  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 12972  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 12973  010E48  ECFB  F09A         	call	___fldiv	;wreg free
 12974                           
 12975                           ;stkvar	_u @ sp[(-56)+12]
 12976  010E4C  0ED4               	movlw	-44
 12977  010E4E  0060  F097  FFE3   	movff	btemp,plusw1
 12978  010E54  0ED5               	movlw	-43
 12979  010E56  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12980  010E5C  0ED6               	movlw	-42
 12981  010E5E  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12982  010E64  0ED7               	movlw	-41
 12983  010E66  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12984                           
 12985                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 12986                           ;stkvar	_ne @ sp[(-56)+46]
 12987  010E6C  50E1               	movf	fsr1l,w,c
 12988  010E6E  0FF6               	addlw	-10
 12989  010E70  6ED9               	movwf	fsr2l,c
 12990  010E72  50E2               	movf	fsr1h,w,c
 12991  010E74  6EDA               	movwf	fsr2h,c
 12992  010E76  0EFF               	movlw	255
 12993  010E78  22DA               	addwfc	fsr2h,f,c
 12994  010E7A  06DE               	decf	postinc2,f,c
 12995  010E7C  0E00               	movlw	0
 12996  010E7E  5ADD               	subwfb	postdec2,f,c
 12997                           
 12998                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 12999                           ;stkvar	_i @ sp[(-56)+36]
 13000  010E80  0EEC               	movlw	-20
 13001  010E82  50E3               	movf	plusw1,w,c
 13002  010E84  0F01               	addlw	1
 13003  010E86  6E25               	movwf	btemp^0,c
 13004  010E88  0EEC               	movlw	-20
 13005  010E8A  0060  F097  FFE3   	movff	btemp,plusw1
 13006  010E90  6A25               	clrf	btemp^0,c
 13007  010E92  0EED               	movlw	-19
 13008  010E94  50E3               	movf	plusw1,w,c
 13009  010E96  2025               	addwfc	btemp^0,w,c
 13010  010E98  6E25               	movwf	btemp^0,c
 13011  010E9A  0EED               	movlw	-19
 13012  010E9C  0060  F097  FFE3   	movff	btemp,plusw1
 13013  010EA2                     l10346:
 13014                           
 13015                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 13016                           ;stkvar	_m @ sp[(-56)+48]
 13017                           ;stkvar	_i @ sp[(-56)+36]
 13018  010EA2  50E1               	movf	fsr1l,w,c
 13019  010EA4  0FEC               	addlw	-20
 13020  010EA6  6ED9               	movwf	fsr2l,c
 13021  010EA8  50E2               	movf	fsr1h,w,c
 13022  010EAA  6EDA               	movwf	fsr2h,c
 13023  010EAC  0EFF               	movlw	255
 13024  010EAE  22DA               	addwfc	fsr2h,f,c
 13025  010EB0  0EF8               	movlw	-8
 13026  010EB2  50E3               	movf	plusw1,w,c
 13027  010EB4  5CDE               	subwf	postinc2,w,c
 13028  010EB6  50DE               	movf	postinc2,w,c
 13029  010EB8  0A80               	xorlw	128
 13030  010EBA  6E25               	movwf	btemp^0,c
 13031  010EBC  0EF9               	movlw	-7
 13032  010EBE  50E3               	movf	plusw1,w,c
 13033  010EC0  0A80               	xorlw	128
 13034  010EC2  5825               	subwfb	btemp^0,w,c
 13035  010EC4  B0D8               	btfsc	status,0,c
 13036  010EC6  D00E               	goto	u9870
 13037                           
 13038                           ;stkvar	_n @ sp[(-56)+32]
 13039  010EC8  0EE9               	movlw	-23
 13040  010ECA  BEE3               	btfsc	plusw1,7,c
 13041  010ECC  D633               	goto	l10296
 13042  010ECE  0EE9               	movlw	-23
 13043  010ED0  50E3               	movf	plusw1,w,c
 13044  010ED2  E108               	bnz	u9870
 13045  010ED4  0EE8               	movlw	-24
 13046  010ED6  006F FF8C  F025    	movff	plusw1,btemp
 13047  010EDC  0E4B               	movlw	75
 13048  010EDE  5E25               	subwf	btemp^0,f,c
 13049  010EE0  A0D8               	btfss	status,0,c
 13050  010EE2  D628               	goto	l10296
 13051  010EE4                     u9870:
 13052                           
 13053                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 13054                           ;stkvar	_pp @ sp[(-56)+50]
 13055  010EE4  0EFA               	movlw	-6
 13056  010EE6  006F FF8C  F025    	movff	plusw1,btemp
 13057  010EEC  0EFB               	movlw	-5
 13058  010EEE  50E3               	movf	plusw1,w,c
 13059  010EF0  1025               	iorwf	btemp^0,w,c
 13060  010EF2  B4D8               	btfsc	status,2,c
 13061  010EF4  A80E               	btfss	_flags^0,4,c
 13062  010EF6  D021               	goto	l10358
 13063                           
 13064                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 13065                           ;stkvar	_n @ sp[(-56)+32]
 13066  010EF8  0EE8               	movlw	-24
 13067  010EFA  006F FF8C  F02F    	movff	plusw1,btemp+10
 13068  010F00  0EE9               	movlw	-23
 13069  010F02  006F FF8C  F030    	movff	plusw1,btemp+11
 13070  010F08  0E94               	movlw	low _dbuf
 13071  010F0A  242F               	addwf	(btemp+10)^0,w,c
 13072  010F0C  6ED9               	movwf	fsr2l,c
 13073  010F0E  0E03               	movlw	high _dbuf
 13074  010F10  2030               	addwfc	(btemp+11)^0,w,c
 13075  010F12  6EDA               	movwf	fsr2h,c
 13076  010F14  0E2E               	movlw	46
 13077  010F16  6EDF               	movwf	indf2,c
 13078                           
 13079                           ;stkvar	_n @ sp[(-56)+32]
 13080  010F18  0EE8               	movlw	-24
 13081  010F1A  50E3               	movf	plusw1,w,c
 13082  010F1C  0F01               	addlw	1
 13083  010F1E  6E25               	movwf	btemp^0,c
 13084  010F20  0EE8               	movlw	-24
 13085  010F22  0060  F097  FFE3   	movff	btemp,plusw1
 13086  010F28  6A25               	clrf	btemp^0,c
 13087  010F2A  0EE9               	movlw	-23
 13088  010F2C  50E3               	movf	plusw1,w,c
 13089  010F2E  2025               	addwfc	btemp^0,w,c
 13090  010F30  6E25               	movwf	btemp^0,c
 13091  010F32  0EE9               	movlw	-23
 13092  010F34  0060  F097  FFE3   	movff	btemp,plusw1
 13093  010F3A                     l10358:
 13094                           
 13095                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 13096                           ;stkvar	_n @ sp[(-56)+32]
 13097  010F3A  0EE8               	movlw	-24
 13098  010F3C  006F FF8C  F02F    	movff	plusw1,btemp+10
 13099  010F42  0EE9               	movlw	-23
 13100  010F44  006F FF8C  F030    	movff	plusw1,btemp+11
 13101  010F4A  0E94               	movlw	low _dbuf
 13102  010F4C  242F               	addwf	(btemp+10)^0,w,c
 13103  010F4E  6ED9               	movwf	fsr2l,c
 13104  010F50  0E03               	movlw	high _dbuf
 13105  010F52  2030               	addwfc	(btemp+11)^0,w,c
 13106  010F54  6EDA               	movwf	fsr2h,c
 13107  010F56  0E00               	movlw	0
 13108  010F58  6EDF               	movwf	indf2,c
 13109                           
 13110                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 13111                           ;stkvar	_nmode @ sp[(-56)+55]
 13112  010F5A  0EFF               	movlw	-1
 13113  010F5C  006F FF8C  F025    	movff	plusw1,btemp
 13114  010F62  0E65               	movlw	101
 13115  010F64  1825               	xorwf	btemp^0,w,c
 13116  010F66  A4D8               	btfss	status,2,c
 13117  010F68  EF16  F081         	goto	l10162
 13118                           
 13119                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 13120  010F6C  0E4F               	movlw	79
 13121  010F6E  6E2F               	movwf	(btemp+10)^0,c
 13122  010F70  0E00               	movlw	0
 13123  010F72  6E30               	movwf	(btemp+11)^0,c
 13124                           
 13125                           ;stkvar	_i @ sp[(-56)+36]
 13126  010F74  0EEC               	movlw	-20
 13127  010F76  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13128  010F7C  0EED               	movlw	-19
 13129  010F7E  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13130                           
 13131                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 13132                           ;stkvar	_i @ sp[(-56)+36]
 13133  010F84  0EEC               	movlw	-20
 13134  010F86  006F FF8C  F02F    	movff	plusw1,btemp+10
 13135  010F8C  0EED               	movlw	-19
 13136  010F8E  006F FF8C  F030    	movff	plusw1,btemp+11
 13137  010F94  0E94               	movlw	low _dbuf
 13138  010F96  242F               	addwf	(btemp+10)^0,w,c
 13139  010F98  6ED9               	movwf	fsr2l,c
 13140  010F9A  0E03               	movlw	high _dbuf
 13141  010F9C  2030               	addwfc	(btemp+11)^0,w,c
 13142  010F9E  6EDA               	movwf	fsr2h,c
 13143  010FA0  0E00               	movlw	0
 13144  010FA2  6EDF               	movwf	indf2,c
 13145                           
 13146                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 13147                           ;stkvar	_sign @ sp[(-56)+42]
 13148  010FA4  0EF2               	movlw	-14
 13149  010FA6  6AE3               	clrf	plusw1,c
 13150  010FA8  0EF3               	movlw	-13
 13151  010FAA  6AE3               	clrf	plusw1,c
 13152                           
 13153                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 13154                           ;stkvar	_e @ sp[(-56)+34]
 13155  010FAC  0EEB               	movlw	-21
 13156  010FAE  AEE3               	btfss	plusw1,7,c
 13157  010FB0  D012               	goto	l10372
 13158                           
 13159                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 13160  010FB2  0E01               	movlw	1
 13161  010FB4  6E2F               	movwf	(btemp+10)^0,c
 13162  010FB6  0E00               	movlw	0
 13163  010FB8  6E30               	movwf	(btemp+11)^0,c
 13164                           
 13165                           ;stkvar	_sign @ sp[(-56)+42]
 13166  010FBA  0EF2               	movlw	-14
 13167  010FBC  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13168  010FC2  0EF3               	movlw	-13
 13169  010FC4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13170                           
 13171                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 13172                           ;stkvar	_e @ sp[(-56)+34]
 13173                           ;stkvar	_e @ sp[(-56)+34]
 13174  010FCA  0EEA               	movlw	-22
 13175  010FCC  6CE3               	negf	plusw1,c
 13176  010FCE  0EEB               	movlw	-21
 13177  010FD0  1EE3               	comf	plusw1,f,c
 13178  010FD2  B0D8               	btfsc	status,0,c
 13179  010FD4  2AE3               	incf	plusw1,f,c
 13180  010FD6                     l10372:
 13181                           
 13182                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 13183  010FD6  0E02               	movlw	2
 13184  010FD8  6E2F               	movwf	(btemp+10)^0,c
 13185  010FDA  0E00               	movlw	0
 13186  010FDC  6E30               	movwf	(btemp+11)^0,c
 13187                           
 13188                           ;stkvar	_p @ sp[(-56)+40]
 13189  010FDE  0EF0               	movlw	-16
 13190  010FE0  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13191  010FE6  0EF1               	movlw	-15
 13192  010FE8  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13193                           
 13194                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 13195  010FEE  D051               	goto	l10384
 13196  010FF0                     l10374:
 13197                           
 13198                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 13199                           ;stkvar	_i @ sp[(-56)+36]
 13200  010FF0  50E1               	movf	fsr1l,w,c
 13201  010FF2  0FEC               	addlw	-20
 13202  010FF4  6ED9               	movwf	fsr2l,c
 13203  010FF6  50E2               	movf	fsr1h,w,c
 13204  010FF8  6EDA               	movwf	fsr2h,c
 13205  010FFA  0EFF               	movlw	255
 13206  010FFC  22DA               	addwfc	fsr2h,f,c
 13207  010FFE  06DE               	decf	postinc2,f,c
 13208  011000  0E00               	movlw	0
 13209  011002  5ADD               	subwfb	postdec2,f,c
 13210                           
 13211                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 13212                           ;stkvar	_i @ sp[(-56)+36]
 13213  011004  0EEC               	movlw	-20
 13214  011006  006F FF8C  F02F    	movff	plusw1,btemp+10
 13215  01100C  0EED               	movlw	-19
 13216  01100E  006F FF8C  F030    	movff	plusw1,btemp+11
 13217  011014  0E94               	movlw	low _dbuf
 13218  011016  242F               	addwf	(btemp+10)^0,w,c
 13219  011018  6ED9               	movwf	fsr2l,c
 13220  01101A  0E03               	movlw	high _dbuf
 13221  01101C  2030               	addwfc	(btemp+11)^0,w,c
 13222  01101E  6EDA               	movwf	fsr2h,c
 13223  011020  0E0A               	movlw	10
 13224  011022  6EE6               	movwf	postinc1,c
 13225  011024  0E00               	movlw	0
 13226  011026  6EE6               	movwf	postinc1,c
 13227                           
 13228                           ;stkvar	_e @ sp[(-58)+34]
 13229  011028  0EE8               	movlw	-24
 13230  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 13231  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 13232  011036  EC35  F0B6         	call	___awmod	;wreg free
 13233  01103A  5025               	movf	btemp^0,w,c
 13234  01103C  0F30               	addlw	48
 13235  01103E  6EDF               	movwf	indf2,c
 13236                           
 13237                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 13238  011040  0E0A               	movlw	10
 13239  011042  6EE6               	movwf	postinc1,c
 13240  011044  0E00               	movlw	0
 13241  011046  6EE6               	movwf	postinc1,c
 13242                           
 13243                           ;stkvar	_e @ sp[(-58)+34]
 13244  011048  0EE8               	movlw	-24
 13245  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 13246  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 13247  011056  ECC1  F0B3         	call	___awdiv	;wreg free
 13248                           
 13249                           ;stkvar	_e @ sp[(-56)+34]
 13250  01105A  0EEA               	movlw	-22
 13251  01105C  0060  F097  FFE3   	movff	btemp,plusw1
 13252  011062  0EEB               	movlw	-21
 13253  011064  0060  F09B  FFE3   	movff	btemp+1,plusw1
 13254                           
 13255                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 13256                           ;stkvar	_p @ sp[(-56)+40]
 13257  01106A  50E1               	movf	fsr1l,w,c
 13258  01106C  0FF0               	addlw	-16
 13259  01106E  6ED9               	movwf	fsr2l,c
 13260  011070  50E2               	movf	fsr1h,w,c
 13261  011072  6EDA               	movwf	fsr2h,c
 13262  011074  0EFF               	movlw	255
 13263  011076  22DA               	addwfc	fsr2h,f,c
 13264  011078  06DE               	decf	postinc2,f,c
 13265  01107A  0E00               	movlw	0
 13266  01107C  5ADD               	subwfb	postdec2,f,c
 13267                           
 13268                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 13269                           ;stkvar	_w @ sp[(-56)+38]
 13270  01107E  50E1               	movf	fsr1l,w,c
 13271  011080  0FEE               	addlw	-18
 13272  011082  6ED9               	movwf	fsr2l,c
 13273  011084  50E2               	movf	fsr1h,w,c
 13274  011086  6EDA               	movwf	fsr2h,c
 13275  011088  0EFF               	movlw	255
 13276  01108A  22DA               	addwfc	fsr2h,f,c
 13277  01108C  06DE               	decf	postinc2,f,c
 13278  01108E  0E00               	movlw	0
 13279  011090  5ADD               	subwfb	postdec2,f,c
 13280  011092                     l10384:
 13281                           
 13282                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 13283                           ;stkvar	_e @ sp[(-56)+34]
 13284  011092  0EEA               	movlw	-22
 13285  011094  006F FF8C  F025    	movff	plusw1,btemp
 13286  01109A  0EEB               	movlw	-21
 13287  01109C  50E3               	movf	plusw1,w,c
 13288  01109E  1025               	iorwf	btemp^0,w,c
 13289  0110A0  A4D8               	btfss	status,2,c
 13290  0110A2  D7A6               	goto	l10374
 13291                           
 13292                           ;stkvar	_p @ sp[(-56)+40]
 13293  0110A4  0EF1               	movlw	-15
 13294  0110A6  BEE3               	btfsc	plusw1,7,c
 13295  0110A8  D007               	goto	u9930
 13296  0110AA  0EF1               	movlw	-15
 13297  0110AC  50E3               	movf	plusw1,w,c
 13298  0110AE  E1A0               	bnz	l10374
 13299  0110B0  0EF0               	movlw	-16
 13300  0110B2  04E3               	decf	plusw1,w,c
 13301  0110B4  B0D8               	btfsc	status,0,c
 13302  0110B6  D79C               	goto	l10374
 13303  0110B8                     u9930:
 13304                           
 13305                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 13306                           ;stkvar	_i @ sp[(-56)+36]
 13307  0110B8  50E1               	movf	fsr1l,w,c
 13308  0110BA  0FEC               	addlw	-20
 13309  0110BC  6ED9               	movwf	fsr2l,c
 13310  0110BE  50E2               	movf	fsr1h,w,c
 13311  0110C0  6EDA               	movwf	fsr2h,c
 13312  0110C2  0EFF               	movlw	255
 13313  0110C4  22DA               	addwfc	fsr2h,f,c
 13314  0110C6  06DE               	decf	postinc2,f,c
 13315  0110C8  0E00               	movlw	0
 13316  0110CA  5ADD               	subwfb	postdec2,f,c
 13317                           
 13318                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 13319                           ;stkvar	_sign @ sp[(-56)+42]
 13320  0110CC  0EF2               	movlw	-14
 13321  0110CE  006F FF8C  F025    	movff	plusw1,btemp
 13322  0110D4  0EF3               	movlw	-13
 13323  0110D6  50E3               	movf	plusw1,w,c
 13324  0110D8  1025               	iorwf	btemp^0,w,c
 13325  0110DA  A4D8               	btfss	status,2,c
 13326  0110DC  D002               	goto	l10394
 13327  0110DE  0E2B               	movlw	43
 13328  0110E0  D001               	goto	L11
 13329  0110E2                     l10394:
 13330  0110E2  0E2D               	movlw	45
 13331  0110E4                     L11:
 13332  0110E4  6E2F               	movwf	(btemp+10)^0,c
 13333  0110E6  0E00               	movlw	0
 13334  0110E8  6E30               	movwf	(btemp+11)^0,c
 13335                           
 13336                           ;stkvar	_efgtoa$4987 @ sp[(-56)+4]
 13337  0110EA  0ECC               	movlw	-52
 13338  0110EC  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13339  0110F2  0ECD               	movlw	-51
 13340  0110F4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13341                           
 13342                           ;stkvar	_efgtoa$4987 @ sp[(-56)+4]
 13343                           ;stkvar	_i @ sp[(-56)+36]
 13344  0110FA  0EEC               	movlw	-20
 13345  0110FC  006F FF8C  F02F    	movff	plusw1,btemp+10
 13346  011102  0EED               	movlw	-19
 13347  011104  006F FF8C  F030    	movff	plusw1,btemp+11
 13348  01110A  0E94               	movlw	low _dbuf
 13349  01110C  242F               	addwf	(btemp+10)^0,w,c
 13350  01110E  6ED9               	movwf	fsr2l,c
 13351  011110  0E03               	movlw	high _dbuf
 13352  011112  2030               	addwfc	(btemp+11)^0,w,c
 13353  011114  6EDA               	movwf	fsr2h,c
 13354  011116  0ECC               	movlw	-52
 13355  011118  006F FF8F FFDF     	movff	plusw1,indf2
 13356                           
 13357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 13358                           ;stkvar	_w @ sp[(-56)+38]
 13359  01111E  50E1               	movf	fsr1l,w,c
 13360  011120  0FEE               	addlw	-18
 13361  011122  6ED9               	movwf	fsr2l,c
 13362  011124  50E2               	movf	fsr1h,w,c
 13363  011126  6EDA               	movwf	fsr2h,c
 13364  011128  0EFF               	movlw	255
 13365  01112A  22DA               	addwfc	fsr2h,f,c
 13366  01112C  06DE               	decf	postinc2,f,c
 13367  01112E  0E00               	movlw	0
 13368  011130  5ADD               	subwfb	postdec2,f,c
 13369                           
 13370                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 13371                           ;stkvar	_i @ sp[(-56)+36]
 13372  011132  50E1               	movf	fsr1l,w,c
 13373  011134  0FEC               	addlw	-20
 13374  011136  6ED9               	movwf	fsr2l,c
 13375  011138  50E2               	movf	fsr1h,w,c
 13376  01113A  6EDA               	movwf	fsr2h,c
 13377  01113C  0EFF               	movlw	255
 13378  01113E  22DA               	addwfc	fsr2h,f,c
 13379  011140  06DE               	decf	postinc2,f,c
 13380  011142  0E00               	movlw	0
 13381  011144  5ADD               	subwfb	postdec2,f,c
 13382  011146  0EBF               	movlw	191
 13383  011148  6E2F               	movwf	(btemp+10)^0,c
 13384  01114A  0EFF               	movlw	255
 13385  01114C  6E30               	movwf	(btemp+11)^0,c
 13386                           
 13387                           ;stkvar	_c @ sp[(-56)+-7]
 13388  01114E  0EC1               	movlw	-63
 13389  011150  50E3               	movf	plusw1,w,c
 13390  011152  6E2D               	movwf	(btemp+8)^0,c
 13391  011154  6A2E               	clrf	(btemp+9)^0,c
 13392  011156  502F               	movf	(btemp+10)^0,w,c
 13393  011158  262D               	addwf	(btemp+8)^0,f,c
 13394  01115A  5030               	movf	(btemp+11)^0,w,c
 13395  01115C  222E               	addwfc	(btemp+9)^0,f,c
 13396  01115E  502E               	movf	(btemp+9)^0,w,c
 13397  011160  E106               	bnz	u9950
 13398  011162  0E1A               	movlw	26
 13399  011164  5C2D               	subwf	(btemp+8)^0,w,c
 13400  011166  B0D8               	btfsc	status,0,c
 13401  011168  D002               	goto	u9950
 13402  01116A  0E01               	movlw	1
 13403  01116C  D001               	goto	u9960
 13404  01116E                     u9950:
 13405  01116E  0E00               	movlw	0
 13406  011170                     u9960:
 13407  011170  6E2F               	movwf	(btemp+10)^0,c
 13408  011172  6A30               	clrf	(btemp+11)^0,c
 13409                           
 13410                           ;stkvar	_efgtoa$4989 @ sp[(-56)+0]
 13411  011174  0EC8               	movlw	-56
 13412  011176  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13413  01117C  0EC9               	movlw	-55
 13414  01117E  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13415                           
 13416                           ;stkvar	_efgtoa$4989 @ sp[(-56)+0]
 13417  011184  0EC8               	movlw	-56
 13418  011186  006F FF8C  F025    	movff	plusw1,btemp
 13419  01118C  0EC9               	movlw	-55
 13420  01118E  50E3               	movf	plusw1,w,c
 13421  011190  1025               	iorwf	btemp^0,w,c
 13422  011192  A4D8               	btfss	status,2,c
 13423  011194  D002               	goto	l10410
 13424  011196  0E65               	movlw	101
 13425  011198  D001               	goto	L12
 13426  01119A                     l10410:
 13427  01119A  0E45               	movlw	69
 13428  01119C                     L12:
 13429  01119C  6E2F               	movwf	(btemp+10)^0,c
 13430  01119E  0E00               	movlw	0
 13431  0111A0  6E30               	movwf	(btemp+11)^0,c
 13432                           
 13433                           ;stkvar	_efgtoa$4988 @ sp[(-56)+2]
 13434  0111A2  0ECA               	movlw	-54
 13435  0111A4  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13436  0111AA  0ECB               	movlw	-53
 13437  0111AC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13438                           
 13439                           ;stkvar	_efgtoa$4988 @ sp[(-56)+2]
 13440                           ;stkvar	_i @ sp[(-56)+36]
 13441  0111B2  0EEC               	movlw	-20
 13442  0111B4  006F FF8C  F02F    	movff	plusw1,btemp+10
 13443  0111BA  0EED               	movlw	-19
 13444  0111BC  006F FF8C  F030    	movff	plusw1,btemp+11
 13445  0111C2  0E94               	movlw	low _dbuf
 13446  0111C4  242F               	addwf	(btemp+10)^0,w,c
 13447  0111C6  6ED9               	movwf	fsr2l,c
 13448  0111C8  0E03               	movlw	high _dbuf
 13449  0111CA  2030               	addwfc	(btemp+11)^0,w,c
 13450  0111CC  6EDA               	movwf	fsr2h,c
 13451  0111CE  0ECA               	movlw	-54
 13452  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 13453                           
 13454                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 13455                           ;stkvar	_w @ sp[(-56)+38]
 13456  0111D6  50E1               	movf	fsr1l,w,c
 13457  0111D8  0FEE               	addlw	-18
 13458  0111DA  6ED9               	movwf	fsr2l,c
 13459  0111DC  50E2               	movf	fsr1h,w,c
 13460  0111DE  6EDA               	movwf	fsr2h,c
 13461  0111E0  0EFF               	movlw	255
 13462  0111E2  22DA               	addwfc	fsr2h,f,c
 13463  0111E4  06DE               	decf	postinc2,f,c
 13464  0111E6  0E00               	movlw	0
 13465  0111E8  5ADD               	subwfb	postdec2,f,c
 13466                           
 13467                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 13468                           ;stkvar	_i @ sp[(-56)+36]
 13469  0111EA  0EEC               	movlw	-20
 13470  0111EC  006F FF8C  F02F    	movff	plusw1,btemp+10
 13471  0111F2  0EED               	movlw	-19
 13472  0111F4  006F FF8C  F030    	movff	plusw1,btemp+11
 13473  0111FA  0E94               	movlw	low _dbuf
 13474  0111FC  242F               	addwf	(btemp+10)^0,w,c
 13475  0111FE  6E2D               	movwf	(btemp+8)^0,c
 13476  011200  0E03               	movlw	high _dbuf
 13477  011202  2030               	addwfc	(btemp+11)^0,w,c
 13478  011204  6E2E               	movwf	(btemp+9)^0,c
 13479  011206  0060  F0B7  FFE6   	movff	btemp+8,postinc1
 13480  01120C  0060  F0BB  FFE6   	movff	btemp+9,postinc1
 13481                           
 13482                           ;stkvar	_n @ sp[(-58)+32]
 13483  011212  0E94               	movlw	low _dbuf
 13484  011214  6E2F               	movwf	(btemp+10)^0,c
 13485  011216  0E03               	movlw	high _dbuf
 13486  011218  6E30               	movwf	(btemp+11)^0,c
 13487  01121A  0EE6               	movlw	-26
 13488  01121C  50E3               	movf	plusw1,w,c
 13489  01121E  262F               	addwf	(btemp+10)^0,f,c
 13490  011220  0EE7               	movlw	-25
 13491  011222  50E3               	movf	plusw1,w,c
 13492  011224  2230               	addwfc	(btemp+11)^0,f,c
 13493  011226  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 13494  01122C  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 13495  011232  ECCC  F0B9         	call	_strcpy	;wreg free
 13496  011236  EF16  F081         	goto	l10162
 13497  01123A                     l2035:
 13498                           
 13499                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 13500  01123A  0EC1               	movlw	193
 13501  01123C  26E1               	addwf	fsr1l,f,c
 13502  01123E  0EFF               	movlw	255
 13503  011240  22E2               	addwfc	fsr1h,f,c
 13504  011242  0012               	return		;funcret
 13505  011244                     __end_of_efgtoa:
 13506                           	opt callstack 0
 13507                           
 13508 ;; *************** function _tolower *****************
 13509 ;; Defined at:
 13510 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 13511 ;; Parameters:    Size  Location     Type
 13512 ;;  c               2  [STACK] int 
 13513 ;; Auto vars:     Size  Location     Type
 13514 ;;		None
 13515 ;; Return value:  Size  Location     Type
 13516 ;;                  2  [STACK] int 
 13517 ;; Registers used:
 13518 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 13519 ;; Tracked objects:
 13520 ;;		On entry : 0/0
 13521 ;;		On exit  : 0/0
 13522 ;;		Unchanged: 0/0
 13523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13528 ;;Total ram usage:        0 bytes
 13529 ;; Hardware stack levels used:    1
 13530 ;; Hardware stack levels required when called:    8
 13531 ;; This function calls:
 13532 ;;		_isupper
 13533 ;; This function is called by:
 13534 ;;		_efgtoa
 13535 ;;		_vfpfcnvrt
 13536 ;; This function uses a reentrant model
 13537 ;;
 13538                           
 13539                           	psect	text49
 13540  017EA6                     __ptext49:
 13541                           	opt callstack 0
 13542  017EA6                     _tolower:
 13543                           	opt callstack 0
 13544                           
 13545                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13546  017EA6  52E6               	movf	postinc1,f,c
 13547  017EA8  52E6               	movf	postinc1,f,c
 13548                           
 13549                           ;stkvar	_c @ sp[(-2)+-2]
 13550                           
 13551                           ;incstack = 0
 13552  017EAA  0EFC               	movlw	-4
 13553  017EAC  50E3               	movf	plusw1,w,c
 13554  017EAE  0FBF               	addlw	191
 13555  017EB0  6E2F               	movwf	(btemp+10)^0,c
 13556  017EB2  0EFD               	movlw	-3
 13557  017EB4  006F FF8C  F030    	movff	plusw1,btemp+11
 13558  017EBA  0EFF               	movlw	255
 13559  017EBC  2230               	addwfc	(btemp+11)^0,f,c
 13560  017EBE  5030               	movf	(btemp+11)^0,w,c
 13561  017EC0  E106               	bnz	u4860
 13562  017EC2  0E1A               	movlw	26
 13563  017EC4  5C2F               	subwf	(btemp+10)^0,w,c
 13564  017EC6  B0D8               	btfsc	status,0,c
 13565  017EC8  D002               	goto	u4860
 13566  017ECA  0E01               	movlw	1
 13567  017ECC  D001               	goto	u4870
 13568  017ECE                     u4860:
 13569  017ECE  0E00               	movlw	0
 13570  017ED0                     u4870:
 13571  017ED0  6E2F               	movwf	(btemp+10)^0,c
 13572  017ED2  6A30               	clrf	(btemp+11)^0,c
 13573                           
 13574                           ;stkvar	_tolower$5655 @ sp[(-2)+0]
 13575  017ED4  0EFE               	movlw	-2
 13576  017ED6  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13577  017EDC  0EFF               	movlw	-1
 13578  017EDE  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13579                           
 13580                           ;stkvar	_tolower$5655 @ sp[(-2)+0]
 13581  017EE4  0EFE               	movlw	-2
 13582  017EE6  006F FF8C  F025    	movff	plusw1,btemp
 13583  017EEC  0EFF               	movlw	-1
 13584  017EEE  50E3               	movf	plusw1,w,c
 13585  017EF0  1025               	iorwf	btemp^0,w,c
 13586  017EF2  B4D8               	btfsc	status,2,c
 13587  017EF4  D00D               	goto	l6658
 13588                           
 13589                           ;stkvar	_c @ sp[(-2)+-2]
 13590  017EF6  0EFC               	movlw	-4
 13591  017EF8  006F FF8C  F025    	movff	plusw1,btemp
 13592  017EFE  0EFD               	movlw	-3
 13593  017F00  006F FF8C  F026    	movff	plusw1,btemp+1
 13594  017F06  0E20               	movlw	32
 13595  017F08  1225               	iorwf	btemp^0,f,c
 13596  017F0A  0E00               	movlw	0
 13597  017F0C  1226               	iorwf	(btemp+1)^0,f,c
 13598  017F0E  D008               	goto	l3058
 13599  017F10                     l6658:
 13600                           
 13601                           ;stkvar	_c @ sp[(-2)+-2]
 13602  017F10  0EFC               	movlw	-4
 13603  017F12  006F FF8C  F025    	movff	plusw1,btemp
 13604  017F18  0EFD               	movlw	-3
 13605  017F1A  006F FF8C  F026    	movff	plusw1,btemp+1
 13606  017F20                     l3058:
 13607                           
 13608                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13609  017F20  52E5               	movf	postdec1,f,c
 13610  017F22  52E5               	movf	postdec1,f,c
 13611  017F24  52E5               	movf	postdec1,f,c
 13612  017F26  52E5               	movf	postdec1,f,c
 13613  017F28  0012               	return		;funcret
 13614  017F2A                     __end_of_tolower:
 13615                           	opt callstack 0
 13616                           
 13617 ;; *************** function _isupper *****************
 13618 ;; Defined at:
 13619 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 13620 ;; Parameters:    Size  Location     Type
 13621 ;;  c               2  [STACK] int 
 13622 ;; Auto vars:     Size  Location     Type
 13623 ;;		None
 13624 ;; Return value:  Size  Location     Type
 13625 ;;                  2  [STACK] int 
 13626 ;; Registers used:
 13627 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 13628 ;; Tracked objects:
 13629 ;;		On entry : 0/0
 13630 ;;		On exit  : 0/0
 13631 ;;		Unchanged: 0/0
 13632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13637 ;;Total ram usage:        0 bytes
 13638 ;; Hardware stack levels used:    1
 13639 ;; Hardware stack levels required when called:    7
 13640 ;; This function calls:
 13641 ;;		Nothing
 13642 ;; This function is called by:
 13643 ;;		_efgtoa
 13644 ;;		_xtoa
 13645 ;;		_vfpfcnvrt
 13646 ;;		_tolower
 13647 ;; This function uses a reentrant model
 13648 ;;
 13649                           
 13650                           	psect	text50
 13651  018A4C                     __ptext50:
 13652                           	opt callstack 0
 13653  018A4C                     _isupper:
 13654                           	opt callstack 16
 13655                           
 13656                           ;stkvar	_c @ sp[(0)+-2]
 13657                           
 13658                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13659                           ;incstack = 0
 13660  018A4C  0EFE               	movlw	-2
 13661  018A4E  50E3               	movf	plusw1,w,c
 13662  018A50  0FBF               	addlw	191
 13663  018A52  6E2F               	movwf	(btemp+10)^0,c
 13664  018A54  0EFF               	movlw	-1
 13665  018A56  006F FF8C  F030    	movff	plusw1,btemp+11
 13666  018A5C  0EFF               	movlw	255
 13667  018A5E  2230               	addwfc	(btemp+11)^0,f,c
 13668  018A60  5030               	movf	(btemp+11)^0,w,c
 13669  018A62  E106               	bnz	u4680
 13670  018A64  0E1A               	movlw	26
 13671  018A66  5C2F               	subwf	(btemp+10)^0,w,c
 13672  018A68  B0D8               	btfsc	status,0,c
 13673  018A6A  D002               	goto	u4680
 13674  018A6C  0E01               	movlw	1
 13675  018A6E  D001               	goto	u4690
 13676  018A70                     u4680:
 13677  018A70  0E00               	movlw	0
 13678  018A72                     u4690:
 13679  018A72  6E25               	movwf	btemp^0,c
 13680  018A74  6A26               	clrf	(btemp+1)^0,c
 13681                           
 13682                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13683  018A76  52E5               	movf	postdec1,f,c
 13684  018A78  52E5               	movf	postdec1,f,c
 13685  018A7A  0012               	return		;funcret
 13686  018A7C                     __end_of_isupper:
 13687                           	opt callstack 0
 13688                           
 13689 ;; *************** function _strcpy *****************
 13690 ;; Defined at:
 13691 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 13692 ;; Parameters:    Size  Location     Type
 13693 ;;  dest            2  [STACK] PTR unsigned char 
 13694 ;;		 -> dbuf(80), 
 13695 ;;  src             2  [STACK] PTR const unsigned char 
 13696 ;;		 -> STR_51(4), STR_50(4), STR_47(4), STR_46(4), 
 13697 ;;		 -> dbuf(80), 
 13698 ;; Auto vars:     Size  Location     Type
 13699 ;;  d               2  [STACK] PTR unsigned char 
 13700 ;;		 -> dbuf(80), 
 13701 ;;  s               2  [STACK] PTR const unsigned char 
 13702 ;;		 -> STR_51(4), STR_50(4), STR_47(4), STR_46(4), 
 13703 ;;		 -> dbuf(80), 
 13704 ;; Return value:  Size  Location     Type
 13705 ;;                  2  [STACK] PTR unsigned char 
 13706 ;; Registers used:
 13707 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 13708 ;; Tracked objects:
 13709 ;;		On entry : 0/0
 13710 ;;		On exit  : 0/0
 13711 ;;		Unchanged: 0/0
 13712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13717 ;;Total ram usage:        0 bytes
 13718 ;; Hardware stack levels used:    1
 13719 ;; Hardware stack levels required when called:    7
 13720 ;; This function calls:
 13721 ;;		Nothing
 13722 ;; This function is called by:
 13723 ;;		_efgtoa
 13724 ;; This function uses a reentrant model
 13725 ;;
 13726                           
 13727                           	psect	text51
 13728  017398                     __ptext51:
 13729                           	opt callstack 0
 13730  017398                     _strcpy:
 13731                           	opt callstack 0
 13732                           
 13733                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13734  017398  52E6               	movf	postinc1,f,c
 13735  01739A  52E6               	movf	postinc1,f,c
 13736  01739C  52E6               	movf	postinc1,f,c
 13737  01739E  52E6               	movf	postinc1,f,c
 13738                           
 13739                           ;stkvar	_src @ sp[(-4)+-4]
 13740                           
 13741                           ;incstack = 0
 13742  0173A0  0EF8               	movlw	-8
 13743  0173A2  006F FF8C  F02F    	movff	plusw1,btemp+10
 13744  0173A8  0EF9               	movlw	-7
 13745  0173AA  006F FF8C  F030    	movff	plusw1,btemp+11
 13746                           
 13747                           ;stkvar	_s @ sp[(-4)+2]
 13748  0173B0  0EFF               	movlw	-1
 13749  0173B2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13750  0173B8  0EFE               	movlw	-2
 13751  0173BA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13752                           
 13753                           ;stkvar	_dest @ sp[(-4)+-2]
 13754  0173C0  0EFA               	movlw	-6
 13755  0173C2  006F FF8C  F02F    	movff	plusw1,btemp+10
 13756  0173C8  0EFB               	movlw	-5
 13757  0173CA  006F FF8C  F030    	movff	plusw1,btemp+11
 13758                           
 13759                           ;stkvar	_d @ sp[(-4)+0]
 13760  0173D0  0EFD               	movlw	-3
 13761  0173D2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13762  0173D8  0EFC               	movlw	-4
 13763  0173DA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13764  0173E0                     l10036:
 13765                           
 13766                           ;stkvar	_s @ sp[(-4)+2]
 13767  0173E0  50E1               	movf	fsr1l,w,c
 13768  0173E2  0FFE               	addlw	-2
 13769  0173E4  6ED9               	movwf	fsr2l,c
 13770  0173E6  50E2               	movf	fsr1h,w,c
 13771  0173E8  6EDA               	movwf	fsr2h,c
 13772  0173EA  0EFF               	movlw	255
 13773  0173EC  22DA               	addwfc	fsr2h,f,c
 13774  0173EE  006F FF7C  F02F    	movff	indf2,btemp+10
 13775  0173F4  0E01               	movlw	1
 13776  0173F6  26DE               	addwf	postinc2,f,c
 13777  0173F8  006F FF7C  F030    	movff	indf2,btemp+11
 13778  0173FE  0E00               	movlw	0
 13779  017400  22DD               	addwfc	postdec2,f,c
 13780  017402  0060  F0BF  FFF6   	movff	btemp+10,tblptrl
 13781  017408  0060  F0C3  FFF7   	movff	btemp+11,tblptrh
 13782  01740E  0E00               	movlw	low (__mediumconst shr (0+16))
 13783  017410  6EF8               	movwf	tblptru,c
 13784                           
 13785                           ;stkvar	_d @ sp[(-4)+0]
 13786  017412  50E1               	movf	fsr1l,w,c
 13787  017414  0FFC               	addlw	-4
 13788  017416  6ED9               	movwf	fsr2l,c
 13789  017418  50E2               	movf	fsr1h,w,c
 13790  01741A  6EDA               	movwf	fsr2h,c
 13791  01741C  0EFF               	movlw	255
 13792  01741E  22DA               	addwfc	fsr2h,f,c
 13793  017420  006F FF7C  F02F    	movff	indf2,btemp+10
 13794  017426  0E01               	movlw	1
 13795  017428  26DE               	addwf	postinc2,f,c
 13796  01742A  006F FF7C  F030    	movff	indf2,btemp+11
 13797  017430  0E00               	movlw	0
 13798  017432  22DD               	addwfc	postdec2,f,c
 13799  017434  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
 13800  01743A  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
 13801  017440  0E1F               	movlw	(high __ramtop+-1)
 13802  017442  64F7               	cpfsgt	tblptrh,c
 13803  017444  D003               	bra	u9267
 13804  017446  0008               	tblrd		*
 13805  017448  50F5               	movf	tablat,w,c
 13806  01744A  D007               	bra	u9260
 13807  01744C                     u9267:
 13808  01744C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13809  017452  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13810  017458  50EF               	movf	indf0,w,c
 13811  01745A                     u9260:
 13812  01745A  6EDF               	movwf	indf2,c
 13813  01745C  50DF               	movf	indf2,w,c
 13814  01745E  A4D8               	btfss	status,2,c
 13815  017460  D7BF               	goto	l10036
 13816                           
 13817                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 13818  017462  0EF8               	movlw	248
 13819  017464  26E1               	addwf	fsr1l,f,c
 13820  017466  0EFF               	movlw	255
 13821  017468  22E2               	addwfc	fsr1h,f,c
 13822  01746A  0012               	return		;funcret
 13823  01746C                     __end_of_strcpy:
 13824                           	opt callstack 0
 13825                           
 13826 ;; *************** function _floorf *****************
 13827 ;; Defined at:
 13828 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 13829 ;; Parameters:    Size  Location     Type
 13830 ;;  x               4  [STACK] float 
 13831 ;; Auto vars:     Size  Location     Type
 13832 ;;  u               4  [STACK] struct .
 13833 ;;  m               4  [STACK] unsigned long 
 13834 ;;  e               2  [STACK] int 
 13835 ;; Return value:  Size  Location     Type
 13836 ;;                  4  [STACK] float 
 13837 ;; Registers used:
 13838 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 13839 ;; Tracked objects:
 13840 ;;		On entry : 0/0
 13841 ;;		On exit  : 0/0
 13842 ;;		Unchanged: 0/0
 13843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13848 ;;Total ram usage:        0 bytes
 13849 ;; Hardware stack levels used:    1
 13850 ;; Hardware stack levels required when called:    7
 13851 ;; This function calls:
 13852 ;;		Nothing
 13853 ;; This function is called by:
 13854 ;;		_efgtoa
 13855 ;; This function uses a reentrant model
 13856 ;;
 13857                           
 13858                           	psect	text52
 13859  014856                     __ptext52:
 13860                           	opt callstack 0
 13861  014856                     _floorf:
 13862                           	opt callstack 0
 13863                           
 13864                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 13865  014856  0E0A               	movlw	10
 13866  014858  26E1               	addwf	fsr1l,f,c
 13867  01485A  0E00               	movlw	0
 13868  01485C  22E2               	addwfc	fsr1h,f,c
 13869                           
 13870                           ;incstack = 0
 13871  01485E  0060  F254  F02D   	movff	floorf@F524,btemp+8
 13872  014864  0060  F258  F02E   	movff	floorf@F524+1,btemp+9
 13873  01486A  0060  F25C  F02F   	movff	floorf@F524+2,btemp+10
 13874  014870  0060  F260  F030   	movff	floorf@F524+3,btemp+11
 13875                           
 13876                           ;stkvar	_u @ sp[(-10)+0]
 13877  014876  0EF6               	movlw	-10
 13878  014878  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 13879  01487E  0EF7               	movlw	-9
 13880  014880  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 13881  014886  0EF8               	movlw	-8
 13882  014888  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13883  01488E  0EF9               	movlw	-7
 13884  014890  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13885                           
 13886                           ;stkvar	_x @ sp[(-10)+-4]
 13887  014896  0EF2               	movlw	-14
 13888  014898  006F FF8C  F02D    	movff	plusw1,btemp+8
 13889  01489E  0EF3               	movlw	-13
 13890  0148A0  006F FF8C  F02E    	movff	plusw1,btemp+9
 13891  0148A6  0EF4               	movlw	-12
 13892  0148A8  006F FF8C  F02F    	movff	plusw1,btemp+10
 13893  0148AE  0EF5               	movlw	-11
 13894  0148B0  006F FF8C  F030    	movff	plusw1,btemp+11
 13895                           
 13896                           ;stkvar	_u @ sp[(-10)+0]
 13897  0148B6  0EF6               	movlw	-10
 13898  0148B8  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 13899  0148BE  0EF7               	movlw	-9
 13900  0148C0  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 13901  0148C6  0EF8               	movlw	-8
 13902  0148C8  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13903  0148CE  0EF9               	movlw	-7
 13904  0148D0  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13905  0148D6  0E81               	movlw	129
 13906  0148D8  6E2F               	movwf	(btemp+10)^0,c
 13907  0148DA  0EFF               	movlw	255
 13908  0148DC  6E30               	movwf	(btemp+11)^0,c
 13909                           
 13910                           ;stkvar	_u @ sp[(-10)+0]
 13911  0148DE  0EF6               	movlw	-10
 13912  0148E0  006F FF8C  F029    	movff	plusw1,btemp+4
 13913  0148E6  0EF7               	movlw	-9
 13914  0148E8  006F FF8C  F02A    	movff	plusw1,btemp+5
 13915  0148EE  0EF8               	movlw	-8
 13916  0148F0  006F FF8C  F02B    	movff	plusw1,btemp+6
 13917  0148F6  0EF9               	movlw	-7
 13918  0148F8  006F FF8C  F02C    	movff	plusw1,btemp+7
 13919  0148FE  0E18               	movlw	24
 13920  014900  D005               	goto	u4890
 13921  014902                     u4895:
 13922  014902  90D8               	bcf	status,0,c
 13923  014904  322C               	rrcf	(btemp+7)^0,f,c
 13924  014906  322B               	rrcf	(btemp+6)^0,f,c
 13925  014908  322A               	rrcf	(btemp+5)^0,f,c
 13926  01490A  3229               	rrcf	(btemp+4)^0,f,c
 13927  01490C                     u4890:
 13928  01490C  2EE8               	decfsz	wreg,f,c
 13929  01490E  D7F9               	goto	u4895
 13930  014910  0060  F0A4  F02D   	movff	btemp+4,btemp+8
 13931  014916  0060  F0A8  F02E   	movff	btemp+5,btemp+9
 13932  01491C  0EFF               	movlw	255
 13933  01491E  162D               	andwf	(btemp+8)^0,f,c
 13934  014920  0E00               	movlw	0
 13935  014922  162E               	andwf	(btemp+9)^0,f,c
 13936  014924  502F               	movf	(btemp+10)^0,w,c
 13937  014926  262D               	addwf	(btemp+8)^0,f,c
 13938  014928  5030               	movf	(btemp+11)^0,w,c
 13939  01492A  222E               	addwfc	(btemp+9)^0,f,c
 13940                           
 13941                           ;stkvar	_e @ sp[(-10)+8]
 13942  01492C  0EFE               	movlw	-2
 13943  01492E  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 13944  014934  0EFF               	movlw	-1
 13945  014936  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 13946                           
 13947                           ;stkvar	_e @ sp[(-10)+8]
 13948  01493C  0EFF               	movlw	-1
 13949  01493E  BEE3               	btfsc	plusw1,7,c
 13950  014940  D019               	goto	l6672
 13951  014942  0EFF               	movlw	-1
 13952  014944  50E3               	movf	plusw1,w,c
 13953  014946  E108               	bnz	u4900
 13954  014948  0EFE               	movlw	-2
 13955  01494A  006F FF8C  F025    	movff	plusw1,btemp
 13956  014950  0E17               	movlw	23
 13957  014952  5E25               	subwf	btemp^0,f,c
 13958  014954  A0D8               	btfss	status,0,c
 13959  014956  D00E               	goto	l6672
 13960  014958                     u4900:
 13961                           
 13962                           ;stkvar	_x @ sp[(-10)+-4]
 13963  014958  0EF2               	movlw	-14
 13964  01495A  006F FF8C  F025    	movff	plusw1,btemp
 13965  014960  0EF3               	movlw	-13
 13966  014962  006F FF8C  F026    	movff	plusw1,btemp+1
 13967  014968  0EF4               	movlw	-12
 13968  01496A  006F FF8C  F027    	movff	plusw1,btemp+2
 13969  014970  0EF5               	movlw	-11
 13970  014972  D11F               	goto	L13
 13971  014974                     l6672:
 13972                           
 13973                           ;stkvar	_e @ sp[(-10)+8]
 13974  014974  0EFF               	movlw	-1
 13975  014976  BEE3               	btfsc	plusw1,7,c
 13976  014978  D0B4               	goto	l6688
 13977                           
 13978                           ;stkvar	_e @ sp[(-10)+8]
 13979  01497A  0EFE               	movlw	-2
 13980  01497C  006F FF8C  F030    	movff	plusw1,btemp+11
 13981  014982  0EFF               	movlw	255
 13982  014984  6E29               	movwf	(btemp+4)^0,c
 13983  014986  0EFF               	movlw	255
 13984  014988  6E2A               	movwf	(btemp+5)^0,c
 13985  01498A  0E7F               	movlw	127
 13986  01498C  6E2B               	movwf	(btemp+6)^0,c
 13987  01498E  0E00               	movlw	0
 13988  014990  6E2C               	movwf	(btemp+7)^0,c
 13989  014992                     u4925:
 13990  014992  6630               	tstfsz	(btemp+11)^0,c
 13991  014994  D001               	goto	u4926
 13992  014996  D007               	goto	u4927
 13993  014998                     u4926:
 13994  014998  342C               	rlcf	(btemp+7)^0,w,c
 13995  01499A  322C               	rrcf	(btemp+7)^0,f,c
 13996  01499C  322B               	rrcf	(btemp+6)^0,f,c
 13997  01499E  322A               	rrcf	(btemp+5)^0,f,c
 13998  0149A0  3229               	rrcf	(btemp+4)^0,f,c
 13999  0149A2  2E30               	decfsz	(btemp+11)^0,f,c
 14000  0149A4  D7F6               	goto	u4925
 14001  0149A6                     u4927:
 14002                           
 14003                           ;stkvar	_m @ sp[(-10)+4]
 14004  0149A6  0EFA               	movlw	-6
 14005  0149A8  0060  F0A7  FFE3   	movff	btemp+4,plusw1
 14006  0149AE  0EFB               	movlw	-5
 14007  0149B0  0060  F0AB  FFE3   	movff	btemp+5,plusw1
 14008  0149B6  0EFC               	movlw	-4
 14009  0149B8  0060  F0AF  FFE3   	movff	btemp+6,plusw1
 14010  0149BE  0EFD               	movlw	-3
 14011  0149C0  0060  F0B3  FFE3   	movff	btemp+7,plusw1
 14012                           
 14013                           ;stkvar	_m @ sp[(-10)+4]
 14014                           ;stkvar	_u @ sp[(-10)+0]
 14015  0149C6  0EF6               	movlw	-10
 14016  0149C8  006F FF8C  F02D    	movff	plusw1,btemp+8
 14017  0149CE  0EF7               	movlw	-9
 14018  0149D0  006F FF8C  F02E    	movff	plusw1,btemp+9
 14019  0149D6  0EF8               	movlw	-8
 14020  0149D8  006F FF8C  F02F    	movff	plusw1,btemp+10
 14021  0149DE  0EF9               	movlw	-7
 14022  0149E0  006F FF8C  F030    	movff	plusw1,btemp+11
 14023  0149E6  0EFA               	movlw	-6
 14024  0149E8  50E3               	movf	plusw1,w,c
 14025  0149EA  162D               	andwf	(btemp+8)^0,f,c
 14026  0149EC  0EFB               	movlw	-5
 14027  0149EE  50E3               	movf	plusw1,w,c
 14028  0149F0  162E               	andwf	(btemp+9)^0,f,c
 14029  0149F2  0EFC               	movlw	-4
 14030  0149F4  50E3               	movf	plusw1,w,c
 14031  0149F6  162F               	andwf	(btemp+10)^0,f,c
 14032  0149F8  0EFD               	movlw	-3
 14033  0149FA  50E3               	movf	plusw1,w,c
 14034  0149FC  1630               	andwf	(btemp+11)^0,f,c
 14035  0149FE  502D               	movf	(btemp+8)^0,w,c
 14036  014A00  102E               	iorwf	(btemp+9)^0,w,c
 14037  014A02  102F               	iorwf	(btemp+10)^0,w,c
 14038  014A04  1030               	iorwf	(btemp+11)^0,w,c
 14039  014A06  B4D8               	btfsc	status,2,c
 14040  014A08  D7A7               	goto	u4900
 14041                           
 14042                           ;stkvar	_u @ sp[(-10)+0]
 14043  014A0A  0EF6               	movlw	-10
 14044  014A0C  006F FF8C  F02D    	movff	plusw1,btemp+8
 14045  014A12  0EF7               	movlw	-9
 14046  014A14  006F FF8C  F02E    	movff	plusw1,btemp+9
 14047  014A1A  0EF8               	movlw	-8
 14048  014A1C  006F FF8C  F02F    	movff	plusw1,btemp+10
 14049  014A22  0EF9               	movlw	-7
 14050  014A24  006F FF8C  F030    	movff	plusw1,btemp+11
 14051  014A2A  0E20               	movlw	32
 14052  014A2C  D005               	goto	u4940
 14053  014A2E                     u4945:
 14054  014A2E  90D8               	bcf	status,0,c
 14055  014A30  3230               	rrcf	(btemp+11)^0,f,c
 14056  014A32  322F               	rrcf	(btemp+10)^0,f,c
 14057  014A34  322E               	rrcf	(btemp+9)^0,f,c
 14058  014A36  322D               	rrcf	(btemp+8)^0,f,c
 14059  014A38                     u4940:
 14060  014A38  2EE8               	decfsz	wreg,f,c
 14061  014A3A  D7F9               	goto	u4945
 14062  014A3C  502D               	movf	(btemp+8)^0,w,c
 14063  014A3E  B4D8               	btfsc	status,2,c
 14064  014A40  D028               	goto	l6686
 14065                           
 14066                           ;stkvar	_m @ sp[(-10)+4]
 14067                           ;stkvar	_u @ sp[(-10)+0]
 14068  014A42  0EF6               	movlw	-10
 14069  014A44  50E3               	movf	plusw1,w,c
 14070  014A46  6E25               	movwf	btemp^0,c
 14071  014A48  0EFA               	movlw	-6
 14072  014A4A  50E3               	movf	plusw1,w,c
 14073  014A4C  2625               	addwf	btemp^0,f,c
 14074  014A4E  0EF6               	movlw	-10
 14075  014A50  0060  F097  FFE3   	movff	btemp,plusw1
 14076  014A56  0EF7               	movlw	-9
 14077  014A58  50E3               	movf	plusw1,w,c
 14078  014A5A  6E25               	movwf	btemp^0,c
 14079  014A5C  0EFB               	movlw	-5
 14080  014A5E  50E3               	movf	plusw1,w,c
 14081  014A60  2225               	addwfc	btemp^0,f,c
 14082  014A62  0EF7               	movlw	-9
 14083  014A64  0060  F097  FFE3   	movff	btemp,plusw1
 14084  014A6A  0EF8               	movlw	-8
 14085  014A6C  50E3               	movf	plusw1,w,c
 14086  014A6E  6E25               	movwf	btemp^0,c
 14087  014A70  0EFC               	movlw	-4
 14088  014A72  50E3               	movf	plusw1,w,c
 14089  014A74  2225               	addwfc	btemp^0,f,c
 14090  014A76  0EF8               	movlw	-8
 14091  014A78  0060  F097  FFE3   	movff	btemp,plusw1
 14092  014A7E  0EF9               	movlw	-7
 14093  014A80  50E3               	movf	plusw1,w,c
 14094  014A82  6E25               	movwf	btemp^0,c
 14095  014A84  0EFD               	movlw	-3
 14096  014A86  50E3               	movf	plusw1,w,c
 14097  014A88  2225               	addwfc	btemp^0,f,c
 14098  014A8A  0EF9               	movlw	-7
 14099  014A8C  0060  F097  FFE3   	movff	btemp,plusw1
 14100  014A92                     l6686:
 14101                           
 14102                           ;stkvar	_m @ sp[(-10)+4]
 14103  014A92  0EFA               	movlw	-6
 14104  014A94  006F FF8C  F02D    	movff	plusw1,btemp+8
 14105  014A9A  0EFB               	movlw	-5
 14106  014A9C  006F FF8C  F02E    	movff	plusw1,btemp+9
 14107  014AA2  0EFC               	movlw	-4
 14108  014AA4  006F FF8C  F02F    	movff	plusw1,btemp+10
 14109  014AAA  0EFD               	movlw	-3
 14110  014AAC  006F FF8C  F030    	movff	plusw1,btemp+11
 14111  014AB2  1C2D               	comf	(btemp+8)^0,w,c
 14112  014AB4  6E29               	movwf	(btemp+4)^0,c
 14113  014AB6  1C2E               	comf	(btemp+9)^0,w,c
 14114  014AB8  6E2A               	movwf	(btemp+5)^0,c
 14115  014ABA  1C2F               	comf	(btemp+10)^0,w,c
 14116  014ABC  6E2B               	movwf	(btemp+6)^0,c
 14117  014ABE  1C30               	comf	(btemp+11)^0,w,c
 14118  014AC0  6E2C               	movwf	(btemp+7)^0,c
 14119                           
 14120                           ;stkvar	_u @ sp[(-10)+0]
 14121  014AC2  50E1               	movf	fsr1l,w,c
 14122  014AC4  0FF6               	addlw	-10
 14123  014AC6  6ED9               	movwf	fsr2l,c
 14124  014AC8  50E2               	movf	fsr1h,w,c
 14125  014ACA  6EDA               	movwf	fsr2h,c
 14126  014ACC  0EFF               	movlw	255
 14127  014ACE  22DA               	addwfc	fsr2h,f,c
 14128  014AD0  5029               	movf	(btemp+4)^0,w,c
 14129  014AD2  16DE               	andwf	postinc2,f,c
 14130  014AD4  502A               	movf	(btemp+5)^0,w,c
 14131  014AD6  16DE               	andwf	postinc2,f,c
 14132  014AD8  502B               	movf	(btemp+6)^0,w,c
 14133  014ADA  16DE               	andwf	postinc2,f,c
 14134  014ADC  502C               	movf	(btemp+7)^0,w,c
 14135  014ADE  16DE               	andwf	postinc2,f,c
 14136  014AE0  D05B               	goto	l6696
 14137  014AE2                     l6688:
 14138                           
 14139                           ;stkvar	_u @ sp[(-10)+0]
 14140  014AE2  0EF6               	movlw	-10
 14141  014AE4  006F FF8C  F02D    	movff	plusw1,btemp+8
 14142  014AEA  0EF7               	movlw	-9
 14143  014AEC  006F FF8C  F02E    	movff	plusw1,btemp+9
 14144  014AF2  0EF8               	movlw	-8
 14145  014AF4  006F FF8C  F02F    	movff	plusw1,btemp+10
 14146  014AFA  0EF9               	movlw	-7
 14147  014AFC  006F FF8C  F030    	movff	plusw1,btemp+11
 14148  014B02  0E20               	movlw	32
 14149  014B04  D005               	goto	u4960
 14150  014B06                     u4965:
 14151  014B06  90D8               	bcf	status,0,c
 14152  014B08  3230               	rrcf	(btemp+11)^0,f,c
 14153  014B0A  322F               	rrcf	(btemp+10)^0,f,c
 14154  014B0C  322E               	rrcf	(btemp+9)^0,f,c
 14155  014B0E  322D               	rrcf	(btemp+8)^0,f,c
 14156  014B10                     u4960:
 14157  014B10  2EE8               	decfsz	wreg,f,c
 14158  014B12  D7F9               	goto	u4965
 14159  014B14  662D               	tstfsz	(btemp+8)^0,c
 14160  014B16  D009               	goto	l6692
 14161                           
 14162                           ;stkvar	_u @ sp[(-10)+0]
 14163  014B18  0EF6               	movlw	-10
 14164  014B1A  6AE3               	clrf	plusw1,c
 14165  014B1C  0EF7               	movlw	-9
 14166  014B1E  6AE3               	clrf	plusw1,c
 14167  014B20  0EF8               	movlw	-8
 14168  014B22  6AE3               	clrf	plusw1,c
 14169  014B24  0EF9               	movlw	-7
 14170  014B26  6AE3               	clrf	plusw1,c
 14171  014B28  D037               	goto	l6696
 14172  014B2A                     l6692:
 14173                           
 14174                           ;stkvar	_u @ sp[(-10)+0]
 14175  014B2A  0EF6               	movlw	-10
 14176  014B2C  006F FF8C  F02D    	movff	plusw1,btemp+8
 14177  014B32  0EF7               	movlw	-9
 14178  014B34  006F FF8C  F02E    	movff	plusw1,btemp+9
 14179  014B3A  0EF8               	movlw	-8
 14180  014B3C  006F FF8C  F02F    	movff	plusw1,btemp+10
 14181  014B42  0EF9               	movlw	-7
 14182  014B44  006F FF8C  F030    	movff	plusw1,btemp+11
 14183  014B4A  90D8               	bcf	status,0,c
 14184  014B4C  342D               	rlcf	(btemp+8)^0,w,c
 14185  014B4E  6E29               	movwf	(btemp+4)^0,c
 14186  014B50  342E               	rlcf	(btemp+9)^0,w,c
 14187  014B52  6E2A               	movwf	(btemp+5)^0,c
 14188  014B54  342F               	rlcf	(btemp+10)^0,w,c
 14189  014B56  6E2B               	movwf	(btemp+6)^0,c
 14190  014B58  3430               	rlcf	(btemp+11)^0,w,c
 14191  014B5A  6E2C               	movwf	(btemp+7)^0,c
 14192  014B5C  5029               	movf	(btemp+4)^0,w,c
 14193  014B5E  102A               	iorwf	(btemp+5)^0,w,c
 14194  014B60  102B               	iorwf	(btemp+6)^0,w,c
 14195  014B62  102C               	iorwf	(btemp+7)^0,w,c
 14196  014B64  B4D8               	btfsc	status,2,c
 14197  014B66  D018               	goto	l6696
 14198  014B68  0E00               	movlw	0
 14199  014B6A  6E2D               	movwf	(btemp+8)^0,c
 14200  014B6C  0E00               	movlw	0
 14201  014B6E  6E2E               	movwf	(btemp+9)^0,c
 14202  014B70  0E80               	movlw	128
 14203  014B72  6E2F               	movwf	(btemp+10)^0,c
 14204  014B74  0EBF               	movlw	191
 14205  014B76  6E30               	movwf	(btemp+11)^0,c
 14206                           
 14207                           ;stkvar	_u @ sp[(-10)+0]
 14208  014B78  0EF6               	movlw	-10
 14209  014B7A  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14210  014B80  0EF7               	movlw	-9
 14211  014B82  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 14212  014B88  0EF8               	movlw	-8
 14213  014B8A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 14214  014B90  0EF9               	movlw	-7
 14215  014B92  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 14216  014B98                     l6696:
 14217                           
 14218                           ;stkvar	_u @ sp[(-10)+0]
 14219  014B98  0EF6               	movlw	-10
 14220  014B9A  006F FF8C  F025    	movff	plusw1,btemp
 14221  014BA0  0EF7               	movlw	-9
 14222  014BA2  006F FF8C  F026    	movff	plusw1,btemp+1
 14223  014BA8  0EF8               	movlw	-8
 14224  014BAA  006F FF8C  F027    	movff	plusw1,btemp+2
 14225  014BB0  0EF9               	movlw	-7
 14226  014BB2                     L13:
 14227  014BB2  006F FF8C  F028    	movff	plusw1,btemp+3
 14228                           
 14229                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14230  014BB8  0EF2               	movlw	242
 14231  014BBA  26E1               	addwf	fsr1l,f,c
 14232  014BBC  0EFF               	movlw	255
 14233  014BBE  22E2               	addwfc	fsr1h,f,c
 14234  014BC0  0012               	return		;funcret
 14235  014BC2                     __end_of_floorf:
 14236                           	opt callstack 0
 14237                           
 14238 ;; *************** function ___fpclassifyf *****************
 14239 ;; Defined at:
 14240 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 14241 ;; Parameters:    Size  Location     Type
 14242 ;;  x               4  [STACK] float 
 14243 ;; Auto vars:     Size  Location     Type
 14244 ;;  u               4  [STACK] struct .
 14245 ;;  e               2  [STACK] int 
 14246 ;; Return value:  Size  Location     Type
 14247 ;;                  2  [STACK] int 
 14248 ;; Registers used:
 14249 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 14250 ;; Tracked objects:
 14251 ;;		On entry : 0/0
 14252 ;;		On exit  : 0/0
 14253 ;;		Unchanged: 0/0
 14254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14259 ;;Total ram usage:        0 bytes
 14260 ;; Hardware stack levels used:    1
 14261 ;; Hardware stack levels required when called:    7
 14262 ;; This function calls:
 14263 ;;		Nothing
 14264 ;; This function is called by:
 14265 ;;		_efgtoa
 14266 ;; This function uses a reentrant model
 14267 ;;
 14268                           
 14269                           	psect	text53
 14270  016318                     __ptext53:
 14271                           	opt callstack 0
 14272  016318                     ___fpclassifyf:
 14273                           	opt callstack 0
 14274                           
 14275                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14276  016318  0E06               	movlw	6
 14277  01631A  26E1               	addwf	fsr1l,f,c
 14278  01631C  0E00               	movlw	0
 14279  01631E  22E2               	addwfc	fsr1h,f,c
 14280                           
 14281                           ;incstack = 0
 14282  016320  0060  F264  F02D   	movff	___fpclassifyf@F463,btemp+8
 14283  016326  0060  F268  F02E   	movff	___fpclassifyf@F463+1,btemp+9
 14284  01632C  0060  F26C  F02F   	movff	___fpclassifyf@F463+2,btemp+10
 14285  016332  0060  F270  F030   	movff	___fpclassifyf@F463+3,btemp+11
 14286                           
 14287                           ;stkvar	_u @ sp[(-6)+0]
 14288  016338  0EFA               	movlw	-6
 14289  01633A  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14290  016340  0EFB               	movlw	-5
 14291  016342  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 14292  016348  0EFC               	movlw	-4
 14293  01634A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 14294  016350  0EFD               	movlw	-3
 14295  016352  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 14296                           
 14297                           ;stkvar	_x @ sp[(-6)+-4]
 14298  016358  0EF6               	movlw	-10
 14299  01635A  006F FF8C  F02D    	movff	plusw1,btemp+8
 14300  016360  0EF7               	movlw	-9
 14301  016362  006F FF8C  F02E    	movff	plusw1,btemp+9
 14302  016368  0EF8               	movlw	-8
 14303  01636A  006F FF8C  F02F    	movff	plusw1,btemp+10
 14304  016370  0EF9               	movlw	-7
 14305  016372  006F FF8C  F030    	movff	plusw1,btemp+11
 14306                           
 14307                           ;stkvar	_u @ sp[(-6)+0]
 14308  016378  0EFA               	movlw	-6
 14309  01637A  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14310  016380  0EFB               	movlw	-5
 14311  016382  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 14312  016388  0EFC               	movlw	-4
 14313  01638A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 14314  016390  0EFD               	movlw	-3
 14315  016392  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 14316                           
 14317                           ;stkvar	_u @ sp[(-6)+0]
 14318  016398  0EFA               	movlw	-6
 14319  01639A  006F FF8C  F02D    	movff	plusw1,btemp+8
 14320  0163A0  0EFB               	movlw	-5
 14321  0163A2  006F FF8C  F02E    	movff	plusw1,btemp+9
 14322  0163A8  0EFC               	movlw	-4
 14323  0163AA  006F FF8C  F02F    	movff	plusw1,btemp+10
 14324  0163B0  0EFD               	movlw	-3
 14325  0163B2  006F FF8C  F030    	movff	plusw1,btemp+11
 14326  0163B8  0E18               	movlw	24
 14327  0163BA  D005               	goto	u4770
 14328  0163BC                     u4775:
 14329  0163BC  90D8               	bcf	status,0,c
 14330  0163BE  3230               	rrcf	(btemp+11)^0,f,c
 14331  0163C0  322F               	rrcf	(btemp+10)^0,f,c
 14332  0163C2  322E               	rrcf	(btemp+9)^0,f,c
 14333  0163C4  322D               	rrcf	(btemp+8)^0,f,c
 14334  0163C6                     u4770:
 14335  0163C6  2EE8               	decfsz	wreg,f,c
 14336  0163C8  D7F9               	goto	u4775
 14337  0163CA  0060  F0B4  F02B   	movff	btemp+8,btemp+6
 14338  0163D0  0060  F0B8  F02C   	movff	btemp+9,btemp+7
 14339  0163D6  0EFF               	movlw	255
 14340  0163D8  162B               	andwf	(btemp+6)^0,f,c
 14341  0163DA  0E00               	movlw	0
 14342  0163DC  162C               	andwf	(btemp+7)^0,f,c
 14343                           
 14344                           ;stkvar	_e @ sp[(-6)+4]
 14345  0163DE  0EFE               	movlw	-2
 14346  0163E0  0060  F0AF  FFE3   	movff	btemp+6,plusw1
 14347  0163E6  0EFF               	movlw	-1
 14348  0163E8  0060  F0B3  FFE3   	movff	btemp+7,plusw1
 14349                           
 14350                           ;stkvar	_e @ sp[(-6)+4]
 14351  0163EE  0EFE               	movlw	-2
 14352  0163F0  006F FF8C  F025    	movff	plusw1,btemp
 14353  0163F6  0EFF               	movlw	-1
 14354  0163F8  50E3               	movf	plusw1,w,c
 14355  0163FA  1025               	iorwf	btemp^0,w,c
 14356  0163FC  A4D8               	btfss	status,2,c
 14357  0163FE  D023               	goto	l6634
 14358                           
 14359                           ;stkvar	_u @ sp[(-6)+0]
 14360  016400  0EFA               	movlw	-6
 14361  016402  006F FF8C  F02D    	movff	plusw1,btemp+8
 14362  016408  0EFB               	movlw	-5
 14363  01640A  006F FF8C  F02E    	movff	plusw1,btemp+9
 14364  016410  0EFC               	movlw	-4
 14365  016412  006F FF8C  F02F    	movff	plusw1,btemp+10
 14366  016418  0EFD               	movlw	-3
 14367  01641A  006F FF8C  F030    	movff	plusw1,btemp+11
 14368  016420  90D8               	bcf	status,0,c
 14369  016422  342D               	rlcf	(btemp+8)^0,w,c
 14370  016424  6E29               	movwf	(btemp+4)^0,c
 14371  016426  342E               	rlcf	(btemp+9)^0,w,c
 14372  016428  6E2A               	movwf	(btemp+5)^0,c
 14373  01642A  342F               	rlcf	(btemp+10)^0,w,c
 14374  01642C  6E2B               	movwf	(btemp+6)^0,c
 14375  01642E  3430               	rlcf	(btemp+11)^0,w,c
 14376  016430  6E2C               	movwf	(btemp+7)^0,c
 14377  016432  5029               	movf	(btemp+4)^0,w,c
 14378  016434  102A               	iorwf	(btemp+5)^0,w,c
 14379  016436  102B               	iorwf	(btemp+6)^0,w,c
 14380  016438  102C               	iorwf	(btemp+7)^0,w,c
 14381  01643A  A4D8               	btfss	status,2,c
 14382  01643C  D002               	goto	l6630
 14383  01643E  0E02               	movlw	2
 14384  016440  D02E               	goto	L14
 14385  016442                     l6630:
 14386  016442  0E03               	movlw	3
 14387  016444  D02C               	goto	L14
 14388  016446                     l6634:
 14389                           
 14390                           ;stkvar	_e @ sp[(-6)+4]
 14391  016446  0EFE               	movlw	-2
 14392  016448  28E3               	incf	plusw1,w,c
 14393  01644A  E128               	bnz	l6640
 14394  01644C  0EFF               	movlw	-1
 14395  01644E  50E3               	movf	plusw1,w,c
 14396  016450  A4D8               	btfss	status,2,c
 14397  016452  D024               	goto	l6640
 14398                           
 14399                           ;stkvar	_u @ sp[(-6)+0]
 14400  016454  0EFA               	movlw	-6
 14401  016456  006F FF8C  F02D    	movff	plusw1,btemp+8
 14402  01645C  0EFB               	movlw	-5
 14403  01645E  006F FF8C  F02E    	movff	plusw1,btemp+9
 14404  016464  0EFC               	movlw	-4
 14405  016466  006F FF8C  F02F    	movff	plusw1,btemp+10
 14406  01646C  0EFD               	movlw	-3
 14407  01646E  006F FF8C  F030    	movff	plusw1,btemp+11
 14408  016474  0E09               	movlw	9
 14409  016476                     u4815:
 14410  016476  90D8               	bcf	status,0,c
 14411  016478  362D               	rlcf	(btemp+8)^0,f,c
 14412  01647A  362E               	rlcf	(btemp+9)^0,f,c
 14413  01647C  362F               	rlcf	(btemp+10)^0,f,c
 14414  01647E  3630               	rlcf	(btemp+11)^0,f,c
 14415  016480  2EE8               	decfsz	wreg,f,c
 14416  016482  D7F9               	goto	u4815
 14417  016484  502D               	movf	(btemp+8)^0,w,c
 14418  016486  102E               	iorwf	(btemp+9)^0,w,c
 14419  016488  102F               	iorwf	(btemp+10)^0,w,c
 14420  01648A  1030               	iorwf	(btemp+11)^0,w,c
 14421  01648C  A4D8               	btfss	status,2,c
 14422  01648E  D002               	goto	u4820
 14423  016490  0E01               	movlw	1
 14424  016492  D001               	goto	u4830
 14425  016494                     u4820:
 14426  016494  0E00               	movlw	0
 14427  016496                     u4830:
 14428  016496  6E25               	movwf	btemp^0,c
 14429  016498  6A26               	clrf	(btemp+1)^0,c
 14430  01649A  D004               	goto	l2894
 14431  01649C                     l6640:
 14432  01649C  0E04               	movlw	4
 14433  01649E                     L14:
 14434  01649E  6E25               	movwf	btemp^0,c
 14435  0164A0  0E00               	movlw	0
 14436  0164A2  6E26               	movwf	(btemp+1)^0,c
 14437  0164A4                     l2894:
 14438                           
 14439                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 14440  0164A4  0EF6               	movlw	246
 14441  0164A6  26E1               	addwf	fsr1l,f,c
 14442  0164A8  0EFF               	movlw	255
 14443  0164AA  22E2               	addwfc	fsr1h,f,c
 14444  0164AC  0012               	return		;funcret
 14445  0164AE                     __end_of___fpclassifyf:
 14446                           	opt callstack 0
 14447                           
 14448 ;; *************** function ___fltol *****************
 14449 ;; Defined at:
 14450 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 14451 ;; Parameters:    Size  Location     Type
 14452 ;;  f1              4  [STACK] int 
 14453 ;; Auto vars:     Size  Location     Type
 14454 ;;  exp1            1  [STACK] unsigned char 
 14455 ;;  sign1           1  [STACK] unsigned char 
 14456 ;; Return value:  Size  Location     Type
 14457 ;;                  4  [STACK] long 
 14458 ;; Registers used:
 14459 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 14460 ;; Tracked objects:
 14461 ;;		On entry : 0/0
 14462 ;;		On exit  : 0/0
 14463 ;;		Unchanged: 0/0
 14464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14469 ;;Total ram usage:        0 bytes
 14470 ;; Hardware stack levels used:    1
 14471 ;; Hardware stack levels required when called:    7
 14472 ;; This function calls:
 14473 ;;		Nothing
 14474 ;; This function is called by:
 14475 ;;		_efgtoa
 14476 ;; This function uses a reentrant model
 14477 ;;
 14478                           
 14479                           	psect	text54
 14480  0164AE                     __ptext54:
 14481                           	opt callstack 0
 14482  0164AE                     ___fltol:
 14483                           	opt callstack 0
 14484                           
 14485                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14486  0164AE  52E6               	movf	postinc1,f,c
 14487  0164B0  52E6               	movf	postinc1,f,c
 14488                           
 14489                           ;stkvar	_f1 @ sp[(-2)+-4]
 14490                           
 14491                           ;incstack = 0
 14492  0164B2  0EFA               	movlw	-6
 14493  0164B4  006F FF8C  F02D    	movff	plusw1,btemp+8
 14494  0164BA  0EFB               	movlw	-5
 14495  0164BC  006F FF8C  F02E    	movff	plusw1,btemp+9
 14496  0164C2  0EFC               	movlw	-4
 14497  0164C4  006F FF8C  F02F    	movff	plusw1,btemp+10
 14498  0164CA  0EFD               	movlw	-3
 14499  0164CC  006F FF8C  F030    	movff	plusw1,btemp+11
 14500  0164D2  0E18               	movlw	24
 14501  0164D4  D005               	goto	u5740
 14502  0164D6                     u5745:
 14503  0164D6  90D8               	bcf	status,0,c
 14504  0164D8  3230               	rrcf	(btemp+11)^0,f,c
 14505  0164DA  322F               	rrcf	(btemp+10)^0,f,c
 14506  0164DC  322E               	rrcf	(btemp+9)^0,f,c
 14507  0164DE  322D               	rrcf	(btemp+8)^0,f,c
 14508  0164E0                     u5740:
 14509  0164E0  2EE8               	decfsz	wreg,f,c
 14510  0164E2  D7F9               	goto	u5745
 14511                           
 14512                           ;stkvar	_exp1 @ sp[(-2)+0]
 14513  0164E4  0EFE               	movlw	-2
 14514  0164E6  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14515  0164EC  0EFE               	movlw	-2
 14516  0164EE  50E3               	movf	plusw1,w,c
 14517  0164F0  A4D8               	btfss	status,2,c
 14518  0164F2  D006               	goto	l7104
 14519  0164F4                     u5750:
 14520  0164F4  0E00               	movlw	0
 14521  0164F6  6E25               	movwf	btemp^0,c
 14522  0164F8  6A26               	clrf	(btemp+1)^0,c
 14523  0164FA  6A27               	clrf	(btemp+2)^0,c
 14524  0164FC  6A28               	clrf	(btemp+3)^0,c
 14525  0164FE  D08B               	goto	l2510
 14526  016500                     l7104:
 14527                           
 14528                           ;stkvar	_f1 @ sp[(-2)+-4]
 14529  016500  0EFA               	movlw	-6
 14530  016502  006F FF8C  F02D    	movff	plusw1,btemp+8
 14531  016508  0EFB               	movlw	-5
 14532  01650A  006F FF8C  F02E    	movff	plusw1,btemp+9
 14533  016510  0EFC               	movlw	-4
 14534  016512  006F FF8C  F02F    	movff	plusw1,btemp+10
 14535  016518  0EFD               	movlw	-3
 14536  01651A  006F FF8C  F030    	movff	plusw1,btemp+11
 14537  016520  0E20               	movlw	32
 14538  016522  D005               	goto	u5760
 14539  016524                     u5765:
 14540  016524  90D8               	bcf	status,0,c
 14541  016526  3230               	rrcf	(btemp+11)^0,f,c
 14542  016528  322F               	rrcf	(btemp+10)^0,f,c
 14543  01652A  322E               	rrcf	(btemp+9)^0,f,c
 14544  01652C  322D               	rrcf	(btemp+8)^0,f,c
 14545  01652E                     u5760:
 14546  01652E  2EE8               	decfsz	wreg,f,c
 14547  016530  D7F9               	goto	u5765
 14548                           
 14549                           ;stkvar	_sign1 @ sp[(-2)+1]
 14550  016532  0EFF               	movlw	-1
 14551  016534  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14552                           
 14553                           ;stkvar	_f1 @ sp[(-2)+-4]
 14554  01653A  0EFC               	movlw	-4
 14555  01653C  8EE3               	bsf	plusw1,7,c
 14556                           
 14557                           ;stkvar	_f1 @ sp[(-2)+-4]
 14558  01653E  50E1               	movf	fsr1l,w,c
 14559  016540  0FFA               	addlw	-6
 14560  016542  6ED9               	movwf	fsr2l,c
 14561  016544  50E2               	movf	fsr1h,w,c
 14562  016546  6EDA               	movwf	fsr2h,c
 14563  016548  0EFF               	movlw	255
 14564  01654A  22DA               	addwfc	fsr2h,f,c
 14565  01654C  0EFF               	movlw	255
 14566  01654E  16DE               	andwf	postinc2,f,c
 14567  016550  0EFF               	movlw	255
 14568  016552  16DE               	andwf	postinc2,f,c
 14569  016554  0EFF               	movlw	255
 14570  016556  16DE               	andwf	postinc2,f,c
 14571  016558  0E00               	movlw	0
 14572  01655A  16DE               	andwf	postinc2,f,c
 14573                           
 14574                           ;stkvar	_exp1 @ sp[(-2)+0]
 14575  01655C  0EFE               	movlw	-2
 14576  01655E  006F FF8C  F025    	movff	plusw1,btemp
 14577  016564  0E96               	movlw	150
 14578  016566  5E25               	subwf	btemp^0,f,c
 14579  016568  0EFE               	movlw	-2
 14580  01656A  0060  F097  FFE3   	movff	btemp,plusw1
 14581                           
 14582                           ;stkvar	_exp1 @ sp[(-2)+0]
 14583  016570  0EFE               	movlw	-2
 14584  016572  AEE3               	btfss	plusw1,7,c
 14585  016574  D014               	goto	l7122
 14586                           
 14587                           ;stkvar	_exp1 @ sp[(-2)+0]
 14588  016576  0EFE               	movlw	-2
 14589  016578  50E3               	movf	plusw1,w,c
 14590  01657A  0A80               	xorlw	128
 14591  01657C  0F97               	addlw	151
 14592  01657E  A0D8               	btfss	status,0,c
 14593  016580  D7B9               	goto	u5750
 14594  016582                     l7120:
 14595                           
 14596                           ;stkvar	_f1 @ sp[(-2)+-4]
 14597  016582  90D8               	bcf	status,0,c
 14598  016584  0EFD               	movlw	-3
 14599  016586  32E3               	rrcf	plusw1,f,c
 14600  016588  0EFC               	movlw	-4
 14601  01658A  32E3               	rrcf	plusw1,f,c
 14602  01658C  0EFB               	movlw	-5
 14603  01658E  32E3               	rrcf	plusw1,f,c
 14604  016590  0EFA               	movlw	-6
 14605  016592  32E3               	rrcf	plusw1,f,c
 14606                           
 14607                           ;stkvar	_exp1 @ sp[(-2)+0]
 14608  016594  0EFE               	movlw	-2
 14609  016596  2AE3               	incf	plusw1,f,c
 14610  016598  B4D8               	btfsc	status,2,c
 14611  01659A  D018               	goto	u5810
 14612  01659C  D7F2               	goto	l7120
 14613  01659E                     l7122:
 14614                           
 14615                           ;stkvar	_exp1 @ sp[(-2)+0]
 14616  01659E  0EFE               	movlw	-2
 14617  0165A0  006F FF8C  F025    	movff	plusw1,btemp
 14618  0165A6  0E1F               	movlw	31
 14619  0165A8  6425               	cpfsgt	btemp^0,c
 14620  0165AA  D00C               	goto	l7130
 14621  0165AC  D7A3               	goto	u5750
 14622  0165AE                     l7128:
 14623                           
 14624                           ;stkvar	_f1 @ sp[(-2)+-4]
 14625  0165AE  90D8               	bcf	status,0,c
 14626  0165B0  0EFA               	movlw	-6
 14627  0165B2  36E3               	rlcf	plusw1,f,c
 14628  0165B4  0EFB               	movlw	-5
 14629  0165B6  36E3               	rlcf	plusw1,f,c
 14630  0165B8  0EFC               	movlw	-4
 14631  0165BA  36E3               	rlcf	plusw1,f,c
 14632  0165BC  0EFD               	movlw	-3
 14633  0165BE  36E3               	rlcf	plusw1,f,c
 14634                           
 14635                           ;stkvar	_exp1 @ sp[(-2)+0]
 14636  0165C0  0EFE               	movlw	-2
 14637  0165C2  06E3               	decf	plusw1,f,c
 14638  0165C4                     l7130:
 14639                           
 14640                           ;stkvar	_exp1 @ sp[(-2)+0]
 14641  0165C4  0EFE               	movlw	-2
 14642  0165C6  50E3               	movf	plusw1,w,c
 14643  0165C8  A4D8               	btfss	status,2,c
 14644  0165CA  D7F1               	goto	l7128
 14645  0165CC                     u5810:
 14646                           
 14647                           ;stkvar	_sign1 @ sp[(-2)+1]
 14648  0165CC  0EFF               	movlw	-1
 14649  0165CE  50E3               	movf	plusw1,w,c
 14650  0165D0  B4D8               	btfsc	status,2,c
 14651  0165D2  D011               	goto	u5830
 14652                           
 14653                           ;stkvar	_f1 @ sp[(-2)+-4]
 14654                           ;stkvar	_f1 @ sp[(-2)+-4]
 14655  0165D4  0EFA               	movlw	-6
 14656  0165D6  6CE3               	negf	plusw1,c
 14657  0165D8  0EFB               	movlw	-5
 14658  0165DA  1EE3               	comf	plusw1,f,c
 14659  0165DC  0EFC               	movlw	-4
 14660  0165DE  1EE3               	comf	plusw1,f,c
 14661  0165E0  0EFD               	movlw	-3
 14662  0165E2  1EE3               	comf	plusw1,f,c
 14663  0165E4  E308               	bnc	u5830
 14664  0165E6  0EFB               	movlw	-5
 14665  0165E8  2AE3               	incf	plusw1,f,c
 14666  0165EA  E305               	bnc	u5830
 14667  0165EC  0EFC               	movlw	-4
 14668  0165EE  2AE3               	incf	plusw1,f,c
 14669  0165F0  E302               	bnc	u5830
 14670  0165F2  0EFD               	movlw	-3
 14671  0165F4  2AE3               	incf	plusw1,f,c
 14672  0165F6                     u5830:
 14673                           
 14674                           ;stkvar	_f1 @ sp[(-2)+-4]
 14675  0165F6  0EFA               	movlw	-6
 14676  0165F8  006F FF8C  F025    	movff	plusw1,btemp
 14677  0165FE  0EFB               	movlw	-5
 14678  016600  006F FF8C  F026    	movff	plusw1,btemp+1
 14679  016606  0EFC               	movlw	-4
 14680  016608  006F FF8C  F027    	movff	plusw1,btemp+2
 14681  01660E  0EFD               	movlw	-3
 14682  016610  006F FF8C  F028    	movff	plusw1,btemp+3
 14683  016616                     l2510:
 14684                           
 14685                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14686  016616  0EFA               	movlw	250
 14687  016618  26E1               	addwf	fsr1l,f,c
 14688  01661A  0EFF               	movlw	255
 14689  01661C  22E2               	addwfc	fsr1h,f,c
 14690  01661E  0012               	return		;funcret
 14691  016620                     __end_of___fltol:
 14692                           	opt callstack 0
 14693                           
 14694 ;; *************** function ___flneg *****************
 14695 ;; Defined at:
 14696 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 14697 ;; Parameters:    Size  Location     Type
 14698 ;;  f1              4  [STACK] long 
 14699 ;; Auto vars:     Size  Location     Type
 14700 ;;		None
 14701 ;; Return value:  Size  Location     Type
 14702 ;;                  4  [STACK] long 
 14703 ;; Registers used:
 14704 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 14705 ;; Tracked objects:
 14706 ;;		On entry : 0/0
 14707 ;;		On exit  : 0/0
 14708 ;;		Unchanged: 0/0
 14709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14714 ;;Total ram usage:        0 bytes
 14715 ;; Hardware stack levels used:    1
 14716 ;; Hardware stack levels required when called:    7
 14717 ;; This function calls:
 14718 ;;		Nothing
 14719 ;; This function is called by:
 14720 ;;		_efgtoa
 14721 ;; This function uses a reentrant model
 14722 ;;
 14723                           
 14724                           	psect	text55
 14725  018582                     __ptext55:
 14726                           	opt callstack 0
 14727  018582                     ___flneg:
 14728                           	opt callstack 16
 14729                           
 14730                           ;stkvar	_f1 @ sp[(0)+-4]
 14731                           
 14732                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14733                           ;incstack = 0
 14734  018582  0EFC               	movlw	-4
 14735  018584  50E3               	movf	plusw1,w,c
 14736  018586  E10A               	bnz	u5730
 14737  018588  0EFD               	movlw	-3
 14738  01858A  50E3               	movf	plusw1,w,c
 14739  01858C  E107               	bnz	u5730
 14740  01858E  0EFE               	movlw	-2
 14741  018590  50E3               	movf	plusw1,w,c
 14742  018592  E104               	bnz	u5730
 14743  018594  0EFF               	movlw	-1
 14744  018596  50E3               	movf	plusw1,w,c
 14745  018598  B4D8               	btfsc	status,2,c
 14746  01859A  D002               	goto	l7094
 14747  01859C                     u5730:
 14748                           
 14749                           ;stkvar	_f1 @ sp[(0)+-4]
 14750  01859C  0EFF               	movlw	-1
 14751  01859E  7EE3               	btg	plusw1,7,c
 14752  0185A0                     l7094:
 14753                           
 14754                           ;stkvar	_f1 @ sp[(0)+-4]
 14755  0185A0  0EFC               	movlw	-4
 14756  0185A2  006F FF8C  F025    	movff	plusw1,btemp
 14757  0185A8  0EFD               	movlw	-3
 14758  0185AA  006F FF8C  F026    	movff	plusw1,btemp+1
 14759  0185B0  0EFE               	movlw	-2
 14760  0185B2  006F FF8C  F027    	movff	plusw1,btemp+2
 14761  0185B8  0EFF               	movlw	-1
 14762  0185BA  006F FF8C  F028    	movff	plusw1,btemp+3
 14763                           
 14764                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14765  0185C0  52E5               	movf	postdec1,f,c
 14766  0185C2  52E5               	movf	postdec1,f,c
 14767  0185C4  52E5               	movf	postdec1,f,c
 14768  0185C6  52E5               	movf	postdec1,f,c
 14769  0185C8  0012               	return		;funcret
 14770  0185CA                     __end_of___flneg:
 14771                           	opt callstack 0
 14772                           
 14773 ;; *************** function ___flge *****************
 14774 ;; Defined at:
 14775 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 14776 ;; Parameters:    Size  Location     Type
 14777 ;;  ff1             4  [STACK] long 
 14778 ;;  ff2             4  [STACK] long 
 14779 ;; Auto vars:     Size  Location     Type
 14780 ;;		None
 14781 ;; Return value:  Size  Location     Type
 14782 ;;		None               void
 14783 ;; Registers used:
 14784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 14785 ;; Tracked objects:
 14786 ;;		On entry : 0/0
 14787 ;;		On exit  : 0/0
 14788 ;;		Unchanged: 0/0
 14789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14794 ;;Total ram usage:        0 bytes
 14795 ;; Hardware stack levels used:    1
 14796 ;; Hardware stack levels required when called:    7
 14797 ;; This function calls:
 14798 ;;		Nothing
 14799 ;; This function is called by:
 14800 ;;		_efgtoa
 14801 ;; This function uses a reentrant model
 14802 ;;
 14803                           
 14804                           	psect	text56
 14805  016620                     __ptext56:
 14806                           	opt callstack 0
 14807  016620                     ___flge:
 14808                           	opt callstack 16
 14809                           
 14810                           ;stkvar	_ff1 @ sp[(0)+-4]
 14811                           
 14812                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14813                           ;incstack = 0
 14814  016620  50E1               	movf	fsr1l,w,c
 14815  016622  0FFC               	addlw	-4
 14816  016624  6ED9               	movwf	fsr2l,c
 14817  016626  50E2               	movf	fsr1h,w,c
 14818  016628  6EDA               	movwf	fsr2h,c
 14819  01662A  0EFF               	movlw	255
 14820  01662C  22DA               	addwfc	fsr2h,f,c
 14821  01662E  0E00               	movlw	0
 14822  016630  14DE               	andwf	postinc2,w,c
 14823  016632  6E2D               	movwf	(btemp+8)^0,c
 14824  016634  0E00               	movlw	0
 14825  016636  14DE               	andwf	postinc2,w,c
 14826  016638  6E2E               	movwf	(btemp+9)^0,c
 14827  01663A  0E80               	movlw	128
 14828  01663C  14DE               	andwf	postinc2,w,c
 14829  01663E  6E2F               	movwf	(btemp+10)^0,c
 14830  016640  0E7F               	movlw	127
 14831  016642  14DE               	andwf	postinc2,w,c
 14832  016644  6E30               	movwf	(btemp+11)^0,c
 14833  016646  502D               	movf	(btemp+8)^0,w,c
 14834  016648  102E               	iorwf	(btemp+9)^0,w,c
 14835  01664A  102F               	iorwf	(btemp+10)^0,w,c
 14836  01664C  1030               	iorwf	(btemp+11)^0,w,c
 14837  01664E  A4D8               	btfss	status,2,c
 14838  016650  D008               	goto	l7068
 14839                           
 14840                           ;stkvar	_ff1 @ sp[(0)+-4]
 14841  016652  0EFC               	movlw	-4
 14842  016654  6AE3               	clrf	plusw1,c
 14843  016656  0EFD               	movlw	-3
 14844  016658  6AE3               	clrf	plusw1,c
 14845  01665A  0EFE               	movlw	-2
 14846  01665C  6AE3               	clrf	plusw1,c
 14847  01665E  0EFF               	movlw	-1
 14848  016660  6AE3               	clrf	plusw1,c
 14849  016662                     l7068:
 14850                           
 14851                           ;stkvar	_ff2 @ sp[(0)+-8]
 14852  016662  50E1               	movf	fsr1l,w,c
 14853  016664  0FF8               	addlw	-8
 14854  016666  6ED9               	movwf	fsr2l,c
 14855  016668  50E2               	movf	fsr1h,w,c
 14856  01666A  6EDA               	movwf	fsr2h,c
 14857  01666C  0EFF               	movlw	255
 14858  01666E  22DA               	addwfc	fsr2h,f,c
 14859  016670  0E00               	movlw	0
 14860  016672  14DE               	andwf	postinc2,w,c
 14861  016674  6E2D               	movwf	(btemp+8)^0,c
 14862  016676  0E00               	movlw	0
 14863  016678  14DE               	andwf	postinc2,w,c
 14864  01667A  6E2E               	movwf	(btemp+9)^0,c
 14865  01667C  0E80               	movlw	128
 14866  01667E  14DE               	andwf	postinc2,w,c
 14867  016680  6E2F               	movwf	(btemp+10)^0,c
 14868  016682  0E7F               	movlw	127
 14869  016684  14DE               	andwf	postinc2,w,c
 14870  016686  6E30               	movwf	(btemp+11)^0,c
 14871  016688  502D               	movf	(btemp+8)^0,w,c
 14872  01668A  102E               	iorwf	(btemp+9)^0,w,c
 14873  01668C  102F               	iorwf	(btemp+10)^0,w,c
 14874  01668E  1030               	iorwf	(btemp+11)^0,w,c
 14875  016690  A4D8               	btfss	status,2,c
 14876  016692  D008               	goto	l2476
 14877                           
 14878                           ;stkvar	_ff2 @ sp[(0)+-8]
 14879  016694  0EF8               	movlw	-8
 14880  016696  6AE3               	clrf	plusw1,c
 14881  016698  0EF9               	movlw	-7
 14882  01669A  6AE3               	clrf	plusw1,c
 14883  01669C  0EFA               	movlw	-6
 14884  01669E  6AE3               	clrf	plusw1,c
 14885  0166A0  0EFB               	movlw	-5
 14886  0166A2  6AE3               	clrf	plusw1,c
 14887  0166A4                     l2476:
 14888                           
 14889                           ;stkvar	_ff1 @ sp[(0)+-4]
 14890  0166A4  0EFF               	movlw	-1
 14891  0166A6  AEE3               	btfss	plusw1,7,c
 14892  0166A8  D024               	goto	l7074
 14893                           
 14894                           ;stkvar	_ff1 @ sp[(0)+-4]
 14895  0166AA  0E00               	movlw	0
 14896  0166AC  6E2D               	movwf	(btemp+8)^0,c
 14897  0166AE  0E00               	movlw	0
 14898  0166B0  6E2E               	movwf	(btemp+9)^0,c
 14899  0166B2  0E00               	movlw	0
 14900  0166B4  6E2F               	movwf	(btemp+10)^0,c
 14901  0166B6  0E80               	movlw	128
 14902  0166B8  6E30               	movwf	(btemp+11)^0,c
 14903  0166BA  0EFC               	movlw	-4
 14904  0166BC  50E3               	movf	plusw1,w,c
 14905  0166BE  5E2D               	subwf	(btemp+8)^0,f,c
 14906  0166C0  0EFD               	movlw	-3
 14907  0166C2  50E3               	movf	plusw1,w,c
 14908  0166C4  5A2E               	subwfb	(btemp+9)^0,f,c
 14909  0166C6  0EFE               	movlw	-2
 14910  0166C8  50E3               	movf	plusw1,w,c
 14911  0166CA  5A2F               	subwfb	(btemp+10)^0,f,c
 14912  0166CC  0EFF               	movlw	-1
 14913  0166CE  50E3               	movf	plusw1,w,c
 14914  0166D0  5A30               	subwfb	(btemp+11)^0,f,c
 14915                           
 14916                           ;stkvar	_ff1 @ sp[(0)+-4]
 14917  0166D2  0EFC               	movlw	-4
 14918  0166D4  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14919  0166DA  0EFD               	movlw	-3
 14920  0166DC  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 14921  0166E2  0EFE               	movlw	-2
 14922  0166E4  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 14923  0166EA  0EFF               	movlw	-1
 14924  0166EC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 14925  0166F2                     l7074:
 14926                           
 14927                           ;stkvar	_ff2 @ sp[(0)+-8]
 14928  0166F2  0EFB               	movlw	-5
 14929  0166F4  AEE3               	btfss	plusw1,7,c
 14930  0166F6  D024               	goto	l7078
 14931                           
 14932                           ;stkvar	_ff2 @ sp[(0)+-8]
 14933  0166F8  0E00               	movlw	0
 14934  0166FA  6E2D               	movwf	(btemp+8)^0,c
 14935  0166FC  0E00               	movlw	0
 14936  0166FE  6E2E               	movwf	(btemp+9)^0,c
 14937  016700  0E00               	movlw	0
 14938  016702  6E2F               	movwf	(btemp+10)^0,c
 14939  016704  0E80               	movlw	128
 14940  016706  6E30               	movwf	(btemp+11)^0,c
 14941  016708  0EF8               	movlw	-8
 14942  01670A  50E3               	movf	plusw1,w,c
 14943  01670C  5E2D               	subwf	(btemp+8)^0,f,c
 14944  01670E  0EF9               	movlw	-7
 14945  016710  50E3               	movf	plusw1,w,c
 14946  016712  5A2E               	subwfb	(btemp+9)^0,f,c
 14947  016714  0EFA               	movlw	-6
 14948  016716  50E3               	movf	plusw1,w,c
 14949  016718  5A2F               	subwfb	(btemp+10)^0,f,c
 14950  01671A  0EFB               	movlw	-5
 14951  01671C  50E3               	movf	plusw1,w,c
 14952  01671E  5A30               	subwfb	(btemp+11)^0,f,c
 14953                           
 14954                           ;stkvar	_ff2 @ sp[(0)+-8]
 14955  016720  0EF8               	movlw	-8
 14956  016722  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14957  016728  0EF9               	movlw	-7
 14958  01672A  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 14959  016730  0EFA               	movlw	-6
 14960  016732  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 14961  016738  0EFB               	movlw	-5
 14962  01673A  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 14963  016740                     l7078:
 14964                           
 14965                           ;stkvar	_ff1 @ sp[(0)+-4]
 14966  016740  0EFF               	movlw	-1
 14967  016742  7EE3               	btg	plusw1,7,c
 14968                           
 14969                           ;stkvar	_ff2 @ sp[(0)+-8]
 14970  016744  0EFB               	movlw	-5
 14971  016746  7EE3               	btg	plusw1,7,c
 14972                           
 14973                           ;stkvar	_ff2 @ sp[(0)+-8]
 14974                           ;stkvar	_ff1 @ sp[(0)+-4]
 14975  016748  50E1               	movf	fsr1l,w,c
 14976  01674A  0FFC               	addlw	-4
 14977  01674C  6ED9               	movwf	fsr2l,c
 14978  01674E  50E2               	movf	fsr1h,w,c
 14979  016750  6EDA               	movwf	fsr2h,c
 14980  016752  0EFF               	movlw	255
 14981  016754  22DA               	addwfc	fsr2h,f,c
 14982  016756  0EF8               	movlw	-8
 14983  016758  50E3               	movf	plusw1,w,c
 14984  01675A  5CDE               	subwf	postinc2,w,c
 14985  01675C  0EF9               	movlw	-7
 14986  01675E  50E3               	movf	plusw1,w,c
 14987  016760  58DE               	subwfb	postinc2,w,c
 14988  016762  0EFA               	movlw	-6
 14989  016764  50E3               	movf	plusw1,w,c
 14990  016766  58DE               	subwfb	postinc2,w,c
 14991  016768  0EFB               	movlw	-5
 14992  01676A  50E3               	movf	plusw1,w,c
 14993  01676C  58DE               	subwfb	postinc2,w,c
 14994  01676E  B0D8               	btfsc	status,0,c
 14995  016770  D002               	goto	l7086
 14996  016772  9025               	bcf	btemp& (0+255),0,c
 14997  016774  D001               	goto	l2483
 14998  016776                     l7086:
 14999  016776  8025               	bsf	btemp& (0+255),0,c
 15000  016778                     l2483:
 15001                           
 15002                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 15003  016778  0EF8               	movlw	248
 15004  01677A  26E1               	addwf	fsr1l,f,c
 15005  01677C  0EFF               	movlw	255
 15006  01677E  22E2               	addwfc	fsr1h,f,c
 15007  016780  0012               	return		;funcret
 15008  016782                     __end_of___flge:
 15009                           	opt callstack 0
 15010                           
 15011 ;; *************** function ___fleq *****************
 15012 ;; Defined at:
 15013 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 15014 ;; Parameters:    Size  Location     Type
 15015 ;;  ff1             4  [STACK] long 
 15016 ;;  ff2             4  [STACK] long 
 15017 ;; Auto vars:     Size  Location     Type
 15018 ;;		None
 15019 ;; Return value:  Size  Location     Type
 15020 ;;		None               void
 15021 ;; Registers used:
 15022 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 15023 ;; Tracked objects:
 15024 ;;		On entry : 0/0
 15025 ;;		On exit  : 0/0
 15026 ;;		Unchanged: 0/0
 15027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15032 ;;Total ram usage:        0 bytes
 15033 ;; Hardware stack levels used:    1
 15034 ;; Hardware stack levels required when called:    7
 15035 ;; This function calls:
 15036 ;;		Nothing
 15037 ;; This function is called by:
 15038 ;;		_efgtoa
 15039 ;; This function uses a reentrant model
 15040 ;;
 15041                           
 15042                           	psect	text57
 15043  01753A                     __ptext57:
 15044                           	opt callstack 0
 15045  01753A                     ___fleq:
 15046                           	opt callstack 16
 15047                           
 15048                           ;stkvar	_ff1 @ sp[(0)+-4]
 15049                           
 15050                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15051                           ;incstack = 0
 15052  01753A  50E1               	movf	fsr1l,w,c
 15053  01753C  0FFC               	addlw	-4
 15054  01753E  6ED9               	movwf	fsr2l,c
 15055  017540  50E2               	movf	fsr1h,w,c
 15056  017542  6EDA               	movwf	fsr2h,c
 15057  017544  0EFF               	movlw	255
 15058  017546  22DA               	addwfc	fsr2h,f,c
 15059  017548  0E00               	movlw	0
 15060  01754A  14DE               	andwf	postinc2,w,c
 15061  01754C  6E2D               	movwf	(btemp+8)^0,c
 15062  01754E  0E00               	movlw	0
 15063  017550  14DE               	andwf	postinc2,w,c
 15064  017552  6E2E               	movwf	(btemp+9)^0,c
 15065  017554  0E80               	movlw	128
 15066  017556  14DE               	andwf	postinc2,w,c
 15067  017558  6E2F               	movwf	(btemp+10)^0,c
 15068  01755A  0E7F               	movlw	127
 15069  01755C  14DE               	andwf	postinc2,w,c
 15070  01755E  6E30               	movwf	(btemp+11)^0,c
 15071  017560  502D               	movf	(btemp+8)^0,w,c
 15072  017562  102E               	iorwf	(btemp+9)^0,w,c
 15073  017564  102F               	iorwf	(btemp+10)^0,w,c
 15074  017566  1030               	iorwf	(btemp+11)^0,w,c
 15075  017568  A4D8               	btfss	status,2,c
 15076  01756A  D008               	goto	l7052
 15077                           
 15078                           ;stkvar	_ff1 @ sp[(0)+-4]
 15079  01756C  0EFC               	movlw	-4
 15080  01756E  6AE3               	clrf	plusw1,c
 15081  017570  0EFD               	movlw	-3
 15082  017572  6AE3               	clrf	plusw1,c
 15083  017574  0EFE               	movlw	-2
 15084  017576  6AE3               	clrf	plusw1,c
 15085  017578  0EFF               	movlw	-1
 15086  01757A  6AE3               	clrf	plusw1,c
 15087  01757C                     l7052:
 15088                           
 15089                           ;stkvar	_ff2 @ sp[(0)+-8]
 15090  01757C  50E1               	movf	fsr1l,w,c
 15091  01757E  0FF8               	addlw	-8
 15092  017580  6ED9               	movwf	fsr2l,c
 15093  017582  50E2               	movf	fsr1h,w,c
 15094  017584  6EDA               	movwf	fsr2h,c
 15095  017586  0EFF               	movlw	255
 15096  017588  22DA               	addwfc	fsr2h,f,c
 15097  01758A  0E00               	movlw	0
 15098  01758C  14DE               	andwf	postinc2,w,c
 15099  01758E  6E2D               	movwf	(btemp+8)^0,c
 15100  017590  0E00               	movlw	0
 15101  017592  14DE               	andwf	postinc2,w,c
 15102  017594  6E2E               	movwf	(btemp+9)^0,c
 15103  017596  0E80               	movlw	128
 15104  017598  14DE               	andwf	postinc2,w,c
 15105  01759A  6E2F               	movwf	(btemp+10)^0,c
 15106  01759C  0E7F               	movlw	127
 15107  01759E  14DE               	andwf	postinc2,w,c
 15108  0175A0  6E30               	movwf	(btemp+11)^0,c
 15109  0175A2  502D               	movf	(btemp+8)^0,w,c
 15110  0175A4  102E               	iorwf	(btemp+9)^0,w,c
 15111  0175A6  102F               	iorwf	(btemp+10)^0,w,c
 15112  0175A8  1030               	iorwf	(btemp+11)^0,w,c
 15113  0175AA  A4D8               	btfss	status,2,c
 15114  0175AC  D008               	goto	l7056
 15115                           
 15116                           ;stkvar	_ff2 @ sp[(0)+-8]
 15117  0175AE  0EF8               	movlw	-8
 15118  0175B0  6AE3               	clrf	plusw1,c
 15119  0175B2  0EF9               	movlw	-7
 15120  0175B4  6AE3               	clrf	plusw1,c
 15121  0175B6  0EFA               	movlw	-6
 15122  0175B8  6AE3               	clrf	plusw1,c
 15123  0175BA  0EFB               	movlw	-5
 15124  0175BC  6AE3               	clrf	plusw1,c
 15125  0175BE                     l7056:
 15126                           
 15127                           ;stkvar	_ff2 @ sp[(0)+-8]
 15128                           ;stkvar	_ff1 @ sp[(0)+-4]
 15129  0175BE  50E1               	movf	fsr1l,w,c
 15130  0175C0  0FFC               	addlw	-4
 15131  0175C2  6ED9               	movwf	fsr2l,c
 15132  0175C4  50E2               	movf	fsr1h,w,c
 15133  0175C6  6EDA               	movwf	fsr2h,c
 15134  0175C8  0EFF               	movlw	255
 15135  0175CA  22DA               	addwfc	fsr2h,f,c
 15136  0175CC  0EF8               	movlw	-8
 15137  0175CE  50E3               	movf	plusw1,w,c
 15138  0175D0  18DE               	xorwf	postinc2,w,c
 15139  0175D2  E10D               	bnz	u5670
 15140  0175D4  0EF9               	movlw	-7
 15141  0175D6  50E3               	movf	plusw1,w,c
 15142  0175D8  18DE               	xorwf	postinc2,w,c
 15143  0175DA  E109               	bnz	u5670
 15144  0175DC  0EFA               	movlw	-6
 15145  0175DE  50E3               	movf	plusw1,w,c
 15146  0175E0  18DE               	xorwf	postinc2,w,c
 15147  0175E2  E105               	bnz	u5670
 15148  0175E4  0EFB               	movlw	-5
 15149  0175E6  50E3               	movf	plusw1,w,c
 15150  0175E8  18DE               	xorwf	postinc2,w,c
 15151  0175EA  B4D8               	btfsc	status,2,c
 15152  0175EC  D002               	goto	l7060
 15153  0175EE                     u5670:
 15154  0175EE  9025               	bcf	btemp& (0+255),0,c
 15155  0175F0  D001               	goto	l2472
 15156  0175F2                     l7060:
 15157  0175F2  8025               	bsf	btemp& (0+255),0,c
 15158  0175F4                     l2472:
 15159                           
 15160                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 15161  0175F4  0EF8               	movlw	248
 15162  0175F6  26E1               	addwf	fsr1l,f,c
 15163  0175F8  0EFF               	movlw	255
 15164  0175FA  22E2               	addwfc	fsr1h,f,c
 15165  0175FC  0012               	return		;funcret
 15166  0175FE                     __end_of___fleq:
 15167                           	opt callstack 0
 15168                           
 15169 ;; *************** function ___fldiv *****************
 15170 ;; Defined at:
 15171 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 15172 ;; Parameters:    Size  Location     Type
 15173 ;;  b               4  [STACK] long 
 15174 ;;  a               4  [STACK] long 
 15175 ;; Auto vars:     Size  Location     Type
 15176 ;;  grs             4  [STACK] unsigned long 
 15177 ;;  rem             4  [STACK] unsigned long 
 15178 ;;  new_exp         2  [STACK] short 
 15179 ;;  aexp            1  [STACK] unsigned char 
 15180 ;;  bexp            1  [STACK] unsigned char 
 15181 ;;  sign            1  [STACK] unsigned char 
 15182 ;; Return value:  Size  Location     Type
 15183 ;;                  4  [STACK] unsigned char 
 15184 ;; Registers used:
 15185 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 15186 ;; Tracked objects:
 15187 ;;		On entry : 0/2
 15188 ;;		On exit  : 0/0
 15189 ;;		Unchanged: 0/0
 15190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15195 ;;Total ram usage:        0 bytes
 15196 ;; Hardware stack levels used:    1
 15197 ;; Hardware stack levels required when called:    7
 15198 ;; This function calls:
 15199 ;;		Nothing
 15200 ;; This function is called by:
 15201 ;;		_conv_raw_result
 15202 ;;		_calc_bsoc
 15203 ;;		_efgtoa
 15204 ;; This function uses a reentrant model
 15205 ;;
 15206                           
 15207                           	psect	text58
 15208  0135F6                     __ptext58:
 15209                           	opt callstack 0
 15210  0135F6                     ___fldiv:
 15211                           	opt callstack 0
 15212                           
 15213                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15214  0135F6  0E0D               	movlw	13
 15215  0135F8  26E1               	addwf	fsr1l,f,c
 15216  0135FA  0E00               	movlw	0
 15217  0135FC  22E2               	addwfc	fsr1h,f,c
 15218                           
 15219                           ;stkvar	_b @ sp[(-13)+-4]
 15220                           
 15221                           ;incstack = 0
 15222  0135FE  0EF2               	movlw	242
 15223  013600  24E1               	addwf	fsr1l,w,c
 15224  013602  6ED9               	movwf	fsr2l,c
 15225  013604  0EFF               	movlw	255
 15226  013606  20E2               	addwfc	fsr1h,w,c
 15227  013608  6EDA               	movwf	fsr2h,c
 15228  01360A  50DF               	movf	indf2,w,c
 15229  01360C  6E30               	movwf	(btemp+11)^0,c
 15230  01360E  0E80               	movlw	128
 15231  013610  1630               	andwf	(btemp+11)^0,f,c
 15232                           
 15233                           ;stkvar	_sign @ sp[(-13)+12]
 15234  013612  0EFF               	movlw	-1
 15235  013614  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15236                           
 15237                           ;stkvar	_b @ sp[(-13)+-4]
 15238  01361A  0EF2               	movlw	242
 15239  01361C  24E1               	addwf	fsr1l,w,c
 15240  01361E  6ED9               	movwf	fsr2l,c
 15241  013620  0EFF               	movlw	255
 15242  013622  20E2               	addwfc	fsr1h,w,c
 15243  013624  6EDA               	movwf	fsr2h,c
 15244  013626  50DF               	movf	indf2,w,c
 15245  013628  6E30               	movwf	(btemp+11)^0,c
 15246  01362A  90D8               	bcf	status,0,c
 15247  01362C  3430               	rlcf	(btemp+11)^0,w,c
 15248  01362E  6E2F               	movwf	(btemp+10)^0,c
 15249                           
 15250                           ;stkvar	_bexp @ sp[(-13)+11]
 15251  013630  0EFE               	movlw	-2
 15252  013632  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15253                           
 15254                           ;stkvar	_b @ sp[(-13)+-4]
 15255  013638  0EF1               	movlw	241
 15256  01363A  24E1               	addwf	fsr1l,w,c
 15257  01363C  6ED9               	movwf	fsr2l,c
 15258  01363E  0EFF               	movlw	255
 15259  013640  20E2               	addwfc	fsr1h,w,c
 15260  013642  6EDA               	movwf	fsr2h,c
 15261  013644  AEDF               	btfss	indf2,7,c
 15262  013646  D002               	goto	l8336
 15263                           
 15264                           ;stkvar	_bexp @ sp[(-13)+11]
 15265  013648  0EFE               	movlw	-2
 15266  01364A  80E3               	bsf	plusw1,0,c
 15267  01364C                     l8336:
 15268                           
 15269                           ;stkvar	_bexp @ sp[(-13)+11]
 15270  01364C  0EFE               	movlw	-2
 15271  01364E  50E3               	movf	plusw1,w,c
 15272  013650  B4D8               	btfsc	status,2,c
 15273  013652  D027               	goto	l8346
 15274                           
 15275                           ;stkvar	_bexp @ sp[(-13)+11]
 15276  013654  0EFE               	movlw	-2
 15277  013656  28E3               	incf	plusw1,w,c
 15278  013658  A4D8               	btfss	status,2,c
 15279  01365A  D018               	goto	l8342
 15280  01365C  0E00               	movlw	0
 15281  01365E  6E2D               	movwf	(btemp+8)^0,c
 15282  013660  0E00               	movlw	0
 15283  013662  6E2E               	movwf	(btemp+9)^0,c
 15284  013664  0E00               	movlw	0
 15285  013666  6E2F               	movwf	(btemp+10)^0,c
 15286  013668  0E00               	movlw	0
 15287  01366A  6E30               	movwf	(btemp+11)^0,c
 15288                           
 15289                           ;stkvar	_b @ sp[(-13)+-4]
 15290  01366C  0EEF               	movlw	-17
 15291  01366E  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 15292  013674  0EF0               	movlw	-16
 15293  013676  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 15294  01367C  0EF1               	movlw	-15
 15295  01367E  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15296  013684  0EF2               	movlw	-14
 15297  013686  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15298  01368C                     l8342:
 15299                           
 15300                           ;stkvar	_b @ sp[(-13)+-4]
 15301  01368C  0EF1               	movlw	-15
 15302  01368E  8EE3               	bsf	plusw1,7,c
 15303                           
 15304                           ;stkvar	_b @ sp[(-13)+-4]
 15305  013690  0EF2               	movlw	242
 15306  013692  24E1               	addwf	fsr1l,w,c
 15307  013694  6ED9               	movwf	fsr2l,c
 15308  013696  0EFF               	movlw	255
 15309  013698  20E2               	addwfc	fsr1h,w,c
 15310  01369A  6EDA               	movwf	fsr2h,c
 15311  01369C  0E00               	movlw	0
 15312  01369E  6EDF               	movwf	indf2,c
 15313  0136A0  D018               	goto	l8348
 15314  0136A2                     l8346:
 15315  0136A2  0E00               	movlw	0
 15316  0136A4  6E2D               	movwf	(btemp+8)^0,c
 15317  0136A6  0E00               	movlw	0
 15318  0136A8  6E2E               	movwf	(btemp+9)^0,c
 15319  0136AA  0E00               	movlw	0
 15320  0136AC  6E2F               	movwf	(btemp+10)^0,c
 15321  0136AE  0E00               	movlw	0
 15322  0136B0  6E30               	movwf	(btemp+11)^0,c
 15323                           
 15324                           ;stkvar	_b @ sp[(-13)+-4]
 15325  0136B2  0EEF               	movlw	-17
 15326  0136B4  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 15327  0136BA  0EF0               	movlw	-16
 15328  0136BC  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 15329  0136C2  0EF1               	movlw	-15
 15330  0136C4  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15331  0136CA  0EF2               	movlw	-14
 15332  0136CC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15333  0136D2                     l8348:
 15334                           
 15335                           ;stkvar	_a @ sp[(-13)+-8]
 15336  0136D2  0EEE               	movlw	238
 15337  0136D4  24E1               	addwf	fsr1l,w,c
 15338  0136D6  6ED9               	movwf	fsr2l,c
 15339  0136D8  0EFF               	movlw	255
 15340  0136DA  20E2               	addwfc	fsr1h,w,c
 15341  0136DC  6EDA               	movwf	fsr2h,c
 15342  0136DE  50DF               	movf	indf2,w,c
 15343  0136E0  6E30               	movwf	(btemp+11)^0,c
 15344  0136E2  0E80               	movlw	128
 15345  0136E4  1630               	andwf	(btemp+11)^0,f,c
 15346                           
 15347                           ;stkvar	_sign @ sp[(-13)+12]
 15348  0136E6  50E1               	movf	fsr1l,w,c
 15349  0136E8  0FFF               	addlw	-1
 15350  0136EA  6ED9               	movwf	fsr2l,c
 15351  0136EC  50E2               	movf	fsr1h,w,c
 15352  0136EE  6EDA               	movwf	fsr2h,c
 15353  0136F0  0EFF               	movlw	255
 15354  0136F2  22DA               	addwfc	fsr2h,f,c
 15355  0136F4  5030               	movf	(btemp+11)^0,w,c
 15356  0136F6  1ADF               	xorwf	indf2,f,c
 15357                           
 15358                           ;stkvar	_a @ sp[(-13)+-8]
 15359  0136F8  0EEE               	movlw	238
 15360  0136FA  24E1               	addwf	fsr1l,w,c
 15361  0136FC  6ED9               	movwf	fsr2l,c
 15362  0136FE  0EFF               	movlw	255
 15363  013700  20E2               	addwfc	fsr1h,w,c
 15364  013702  6EDA               	movwf	fsr2h,c
 15365  013704  50DF               	movf	indf2,w,c
 15366  013706  6E30               	movwf	(btemp+11)^0,c
 15367  013708  90D8               	bcf	status,0,c
 15368  01370A  3430               	rlcf	(btemp+11)^0,w,c
 15369  01370C  6E2F               	movwf	(btemp+10)^0,c
 15370                           
 15371                           ;stkvar	_aexp @ sp[(-13)+10]
 15372  01370E  0EFD               	movlw	-3
 15373  013710  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15374                           
 15375                           ;stkvar	_a @ sp[(-13)+-8]
 15376  013716  0EED               	movlw	237
 15377  013718  24E1               	addwf	fsr1l,w,c
 15378  01371A  6ED9               	movwf	fsr2l,c
 15379  01371C  0EFF               	movlw	255
 15380  01371E  20E2               	addwfc	fsr1h,w,c
 15381  013720  6EDA               	movwf	fsr2h,c
 15382  013722  AEDF               	btfss	indf2,7,c
 15383  013724  D002               	goto	l8356
 15384                           
 15385                           ;stkvar	_aexp @ sp[(-13)+10]
 15386  013726  0EFD               	movlw	-3
 15387  013728  80E3               	bsf	plusw1,0,c
 15388  01372A                     l8356:
 15389                           
 15390                           ;stkvar	_aexp @ sp[(-13)+10]
 15391  01372A  0EFD               	movlw	-3
 15392  01372C  50E3               	movf	plusw1,w,c
 15393  01372E  B4D8               	btfsc	status,2,c
 15394  013730  D027               	goto	l8366
 15395                           
 15396                           ;stkvar	_aexp @ sp[(-13)+10]
 15397  013732  0EFD               	movlw	-3
 15398  013734  28E3               	incf	plusw1,w,c
 15399  013736  A4D8               	btfss	status,2,c
 15400  013738  D018               	goto	l8362
 15401  01373A  0E00               	movlw	0
 15402  01373C  6E2D               	movwf	(btemp+8)^0,c
 15403  01373E  0E00               	movlw	0
 15404  013740  6E2E               	movwf	(btemp+9)^0,c
 15405  013742  0E00               	movlw	0
 15406  013744  6E2F               	movwf	(btemp+10)^0,c
 15407  013746  0E00               	movlw	0
 15408  013748  6E30               	movwf	(btemp+11)^0,c
 15409                           
 15410                           ;stkvar	_a @ sp[(-13)+-8]
 15411  01374A  0EEB               	movlw	-21
 15412  01374C  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 15413  013752  0EEC               	movlw	-20
 15414  013754  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 15415  01375A  0EED               	movlw	-19
 15416  01375C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15417  013762  0EEE               	movlw	-18
 15418  013764  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15419  01376A                     l8362:
 15420                           
 15421                           ;stkvar	_a @ sp[(-13)+-8]
 15422  01376A  0EED               	movlw	-19
 15423  01376C  8EE3               	bsf	plusw1,7,c
 15424                           
 15425                           ;stkvar	_a @ sp[(-13)+-8]
 15426  01376E  0EEE               	movlw	238
 15427  013770  24E1               	addwf	fsr1l,w,c
 15428  013772  6ED9               	movwf	fsr2l,c
 15429  013774  0EFF               	movlw	255
 15430  013776  20E2               	addwfc	fsr1h,w,c
 15431  013778  6EDA               	movwf	fsr2h,c
 15432  01377A  0E00               	movlw	0
 15433  01377C  6EDF               	movwf	indf2,c
 15434  01377E  D018               	goto	l8368
 15435  013780                     l8366:
 15436  013780  0E00               	movlw	0
 15437  013782  6E2D               	movwf	(btemp+8)^0,c
 15438  013784  0E00               	movlw	0
 15439  013786  6E2E               	movwf	(btemp+9)^0,c
 15440  013788  0E00               	movlw	0
 15441  01378A  6E2F               	movwf	(btemp+10)^0,c
 15442  01378C  0E00               	movlw	0
 15443  01378E  6E30               	movwf	(btemp+11)^0,c
 15444                           
 15445                           ;stkvar	_a @ sp[(-13)+-8]
 15446  013790  0EEB               	movlw	-21
 15447  013792  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 15448  013798  0EEC               	movlw	-20
 15449  01379A  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 15450  0137A0  0EED               	movlw	-19
 15451  0137A2  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15452  0137A8  0EEE               	movlw	-18
 15453  0137AA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15454  0137B0                     l8368:
 15455                           
 15456                           ;stkvar	_a @ sp[(-13)+-8]
 15457  0137B0  0EEB               	movlw	-21
 15458  0137B2  50E3               	movf	plusw1,w,c
 15459  0137B4  E139               	bnz	l8380
 15460  0137B6  0EEC               	movlw	-20
 15461  0137B8  50E3               	movf	plusw1,w,c
 15462  0137BA  E136               	bnz	l8380
 15463  0137BC  0EED               	movlw	-19
 15464  0137BE  50E3               	movf	plusw1,w,c
 15465  0137C0  E133               	bnz	l8380
 15466  0137C2  0EEE               	movlw	-18
 15467  0137C4  50E3               	movf	plusw1,w,c
 15468  0137C6  A4D8               	btfss	status,2,c
 15469  0137C8  D02F               	goto	l8380
 15470                           
 15471                           ;stkvar	_b @ sp[(-13)+-4]
 15472  0137CA  0EEF               	movlw	-17
 15473  0137CC  6AE3               	clrf	plusw1,c
 15474  0137CE  0EF0               	movlw	-16
 15475  0137D0  6AE3               	clrf	plusw1,c
 15476  0137D2  0EF1               	movlw	-15
 15477  0137D4  6AE3               	clrf	plusw1,c
 15478  0137D6  0EF2               	movlw	-14
 15479  0137D8  6AE3               	clrf	plusw1,c
 15480                           
 15481                           ;stkvar	_b @ sp[(-13)+-4]
 15482  0137DA  0EF1               	movlw	241
 15483  0137DC  24E1               	addwf	fsr1l,w,c
 15484  0137DE  6ED9               	movwf	fsr2l,c
 15485  0137E0  0EFF               	movlw	255
 15486  0137E2  20E2               	addwfc	fsr1h,w,c
 15487  0137E4  6EDA               	movwf	fsr2h,c
 15488  0137E6  0E80               	movlw	128
 15489  0137E8  12DE               	iorwf	postinc2,f,c
 15490  0137EA  0E7F               	movlw	127
 15491  0137EC  12DD               	iorwf	postdec2,f,c
 15492  0137EE                     l8374:
 15493                           
 15494                           ;stkvar	_sign @ sp[(-13)+12]
 15495  0137EE  0EFF               	movlw	-1
 15496  0137F0  006F FF8C  F030    	movff	plusw1,btemp+11
 15497                           
 15498                           ;stkvar	_b @ sp[(-13)+-4]
 15499  0137F6  0EF2               	movlw	242
 15500  0137F8  24E1               	addwf	fsr1l,w,c
 15501  0137FA  6ED9               	movwf	fsr2l,c
 15502  0137FC  0EFF               	movlw	255
 15503  0137FE  20E2               	addwfc	fsr1h,w,c
 15504  013800  6EDA               	movwf	fsr2h,c
 15505  013802  5030               	movf	(btemp+11)^0,w,c
 15506  013804  12DF               	iorwf	indf2,f,c
 15507                           
 15508                           ;stkvar	_b @ sp[(-13)+-4]
 15509  013806  0EEF               	movlw	-17
 15510  013808  006F FF8C  F025    	movff	plusw1,btemp
 15511  01380E  0EF0               	movlw	-16
 15512  013810  006F FF8C  F026    	movff	plusw1,btemp+1
 15513  013816  0EF1               	movlw	-15
 15514  013818  006F FF8C  F027    	movff	plusw1,btemp+2
 15515  01381E  0EF2               	movlw	-14
 15516  013820  006F FF8C  F028    	movff	plusw1,btemp+3
 15517  013826  D19F               	goto	l2795
 15518  013828                     l8380:
 15519                           
 15520                           ;stkvar	_bexp @ sp[(-13)+11]
 15521  013828  0EFE               	movlw	-2
 15522  01382A  50E3               	movf	plusw1,w,c
 15523  01382C  A4D8               	btfss	status,2,c
 15524  01382E  D009               	goto	l8388
 15525  013830  0E00               	movlw	0
 15526  013832  6E25               	movwf	btemp^0,c
 15527  013834  0E00               	movlw	0
 15528  013836  6E26               	movwf	(btemp+1)^0,c
 15529  013838  0E00               	movlw	0
 15530  01383A  6E27               	movwf	(btemp+2)^0,c
 15531  01383C  0E00               	movlw	0
 15532  01383E  6E28               	movwf	(btemp+3)^0,c
 15533  013840  D192               	goto	l2795
 15534  013842                     l8388:
 15535                           
 15536                           ;stkvar	_bexp @ sp[(-13)+11]
 15537  013842  0EFE               	movlw	-2
 15538  013844  50E3               	movf	plusw1,w,c
 15539  013846  6E2F               	movwf	(btemp+10)^0,c
 15540  013848  6A30               	clrf	(btemp+11)^0,c
 15541                           
 15542                           ;stkvar	_aexp @ sp[(-13)+10]
 15543  01384A  0EFD               	movlw	-3
 15544  01384C  50E3               	movf	plusw1,w,c
 15545  01384E  5E2F               	subwf	(btemp+10)^0,f,c
 15546  013850  0E00               	movlw	0
 15547  013852  5A30               	subwfb	(btemp+11)^0,f,c
 15548  013854  0E7F               	movlw	127
 15549  013856  262F               	addwf	(btemp+10)^0,f,c
 15550  013858  0E00               	movlw	0
 15551  01385A  2230               	addwfc	(btemp+11)^0,f,c
 15552                           
 15553                           ;stkvar	_new_exp @ sp[(-13)+8]
 15554  01385C  0EFB               	movlw	-5
 15555  01385E  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15556  013864  0EFC               	movlw	-4
 15557  013866  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15558                           
 15559                           ;stkvar	_b @ sp[(-13)+-4]
 15560  01386C  0EEF               	movlw	-17
 15561  01386E  006F FF8C  F02D    	movff	plusw1,btemp+8
 15562  013874  0EF0               	movlw	-16
 15563  013876  006F FF8C  F02E    	movff	plusw1,btemp+9
 15564  01387C  0EF1               	movlw	-15
 15565  01387E  006F FF8C  F02F    	movff	plusw1,btemp+10
 15566  013884  0EF2               	movlw	-14
 15567  013886  006F FF8C  F030    	movff	plusw1,btemp+11
 15568                           
 15569                           ;stkvar	_rem @ sp[(-13)+4]
 15570  01388C  0EF7               	movlw	-9
 15571  01388E  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 15572  013894  0EF8               	movlw	-8
 15573  013896  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 15574  01389C  0EF9               	movlw	-7
 15575  01389E  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15576  0138A4  0EFA               	movlw	-6
 15577  0138A6  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15578                           
 15579                           ;stkvar	_b @ sp[(-13)+-4]
 15580  0138AC  0EEF               	movlw	-17
 15581  0138AE  6AE3               	clrf	plusw1,c
 15582  0138B0  0EF0               	movlw	-16
 15583  0138B2  6AE3               	clrf	plusw1,c
 15584  0138B4  0EF1               	movlw	-15
 15585  0138B6  6AE3               	clrf	plusw1,c
 15586  0138B8  0EF2               	movlw	-14
 15587  0138BA  6AE3               	clrf	plusw1,c
 15588                           
 15589                           ;stkvar	_grs @ sp[(-13)+0]
 15590  0138BC  0EF3               	movlw	-13
 15591  0138BE  6AE3               	clrf	plusw1,c
 15592  0138C0  0EF4               	movlw	-12
 15593  0138C2  6AE3               	clrf	plusw1,c
 15594  0138C4  0EF5               	movlw	-11
 15595  0138C6  6AE3               	clrf	plusw1,c
 15596  0138C8  0EF6               	movlw	-10
 15597  0138CA  6AE3               	clrf	plusw1,c
 15598                           
 15599                           ;stkvar	_aexp @ sp[(-13)+10]
 15600  0138CC  0EFD               	movlw	-3
 15601  0138CE  6AE3               	clrf	plusw1,c
 15602  0138D0  D050               	goto	l8416
 15603  0138D2                     l8398:
 15604                           
 15605                           ;stkvar	_aexp @ sp[(-13)+10]
 15606  0138D2  0EFD               	movlw	-3
 15607  0138D4  50E3               	movf	plusw1,w,c
 15608  0138D6  B4D8               	btfsc	status,2,c
 15609  0138D8  D020               	goto	l8408
 15610                           
 15611                           ;stkvar	_rem @ sp[(-13)+4]
 15612  0138DA  90D8               	bcf	status,0,c
 15613  0138DC  0EF7               	movlw	-9
 15614  0138DE  36E3               	rlcf	plusw1,f,c
 15615  0138E0  0EF8               	movlw	-8
 15616  0138E2  36E3               	rlcf	plusw1,f,c
 15617  0138E4  0EF9               	movlw	-7
 15618  0138E6  36E3               	rlcf	plusw1,f,c
 15619  0138E8  0EFA               	movlw	-6
 15620  0138EA  36E3               	rlcf	plusw1,f,c
 15621                           
 15622                           ;stkvar	_b @ sp[(-13)+-4]
 15623  0138EC  90D8               	bcf	status,0,c
 15624  0138EE  0EEF               	movlw	-17
 15625  0138F0  36E3               	rlcf	plusw1,f,c
 15626  0138F2  0EF0               	movlw	-16
 15627  0138F4  36E3               	rlcf	plusw1,f,c
 15628  0138F6  0EF1               	movlw	-15
 15629  0138F8  36E3               	rlcf	plusw1,f,c
 15630  0138FA  0EF2               	movlw	-14
 15631  0138FC  36E3               	rlcf	plusw1,f,c
 15632                           
 15633                           ;stkvar	_grs @ sp[(-13)+0]
 15634  0138FE  0EF6               	movlw	-10
 15635  013900  AEE3               	btfss	plusw1,7,c
 15636  013902  D002               	goto	l8406
 15637                           
 15638                           ;stkvar	_b @ sp[(-13)+-4]
 15639  013904  0EEF               	movlw	-17
 15640  013906  80E3               	bsf	plusw1,0,c
 15641  013908                     l8406:
 15642                           
 15643                           ;stkvar	_grs @ sp[(-13)+0]
 15644  013908  90D8               	bcf	status,0,c
 15645  01390A  0EF3               	movlw	-13
 15646  01390C  36E3               	rlcf	plusw1,f,c
 15647  01390E  0EF4               	movlw	-12
 15648  013910  36E3               	rlcf	plusw1,f,c
 15649  013912  0EF5               	movlw	-11
 15650  013914  36E3               	rlcf	plusw1,f,c
 15651  013916  0EF6               	movlw	-10
 15652  013918  36E3               	rlcf	plusw1,f,c
 15653  01391A                     l8408:
 15654                           
 15655                           ;stkvar	_a @ sp[(-13)+-8]
 15656                           ;stkvar	_rem @ sp[(-13)+4]
 15657  01391A  50E1               	movf	fsr1l,w,c
 15658  01391C  0FF7               	addlw	-9
 15659  01391E  6ED9               	movwf	fsr2l,c
 15660  013920  50E2               	movf	fsr1h,w,c
 15661  013922  6EDA               	movwf	fsr2h,c
 15662  013924  0EFF               	movlw	255
 15663  013926  22DA               	addwfc	fsr2h,f,c
 15664  013928  0EEB               	movlw	-21
 15665  01392A  50E3               	movf	plusw1,w,c
 15666  01392C  5CDE               	subwf	postinc2,w,c
 15667  01392E  0EEC               	movlw	-20
 15668  013930  50E3               	movf	plusw1,w,c
 15669  013932  58DE               	subwfb	postinc2,w,c
 15670  013934  0EED               	movlw	-19
 15671  013936  50E3               	movf	plusw1,w,c
 15672  013938  58DE               	subwfb	postinc2,w,c
 15673  01393A  0EEE               	movlw	-18
 15674  01393C  50E3               	movf	plusw1,w,c
 15675  01393E  58DE               	subwfb	postinc2,w,c
 15676  013940  A0D8               	btfss	status,0,c
 15677  013942  D015               	goto	l8414
 15678                           
 15679                           ;stkvar	_grs @ sp[(-13)+0]
 15680  013944  0EF6               	movlw	-10
 15681  013946  8CE3               	bsf	plusw1,6,c
 15682                           
 15683                           ;stkvar	_a @ sp[(-13)+-8]
 15684                           ;stkvar	_rem @ sp[(-13)+4]
 15685  013948  50E1               	movf	fsr1l,w,c
 15686  01394A  0FF7               	addlw	-9
 15687  01394C  6ED9               	movwf	fsr2l,c
 15688  01394E  50E2               	movf	fsr1h,w,c
 15689  013950  6EDA               	movwf	fsr2h,c
 15690  013952  0EFF               	movlw	255
 15691  013954  22DA               	addwfc	fsr2h,f,c
 15692  013956  0EEB               	movlw	-21
 15693  013958  50E3               	movf	plusw1,w,c
 15694  01395A  5EDE               	subwf	postinc2,f,c
 15695  01395C  0EEC               	movlw	-20
 15696  01395E  50E3               	movf	plusw1,w,c
 15697  013960  5ADE               	subwfb	postinc2,f,c
 15698  013962  0EED               	movlw	-19
 15699  013964  50E3               	movf	plusw1,w,c
 15700  013966  5ADE               	subwfb	postinc2,f,c
 15701  013968  0EEE               	movlw	-18
 15702  01396A  50E3               	movf	plusw1,w,c
 15703  01396C  5ADE               	subwfb	postinc2,f,c
 15704  01396E                     l8414:
 15705                           
 15706                           ;stkvar	_aexp @ sp[(-13)+10]
 15707  01396E  0EFD               	movlw	-3
 15708  013970  2AE3               	incf	plusw1,f,c
 15709  013972                     l8416:
 15710                           
 15711                           ;stkvar	_aexp @ sp[(-13)+10]
 15712  013972  0EFD               	movlw	-3
 15713  013974  006F FF8C  F025    	movff	plusw1,btemp
 15714  01397A  0E19               	movlw	25
 15715  01397C  6425               	cpfsgt	btemp^0,c
 15716  01397E  D7A9               	goto	l8398
 15717                           
 15718                           ;stkvar	_rem @ sp[(-13)+4]
 15719  013980  0EF7               	movlw	-9
 15720  013982  50E3               	movf	plusw1,w,c
 15721  013984  E10A               	bnz	u7900
 15722  013986  0EF8               	movlw	-8
 15723  013988  50E3               	movf	plusw1,w,c
 15724  01398A  E107               	bnz	u7900
 15725  01398C  0EF9               	movlw	-7
 15726  01398E  50E3               	movf	plusw1,w,c
 15727  013990  E104               	bnz	u7900
 15728  013992  0EFA               	movlw	-6
 15729  013994  50E3               	movf	plusw1,w,c
 15730  013996  B4D8               	btfsc	status,2,c
 15731  013998  D024               	goto	l8432
 15732  01399A                     u7900:
 15733                           
 15734                           ;stkvar	_grs @ sp[(-13)+0]
 15735  01399A  0EF3               	movlw	-13
 15736  01399C  80E3               	bsf	plusw1,0,c
 15737  01399E  D021               	goto	l8432
 15738  0139A0                     l8422:
 15739                           
 15740                           ;stkvar	_b @ sp[(-13)+-4]
 15741  0139A0  90D8               	bcf	status,0,c
 15742  0139A2  0EEF               	movlw	-17
 15743  0139A4  36E3               	rlcf	plusw1,f,c
 15744  0139A6  0EF0               	movlw	-16
 15745  0139A8  36E3               	rlcf	plusw1,f,c
 15746  0139AA  0EF1               	movlw	-15
 15747  0139AC  36E3               	rlcf	plusw1,f,c
 15748  0139AE  0EF2               	movlw	-14
 15749  0139B0  36E3               	rlcf	plusw1,f,c
 15750                           
 15751                           ;stkvar	_grs @ sp[(-13)+0]
 15752  0139B2  0EF6               	movlw	-10
 15753  0139B4  AEE3               	btfss	plusw1,7,c
 15754  0139B6  D002               	goto	l8428
 15755                           
 15756                           ;stkvar	_b @ sp[(-13)+-4]
 15757  0139B8  0EEF               	movlw	-17
 15758  0139BA  80E3               	bsf	plusw1,0,c
 15759  0139BC                     l8428:
 15760                           
 15761                           ;stkvar	_grs @ sp[(-13)+0]
 15762  0139BC  90D8               	bcf	status,0,c
 15763  0139BE  0EF3               	movlw	-13
 15764  0139C0  36E3               	rlcf	plusw1,f,c
 15765  0139C2  0EF4               	movlw	-12
 15766  0139C4  36E3               	rlcf	plusw1,f,c
 15767  0139C6  0EF5               	movlw	-11
 15768  0139C8  36E3               	rlcf	plusw1,f,c
 15769  0139CA  0EF6               	movlw	-10
 15770  0139CC  36E3               	rlcf	plusw1,f,c
 15771                           
 15772                           ;stkvar	_new_exp @ sp[(-13)+8]
 15773  0139CE  50E1               	movf	fsr1l,w,c
 15774  0139D0  0FFB               	addlw	-5
 15775  0139D2  6ED9               	movwf	fsr2l,c
 15776  0139D4  50E2               	movf	fsr1h,w,c
 15777  0139D6  6EDA               	movwf	fsr2h,c
 15778  0139D8  0EFF               	movlw	255
 15779  0139DA  22DA               	addwfc	fsr2h,f,c
 15780  0139DC  06DE               	decf	postinc2,f,c
 15781  0139DE  0E00               	movlw	0
 15782  0139E0  5ADD               	subwfb	postdec2,f,c
 15783  0139E2                     l8432:
 15784                           
 15785                           ;stkvar	_b @ sp[(-13)+-4]
 15786  0139E2  0EF1               	movlw	-15
 15787  0139E4  AEE3               	btfss	plusw1,7,c
 15788  0139E6  D7DC               	goto	l8422
 15789                           
 15790                           ;stkvar	_aexp @ sp[(-13)+10]
 15791  0139E8  0EFD               	movlw	-3
 15792  0139EA  6AE3               	clrf	plusw1,c
 15793                           
 15794                           ;stkvar	_grs @ sp[(-13)+0]
 15795  0139EC  0EF6               	movlw	-10
 15796  0139EE  AEE3               	btfss	plusw1,7,c
 15797  0139F0  D020               	goto	l8446
 15798                           
 15799                           ;stkvar	_grs @ sp[(-13)+0]
 15800  0139F2  50E1               	movf	fsr1l,w,c
 15801  0139F4  0FF3               	addlw	-13
 15802  0139F6  6ED9               	movwf	fsr2l,c
 15803  0139F8  50E2               	movf	fsr1h,w,c
 15804  0139FA  6EDA               	movwf	fsr2h,c
 15805  0139FC  0EFF               	movlw	255
 15806  0139FE  22DA               	addwfc	fsr2h,f,c
 15807  013A00  0EFF               	movlw	255
 15808  013A02  14DE               	andwf	postinc2,w,c
 15809  013A04  6E2D               	movwf	(btemp+8)^0,c
 15810  013A06  0EFF               	movlw	255
 15811  013A08  14DE               	andwf	postinc2,w,c
 15812  013A0A  6E2E               	movwf	(btemp+9)^0,c
 15813  013A0C  0EFF               	movlw	255
 15814  013A0E  14DE               	andwf	postinc2,w,c
 15815  013A10  6E2F               	movwf	(btemp+10)^0,c
 15816  013A12  0E7F               	movlw	127
 15817  013A14  14DE               	andwf	postinc2,w,c
 15818  013A16  6E30               	movwf	(btemp+11)^0,c
 15819  013A18  502D               	movf	(btemp+8)^0,w,c
 15820  013A1A  102E               	iorwf	(btemp+9)^0,w,c
 15821  013A1C  102F               	iorwf	(btemp+10)^0,w,c
 15822  013A1E  1030               	iorwf	(btemp+11)^0,w,c
 15823  013A20  B4D8               	btfsc	status,2,c
 15824  013A22  D004               	goto	l8442
 15825  013A24                     u7940:
 15826                           
 15827                           ;stkvar	_aexp @ sp[(-13)+10]
 15828  013A24  0EFD               	movlw	-3
 15829  013A26  6AE3               	clrf	plusw1,c
 15830  013A28  2AE3               	incf	plusw1,f,c
 15831  013A2A  D003               	goto	l8446
 15832  013A2C                     l8442:
 15833                           
 15834                           ;stkvar	_b @ sp[(-13)+-4]
 15835  013A2C  0EEF               	movlw	-17
 15836  013A2E  B0E3               	btfsc	plusw1,0,c
 15837  013A30  D7F9               	goto	u7940
 15838  013A32                     l8446:
 15839                           
 15840                           ;stkvar	_aexp @ sp[(-13)+10]
 15841  013A32  0EFD               	movlw	-3
 15842  013A34  50E3               	movf	plusw1,w,c
 15843  013A36  B4D8               	btfsc	status,2,c
 15844  013A38  D036               	goto	l8456
 15845                           
 15846                           ;stkvar	_b @ sp[(-13)+-4]
 15847  013A3A  50E1               	movf	fsr1l,w,c
 15848  013A3C  0FEF               	addlw	-17
 15849  013A3E  6ED9               	movwf	fsr2l,c
 15850  013A40  50E2               	movf	fsr1h,w,c
 15851  013A42  6EDA               	movwf	fsr2h,c
 15852  013A44  0EFF               	movlw	255
 15853  013A46  22DA               	addwfc	fsr2h,f,c
 15854  013A48  2ADE               	incf	postinc2,f,c
 15855  013A4A  0E00               	movlw	0
 15856  013A4C  22DE               	addwfc	postinc2,f,c
 15857  013A4E  22DE               	addwfc	postinc2,f,c
 15858  013A50  22DE               	addwfc	postinc2,f,c
 15859                           
 15860                           ;stkvar	_b @ sp[(-13)+-4]
 15861  013A52  0EF2               	movlw	-14
 15862  013A54  A0E3               	btfss	plusw1,0,c
 15863  013A56  D027               	goto	l8456
 15864  013A58  0E01               	movlw	1
 15865  013A5A  6E30               	movwf	(btemp+11)^0,c
 15866                           
 15867                           ;stkvar	_b @ sp[(-13)+-4]
 15868  013A5C  50E1               	movf	fsr1l,w,c
 15869  013A5E  0FEF               	addlw	-17
 15870  013A60  6ED9               	movwf	fsr2l,c
 15871  013A62  50E2               	movf	fsr1h,w,c
 15872  013A64  6EDA               	movwf	fsr2h,c
 15873  013A66  0EFF               	movlw	255
 15874  013A68  22DA               	addwfc	fsr2h,f,c
 15875  013A6A  2830               	incf	(btemp+11)^0,w,c
 15876  013A6C  52DE               	movf	postinc2,f,c
 15877  013A6E  D008               	goto	u7980
 15878  013A70                     u7985:
 15879  013A70  52DE               	movf	postinc2,f,c
 15880  013A72  90D8               	bcf	status,0,c
 15881  013A74  BEDC               	btfsc	preinc2,7,c
 15882  013A76  80D8               	bsf	status,0,c
 15883  013A78  32DD               	rrcf	postdec2,f,c
 15884  013A7A  32DD               	rrcf	postdec2,f,c
 15885  013A7C  32DD               	rrcf	postdec2,f,c
 15886  013A7E  32DE               	rrcf	postinc2,f,c
 15887  013A80                     u7980:
 15888  013A80  2EE8               	decfsz	wreg,f,c
 15889  013A82  D7F6               	goto	u7985
 15890                           
 15891                           ;stkvar	_new_exp @ sp[(-13)+8]
 15892  013A84  0EFB               	movlw	-5
 15893  013A86  50E3               	movf	plusw1,w,c
 15894  013A88  0F01               	addlw	1
 15895  013A8A  6E25               	movwf	btemp^0,c
 15896  013A8C  0EFB               	movlw	-5
 15897  013A8E  0060  F097  FFE3   	movff	btemp,plusw1
 15898  013A94  6A25               	clrf	btemp^0,c
 15899  013A96  0EFC               	movlw	-4
 15900  013A98  50E3               	movf	plusw1,w,c
 15901  013A9A  2025               	addwfc	btemp^0,w,c
 15902  013A9C  6E25               	movwf	btemp^0,c
 15903  013A9E  0EFC               	movlw	-4
 15904  013AA0  0060  F097  FFE3   	movff	btemp,plusw1
 15905  013AA6                     l8456:
 15906                           
 15907                           ;stkvar	_new_exp @ sp[(-13)+8]
 15908  013AA6  0EFC               	movlw	-4
 15909  013AA8  BEE3               	btfsc	plusw1,7,c
 15910  013AAA  D01B               	goto	l8462
 15911  013AAC  0EFC               	movlw	-4
 15912  013AAE  50E3               	movf	plusw1,w,c
 15913  013AB0  E104               	bnz	u7990
 15914  013AB2  0EFB               	movlw	-5
 15915  013AB4  28E3               	incf	plusw1,w,c
 15916  013AB6  A0D8               	btfss	status,0,c
 15917  013AB8  D014               	goto	l8462
 15918  013ABA                     u7990:
 15919  013ABA  0EFF               	movlw	255
 15920  013ABC  6E2F               	movwf	(btemp+10)^0,c
 15921  013ABE  0E00               	movlw	0
 15922  013AC0  6E30               	movwf	(btemp+11)^0,c
 15923                           
 15924                           ;stkvar	_new_exp @ sp[(-13)+8]
 15925  013AC2  0EFB               	movlw	-5
 15926  013AC4  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15927  013ACA  0EFC               	movlw	-4
 15928  013ACC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15929                           
 15930                           ;stkvar	_b @ sp[(-13)+-4]
 15931  013AD2  0EEF               	movlw	-17
 15932  013AD4  6AE3               	clrf	plusw1,c
 15933  013AD6  0EF0               	movlw	-16
 15934  013AD8  6AE3               	clrf	plusw1,c
 15935  013ADA  0EF1               	movlw	-15
 15936  013ADC  6AE3               	clrf	plusw1,c
 15937  013ADE  0EF2               	movlw	-14
 15938  013AE0  6AE3               	clrf	plusw1,c
 15939  013AE2                     l8462:
 15940                           
 15941                           ;stkvar	_new_exp @ sp[(-13)+8]
 15942  013AE2  0EFC               	movlw	-4
 15943  013AE4  BEE3               	btfsc	plusw1,7,c
 15944  013AE6  D007               	goto	u8000
 15945  013AE8  0EFC               	movlw	-4
 15946  013AEA  50E3               	movf	plusw1,w,c
 15947  013AEC  E112               	bnz	l8468
 15948  013AEE  0EFB               	movlw	-5
 15949  013AF0  04E3               	decf	plusw1,w,c
 15950  013AF2  B0D8               	btfsc	status,0,c
 15951  013AF4  D00E               	goto	l8468
 15952  013AF6                     u8000:
 15953                           
 15954                           ;stkvar	_new_exp @ sp[(-13)+8]
 15955  013AF6  0EFB               	movlw	-5
 15956  013AF8  6AE3               	clrf	plusw1,c
 15957  013AFA  0EFC               	movlw	-4
 15958  013AFC  6AE3               	clrf	plusw1,c
 15959                           
 15960                           ;stkvar	_b @ sp[(-13)+-4]
 15961  013AFE  0EEF               	movlw	-17
 15962  013B00  6AE3               	clrf	plusw1,c
 15963  013B02  0EF0               	movlw	-16
 15964  013B04  6AE3               	clrf	plusw1,c
 15965  013B06  0EF1               	movlw	-15
 15966  013B08  6AE3               	clrf	plusw1,c
 15967  013B0A  0EF2               	movlw	-14
 15968  013B0C  6AE3               	clrf	plusw1,c
 15969                           
 15970                           ;stkvar	_sign @ sp[(-13)+12]
 15971  013B0E  0EFF               	movlw	-1
 15972  013B10  6AE3               	clrf	plusw1,c
 15973  013B12                     l8468:
 15974                           
 15975                           ;stkvar	_new_exp @ sp[(-13)+8]
 15976                           ;stkvar	_bexp @ sp[(-13)+11]
 15977  013B12  0EFB               	movlw	-5
 15978  013B14  006F FF8C  F025    	movff	plusw1,btemp
 15979  013B1A  0EFE               	movlw	-2
 15980  013B1C  0060  F097  FFE3   	movff	btemp,plusw1
 15981                           
 15982                           ;stkvar	_bexp @ sp[(-13)+11]
 15983  013B22  0EFE               	movlw	-2
 15984  013B24  A0E3               	btfss	plusw1,0,c
 15985  013B26  D009               	goto	l8474
 15986                           
 15987                           ;stkvar	_b @ sp[(-13)+-4]
 15988  013B28  0EF1               	movlw	241
 15989  013B2A  24E1               	addwf	fsr1l,w,c
 15990  013B2C  6ED9               	movwf	fsr2l,c
 15991  013B2E  0EFF               	movlw	255
 15992  013B30  20E2               	addwfc	fsr1h,w,c
 15993  013B32  6EDA               	movwf	fsr2h,c
 15994  013B34  0E00               	movlw	0
 15995  013B36  8EDB               	bsf	plusw2,7,c
 15996  013B38  D008               	goto	l8476
 15997  013B3A                     l8474:
 15998                           
 15999                           ;stkvar	_b @ sp[(-13)+-4]
 16000  013B3A  0EF1               	movlw	241
 16001  013B3C  24E1               	addwf	fsr1l,w,c
 16002  013B3E  6ED9               	movwf	fsr2l,c
 16003  013B40  0EFF               	movlw	255
 16004  013B42  20E2               	addwfc	fsr1h,w,c
 16005  013B44  6EDA               	movwf	fsr2h,c
 16006  013B46  0E7F               	movlw	127
 16007  013B48  16DF               	andwf	indf2,f,c
 16008  013B4A                     l8476:
 16009                           
 16010                           ;stkvar	_b @ sp[(-13)+-4]
 16011  013B4A  0EF2               	movlw	242
 16012  013B4C  24E1               	addwf	fsr1l,w,c
 16013  013B4E  6ED9               	movwf	fsr2l,c
 16014  013B50  0EFF               	movlw	255
 16015  013B52  20E2               	addwfc	fsr1h,w,c
 16016  013B54  6EDA               	movwf	fsr2h,c
 16017                           
 16018                           ;stkvar	_bexp @ sp[(-13)+11]
 16019  013B56  0EFE               	movlw	-2
 16020  013B58  006F FF8C  F030    	movff	plusw1,btemp+11
 16021  013B5E  90D8               	bcf	status,0,c
 16022  013B60  3030               	rrcf	(btemp+11)^0,w,c
 16023  013B62  6EDF               	movwf	indf2,c
 16024  013B64  D644               	goto	l8374
 16025  013B66                     l2795:
 16026                           
 16027                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 16028  013B66  0EEB               	movlw	235
 16029  013B68  26E1               	addwf	fsr1l,f,c
 16030  013B6A  0EFF               	movlw	255
 16031  013B6C  22E2               	addwfc	fsr1h,f,c
 16032  013B6E  0012               	return		;funcret
 16033  013B70                     __end_of___fldiv:
 16034                           	opt callstack 0
 16035                           
 16036 ;; *************** function ___awmod *****************
 16037 ;; Defined at:
 16038 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 16039 ;; Parameters:    Size  Location     Type
 16040 ;;  dividend        2  [STACK] int 
 16041 ;;  divisor         2  [STACK] int 
 16042 ;; Auto vars:     Size  Location     Type
 16043 ;;  sign            1  [STACK] unsigned char 
 16044 ;;  counter         1  [STACK] unsigned char 
 16045 ;; Return value:  Size  Location     Type
 16046 ;;                  2  [STACK] int 
 16047 ;; Registers used:
 16048 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 16049 ;; Tracked objects:
 16050 ;;		On entry : 0/0
 16051 ;;		On exit  : 0/0
 16052 ;;		Unchanged: 0/0
 16053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16058 ;;Total ram usage:        0 bytes
 16059 ;; Hardware stack levels used:    1
 16060 ;; Hardware stack levels required when called:    7
 16061 ;; This function calls:
 16062 ;;		Nothing
 16063 ;; This function is called by:
 16064 ;;		_efgtoa
 16065 ;; This function uses a reentrant model
 16066 ;;
 16067                           
 16068                           	psect	text59
 16069  016C6A                     __ptext59:
 16070                           	opt callstack 0
 16071  016C6A                     ___awmod:
 16072                           	opt callstack 0
 16073                           
 16074                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16075  016C6A  52E6               	movf	postinc1,f,c
 16076  016C6C  52E6               	movf	postinc1,f,c
 16077                           
 16078                           ;stkvar	_sign @ sp[(-2)+0]
 16079                           
 16080                           ;incstack = 0
 16081  016C6E  0EFE               	movlw	-2
 16082  016C70  6AE3               	clrf	plusw1,c
 16083                           
 16084                           ;stkvar	_dividend @ sp[(-2)+-2]
 16085  016C72  0EFD               	movlw	-3
 16086  016C74  AEE3               	btfss	plusw1,7,c
 16087  016C76  D009               	goto	l7018
 16088                           
 16089                           ;stkvar	_dividend @ sp[(-2)+-2]
 16090                           ;stkvar	_dividend @ sp[(-2)+-2]
 16091  016C78  0EFC               	movlw	-4
 16092  016C7A  6CE3               	negf	plusw1,c
 16093  016C7C  0EFD               	movlw	-3
 16094  016C7E  1EE3               	comf	plusw1,f,c
 16095  016C80  B0D8               	btfsc	status,0,c
 16096  016C82  2AE3               	incf	plusw1,f,c
 16097                           
 16098                           ;stkvar	_sign @ sp[(-2)+0]
 16099  016C84  0EFE               	movlw	-2
 16100  016C86  6AE3               	clrf	plusw1,c
 16101  016C88  2AE3               	incf	plusw1,f,c
 16102  016C8A                     l7018:
 16103                           
 16104                           ;stkvar	_divisor @ sp[(-2)+-4]
 16105  016C8A  0EFB               	movlw	-5
 16106  016C8C  AEE3               	btfss	plusw1,7,c
 16107  016C8E  D006               	goto	l7022
 16108                           
 16109                           ;stkvar	_divisor @ sp[(-2)+-4]
 16110                           ;stkvar	_divisor @ sp[(-2)+-4]
 16111  016C90  0EFA               	movlw	-6
 16112  016C92  6CE3               	negf	plusw1,c
 16113  016C94  0EFB               	movlw	-5
 16114  016C96  1EE3               	comf	plusw1,f,c
 16115  016C98  B0D8               	btfsc	status,0,c
 16116  016C9A  2AE3               	incf	plusw1,f,c
 16117  016C9C                     l7022:
 16118                           
 16119                           ;stkvar	_divisor @ sp[(-2)+-4]
 16120  016C9C  0EFA               	movlw	-6
 16121  016C9E  006F FF8C  F025    	movff	plusw1,btemp
 16122  016CA4  0EFB               	movlw	-5
 16123  016CA6  50E3               	movf	plusw1,w,c
 16124  016CA8  1025               	iorwf	btemp^0,w,c
 16125  016CAA  B4D8               	btfsc	status,2,c
 16126  016CAC  D053               	goto	u5630
 16127                           
 16128                           ;stkvar	_counter @ sp[(-2)+1]
 16129  016CAE  0EFF               	movlw	-1
 16130  016CB0  6AE3               	clrf	plusw1,c
 16131  016CB2  D012               	goto	L15
 16132  016CB4                     l7026:
 16133                           
 16134                           ;stkvar	_divisor @ sp[(-2)+-4]
 16135  016CB4  0EFA               	movlw	-6
 16136  016CB6  50E3               	movf	plusw1,w,c
 16137  016CB8  90D8               	bcf	status,0,c
 16138  016CBA  34E8               	rlcf	wreg,w,c
 16139  016CBC  6E25               	movwf	btemp^0,c
 16140  016CBE  0EFA               	movlw	-6
 16141  016CC0  0060  F097  FFE3   	movff	btemp,plusw1
 16142  016CC6  0EFB               	movlw	-5
 16143  016CC8  50E3               	movf	plusw1,w,c
 16144  016CCA  34E8               	rlcf	wreg,w,c
 16145  016CCC  6E25               	movwf	btemp^0,c
 16146  016CCE  0EFB               	movlw	-5
 16147  016CD0  0060  F097  FFE3   	movff	btemp,plusw1
 16148                           
 16149                           ;stkvar	_counter @ sp[(-2)+1]
 16150  016CD6  0EFF               	movlw	-1
 16151  016CD8                     L15:
 16152  016CD8  2AE3               	incf	plusw1,f,c
 16153                           
 16154                           ;stkvar	_divisor @ sp[(-2)+-4]
 16155  016CDA  0EFB               	movlw	-5
 16156  016CDC  AEE3               	btfss	plusw1,7,c
 16157  016CDE  D7EA               	goto	l7026
 16158  016CE0                     u5610:
 16159                           
 16160                           ;stkvar	_divisor @ sp[(-2)+-4]
 16161  016CE0  0EFA               	movlw	-6
 16162  016CE2  006F FF8C  F02F    	movff	plusw1,btemp+10
 16163  016CE8  0EFB               	movlw	-5
 16164  016CEA  006F FF8C  F030    	movff	plusw1,btemp+11
 16165                           
 16166                           ;stkvar	_dividend @ sp[(-2)+-2]
 16167  016CF0  0EFC               	movlw	-4
 16168  016CF2  006F FF8C  F02D    	movff	plusw1,btemp+8
 16169  016CF8  0EFD               	movlw	-3
 16170  016CFA  006F FF8C  F02E    	movff	plusw1,btemp+9
 16171  016D00  502F               	movf	(btemp+10)^0,w,c
 16172  016D02  5C2D               	subwf	(btemp+8)^0,w,c
 16173  016D04  5030               	movf	(btemp+11)^0,w,c
 16174  016D06  582E               	subwfb	(btemp+9)^0,w,c
 16175  016D08  A0D8               	btfss	status,0,c
 16176  016D0A  D014               	goto	l7036
 16177                           
 16178                           ;stkvar	_divisor @ sp[(-2)+-4]
 16179                           ;stkvar	_dividend @ sp[(-2)+-2]
 16180  016D0C  0EFC               	movlw	-4
 16181  016D0E  50E3               	movf	plusw1,w,c
 16182  016D10  6E25               	movwf	btemp^0,c
 16183  016D12  0EFA               	movlw	-6
 16184  016D14  50E3               	movf	plusw1,w,c
 16185  016D16  5E25               	subwf	btemp^0,f,c
 16186  016D18  0EFC               	movlw	-4
 16187  016D1A  0060  F097  FFE3   	movff	btemp,plusw1
 16188  016D20  0EFD               	movlw	-3
 16189  016D22  50E3               	movf	plusw1,w,c
 16190  016D24  6E25               	movwf	btemp^0,c
 16191  016D26  0EFB               	movlw	-5
 16192  016D28  50E3               	movf	plusw1,w,c
 16193  016D2A  5A25               	subwfb	btemp^0,f,c
 16194  016D2C  0EFD               	movlw	-3
 16195  016D2E  0060  F097  FFE3   	movff	btemp,plusw1
 16196  016D34                     l7036:
 16197                           
 16198                           ;stkvar	_divisor @ sp[(-2)+-4]
 16199  016D34  90D8               	bcf	status,0,c
 16200  016D36  0EFB               	movlw	-5
 16201  016D38  32E3               	rrcf	plusw1,f,c
 16202  016D3A  0EFA               	movlw	-6
 16203  016D3C  32E3               	rrcf	plusw1,f,c
 16204                           
 16205                           ;stkvar	_counter @ sp[(-2)+1]
 16206  016D3E  0EFF               	movlw	-1
 16207  016D40  50E3               	movf	plusw1,w,c
 16208  016D42  6E25               	movwf	btemp^0,c
 16209  016D44  0E01               	movlw	1
 16210  016D46  5E25               	subwf	btemp^0,f,c
 16211  016D48  0EFF               	movlw	-1
 16212  016D4A  0060  F097  FFE3   	movff	btemp,plusw1
 16213  016D50  A4D8               	btfss	status,2,c
 16214  016D52  D7C6               	goto	u5610
 16215  016D54                     u5630:
 16216                           
 16217                           ;stkvar	_sign @ sp[(-2)+0]
 16218  016D54  0EFE               	movlw	-2
 16219  016D56  50E3               	movf	plusw1,w,c
 16220  016D58  B4D8               	btfsc	status,2,c
 16221  016D5A  D006               	goto	l7044
 16222                           
 16223                           ;stkvar	_dividend @ sp[(-2)+-2]
 16224                           ;stkvar	_dividend @ sp[(-2)+-2]
 16225  016D5C  0EFC               	movlw	-4
 16226  016D5E  6CE3               	negf	plusw1,c
 16227  016D60  0EFD               	movlw	-3
 16228  016D62  1EE3               	comf	plusw1,f,c
 16229  016D64  B0D8               	btfsc	status,0,c
 16230  016D66  2AE3               	incf	plusw1,f,c
 16231  016D68                     l7044:
 16232                           
 16233                           ;stkvar	_dividend @ sp[(-2)+-2]
 16234  016D68  0EFC               	movlw	-4
 16235  016D6A  006F FF8C  F025    	movff	plusw1,btemp
 16236  016D70  0EFD               	movlw	-3
 16237  016D72  006F FF8C  F026    	movff	plusw1,btemp+1
 16238                           
 16239                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16240  016D78  0EFA               	movlw	250
 16241  016D7A  26E1               	addwf	fsr1l,f,c
 16242  016D7C  0EFF               	movlw	255
 16243  016D7E  22E2               	addwfc	fsr1h,f,c
 16244  016D80  0012               	return		;funcret
 16245  016D82                     __end_of___awmod:
 16246                           	opt callstack 0
 16247                           
 16248 ;; *************** function ___awdiv *****************
 16249 ;; Defined at:
 16250 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 16251 ;; Parameters:    Size  Location     Type
 16252 ;;  dividend        2  [STACK] int 
 16253 ;;  divisor         2  [STACK] int 
 16254 ;; Auto vars:     Size  Location     Type
 16255 ;;  quotient        2  [STACK] int 
 16256 ;;  sign            1  [STACK] unsigned char 
 16257 ;;  counter         1  [STACK] unsigned char 
 16258 ;; Return value:  Size  Location     Type
 16259 ;;                  2  [STACK] int 
 16260 ;; Registers used:
 16261 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 16262 ;; Tracked objects:
 16263 ;;		On entry : 0/0
 16264 ;;		On exit  : 0/0
 16265 ;;		Unchanged: 0/0
 16266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16271 ;;Total ram usage:        0 bytes
 16272 ;; Hardware stack levels used:    1
 16273 ;; Hardware stack levels required when called:    7
 16274 ;; This function calls:
 16275 ;;		Nothing
 16276 ;; This function is called by:
 16277 ;;		_efgtoa
 16278 ;; This function uses a reentrant model
 16279 ;;
 16280                           
 16281                           	psect	text60
 16282  016782                     __ptext60:
 16283                           	opt callstack 0
 16284  016782                     ___awdiv:
 16285                           	opt callstack 0
 16286                           
 16287                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16288  016782  52E6               	movf	postinc1,f,c
 16289  016784  52E6               	movf	postinc1,f,c
 16290  016786  52E6               	movf	postinc1,f,c
 16291  016788  52E6               	movf	postinc1,f,c
 16292                           
 16293                           ;stkvar	_sign @ sp[(-4)+2]
 16294                           
 16295                           ;incstack = 0
 16296  01678A  0EFE               	movlw	-2
 16297  01678C  6AE3               	clrf	plusw1,c
 16298                           
 16299                           ;stkvar	_divisor @ sp[(-4)+-4]
 16300  01678E  0EF9               	movlw	-7
 16301  016790  AEE3               	btfss	plusw1,7,c
 16302  016792  D009               	goto	l6972
 16303                           
 16304                           ;stkvar	_divisor @ sp[(-4)+-4]
 16305                           ;stkvar	_divisor @ sp[(-4)+-4]
 16306  016794  0EF8               	movlw	-8
 16307  016796  6CE3               	negf	plusw1,c
 16308  016798  0EF9               	movlw	-7
 16309  01679A  1EE3               	comf	plusw1,f,c
 16310  01679C  B0D8               	btfsc	status,0,c
 16311  01679E  2AE3               	incf	plusw1,f,c
 16312                           
 16313                           ;stkvar	_sign @ sp[(-4)+2]
 16314  0167A0  0EFE               	movlw	-2
 16315  0167A2  6AE3               	clrf	plusw1,c
 16316  0167A4  2AE3               	incf	plusw1,f,c
 16317  0167A6                     l6972:
 16318                           
 16319                           ;stkvar	_dividend @ sp[(-4)+-2]
 16320  0167A6  0EFB               	movlw	-5
 16321  0167A8  AEE3               	btfss	plusw1,7,c
 16322  0167AA  D008               	goto	l6978
 16323                           
 16324                           ;stkvar	_dividend @ sp[(-4)+-2]
 16325                           ;stkvar	_dividend @ sp[(-4)+-2]
 16326  0167AC  0EFA               	movlw	-6
 16327  0167AE  6CE3               	negf	plusw1,c
 16328  0167B0  0EFB               	movlw	-5
 16329  0167B2  1EE3               	comf	plusw1,f,c
 16330  0167B4  B0D8               	btfsc	status,0,c
 16331  0167B6  2AE3               	incf	plusw1,f,c
 16332                           
 16333                           ;stkvar	_sign @ sp[(-4)+2]
 16334  0167B8  0EFE               	movlw	-2
 16335  0167BA  70E3               	btg	plusw1,0,c
 16336  0167BC                     l6978:
 16337                           
 16338                           ;stkvar	_quotient @ sp[(-4)+0]
 16339  0167BC  0EFC               	movlw	-4
 16340  0167BE  6AE3               	clrf	plusw1,c
 16341  0167C0  0EFD               	movlw	-3
 16342  0167C2  6AE3               	clrf	plusw1,c
 16343                           
 16344                           ;stkvar	_divisor @ sp[(-4)+-4]
 16345  0167C4  0EF8               	movlw	-8
 16346  0167C6  006F FF8C  F025    	movff	plusw1,btemp
 16347  0167CC  0EF9               	movlw	-7
 16348  0167CE  50E3               	movf	plusw1,w,c
 16349  0167D0  1025               	iorwf	btemp^0,w,c
 16350  0167D2  B4D8               	btfsc	status,2,c
 16351  0167D4  D066               	goto	u5560
 16352                           
 16353                           ;stkvar	_counter @ sp[(-4)+3]
 16354  0167D6  0EFF               	movlw	-1
 16355  0167D8  6AE3               	clrf	plusw1,c
 16356  0167DA  D012               	goto	L16
 16357  0167DC                     l6984:
 16358                           
 16359                           ;stkvar	_divisor @ sp[(-4)+-4]
 16360  0167DC  0EF8               	movlw	-8
 16361  0167DE  50E3               	movf	plusw1,w,c
 16362  0167E0  90D8               	bcf	status,0,c
 16363  0167E2  34E8               	rlcf	wreg,w,c
 16364  0167E4  6E25               	movwf	btemp^0,c
 16365  0167E6  0EF8               	movlw	-8
 16366  0167E8  0060  F097  FFE3   	movff	btemp,plusw1
 16367  0167EE  0EF9               	movlw	-7
 16368  0167F0  50E3               	movf	plusw1,w,c
 16369  0167F2  34E8               	rlcf	wreg,w,c
 16370  0167F4  6E25               	movwf	btemp^0,c
 16371  0167F6  0EF9               	movlw	-7
 16372  0167F8  0060  F097  FFE3   	movff	btemp,plusw1
 16373                           
 16374                           ;stkvar	_counter @ sp[(-4)+3]
 16375  0167FE  0EFF               	movlw	-1
 16376  016800                     L16:
 16377  016800  2AE3               	incf	plusw1,f,c
 16378                           
 16379                           ;stkvar	_divisor @ sp[(-4)+-4]
 16380  016802  0EF9               	movlw	-7
 16381  016804  AEE3               	btfss	plusw1,7,c
 16382  016806  D7EA               	goto	l6984
 16383  016808                     u5540:
 16384                           
 16385                           ;stkvar	_quotient @ sp[(-4)+0]
 16386  016808  0EFC               	movlw	-4
 16387  01680A  50E3               	movf	plusw1,w,c
 16388  01680C  90D8               	bcf	status,0,c
 16389  01680E  34E8               	rlcf	wreg,w,c
 16390  016810  6E25               	movwf	btemp^0,c
 16391  016812  0EFC               	movlw	-4
 16392  016814  0060  F097  FFE3   	movff	btemp,plusw1
 16393  01681A  0EFD               	movlw	-3
 16394  01681C  50E3               	movf	plusw1,w,c
 16395  01681E  34E8               	rlcf	wreg,w,c
 16396  016820  6E25               	movwf	btemp^0,c
 16397  016822  0EFD               	movlw	-3
 16398  016824  0060  F097  FFE3   	movff	btemp,plusw1
 16399                           
 16400                           ;stkvar	_divisor @ sp[(-4)+-4]
 16401  01682A  0EF8               	movlw	-8
 16402  01682C  006F FF8C  F02F    	movff	plusw1,btemp+10
 16403  016832  0EF9               	movlw	-7
 16404  016834  006F FF8C  F030    	movff	plusw1,btemp+11
 16405                           
 16406                           ;stkvar	_dividend @ sp[(-4)+-2]
 16407  01683A  0EFA               	movlw	-6
 16408  01683C  006F FF8C  F02D    	movff	plusw1,btemp+8
 16409  016842  0EFB               	movlw	-5
 16410  016844  006F FF8C  F02E    	movff	plusw1,btemp+9
 16411  01684A  502F               	movf	(btemp+10)^0,w,c
 16412  01684C  5C2D               	subwf	(btemp+8)^0,w,c
 16413  01684E  5030               	movf	(btemp+11)^0,w,c
 16414  016850  582E               	subwfb	(btemp+9)^0,w,c
 16415  016852  A0D8               	btfss	status,0,c
 16416  016854  D016               	goto	l6998
 16417                           
 16418                           ;stkvar	_divisor @ sp[(-4)+-4]
 16419                           ;stkvar	_dividend @ sp[(-4)+-2]
 16420  016856  0EFA               	movlw	-6
 16421  016858  50E3               	movf	plusw1,w,c
 16422  01685A  6E25               	movwf	btemp^0,c
 16423  01685C  0EF8               	movlw	-8
 16424  01685E  50E3               	movf	plusw1,w,c
 16425  016860  5E25               	subwf	btemp^0,f,c
 16426  016862  0EFA               	movlw	-6
 16427  016864  0060  F097  FFE3   	movff	btemp,plusw1
 16428  01686A  0EFB               	movlw	-5
 16429  01686C  50E3               	movf	plusw1,w,c
 16430  01686E  6E25               	movwf	btemp^0,c
 16431  016870  0EF9               	movlw	-7
 16432  016872  50E3               	movf	plusw1,w,c
 16433  016874  5A25               	subwfb	btemp^0,f,c
 16434  016876  0EFB               	movlw	-5
 16435  016878  0060  F097  FFE3   	movff	btemp,plusw1
 16436                           
 16437                           ;stkvar	_quotient @ sp[(-4)+0]
 16438  01687E  0EFC               	movlw	-4
 16439  016880  80E3               	bsf	plusw1,0,c
 16440  016882                     l6998:
 16441                           
 16442                           ;stkvar	_divisor @ sp[(-4)+-4]
 16443  016882  90D8               	bcf	status,0,c
 16444  016884  0EF9               	movlw	-7
 16445  016886  32E3               	rrcf	plusw1,f,c
 16446  016888  0EF8               	movlw	-8
 16447  01688A  32E3               	rrcf	plusw1,f,c
 16448                           
 16449                           ;stkvar	_counter @ sp[(-4)+3]
 16450  01688C  0EFF               	movlw	-1
 16451  01688E  50E3               	movf	plusw1,w,c
 16452  016890  6E25               	movwf	btemp^0,c
 16453  016892  0E01               	movlw	1
 16454  016894  5E25               	subwf	btemp^0,f,c
 16455  016896  0EFF               	movlw	-1
 16456  016898  0060  F097  FFE3   	movff	btemp,plusw1
 16457  01689E  A4D8               	btfss	status,2,c
 16458  0168A0  D7B3               	goto	u5540
 16459  0168A2                     u5560:
 16460                           
 16461                           ;stkvar	_sign @ sp[(-4)+2]
 16462  0168A2  0EFE               	movlw	-2
 16463  0168A4  50E3               	movf	plusw1,w,c
 16464  0168A6  B4D8               	btfsc	status,2,c
 16465  0168A8  D006               	goto	l7006
 16466                           
 16467                           ;stkvar	_quotient @ sp[(-4)+0]
 16468                           ;stkvar	_quotient @ sp[(-4)+0]
 16469  0168AA  0EFC               	movlw	-4
 16470  0168AC  6CE3               	negf	plusw1,c
 16471  0168AE  0EFD               	movlw	-3
 16472  0168B0  1EE3               	comf	plusw1,f,c
 16473  0168B2  B0D8               	btfsc	status,0,c
 16474  0168B4  2AE3               	incf	plusw1,f,c
 16475  0168B6                     l7006:
 16476                           
 16477                           ;stkvar	_quotient @ sp[(-4)+0]
 16478  0168B6  0EFC               	movlw	-4
 16479  0168B8  006F FF8C  F025    	movff	plusw1,btemp
 16480  0168BE  0EFD               	movlw	-3
 16481  0168C0  006F FF8C  F026    	movff	plusw1,btemp+1
 16482                           
 16483                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16484  0168C6  0EF8               	movlw	248
 16485  0168C8  26E1               	addwf	fsr1l,f,c
 16486  0168CA  0EFF               	movlw	255
 16487  0168CC  22E2               	addwfc	fsr1h,f,c
 16488  0168CE  0012               	return		;funcret
 16489  0168D0                     __end_of___awdiv:
 16490                           	opt callstack 0
 16491                           
 16492 ;; *************** function _dtoa *****************
 16493 ;; Defined at:
 16494 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16495 ;; Parameters:    Size  Location     Type
 16496 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16497 ;;		 -> f(6), NULL(0), 
 16498 ;;  d               8  [STACK] long long 
 16499 ;; Auto vars:     Size  Location     Type
 16500 ;;  n               8  [STACK] long long 
 16501 ;;  i               2  [STACK] int 
 16502 ;;  s               2  [STACK] int 
 16503 ;;  w               2  [STACK] int 
 16504 ;;  p               2  [STACK] int 
 16505 ;; Return value:  Size  Location     Type
 16506 ;;                  2  [STACK] int 
 16507 ;; Registers used:
 16508 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 16509 ;; Tracked objects:
 16510 ;;		On entry : 0/0
 16511 ;;		On exit  : 0/0
 16512 ;;		Unchanged: 0/0
 16513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16518 ;;Total ram usage:        0 bytes
 16519 ;; Hardware stack levels used:    1
 16520 ;; Hardware stack levels required when called:   12
 16521 ;; This function calls:
 16522 ;;		___aodiv
 16523 ;;		___aomod
 16524 ;;		_abs
 16525 ;;		_pad
 16526 ;; This function is called by:
 16527 ;;		_vfpfcnvrt
 16528 ;; This function uses a reentrant model
 16529 ;;
 16530                           
 16531                           	psect	text61
 16532  01401C                     __ptext61:
 16533                           	opt callstack 0
 16534  01401C                     _dtoa:
 16535                           	opt callstack 0
 16536                           
 16537                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 16538  01401C  0E12               	movlw	18
 16539  01401E  26E1               	addwf	fsr1l,f,c
 16540  014020  0E00               	movlw	0
 16541  014022  22E2               	addwfc	fsr1h,f,c
 16542                           
 16543                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 16544                           ;stkvar	_d @ sp[(-18)+-10]
 16545                           
 16546                           ;incstack = 0
 16547  014024  0EE4               	movlw	228
 16548  014026  24E1               	addwf	fsr1l,w,c
 16549  014028  6ED9               	movwf	fsr2l,c
 16550  01402A  0EFF               	movlw	255
 16551  01402C  20E2               	addwfc	fsr1h,w,c
 16552  01402E  6EDA               	movwf	fsr2h,c
 16553                           
 16554                           ;stkvar	_n @ sp[(-18)+2]
 16555  014030  0E08               	movlw	8
 16556  014032  6E25               	movwf	btemp^0,c
 16557  014034  0EF0               	movlw	-16
 16558  014036                     us929999:
 16559  014036  006F FF7B FFE3     	movff	postinc2,plusw1
 16560  01403C  28E8               	incf	wreg,w,c
 16561  01403E  2E25               	decfsz	btemp^0,f,c
 16562  014040  D7FA               	bra	us929999
 16563                           
 16564                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 16565                           ;stkvar	_n @ sp[(-18)+2]
 16566  014042  0EF7               	movlw	-9
 16567  014044  AEE3               	btfss	plusw1,7,c
 16568  014046  D002               	goto	u9300
 16569  014048  0E01               	movlw	1
 16570  01404A  D001               	goto	u9310
 16571  01404C                     u9300:
 16572  01404C  0E00               	movlw	0
 16573  01404E                     u9310:
 16574  01404E  6E2F               	movwf	(btemp+10)^0,c
 16575  014050  6A30               	clrf	(btemp+11)^0,c
 16576                           
 16577                           ;stkvar	_s @ sp[(-18)+12]
 16578  014052  0EFA               	movlw	-6
 16579  014054  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 16580  01405A  0EFB               	movlw	-5
 16581  01405C  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 16582                           
 16583                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 16584                           ;stkvar	_s @ sp[(-18)+12]
 16585  014062  0EFA               	movlw	-6
 16586  014064  006F FF8C  F025    	movff	plusw1,btemp
 16587  01406A  0EFB               	movlw	-5
 16588  01406C  50E3               	movf	plusw1,w,c
 16589  01406E  1025               	iorwf	btemp^0,w,c
 16590  014070  B4D8               	btfsc	status,2,c
 16591  014072  D025               	goto	u9330
 16592                           
 16593                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 16594                           ;stkvar	_n @ sp[(-18)+2]
 16595                           ;stkvar	_n @ sp[(-18)+2]
 16596  014074  0EF0               	movlw	-16
 16597  014076  6CE3               	negf	plusw1,c
 16598  014078  0EF1               	movlw	-15
 16599  01407A  1EE3               	comf	plusw1,f,c
 16600  01407C  0EF2               	movlw	-14
 16601  01407E  1EE3               	comf	plusw1,f,c
 16602  014080  0EF3               	movlw	-13
 16603  014082  1EE3               	comf	plusw1,f,c
 16604  014084  0EF4               	movlw	-12
 16605  014086  1EE3               	comf	plusw1,f,c
 16606  014088  0EF5               	movlw	-11
 16607  01408A  1EE3               	comf	plusw1,f,c
 16608  01408C  0EF6               	movlw	-10
 16609  01408E  1EE3               	comf	plusw1,f,c
 16610  014090  0EF7               	movlw	-9
 16611  014092  1EE3               	comf	plusw1,f,c
 16612  014094  E314               	bnc	u9330
 16613  014096  0EF1               	movlw	-15
 16614  014098  2AE3               	incf	plusw1,f,c
 16615  01409A  E311               	bnc	u9330
 16616  01409C  0EF2               	movlw	-14
 16617  01409E  2AE3               	incf	plusw1,f,c
 16618  0140A0  E30E               	bnc	u9330
 16619  0140A2  0EF3               	movlw	-13
 16620  0140A4  2AE3               	incf	plusw1,f,c
 16621  0140A6  E30B               	bnc	u9330
 16622  0140A8  0EF4               	movlw	-12
 16623  0140AA  2AE3               	incf	plusw1,f,c
 16624  0140AC  E308               	bnc	u9330
 16625  0140AE  0EF5               	movlw	-11
 16626  0140B0  2AE3               	incf	plusw1,f,c
 16627  0140B2  E305               	bnc	u9330
 16628  0140B4  0EF6               	movlw	-10
 16629  0140B6  2AE3               	incf	plusw1,f,c
 16630  0140B8  E302               	bnc	u9330
 16631  0140BA  0EF7               	movlw	-9
 16632  0140BC  2AE3               	incf	plusw1,f,c
 16633  0140BE                     u9330:
 16634                           
 16635                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 16636  0140BE  AE0D               	btfss	(_prec+1)^0,7,c
 16637                           
 16638                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 16639  0140C0  920E               	bcf	_flags^0,1,c
 16640                           
 16641                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 16642  0140C2  BE0D               	btfsc	(_prec+1)^0,7,c
 16643  0140C4  D005               	goto	u9350
 16644  0140C6  500D               	movf	(_prec+1)^0,w,c
 16645  0140C8  E110               	bnz	l10068
 16646  0140CA  040C               	decf	_prec^0,w,c
 16647  0140CC  B0D8               	btfsc	status,0,c
 16648  0140CE  D00D               	goto	l10068
 16649  0140D0                     u9350:
 16650  0140D0  0E01               	movlw	1
 16651  0140D2  6E2F               	movwf	(btemp+10)^0,c
 16652  0140D4  0E00               	movlw	0
 16653  0140D6  6E30               	movwf	(btemp+11)^0,c
 16654                           
 16655                           ;stkvar	_p @ sp[(-18)+16]
 16656  0140D8  0EFE               	movlw	-2
 16657  0140DA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 16658  0140E0  0EFF               	movlw	-1
 16659  0140E2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 16660  0140E8  D008               	goto	l1999
 16661  0140EA                     l10068:
 16662                           
 16663                           ;stkvar	_p @ sp[(-18)+16]
 16664  0140EA  0EFE               	movlw	-2
 16665  0140EC  0060  F033  FFE3   	movff	_prec,plusw1
 16666  0140F2  0EFF               	movlw	-1
 16667  0140F4  0060  F037  FFE3   	movff	_prec+1,plusw1
 16668  0140FA                     l1999:
 16669                           
 16670                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 16671                           ;stkvar	_w @ sp[(-18)+14]
 16672  0140FA  0EFC               	movlw	-4
 16673  0140FC  0060  F02B  FFE3   	movff	_width,plusw1
 16674  014102  0EFD               	movlw	-3
 16675  014104  0060  F02F  FFE3   	movff	_width+1,plusw1
 16676                           
 16677                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 16678                           ;stkvar	_s @ sp[(-18)+12]
 16679  01410A  0EFA               	movlw	-6
 16680  01410C  006F FF8C  F025    	movff	plusw1,btemp
 16681  014112  0EFB               	movlw	-5
 16682  014114  50E3               	movf	plusw1,w,c
 16683  014116  1025               	iorwf	btemp^0,w,c
 16684  014118  A4D8               	btfss	status,2,c
 16685  01411A  D002               	goto	u9370
 16686  01411C  A40E               	btfss	_flags^0,2,c
 16687  01411E  D00A               	goto	l10076
 16688  014120                     u9370:
 16689                           
 16690                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 16691                           ;stkvar	_w @ sp[(-18)+14]
 16692  014120  50E1               	movf	fsr1l,w,c
 16693  014122  0FFC               	addlw	-4
 16694  014124  6ED9               	movwf	fsr2l,c
 16695  014126  50E2               	movf	fsr1h,w,c
 16696  014128  6EDA               	movwf	fsr2h,c
 16697  01412A  0EFF               	movlw	255
 16698  01412C  22DA               	addwfc	fsr2h,f,c
 16699  01412E  06DE               	decf	postinc2,f,c
 16700  014130  0E00               	movlw	0
 16701  014132  5ADD               	subwfb	postdec2,f,c
 16702  014134                     l10076:
 16703                           
 16704                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 16705  014134  0E4F               	movlw	79
 16706  014136  6E2F               	movwf	(btemp+10)^0,c
 16707  014138  0E00               	movlw	0
 16708  01413A  6E30               	movwf	(btemp+11)^0,c
 16709                           
 16710                           ;stkvar	_i @ sp[(-18)+10]
 16711  01413C  0EF8               	movlw	-8
 16712  01413E  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 16713  014144  0EF9               	movlw	-7
 16714  014146  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 16715                           
 16716                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 16717  01414C  0103               	movlb	3	; () banked
 16718  01414E  6BE3               	clrf	(_dbuf+79)& (0+255),b
 16719                           
 16720                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16721  014150  D109               	goto	l10090
 16722  014152                     l10080:
 16723                           
 16724                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 16725                           ;stkvar	_i @ sp[(-18)+10]
 16726  014152  50E1               	movf	fsr1l,w,c
 16727  014154  0FF8               	addlw	-8
 16728  014156  6ED9               	movwf	fsr2l,c
 16729  014158  50E2               	movf	fsr1h,w,c
 16730  01415A  6EDA               	movwf	fsr2h,c
 16731  01415C  0EFF               	movlw	255
 16732  01415E  22DA               	addwfc	fsr2h,f,c
 16733  014160  06DE               	decf	postinc2,f,c
 16734  014162  0E00               	movlw	0
 16735  014164  5ADD               	subwfb	postdec2,f,c
 16736                           
 16737                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 16738  014166  0E0A               	movlw	10
 16739  014168  6EE6               	movwf	postinc1,c
 16740  01416A  0E00               	movlw	0
 16741  01416C  6EE6               	movwf	postinc1,c
 16742  01416E  0E00               	movlw	0
 16743  014170  6EE6               	movwf	postinc1,c
 16744  014172  0E00               	movlw	0
 16745  014174  6EE6               	movwf	postinc1,c
 16746  014176  0E00               	movlw	0
 16747  014178  6EE6               	movwf	postinc1,c
 16748  01417A  0E00               	movlw	0
 16749  01417C  6EE6               	movwf	postinc1,c
 16750  01417E  0E00               	movlw	0
 16751  014180  6EE6               	movwf	postinc1,c
 16752  014182  0E00               	movlw	0
 16753  014184  6EE6               	movwf	postinc1,c
 16754                           
 16755                           ;stkvar	_n @ sp[(-26)+2]
 16756  014186  50E1               	movf	fsr1l,w,c
 16757  014188  0FE8               	addlw	-24
 16758  01418A  6ED9               	movwf	fsr2l,c
 16759  01418C  50E2               	movf	fsr1h,w,c
 16760  01418E  6EDA               	movwf	fsr2h,c
 16761  014190  0EFF               	movlw	255
 16762  014192  22DA               	addwfc	fsr2h,f,c
 16763  014194  006F FF7B FFE6     	movff	postinc2,postinc1
 16764  01419A  006F FF7B FFE6     	movff	postinc2,postinc1
 16765  0141A0  006F FF7B FFE6     	movff	postinc2,postinc1
 16766  0141A6  006F FF7B FFE6     	movff	postinc2,postinc1
 16767  0141AC  006F FF7B FFE6     	movff	postinc2,postinc1
 16768  0141B2  006F FF7B FFE6     	movff	postinc2,postinc1
 16769  0141B8  006F FF7B FFE6     	movff	postinc2,postinc1
 16770  0141BE  006F FF7B FFE6     	movff	postinc2,postinc1
 16771  0141C4  EC9D  F0AC         	call	___aomod	;wreg free
 16772  0141C8  52E5               	movf	postdec1,f,c
 16773  0141CA  006F FF9C  F03C    	movff	indf1,btemp+23
 16774  0141D0  52E5               	movf	postdec1,f,c
 16775  0141D2  006F FF9C  F03B    	movff	indf1,btemp+22
 16776  0141D8  52E5               	movf	postdec1,f,c
 16777  0141DA  006F FF9C  F03A    	movff	indf1,btemp+21
 16778  0141E0  52E5               	movf	postdec1,f,c
 16779  0141E2  006F FF9C  F039    	movff	indf1,btemp+20
 16780  0141E8  52E5               	movf	postdec1,f,c
 16781  0141EA  006F FF9C  F038    	movff	indf1,btemp+19
 16782  0141F0  52E5               	movf	postdec1,f,c
 16783  0141F2  006F FF9C  F037    	movff	indf1,btemp+18
 16784  0141F8  52E5               	movf	postdec1,f,c
 16785  0141FA  006F FF9C  F036    	movff	indf1,btemp+17
 16786  014200  52E5               	movf	postdec1,f,c
 16787  014202  006F FF9C  F035    	movff	indf1,btemp+16
 16788  014208  0EF8               	movlw	248
 16789  01420A  26E1               	addwf	fsr1l,f,c
 16790  01420C  0EFF               	movlw	255
 16791  01420E  22E2               	addwfc	fsr1h,f,c
 16792  014210  0060  F0D4  F02F   	movff	btemp+16,btemp+10
 16793  014216  0060  F0D8  F030   	movff	btemp+17,btemp+11
 16794  01421C  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 16795  014222  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 16796  014228  ECE5  F0C2         	call	_abs	;wreg free
 16797  01422C  0E30               	movlw	48
 16798  01422E  2625               	addwf	btemp^0,f,c
 16799                           
 16800                           ;stkvar	_i @ sp[(-18)+10]
 16801  014230  0EF8               	movlw	-8
 16802  014232  006F FF8C  F02F    	movff	plusw1,btemp+10
 16803  014238  0EF9               	movlw	-7
 16804  01423A  006F FF8C  F030    	movff	plusw1,btemp+11
 16805  014240  0E94               	movlw	low _dbuf
 16806  014242  242F               	addwf	(btemp+10)^0,w,c
 16807  014244  6ED9               	movwf	fsr2l,c
 16808  014246  0E03               	movlw	high _dbuf
 16809  014248  2030               	addwfc	(btemp+11)^0,w,c
 16810  01424A  6EDA               	movwf	fsr2h,c
 16811  01424C  0060  F097  FFDF   	movff	btemp,indf2
 16812                           
 16813                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 16814                           ;stkvar	_p @ sp[(-18)+16]
 16815  014252  50E1               	movf	fsr1l,w,c
 16816  014254  0FFE               	addlw	-2
 16817  014256  6ED9               	movwf	fsr2l,c
 16818  014258  50E2               	movf	fsr1h,w,c
 16819  01425A  6EDA               	movwf	fsr2h,c
 16820  01425C  0EFF               	movlw	255
 16821  01425E  22DA               	addwfc	fsr2h,f,c
 16822  014260  06DE               	decf	postinc2,f,c
 16823  014262  0E00               	movlw	0
 16824  014264  5ADD               	subwfb	postdec2,f,c
 16825                           
 16826                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 16827                           ;stkvar	_w @ sp[(-18)+14]
 16828  014266  50E1               	movf	fsr1l,w,c
 16829  014268  0FFC               	addlw	-4
 16830  01426A  6ED9               	movwf	fsr2l,c
 16831  01426C  50E2               	movf	fsr1h,w,c
 16832  01426E  6EDA               	movwf	fsr2h,c
 16833  014270  0EFF               	movlw	255
 16834  014272  22DA               	addwfc	fsr2h,f,c
 16835  014274  06DE               	decf	postinc2,f,c
 16836  014276  0E00               	movlw	0
 16837  014278  5ADD               	subwfb	postdec2,f,c
 16838                           
 16839                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 16840  01427A  0E0A               	movlw	10
 16841  01427C  6EE6               	movwf	postinc1,c
 16842  01427E  0E00               	movlw	0
 16843  014280  6EE6               	movwf	postinc1,c
 16844  014282  0E00               	movlw	0
 16845  014284  6EE6               	movwf	postinc1,c
 16846  014286  0E00               	movlw	0
 16847  014288  6EE6               	movwf	postinc1,c
 16848  01428A  0E00               	movlw	0
 16849  01428C  6EE6               	movwf	postinc1,c
 16850  01428E  0E00               	movlw	0
 16851  014290  6EE6               	movwf	postinc1,c
 16852  014292  0E00               	movlw	0
 16853  014294  6EE6               	movwf	postinc1,c
 16854  014296  0E00               	movlw	0
 16855  014298  6EE6               	movwf	postinc1,c
 16856                           
 16857                           ;stkvar	_n @ sp[(-26)+2]
 16858  01429A  50E1               	movf	fsr1l,w,c
 16859  01429C  0FE8               	addlw	-24
 16860  01429E  6ED9               	movwf	fsr2l,c
 16861  0142A0  50E2               	movf	fsr1h,w,c
 16862  0142A2  6EDA               	movwf	fsr2h,c
 16863  0142A4  0EFF               	movlw	255
 16864  0142A6  22DA               	addwfc	fsr2h,f,c
 16865  0142A8  006F FF7B FFE6     	movff	postinc2,postinc1
 16866  0142AE  006F FF7B FFE6     	movff	postinc2,postinc1
 16867  0142B4  006F FF7B FFE6     	movff	postinc2,postinc1
 16868  0142BA  006F FF7B FFE6     	movff	postinc2,postinc1
 16869  0142C0  006F FF7B FFE6     	movff	postinc2,postinc1
 16870  0142C6  006F FF7B FFE6     	movff	postinc2,postinc1
 16871  0142CC  006F FF7B FFE6     	movff	postinc2,postinc1
 16872  0142D2  006F FF7B FFE6     	movff	postinc2,postinc1
 16873  0142D8  EC23  F0AA         	call	___aodiv	;wreg free
 16874  0142DC  52E5               	movf	postdec1,f,c
 16875  0142DE  006F FF9C  F03C    	movff	indf1,btemp+23
 16876  0142E4  52E5               	movf	postdec1,f,c
 16877  0142E6  006F FF9C  F03B    	movff	indf1,btemp+22
 16878  0142EC  52E5               	movf	postdec1,f,c
 16879  0142EE  006F FF9C  F03A    	movff	indf1,btemp+21
 16880  0142F4  52E5               	movf	postdec1,f,c
 16881  0142F6  006F FF9C  F039    	movff	indf1,btemp+20
 16882  0142FC  52E5               	movf	postdec1,f,c
 16883  0142FE  006F FF9C  F038    	movff	indf1,btemp+19
 16884  014304  52E5               	movf	postdec1,f,c
 16885  014306  006F FF9C  F037    	movff	indf1,btemp+18
 16886  01430C  52E5               	movf	postdec1,f,c
 16887  01430E  006F FF9C  F036    	movff	indf1,btemp+17
 16888  014314  52E5               	movf	postdec1,f,c
 16889  014316  006F FF9C  F035    	movff	indf1,btemp+16
 16890  01431C  0EF8               	movlw	248
 16891  01431E  26E1               	addwf	fsr1l,f,c
 16892  014320  0EFF               	movlw	255
 16893  014322  22E2               	addwfc	fsr1h,f,c
 16894                           
 16895                           ;stkvar	_n @ sp[(-18)+2]
 16896  014324  0EF0               	movlw	-16
 16897  014326  0060  F0D7  FFE3   	movff	btemp+16,plusw1
 16898  01432C  0EF1               	movlw	-15
 16899  01432E  0060  F0DB  FFE3   	movff	btemp+17,plusw1
 16900  014334  0EF2               	movlw	-14
 16901  014336  0060  F0DF  FFE3   	movff	btemp+18,plusw1
 16902  01433C  0EF3               	movlw	-13
 16903  01433E  0060  F0E3  FFE3   	movff	btemp+19,plusw1
 16904  014344  0EF4               	movlw	-12
 16905  014346  0060  F0E7  FFE3   	movff	btemp+20,plusw1
 16906  01434C  0EF5               	movlw	-11
 16907  01434E  0060  F0EB  FFE3   	movff	btemp+21,plusw1
 16908  014354  0EF6               	movlw	-10
 16909  014356  0060  F0EF  FFE3   	movff	btemp+22,plusw1
 16910  01435C  0EF7               	movlw	-9
 16911  01435E  0060  F0F3  FFE3   	movff	btemp+23,plusw1
 16912  014364                     l10090:
 16913                           
 16914                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16915                           ;stkvar	_i @ sp[(-18)+10]
 16916  014364  0EF9               	movlw	-7
 16917  014366  BEE3               	btfsc	plusw1,7,c
 16918  014368  D036               	goto	u9420
 16919  01436A  0EF9               	movlw	-7
 16920  01436C  50E3               	movf	plusw1,w,c
 16921  01436E  E104               	bnz	u9380
 16922  014370  0EF8               	movlw	-8
 16923  014372  04E3               	decf	plusw1,w,c
 16924  014374  A0D8               	btfss	status,0,c
 16925  014376  D02F               	goto	u9420
 16926  014378                     u9380:
 16927                           
 16928                           ;stkvar	_n @ sp[(-18)+2]
 16929  014378  0EF0               	movlw	-16
 16930  01437A  50E3               	movf	plusw1,w,c
 16931  01437C  E115               	bnz	u9391
 16932  01437E  0EF1               	movlw	-15
 16933  014380  50E3               	movf	plusw1,w,c
 16934  014382  E112               	bnz	u9391
 16935  014384  0EF2               	movlw	-14
 16936  014386  50E3               	movf	plusw1,w,c
 16937  014388  E10F               	bnz	u9391
 16938  01438A  0EF3               	movlw	-13
 16939  01438C  50E3               	movf	plusw1,w,c
 16940  01438E  E10C               	bnz	u9391
 16941  014390  0EF4               	movlw	-12
 16942  014392  50E3               	movf	plusw1,w,c
 16943  014394  E109               	bnz	u9391
 16944  014396  0EF5               	movlw	-11
 16945  014398  50E3               	movf	plusw1,w,c
 16946  01439A  E106               	bnz	u9391
 16947  01439C  0EF6               	movlw	-10
 16948  01439E  50E3               	movf	plusw1,w,c
 16949  0143A0  E103               	bnz	u9391
 16950  0143A2  0EF7               	movlw	-9
 16951  0143A4  50E3               	movf	plusw1,w,c
 16952  0143A6  A4D8               	btfss	status,2,c
 16953  0143A8                     u9391:
 16954  0143A8  D6D4               	goto	l10080
 16955                           
 16956                           ;stkvar	_p @ sp[(-18)+16]
 16957  0143AA  0EFF               	movlw	-1
 16958  0143AC  BEE3               	btfsc	plusw1,7,c
 16959  0143AE  D007               	goto	u9400
 16960  0143B0  0EFF               	movlw	-1
 16961  0143B2  50E3               	movf	plusw1,w,c
 16962  0143B4  E103               	bnz	u9401
 16963  0143B6  0EFE               	movlw	-2
 16964  0143B8  04E3               	decf	plusw1,w,c
 16965  0143BA  B0D8               	btfsc	status,0,c
 16966  0143BC                     u9401:
 16967  0143BC  D6CA               	goto	l10080
 16968  0143BE                     u9400:
 16969                           
 16970                           ;stkvar	_w @ sp[(-18)+14]
 16971  0143BE  0EFD               	movlw	-3
 16972  0143C0  BEE3               	btfsc	plusw1,7,c
 16973  0143C2  D009               	goto	u9420
 16974  0143C4  0EFD               	movlw	-3
 16975  0143C6  50E3               	movf	plusw1,w,c
 16976  0143C8  E104               	bnz	u9410
 16977  0143CA  0EFC               	movlw	-4
 16978  0143CC  04E3               	decf	plusw1,w,c
 16979  0143CE  A0D8               	btfss	status,0,c
 16980  0143D0  D002               	goto	u9420
 16981  0143D2                     u9410:
 16982  0143D2  B20E               	btfsc	_flags^0,1,c
 16983  0143D4  D6BE               	goto	l10080
 16984  0143D6                     u9420:
 16985                           
 16986                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 16987                           ;stkvar	_s @ sp[(-18)+12]
 16988  0143D6  0EFA               	movlw	-6
 16989  0143D8  006F FF8C  F025    	movff	plusw1,btemp
 16990  0143DE  0EFB               	movlw	-5
 16991  0143E0  50E3               	movf	plusw1,w,c
 16992  0143E2  1025               	iorwf	btemp^0,w,c
 16993  0143E4  A4D8               	btfss	status,2,c
 16994  0143E6  D002               	goto	u9440
 16995  0143E8  A40E               	btfss	_flags^0,2,c
 16996  0143EA  D033               	goto	l10114
 16997  0143EC                     u9440:
 16998                           
 16999                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 17000                           ;stkvar	_i @ sp[(-18)+10]
 17001  0143EC  50E1               	movf	fsr1l,w,c
 17002  0143EE  0FF8               	addlw	-8
 17003  0143F0  6ED9               	movwf	fsr2l,c
 17004  0143F2  50E2               	movf	fsr1h,w,c
 17005  0143F4  6EDA               	movwf	fsr2h,c
 17006  0143F6  0EFF               	movlw	255
 17007  0143F8  22DA               	addwfc	fsr2h,f,c
 17008  0143FA  06DE               	decf	postinc2,f,c
 17009  0143FC  0E00               	movlw	0
 17010  0143FE  5ADD               	subwfb	postdec2,f,c
 17011                           
 17012                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 17013                           ;stkvar	_s @ sp[(-18)+12]
 17014  014400  0EFA               	movlw	-6
 17015  014402  006F FF8C  F025    	movff	plusw1,btemp
 17016  014408  0EFB               	movlw	-5
 17017  01440A  50E3               	movf	plusw1,w,c
 17018  01440C  1025               	iorwf	btemp^0,w,c
 17019  01440E  A4D8               	btfss	status,2,c
 17020  014410  D002               	goto	l10110
 17021  014412  0E2B               	movlw	43
 17022  014414  D001               	goto	L17
 17023  014416                     l10110:
 17024  014416  0E2D               	movlw	45
 17025  014418                     L17:
 17026  014418  6E2F               	movwf	(btemp+10)^0,c
 17027  01441A  0E00               	movlw	0
 17028  01441C  6E30               	movwf	(btemp+11)^0,c
 17029                           
 17030                           ;stkvar	_dtoa$4955 @ sp[(-18)+0]
 17031  01441E  0EEE               	movlw	-18
 17032  014420  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 17033  014426  0EEF               	movlw	-17
 17034  014428  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 17035                           
 17036                           ;stkvar	_dtoa$4955 @ sp[(-18)+0]
 17037                           ;stkvar	_i @ sp[(-18)+10]
 17038  01442E  0EF8               	movlw	-8
 17039  014430  006F FF8C  F02F    	movff	plusw1,btemp+10
 17040  014436  0EF9               	movlw	-7
 17041  014438  006F FF8C  F030    	movff	plusw1,btemp+11
 17042  01443E  0E94               	movlw	low _dbuf
 17043  014440  242F               	addwf	(btemp+10)^0,w,c
 17044  014442  6ED9               	movwf	fsr2l,c
 17045  014444  0E03               	movlw	high _dbuf
 17046  014446  2030               	addwfc	(btemp+11)^0,w,c
 17047  014448  6EDA               	movwf	fsr2h,c
 17048  01444A  0EEE               	movlw	-18
 17049  01444C  006F FF8F FFDF     	movff	plusw1,indf2
 17050  014452                     l10114:
 17051                           
 17052                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 17053                           ;stkvar	_w @ sp[(-18)+14]
 17054  014452  0EFC               	movlw	-4
 17055  014454  006F FF8F FFE6     	movff	plusw1,postinc1
 17056  01445A  006F FF8F FFE6     	movff	plusw1,postinc1
 17057                           
 17058                           ;stkvar	_i @ sp[(-20)+10]
 17059  014460  0E94               	movlw	low _dbuf
 17060  014462  6E2F               	movwf	(btemp+10)^0,c
 17061  014464  0E03               	movlw	high _dbuf
 17062  014466  6E30               	movwf	(btemp+11)^0,c
 17063  014468  0EF6               	movlw	-10
 17064  01446A  50E3               	movf	plusw1,w,c
 17065  01446C  262F               	addwf	(btemp+10)^0,f,c
 17066  01446E  0EF7               	movlw	-9
 17067  014470  50E3               	movf	plusw1,w,c
 17068  014472  2230               	addwfc	(btemp+11)^0,f,c
 17069  014474  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 17070  01447A  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 17071                           
 17072                           ;stkvar	_fp @ sp[(-22)+-2]
 17073  014480  0EE8               	movlw	-24
 17074  014482  006F FF8F FFE6     	movff	plusw1,postinc1
 17075  014488  006F FF8F FFE6     	movff	plusw1,postinc1
 17076  01448E  ECC1  F0B6         	call	_pad	;wreg free
 17077                           
 17078                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 17079  014492  0EE4               	movlw	228
 17080  014494  26E1               	addwf	fsr1l,f,c
 17081  014496  0EFF               	movlw	255
 17082  014498  22E2               	addwfc	fsr1h,f,c
 17083  01449A  0012               	return		;funcret
 17084  01449C                     __end_of_dtoa:
 17085                           	opt callstack 0
 17086                           
 17087 ;; *************** function _abs *****************
 17088 ;; Defined at:
 17089 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 17090 ;; Parameters:    Size  Location     Type
 17091 ;;  a               2  [STACK] int 
 17092 ;; Auto vars:     Size  Location     Type
 17093 ;;		None
 17094 ;; Return value:  Size  Location     Type
 17095 ;;                  2  [STACK] int 
 17096 ;; Registers used:
 17097 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 17098 ;; Tracked objects:
 17099 ;;		On entry : 0/3
 17100 ;;		On exit  : 0/0
 17101 ;;		Unchanged: 0/0
 17102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17107 ;;Total ram usage:        0 bytes
 17108 ;; Hardware stack levels used:    1
 17109 ;; Hardware stack levels required when called:    7
 17110 ;; This function calls:
 17111 ;;		Nothing
 17112 ;; This function is called by:
 17113 ;;		_dtoa
 17114 ;; This function uses a reentrant model
 17115 ;;
 17116                           
 17117                           	psect	text62
 17118  0185CA                     __ptext62:
 17119                           	opt callstack 0
 17120  0185CA                     _abs:
 17121                           	opt callstack 16
 17122                           
 17123                           ;stkvar	_a @ sp[(0)+-2]
 17124                           
 17125                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17126                           ;incstack = 0
 17127  0185CA  0EFF               	movlw	-1
 17128  0185CC  BEE3               	btfsc	plusw1,7,c
 17129  0185CE  D007               	goto	u4760
 17130  0185D0  0EFF               	movlw	-1
 17131  0185D2  50E3               	movf	plusw1,w,c
 17132  0185D4  E112               	bnz	l6616
 17133  0185D6  0EFE               	movlw	-2
 17134  0185D8  04E3               	decf	plusw1,w,c
 17135  0185DA  B0D8               	btfsc	status,0,c
 17136  0185DC  D00E               	goto	l6616
 17137  0185DE                     u4760:
 17138                           
 17139                           ;stkvar	_a @ sp[(0)+-2]
 17140  0185DE  0EFE               	movlw	-2
 17141  0185E0  006F FF8C  F025    	movff	plusw1,btemp
 17142  0185E6  1E25               	comf	btemp^0,f,c
 17143  0185E8  0EFF               	movlw	-1
 17144  0185EA  006F FF8C  F026    	movff	plusw1,btemp+1
 17145  0185F0  1E26               	comf	(btemp+1)^0,f,c
 17146  0185F2  2A25               	incf	btemp^0,f,c
 17147  0185F4  B4D8               	btfsc	status,2,c
 17148  0185F6  2A26               	incf	(btemp+1)^0,f,c
 17149  0185F8  D008               	goto	l2902
 17150  0185FA                     l6616:
 17151                           
 17152                           ;stkvar	_a @ sp[(0)+-2]
 17153  0185FA  0EFE               	movlw	-2
 17154  0185FC  006F FF8C  F025    	movff	plusw1,btemp
 17155  018602  0EFF               	movlw	-1
 17156  018604  006F FF8C  F026    	movff	plusw1,btemp+1
 17157  01860A                     l2902:
 17158                           
 17159                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 17160  01860A  52E5               	movf	postdec1,f,c
 17161  01860C  52E5               	movf	postdec1,f,c
 17162  01860E  0012               	return		;funcret
 17163  018610                     __end_of_abs:
 17164                           	opt callstack 0
 17165                           
 17166 ;; *************** function ___aomod *****************
 17167 ;; Defined at:
 17168 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 17169 ;; Parameters:    Size  Location     Type
 17170 ;;  dividend        8  [STACK] long long 
 17171 ;;  divisor         8  [STACK] long long 
 17172 ;; Auto vars:     Size  Location     Type
 17173 ;;  sign            1  [STACK] unsigned char 
 17174 ;;  counter         1  [STACK] unsigned char 
 17175 ;; Return value:  Size  Location     Type
 17176 ;;                  8  [STACK] long long 
 17177 ;; Registers used:
 17178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 17179 ;; Tracked objects:
 17180 ;;		On entry : 0/3
 17181 ;;		On exit  : 0/0
 17182 ;;		Unchanged: 0/0
 17183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17188 ;;Total ram usage:        0 bytes
 17189 ;; Hardware stack levels used:    1
 17190 ;; Hardware stack levels required when called:    7
 17191 ;; This function calls:
 17192 ;;		Nothing
 17193 ;; This function is called by:
 17194 ;;		_dtoa
 17195 ;; This function uses a reentrant model
 17196 ;;
 17197                           
 17198                           	psect	text63
 17199  01593A                     __ptext63:
 17200                           	opt callstack 0
 17201  01593A                     ___aomod:
 17202                           	opt callstack 0
 17203                           
 17204                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 17205  01593A  52E6               	movf	postinc1,f,c
 17206  01593C  52E6               	movf	postinc1,f,c
 17207                           
 17208                           ;stkvar	_sign @ sp[(-2)+0]
 17209                           
 17210                           ;incstack = 0
 17211  01593E  0EFE               	movlw	-2
 17212  015940  6AE3               	clrf	plusw1,c
 17213                           
 17214                           ;stkvar	_dividend @ sp[(-2)+-8]
 17215  015942  0EFD               	movlw	-3
 17216  015944  AEE3               	btfss	plusw1,7,c
 17217  015946  D028               	goto	l6774
 17218                           
 17219                           ;stkvar	_dividend @ sp[(-2)+-8]
 17220                           ;stkvar	_dividend @ sp[(-2)+-8]
 17221  015948  0EF6               	movlw	-10
 17222  01594A  6CE3               	negf	plusw1,c
 17223  01594C  0EF7               	movlw	-9
 17224  01594E  1EE3               	comf	plusw1,f,c
 17225  015950  0EF8               	movlw	-8
 17226  015952  1EE3               	comf	plusw1,f,c
 17227  015954  0EF9               	movlw	-7
 17228  015956  1EE3               	comf	plusw1,f,c
 17229  015958  0EFA               	movlw	-6
 17230  01595A  1EE3               	comf	plusw1,f,c
 17231  01595C  0EFB               	movlw	-5
 17232  01595E  1EE3               	comf	plusw1,f,c
 17233  015960  0EFC               	movlw	-4
 17234  015962  1EE3               	comf	plusw1,f,c
 17235  015964  0EFD               	movlw	-3
 17236  015966  1EE3               	comf	plusw1,f,c
 17237  015968  E314               	bnc	u5190
 17238  01596A  0EF7               	movlw	-9
 17239  01596C  2AE3               	incf	plusw1,f,c
 17240  01596E  E311               	bnc	u5190
 17241  015970  0EF8               	movlw	-8
 17242  015972  2AE3               	incf	plusw1,f,c
 17243  015974  E30E               	bnc	u5190
 17244  015976  0EF9               	movlw	-7
 17245  015978  2AE3               	incf	plusw1,f,c
 17246  01597A  E30B               	bnc	u5190
 17247  01597C  0EFA               	movlw	-6
 17248  01597E  2AE3               	incf	plusw1,f,c
 17249  015980  E308               	bnc	u5190
 17250  015982  0EFB               	movlw	-5
 17251  015984  2AE3               	incf	plusw1,f,c
 17252  015986  E305               	bnc	u5190
 17253  015988  0EFC               	movlw	-4
 17254  01598A  2AE3               	incf	plusw1,f,c
 17255  01598C  E302               	bnc	u5190
 17256  01598E  0EFD               	movlw	-3
 17257  015990  2AE3               	incf	plusw1,f,c
 17258  015992                     u5190:
 17259                           
 17260                           ;stkvar	_sign @ sp[(-2)+0]
 17261  015992  0EFE               	movlw	-2
 17262  015994  6AE3               	clrf	plusw1,c
 17263  015996  2AE3               	incf	plusw1,f,c
 17264  015998                     l6774:
 17265                           
 17266                           ;stkvar	_divisor @ sp[(-2)+-16]
 17267  015998  0EF5               	movlw	-11
 17268  01599A  AEE3               	btfss	plusw1,7,c
 17269  01599C  D025               	goto	u5210
 17270                           
 17271                           ;stkvar	_divisor @ sp[(-2)+-16]
 17272                           ;stkvar	_divisor @ sp[(-2)+-16]
 17273  01599E  0EEE               	movlw	-18
 17274  0159A0  6CE3               	negf	plusw1,c
 17275  0159A2  0EEF               	movlw	-17
 17276  0159A4  1EE3               	comf	plusw1,f,c
 17277  0159A6  0EF0               	movlw	-16
 17278  0159A8  1EE3               	comf	plusw1,f,c
 17279  0159AA  0EF1               	movlw	-15
 17280  0159AC  1EE3               	comf	plusw1,f,c
 17281  0159AE  0EF2               	movlw	-14
 17282  0159B0  1EE3               	comf	plusw1,f,c
 17283  0159B2  0EF3               	movlw	-13
 17284  0159B4  1EE3               	comf	plusw1,f,c
 17285  0159B6  0EF4               	movlw	-12
 17286  0159B8  1EE3               	comf	plusw1,f,c
 17287  0159BA  0EF5               	movlw	-11
 17288  0159BC  1EE3               	comf	plusw1,f,c
 17289  0159BE  E314               	bnc	u5210
 17290  0159C0  0EEF               	movlw	-17
 17291  0159C2  2AE3               	incf	plusw1,f,c
 17292  0159C4  E311               	bnc	u5210
 17293  0159C6  0EF0               	movlw	-16
 17294  0159C8  2AE3               	incf	plusw1,f,c
 17295  0159CA  E30E               	bnc	u5210
 17296  0159CC  0EF1               	movlw	-15
 17297  0159CE  2AE3               	incf	plusw1,f,c
 17298  0159D0  E30B               	bnc	u5210
 17299  0159D2  0EF2               	movlw	-14
 17300  0159D4  2AE3               	incf	plusw1,f,c
 17301  0159D6  E308               	bnc	u5210
 17302  0159D8  0EF3               	movlw	-13
 17303  0159DA  2AE3               	incf	plusw1,f,c
 17304  0159DC  E305               	bnc	u5210
 17305  0159DE  0EF4               	movlw	-12
 17306  0159E0  2AE3               	incf	plusw1,f,c
 17307  0159E2  E302               	bnc	u5210
 17308  0159E4  0EF5               	movlw	-11
 17309  0159E6  2AE3               	incf	plusw1,f,c
 17310  0159E8                     u5210:
 17311                           
 17312                           ;stkvar	_divisor @ sp[(-2)+-16]
 17313  0159E8  0EEE               	movlw	-18
 17314  0159EA  50E3               	movf	plusw1,w,c
 17315  0159EC  E116               	bnz	u5220
 17316  0159EE  0EEF               	movlw	-17
 17317  0159F0  50E3               	movf	plusw1,w,c
 17318  0159F2  E113               	bnz	u5220
 17319  0159F4  0EF0               	movlw	-16
 17320  0159F6  50E3               	movf	plusw1,w,c
 17321  0159F8  E110               	bnz	u5220
 17322  0159FA  0EF1               	movlw	-15
 17323  0159FC  50E3               	movf	plusw1,w,c
 17324  0159FE  E10D               	bnz	u5220
 17325  015A00  0EF2               	movlw	-14
 17326  015A02  50E3               	movf	plusw1,w,c
 17327  015A04  E10A               	bnz	u5220
 17328  015A06  0EF3               	movlw	-13
 17329  015A08  50E3               	movf	plusw1,w,c
 17330  015A0A  E107               	bnz	u5220
 17331  015A0C  0EF4               	movlw	-12
 17332  015A0E  50E3               	movf	plusw1,w,c
 17333  015A10  E104               	bnz	u5220
 17334  015A12  0EF5               	movlw	-11
 17335  015A14  50E3               	movf	plusw1,w,c
 17336  015A16  B4D8               	btfsc	status,2,c
 17337  015A18  D075               	goto	u5250
 17338  015A1A                     u5220:
 17339                           
 17340                           ;stkvar	_counter @ sp[(-2)+1]
 17341  015A1A  0EFF               	movlw	-1
 17342  015A1C  6AE3               	clrf	plusw1,c
 17343  015A1E  D012               	goto	L18
 17344  015A20                     l6782:
 17345                           
 17346                           ;stkvar	_divisor @ sp[(-2)+-16]
 17347  015A20  90D8               	bcf	status,0,c
 17348  015A22  0EEE               	movlw	-18
 17349  015A24  36E3               	rlcf	plusw1,f,c
 17350  015A26  0EEF               	movlw	-17
 17351  015A28  36E3               	rlcf	plusw1,f,c
 17352  015A2A  0EF0               	movlw	-16
 17353  015A2C  36E3               	rlcf	plusw1,f,c
 17354  015A2E  0EF1               	movlw	-15
 17355  015A30  36E3               	rlcf	plusw1,f,c
 17356  015A32  0EF2               	movlw	-14
 17357  015A34  36E3               	rlcf	plusw1,f,c
 17358  015A36  0EF3               	movlw	-13
 17359  015A38  36E3               	rlcf	plusw1,f,c
 17360  015A3A  0EF4               	movlw	-12
 17361  015A3C  36E3               	rlcf	plusw1,f,c
 17362  015A3E  0EF5               	movlw	-11
 17363  015A40  36E3               	rlcf	plusw1,f,c
 17364                           
 17365                           ;stkvar	_counter @ sp[(-2)+1]
 17366  015A42  0EFF               	movlw	-1
 17367  015A44                     L18:
 17368  015A44  2AE3               	incf	plusw1,f,c
 17369                           
 17370                           ;stkvar	_divisor @ sp[(-2)+-16]
 17371  015A46  0EF5               	movlw	-11
 17372  015A48  AEE3               	btfss	plusw1,7,c
 17373  015A4A  D7EA               	goto	l6782
 17374  015A4C                     u5230:
 17375                           
 17376                           ;stkvar	_divisor @ sp[(-2)+-16]
 17377                           ;stkvar	_dividend @ sp[(-2)+-8]
 17378  015A4C  50E1               	movf	fsr1l,w,c
 17379  015A4E  0FF6               	addlw	-10
 17380  015A50  6ED9               	movwf	fsr2l,c
 17381  015A52  50E2               	movf	fsr1h,w,c
 17382  015A54  6EDA               	movwf	fsr2h,c
 17383  015A56  0EFF               	movlw	255
 17384  015A58  22DA               	addwfc	fsr2h,f,c
 17385  015A5A  0EEE               	movlw	-18
 17386  015A5C  50E3               	movf	plusw1,w,c
 17387  015A5E  5CDE               	subwf	postinc2,w,c
 17388  015A60  0EEF               	movlw	-17
 17389  015A62  50E3               	movf	plusw1,w,c
 17390  015A64  58DE               	subwfb	postinc2,w,c
 17391  015A66  0EF0               	movlw	-16
 17392  015A68  50E3               	movf	plusw1,w,c
 17393  015A6A  58DE               	subwfb	postinc2,w,c
 17394  015A6C  0EF1               	movlw	-15
 17395  015A6E  50E3               	movf	plusw1,w,c
 17396  015A70  58DE               	subwfb	postinc2,w,c
 17397  015A72  0EF2               	movlw	-14
 17398  015A74  50E3               	movf	plusw1,w,c
 17399  015A76  58DE               	subwfb	postinc2,w,c
 17400  015A78  0EF3               	movlw	-13
 17401  015A7A  50E3               	movf	plusw1,w,c
 17402  015A7C  58DE               	subwfb	postinc2,w,c
 17403  015A7E  0EF4               	movlw	-12
 17404  015A80  50E3               	movf	plusw1,w,c
 17405  015A82  58DE               	subwfb	postinc2,w,c
 17406  015A84  0EF5               	movlw	-11
 17407  015A86  50E3               	movf	plusw1,w,c
 17408  015A88  58DE               	subwfb	postinc2,w,c
 17409  015A8A  A0D8               	btfss	status,0,c
 17410  015A8C  D01F               	goto	l6790
 17411                           
 17412                           ;stkvar	_divisor @ sp[(-2)+-16]
 17413                           ;stkvar	_dividend @ sp[(-2)+-8]
 17414  015A8E  50E1               	movf	fsr1l,w,c
 17415  015A90  0FF6               	addlw	-10
 17416  015A92  6ED9               	movwf	fsr2l,c
 17417  015A94  50E2               	movf	fsr1h,w,c
 17418  015A96  6EDA               	movwf	fsr2h,c
 17419  015A98  0EFF               	movlw	255
 17420  015A9A  22DA               	addwfc	fsr2h,f,c
 17421  015A9C  0EEE               	movlw	-18
 17422  015A9E  50E3               	movf	plusw1,w,c
 17423  015AA0  5EDE               	subwf	postinc2,f,c
 17424  015AA2  0EEF               	movlw	-17
 17425  015AA4  50E3               	movf	plusw1,w,c
 17426  015AA6  5ADE               	subwfb	postinc2,f,c
 17427  015AA8  0EF0               	movlw	-16
 17428  015AAA  50E3               	movf	plusw1,w,c
 17429  015AAC  5ADE               	subwfb	postinc2,f,c
 17430  015AAE  0EF1               	movlw	-15
 17431  015AB0  50E3               	movf	plusw1,w,c
 17432  015AB2  5ADE               	subwfb	postinc2,f,c
 17433  015AB4  0EF2               	movlw	-14
 17434  015AB6  50E3               	movf	plusw1,w,c
 17435  015AB8  5ADE               	subwfb	postinc2,f,c
 17436  015ABA  0EF3               	movlw	-13
 17437  015ABC  50E3               	movf	plusw1,w,c
 17438  015ABE  5ADE               	subwfb	postinc2,f,c
 17439  015AC0  0EF4               	movlw	-12
 17440  015AC2  50E3               	movf	plusw1,w,c
 17441  015AC4  5ADE               	subwfb	postinc2,f,c
 17442  015AC6  0EF5               	movlw	-11
 17443  015AC8  50E3               	movf	plusw1,w,c
 17444  015ACA  5ADE               	subwfb	postinc2,f,c
 17445  015ACC                     l6790:
 17446                           
 17447                           ;stkvar	_divisor @ sp[(-2)+-16]
 17448  015ACC  90D8               	bcf	status,0,c
 17449  015ACE  0EF5               	movlw	-11
 17450  015AD0  32E3               	rrcf	plusw1,f,c
 17451  015AD2  0EF4               	movlw	-12
 17452  015AD4  32E3               	rrcf	plusw1,f,c
 17453  015AD6  0EF3               	movlw	-13
 17454  015AD8  32E3               	rrcf	plusw1,f,c
 17455  015ADA  0EF2               	movlw	-14
 17456  015ADC  32E3               	rrcf	plusw1,f,c
 17457  015ADE  0EF1               	movlw	-15
 17458  015AE0  32E3               	rrcf	plusw1,f,c
 17459  015AE2  0EF0               	movlw	-16
 17460  015AE4  32E3               	rrcf	plusw1,f,c
 17461  015AE6  0EEF               	movlw	-17
 17462  015AE8  32E3               	rrcf	plusw1,f,c
 17463  015AEA  0EEE               	movlw	-18
 17464  015AEC  32E3               	rrcf	plusw1,f,c
 17465                           
 17466                           ;stkvar	_counter @ sp[(-2)+1]
 17467  015AEE  0EFF               	movlw	-1
 17468  015AF0  50E3               	movf	plusw1,w,c
 17469  015AF2  6E25               	movwf	btemp^0,c
 17470  015AF4  0E01               	movlw	1
 17471  015AF6  5E25               	subwf	btemp^0,f,c
 17472  015AF8  0EFF               	movlw	-1
 17473  015AFA  0060  F097  FFE3   	movff	btemp,plusw1
 17474  015B00  A4D8               	btfss	status,2,c
 17475  015B02  D7A4               	goto	u5230
 17476  015B04                     u5250:
 17477                           
 17478                           ;stkvar	_sign @ sp[(-2)+0]
 17479  015B04  0EFE               	movlw	-2
 17480  015B06  50E3               	movf	plusw1,w,c
 17481  015B08  B4D8               	btfsc	status,2,c
 17482  015B0A  D025               	goto	u5270
 17483                           
 17484                           ;stkvar	_dividend @ sp[(-2)+-8]
 17485                           ;stkvar	_dividend @ sp[(-2)+-8]
 17486  015B0C  0EF6               	movlw	-10
 17487  015B0E  6CE3               	negf	plusw1,c
 17488  015B10  0EF7               	movlw	-9
 17489  015B12  1EE3               	comf	plusw1,f,c
 17490  015B14  0EF8               	movlw	-8
 17491  015B16  1EE3               	comf	plusw1,f,c
 17492  015B18  0EF9               	movlw	-7
 17493  015B1A  1EE3               	comf	plusw1,f,c
 17494  015B1C  0EFA               	movlw	-6
 17495  015B1E  1EE3               	comf	plusw1,f,c
 17496  015B20  0EFB               	movlw	-5
 17497  015B22  1EE3               	comf	plusw1,f,c
 17498  015B24  0EFC               	movlw	-4
 17499  015B26  1EE3               	comf	plusw1,f,c
 17500  015B28  0EFD               	movlw	-3
 17501  015B2A  1EE3               	comf	plusw1,f,c
 17502  015B2C  E314               	bnc	u5270
 17503  015B2E  0EF7               	movlw	-9
 17504  015B30  2AE3               	incf	plusw1,f,c
 17505  015B32  E311               	bnc	u5270
 17506  015B34  0EF8               	movlw	-8
 17507  015B36  2AE3               	incf	plusw1,f,c
 17508  015B38  E30E               	bnc	u5270
 17509  015B3A  0EF9               	movlw	-7
 17510  015B3C  2AE3               	incf	plusw1,f,c
 17511  015B3E  E30B               	bnc	u5270
 17512  015B40  0EFA               	movlw	-6
 17513  015B42  2AE3               	incf	plusw1,f,c
 17514  015B44  E308               	bnc	u5270
 17515  015B46  0EFB               	movlw	-5
 17516  015B48  2AE3               	incf	plusw1,f,c
 17517  015B4A  E305               	bnc	u5270
 17518  015B4C  0EFC               	movlw	-4
 17519  015B4E  2AE3               	incf	plusw1,f,c
 17520  015B50  E302               	bnc	u5270
 17521  015B52  0EFD               	movlw	-3
 17522  015B54  2AE3               	incf	plusw1,f,c
 17523  015B56                     u5270:
 17524                           
 17525                           ;stkvar	_dividend @ sp[(-2)+-8]
 17526  015B56  0EF6               	movlw	246
 17527  015B58  24E1               	addwf	fsr1l,w,c
 17528  015B5A  6ED9               	movwf	fsr2l,c
 17529  015B5C  0EFF               	movlw	255
 17530  015B5E  20E2               	addwfc	fsr1h,w,c
 17531  015B60  6EDA               	movwf	fsr2h,c
 17532                           
 17533                           ;stkvar	?___aomod @ sp[(-2)+-8]
 17534  015B62  0E08               	movlw	8
 17535  015B64  6E25               	movwf	btemp^0,c
 17536  015B66  0EF6               	movlw	-10
 17537  015B68                     us528999:
 17538  015B68  006F FF7B FFE3     	movff	postinc2,plusw1
 17539  015B6E  28E8               	incf	wreg,w,c
 17540  015B70  2E25               	decfsz	btemp^0,f,c
 17541  015B72  D7FA               	bra	us528999
 17542                           
 17543                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 17544  015B74  52E5               	movf	postdec1,f,c
 17545  015B76  52E5               	movf	postdec1,f,c
 17546  015B78  0012               	return		;funcret
 17547  015B7A                     __end_of___aomod:
 17548                           	opt callstack 0
 17549                           
 17550 ;; *************** function ___aodiv *****************
 17551 ;; Defined at:
 17552 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 17553 ;; Parameters:    Size  Location     Type
 17554 ;;  dividend        8  [STACK] long long 
 17555 ;;  divisor         8  [STACK] long long 
 17556 ;; Auto vars:     Size  Location     Type
 17557 ;;  quotient        8  [STACK] long long 
 17558 ;;  sign            1  [STACK] unsigned char 
 17559 ;;  counter         1  [STACK] unsigned char 
 17560 ;; Return value:  Size  Location     Type
 17561 ;;                  8  [STACK] long long 
 17562 ;; Registers used:
 17563 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 17564 ;; Tracked objects:
 17565 ;;		On entry : 0/3
 17566 ;;		On exit  : 0/0
 17567 ;;		Unchanged: 0/0
 17568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17573 ;;Total ram usage:        0 bytes
 17574 ;; Hardware stack levels used:    1
 17575 ;; Hardware stack levels required when called:    7
 17576 ;; This function calls:
 17577 ;;		Nothing
 17578 ;; This function is called by:
 17579 ;;		_dtoa
 17580 ;; This function uses a reentrant model
 17581 ;;
 17582                           
 17583                           	psect	text64
 17584  015446                     __ptext64:
 17585                           	opt callstack 0
 17586  015446                     ___aodiv:
 17587                           	opt callstack 0
 17588                           
 17589                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 17590  015446  0E0A               	movlw	10
 17591  015448  26E1               	addwf	fsr1l,f,c
 17592  01544A  0E00               	movlw	0
 17593  01544C  22E2               	addwfc	fsr1h,f,c
 17594                           
 17595                           ;stkvar	_sign @ sp[(-10)+8]
 17596                           
 17597                           ;incstack = 0
 17598  01544E  0EFE               	movlw	-2
 17599  015450  6AE3               	clrf	plusw1,c
 17600                           
 17601                           ;stkvar	_divisor @ sp[(-10)+-16]
 17602  015452  0EED               	movlw	-19
 17603  015454  AEE3               	btfss	plusw1,7,c
 17604  015456  D028               	goto	l6730
 17605                           
 17606                           ;stkvar	_divisor @ sp[(-10)+-16]
 17607                           ;stkvar	_divisor @ sp[(-10)+-16]
 17608  015458  0EE6               	movlw	-26
 17609  01545A  6CE3               	negf	plusw1,c
 17610  01545C  0EE7               	movlw	-25
 17611  01545E  1EE3               	comf	plusw1,f,c
 17612  015460  0EE8               	movlw	-24
 17613  015462  1EE3               	comf	plusw1,f,c
 17614  015464  0EE9               	movlw	-23
 17615  015466  1EE3               	comf	plusw1,f,c
 17616  015468  0EEA               	movlw	-22
 17617  01546A  1EE3               	comf	plusw1,f,c
 17618  01546C  0EEB               	movlw	-21
 17619  01546E  1EE3               	comf	plusw1,f,c
 17620  015470  0EEC               	movlw	-20
 17621  015472  1EE3               	comf	plusw1,f,c
 17622  015474  0EED               	movlw	-19
 17623  015476  1EE3               	comf	plusw1,f,c
 17624  015478  E314               	bnc	u5070
 17625  01547A  0EE7               	movlw	-25
 17626  01547C  2AE3               	incf	plusw1,f,c
 17627  01547E  E311               	bnc	u5070
 17628  015480  0EE8               	movlw	-24
 17629  015482  2AE3               	incf	plusw1,f,c
 17630  015484  E30E               	bnc	u5070
 17631  015486  0EE9               	movlw	-23
 17632  015488  2AE3               	incf	plusw1,f,c
 17633  01548A  E30B               	bnc	u5070
 17634  01548C  0EEA               	movlw	-22
 17635  01548E  2AE3               	incf	plusw1,f,c
 17636  015490  E308               	bnc	u5070
 17637  015492  0EEB               	movlw	-21
 17638  015494  2AE3               	incf	plusw1,f,c
 17639  015496  E305               	bnc	u5070
 17640  015498  0EEC               	movlw	-20
 17641  01549A  2AE3               	incf	plusw1,f,c
 17642  01549C  E302               	bnc	u5070
 17643  01549E  0EED               	movlw	-19
 17644  0154A0  2AE3               	incf	plusw1,f,c
 17645  0154A2                     u5070:
 17646                           
 17647                           ;stkvar	_sign @ sp[(-10)+8]
 17648  0154A2  0EFE               	movlw	-2
 17649  0154A4  6AE3               	clrf	plusw1,c
 17650  0154A6  2AE3               	incf	plusw1,f,c
 17651  0154A8                     l6730:
 17652                           
 17653                           ;stkvar	_dividend @ sp[(-10)+-8]
 17654  0154A8  0EF5               	movlw	-11
 17655  0154AA  AEE3               	btfss	plusw1,7,c
 17656  0154AC  D027               	goto	l6736
 17657                           
 17658                           ;stkvar	_dividend @ sp[(-10)+-8]
 17659                           ;stkvar	_dividend @ sp[(-10)+-8]
 17660  0154AE  0EEE               	movlw	-18
 17661  0154B0  6CE3               	negf	plusw1,c
 17662  0154B2  0EEF               	movlw	-17
 17663  0154B4  1EE3               	comf	plusw1,f,c
 17664  0154B6  0EF0               	movlw	-16
 17665  0154B8  1EE3               	comf	plusw1,f,c
 17666  0154BA  0EF1               	movlw	-15
 17667  0154BC  1EE3               	comf	plusw1,f,c
 17668  0154BE  0EF2               	movlw	-14
 17669  0154C0  1EE3               	comf	plusw1,f,c
 17670  0154C2  0EF3               	movlw	-13
 17671  0154C4  1EE3               	comf	plusw1,f,c
 17672  0154C6  0EF4               	movlw	-12
 17673  0154C8  1EE3               	comf	plusw1,f,c
 17674  0154CA  0EF5               	movlw	-11
 17675  0154CC  1EE3               	comf	plusw1,f,c
 17676  0154CE  E314               	bnc	u5090
 17677  0154D0  0EEF               	movlw	-17
 17678  0154D2  2AE3               	incf	plusw1,f,c
 17679  0154D4  E311               	bnc	u5090
 17680  0154D6  0EF0               	movlw	-16
 17681  0154D8  2AE3               	incf	plusw1,f,c
 17682  0154DA  E30E               	bnc	u5090
 17683  0154DC  0EF1               	movlw	-15
 17684  0154DE  2AE3               	incf	plusw1,f,c
 17685  0154E0  E30B               	bnc	u5090
 17686  0154E2  0EF2               	movlw	-14
 17687  0154E4  2AE3               	incf	plusw1,f,c
 17688  0154E6  E308               	bnc	u5090
 17689  0154E8  0EF3               	movlw	-13
 17690  0154EA  2AE3               	incf	plusw1,f,c
 17691  0154EC  E305               	bnc	u5090
 17692  0154EE  0EF4               	movlw	-12
 17693  0154F0  2AE3               	incf	plusw1,f,c
 17694  0154F2  E302               	bnc	u5090
 17695  0154F4  0EF5               	movlw	-11
 17696  0154F6  2AE3               	incf	plusw1,f,c
 17697  0154F8                     u5090:
 17698                           
 17699                           ;stkvar	_sign @ sp[(-10)+8]
 17700  0154F8  0EFE               	movlw	-2
 17701  0154FA  70E3               	btg	plusw1,0,c
 17702  0154FC                     l6736:
 17703                           
 17704                           ;stkvar	_quotient @ sp[(-10)+0]
 17705  0154FC  0E07               	movlw	7
 17706  0154FE  6E25               	movwf	btemp^0,c
 17707  015500  0EF6               	movlw	-10
 17708  015502                     u5101:
 17709  015502  6AE3               	clrf	plusw1,c
 17710  015504  2AE8               	incf	wreg,f,c
 17711  015506  0625               	decf	btemp^0,f,c
 17712  015508  E2FC               	bc	u5101
 17713                           
 17714                           ;stkvar	_divisor @ sp[(-10)+-16]
 17715  01550A  0EE6               	movlw	-26
 17716  01550C  50E3               	movf	plusw1,w,c
 17717  01550E  E116               	bnz	u5110
 17718  015510  0EE7               	movlw	-25
 17719  015512  50E3               	movf	plusw1,w,c
 17720  015514  E113               	bnz	u5110
 17721  015516  0EE8               	movlw	-24
 17722  015518  50E3               	movf	plusw1,w,c
 17723  01551A  E110               	bnz	u5110
 17724  01551C  0EE9               	movlw	-23
 17725  01551E  50E3               	movf	plusw1,w,c
 17726  015520  E10D               	bnz	u5110
 17727  015522  0EEA               	movlw	-22
 17728  015524  50E3               	movf	plusw1,w,c
 17729  015526  E10A               	bnz	u5110
 17730  015528  0EEB               	movlw	-21
 17731  01552A  50E3               	movf	plusw1,w,c
 17732  01552C  E107               	bnz	u5110
 17733  01552E  0EEC               	movlw	-20
 17734  015530  50E3               	movf	plusw1,w,c
 17735  015532  E104               	bnz	u5110
 17736  015534  0EED               	movlw	-19
 17737  015536  50E3               	movf	plusw1,w,c
 17738  015538  B4D8               	btfsc	status,2,c
 17739  01553A  D088               	goto	u5140
 17740  01553C                     u5110:
 17741                           
 17742                           ;stkvar	_counter @ sp[(-10)+9]
 17743  01553C  0EFF               	movlw	-1
 17744  01553E  6AE3               	clrf	plusw1,c
 17745  015540  D012               	goto	L19
 17746  015542                     l6742:
 17747                           
 17748                           ;stkvar	_divisor @ sp[(-10)+-16]
 17749  015542  90D8               	bcf	status,0,c
 17750  015544  0EE6               	movlw	-26
 17751  015546  36E3               	rlcf	plusw1,f,c
 17752  015548  0EE7               	movlw	-25
 17753  01554A  36E3               	rlcf	plusw1,f,c
 17754  01554C  0EE8               	movlw	-24
 17755  01554E  36E3               	rlcf	plusw1,f,c
 17756  015550  0EE9               	movlw	-23
 17757  015552  36E3               	rlcf	plusw1,f,c
 17758  015554  0EEA               	movlw	-22
 17759  015556  36E3               	rlcf	plusw1,f,c
 17760  015558  0EEB               	movlw	-21
 17761  01555A  36E3               	rlcf	plusw1,f,c
 17762  01555C  0EEC               	movlw	-20
 17763  01555E  36E3               	rlcf	plusw1,f,c
 17764  015560  0EED               	movlw	-19
 17765  015562  36E3               	rlcf	plusw1,f,c
 17766                           
 17767                           ;stkvar	_counter @ sp[(-10)+9]
 17768  015564  0EFF               	movlw	-1
 17769  015566                     L19:
 17770  015566  2AE3               	incf	plusw1,f,c
 17771                           
 17772                           ;stkvar	_divisor @ sp[(-10)+-16]
 17773  015568  0EED               	movlw	-19
 17774  01556A  AEE3               	btfss	plusw1,7,c
 17775  01556C  D7EA               	goto	l6742
 17776  01556E                     u5120:
 17777                           
 17778                           ;stkvar	_quotient @ sp[(-10)+0]
 17779  01556E  90D8               	bcf	status,0,c
 17780  015570  0EF6               	movlw	-10
 17781  015572  36E3               	rlcf	plusw1,f,c
 17782  015574  0EF7               	movlw	-9
 17783  015576  36E3               	rlcf	plusw1,f,c
 17784  015578  0EF8               	movlw	-8
 17785  01557A  36E3               	rlcf	plusw1,f,c
 17786  01557C  0EF9               	movlw	-7
 17787  01557E  36E3               	rlcf	plusw1,f,c
 17788  015580  0EFA               	movlw	-6
 17789  015582  36E3               	rlcf	plusw1,f,c
 17790  015584  0EFB               	movlw	-5
 17791  015586  36E3               	rlcf	plusw1,f,c
 17792  015588  0EFC               	movlw	-4
 17793  01558A  36E3               	rlcf	plusw1,f,c
 17794  01558C  0EFD               	movlw	-3
 17795  01558E  36E3               	rlcf	plusw1,f,c
 17796                           
 17797                           ;stkvar	_divisor @ sp[(-10)+-16]
 17798                           ;stkvar	_dividend @ sp[(-10)+-8]
 17799  015590  50E1               	movf	fsr1l,w,c
 17800  015592  0FEE               	addlw	-18
 17801  015594  6ED9               	movwf	fsr2l,c
 17802  015596  50E2               	movf	fsr1h,w,c
 17803  015598  6EDA               	movwf	fsr2h,c
 17804  01559A  0EFF               	movlw	255
 17805  01559C  22DA               	addwfc	fsr2h,f,c
 17806  01559E  0EE6               	movlw	-26
 17807  0155A0  50E3               	movf	plusw1,w,c
 17808  0155A2  5CDE               	subwf	postinc2,w,c
 17809  0155A4  0EE7               	movlw	-25
 17810  0155A6  50E3               	movf	plusw1,w,c
 17811  0155A8  58DE               	subwfb	postinc2,w,c
 17812  0155AA  0EE8               	movlw	-24
 17813  0155AC  50E3               	movf	plusw1,w,c
 17814  0155AE  58DE               	subwfb	postinc2,w,c
 17815  0155B0  0EE9               	movlw	-23
 17816  0155B2  50E3               	movf	plusw1,w,c
 17817  0155B4  58DE               	subwfb	postinc2,w,c
 17818  0155B6  0EEA               	movlw	-22
 17819  0155B8  50E3               	movf	plusw1,w,c
 17820  0155BA  58DE               	subwfb	postinc2,w,c
 17821  0155BC  0EEB               	movlw	-21
 17822  0155BE  50E3               	movf	plusw1,w,c
 17823  0155C0  58DE               	subwfb	postinc2,w,c
 17824  0155C2  0EEC               	movlw	-20
 17825  0155C4  50E3               	movf	plusw1,w,c
 17826  0155C6  58DE               	subwfb	postinc2,w,c
 17827  0155C8  0EED               	movlw	-19
 17828  0155CA  50E3               	movf	plusw1,w,c
 17829  0155CC  58DE               	subwfb	postinc2,w,c
 17830  0155CE  A0D8               	btfss	status,0,c
 17831  0155D0  D021               	goto	l6754
 17832                           
 17833                           ;stkvar	_divisor @ sp[(-10)+-16]
 17834                           ;stkvar	_dividend @ sp[(-10)+-8]
 17835  0155D2  50E1               	movf	fsr1l,w,c
 17836  0155D4  0FEE               	addlw	-18
 17837  0155D6  6ED9               	movwf	fsr2l,c
 17838  0155D8  50E2               	movf	fsr1h,w,c
 17839  0155DA  6EDA               	movwf	fsr2h,c
 17840  0155DC  0EFF               	movlw	255
 17841  0155DE  22DA               	addwfc	fsr2h,f,c
 17842  0155E0  0EE6               	movlw	-26
 17843  0155E2  50E3               	movf	plusw1,w,c
 17844  0155E4  5EDE               	subwf	postinc2,f,c
 17845  0155E6  0EE7               	movlw	-25
 17846  0155E8  50E3               	movf	plusw1,w,c
 17847  0155EA  5ADE               	subwfb	postinc2,f,c
 17848  0155EC  0EE8               	movlw	-24
 17849  0155EE  50E3               	movf	plusw1,w,c
 17850  0155F0  5ADE               	subwfb	postinc2,f,c
 17851  0155F2  0EE9               	movlw	-23
 17852  0155F4  50E3               	movf	plusw1,w,c
 17853  0155F6  5ADE               	subwfb	postinc2,f,c
 17854  0155F8  0EEA               	movlw	-22
 17855  0155FA  50E3               	movf	plusw1,w,c
 17856  0155FC  5ADE               	subwfb	postinc2,f,c
 17857  0155FE  0EEB               	movlw	-21
 17858  015600  50E3               	movf	plusw1,w,c
 17859  015602  5ADE               	subwfb	postinc2,f,c
 17860  015604  0EEC               	movlw	-20
 17861  015606  50E3               	movf	plusw1,w,c
 17862  015608  5ADE               	subwfb	postinc2,f,c
 17863  01560A  0EED               	movlw	-19
 17864  01560C  50E3               	movf	plusw1,w,c
 17865  01560E  5ADE               	subwfb	postinc2,f,c
 17866                           
 17867                           ;stkvar	_quotient @ sp[(-10)+0]
 17868  015610  0EF6               	movlw	-10
 17869  015612  80E3               	bsf	plusw1,0,c
 17870  015614                     l6754:
 17871                           
 17872                           ;stkvar	_divisor @ sp[(-10)+-16]
 17873  015614  90D8               	bcf	status,0,c
 17874  015616  0EED               	movlw	-19
 17875  015618  32E3               	rrcf	plusw1,f,c
 17876  01561A  0EEC               	movlw	-20
 17877  01561C  32E3               	rrcf	plusw1,f,c
 17878  01561E  0EEB               	movlw	-21
 17879  015620  32E3               	rrcf	plusw1,f,c
 17880  015622  0EEA               	movlw	-22
 17881  015624  32E3               	rrcf	plusw1,f,c
 17882  015626  0EE9               	movlw	-23
 17883  015628  32E3               	rrcf	plusw1,f,c
 17884  01562A  0EE8               	movlw	-24
 17885  01562C  32E3               	rrcf	plusw1,f,c
 17886  01562E  0EE7               	movlw	-25
 17887  015630  32E3               	rrcf	plusw1,f,c
 17888  015632  0EE6               	movlw	-26
 17889  015634  32E3               	rrcf	plusw1,f,c
 17890                           
 17891                           ;stkvar	_counter @ sp[(-10)+9]
 17892  015636  0EFF               	movlw	-1
 17893  015638  50E3               	movf	plusw1,w,c
 17894  01563A  6E25               	movwf	btemp^0,c
 17895  01563C  0E01               	movlw	1
 17896  01563E  5E25               	subwf	btemp^0,f,c
 17897  015640  0EFF               	movlw	-1
 17898  015642  0060  F097  FFE3   	movff	btemp,plusw1
 17899  015648  A4D8               	btfss	status,2,c
 17900  01564A  D791               	goto	u5120
 17901  01564C                     u5140:
 17902                           
 17903                           ;stkvar	_sign @ sp[(-10)+8]
 17904  01564C  0EFE               	movlw	-2
 17905  01564E  50E3               	movf	plusw1,w,c
 17906  015650  B4D8               	btfsc	status,2,c
 17907  015652  D025               	goto	u5160
 17908                           
 17909                           ;stkvar	_quotient @ sp[(-10)+0]
 17910                           ;stkvar	_quotient @ sp[(-10)+0]
 17911  015654  0EF6               	movlw	-10
 17912  015656  6CE3               	negf	plusw1,c
 17913  015658  0EF7               	movlw	-9
 17914  01565A  1EE3               	comf	plusw1,f,c
 17915  01565C  0EF8               	movlw	-8
 17916  01565E  1EE3               	comf	plusw1,f,c
 17917  015660  0EF9               	movlw	-7
 17918  015662  1EE3               	comf	plusw1,f,c
 17919  015664  0EFA               	movlw	-6
 17920  015666  1EE3               	comf	plusw1,f,c
 17921  015668  0EFB               	movlw	-5
 17922  01566A  1EE3               	comf	plusw1,f,c
 17923  01566C  0EFC               	movlw	-4
 17924  01566E  1EE3               	comf	plusw1,f,c
 17925  015670  0EFD               	movlw	-3
 17926  015672  1EE3               	comf	plusw1,f,c
 17927  015674  E314               	bnc	u5160
 17928  015676  0EF7               	movlw	-9
 17929  015678  2AE3               	incf	plusw1,f,c
 17930  01567A  E311               	bnc	u5160
 17931  01567C  0EF8               	movlw	-8
 17932  01567E  2AE3               	incf	plusw1,f,c
 17933  015680  E30E               	bnc	u5160
 17934  015682  0EF9               	movlw	-7
 17935  015684  2AE3               	incf	plusw1,f,c
 17936  015686  E30B               	bnc	u5160
 17937  015688  0EFA               	movlw	-6
 17938  01568A  2AE3               	incf	plusw1,f,c
 17939  01568C  E308               	bnc	u5160
 17940  01568E  0EFB               	movlw	-5
 17941  015690  2AE3               	incf	plusw1,f,c
 17942  015692  E305               	bnc	u5160
 17943  015694  0EFC               	movlw	-4
 17944  015696  2AE3               	incf	plusw1,f,c
 17945  015698  E302               	bnc	u5160
 17946  01569A  0EFD               	movlw	-3
 17947  01569C  2AE3               	incf	plusw1,f,c
 17948  01569E                     u5160:
 17949                           
 17950                           ;stkvar	_quotient @ sp[(-10)+0]
 17951  01569E  0EF6               	movlw	246
 17952  0156A0  24E1               	addwf	fsr1l,w,c
 17953  0156A2  6ED9               	movwf	fsr2l,c
 17954  0156A4  0EFF               	movlw	255
 17955  0156A6  20E2               	addwfc	fsr1h,w,c
 17956  0156A8  6EDA               	movwf	fsr2h,c
 17957                           
 17958                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 17959  0156AA  0E08               	movlw	8
 17960  0156AC  6E25               	movwf	btemp^0,c
 17961  0156AE  0EEE               	movlw	-18
 17962  0156B0                     us517999:
 17963  0156B0  006F FF7B FFE3     	movff	postinc2,plusw1
 17964  0156B6  28E8               	incf	wreg,w,c
 17965  0156B8  2E25               	decfsz	btemp^0,f,c
 17966  0156BA  D7FA               	bra	us517999
 17967                           
 17968                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 17969  0156BC  0EF6               	movlw	246
 17970  0156BE  26E1               	addwf	fsr1l,f,c
 17971  0156C0  0EFF               	movlw	255
 17972  0156C2  22E2               	addwfc	fsr1h,f,c
 17973  0156C4  0012               	return		;funcret
 17974  0156C6                     __end_of___aodiv:
 17975                           	opt callstack 0
 17976                           
 17977 ;; *************** function _ctoa *****************
 17978 ;; Defined at:
 17979 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17980 ;; Parameters:    Size  Location     Type
 17981 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17982 ;;		 -> f(6), NULL(0), 
 17983 ;;  c               1  [STACK] unsigned char 
 17984 ;; Auto vars:     Size  Location     Type
 17985 ;;  w               2  [STACK] int 
 17986 ;;  l               2    0        int 
 17987 ;; Return value:  Size  Location     Type
 17988 ;;                  2  [STACK] int 
 17989 ;; Registers used:
 17990 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 17991 ;; Tracked objects:
 17992 ;;		On entry : 0/0
 17993 ;;		On exit  : 0/0
 17994 ;;		Unchanged: 0/0
 17995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18000 ;;Total ram usage:        0 bytes
 18001 ;; Hardware stack levels used:    1
 18002 ;; Hardware stack levels required when called:   12
 18003 ;; This function calls:
 18004 ;;		_pad
 18005 ;; This function is called by:
 18006 ;;		_vfpfcnvrt
 18007 ;; This function uses a reentrant model
 18008 ;;
 18009                           
 18010                           	psect	text65
 18011  017D9A                     __ptext65:
 18012                           	opt callstack 0
 18013  017D9A                     _ctoa:
 18014                           	opt callstack 0
 18015                           
 18016                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18017  017D9A  52E6               	movf	postinc1,f,c
 18018  017D9C  52E6               	movf	postinc1,f,c
 18019                           
 18020                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 18021                           
 18022                           ;incstack = 0
 18023  017D9E  500A               	movf	_width^0,w,c
 18024  017DA0  100B               	iorwf	(_width+1)^0,w,c
 18025  017DA2  A4D8               	btfss	status,2,c
 18026  017DA4  D009               	goto	l10042
 18027                           
 18028                           ;stkvar	_w @ sp[(-2)+0]
 18029  017DA6  0EFE               	movlw	-2
 18030  017DA8  0060  F02B  FFE3   	movff	_width,plusw1
 18031  017DAE  0EFF               	movlw	-1
 18032  017DB0  0060  F02F  FFE3   	movff	_width+1,plusw1
 18033  017DB6  D016               	goto	l10044
 18034  017DB8                     l10042:
 18035  017DB8  0EFF               	movlw	255
 18036  017DBA  6E2F               	movwf	(btemp+10)^0,c
 18037  017DBC  0EFF               	movlw	255
 18038  017DBE  6E30               	movwf	(btemp+11)^0,c
 18039  017DC0  0060  F028  F02D   	movff	_width,btemp+8
 18040  017DC6  0060  F02C  F02E   	movff	_width+1,btemp+9
 18041  017DCC  502F               	movf	(btemp+10)^0,w,c
 18042  017DCE  262D               	addwf	(btemp+8)^0,f,c
 18043  017DD0  5030               	movf	(btemp+11)^0,w,c
 18044  017DD2  222E               	addwfc	(btemp+9)^0,f,c
 18045                           
 18046                           ;stkvar	_w @ sp[(-2)+0]
 18047  017DD4  0EFE               	movlw	-2
 18048  017DD6  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 18049  017DDC  0EFF               	movlw	-1
 18050  017DDE  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 18051  017DE4                     l10044:
 18052                           
 18053                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 18054                           ;stkvar	_c @ sp[(-2)+-3]
 18055  017DE4  0EFB               	movlw	-5
 18056  017DE6  006F FF8C  F394    	movff	plusw1,_dbuf
 18057                           
 18058                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 18059  017DEC  0103               	movlb	3	; () banked
 18060  017DEE  6B95               	clrf	(_dbuf+1)& (0+255),b
 18061                           
 18062                           ; BSR set to: 3
 18063                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 18064                           ;stkvar	_w @ sp[(-2)+0]
 18065  017DF0  0EFE               	movlw	-2
 18066  017DF2  006F FF8F FFE6     	movff	plusw1,postinc1
 18067  017DF8  006F FF8F FFE6     	movff	plusw1,postinc1
 18068  017DFE  0E94               	movlw	low _dbuf
 18069  017E00  6EE6               	movwf	postinc1,c
 18070  017E02  0E03               	movlw	high _dbuf
 18071  017E04  6EE6               	movwf	postinc1,c
 18072                           
 18073                           ;stkvar	_fp @ sp[(-6)+-2]
 18074  017E06  0EF8               	movlw	-8
 18075  017E08  006F FF8F FFE6     	movff	plusw1,postinc1
 18076  017E0E  006F FF8F FFE6     	movff	plusw1,postinc1
 18077  017E14  ECC1  F0B6         	call	_pad	;wreg free
 18078                           
 18079                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 18080  017E18  0EFB               	movlw	251
 18081  017E1A  26E1               	addwf	fsr1l,f,c
 18082  017E1C  0EFF               	movlw	255
 18083  017E1E  22E2               	addwfc	fsr1h,f,c
 18084  017E20  0012               	return		;funcret
 18085  017E22                     __end_of_ctoa:
 18086                           	opt callstack 0
 18087                           
 18088 ;; *************** function _pad *****************
 18089 ;; Defined at:
 18090 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18091 ;; Parameters:    Size  Location     Type
 18092 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18093 ;;		 -> f(6), NULL(0), 
 18094 ;;  buf             2  [STACK] PTR unsigned char 
 18095 ;;		 -> dbuf(80), 
 18096 ;;  p               2  [STACK] int 
 18097 ;; Auto vars:     Size  Location     Type
 18098 ;;  w               2  [STACK] int 
 18099 ;;  i               2  [STACK] int 
 18100 ;; Return value:  Size  Location     Type
 18101 ;;                  2  [STACK] int 
 18102 ;; Registers used:
 18103 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 18104 ;; Tracked objects:
 18105 ;;		On entry : 0/3
 18106 ;;		On exit  : 0/0
 18107 ;;		Unchanged: 0/0
 18108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18113 ;;Total ram usage:        0 bytes
 18114 ;; Hardware stack levels used:    1
 18115 ;; Hardware stack levels required when called:   11
 18116 ;; This function calls:
 18117 ;;		_fputc
 18118 ;;		_fputs
 18119 ;;		_strlen
 18120 ;; This function is called by:
 18121 ;;		_ctoa
 18122 ;;		_dtoa
 18123 ;;		_efgtoa
 18124 ;;		_xtoa
 18125 ;; This function uses a reentrant model
 18126 ;;
 18127                           
 18128                           	psect	text66
 18129  016D82                     __ptext66:
 18130                           	opt callstack 0
 18131  016D82                     _pad:
 18132                           	opt callstack 0
 18133                           
 18134                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18135  016D82  52E6               	movf	postinc1,f,c
 18136  016D84  52E6               	movf	postinc1,f,c
 18137  016D86  52E6               	movf	postinc1,f,c
 18138  016D88  52E6               	movf	postinc1,f,c
 18139                           
 18140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 18141                           
 18142                           ;incstack = 0
 18143  016D8A  A00E               	btfss	_flags^0,0,c
 18144  016D8C  D010               	goto	l10016
 18145                           
 18146                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 18147                           ;stkvar	_fp @ sp[(-4)+-2]
 18148  016D8E  0EFA               	movlw	-6
 18149  016D90  006F FF8F FFE6     	movff	plusw1,postinc1
 18150  016D96  006F FF8F FFE6     	movff	plusw1,postinc1
 18151                           
 18152                           ;stkvar	_buf @ sp[(-6)+-4]
 18153  016D9C  0EF6               	movlw	-10
 18154  016D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 18155  016DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 18156  016DAA  EC61  F0BD         	call	_fputs	;wreg free
 18157  016DAE                     l10016:
 18158                           
 18159                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 18160                           ;stkvar	_p @ sp[(-4)+-6]
 18161  016DAE  0EF7               	movlw	-9
 18162  016DB0  BEE3               	btfsc	plusw1,7,c
 18163  016DB2  D011               	goto	l10020
 18164                           
 18165                           ;stkvar	_p @ sp[(-4)+-6]
 18166                           ;stkvar	_w @ sp[(-4)+0]
 18167  016DB4  0EF6               	movlw	-10
 18168  016DB6  006F FF8C  F025    	movff	plusw1,btemp
 18169  016DBC  0EFC               	movlw	-4
 18170  016DBE  0060  F097  FFE3   	movff	btemp,plusw1
 18171  016DC4  0EF7               	movlw	-9
 18172  016DC6  006F FF8C  F025    	movff	plusw1,btemp
 18173  016DCC  0EFD               	movlw	-3
 18174  016DCE  0060  F097  FFE3   	movff	btemp,plusw1
 18175  016DD4  D004               	goto	l1979
 18176  016DD6                     l10020:
 18177                           
 18178                           ;stkvar	_w @ sp[(-4)+0]
 18179  016DD6  0EFC               	movlw	-4
 18180  016DD8  6AE3               	clrf	plusw1,c
 18181  016DDA  0EFD               	movlw	-3
 18182  016DDC  6AE3               	clrf	plusw1,c
 18183  016DDE                     l1979:
 18184                           
 18185                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 18186                           ;stkvar	_i @ sp[(-4)+2]
 18187  016DDE  0EFE               	movlw	-2
 18188  016DE0  6AE3               	clrf	plusw1,c
 18189  016DE2  0EFF               	movlw	-1
 18190  016DE4  6AE3               	clrf	plusw1,c
 18191                           
 18192                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 18193  016DE6  D01E               	goto	l10026
 18194  016DE8                     l10022:
 18195                           
 18196                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 18197                           ;stkvar	_fp @ sp[(-4)+-2]
 18198  016DE8  0EFA               	movlw	-6
 18199  016DEA  006F FF8F FFE6     	movff	plusw1,postinc1
 18200  016DF0  006F FF8F FFE6     	movff	plusw1,postinc1
 18201  016DF6  0E20               	movlw	32
 18202  016DF8  6EE6               	movwf	postinc1,c
 18203  016DFA  0E00               	movlw	0
 18204  016DFC  6EE6               	movwf	postinc1,c
 18205  016DFE  ECA3  F0B5         	call	_fputc	;wreg free
 18206                           
 18207                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 18208                           ;stkvar	_i @ sp[(-4)+2]
 18209  016E02  0EFE               	movlw	-2
 18210  016E04  50E3               	movf	plusw1,w,c
 18211  016E06  0F01               	addlw	1
 18212  016E08  6E25               	movwf	btemp^0,c
 18213  016E0A  0EFE               	movlw	-2
 18214  016E0C  0060  F097  FFE3   	movff	btemp,plusw1
 18215  016E12  6A25               	clrf	btemp^0,c
 18216  016E14  0EFF               	movlw	-1
 18217  016E16  50E3               	movf	plusw1,w,c
 18218  016E18  2025               	addwfc	btemp^0,w,c
 18219  016E1A  6E25               	movwf	btemp^0,c
 18220  016E1C  0EFF               	movlw	-1
 18221  016E1E  0060  F097  FFE3   	movff	btemp,plusw1
 18222  016E24                     l10026:
 18223                           
 18224                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 18225                           ;stkvar	_w @ sp[(-4)+0]
 18226                           ;stkvar	_i @ sp[(-4)+2]
 18227  016E24  50E1               	movf	fsr1l,w,c
 18228  016E26  0FFE               	addlw	-2
 18229  016E28  6ED9               	movwf	fsr2l,c
 18230  016E2A  50E2               	movf	fsr1h,w,c
 18231  016E2C  6EDA               	movwf	fsr2h,c
 18232  016E2E  0EFF               	movlw	255
 18233  016E30  22DA               	addwfc	fsr2h,f,c
 18234  016E32  0EFC               	movlw	-4
 18235  016E34  50E3               	movf	plusw1,w,c
 18236  016E36  5CDE               	subwf	postinc2,w,c
 18237  016E38  50DE               	movf	postinc2,w,c
 18238  016E3A  0A80               	xorlw	128
 18239  016E3C  6E25               	movwf	btemp^0,c
 18240  016E3E  0EFD               	movlw	-3
 18241  016E40  50E3               	movf	plusw1,w,c
 18242  016E42  0A80               	xorlw	128
 18243  016E44  5825               	subwfb	btemp^0,w,c
 18244  016E46  A0D8               	btfss	status,0,c
 18245  016E48  D7CF               	goto	l10022
 18246                           
 18247                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 18248  016E4A  B00E               	btfsc	_flags^0,0,c
 18249  016E4C  D010               	goto	l10030
 18250                           
 18251                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 18252                           ;stkvar	_fp @ sp[(-4)+-2]
 18253  016E4E  0EFA               	movlw	-6
 18254  016E50  006F FF8F FFE6     	movff	plusw1,postinc1
 18255  016E56  006F FF8F FFE6     	movff	plusw1,postinc1
 18256                           
 18257                           ;stkvar	_buf @ sp[(-6)+-4]
 18258  016E5C  0EF6               	movlw	-10
 18259  016E5E  006F FF8F FFE6     	movff	plusw1,postinc1
 18260  016E64  006F FF8F FFE6     	movff	plusw1,postinc1
 18261  016E6A  EC61  F0BD         	call	_fputs	;wreg free
 18262  016E6E                     l10030:
 18263                           
 18264                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 18265                           ;stkvar	_w @ sp[(-4)+0]
 18266                           ;stkvar	_buf @ sp[(-4)+-4]
 18267  016E6E  0EF8               	movlw	-8
 18268  016E70  006F FF8F FFE6     	movff	plusw1,postinc1
 18269  016E76  006F FF8F FFE6     	movff	plusw1,postinc1
 18270  016E7C  EC10  F0BD         	call	_strlen	;wreg free
 18271  016E80  0EFC               	movlw	-4
 18272  016E82  50E3               	movf	plusw1,w,c
 18273  016E84  2625               	addwf	btemp^0,f,c
 18274  016E86  0EFD               	movlw	-3
 18275  016E88  50E3               	movf	plusw1,w,c
 18276  016E8A  2226               	addwfc	(btemp+1)^0,f,c
 18277                           
 18278                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 18279  016E8C  0EF6               	movlw	246
 18280  016E8E  26E1               	addwf	fsr1l,f,c
 18281  016E90  0EFF               	movlw	255
 18282  016E92  22E2               	addwfc	fsr1h,f,c
 18283  016E94  0012               	return		;funcret
 18284  016E96                     __end_of_pad:
 18285                           	opt callstack 0
 18286                           
 18287 ;; *************** function _strlen *****************
 18288 ;; Defined at:
 18289 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 18290 ;; Parameters:    Size  Location     Type
 18291 ;;  s               2  [STACK] PTR const unsigned char 
 18292 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 18293 ;;		 -> STR_28(9), STR_27(12), D.lcd(288), D(290), 
 18294 ;;		 -> T(144), STR_7(6), STR_3(6), V(188), 
 18295 ;; Auto vars:     Size  Location     Type
 18296 ;;  a               2  [STACK] PTR const unsigned char 
 18297 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 18298 ;;		 -> STR_28(9), STR_27(12), D.lcd(288), D(290), 
 18299 ;;		 -> T(144), STR_7(6), STR_3(6), V(188), 
 18300 ;; Return value:  Size  Location     Type
 18301 ;;                  2  [STACK] unsigned int 
 18302 ;; Registers used:
 18303 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 18304 ;; Tracked objects:
 18305 ;;		On entry : 0/0
 18306 ;;		On exit  : 0/0
 18307 ;;		Unchanged: 0/0
 18308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18313 ;;Total ram usage:        0 bytes
 18314 ;; Hardware stack levels used:    1
 18315 ;; Hardware stack levels required when called:    7
 18316 ;; This function calls:
 18317 ;;		Nothing
 18318 ;; This function is called by:
 18319 ;;		_eaDogM_WriteString
 18320 ;;		_pad
 18321 ;;		_stoa
 18322 ;; This function uses a reentrant model
 18323 ;;
 18324                           
 18325                           	psect	text67
 18326  017A20                     __ptext67:
 18327                           	opt callstack 0
 18328  017A20                     _strlen:
 18329                           	opt callstack 0
 18330                           
 18331                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18332  017A20  52E6               	movf	postinc1,f,c
 18333  017A22  52E6               	movf	postinc1,f,c
 18334                           
 18335                           ;stkvar	_s @ sp[(-2)+-2]
 18336                           
 18337                           ;incstack = 0
 18338  017A24  0EFC               	movlw	-4
 18339  017A26  006F FF8C  F02F    	movff	plusw1,btemp+10
 18340  017A2C  0EFD               	movlw	-3
 18341  017A2E  006F FF8C  F030    	movff	plusw1,btemp+11
 18342                           
 18343                           ;stkvar	_a @ sp[(-2)+0]
 18344  017A34  0EFF               	movlw	-1
 18345  017A36  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 18346  017A3C  0EFE               	movlw	-2
 18347  017A3E  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 18348  017A44  D011               	goto	l6568
 18349  017A46                     l6566:
 18350                           
 18351                           ;stkvar	_s @ sp[(-2)+-2]
 18352  017A46  0EFC               	movlw	-4
 18353  017A48  50E3               	movf	plusw1,w,c
 18354  017A4A  0F01               	addlw	1
 18355  017A4C  6E25               	movwf	btemp^0,c
 18356  017A4E  0EFC               	movlw	-4
 18357  017A50  0060  F097  FFE3   	movff	btemp,plusw1
 18358  017A56  6A25               	clrf	btemp^0,c
 18359  017A58  0EFD               	movlw	-3
 18360  017A5A  50E3               	movf	plusw1,w,c
 18361  017A5C  2025               	addwfc	btemp^0,w,c
 18362  017A5E  6E25               	movwf	btemp^0,c
 18363  017A60  0EFD               	movlw	-3
 18364  017A62  0060  F097  FFE3   	movff	btemp,plusw1
 18365  017A68                     l6568:
 18366                           
 18367                           ;stkvar	_s @ sp[(-2)+-2]
 18368  017A68  0EFC               	movlw	-4
 18369  017A6A  006F FF8F FFF6     	movff	plusw1,tblptrl
 18370  017A70  0EFD               	movlw	-3
 18371  017A72  006F FF8F FFF7     	movff	plusw1,tblptrh
 18372  017A78  0E00               	movlw	low (__mediumconst shr (0+16))
 18373  017A7A  6EF8               	movwf	tblptru,c
 18374  017A7C  0E1F               	movlw	(high __ramtop+-1)
 18375  017A7E  64F7               	cpfsgt	tblptrh,c
 18376  017A80  D003               	bra	u4657
 18377  017A82  0008               	tblrd		*
 18378  017A84  50F5               	movf	tablat,w,c
 18379  017A86  D007               	bra	u4650
 18380  017A88                     u4657:
 18381  017A88  006F FFDB FFE9     	movff	tblptrl,fsr0l
 18382  017A8E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 18383  017A94  50EF               	movf	indf0,w,c
 18384  017A96                     u4650:
 18385  017A96  0900               	iorlw	0
 18386  017A98  A4D8               	btfss	status,2,c
 18387  017A9A  D7D5               	goto	l6566
 18388                           
 18389                           ;stkvar	_a @ sp[(-2)+0]
 18390                           ;stkvar	_s @ sp[(-2)+-2]
 18391  017A9C  0EFC               	movlw	-4
 18392  017A9E  006F FF8C  F025    	movff	plusw1,btemp
 18393  017AA4  0EFD               	movlw	-3
 18394  017AA6  006F FF8C  F026    	movff	plusw1,btemp+1
 18395  017AAC  0EFE               	movlw	-2
 18396  017AAE  50E3               	movf	plusw1,w,c
 18397  017AB0  5E25               	subwf	btemp^0,f,c
 18398  017AB2  0EFF               	movlw	-1
 18399  017AB4  50E3               	movf	plusw1,w,c
 18400  017AB6  5A26               	subwfb	(btemp+1)^0,f,c
 18401                           
 18402                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 18403  017AB8  52E5               	movf	postdec1,f,c
 18404  017ABA  52E5               	movf	postdec1,f,c
 18405  017ABC  52E5               	movf	postdec1,f,c
 18406  017ABE  52E5               	movf	postdec1,f,c
 18407  017AC0  0012               	return		;funcret
 18408  017AC2                     __end_of_strlen:
 18409                           	opt callstack 0
 18410                           
 18411 ;; *************** function _fputs *****************
 18412 ;; Defined at:
 18413 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 18414 ;; Parameters:    Size  Location     Type
 18415 ;;  s               2  [STACK] PTR const unsigned char 
 18416 ;;		 -> dbuf(80), 
 18417 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18418 ;;		 -> f(6), NULL(0), 
 18419 ;; Auto vars:     Size  Location     Type
 18420 ;;  i               2  [STACK] int 
 18421 ;;  c               1  [STACK] unsigned char 
 18422 ;; Return value:  Size  Location     Type
 18423 ;;                  2  [STACK] int 
 18424 ;; Registers used:
 18425 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 18426 ;; Tracked objects:
 18427 ;;		On entry : 0/3
 18428 ;;		On exit  : 0/0
 18429 ;;		Unchanged: 0/0
 18430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18435 ;;Total ram usage:        0 bytes
 18436 ;; Hardware stack levels used:    1
 18437 ;; Hardware stack levels required when called:   10
 18438 ;; This function calls:
 18439 ;;		_fputc
 18440 ;; This function is called by:
 18441 ;;		_pad
 18442 ;; This function uses a reentrant model
 18443 ;;
 18444                           
 18445                           	psect	text68
 18446  017AC2                     __ptext68:
 18447                           	opt callstack 0
 18448  017AC2                     _fputs:
 18449                           	opt callstack 0
 18450                           
 18451                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18452  017AC2  52E6               	movf	postinc1,f,c
 18453  017AC4  52E6               	movf	postinc1,f,c
 18454  017AC6  52E6               	movf	postinc1,f,c
 18455                           
 18456                           ;stkvar	_i @ sp[(-3)+0]
 18457                           
 18458                           ;incstack = 0
 18459  017AC8  0EFD               	movlw	-3
 18460  017ACA  6AE3               	clrf	plusw1,c
 18461  017ACC  0EFE               	movlw	-2
 18462  017ACE  6AE3               	clrf	plusw1,c
 18463  017AD0  D01F               	goto	l10010
 18464  017AD2                     l10006:
 18465                           
 18466                           ;stkvar	_fp @ sp[(-3)+-4]
 18467  017AD2  0EF9               	movlw	-7
 18468  017AD4  006F FF8F FFE6     	movff	plusw1,postinc1
 18469  017ADA  006F FF8F FFE6     	movff	plusw1,postinc1
 18470                           
 18471                           ;stkvar	_c @ sp[(-5)+2]
 18472  017AE0  0EFD               	movlw	-3
 18473  017AE2  50E3               	movf	plusw1,w,c
 18474  017AE4  6EE6               	movwf	postinc1,c
 18475  017AE6  0E00               	movlw	0
 18476  017AE8  6EE6               	movwf	postinc1,c
 18477  017AEA  ECA3  F0B5         	call	_fputc	;wreg free
 18478                           
 18479                           ;stkvar	_i @ sp[(-3)+0]
 18480  017AEE  0EFD               	movlw	-3
 18481  017AF0  50E3               	movf	plusw1,w,c
 18482  017AF2  0F01               	addlw	1
 18483  017AF4  6E25               	movwf	btemp^0,c
 18484  017AF6  0EFD               	movlw	-3
 18485  017AF8  0060  F097  FFE3   	movff	btemp,plusw1
 18486  017AFE  6A25               	clrf	btemp^0,c
 18487  017B00  0EFE               	movlw	-2
 18488  017B02  50E3               	movf	plusw1,w,c
 18489  017B04  2025               	addwfc	btemp^0,w,c
 18490  017B06  6E25               	movwf	btemp^0,c
 18491  017B08  0EFE               	movlw	-2
 18492  017B0A  0060  F097  FFE3   	movff	btemp,plusw1
 18493  017B10                     l10010:
 18494                           
 18495                           ;stkvar	_i @ sp[(-3)+0]
 18496  017B10  0EFD               	movlw	-3
 18497  017B12  006F FF8C  F02F    	movff	plusw1,btemp+10
 18498  017B18  0EFE               	movlw	-2
 18499  017B1A  006F FF8C  F030    	movff	plusw1,btemp+11
 18500                           
 18501                           ;stkvar	_s @ sp[(-3)+-2]
 18502  017B20  0EFB               	movlw	-5
 18503  017B22  006F FF8C  F02D    	movff	plusw1,btemp+8
 18504  017B28  0EFC               	movlw	-4
 18505  017B2A  006F FF8C  F02E    	movff	plusw1,btemp+9
 18506  017B30  502F               	movf	(btemp+10)^0,w,c
 18507  017B32  242D               	addwf	(btemp+8)^0,w,c
 18508  017B34  6ED9               	movwf	fsr2l,c
 18509  017B36  5030               	movf	(btemp+11)^0,w,c
 18510  017B38  202E               	addwfc	(btemp+9)^0,w,c
 18511  017B3A  6EDA               	movwf	fsr2h,c
 18512  017B3C  50DF               	movf	indf2,w,c
 18513  017B3E  6E30               	movwf	(btemp+11)^0,c
 18514                           
 18515                           ;stkvar	_c @ sp[(-3)+2]
 18516  017B40  0EFF               	movlw	-1
 18517  017B42  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 18518  017B48  0EFF               	movlw	-1
 18519  017B4A  50E3               	movf	plusw1,w,c
 18520  017B4C  A4D8               	btfss	status,2,c
 18521  017B4E  D7C1               	goto	l10006
 18522                           
 18523                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 18524  017B50  0EF9               	movlw	249
 18525  017B52  26E1               	addwf	fsr1l,f,c
 18526  017B54  0EFF               	movlw	255
 18527  017B56  22E2               	addwfc	fsr1h,f,c
 18528  017B58  0012               	return		;funcret
 18529  017B5A                     __end_of_fputs:
 18530                           	opt callstack 0
 18531                           
 18532 ;; *************** function _fputc *****************
 18533 ;; Defined at:
 18534 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 18535 ;; Parameters:    Size  Location     Type
 18536 ;;  c               2  [STACK] int 
 18537 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18538 ;;		 -> f(6), NULL(0), 
 18539 ;; Auto vars:     Size  Location     Type
 18540 ;;		None
 18541 ;; Return value:  Size  Location     Type
 18542 ;;                  2  [STACK] int 
 18543 ;; Registers used:
 18544 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 18545 ;; Tracked objects:
 18546 ;;		On entry : 0/0
 18547 ;;		On exit  : 0/0
 18548 ;;		Unchanged: 0/0
 18549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18554 ;;Total ram usage:        0 bytes
 18555 ;; Hardware stack levels used:    1
 18556 ;; Hardware stack levels required when called:    9
 18557 ;; This function calls:
 18558 ;;		_putch
 18559 ;; This function is called by:
 18560 ;;		_pad
 18561 ;;		_stoa
 18562 ;;		_vfpfcnvrt
 18563 ;;		_fputs
 18564 ;; This function uses a reentrant model
 18565 ;;
 18566                           
 18567                           	psect	text69
 18568  016B46                     __ptext69:
 18569                           	opt callstack 0
 18570  016B46                     _fputc:
 18571                           	opt callstack 12
 18572                           
 18573                           ;stkvar	_fp @ sp[(0)+-4]
 18574                           
 18575                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18576                           ;incstack = 0
 18577  016B46  0EFC               	movlw	-4
 18578  016B48  006F FF8C  F025    	movff	plusw1,btemp
 18579  016B4E  0EFD               	movlw	-3
 18580  016B50  50E3               	movf	plusw1,w,c
 18581  016B52  1025               	iorwf	btemp^0,w,c
 18582  016B54  B4D8               	btfsc	status,2,c
 18583  016B56  D009               	goto	u9180
 18584                           
 18585                           ;stkvar	_fp @ sp[(0)+-4]
 18586  016B58  0EFC               	movlw	-4
 18587  016B5A  006F FF8C  F025    	movff	plusw1,btemp
 18588  016B60  0EFD               	movlw	-3
 18589  016B62  50E3               	movf	plusw1,w,c
 18590  016B64  1025               	iorwf	btemp^0,w,c
 18591  016B66  A4D8               	btfss	status,2,c
 18592  016B68  D006               	goto	l9994
 18593  016B6A                     u9180:
 18594                           
 18595                           ;stkvar	_c @ sp[(0)+-2]
 18596  016B6A  0EFE               	movlw	-2
 18597  016B6C  50E3               	movf	plusw1,w,c
 18598  016B6E  6EE6               	movwf	postinc1,c
 18599  016B70  EC4B  F0C8         	call	_putch	;wreg free
 18600  016B74  D075               	goto	l2997
 18601  016B76                     l9994:
 18602                           
 18603                           ;stkvar	_fp @ sp[(0)+-4]
 18604  016B76  0EFC               	movlw	-4
 18605  016B78  006F FF8C  F02F    	movff	plusw1,btemp+10
 18606  016B7E  0EFD               	movlw	-3
 18607  016B80  006F FF8C  F030    	movff	plusw1,btemp+11
 18608  016B86  0E04               	movlw	4
 18609  016B88  242F               	addwf	(btemp+10)^0,w,c
 18610  016B8A  6ED9               	movwf	fsr2l,c
 18611  016B8C  0E00               	movlw	0
 18612  016B8E  2030               	addwfc	(btemp+11)^0,w,c
 18613  016B90  6EDA               	movwf	fsr2h,c
 18614  016B92  50DE               	movf	postinc2,w,c
 18615  016B94  10DE               	iorwf	postinc2,w,c
 18616  016B96  B4D8               	btfsc	status,2,c
 18617  016B98  D026               	goto	u9200
 18618                           
 18619                           ;stkvar	_fp @ sp[(0)+-4]
 18620  016B9A  0EFC               	movlw	-4
 18621  016B9C  006F FF8C  F02F    	movff	plusw1,btemp+10
 18622  016BA2  0EFD               	movlw	-3
 18623  016BA4  006F FF8C  F030    	movff	plusw1,btemp+11
 18624  016BAA  0E04               	movlw	4
 18625  016BAC  242F               	addwf	(btemp+10)^0,w,c
 18626  016BAE  6ED9               	movwf	fsr2l,c
 18627  016BB0  0E00               	movlw	0
 18628  016BB2  2030               	addwfc	(btemp+11)^0,w,c
 18629  016BB4  6EDA               	movwf	fsr2h,c
 18630                           
 18631                           ;stkvar	_fp @ sp[(0)+-4]
 18632  016BB6  0EFC               	movlw	-4
 18633  016BB8  006F FF8C  F02F    	movff	plusw1,btemp+10
 18634  016BBE  0EFD               	movlw	-3
 18635  016BC0  006F FF8C  F030    	movff	plusw1,btemp+11
 18636  016BC6  0E02               	movlw	2
 18637  016BC8  242F               	addwf	(btemp+10)^0,w,c
 18638  016BCA  6EE9               	movwf	fsr0l,c
 18639  016BCC  0E00               	movlw	0
 18640  016BCE  2030               	addwfc	(btemp+11)^0,w,c
 18641  016BD0  6EEA               	movwf	fsr0h,c
 18642  016BD2  50DE               	movf	postinc2,w,c
 18643  016BD4  5CEE               	subwf	postinc0,w,c
 18644  016BD6  50EE               	movf	postinc0,w,c
 18645  016BD8  0A80               	xorlw	128
 18646  016BDA  6E25               	movwf	btemp^0,c
 18647  016BDC  50DE               	movf	postinc2,w,c
 18648  016BDE  0A80               	xorlw	128
 18649  016BE0  5825               	subwfb	btemp^0,w,c
 18650  016BE2  B0D8               	btfsc	status,0,c
 18651  016BE4  D03D               	goto	l2997
 18652  016BE6                     u9200:
 18653                           
 18654                           ;stkvar	_c @ sp[(0)+-2]
 18655                           ;stkvar	_fp @ sp[(0)+-4]
 18656  016BE6  0EFC               	movlw	-4
 18657  016BE8  006F FF8C  F02F    	movff	plusw1,btemp+10
 18658  016BEE  0EFD               	movlw	-3
 18659  016BF0  006F FF8C  F030    	movff	plusw1,btemp+11
 18660  016BF6  0E02               	movlw	2
 18661  016BF8  242F               	addwf	(btemp+10)^0,w,c
 18662  016BFA  6ED9               	movwf	fsr2l,c
 18663  016BFC  0E00               	movlw	0
 18664  016BFE  2030               	addwfc	(btemp+11)^0,w,c
 18665  016C00  6EDA               	movwf	fsr2h,c
 18666  016C02  006F FF78  F02F    	movff	postinc2,btemp+10
 18667  016C08  006F FF74  F030    	movff	postdec2,btemp+11
 18668                           
 18669                           ;stkvar	_fp @ sp[(0)+-4]
 18670  016C0E  0EFC               	movlw	-4
 18671  016C10  006F FF8F FFD9     	movff	plusw1,fsr2l
 18672  016C16  0EFD               	movlw	-3
 18673  016C18  006F FF8F FFDA     	movff	plusw1,fsr2h
 18674  016C1E  006F FF78  F02D    	movff	postinc2,btemp+8
 18675  016C24  006F FF74  F02E    	movff	postdec2,btemp+9
 18676  016C2A  502F               	movf	(btemp+10)^0,w,c
 18677  016C2C  242D               	addwf	(btemp+8)^0,w,c
 18678  016C2E  6ED9               	movwf	fsr2l,c
 18679  016C30  5030               	movf	(btemp+11)^0,w,c
 18680  016C32  202E               	addwfc	(btemp+9)^0,w,c
 18681  016C34  6EDA               	movwf	fsr2h,c
 18682  016C36  0EFE               	movlw	-2
 18683  016C38  006F FF8F FFDF     	movff	plusw1,indf2
 18684                           
 18685                           ;stkvar	_fp @ sp[(0)+-4]
 18686  016C3E  0EFC               	movlw	-4
 18687  016C40  006F FF8C  F02F    	movff	plusw1,btemp+10
 18688  016C46  0EFD               	movlw	-3
 18689  016C48  006F FF8C  F030    	movff	plusw1,btemp+11
 18690  016C4E  0E02               	movlw	2
 18691  016C50  242F               	addwf	(btemp+10)^0,w,c
 18692  016C52  6ED9               	movwf	fsr2l,c
 18693  016C54  0E00               	movlw	0
 18694  016C56  2030               	addwfc	(btemp+11)^0,w,c
 18695  016C58  6EDA               	movwf	fsr2h,c
 18696  016C5A  2ADE               	incf	postinc2,f,c
 18697  016C5C  0E00               	movlw	0
 18698  016C5E  22DD               	addwfc	postdec2,f,c
 18699  016C60                     l2997:
 18700                           
 18701                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 18702  016C60  52E5               	movf	postdec1,f,c
 18703  016C62  52E5               	movf	postdec1,f,c
 18704  016C64  52E5               	movf	postdec1,f,c
 18705  016C66  52E5               	movf	postdec1,f,c
 18706  016C68  0012               	return		;funcret
 18707  016C6A                     __end_of_fputc:
 18708                           	opt callstack 0
 18709                           
 18710 ;; *************** function _putch *****************
 18711 ;; Defined at:
 18712 ;;		line 168 in file "eadog.c"
 18713 ;; Parameters:    Size  Location     Type
 18714 ;;  c               1  [STACK] unsigned char 
 18715 ;; Auto vars:     Size  Location     Type
 18716 ;;		None
 18717 ;; Return value:  Size  Location     Type
 18718 ;;                  1  [STACK] void 
 18719 ;; Registers used:
 18720 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 18721 ;; Tracked objects:
 18722 ;;		On entry : 0/0
 18723 ;;		On exit  : 0/0
 18724 ;;		Unchanged: 0/0
 18725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18730 ;;Total ram usage:        0 bytes
 18731 ;; Hardware stack levels used:    1
 18732 ;; Hardware stack levels required when called:    8
 18733 ;; This function calls:
 18734 ;;		_ringBufS_put_dma
 18735 ;; This function is called by:
 18736 ;;		_fputc
 18737 ;; This function uses a reentrant model
 18738 ;;
 18739                           
 18740                           	psect	text70
 18741  019096                     __ptext70:
 18742                           	opt callstack 0
 18743  019096                     _putch:
 18744                           	opt callstack 12
 18745                           
 18746                           ;eadog.c: 168: void putch(char c);eadog.c: 169: {;eadog.c: 170:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 18747                           ;stkvar	_c @ sp[(0)+-1]
 18748                           
 18749                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18750                           ;incstack = 0
 18751  019096  0EFF               	movlw	-1
 18752  019098  50E3               	movf	plusw1,w,c
 18753  01909A  6EE6               	movwf	postinc1,c
 18754  01909C  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
 18755  0190A2  0060  F243  FFE6   	movff	_spi_link+7,postinc1
 18756  0190A8  EC68  F0BC         	call	_ringBufS_put_dma	;wreg free
 18757                           
 18758                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 18759  0190AC  52E5               	movf	postdec1,f,c
 18760  0190AE  0012               	return		;funcret
 18761  0190B0                     __end_of_putch:
 18762                           	opt callstack 0
 18763                           
 18764 ;; *************** function _ringBufS_put_dma *****************
 18765 ;; Defined at:
 18766 ;;		line 67 in file "ringbufs.c"
 18767 ;; Parameters:    Size  Location     Type
 18768 ;;  _this           2  [STACK] PTR struct ringBufS_t
 18769 ;;		 -> ring_buf1(67), 
 18770 ;;  c               1  [STACK] const unsigned char 
 18771 ;; Auto vars:     Size  Location     Type
 18772 ;;		None
 18773 ;; Return value:  Size  Location     Type
 18774 ;;                  1  [STACK] void 
 18775 ;; Registers used:
 18776 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 18777 ;; Tracked objects:
 18778 ;;		On entry : 0/0
 18779 ;;		On exit  : 0/0
 18780 ;;		Unchanged: 0/0
 18781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18786 ;;Total ram usage:        0 bytes
 18787 ;; Hardware stack levels used:    1
 18788 ;; Hardware stack levels required when called:    7
 18789 ;; This function calls:
 18790 ;;		Nothing
 18791 ;; This function is called by:
 18792 ;;		_putch
 18793 ;; This function uses a reentrant model
 18794 ;;
 18795                           
 18796                           	psect	text71
 18797  0178D0                     __ptext71:
 18798                           	opt callstack 0
 18799  0178D0                     _ringBufS_put_dma:
 18800                           	opt callstack 12
 18801                           
 18802                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 18803                           ;stkvar	__this @ sp[(0)+-2]
 18804                           
 18805                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18806                           ;incstack = 0
 18807  0178D0  0EFE               	movlw	-2
 18808  0178D2  006F FF8C  F02F    	movff	plusw1,btemp+10
 18809  0178D8  0EFF               	movlw	-1
 18810  0178DA  006F FF8C  F030    	movff	plusw1,btemp+11
 18811  0178E0  0E42               	movlw	66
 18812  0178E2  242F               	addwf	(btemp+10)^0,w,c
 18813  0178E4  6ED9               	movwf	fsr2l,c
 18814  0178E6  0E00               	movlw	0
 18815  0178E8  2030               	addwfc	(btemp+11)^0,w,c
 18816  0178EA  6EDA               	movwf	fsr2h,c
 18817  0178EC  0E40               	movlw	64
 18818  0178EE  60DF               	cpfslt	indf2,c
 18819  0178F0  D040               	goto	l1580
 18820                           
 18821                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 18822                           ;stkvar	_c @ sp[(0)+-3]
 18823                           ;stkvar	__this @ sp[(0)+-2]
 18824  0178F2  0EFE               	movlw	-2
 18825  0178F4  006F FF8C  F02F    	movff	plusw1,btemp+10
 18826  0178FA  0EFF               	movlw	-1
 18827  0178FC  006F FF8C  F030    	movff	plusw1,btemp+11
 18828  017902  0E40               	movlw	64
 18829  017904  242F               	addwf	(btemp+10)^0,w,c
 18830  017906  6ED9               	movwf	fsr2l,c
 18831  017908  0E00               	movlw	0
 18832  01790A  2030               	addwfc	(btemp+11)^0,w,c
 18833  01790C  6EDA               	movwf	fsr2h,c
 18834  01790E  50DF               	movf	indf2,w,c
 18835  017910  6E30               	movwf	(btemp+11)^0,c
 18836                           
 18837                           ;stkvar	__this @ sp[(0)+-2]
 18838  017912  0EFE               	movlw	-2
 18839  017914  006F FF8C  F02D    	movff	plusw1,btemp+8
 18840  01791A  0EFF               	movlw	-1
 18841  01791C  006F FF8C  F02E    	movff	plusw1,btemp+9
 18842  017922  5030               	movf	(btemp+11)^0,w,c
 18843  017924  242D               	addwf	(btemp+8)^0,w,c
 18844  017926  6ED9               	movwf	fsr2l,c
 18845  017928  0E00               	movlw	0
 18846  01792A  202E               	addwfc	(btemp+9)^0,w,c
 18847  01792C  6EDA               	movwf	fsr2h,c
 18848  01792E  0EFD               	movlw	-3
 18849  017930  006F FF8F FFDF     	movff	plusw1,indf2
 18850                           
 18851                           ;ringbufs.c: 71:   ++_this->head;
 18852                           ;stkvar	__this @ sp[(0)+-2]
 18853  017936  0EFE               	movlw	-2
 18854  017938  006F FF8C  F02F    	movff	plusw1,btemp+10
 18855  01793E  0EFF               	movlw	-1
 18856  017940  006F FF8C  F030    	movff	plusw1,btemp+11
 18857  017946  0E40               	movlw	64
 18858  017948  242F               	addwf	(btemp+10)^0,w,c
 18859  01794A  6ED9               	movwf	fsr2l,c
 18860  01794C  0E00               	movlw	0
 18861  01794E  2030               	addwfc	(btemp+11)^0,w,c
 18862  017950  6EDA               	movwf	fsr2h,c
 18863  017952  2ADF               	incf	indf2,f,c
 18864                           
 18865                           ;ringbufs.c: 72:   ++_this->count;
 18866                           ;stkvar	__this @ sp[(0)+-2]
 18867  017954  0EFE               	movlw	-2
 18868  017956  006F FF8C  F02F    	movff	plusw1,btemp+10
 18869  01795C  0EFF               	movlw	-1
 18870  01795E  006F FF8C  F030    	movff	plusw1,btemp+11
 18871  017964  0E42               	movlw	66
 18872  017966  242F               	addwf	(btemp+10)^0,w,c
 18873  017968  6ED9               	movwf	fsr2l,c
 18874  01796A  0E00               	movlw	0
 18875  01796C  2030               	addwfc	(btemp+11)^0,w,c
 18876  01796E  6EDA               	movwf	fsr2h,c
 18877  017970  2ADF               	incf	indf2,f,c
 18878  017972                     l1580:
 18879                           
 18880                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 18881  017972  52E5               	movf	postdec1,f,c
 18882  017974  52E5               	movf	postdec1,f,c
 18883  017976  52E5               	movf	postdec1,f,c
 18884  017978  0012               	return		;funcret
 18885  01797A                     __end_of_ringBufS_put_dma:
 18886                           	opt callstack 0
 18887                           
 18888 ;; *************** function _atoi *****************
 18889 ;; Defined at:
 18890 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 18891 ;; Parameters:    Size  Location     Type
 18892 ;;  s               2  [STACK] PTR const unsigned char 
 18893 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
 18894 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
 18895 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
 18896 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
 18897 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(17), 
 18898 ;;		 -> STR_22(16), STR_21(16), STR_20(19), STR_19(19), 
 18899 ;;		 -> STR_18(19), STR_17(19), STR_16(19), STR_15(19), 
 18900 ;;		 -> STR_14(19), STR_13(19), STR_12(19), STR_11(17), 
 18901 ;;		 -> STR_10(16), STR_9(16), STR_8(17), STR_6(15), 
 18902 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 18903 ;; Auto vars:     Size  Location     Type
 18904 ;;  n               2  [STACK] int 
 18905 ;;  neg             2  [STACK] int 
 18906 ;; Return value:  Size  Location     Type
 18907 ;;                  2  [STACK] int 
 18908 ;; Registers used:
 18909 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 18910 ;; Tracked objects:
 18911 ;;		On entry : 0/0
 18912 ;;		On exit  : 0/0
 18913 ;;		Unchanged: 0/0
 18914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18919 ;;Total ram usage:        0 bytes
 18920 ;; Hardware stack levels used:    1
 18921 ;; Hardware stack levels required when called:    8
 18922 ;; This function calls:
 18923 ;;		_isdigit
 18924 ;;		_isspace
 18925 ;; This function is called by:
 18926 ;;		_vfpfcnvrt
 18927 ;; This function uses a reentrant model
 18928 ;;
 18929                           
 18930                           	psect	text72
 18931  0156C6                     __ptext72:
 18932                           	opt callstack 0
 18933  0156C6                     _atoi:
 18934                           	opt callstack 0
 18935                           
 18936                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18937  0156C6  0E09               	movlw	9
 18938  0156C8  26E1               	addwf	fsr1l,f,c
 18939  0156CA  0E00               	movlw	0
 18940  0156CC  22E2               	addwfc	fsr1h,f,c
 18941                           
 18942                           ;stkvar	_n @ sp[(-9)+5]
 18943                           
 18944                           ;incstack = 0
 18945  0156CE  0EFC               	movlw	-4
 18946  0156D0  6AE3               	clrf	plusw1,c
 18947  0156D2  0EFD               	movlw	-3
 18948  0156D4  6AE3               	clrf	plusw1,c
 18949                           
 18950                           ;stkvar	_neg @ sp[(-9)+7]
 18951  0156D6  0EFE               	movlw	-2
 18952  0156D8  6AE3               	clrf	plusw1,c
 18953  0156DA  0EFF               	movlw	-1
 18954  0156DC  6AE3               	clrf	plusw1,c
 18955  0156DE  D011               	goto	l7664
 18956  0156E0                     l7662:
 18957                           
 18958                           ;stkvar	_s @ sp[(-9)+-2]
 18959  0156E0  0EF5               	movlw	-11
 18960  0156E2  50E3               	movf	plusw1,w,c
 18961  0156E4  0F01               	addlw	1
 18962  0156E6  6E25               	movwf	btemp^0,c
 18963  0156E8  0EF5               	movlw	-11
 18964  0156EA  0060  F097  FFE3   	movff	btemp,plusw1
 18965  0156F0  6A25               	clrf	btemp^0,c
 18966  0156F2  0EF6               	movlw	-10
 18967  0156F4  50E3               	movf	plusw1,w,c
 18968  0156F6  2025               	addwfc	btemp^0,w,c
 18969  0156F8  6E25               	movwf	btemp^0,c
 18970  0156FA  0EF6               	movlw	-10
 18971  0156FC  0060  F097  FFE3   	movff	btemp,plusw1
 18972  015702                     l7664:
 18973                           
 18974                           ;stkvar	_atoi$5507 @ sp[(-9)+4]
 18975  015702  0EFB               	movlw	-5
 18976  015704  6AE3               	clrf	plusw1,c
 18977  015706  2AE3               	incf	plusw1,f,c
 18978                           
 18979                           ;stkvar	_s @ sp[(-9)+-2]
 18980  015708  50E1               	movf	fsr1l,w,c
 18981  01570A  0FF5               	addlw	-11
 18982  01570C  6ED9               	movwf	fsr2l,c
 18983  01570E  50E2               	movf	fsr1h,w,c
 18984  015710  6EDA               	movwf	fsr2h,c
 18985  015712  0EFF               	movlw	255
 18986  015714  22DA               	addwfc	fsr2h,f,c
 18987  015716  006F FF7B FFF6     	movff	postinc2,tblptrl
 18988  01571C  006F FF77 FFF7     	movff	postdec2,tblptrh
 18989  015722                     	if	0	;tblptru may be non-zero
 18990  015722                     	endif
 18991  015722                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18992  015722  0E00               	movlw	low (__mediumconst shr (0+16))
 18993  015724  6EF8               	movwf	tblptru,c
 18994  015726                     	endif
 18995  015726  0008               	tblrd		*
 18996  015728  50F5               	movf	tablat,w,c
 18997  01572A  0A20               	xorlw	32
 18998  01572C  B4D8               	btfsc	status,2,c
 18999  01572E  D023               	goto	l7672
 19000  015730  0EF7               	movlw	247
 19001  015732  6E2F               	movwf	(btemp+10)^0,c
 19002  015734  0EFF               	movlw	255
 19003  015736  6E30               	movwf	(btemp+11)^0,c
 19004                           
 19005                           ;stkvar	_s @ sp[(-9)+-2]
 19006  015738  50E1               	movf	fsr1l,w,c
 19007  01573A  0FF5               	addlw	-11
 19008  01573C  6ED9               	movwf	fsr2l,c
 19009  01573E  50E2               	movf	fsr1h,w,c
 19010  015740  6EDA               	movwf	fsr2h,c
 19011  015742  0EFF               	movlw	255
 19012  015744  22DA               	addwfc	fsr2h,f,c
 19013  015746  006F FF7B FFF6     	movff	postinc2,tblptrl
 19014  01574C  006F FF77 FFF7     	movff	postdec2,tblptrh
 19015  015752                     	if	0	;tblptru may be non-zero
 19016  015752                     	endif
 19017  015752                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19018  015752  0E00               	movlw	low (__mediumconst shr (0+16))
 19019  015754  6EF8               	movwf	tblptru,c
 19020  015756                     	endif
 19021  015756  0008               	tblrd		*
 19022  015758  50F5               	movf	tablat,w,c
 19023  01575A  6E2D               	movwf	(btemp+8)^0,c
 19024  01575C  6A2E               	clrf	(btemp+9)^0,c
 19025  01575E  502F               	movf	(btemp+10)^0,w,c
 19026  015760  262D               	addwf	(btemp+8)^0,f,c
 19027  015762  5030               	movf	(btemp+11)^0,w,c
 19028  015764  222E               	addwfc	(btemp+9)^0,f,c
 19029  015766  502E               	movf	(btemp+9)^0,w,c
 19030  015768  E104               	bnz	u6850
 19031  01576A  0E05               	movlw	5
 19032  01576C  5C2D               	subwf	(btemp+8)^0,w,c
 19033  01576E  A0D8               	btfss	status,0,c
 19034  015770  D002               	goto	l7672
 19035  015772                     u6850:
 19036                           
 19037                           ;stkvar	_atoi$5507 @ sp[(-9)+4]
 19038  015772  0EFB               	movlw	-5
 19039  015774  6AE3               	clrf	plusw1,c
 19040  015776                     l7672:
 19041                           
 19042                           ;stkvar	_atoi$5507 @ sp[(-9)+4]
 19043  015776  0EFB               	movlw	-5
 19044  015778  50E3               	movf	plusw1,w,c
 19045  01577A  6E2F               	movwf	(btemp+10)^0,c
 19046  01577C  6A30               	clrf	(btemp+11)^0,c
 19047                           
 19048                           ;stkvar	_atoi$5506 @ sp[(-9)+2]
 19049  01577E  0EF9               	movlw	-7
 19050  015780  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 19051  015786  0EFA               	movlw	-6
 19052  015788  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 19053                           
 19054                           ;stkvar	_atoi$5506 @ sp[(-9)+2]
 19055  01578E  0EF9               	movlw	-7
 19056  015790  006F FF8C  F025    	movff	plusw1,btemp
 19057  015796  0EFA               	movlw	-6
 19058  015798  50E3               	movf	plusw1,w,c
 19059  01579A  1025               	iorwf	btemp^0,w,c
 19060  01579C  B4D8               	btfsc	status,2,c
 19061  01579E  D01F               	goto	l7682
 19062  0157A0  D79F               	goto	l7662
 19063  0157A2                     l7678:
 19064  0157A2  0E01               	movlw	1
 19065  0157A4  6E2F               	movwf	(btemp+10)^0,c
 19066  0157A6  0E00               	movlw	0
 19067  0157A8  6E30               	movwf	(btemp+11)^0,c
 19068                           
 19069                           ;stkvar	_neg @ sp[(-9)+7]
 19070  0157AA  0EFE               	movlw	-2
 19071  0157AC  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 19072  0157B2  0EFF               	movlw	-1
 19073  0157B4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 19074  0157BA                     l7680:
 19075                           
 19076                           ;stkvar	_s @ sp[(-9)+-2]
 19077  0157BA  0EF5               	movlw	-11
 19078  0157BC  50E3               	movf	plusw1,w,c
 19079  0157BE  0F01               	addlw	1
 19080  0157C0  6E25               	movwf	btemp^0,c
 19081  0157C2  0EF5               	movlw	-11
 19082  0157C4  0060  F097  FFE3   	movff	btemp,plusw1
 19083  0157CA  6A25               	clrf	btemp^0,c
 19084  0157CC  0EF6               	movlw	-10
 19085  0157CE  50E3               	movf	plusw1,w,c
 19086  0157D0  2025               	addwfc	btemp^0,w,c
 19087  0157D2  6E25               	movwf	btemp^0,c
 19088  0157D4  0EF6               	movlw	-10
 19089  0157D6  0060  F097  FFE3   	movff	btemp,plusw1
 19090  0157DC  D053               	goto	l7688
 19091  0157DE                     l7682:
 19092                           
 19093                           ;stkvar	_s @ sp[(-9)+-2]
 19094  0157DE  50E1               	movf	fsr1l,w,c
 19095  0157E0  0FF5               	addlw	-11
 19096  0157E2  6ED9               	movwf	fsr2l,c
 19097  0157E4  50E2               	movf	fsr1h,w,c
 19098  0157E6  6EDA               	movwf	fsr2h,c
 19099  0157E8  0EFF               	movlw	255
 19100  0157EA  22DA               	addwfc	fsr2h,f,c
 19101  0157EC  006F FF7B FFF6     	movff	postinc2,tblptrl
 19102  0157F2  006F FF77 FFF7     	movff	postdec2,tblptrh
 19103  0157F8                     	if	0	;tblptru may be non-zero
 19104  0157F8                     	endif
 19105  0157F8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19106  0157F8  0E00               	movlw	low (__mediumconst shr (0+16))
 19107  0157FA  6EF8               	movwf	tblptru,c
 19108  0157FC                     	endif
 19109  0157FC  0008               	tblrd		*
 19110  0157FE  50F5               	movf	tablat,w,c
 19111  015800  6E2F               	movwf	(btemp+10)^0,c
 19112  015802  6A30               	clrf	(btemp+11)^0,c
 19113                           
 19114                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19115                           ; Switch size 1, requested type "simple"
 19116                           ; Number of cases is 1, Range of values is 0 to 0
 19117                           ; switch strategies available:
 19118                           ; Name         Instructions Cycles
 19119                           ; simple_byte            4     3 (average)
 19120                           ;	Chosen strategy is simple_byte
 19121  015804  5030               	movf	(btemp+11)^0,w,c
 19122  015806  0A00               	xorlw	0	; case 0
 19123  015808  A4D8               	btfss	status,2,c
 19124  01580A  D03C               	goto	l7688
 19125                           
 19126                           ; Switch size 1, requested type "simple"
 19127                           ; Number of cases is 2, Range of values is 43 to 45
 19128                           ; switch strategies available:
 19129                           ; Name         Instructions Cycles
 19130                           ; simple_byte            7     4 (average)
 19131                           ;	Chosen strategy is simple_byte
 19132  01580C  502F               	movf	(btemp+10)^0,w,c
 19133  01580E  0A2B               	xorlw	43	; case 43
 19134  015810  B4D8               	btfsc	status,2,c
 19135  015812  D7D3               	goto	l7680
 19136  015814  0A06               	xorlw	6	; case 45
 19137  015816  B4D8               	btfsc	status,2,c
 19138  015818  D7C4               	goto	l7678
 19139  01581A  D034               	goto	l7688
 19140  01581C                     l7684:
 19141                           
 19142                           ;stkvar	_n @ sp[(-9)+5]
 19143  01581C  0EFC               	movlw	-4
 19144  01581E  006F FF8C  F02F    	movff	plusw1,btemp+10
 19145  015824  0EFD               	movlw	-3
 19146  015826  006F FF8C  F030    	movff	plusw1,btemp+11
 19147  01582C  0E0A               	movlw	10
 19148  01582E  022F               	mulwf	(btemp+10)^0,c
 19149  015830  006F FFCC  F02D    	movff	prodl,btemp+8
 19150  015836  006F FFD0  F02E    	movff	prodh,btemp+9
 19151  01583C  0230               	mulwf	(btemp+11)^0,c
 19152  01583E  50F3               	movf	prodl,w,c
 19153  015840  262E               	addwf	(btemp+9)^0,f,c
 19154                           
 19155                           ;stkvar	_s @ sp[(-9)+-2]
 19156  015842  50E1               	movf	fsr1l,w,c
 19157  015844  0FF5               	addlw	-11
 19158  015846  6ED9               	movwf	fsr2l,c
 19159  015848  50E2               	movf	fsr1h,w,c
 19160  01584A  6EDA               	movwf	fsr2h,c
 19161  01584C  0EFF               	movlw	255
 19162  01584E  22DA               	addwfc	fsr2h,f,c
 19163  015850  006F FF7B FFF6     	movff	postinc2,tblptrl
 19164  015856  006F FF77 FFF7     	movff	postdec2,tblptrh
 19165  01585C                     	if	0	;tblptru may be non-zero
 19166  01585C                     	endif
 19167  01585C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19168  01585C  0E00               	movlw	low (__mediumconst shr (0+16))
 19169  01585E  6EF8               	movwf	tblptru,c
 19170  015860                     	endif
 19171  015860  0008               	tblrd		*
 19172  015862  50F5               	movf	tablat,w,c
 19173  015864  5E2D               	subwf	(btemp+8)^0,f,c
 19174  015866  0E00               	movlw	0
 19175  015868  5A2E               	subwfb	(btemp+9)^0,f,c
 19176  01586A  0E30               	movlw	48
 19177  01586C  262D               	addwf	(btemp+8)^0,f,c
 19178  01586E  0E00               	movlw	0
 19179  015870  222E               	addwfc	(btemp+9)^0,f,c
 19180                           
 19181                           ;stkvar	_n @ sp[(-9)+5]
 19182  015872  0EFC               	movlw	-4
 19183  015874  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 19184  01587A  0EFD               	movlw	-3
 19185  01587C  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 19186  015882  D79B               	goto	l7680
 19187  015884                     l7688:
 19188  015884  0ED0               	movlw	208
 19189  015886  6E2F               	movwf	(btemp+10)^0,c
 19190  015888  0EFF               	movlw	255
 19191  01588A  6E30               	movwf	(btemp+11)^0,c
 19192                           
 19193                           ;stkvar	_s @ sp[(-9)+-2]
 19194  01588C  50E1               	movf	fsr1l,w,c
 19195  01588E  0FF5               	addlw	-11
 19196  015890  6ED9               	movwf	fsr2l,c
 19197  015892  50E2               	movf	fsr1h,w,c
 19198  015894  6EDA               	movwf	fsr2h,c
 19199  015896  0EFF               	movlw	255
 19200  015898  22DA               	addwfc	fsr2h,f,c
 19201  01589A  006F FF7B FFF6     	movff	postinc2,tblptrl
 19202  0158A0  006F FF77 FFF7     	movff	postdec2,tblptrh
 19203  0158A6                     	if	0	;tblptru may be non-zero
 19204  0158A6                     	endif
 19205  0158A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19206  0158A6  0E00               	movlw	low (__mediumconst shr (0+16))
 19207  0158A8  6EF8               	movwf	tblptru,c
 19208  0158AA                     	endif
 19209  0158AA  0008               	tblrd		*
 19210  0158AC  50F5               	movf	tablat,w,c
 19211  0158AE  6E2D               	movwf	(btemp+8)^0,c
 19212  0158B0  6A2E               	clrf	(btemp+9)^0,c
 19213  0158B2  502F               	movf	(btemp+10)^0,w,c
 19214  0158B4  262D               	addwf	(btemp+8)^0,f,c
 19215  0158B6  5030               	movf	(btemp+11)^0,w,c
 19216  0158B8  222E               	addwfc	(btemp+9)^0,f,c
 19217  0158BA  502E               	movf	(btemp+9)^0,w,c
 19218  0158BC  E106               	bnz	u6870
 19219  0158BE  0E0A               	movlw	10
 19220  0158C0  5C2D               	subwf	(btemp+8)^0,w,c
 19221  0158C2  B0D8               	btfsc	status,0,c
 19222  0158C4  D002               	goto	u6870
 19223  0158C6  0E01               	movlw	1
 19224  0158C8  D001               	goto	u6880
 19225  0158CA                     u6870:
 19226  0158CA  0E00               	movlw	0
 19227  0158CC                     u6880:
 19228  0158CC  6E2F               	movwf	(btemp+10)^0,c
 19229  0158CE  6A30               	clrf	(btemp+11)^0,c
 19230                           
 19231                           ;stkvar	_atoi$5508 @ sp[(-9)+0]
 19232  0158D0  0EF7               	movlw	-9
 19233  0158D2  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 19234  0158D8  0EF8               	movlw	-8
 19235  0158DA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 19236                           
 19237                           ;stkvar	_atoi$5508 @ sp[(-9)+0]
 19238  0158E0  0EF7               	movlw	-9
 19239  0158E2  006F FF8C  F025    	movff	plusw1,btemp
 19240  0158E8  0EF8               	movlw	-8
 19241  0158EA  50E3               	movf	plusw1,w,c
 19242  0158EC  1025               	iorwf	btemp^0,w,c
 19243  0158EE  A4D8               	btfss	status,2,c
 19244  0158F0  D795               	goto	l7684
 19245                           
 19246                           ;stkvar	_neg @ sp[(-9)+7]
 19247  0158F2  0EFE               	movlw	-2
 19248  0158F4  006F FF8C  F025    	movff	plusw1,btemp
 19249  0158FA  0EFF               	movlw	-1
 19250  0158FC  50E3               	movf	plusw1,w,c
 19251  0158FE  1025               	iorwf	btemp^0,w,c
 19252  015900  A4D8               	btfss	status,2,c
 19253  015902  D00E               	goto	l7698
 19254                           
 19255                           ;stkvar	_n @ sp[(-9)+5]
 19256  015904  0EFC               	movlw	-4
 19257  015906  006F FF8C  F025    	movff	plusw1,btemp
 19258  01590C  1E25               	comf	btemp^0,f,c
 19259  01590E  0EFD               	movlw	-3
 19260  015910  006F FF8C  F026    	movff	plusw1,btemp+1
 19261  015916  1E26               	comf	(btemp+1)^0,f,c
 19262  015918  2A25               	incf	btemp^0,f,c
 19263  01591A  B4D8               	btfsc	status,2,c
 19264  01591C  2A26               	incf	(btemp+1)^0,f,c
 19265  01591E  D008               	goto	l2933
 19266  015920                     l7698:
 19267                           
 19268                           ;stkvar	_n @ sp[(-9)+5]
 19269  015920  0EFC               	movlw	-4
 19270  015922  006F FF8C  F025    	movff	plusw1,btemp
 19271  015928  0EFD               	movlw	-3
 19272  01592A  006F FF8C  F026    	movff	plusw1,btemp+1
 19273  015930                     l2933:
 19274                           
 19275                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 19276  015930  0EF5               	movlw	245
 19277  015932  26E1               	addwf	fsr1l,f,c
 19278  015934  0EFF               	movlw	255
 19279  015936  22E2               	addwfc	fsr1h,f,c
 19280  015938  0012               	return		;funcret
 19281  01593A                     __end_of_atoi:
 19282                           	opt callstack 0
 19283                           
 19284 ;; *************** function _isspace *****************
 19285 ;; Defined at:
 19286 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 19287 ;; Parameters:    Size  Location     Type
 19288 ;;  c               2  [STACK] int 
 19289 ;; Auto vars:     Size  Location     Type
 19290 ;;		None
 19291 ;; Return value:  Size  Location     Type
 19292 ;;                  2  [STACK] int 
 19293 ;; Registers used:
 19294 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 19295 ;; Tracked objects:
 19296 ;;		On entry : 0/0
 19297 ;;		On exit  : 0/0
 19298 ;;		Unchanged: 0/0
 19299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19304 ;;Total ram usage:        0 bytes
 19305 ;; Hardware stack levels used:    1
 19306 ;; Hardware stack levels required when called:    7
 19307 ;; This function calls:
 19308 ;;		Nothing
 19309 ;; This function is called by:
 19310 ;;		_atoi
 19311 ;; This function uses a reentrant model
 19312 ;;
 19313                           
 19314                           	psect	text73
 19315  018498                     __ptext73:
 19316                           	opt callstack 0
 19317  018498                     _isspace:
 19318                           	opt callstack 0
 19319                           
 19320                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19321  018498  52E6               	movf	postinc1,f,c
 19322                           
 19323                           ;stkvar	_isspace$5546 @ sp[(-1)+0]
 19324                           
 19325                           ;incstack = 0
 19326  01849A  0EFF               	movlw	-1
 19327  01849C  6AE3               	clrf	plusw1,c
 19328  01849E  2AE3               	incf	plusw1,f,c
 19329                           
 19330                           ;stkvar	_c @ sp[(-1)+-2]
 19331  0184A0  0EFD               	movlw	-3
 19332  0184A2  006F FF8C  F025    	movff	plusw1,btemp
 19333  0184A8  0E20               	movlw	32
 19334  0184AA  1825               	xorwf	btemp^0,w,c
 19335  0184AC  E104               	bnz	u5840
 19336  0184AE  0EFE               	movlw	-2
 19337  0184B0  50E3               	movf	plusw1,w,c
 19338  0184B2  B4D8               	btfsc	status,2,c
 19339  0184B4  D012               	goto	l7148
 19340  0184B6                     u5840:
 19341                           
 19342                           ;stkvar	_c @ sp[(-1)+-2]
 19343  0184B6  0EFD               	movlw	-3
 19344  0184B8  50E3               	movf	plusw1,w,c
 19345  0184BA  0FF7               	addlw	247
 19346  0184BC  6E2F               	movwf	(btemp+10)^0,c
 19347  0184BE  0EFE               	movlw	-2
 19348  0184C0  006F FF8C  F030    	movff	plusw1,btemp+11
 19349  0184C6  0EFF               	movlw	255
 19350  0184C8  2230               	addwfc	(btemp+11)^0,f,c
 19351  0184CA  5030               	movf	(btemp+11)^0,w,c
 19352  0184CC  E104               	bnz	u5850
 19353  0184CE  0E05               	movlw	5
 19354  0184D0  5C2F               	subwf	(btemp+10)^0,w,c
 19355  0184D2  A0D8               	btfss	status,0,c
 19356  0184D4  D002               	goto	l7148
 19357  0184D6                     u5850:
 19358                           
 19359                           ;stkvar	_isspace$5546 @ sp[(-1)+0]
 19360  0184D6  0EFF               	movlw	-1
 19361  0184D8  6AE3               	clrf	plusw1,c
 19362  0184DA                     l7148:
 19363                           
 19364                           ;stkvar	_isspace$5546 @ sp[(-1)+0]
 19365  0184DA  0EFF               	movlw	-1
 19366  0184DC  50E3               	movf	plusw1,w,c
 19367  0184DE  6E25               	movwf	btemp^0,c
 19368  0184E0  6A26               	clrf	(btemp+1)^0,c
 19369                           
 19370                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19371  0184E2  52E5               	movf	postdec1,f,c
 19372  0184E4  52E5               	movf	postdec1,f,c
 19373  0184E6  52E5               	movf	postdec1,f,c
 19374  0184E8  0012               	return		;funcret
 19375  0184EA                     __end_of_isspace:
 19376                           	opt callstack 0
 19377                           
 19378 ;; *************** function _isdigit *****************
 19379 ;; Defined at:
 19380 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 19381 ;; Parameters:    Size  Location     Type
 19382 ;;  c               2  [STACK] int 
 19383 ;; Auto vars:     Size  Location     Type
 19384 ;;		None
 19385 ;; Return value:  Size  Location     Type
 19386 ;;                  2  [STACK] int 
 19387 ;; Registers used:
 19388 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 19389 ;; Tracked objects:
 19390 ;;		On entry : 0/0
 19391 ;;		On exit  : 0/0
 19392 ;;		Unchanged: 0/0
 19393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19398 ;;Total ram usage:        0 bytes
 19399 ;; Hardware stack levels used:    1
 19400 ;; Hardware stack levels required when called:    7
 19401 ;; This function calls:
 19402 ;;		Nothing
 19403 ;; This function is called by:
 19404 ;;		_vfpfcnvrt
 19405 ;;		_atoi
 19406 ;; This function uses a reentrant model
 19407 ;;
 19408                           
 19409                           	psect	text74
 19410  018A7C                     __ptext74:
 19411                           	opt callstack 0
 19412  018A7C                     _isdigit:
 19413                           	opt callstack 17
 19414                           
 19415                           ;stkvar	_c @ sp[(0)+-2]
 19416                           
 19417                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19418                           ;incstack = 0
 19419  018A7C  0EFE               	movlw	-2
 19420  018A7E  50E3               	movf	plusw1,w,c
 19421  018A80  0FD0               	addlw	208
 19422  018A82  6E2F               	movwf	(btemp+10)^0,c
 19423  018A84  0EFF               	movlw	-1
 19424  018A86  006F FF8C  F030    	movff	plusw1,btemp+11
 19425  018A8C  0EFF               	movlw	255
 19426  018A8E  2230               	addwfc	(btemp+11)^0,f,c
 19427  018A90  5030               	movf	(btemp+11)^0,w,c
 19428  018A92  E106               	bnz	u5040
 19429  018A94  0E0A               	movlw	10
 19430  018A96  5C2F               	subwf	(btemp+10)^0,w,c
 19431  018A98  B0D8               	btfsc	status,0,c
 19432  018A9A  D002               	goto	u5040
 19433  018A9C  0E01               	movlw	1
 19434  018A9E  D001               	goto	u5050
 19435  018AA0                     u5040:
 19436  018AA0  0E00               	movlw	0
 19437  018AA2                     u5050:
 19438  018AA2  6E25               	movwf	btemp^0,c
 19439  018AA4  6A26               	clrf	(btemp+1)^0,c
 19440                           
 19441                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19442  018AA6  52E5               	movf	postdec1,f,c
 19443  018AA8  52E5               	movf	postdec1,f,c
 19444  018AAA  0012               	return		;funcret
 19445  018AAC                     __end_of_isdigit:
 19446                           	opt callstack 0
 19447                           
 19448 ;; *************** function _set_vterm *****************
 19449 ;; Defined at:
 19450 ;;		line 107 in file "mconfig.c"
 19451 ;; Parameters:    Size  Location     Type
 19452 ;;  vterm           1  [STACK] const unsigned char 
 19453 ;; Auto vars:     Size  Location     Type
 19454 ;;		None
 19455 ;; Return value:  Size  Location     Type
 19456 ;;                  1  [STACK] unsigned char 
 19457 ;; Registers used:
 19458 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 19459 ;; Tracked objects:
 19460 ;;		On entry : 0/1
 19461 ;;		On exit  : 0/0
 19462 ;;		Unchanged: 0/0
 19463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19468 ;;Total ram usage:        0 bytes
 19469 ;; Hardware stack levels used:    1
 19470 ;; Hardware stack levels required when called:    7
 19471 ;; This function calls:
 19472 ;;		Nothing
 19473 ;; This function is called by:
 19474 ;;		_main
 19475 ;;		_check_help
 19476 ;; This function uses a reentrant model
 19477 ;;
 19478                           
 19479                           	psect	text75
 19480  019002                     __ptext75:
 19481                           	opt callstack 0
 19482  019002                     _set_vterm:
 19483                           	opt callstack 23
 19484                           
 19485                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 19486                           ;stkvar	_vterm @ sp[(0)+-1]
 19487                           
 19488                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19489                           ;incstack = 0
 19490  019002  0EFF               	movlw	-1
 19491  019004  006F FF8C  F030    	movff	plusw1,btemp+11
 19492  01900A  0E03               	movlw	3
 19493  01900C  1630               	andwf	(btemp+11)^0,f,c
 19494  01900E  EE22  F01F         	lfsr	2,_D+288
 19495  019012  50DF               	movf	223,w,c
 19496  019014  1830               	xorwf	(btemp+11)^0,w,c
 19497  019016  0BFE               	andlw	-2
 19498  019018  1830               	xorwf	(btemp+11)^0,w,c
 19499  01901A  6EDF               	movwf	223,c
 19500                           
 19501                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 19502  01901C  52E5               	movf	postdec1,f,c
 19503  01901E  0012               	return		;funcret
 19504  019020                     __end_of_set_vterm:
 19505                           	opt callstack 0
 19506                           
 19507 ;; *************** function _set_temp_display_help *****************
 19508 ;; Defined at:
 19509 ;;		line 211 in file "mconfig.c"
 19510 ;; Parameters:    Size  Location     Type
 19511 ;;  new_response    1  [STACK] const enum E16518
 19512 ;; Auto vars:     Size  Location     Type
 19513 ;;		None
 19514 ;; Return value:  Size  Location     Type
 19515 ;;                  1  [STACK] enum E16518
 19516 ;; Registers used:
 19517 ;;		wreg, fsr1l, fsr1h
 19518 ;; Tracked objects:
 19519 ;;		On entry : 0/2
 19520 ;;		On exit  : 3F/2
 19521 ;;		Unchanged: 0/0
 19522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19527 ;;Total ram usage:        0 bytes
 19528 ;; Hardware stack levels used:    1
 19529 ;; Hardware stack levels required when called:    7
 19530 ;; This function calls:
 19531 ;;		Nothing
 19532 ;; This function is called by:
 19533 ;;		_check_help
 19534 ;; This function uses a reentrant model
 19535 ;;
 19536                           
 19537                           	psect	text76
 19538  019174                     __ptext76:
 19539                           	opt callstack 0
 19540  019174                     _set_temp_display_help:
 19541                           	opt callstack 22
 19542                           
 19543                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 19544                           
 19545                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19546                           ;incstack = 0
 19547  019174  0102               	movlb	2	; () banked
 19548  019176  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 19549                           
 19550                           ; BSR set to: 2
 19551                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 19552                           ;stkvar	_new_response_info @ sp[(0)+-1]
 19553  019178  0EFF               	movlw	-1
 19554  01917A  006F FF8C  F2A4    	movff	plusw1,_V+164	;volatile
 19555                           
 19556                           ; BSR set to: 2
 19557                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 19558  019180  52E5               	movf	postdec1,f,c
 19559  019182  0012               	return		;funcret
 19560  019184                     __end_of_set_temp_display_help:
 19561                           	opt callstack 0
 19562                           
 19563 ;; *************** function _set_display_info *****************
 19564 ;; Defined at:
 19565 ;;		line 200 in file "mconfig.c"
 19566 ;; Parameters:    Size  Location     Type
 19567 ;;  new_response    1  [STACK] const enum E16518
 19568 ;; Auto vars:     Size  Location     Type
 19569 ;;		None
 19570 ;; Return value:  Size  Location     Type
 19571 ;;                  1  [STACK] enum E17003
 19572 ;; Registers used:
 19573 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 19574 ;; Tracked objects:
 19575 ;;		On entry : 0/1
 19576 ;;		On exit  : 0/0
 19577 ;;		Unchanged: 0/0
 19578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19583 ;;Total ram usage:        0 bytes
 19584 ;; Hardware stack levels used:    1
 19585 ;; Hardware stack levels required when called:    8
 19586 ;; This function calls:
 19587 ;;		_TimerDone
 19588 ;; This function is called by:
 19589 ;;		_main
 19590 ;;		_check_help
 19591 ;; This function uses a reentrant model
 19592 ;;
 19593                           
 19594                           	psect	text77
 19595  019020                     __ptext77:
 19596                           	opt callstack 0
 19597  019020                     _set_display_info:
 19598                           	opt callstack 22
 19599                           
 19600                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 19601                           
 19602                           ; BSR set to: 2
 19603                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19604                           ;incstack = 0
 19605  019020  0E07               	movlw	7
 19606  019022  6EE6               	movwf	postinc1,c
 19607  019024  EC15  F0C6         	call	_TimerDone	;wreg free
 19608  019028  5025               	movf	btemp^0,w,c
 19609  01902A  B4D8               	btfsc	status,2,c
 19610  01902C  D006               	goto	l1717
 19611                           
 19612                           ;mconfig.c: 205:   old_info = V.response.info;
 19613  01902E  0102               	movlb	2	; () banked
 19614  019030  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 19615                           
 19616                           ; BSR set to: 2
 19617                           ;mconfig.c: 206:   V.response.info = new_response_info;
 19618                           ;stkvar	_new_response_info @ sp[(0)+-1]
 19619  019032  0EFF               	movlw	-1
 19620  019034  006F FF8C  F2A3    	movff	plusw1,_V+163	;volatile
 19621  01903A                     l1717:
 19622                           
 19623                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 19624  01903A  52E5               	movf	postdec1,f,c
 19625  01903C  0012               	return		;funcret
 19626  01903E                     __end_of_set_display_info:
 19627                           	opt callstack 0
 19628                           
 19629 ;; *************** function _mode_lamp_dim *****************
 19630 ;; Defined at:
 19631 ;;		line 13 in file "mconfig.c"
 19632 ;; Parameters:    Size  Location     Type
 19633 ;;  level           2  [STACK] const unsigned short 
 19634 ;; Auto vars:     Size  Location     Type
 19635 ;;		None
 19636 ;; Return value:  Size  Location     Type
 19637 ;;                  1  [STACK] void 
 19638 ;; Registers used:
 19639 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 19640 ;; Tracked objects:
 19641 ;;		On entry : 0/2
 19642 ;;		On exit  : 0/0
 19643 ;;		Unchanged: 0/0
 19644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19649 ;;Total ram usage:        0 bytes
 19650 ;; Hardware stack levels used:    1
 19651 ;; Hardware stack levels required when called:    8
 19652 ;; This function calls:
 19653 ;;		_PWM8_LoadDutyValue
 19654 ;; This function is called by:
 19655 ;;		_main
 19656 ;;		_check_help
 19657 ;; This function uses a reentrant model
 19658 ;;
 19659                           
 19660                           	psect	text78
 19661  0190CA                     __ptext78:
 19662                           	opt callstack 0
 19663  0190CA                     _mode_lamp_dim:
 19664                           	opt callstack 22
 19665                           
 19666                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 19667                           ;stkvar	_level @ sp[(0)+-2]
 19668                           
 19669                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19670                           ;incstack = 0
 19671  0190CA  0EFE               	movlw	-2
 19672  0190CC  006F FF8F FFE6     	movff	plusw1,postinc1
 19673  0190D2  006F FF8F FFE6     	movff	plusw1,postinc1
 19674  0190D8  EC93  F0C3         	call	_PWM8_LoadDutyValue	;wreg free
 19675                           
 19676                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 19677  0190DC  52E5               	movf	postdec1,f,c
 19678  0190DE  52E5               	movf	postdec1,f,c
 19679  0190E0  0012               	return		;funcret
 19680  0190E2                     __end_of_mode_lamp_dim:
 19681                           	opt callstack 0
 19682                           
 19683 ;; *************** function _mode_lamp_bright *****************
 19684 ;; Defined at:
 19685 ;;		line 18 in file "mconfig.c"
 19686 ;; Parameters:    Size  Location     Type
 19687 ;;		None
 19688 ;; Auto vars:     Size  Location     Type
 19689 ;;		None
 19690 ;; Return value:  Size  Location     Type
 19691 ;;                  1  [STACK] void 
 19692 ;; Registers used:
 19693 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 19694 ;; Tracked objects:
 19695 ;;		On entry : 0/0
 19696 ;;		On exit  : 0/0
 19697 ;;		Unchanged: 0/0
 19698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19703 ;;Total ram usage:        0 bytes
 19704 ;; Hardware stack levels used:    1
 19705 ;; Hardware stack levels required when called:    8
 19706 ;; This function calls:
 19707 ;;		_PWM8_LoadDutyValue
 19708 ;; This function is called by:
 19709 ;;		_check_help
 19710 ;; This function uses a reentrant model
 19711 ;;
 19712                           
 19713                           	psect	text79
 19714  019192                     __ptext79:
 19715                           	opt callstack 0
 19716  019192                     _mode_lamp_bright:
 19717                           	opt callstack 21
 19718                           
 19719                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 19720                           
 19721                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19722                           ;incstack = 0
 19723  019192  0E2C               	movlw	44
 19724  019194  6EE6               	movwf	postinc1,c
 19725  019196  0E01               	movlw	1
 19726  019198  6EE6               	movwf	postinc1,c
 19727  01919A  EC93  F0C3         	call	_PWM8_LoadDutyValue	;wreg free
 19728                           
 19729                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 19730  01919E  0012               	return		;funcret
 19731  0191A0                     __end_of_mode_lamp_bright:
 19732                           	opt callstack 0
 19733                           
 19734 ;; *************** function _PWM8_LoadDutyValue *****************
 19735 ;; Defined at:
 19736 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 19737 ;; Parameters:    Size  Location     Type
 19738 ;;  dutyValue       2  [STACK] unsigned short 
 19739 ;; Auto vars:     Size  Location     Type
 19740 ;;		None
 19741 ;; Return value:  Size  Location     Type
 19742 ;;                  1  [STACK] void 
 19743 ;; Registers used:
 19744 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 19745 ;; Tracked objects:
 19746 ;;		On entry : 0/2
 19747 ;;		On exit  : 0/0
 19748 ;;		Unchanged: 0/0
 19749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19754 ;;Total ram usage:        0 bytes
 19755 ;; Hardware stack levels used:    1
 19756 ;; Hardware stack levels required when called:    7
 19757 ;; This function calls:
 19758 ;;		Nothing
 19759 ;; This function is called by:
 19760 ;;		_mode_lamp_dim
 19761 ;;		_mode_lamp_bright
 19762 ;; This function uses a reentrant model
 19763 ;;
 19764                           
 19765                           	psect	text80
 19766  018726                     __ptext80:
 19767                           	opt callstack 0
 19768  018726                     _PWM8_LoadDutyValue:
 19769                           	opt callstack 22
 19770                           
 19771                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 19772                           ;stkvar	_dutyValue @ sp[(0)+-2]
 19773                           
 19774                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19775                           ;incstack = 0
 19776  018726  0EFE               	movlw	-2
 19777  018728  006F FF8C  F02F    	movff	plusw1,btemp+10
 19778  01872E  0EFF               	movlw	-1
 19779  018730  006F FF8C  F030    	movff	plusw1,btemp+11
 19780  018736  90D8               	bcf	status,0,c
 19781  018738  3230               	rrcf	(btemp+11)^0,f,c
 19782  01873A  322F               	rrcf	(btemp+10)^0,f,c
 19783  01873C  90D8               	bcf	status,0,c
 19784  01873E  3230               	rrcf	(btemp+11)^0,f,c
 19785  018740  322F               	rrcf	(btemp+10)^0,f,c
 19786  018742  502F               	movf	(btemp+10)^0,w,c
 19787  018744  6E61               	movwf	97,c	;volatile
 19788                           
 19789                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 19790                           ;stkvar	_dutyValue @ sp[(0)+-2]
 19791  018746  0EFE               	movlw	-2
 19792  018748  006F FF8C  F030    	movff	plusw1,btemp+11
 19793  01874E  0E03               	movlw	3
 19794  018750  1630               	andwf	(btemp+11)^0,f,c
 19795  018752  0E06               	movlw	6
 19796  018754  6E25               	movwf	btemp^0,c
 19797  018756                     u7335:
 19798  018756  90D8               	bcf	status,0,c
 19799  018758  3630               	rlcf	(btemp+11)^0,f,c
 19800  01875A  2E25               	decfsz	btemp^0,f,c
 19801  01875C  D7FC               	goto	u7335
 19802  01875E  5030               	movf	(btemp+11)^0,w,c
 19803  018760  6E60               	movwf	96,c	;volatile
 19804                           
 19805                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 19806  018762  52E5               	movf	postdec1,f,c
 19807  018764  52E5               	movf	postdec1,f,c
 19808  018766  0012               	return		;funcret
 19809  018768                     __end_of_PWM8_LoadDutyValue:
 19810                           	opt callstack 0
 19811                           
 19812 ;; *************** function _help_button *****************
 19813 ;; Defined at:
 19814 ;;		line 26 in file "mconfig.c"
 19815 ;; Parameters:    Size  Location     Type
 19816 ;;		None
 19817 ;; Auto vars:     Size  Location     Type
 19818 ;;		None
 19819 ;; Return value:  Size  Location     Type
 19820 ;;                  1  [STACK] _Bool 
 19821 ;; Registers used:
 19822 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 19823 ;; Tracked objects:
 19824 ;;		On entry : 0/2
 19825 ;;		On exit  : 0/0
 19826 ;;		Unchanged: 0/0
 19827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19832 ;;Total ram usage:        0 bytes
 19833 ;; Hardware stack levels used:    1
 19834 ;; Hardware stack levels required when called:    8
 19835 ;; This function calls:
 19836 ;;		_StartTimer
 19837 ;;		_TimerDone
 19838 ;; This function is called by:
 19839 ;;		_check_help
 19840 ;; This function uses a reentrant model
 19841 ;;
 19842                           
 19843                           	psect	text81
 19844  0188A6                     __ptext81:
 19845                           	opt callstack 0
 19846  0188A6                     _help_button:
 19847                           	opt callstack 21
 19848                           
 19849                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 19850                           
 19851                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19852                           ;incstack = 0
 19853  0188A6  B0CB               	btfsc	203,0,c	;volatile
 19854  0188A8  D00C               	goto	l1660
 19855                           
 19856                           ;mconfig.c: 29:   V.help = 1;
 19857  0188AA  0102               	movlb	2	; () banked
 19858  0188AC  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 19859                           
 19860                           ; BSR set to: 2
 19861                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 19862  0188AE  0E08               	movlw	8
 19863  0188B0  6EE6               	movwf	postinc1,c
 19864  0188B2  EC15  F0C6         	call	_TimerDone	;wreg free
 19865  0188B6  5025               	movf	btemp^0,w,c
 19866  0188B8  B4D8               	btfsc	status,2,c
 19867  0188BA  D003               	goto	l1660
 19868                           
 19869                           ;mconfig.c: 31:    return 1;
 19870  0188BC  0E01               	movlw	1
 19871  0188BE  6E25               	movwf	btemp^0,c
 19872  0188C0  0012               	return	
 19873  0188C2                     l1660:
 19874                           
 19875                           ;mconfig.c: 34:  if (!V.help)
 19876  0188C2  0102               	movlb	2	; () banked
 19877  0188C4  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 19878  0188C6  D008               	goto	l9016
 19879                           
 19880                           ; BSR set to: 2
 19881                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 19882  0188C8  0E2C               	movlw	44
 19883  0188CA  6EE6               	movwf	postinc1,c
 19884  0188CC  0E01               	movlw	1
 19885  0188CE  6EE6               	movwf	postinc1,c
 19886  0188D0  0E08               	movlw	8
 19887  0188D2  6EE6               	movwf	postinc1,c
 19888  0188D4  ECB4  F0C3         	call	_StartTimer	;wreg free
 19889  0188D8                     l9016:
 19890                           
 19891                           ;mconfig.c: 37:  return 0;
 19892  0188D8  0E00               	movlw	0
 19893  0188DA  6E25               	movwf	btemp^0,c
 19894                           
 19895                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 19896  0188DC  0012               	return		;funcret
 19897  0188DE                     __end_of_help_button:
 19898                           	opt callstack 0
 19899                           
 19900 ;; *************** function _TimerDone *****************
 19901 ;; Defined at:
 19902 ;;		line 20 in file "timers.c"
 19903 ;; Parameters:    Size  Location     Type
 19904 ;;  timer           1  [STACK] const unsigned char 
 19905 ;; Auto vars:     Size  Location     Type
 19906 ;;		None
 19907 ;; Return value:  Size  Location     Type
 19908 ;;                  1  [STACK] _Bool 
 19909 ;; Registers used:
 19910 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 19911 ;; Tracked objects:
 19912 ;;		On entry : 0/1
 19913 ;;		On exit  : 0/0
 19914 ;;		Unchanged: 0/0
 19915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19920 ;;Total ram usage:        0 bytes
 19921 ;; Hardware stack levels used:    1
 19922 ;; Hardware stack levels required when called:    7
 19923 ;; This function calls:
 19924 ;;		Nothing
 19925 ;; This function is called by:
 19926 ;;		_main
 19927 ;;		_WaitMs
 19928 ;;		_help_button
 19929 ;;		_check_help
 19930 ;;		_set_display_info
 19931 ;; This function uses a reentrant model
 19932 ;;
 19933                           
 19934                           	psect	text82
 19935  018C2A                     __ptext82:
 19936                           	opt callstack 0
 19937  018C2A                     _TimerDone:
 19938                           	opt callstack 22
 19939                           
 19940                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19941                           ;incstack = 0
 19942  018C2A  0004               	clrwdt		;# 
 19943                           
 19944                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 19945                           ;stkvar	_timer @ sp[(0)+-1]
 19946  018C2C  0EFF               	movlw	-1
 19947  018C2E  50E3               	movf	plusw1,w,c
 19948  018C30  0D02               	mullw	2
 19949  018C32  0EB1               	movlw	low _tickCount
 19950  018C34  24F3               	addwf	243,w,c
 19951  018C36  6ED9               	movwf	fsr2l,c
 19952  018C38  0E01               	movlw	high _tickCount
 19953  018C3A  20F4               	addwfc	prodh,w,c
 19954  018C3C  6EDA               	movwf	fsr2h,c
 19955  018C3E  50DE               	movf	postinc2,w,c
 19956  018C40  10DE               	iorwf	postinc2,w,c
 19957  018C42  A4D8               	btfss	status,2,c
 19958  018C44  D002               	goto	l7984
 19959                           
 19960                           ;timers.c: 24:   return 1;
 19961  018C46  0E01               	movlw	1
 19962  018C48  D001               	goto	L20
 19963  018C4A                     l7984:
 19964                           
 19965                           ;timers.c: 26:  return 0;
 19966  018C4A  0E00               	movlw	0
 19967  018C4C                     L20:
 19968  018C4C  6E25               	movwf	btemp^0,c
 19969                           
 19970                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 19971  018C4E  52E5               	movf	postdec1,f,c
 19972  018C50  0012               	return		;funcret
 19973  018C52                     __end_of_TimerDone:
 19974                           	opt callstack 0
 19975                           
 19976 ;; *************** function _StartTimer *****************
 19977 ;; Defined at:
 19978 ;;		line 12 in file "timers.c"
 19979 ;; Parameters:    Size  Location     Type
 19980 ;;  timer           1  [STACK] const unsigned char 
 19981 ;;  count           2  [STACK] const unsigned short 
 19982 ;; Auto vars:     Size  Location     Type
 19983 ;;		None
 19984 ;; Return value:  Size  Location     Type
 19985 ;;                  1  [STACK] void 
 19986 ;; Registers used:
 19987 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 19988 ;; Tracked objects:
 19989 ;;		On entry : 0/0
 19990 ;;		On exit  : 0/0
 19991 ;;		Unchanged: 0/0
 19992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19997 ;;Total ram usage:        0 bytes
 19998 ;; Hardware stack levels used:    1
 19999 ;; Hardware stack levels required when called:    7
 20000 ;; This function calls:
 20001 ;;		Nothing
 20002 ;; This function is called by:
 20003 ;;		_main
 20004 ;;		_WaitMs
 20005 ;;		_help_button
 20006 ;;		_check_help
 20007 ;; This function uses a reentrant model
 20008 ;;
 20009                           
 20010                           	psect	text83
 20011  018768                     __ptext83:
 20012                           	opt callstack 0
 20013  018768                     _StartTimer:
 20014                           	opt callstack 20
 20015                           
 20016                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 20017                           ;stkvar	_count @ sp[(0)+-3]
 20018                           
 20019                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20020                           ;incstack = 0
 20021  018768  0EFD               	movlw	-3
 20022  01876A  006F FF8C  F02F    	movff	plusw1,btemp+10
 20023  018770  0EFE               	movlw	-2
 20024  018772  006F FF8C  F030    	movff	plusw1,btemp+11
 20025  018778  90D8               	bcf	status,0,c
 20026  01877A  342F               	rlcf	(btemp+10)^0,w,c
 20027  01877C  6E2D               	movwf	(btemp+8)^0,c
 20028  01877E  3430               	rlcf	(btemp+11)^0,w,c
 20029  018780  6E2E               	movwf	(btemp+9)^0,c
 20030                           
 20031                           ;stkvar	_timer @ sp[(0)+-1]
 20032  018782  0EFF               	movlw	-1
 20033  018784  50E3               	movf	plusw1,w,c
 20034  018786  0D02               	mullw	2
 20035  018788  0EB1               	movlw	low _tickCount
 20036  01878A  24F3               	addwf	243,w,c
 20037  01878C  6ED9               	movwf	fsr2l,c
 20038  01878E  0E01               	movlw	high _tickCount
 20039  018790  20F4               	addwfc	prodh,w,c
 20040  018792  6EDA               	movwf	fsr2h,c
 20041  018794  0060  F0B7  FFDE   	movff	btemp+8,postinc2
 20042  01879A  0060  F0BB  FFDD   	movff	btemp+9,postdec2
 20043                           
 20044                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 20045  0187A0  52E5               	movf	postdec1,f,c
 20046  0187A2  52E5               	movf	postdec1,f,c
 20047  0187A4  52E5               	movf	postdec1,f,c
 20048  0187A6  0012               	return		;funcret
 20049  0187A8                     __end_of_StartTimer:
 20050                           	opt callstack 0
 20051                           
 20052 ;; *************** function _display_info *****************
 20053 ;; Defined at:
 20054 ;;		line 190 in file "mconfig.c"
 20055 ;; Parameters:    Size  Location     Type
 20056 ;;		None
 20057 ;; Auto vars:     Size  Location     Type
 20058 ;;		None
 20059 ;; Return value:  Size  Location     Type
 20060 ;;                  1  [STACK] enum E16518
 20061 ;; Registers used:
 20062 ;;		btemp
 20063 ;; Tracked objects:
 20064 ;;		On entry : 0/2
 20065 ;;		On exit  : 0/0
 20066 ;;		Unchanged: 0/0
 20067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20072 ;;Total ram usage:        0 bytes
 20073 ;; Hardware stack levels used:    1
 20074 ;; Hardware stack levels required when called:    7
 20075 ;; This function calls:
 20076 ;;		Nothing
 20077 ;; This function is called by:
 20078 ;;		_check_help
 20079 ;; This function uses a reentrant model
 20080 ;;
 20081                           
 20082                           	psect	text84
 20083  0191F2                     __ptext84:
 20084                           	opt callstack 0
 20085  0191F2                     _display_info:
 20086                           	opt callstack 22
 20087                           
 20088                           ;mconfig.c: 192:  return V.response.info;
 20089                           
 20090                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20091                           ;incstack = 0
 20092  0191F2  0060  FA8C  F025   	movff	_V+163,btemp	;volatile
 20093                           
 20094                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 20095  0191F8  0012               	return		;funcret
 20096  0191FA                     __end_of_display_info:
 20097                           	opt callstack 0
 20098                           
 20099 ;; *************** function _display_help *****************
 20100 ;; Defined at:
 20101 ;;		line 195 in file "mconfig.c"
 20102 ;; Parameters:    Size  Location     Type
 20103 ;;		None
 20104 ;; Auto vars:     Size  Location     Type
 20105 ;;		None
 20106 ;; Return value:  Size  Location     Type
 20107 ;;                  1  [STACK] enum E16518
 20108 ;; Registers used:
 20109 ;;		btemp
 20110 ;; Tracked objects:
 20111 ;;		On entry : 3F/2
 20112 ;;		On exit  : 0/0
 20113 ;;		Unchanged: 0/0
 20114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20119 ;;Total ram usage:        0 bytes
 20120 ;; Hardware stack levels used:    1
 20121 ;; Hardware stack levels required when called:    7
 20122 ;; This function calls:
 20123 ;;		Nothing
 20124 ;; This function is called by:
 20125 ;;		_check_help
 20126 ;; This function uses a reentrant model
 20127 ;;
 20128                           
 20129                           	psect	text85
 20130  0191FA                     __ptext85:
 20131                           	opt callstack 0
 20132  0191FA                     _display_help:
 20133                           	opt callstack 22
 20134                           
 20135                           ;mconfig.c: 197:  return V.response.help_temp;
 20136                           
 20137                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20138                           ;incstack = 0
 20139  0191FA  0060  FA90  F025   	movff	_V+164,btemp	;volatile
 20140                           
 20141                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 20142  019200  0012               	return		;funcret
 20143  019202                     __end_of_display_help:
 20144                           	opt callstack 0
 20145                           
 20146 ;; *************** function _check_enter_button *****************
 20147 ;; Defined at:
 20148 ;;		line 42 in file "hid.c"
 20149 ;; Parameters:    Size  Location     Type
 20150 ;;  h               1  [STACK] PTR struct H_data
 20151 ;;		 -> H(7), 
 20152 ;; Auto vars:     Size  Location     Type
 20153 ;;		None
 20154 ;; Return value:  Size  Location     Type
 20155 ;;                  1  [STACK] _Bool 
 20156 ;; Registers used:
 20157 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20158 ;; Tracked objects:
 20159 ;;		On entry : 0/1
 20160 ;;		On exit  : 0/0
 20161 ;;		Unchanged: 0/0
 20162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20167 ;;Total ram usage:        0 bytes
 20168 ;; Hardware stack levels used:    1
 20169 ;; Hardware stack levels required when called:    7
 20170 ;; This function calls:
 20171 ;;		Nothing
 20172 ;; This function is called by:
 20173 ;;		_main
 20174 ;; This function uses a reentrant model
 20175 ;;
 20176                           
 20177                           	psect	text86
 20178  0187A8                     __ptext86:
 20179                           	opt callstack 0
 20180  0187A8                     _check_enter_button:
 20181                           	opt callstack 23
 20182                           
 20183                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 20184                           ;stkvar	_h @ sp[(0)+-1]
 20185                           
 20186                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20187                           ;incstack = 0
 20188  0187A8  0EFF               	movlw	-1
 20189  0187AA  50E3               	movf	plusw1,w,c
 20190  0187AC  6ED9               	movwf	fsr2l,c
 20191  0187AE  6ADA               	clrf	fsr2h,c
 20192  0187B0  0E04               	movlw	4
 20193  0187B2  26D9               	addwf	fsr2l,f,c
 20194  0187B4  50DF               	movf	indf2,w,c
 20195  0187B6  A4D8               	btfss	status,2,c
 20196  0187B8  D013               	goto	l9522
 20197                           
 20198                           ;stkvar	_h @ sp[(0)+-1]
 20199  0187BA  0EFF               	movlw	-1
 20200  0187BC  50E3               	movf	plusw1,w,c
 20201  0187BE  6ED9               	movwf	fsr2l,c
 20202  0187C0  6ADA               	clrf	fsr2h,c
 20203  0187C2  0E05               	movlw	5
 20204  0187C4  26D9               	addwf	fsr2l,f,c
 20205  0187C6  50DF               	movf	indf2,w,c
 20206  0187C8  A4D8               	btfss	status,2,c
 20207  0187CA  D00A               	goto	l9522
 20208                           
 20209                           ;hid.c: 45:   h->wait_enter = 1;
 20210                           ;stkvar	_h @ sp[(0)+-1]
 20211  0187CC  0EFF               	movlw	-1
 20212  0187CE  50E3               	movf	plusw1,w,c
 20213  0187D0  6ED9               	movwf	fsr2l,c
 20214  0187D2  6ADA               	clrf	fsr2h,c
 20215  0187D4  0E04               	movlw	4
 20216  0187D6  26D9               	addwf	fsr2l,f,c
 20217  0187D8  0E01               	movlw	1
 20218  0187DA  6EDF               	movwf	indf2,c
 20219                           
 20220                           ;hid.c: 46:   return 1;
 20221  0187DC  0E01               	movlw	1
 20222  0187DE  D001               	goto	L21
 20223  0187E0                     l9522:
 20224                           
 20225                           ;hid.c: 48:  return 0;
 20226  0187E0  0E00               	movlw	0
 20227  0187E2                     L21:
 20228  0187E2  6E25               	movwf	btemp^0,c
 20229                           
 20230                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 20231  0187E4  52E5               	movf	postdec1,f,c
 20232  0187E6  0012               	return		;funcret
 20233  0187E8                     __end_of_check_enter_button:
 20234                           	opt callstack 0
 20235                           
 20236 ;; *************** function _check_adc_scan *****************
 20237 ;; Defined at:
 20238 ;;		line 56 in file "daq.c"
 20239 ;; Parameters:    Size  Location     Type
 20240 ;;		None
 20241 ;; Auto vars:     Size  Location     Type
 20242 ;;		None
 20243 ;; Return value:  Size  Location     Type
 20244 ;;                  1  [STACK] _Bool 
 20245 ;; Registers used:
 20246 ;;		btemp
 20247 ;; Tracked objects:
 20248 ;;		On entry : 0/1
 20249 ;;		On exit  : 0/0
 20250 ;;		Unchanged: 0/0
 20251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20256 ;;Total ram usage:        0 bytes
 20257 ;; Hardware stack levels used:    1
 20258 ;; Hardware stack levels required when called:    7
 20259 ;; This function calls:
 20260 ;;		Nothing
 20261 ;; This function is called by:
 20262 ;;		_main
 20263 ;; This function uses a reentrant model
 20264 ;;
 20265                           
 20266                           	psect	text87
 20267  019202                     __ptext87:
 20268                           	opt callstack 0
 20269  019202                     _check_adc_scan:
 20270                           	opt callstack 23
 20271                           
 20272                           ;daq.c: 58:  return R.done;
 20273                           
 20274                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20275                           ;incstack = 0
 20276  019202  0060  F3A8  F025   	movff	_R+39,btemp	;volatile
 20277                           
 20278                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 20279  019208  0012               	return		;funcret
 20280  01920A                     __end_of_check_adc_scan:
 20281                           	opt callstack 0
 20282                           
 20283 ;; *************** function _calc_model_data *****************
 20284 ;; Defined at:
 20285 ;;		line 56 in file "mbmc.c"
 20286 ;; Parameters:    Size  Location     Type
 20287 ;;		None
 20288 ;; Auto vars:     Size  Location     Type
 20289 ;;		None
 20290 ;; Return value:  Size  Location     Type
 20291 ;;                  1  [STACK] void 
 20292 ;; Registers used:
 20293 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20294 ;; Tracked objects:
 20295 ;;		On entry : 0/1
 20296 ;;		On exit  : 3F/1
 20297 ;;		Unchanged: 0/0
 20298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20303 ;;Total ram usage:        0 bytes
 20304 ;; Hardware stack levels used:    1
 20305 ;; Hardware stack levels required when called:   10
 20306 ;; This function calls:
 20307 ;;		___fladd
 20308 ;;		___flmul
 20309 ;;		___flsub
 20310 ;;		_lp_filter
 20311 ;;		_start_bsoc
 20312 ;;		_stop_bsoc
 20313 ;; This function is called by:
 20314 ;;		_main
 20315 ;; This function uses a reentrant model
 20316 ;;
 20317                           
 20318                           	psect	text88
 20319  014EAE                     __ptext88:
 20320                           	opt callstack 0
 20321  014EAE                     _calc_model_data:
 20322                           	opt callstack 20
 20323                           
 20324                           ;mbmc.c: 58:  stop_bsoc();
 20325                           
 20326                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20327                           ;incstack = 0
 20328  014EAE  EC12  F0C9         	call	_stop_bsoc	;wreg free
 20329                           
 20330                           ; BSR set to: 57
 20331                           ;mbmc.c: 60:  if (!V.calib) {
 20332  014EB2  0102               	movlb	2	; () banked
 20333  014EB4  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
 20334  014EB6  A4D8               	btfss	status,2,c
 20335  014EB8  D161               	goto	l9424
 20336                           
 20337                           ; BSR set to: 2
 20338                           ;mbmc.c: 61:   C.c_bat = C.calc[C_BATT];
 20339  014EBA  C100  F144         	movff	_C,_C+68	;volatile
 20340  014EBE  C101  F145         	movff	_C+1,_C+69	;volatile
 20341  014EC2  C102  F146         	movff	_C+2,_C+70	;volatile
 20342  014EC6  C103  F147         	movff	_C+3,_C+71	;volatile
 20343                           
 20344                           ;mbmc.c: 62:   C.c_pv = C.calc[C_PV];
 20345  014ECA  C104  F148         	movff	_C+4,_C+72	;volatile
 20346  014ECE  C105  F149         	movff	_C+5,_C+73	;volatile
 20347  014ED2  C106  F14A         	movff	_C+6,_C+74	;volatile
 20348  014ED6  C107  F14B         	movff	_C+7,_C+75	;volatile
 20349                           
 20350                           ;mbmc.c: 63:   C.v_bat = C.calc[V_BAT];
 20351  014EDA  C110  F154         	movff	_C+16,_C+84	;volatile
 20352  014EDE  C111  F155         	movff	_C+17,_C+85	;volatile
 20353  014EE2  C112  F156         	movff	_C+18,_C+86	;volatile
 20354  014EE6  C113  F157         	movff	_C+19,_C+87	;volatile
 20355                           
 20356                           ;mbmc.c: 64:   C.v_pv = C.calc[V_PV];
 20357  014EEA  C114  F150         	movff	_C+20,_C+80	;volatile
 20358  014EEE  C115  F151         	movff	_C+21,_C+81	;volatile
 20359  014EF2  C116  F152         	movff	_C+22,_C+82	;volatile
 20360  014EF6  C117  F153         	movff	_C+23,_C+83	;volatile
 20361                           
 20362                           ;mbmc.c: 65:   C.v_inverter = C.calc[V_INVERTER];
 20363  014EFA  C130  F164         	movff	_C+48,_C+100	;volatile
 20364  014EFE  C131  F165         	movff	_C+49,_C+101	;volatile
 20365  014F02  C132  F166         	movff	_C+50,_C+102	;volatile
 20366  014F06  C133  F167         	movff	_C+51,_C+103	;volatile
 20367                           
 20368                           ; BSR set to: 2
 20369                           ;mbmc.c: 66:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 20370  014F0A  0E01               	movlw	1
 20371  014F0C  6EE6               	movwf	postinc1,c
 20372  014F0E  0E10               	movlw	16
 20373  014F10  6EE6               	movwf	postinc1,c
 20374  014F12  0060  F403  FFE6   	movff	_C,postinc1
 20375  014F18  0060  F407  FFE6   	movff	_C+1,postinc1
 20376  014F1E  0060  F40B  FFE6   	movff	_C+2,postinc1
 20377  014F24  0060  F40F  FFE6   	movff	_C+3,postinc1
 20378  014F2A  0060  F413  FFE6   	movff	_C+4,postinc1
 20379  014F30  0060  F417  FFE6   	movff	_C+5,postinc1
 20380  014F36  0060  F41B  FFE6   	movff	_C+6,postinc1
 20381  014F3C  0060  F41F  FFE6   	movff	_C+7,postinc1
 20382  014F42  EC08  F0C3         	call	___flsub	;wreg free
 20383  014F46  0060  F097  FFE6   	movff	btemp,postinc1
 20384  014F4C  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20385  014F52  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20386  014F58  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20387  014F5E  ECAC  F0B0         	call	_lp_filter	;wreg free
 20388  014F62  0060  F094  F140   	movff	btemp,_C+64	;volatile
 20389  014F68  0060  F098  F141   	movff	btemp+1,_C+65	;volatile
 20390  014F6E  0060  F09C  F142   	movff	btemp+2,_C+66	;volatile
 20391  014F74  0060  F0A0  F143   	movff	btemp+3,_C+67	;volatile
 20392                           
 20393                           ;mbmc.c: 67:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 20394  014F7A  0E01               	movlw	1
 20395  014F7C  6EE6               	movwf	postinc1,c
 20396  014F7E  0E11               	movlw	17
 20397  014F80  6EE6               	movwf	postinc1,c
 20398  014F82  0060  F553  FFE6   	movff	_C+84,postinc1
 20399  014F88  0060  F557  FFE6   	movff	_C+85,postinc1
 20400  014F8E  0060  F55B  FFE6   	movff	_C+86,postinc1
 20401  014F94  0060  F55F  FFE6   	movff	_C+87,postinc1
 20402  014F9A  0060  F503  FFE6   	movff	_C+64,postinc1
 20403  014FA0  0060  F507  FFE6   	movff	_C+65,postinc1
 20404  014FA6  0060  F50B  FFE6   	movff	_C+66,postinc1
 20405  014FAC  0060  F50F  FFE6   	movff	_C+67,postinc1
 20406  014FB2  EC08  F093         	call	___flmul	;wreg free
 20407  014FB6  0060  F097  FFE6   	movff	btemp,postinc1
 20408  014FBC  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20409  014FC2  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20410  014FC8  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20411  014FCE  ECAC  F0B0         	call	_lp_filter	;wreg free
 20412  014FD2  0060  F094  F168   	movff	btemp,_C+104	;volatile
 20413  014FD8  0060  F098  F169   	movff	btemp+1,_C+105	;volatile
 20414  014FDE  0060  F09C  F16A   	movff	btemp+2,_C+106	;volatile
 20415  014FE4  0060  F0A0  F16B   	movff	btemp+3,_C+107	;volatile
 20416                           
 20417                           ;mbmc.c: 68:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 20418  014FEA  0E01               	movlw	1
 20419  014FEC  6EE6               	movwf	postinc1,c
 20420  014FEE  0E12               	movlw	18
 20421  014FF0  6EE6               	movwf	postinc1,c
 20422  014FF2  0060  F543  FFE6   	movff	_C+80,postinc1
 20423  014FF8  0060  F547  FFE6   	movff	_C+81,postinc1
 20424  014FFE  0060  F54B  FFE6   	movff	_C+82,postinc1
 20425  015004  0060  F54F  FFE6   	movff	_C+83,postinc1
 20426  01500A  0060  F523  FFE6   	movff	_C+72,postinc1
 20427  015010  0060  F527  FFE6   	movff	_C+73,postinc1
 20428  015016  0060  F52B  FFE6   	movff	_C+74,postinc1
 20429  01501C  0060  F52F  FFE6   	movff	_C+75,postinc1
 20430  015022  EC08  F093         	call	___flmul	;wreg free
 20431  015026  0060  F097  FFE6   	movff	btemp,postinc1
 20432  01502C  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20433  015032  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20434  015038  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20435  01503E  ECAC  F0B0         	call	_lp_filter	;wreg free
 20436  015042  0060  F094  F170   	movff	btemp,_C+112	;volatile
 20437  015048  0060  F098  F171   	movff	btemp+1,_C+113	;volatile
 20438  01504E  0060  F09C  F172   	movff	btemp+2,_C+114	;volatile
 20439  015054  0060  F0A0  F173   	movff	btemp+3,_C+115	;volatile
 20440                           
 20441                           ;mbmc.c: 69:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 20442  01505A  0E01               	movlw	1
 20443  01505C  6EE6               	movwf	postinc1,c
 20444  01505E  0E13               	movlw	19
 20445  015060  6EE6               	movwf	postinc1,c
 20446  015062  0E00               	movlw	0
 20447  015064  6EE6               	movwf	postinc1,c
 20448  015066  0E00               	movlw	0
 20449  015068  6EE6               	movwf	postinc1,c
 20450  01506A  0E60               	movlw	96
 20451  01506C  6EE6               	movwf	postinc1,c
 20452  01506E  0EC1               	movlw	193
 20453  015070  6EE6               	movwf	postinc1,c
 20454  015072  0060  F593  FFE6   	movff	_C+100,postinc1
 20455  015078  0060  F597  FFE6   	movff	_C+101,postinc1
 20456  01507E  0060  F59B  FFE6   	movff	_C+102,postinc1
 20457  015084  0060  F59F  FFE6   	movff	_C+103,postinc1
 20458  01508A  0060  F503  FFE6   	movff	_C+64,postinc1
 20459  015090  0060  F507  FFE6   	movff	_C+65,postinc1
 20460  015096  0060  F50B  FFE6   	movff	_C+66,postinc1
 20461  01509C  0060  F50F  FFE6   	movff	_C+67,postinc1
 20462  0150A2  EC08  F093         	call	___flmul	;wreg free
 20463  0150A6  0060  F097  FFE6   	movff	btemp,postinc1
 20464  0150AC  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20465  0150B2  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20466  0150B8  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20467  0150BE  EC1D  F097         	call	___fladd	;wreg free
 20468  0150C2  0060  F097  FFE6   	movff	btemp,postinc1
 20469  0150C8  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20470  0150CE  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20471  0150D4  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20472  0150DA  ECAC  F0B0         	call	_lp_filter	;wreg free
 20473  0150DE  0060  F094  F16C   	movff	btemp,_C+108	;volatile
 20474  0150E4  0060  F098  F16D   	movff	btemp+1,_C+109	;volatile
 20475  0150EA  0060  F09C  F16E   	movff	btemp+2,_C+110	;volatile
 20476  0150F0  0060  F0A0  F16F   	movff	btemp+3,_C+111	;volatile
 20477                           
 20478                           ;mbmc.c: 70:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 20479  0150F6  0E01               	movlw	1
 20480  0150F8  6EE6               	movwf	postinc1,c
 20481  0150FA  0E14               	movlw	20
 20482  0150FC  6EE6               	movwf	postinc1,c
 20483  0150FE  0060  F553  FFE6   	movff	_C+84,postinc1
 20484  015104  0060  F557  FFE6   	movff	_C+85,postinc1
 20485  01510A  0060  F55B  FFE6   	movff	_C+86,postinc1
 20486  015110  0060  F55F  FFE6   	movff	_C+87,postinc1
 20487  015116  0060  F513  FFE6   	movff	_C+68,postinc1
 20488  01511C  0060  F517  FFE6   	movff	_C+69,postinc1
 20489  015122  0060  F51B  FFE6   	movff	_C+70,postinc1
 20490  015128  0060  F51F  FFE6   	movff	_C+71,postinc1
 20491  01512E  EC08  F093         	call	___flmul	;wreg free
 20492  015132  0060  F097  FFE6   	movff	btemp,postinc1
 20493  015138  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20494  01513E  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20495  015144  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20496  01514A  ECAC  F0B0         	call	_lp_filter	;wreg free
 20497  01514E  0060  F094  F174   	movff	btemp,_C+116	;volatile
 20498  015154  0060  F098  F175   	movff	btemp+1,_C+117	;volatile
 20499  01515A  0060  F09C  F176   	movff	btemp+2,_C+118	;volatile
 20500  015160  0060  F0A0  F177   	movff	btemp+3,_C+119	;volatile
 20501                           
 20502                           ;mbmc.c: 74:   if (C.p_inverter < 0.0)
 20503  015166  0101               	movlb	1	; () banked
 20504  015168  AF6F               	btfss	(_C+111)& (0+255),7,b	;volatile
 20505  01516A  D008               	goto	l9424
 20506                           
 20507                           ; BSR set to: 1
 20508                           ;mbmc.c: 75:    C.p_inverter = 0.0001;
 20509  01516C  0E17               	movlw	23
 20510  01516E  6F6C               	movwf	(_C+108)& (0+255),b	;volatile
 20511  015170  0EB7               	movlw	183
 20512  015172  6F6D               	movwf	(_C+109)& (0+255),b	;volatile
 20513  015174  0ED1               	movlw	209
 20514  015176  6F6E               	movwf	(_C+110)& (0+255),b	;volatile
 20515  015178  0E38               	movlw	56
 20516  01517A  6F6F               	movwf	(_C+111)& (0+255),b	;volatile
 20517  01517C                     l9424:
 20518                           
 20519                           ;mbmc.c: 77:  start_bsoc();
 20520  01517C  EC15  F0C9         	call	_start_bsoc	;wreg free
 20521                           
 20522                           ;mbmc.c: 78:  C.update = 1;
 20523  015180  0E01               	movlw	1
 20524  015182  0101               	movlb	1	; () banked
 20525  015184  6FA0               	movwf	(_C+160)& (0+255),b	;volatile
 20526                           
 20527                           ; BSR set to: 1
 20528                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 20529  015186  0012               	return		;funcret
 20530  015188                     __end_of_calc_model_data:
 20531                           	opt callstack 0
 20532                           
 20533 ;; *************** function _stop_bsoc *****************
 20534 ;; Defined at:
 20535 ;;		line 26 in file "bsoc.c"
 20536 ;; Parameters:    Size  Location     Type
 20537 ;;		None
 20538 ;; Auto vars:     Size  Location     Type
 20539 ;;		None
 20540 ;; Return value:  Size  Location     Type
 20541 ;;                  1  [STACK] void 
 20542 ;; Registers used:
 20543 ;;		None
 20544 ;; Tracked objects:
 20545 ;;		On entry : 0/1
 20546 ;;		On exit  : 3F/39
 20547 ;;		Unchanged: 0/0
 20548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20553 ;;Total ram usage:        0 bytes
 20554 ;; Hardware stack levels used:    1
 20555 ;; Hardware stack levels required when called:    7
 20556 ;; This function calls:
 20557 ;;		Nothing
 20558 ;; This function is called by:
 20559 ;;		_calc_model_data
 20560 ;; This function uses a reentrant model
 20561 ;;
 20562                           
 20563                           	psect	text89
 20564  019224                     __ptext89:
 20565                           	opt callstack 0
 20566  019224                     _stop_bsoc:
 20567                           	opt callstack 22
 20568                           
 20569                           ;bsoc.c: 29:  PIE6bits.TMR3IE = 0;
 20570                           
 20571                           ; BSR set to: 1
 20572                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20573                           ;incstack = 0
 20574  019224  0139               	movlb	57	; () banked
 20575  019226  9D96               	bcf	150,6,b	;volatile
 20576                           
 20577                           ; BSR set to: 57
 20578                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 20579  019228  0012               	return		;funcret
 20580  01922A                     __end_of_stop_bsoc:
 20581                           	opt callstack 0
 20582                           
 20583 ;; *************** function _start_bsoc *****************
 20584 ;; Defined at:
 20585 ;;		line 20 in file "bsoc.c"
 20586 ;; Parameters:    Size  Location     Type
 20587 ;;		None
 20588 ;; Auto vars:     Size  Location     Type
 20589 ;;		None
 20590 ;; Return value:  Size  Location     Type
 20591 ;;                  1  [STACK] void 
 20592 ;; Registers used:
 20593 ;;		None
 20594 ;; Tracked objects:
 20595 ;;		On entry : 3C/2
 20596 ;;		On exit  : 3F/39
 20597 ;;		Unchanged: 0/0
 20598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20603 ;;Total ram usage:        0 bytes
 20604 ;; Hardware stack levels used:    1
 20605 ;; Hardware stack levels required when called:    7
 20606 ;; This function calls:
 20607 ;;		Nothing
 20608 ;; This function is called by:
 20609 ;;		_calc_model_data
 20610 ;; This function uses a reentrant model
 20611 ;;
 20612                           
 20613                           	psect	text90
 20614  01922A                     __ptext90:
 20615                           	opt callstack 0
 20616  01922A                     _start_bsoc:
 20617                           	opt callstack 22
 20618                           
 20619                           ;bsoc.c: 23:  PIE6bits.TMR3IE = 1;
 20620                           
 20621                           ; BSR set to: 57
 20622                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20623                           ;incstack = 0
 20624  01922A  0139               	movlb	57	; () banked
 20625  01922C  8D96               	bsf	150,6,b	;volatile
 20626                           
 20627                           ; BSR set to: 57
 20628                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 20629  01922E  0012               	return		;funcret
 20630  019230                     __end_of_start_bsoc:
 20631                           	opt callstack 0
 20632                           
 20633 ;; *************** function _lp_filter *****************
 20634 ;; Defined at:
 20635 ;;		line 18 in file "mbmc.c"
 20636 ;; Parameters:    Size  Location     Type
 20637 ;;  new             4  [STACK] const float 
 20638 ;;  bn              1  [STACK] const unsigned char 
 20639 ;;  slow            1  [STACK] const char 
 20640 ;; Auto vars:     Size  Location     Type
 20641 ;;  lp_speed        4  [STACK] float 
 20642 ;; Return value:  Size  Location     Type
 20643 ;;                  4  [STACK] float 
 20644 ;; Registers used:
 20645 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20646 ;; Tracked objects:
 20647 ;;		On entry : 0/2
 20648 ;;		On exit  : 0/0
 20649 ;;		Unchanged: 0/0
 20650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20655 ;;Total ram usage:        0 bytes
 20656 ;; Hardware stack levels used:    1
 20657 ;; Hardware stack levels required when called:    9
 20658 ;; This function calls:
 20659 ;;		___fladd
 20660 ;;		___flmul
 20661 ;;		___flsub
 20662 ;; This function is called by:
 20663 ;;		_main
 20664 ;;		_convert_adc_data
 20665 ;;		_calc_model_data
 20666 ;; This function uses a reentrant model
 20667 ;;
 20668                           
 20669                           	psect	text91
 20670  016158                     __ptext91:
 20671                           	opt callstack 0
 20672  016158                     _lp_filter:
 20673                           	opt callstack 0
 20674                           
 20675                           ; BSR set to: 57
 20676                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20677  016158  52E6               	movf	postinc1,f,c
 20678  01615A  52E6               	movf	postinc1,f,c
 20679  01615C  52E6               	movf	postinc1,f,c
 20680  01615E  52E6               	movf	postinc1,f,c
 20681                           
 20682                           ;mbmc.c: 18: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 19: {;mbmc.c: 20:  static float smooth[16 +5];;mbmc.c: 21:  float lp_speed;;mbmc.c: 2
      +                          3:  if (bn >= 16 +5)
 20683                           ;stkvar	_bn @ sp[(-4)+-5]
 20684                           
 20685                           ;incstack = 0
 20686  016160  0EF7               	movlw	-9
 20687  016162  006F FF8C  F025    	movff	plusw1,btemp
 20688  016168  0E14               	movlw	20
 20689  01616A  6425               	cpfsgt	btemp^0,c
 20690  01616C  D011               	goto	l8970
 20691  01616E                     u8220:
 20692                           
 20693                           ;mbmc.c: 24:   return new;
 20694                           ;stkvar	_new @ sp[(-4)+-4]
 20695  01616E  0EF8               	movlw	-8
 20696  016170  006F FF8C  F025    	movff	plusw1,btemp
 20697  016176  0EF9               	movlw	-7
 20698  016178  006F FF8C  F026    	movff	plusw1,btemp+1
 20699  01617E  0EFA               	movlw	-6
 20700  016180  006F FF8C  F027    	movff	plusw1,btemp+2
 20701  016186  0EFB               	movlw	-5
 20702  016188  006F FF8C  F028    	movff	plusw1,btemp+3
 20703  01618E  D0BF               	goto	l1808
 20704  016190                     l8970:
 20705                           
 20706                           ;mbmc.c: 26:  if (slow == (-1)) {
 20707                           ;stkvar	_slow @ sp[(-4)+-6]
 20708  016190  0EF6               	movlw	-10
 20709  016192  28E3               	incf	plusw1,w,c
 20710  016194  A4D8               	btfss	status,2,c
 20711  016196  D012               	goto	l8978
 20712                           
 20713                           ;mbmc.c: 27:   smooth[bn] = 0.0;
 20714                           ;stkvar	_bn @ sp[(-4)+-5]
 20715  016198  0EF7               	movlw	-9
 20716  01619A  50E3               	movf	plusw1,w,c
 20717  01619C  0D04               	mullw	4
 20718  01619E  0E00               	movlw	low lp_filter@smooth
 20719  0161A0  24F3               	addwf	243,w,c
 20720  0161A2  6ED9               	movwf	fsr2l,c
 20721  0161A4  0E03               	movlw	high lp_filter@smooth
 20722  0161A6  20F4               	addwfc	prodh,w,c
 20723  0161A8  6EDA               	movwf	fsr2h,c
 20724  0161AA  0E00               	movlw	0
 20725  0161AC  6EDE               	movwf	postinc2,c
 20726  0161AE  0E00               	movlw	0
 20727  0161B0  6EDE               	movwf	postinc2,c
 20728  0161B2  0E00               	movlw	0
 20729  0161B4  6EDE               	movwf	postinc2,c
 20730  0161B6  0E00               	movlw	0
 20731  0161B8  6EDD               	movwf	postdec2,c
 20732  0161BA  D7D9               	goto	u8220
 20733  0161BC                     l8978:
 20734                           
 20735                           ;mbmc.c: 31:  if (slow) {
 20736                           ;stkvar	_slow @ sp[(-4)+-6]
 20737  0161BC  0EF6               	movlw	-10
 20738  0161BE  50E3               	movf	plusw1,w,c
 20739  0161C0  B4D8               	btfsc	status,2,c
 20740  0161C2  D008               	goto	l8982
 20741                           
 20742                           ;mbmc.c: 32:   lp_speed = 0.033;
 20743  0161C4  0E02               	movlw	2
 20744  0161C6  6E2D               	movwf	(btemp+8)^0,c
 20745  0161C8  0E2B               	movlw	43
 20746  0161CA  6E2E               	movwf	(btemp+9)^0,c
 20747  0161CC  0E07               	movlw	7
 20748  0161CE  6E2F               	movwf	(btemp+10)^0,c
 20749  0161D0  0E3D               	movlw	61
 20750  0161D2  D007               	goto	L22
 20751  0161D4                     l8982:
 20752                           
 20753                           ;mbmc.c: 34:   lp_speed = 0.125;
 20754  0161D4  0E00               	movlw	0
 20755  0161D6  6E2D               	movwf	(btemp+8)^0,c
 20756  0161D8  0E00               	movlw	0
 20757  0161DA  6E2E               	movwf	(btemp+9)^0,c
 20758  0161DC  0E00               	movlw	0
 20759  0161DE  6E2F               	movwf	(btemp+10)^0,c
 20760  0161E0  0E3E               	movlw	62
 20761  0161E2                     L22:
 20762  0161E2  6E30               	movwf	(btemp+11)^0,c
 20763                           
 20764                           ;stkvar	_lp_speed @ sp[(-4)+0]
 20765  0161E4  0EFC               	movlw	-4
 20766  0161E6  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 20767  0161EC  0EFD               	movlw	-3
 20768  0161EE  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 20769  0161F4  0EFE               	movlw	-2
 20770  0161F6  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 20771  0161FC  0EFF               	movlw	-1
 20772  0161FE  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 20773                           
 20774                           ;mbmc.c: 37:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 20775                           ;stkvar	_bn @ sp[(-4)+-5]
 20776  016204  0EF7               	movlw	-9
 20777  016206  50E3               	movf	plusw1,w,c
 20778  016208  0D04               	mullw	4
 20779  01620A  0E00               	movlw	low lp_filter@smooth
 20780  01620C  24F3               	addwf	243,w,c
 20781  01620E  6ED9               	movwf	fsr2l,c
 20782  016210  0E03               	movlw	high lp_filter@smooth
 20783  016212  20F4               	addwfc	prodh,w,c
 20784  016214  6EDA               	movwf	fsr2h,c
 20785  016216  006F FF7B FFE6     	movff	postinc2,postinc1
 20786  01621C  006F FF7B FFE6     	movff	postinc2,postinc1
 20787  016222  006F FF7B FFE6     	movff	postinc2,postinc1
 20788  016228  006F FF7B FFE6     	movff	postinc2,postinc1
 20789                           
 20790                           ;stkvar	_lp_speed @ sp[(-8)+0]
 20791  01622E  0EF8               	movlw	-8
 20792  016230  006F FF8F FFE6     	movff	plusw1,postinc1
 20793  016236  006F FF8F FFE6     	movff	plusw1,postinc1
 20794  01623C  006F FF8F FFE6     	movff	plusw1,postinc1
 20795  016242  006F FF8F FFE6     	movff	plusw1,postinc1
 20796                           
 20797                           ;stkvar	_bn @ sp[(-12)+-5]
 20798  016248  0EEF               	movlw	-17
 20799  01624A  50E3               	movf	plusw1,w,c
 20800  01624C  0D04               	mullw	4
 20801  01624E  0E00               	movlw	low lp_filter@smooth
 20802  016250  24F3               	addwf	243,w,c
 20803  016252  6ED9               	movwf	fsr2l,c
 20804  016254  0E03               	movlw	high lp_filter@smooth
 20805  016256  20F4               	addwfc	prodh,w,c
 20806  016258  6EDA               	movwf	fsr2h,c
 20807  01625A  006F FF7B FFE6     	movff	postinc2,postinc1
 20808  016260  006F FF7B FFE6     	movff	postinc2,postinc1
 20809  016266  006F FF7B FFE6     	movff	postinc2,postinc1
 20810  01626C  006F FF7B FFE6     	movff	postinc2,postinc1
 20811                           
 20812                           ;stkvar	_new @ sp[(-16)+-4]
 20813  016272  0EEC               	movlw	-20
 20814  016274  006F FF8F FFE6     	movff	plusw1,postinc1
 20815  01627A  006F FF8F FFE6     	movff	plusw1,postinc1
 20816  016280  006F FF8F FFE6     	movff	plusw1,postinc1
 20817  016286  006F FF8F FFE6     	movff	plusw1,postinc1
 20818  01628C  EC08  F0C3         	call	___flsub	;wreg free
 20819  016290  0060  F097  FFE6   	movff	btemp,postinc1
 20820  016296  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20821  01629C  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20822  0162A2  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20823  0162A8  EC08  F093         	call	___flmul	;wreg free
 20824  0162AC  0060  F097  FFE6   	movff	btemp,postinc1
 20825  0162B2  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20826  0162B8  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20827  0162BE  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20828  0162C4  EC1D  F097         	call	___fladd	;wreg free
 20829                           
 20830                           ;stkvar	_bn @ sp[(-4)+-5]
 20831  0162C8  0EF7               	movlw	-9
 20832  0162CA  50E3               	movf	plusw1,w,c
 20833  0162CC  0D04               	mullw	4
 20834  0162CE  0E00               	movlw	low lp_filter@smooth
 20835  0162D0  24F3               	addwf	243,w,c
 20836  0162D2  6ED9               	movwf	fsr2l,c
 20837  0162D4  0E03               	movlw	high lp_filter@smooth
 20838  0162D6  20F4               	addwfc	prodh,w,c
 20839  0162D8  6EDA               	movwf	fsr2h,c
 20840  0162DA  0060  F097  FFDE   	movff	btemp,postinc2
 20841  0162E0  0060  F09B  FFDE   	movff	btemp+1,postinc2
 20842  0162E6  0060  F09F  FFDE   	movff	btemp+2,postinc2
 20843  0162EC  0060  F0A3  FFDD   	movff	btemp+3,postdec2
 20844  0162F2  52DD               	movf	postdec2,f,c
 20845  0162F4  52DD               	movf	postdec2,f,c
 20846  0162F6  006F FF78  F025    	movff	postinc2,btemp
 20847  0162FC  006F FF78  F026    	movff	postinc2,btemp+1
 20848  016302  006F FF78  F027    	movff	postinc2,btemp+2
 20849  016308  006F FF78  F028    	movff	postinc2,btemp+3
 20850  01630E                     l1808:
 20851                           
 20852                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 20853  01630E  0EF6               	movlw	246
 20854  016310  26E1               	addwf	fsr1l,f,c
 20855  016312  0EFF               	movlw	255
 20856  016314  22E2               	addwfc	fsr1h,f,c
 20857  016316  0012               	return		;funcret
 20858  016318                     __end_of_lp_filter:
 20859                           	opt callstack 0
 20860                           
 20861 ;; *************** function ___flsub *****************
 20862 ;; Defined at:
 20863 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 20864 ;; Parameters:    Size  Location     Type
 20865 ;;  b               4  [STACK] float 
 20866 ;;  a               4  [STACK] float 
 20867 ;; Auto vars:     Size  Location     Type
 20868 ;;		None
 20869 ;; Return value:  Size  Location     Type
 20870 ;;                  4  [STACK] float 
 20871 ;; Registers used:
 20872 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 20873 ;; Tracked objects:
 20874 ;;		On entry : 0/2
 20875 ;;		On exit  : 0/0
 20876 ;;		Unchanged: 0/0
 20877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20882 ;;Total ram usage:        0 bytes
 20883 ;; Hardware stack levels used:    1
 20884 ;; Hardware stack levels required when called:    8
 20885 ;; This function calls:
 20886 ;;		___fladd
 20887 ;; This function is called by:
 20888 ;;		_conv_raw_result
 20889 ;;		_lp_filter
 20890 ;;		_calc_model_data
 20891 ;;		_efgtoa
 20892 ;; This function uses a reentrant model
 20893 ;;
 20894                           
 20895                           	psect	text92
 20896  018610                     __ptext92:
 20897                           	opt callstack 0
 20898  018610                     ___flsub:
 20899                           	opt callstack 15
 20900                           
 20901                           ;stkvar	_a @ sp[(0)+-8]
 20902                           
 20903                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20904                           ;incstack = 0
 20905  018610  0EFB               	movlw	-5
 20906  018612  7EE3               	btg	plusw1,7,c
 20907                           
 20908                           ;stkvar	_a @ sp[(0)+-8]
 20909  018614  0EF8               	movlw	-8
 20910  018616  006F FF8F FFE6     	movff	plusw1,postinc1
 20911  01861C  006F FF8F FFE6     	movff	plusw1,postinc1
 20912  018622  006F FF8F FFE6     	movff	plusw1,postinc1
 20913  018628  006F FF8F FFE6     	movff	plusw1,postinc1
 20914                           
 20915                           ;stkvar	_b @ sp[(-4)+-4]
 20916  01862E  0EF8               	movlw	-8
 20917  018630  006F FF8F FFE6     	movff	plusw1,postinc1
 20918  018636  006F FF8F FFE6     	movff	plusw1,postinc1
 20919  01863C  006F FF8F FFE6     	movff	plusw1,postinc1
 20920  018642  006F FF8F FFE6     	movff	plusw1,postinc1
 20921  018648  EC1D  F097         	call	___fladd	;wreg free
 20922                           
 20923                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 20924  01864C  0EF8               	movlw	248
 20925  01864E  26E1               	addwf	fsr1l,f,c
 20926  018650  0EFF               	movlw	255
 20927  018652  22E2               	addwfc	fsr1h,f,c
 20928  018654  0012               	return		;funcret
 20929  018656                     __end_of___flsub:
 20930                           	opt callstack 0
 20931                           
 20932 ;; *************** function ___fladd *****************
 20933 ;; Defined at:
 20934 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 20935 ;; Parameters:    Size  Location     Type
 20936 ;;  b               4  [STACK] float 
 20937 ;;  a               4  [STACK] float 
 20938 ;; Auto vars:     Size  Location     Type
 20939 ;;  grs             1  [STACK] unsigned char 
 20940 ;;  bexp            1  [STACK] unsigned char 
 20941 ;;  aexp            1  [STACK] unsigned char 
 20942 ;;  signs           1  [STACK] unsigned char 
 20943 ;; Return value:  Size  Location     Type
 20944 ;;                  4  [STACK] unsigned char 
 20945 ;; Registers used:
 20946 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 20947 ;; Tracked objects:
 20948 ;;		On entry : 0/0
 20949 ;;		On exit  : 0/0
 20950 ;;		Unchanged: 0/0
 20951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20956 ;;Total ram usage:        0 bytes
 20957 ;; Hardware stack levels used:    1
 20958 ;; Hardware stack levels required when called:    7
 20959 ;; This function calls:
 20960 ;;		Nothing
 20961 ;; This function is called by:
 20962 ;;		_lp_filter
 20963 ;;		_calc_model_data
 20964 ;;		_calc_bsoc
 20965 ;;		_efgtoa
 20966 ;;		___flsub
 20967 ;; This function uses a reentrant model
 20968 ;;
 20969                           
 20970                           	psect	text93
 20971  012E3A                     __ptext93:
 20972                           	opt callstack 0
 20973  012E3A                     ___fladd:
 20974                           	opt callstack 0
 20975                           
 20976                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20977  012E3A  52E6               	movf	postinc1,f,c
 20978  012E3C  52E6               	movf	postinc1,f,c
 20979  012E3E  52E6               	movf	postinc1,f,c
 20980  012E40  52E6               	movf	postinc1,f,c
 20981                           
 20982                           ;stkvar	_b @ sp[(-4)+-4]
 20983                           
 20984                           ;incstack = 0
 20985  012E42  0EFB               	movlw	251
 20986  012E44  24E1               	addwf	fsr1l,w,c
 20987  012E46  6ED9               	movwf	fsr2l,c
 20988  012E48  0EFF               	movlw	255
 20989  012E4A  20E2               	addwfc	fsr1h,w,c
 20990  012E4C  6EDA               	movwf	fsr2h,c
 20991  012E4E  50DF               	movf	indf2,w,c
 20992  012E50  6E30               	movwf	(btemp+11)^0,c
 20993  012E52  0E80               	movlw	128
 20994  012E54  1630               	andwf	(btemp+11)^0,f,c
 20995                           
 20996                           ;stkvar	_signs @ sp[(-4)+3]
 20997  012E56  0EFF               	movlw	-1
 20998  012E58  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 20999                           
 21000                           ;stkvar	_b @ sp[(-4)+-4]
 21001  012E5E  0EFB               	movlw	251
 21002  012E60  24E1               	addwf	fsr1l,w,c
 21003  012E62  6ED9               	movwf	fsr2l,c
 21004  012E64  0EFF               	movlw	255
 21005  012E66  20E2               	addwfc	fsr1h,w,c
 21006  012E68  6EDA               	movwf	fsr2h,c
 21007  012E6A  50DF               	movf	indf2,w,c
 21008  012E6C  6E30               	movwf	(btemp+11)^0,c
 21009  012E6E  90D8               	bcf	status,0,c
 21010  012E70  3430               	rlcf	(btemp+11)^0,w,c
 21011  012E72  6E2F               	movwf	(btemp+10)^0,c
 21012                           
 21013                           ;stkvar	_bexp @ sp[(-4)+1]
 21014  012E74  0EFD               	movlw	-3
 21015  012E76  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 21016                           
 21017                           ;stkvar	_b @ sp[(-4)+-4]
 21018  012E7C  0EFA               	movlw	250
 21019  012E7E  24E1               	addwf	fsr1l,w,c
 21020  012E80  6ED9               	movwf	fsr2l,c
 21021  012E82  0EFF               	movlw	255
 21022  012E84  20E2               	addwfc	fsr1h,w,c
 21023  012E86  6EDA               	movwf	fsr2h,c
 21024  012E88  AEDF               	btfss	indf2,7,c
 21025  012E8A  D002               	goto	l8116
 21026                           
 21027                           ;stkvar	_bexp @ sp[(-4)+1]
 21028  012E8C  0EFD               	movlw	-3
 21029  012E8E  80E3               	bsf	plusw1,0,c
 21030  012E90                     l8116:
 21031                           
 21032                           ;stkvar	_bexp @ sp[(-4)+1]
 21033  012E90  0EFD               	movlw	-3
 21034  012E92  50E3               	movf	plusw1,w,c
 21035  012E94  B4D8               	btfsc	status,2,c
 21036  012E96  D027               	goto	l8126
 21037                           
 21038                           ;stkvar	_bexp @ sp[(-4)+1]
 21039  012E98  0EFD               	movlw	-3
 21040  012E9A  28E3               	incf	plusw1,w,c
 21041  012E9C  A4D8               	btfss	status,2,c
 21042  012E9E  D018               	goto	l8122
 21043  012EA0  0E00               	movlw	0
 21044  012EA2  6E2D               	movwf	(btemp+8)^0,c
 21045  012EA4  0E00               	movlw	0
 21046  012EA6  6E2E               	movwf	(btemp+9)^0,c
 21047  012EA8  0E00               	movlw	0
 21048  012EAA  6E2F               	movwf	(btemp+10)^0,c
 21049  012EAC  0E00               	movlw	0
 21050  012EAE  6E30               	movwf	(btemp+11)^0,c
 21051                           
 21052                           ;stkvar	_b @ sp[(-4)+-4]
 21053  012EB0  0EF8               	movlw	-8
 21054  012EB2  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 21055  012EB8  0EF9               	movlw	-7
 21056  012EBA  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 21057  012EC0  0EFA               	movlw	-6
 21058  012EC2  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 21059  012EC8  0EFB               	movlw	-5
 21060  012ECA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21061  012ED0                     l8122:
 21062                           
 21063                           ;stkvar	_b @ sp[(-4)+-4]
 21064  012ED0  0EFA               	movlw	-6
 21065  012ED2  8EE3               	bsf	plusw1,7,c
 21066                           
 21067                           ;stkvar	_b @ sp[(-4)+-4]
 21068  012ED4  0EFB               	movlw	251
 21069  012ED6  24E1               	addwf	fsr1l,w,c
 21070  012ED8  6ED9               	movwf	fsr2l,c
 21071  012EDA  0EFF               	movlw	255
 21072  012EDC  20E2               	addwfc	fsr1h,w,c
 21073  012EDE  6EDA               	movwf	fsr2h,c
 21074  012EE0  0E00               	movlw	0
 21075  012EE2  6EDF               	movwf	indf2,c
 21076  012EE4  D018               	goto	l8128
 21077  012EE6                     l8126:
 21078  012EE6  0E00               	movlw	0
 21079  012EE8  6E2D               	movwf	(btemp+8)^0,c
 21080  012EEA  0E00               	movlw	0
 21081  012EEC  6E2E               	movwf	(btemp+9)^0,c
 21082  012EEE  0E00               	movlw	0
 21083  012EF0  6E2F               	movwf	(btemp+10)^0,c
 21084  012EF2  0E00               	movlw	0
 21085  012EF4  6E30               	movwf	(btemp+11)^0,c
 21086                           
 21087                           ;stkvar	_b @ sp[(-4)+-4]
 21088  012EF6  0EF8               	movlw	-8
 21089  012EF8  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 21090  012EFE  0EF9               	movlw	-7
 21091  012F00  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 21092  012F06  0EFA               	movlw	-6
 21093  012F08  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 21094  012F0E  0EFB               	movlw	-5
 21095  012F10  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21096  012F16                     l8128:
 21097                           
 21098                           ;stkvar	_a @ sp[(-4)+-8]
 21099  012F16  0EF7               	movlw	247
 21100  012F18  24E1               	addwf	fsr1l,w,c
 21101  012F1A  6ED9               	movwf	fsr2l,c
 21102  012F1C  0EFF               	movlw	255
 21103  012F1E  20E2               	addwfc	fsr1h,w,c
 21104  012F20  6EDA               	movwf	fsr2h,c
 21105  012F22  50DF               	movf	indf2,w,c
 21106  012F24  6E30               	movwf	(btemp+11)^0,c
 21107  012F26  0E80               	movlw	128
 21108  012F28  1630               	andwf	(btemp+11)^0,f,c
 21109                           
 21110                           ;stkvar	_aexp @ sp[(-4)+2]
 21111  012F2A  0EFE               	movlw	-2
 21112  012F2C  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21113                           
 21114                           ;stkvar	_signs @ sp[(-4)+3]
 21115                           ;stkvar	_aexp @ sp[(-4)+2]
 21116  012F32  50E1               	movf	fsr1l,w,c
 21117  012F34  0FFE               	addlw	-2
 21118  012F36  6ED9               	movwf	fsr2l,c
 21119  012F38  50E2               	movf	fsr1h,w,c
 21120  012F3A  6EDA               	movwf	fsr2h,c
 21121  012F3C  0EFF               	movlw	255
 21122  012F3E  22DA               	addwfc	fsr2h,f,c
 21123  012F40  0EFF               	movlw	-1
 21124  012F42  50E3               	movf	plusw1,w,c
 21125  012F44  18DE               	xorwf	postinc2,w,c
 21126  012F46  B4D8               	btfsc	status,2,c
 21127  012F48  D002               	goto	l8134
 21128                           
 21129                           ;stkvar	_signs @ sp[(-4)+3]
 21130  012F4A  0EFF               	movlw	-1
 21131  012F4C  8CE3               	bsf	plusw1,6,c
 21132  012F4E                     l8134:
 21133                           
 21134                           ;stkvar	_a @ sp[(-4)+-8]
 21135  012F4E  0EF7               	movlw	247
 21136  012F50  24E1               	addwf	fsr1l,w,c
 21137  012F52  6ED9               	movwf	fsr2l,c
 21138  012F54  0EFF               	movlw	255
 21139  012F56  20E2               	addwfc	fsr1h,w,c
 21140  012F58  6EDA               	movwf	fsr2h,c
 21141  012F5A  50DF               	movf	indf2,w,c
 21142  012F5C  6E30               	movwf	(btemp+11)^0,c
 21143  012F5E  90D8               	bcf	status,0,c
 21144  012F60  3430               	rlcf	(btemp+11)^0,w,c
 21145  012F62  6E2F               	movwf	(btemp+10)^0,c
 21146                           
 21147                           ;stkvar	_aexp @ sp[(-4)+2]
 21148  012F64  0EFE               	movlw	-2
 21149  012F66  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 21150                           
 21151                           ;stkvar	_a @ sp[(-4)+-8]
 21152  012F6C  0EF6               	movlw	246
 21153  012F6E  24E1               	addwf	fsr1l,w,c
 21154  012F70  6ED9               	movwf	fsr2l,c
 21155  012F72  0EFF               	movlw	255
 21156  012F74  20E2               	addwfc	fsr1h,w,c
 21157  012F76  6EDA               	movwf	fsr2h,c
 21158  012F78  AEDF               	btfss	indf2,7,c
 21159  012F7A  D002               	goto	l8140
 21160                           
 21161                           ;stkvar	_aexp @ sp[(-4)+2]
 21162  012F7C  0EFE               	movlw	-2
 21163  012F7E  80E3               	bsf	plusw1,0,c
 21164  012F80                     l8140:
 21165                           
 21166                           ;stkvar	_aexp @ sp[(-4)+2]
 21167  012F80  0EFE               	movlw	-2
 21168  012F82  50E3               	movf	plusw1,w,c
 21169  012F84  B4D8               	btfsc	status,2,c
 21170  012F86  D027               	goto	l8150
 21171                           
 21172                           ;stkvar	_aexp @ sp[(-4)+2]
 21173  012F88  0EFE               	movlw	-2
 21174  012F8A  28E3               	incf	plusw1,w,c
 21175  012F8C  A4D8               	btfss	status,2,c
 21176  012F8E  D018               	goto	l8146
 21177  012F90  0E00               	movlw	0
 21178  012F92  6E2D               	movwf	(btemp+8)^0,c
 21179  012F94  0E00               	movlw	0
 21180  012F96  6E2E               	movwf	(btemp+9)^0,c
 21181  012F98  0E00               	movlw	0
 21182  012F9A  6E2F               	movwf	(btemp+10)^0,c
 21183  012F9C  0E00               	movlw	0
 21184  012F9E  6E30               	movwf	(btemp+11)^0,c
 21185                           
 21186                           ;stkvar	_a @ sp[(-4)+-8]
 21187  012FA0  0EF4               	movlw	-12
 21188  012FA2  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 21189  012FA8  0EF5               	movlw	-11
 21190  012FAA  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 21191  012FB0  0EF6               	movlw	-10
 21192  012FB2  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 21193  012FB8  0EF7               	movlw	-9
 21194  012FBA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21195  012FC0                     l8146:
 21196                           
 21197                           ;stkvar	_a @ sp[(-4)+-8]
 21198  012FC0  0EF6               	movlw	-10
 21199  012FC2  8EE3               	bsf	plusw1,7,c
 21200                           
 21201                           ;stkvar	_a @ sp[(-4)+-8]
 21202  012FC4  0EF7               	movlw	247
 21203  012FC6  24E1               	addwf	fsr1l,w,c
 21204  012FC8  6ED9               	movwf	fsr2l,c
 21205  012FCA  0EFF               	movlw	255
 21206  012FCC  20E2               	addwfc	fsr1h,w,c
 21207  012FCE  6EDA               	movwf	fsr2h,c
 21208  012FD0  0E00               	movlw	0
 21209  012FD2  6EDF               	movwf	indf2,c
 21210  012FD4  D018               	goto	l8152
 21211  012FD6                     l8150:
 21212  012FD6  0E00               	movlw	0
 21213  012FD8  6E2D               	movwf	(btemp+8)^0,c
 21214  012FDA  0E00               	movlw	0
 21215  012FDC  6E2E               	movwf	(btemp+9)^0,c
 21216  012FDE  0E00               	movlw	0
 21217  012FE0  6E2F               	movwf	(btemp+10)^0,c
 21218  012FE2  0E00               	movlw	0
 21219  012FE4  6E30               	movwf	(btemp+11)^0,c
 21220                           
 21221                           ;stkvar	_a @ sp[(-4)+-8]
 21222  012FE6  0EF4               	movlw	-12
 21223  012FE8  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 21224  012FEE  0EF5               	movlw	-11
 21225  012FF0  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 21226  012FF6  0EF6               	movlw	-10
 21227  012FF8  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 21228  012FFE  0EF7               	movlw	-9
 21229  013000  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21230  013006                     l8152:
 21231                           
 21232                           ;stkvar	_bexp @ sp[(-4)+1]
 21233                           ;stkvar	_aexp @ sp[(-4)+2]
 21234  013006  50E1               	movf	fsr1l,w,c
 21235  013008  0FFE               	addlw	-2
 21236  01300A  6ED9               	movwf	fsr2l,c
 21237  01300C  50E2               	movf	fsr1h,w,c
 21238  01300E  6EDA               	movwf	fsr2h,c
 21239  013010  0EFF               	movlw	255
 21240  013012  22DA               	addwfc	fsr2h,f,c
 21241  013014  0EFD               	movlw	-3
 21242  013016  50E3               	movf	plusw1,w,c
 21243  013018  5CDE               	subwf	postinc2,w,c
 21244  01301A  B0D8               	btfsc	status,0,c
 21245  01301C  D0A4               	goto	l8188
 21246                           
 21247                           ;stkvar	_signs @ sp[(-4)+3]
 21248  01301E  0EFF               	movlw	-1
 21249  013020  ACE3               	btfss	plusw1,6,c
 21250  013022  D002               	goto	l8158
 21251                           
 21252                           ;stkvar	_signs @ sp[(-4)+3]
 21253  013024  0EFF               	movlw	-1
 21254  013026  7EE3               	btg	plusw1,7,c
 21255  013028                     l8158:
 21256                           
 21257                           ;stkvar	_bexp @ sp[(-4)+1]
 21258                           ;stkvar	_grs @ sp[(-4)+0]
 21259  013028  0EFD               	movlw	-3
 21260  01302A  006F FF8C  F025    	movff	plusw1,btemp
 21261  013030  0EFC               	movlw	-4
 21262  013032  0060  F097  FFE3   	movff	btemp,plusw1
 21263                           
 21264                           ;stkvar	_aexp @ sp[(-4)+2]
 21265                           ;stkvar	_bexp @ sp[(-4)+1]
 21266  013038  0EFE               	movlw	-2
 21267  01303A  006F FF8C  F025    	movff	plusw1,btemp
 21268  013040  0EFD               	movlw	-3
 21269  013042  0060  F097  FFE3   	movff	btemp,plusw1
 21270                           
 21271                           ;stkvar	_grs @ sp[(-4)+0]
 21272                           ;stkvar	_aexp @ sp[(-4)+2]
 21273  013048  0EFC               	movlw	-4
 21274  01304A  006F FF8C  F025    	movff	plusw1,btemp
 21275  013050  0EFE               	movlw	-2
 21276  013052  0060  F097  FFE3   	movff	btemp,plusw1
 21277                           
 21278                           ;stkvar	_b @ sp[(-4)+-4]
 21279                           ;stkvar	_grs @ sp[(-4)+0]
 21280  013058  0EF8               	movlw	-8
 21281  01305A  006F FF8C  F025    	movff	plusw1,btemp
 21282  013060  0EFC               	movlw	-4
 21283  013062  0060  F097  FFE3   	movff	btemp,plusw1
 21284                           
 21285                           ;stkvar	_a @ sp[(-4)+-8]
 21286                           ;stkvar	_b @ sp[(-4)+-4]
 21287  013068  0EF4               	movlw	-12
 21288  01306A  006F FF8C  F025    	movff	plusw1,btemp
 21289  013070  0EF8               	movlw	-8
 21290  013072  0060  F097  FFE3   	movff	btemp,plusw1
 21291                           
 21292                           ;stkvar	_grs @ sp[(-4)+0]
 21293                           ;stkvar	_a @ sp[(-4)+-8]
 21294  013078  0EFC               	movlw	-4
 21295  01307A  006F FF8C  F025    	movff	plusw1,btemp
 21296  013080  0EF4               	movlw	-12
 21297  013082  0060  F097  FFE3   	movff	btemp,plusw1
 21298                           
 21299                           ;stkvar	_b @ sp[(-4)+-4]
 21300  013088  0EF9               	movlw	249
 21301  01308A  24E1               	addwf	fsr1l,w,c
 21302  01308C  6ED9               	movwf	fsr2l,c
 21303  01308E  0EFF               	movlw	255
 21304  013090  20E2               	addwfc	fsr1h,w,c
 21305  013092  6EDA               	movwf	fsr2h,c
 21306  013094  50DF               	movf	indf2,w,c
 21307  013096  6E30               	movwf	(btemp+11)^0,c
 21308                           
 21309                           ;stkvar	_grs @ sp[(-4)+0]
 21310  013098  0EFC               	movlw	-4
 21311  01309A  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21312                           
 21313                           ;stkvar	_a @ sp[(-4)+-8]
 21314  0130A0  0EF5               	movlw	245
 21315  0130A2  24E1               	addwf	fsr1l,w,c
 21316  0130A4  6ED9               	movwf	fsr2l,c
 21317  0130A6  0EFF               	movlw	255
 21318  0130A8  20E2               	addwfc	fsr1h,w,c
 21319  0130AA  6EDA               	movwf	fsr2h,c
 21320                           
 21321                           ;stkvar	_b @ sp[(-4)+-4]
 21322  0130AC  0EF9               	movlw	249
 21323  0130AE  24E1               	addwf	fsr1l,w,c
 21324  0130B0  6EE9               	movwf	fsr0l,c
 21325  0130B2  0EFF               	movlw	255
 21326  0130B4  20E2               	addwfc	fsr1h,w,c
 21327  0130B6  6EEA               	movwf	fsr0h,c
 21328  0130B8  006F FF7F FFEF     	movff	indf2,indf0
 21329                           
 21330                           ;stkvar	_grs @ sp[(-4)+0]
 21331                           ;stkvar	_a @ sp[(-4)+-8]
 21332  0130BE  0EF5               	movlw	245
 21333  0130C0  24E1               	addwf	fsr1l,w,c
 21334  0130C2  6ED9               	movwf	fsr2l,c
 21335  0130C4  0EFF               	movlw	255
 21336  0130C6  20E2               	addwfc	fsr1h,w,c
 21337  0130C8  6EDA               	movwf	fsr2h,c
 21338  0130CA  0EFC               	movlw	-4
 21339  0130CC  006F FF8F FFDF     	movff	plusw1,indf2
 21340                           
 21341                           ;stkvar	_b @ sp[(-4)+-4]
 21342  0130D2  0EFA               	movlw	250
 21343  0130D4  24E1               	addwf	fsr1l,w,c
 21344  0130D6  6ED9               	movwf	fsr2l,c
 21345  0130D8  0EFF               	movlw	255
 21346  0130DA  20E2               	addwfc	fsr1h,w,c
 21347  0130DC  6EDA               	movwf	fsr2h,c
 21348  0130DE  50DF               	movf	indf2,w,c
 21349  0130E0  6E30               	movwf	(btemp+11)^0,c
 21350                           
 21351                           ;stkvar	_grs @ sp[(-4)+0]
 21352  0130E2  0EFC               	movlw	-4
 21353  0130E4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21354                           
 21355                           ;stkvar	_a @ sp[(-4)+-8]
 21356  0130EA  0EF6               	movlw	246
 21357  0130EC  24E1               	addwf	fsr1l,w,c
 21358  0130EE  6ED9               	movwf	fsr2l,c
 21359  0130F0  0EFF               	movlw	255
 21360  0130F2  20E2               	addwfc	fsr1h,w,c
 21361  0130F4  6EDA               	movwf	fsr2h,c
 21362                           
 21363                           ;stkvar	_b @ sp[(-4)+-4]
 21364  0130F6  0EFA               	movlw	250
 21365  0130F8  24E1               	addwf	fsr1l,w,c
 21366  0130FA  6EE9               	movwf	fsr0l,c
 21367  0130FC  0EFF               	movlw	255
 21368  0130FE  20E2               	addwfc	fsr1h,w,c
 21369  013100  6EEA               	movwf	fsr0h,c
 21370  013102  006F FF7F FFEF     	movff	indf2,indf0
 21371                           
 21372                           ;stkvar	_grs @ sp[(-4)+0]
 21373                           ;stkvar	_a @ sp[(-4)+-8]
 21374  013108  0EF6               	movlw	246
 21375  01310A  24E1               	addwf	fsr1l,w,c
 21376  01310C  6ED9               	movwf	fsr2l,c
 21377  01310E  0EFF               	movlw	255
 21378  013110  20E2               	addwfc	fsr1h,w,c
 21379  013112  6EDA               	movwf	fsr2h,c
 21380  013114  0EFC               	movlw	-4
 21381  013116  006F FF8F FFDF     	movff	plusw1,indf2
 21382                           
 21383                           ;stkvar	_b @ sp[(-4)+-4]
 21384  01311C  0EFB               	movlw	251
 21385  01311E  24E1               	addwf	fsr1l,w,c
 21386  013120  6ED9               	movwf	fsr2l,c
 21387  013122  0EFF               	movlw	255
 21388  013124  20E2               	addwfc	fsr1h,w,c
 21389  013126  6EDA               	movwf	fsr2h,c
 21390  013128  50DF               	movf	indf2,w,c
 21391  01312A  6E30               	movwf	(btemp+11)^0,c
 21392                           
 21393                           ;stkvar	_grs @ sp[(-4)+0]
 21394  01312C  0EFC               	movlw	-4
 21395  01312E  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21396                           
 21397                           ;stkvar	_a @ sp[(-4)+-8]
 21398  013134  0EF7               	movlw	247
 21399  013136  24E1               	addwf	fsr1l,w,c
 21400  013138  6ED9               	movwf	fsr2l,c
 21401  01313A  0EFF               	movlw	255
 21402  01313C  20E2               	addwfc	fsr1h,w,c
 21403  01313E  6EDA               	movwf	fsr2h,c
 21404                           
 21405                           ;stkvar	_b @ sp[(-4)+-4]
 21406  013140  0EFB               	movlw	251
 21407  013142  24E1               	addwf	fsr1l,w,c
 21408  013144  6EE9               	movwf	fsr0l,c
 21409  013146  0EFF               	movlw	255
 21410  013148  20E2               	addwfc	fsr1h,w,c
 21411  01314A  6EEA               	movwf	fsr0h,c
 21412  01314C  006F FF7F FFEF     	movff	indf2,indf0
 21413                           
 21414                           ;stkvar	_grs @ sp[(-4)+0]
 21415                           ;stkvar	_a @ sp[(-4)+-8]
 21416  013152  0EF7               	movlw	247
 21417  013154  24E1               	addwf	fsr1l,w,c
 21418  013156  6ED9               	movwf	fsr2l,c
 21419  013158  0EFF               	movlw	255
 21420  01315A  20E2               	addwfc	fsr1h,w,c
 21421  01315C  6EDA               	movwf	fsr2h,c
 21422  01315E  0EFC               	movlw	-4
 21423  013160  006F FF8F FFDF     	movff	plusw1,indf2
 21424  013166                     l8188:
 21425                           
 21426                           ;stkvar	_grs @ sp[(-4)+0]
 21427  013166  0EFC               	movlw	-4
 21428  013168  6AE3               	clrf	plusw1,c
 21429                           
 21430                           ;stkvar	_aexp @ sp[(-4)+2]
 21431  01316A  0EFE               	movlw	-2
 21432  01316C  50E3               	movf	plusw1,w,c
 21433  01316E  6E2F               	movwf	(btemp+10)^0,c
 21434  013170  6A30               	clrf	(btemp+11)^0,c
 21435                           
 21436                           ;stkvar	_bexp @ sp[(-4)+1]
 21437  013172  0EFD               	movlw	-3
 21438  013174  50E3               	movf	plusw1,w,c
 21439  013176  5E2F               	subwf	(btemp+10)^0,f,c
 21440  013178  0E00               	movlw	0
 21441  01317A  5A30               	subwfb	(btemp+11)^0,f,c
 21442  01317C  BE30               	btfsc	(btemp+11)^0,7,c
 21443  01317E  D062               	goto	l8212
 21444  013180  5030               	movf	(btemp+11)^0,w,c
 21445  013182  E104               	bnz	u7450
 21446  013184  0E1A               	movlw	26
 21447  013186  5C2F               	subwf	(btemp+10)^0,w,c
 21448  013188  A0D8               	btfss	status,0,c
 21449  01318A  D05C               	goto	l8212
 21450  01318C                     u7450:
 21451                           
 21452                           ;stkvar	_b @ sp[(-4)+-4]
 21453  01318C  0EF8               	movlw	-8
 21454  01318E  50E3               	movf	plusw1,w,c
 21455  013190  E10A               	bnz	u7461
 21456  013192  0EF9               	movlw	-7
 21457  013194  50E3               	movf	plusw1,w,c
 21458  013196  E107               	bnz	u7461
 21459  013198  0EFA               	movlw	-6
 21460  01319A  50E3               	movf	plusw1,w,c
 21461  01319C  E104               	bnz	u7461
 21462  01319E  0EFB               	movlw	-5
 21463  0131A0  50E3               	movf	plusw1,w,c
 21464  0131A2  B4D8               	btfsc	status,2,c
 21465  0131A4  D003               	goto	u7460
 21466  0131A6                     u7461:
 21467  0131A6  6A30               	clrf	(btemp+11)^0,c
 21468  0131A8  2A30               	incf	(btemp+11)^0,f,c
 21469  0131AA  D001               	goto	u7478
 21470  0131AC                     u7460:
 21471  0131AC  6A30               	clrf	(btemp+11)^0,c
 21472  0131AE                     u7478:
 21473                           
 21474                           ;stkvar	_grs @ sp[(-4)+0]
 21475  0131AE  0EFC               	movlw	-4
 21476  0131B0  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21477                           
 21478                           ;stkvar	_b @ sp[(-4)+-4]
 21479  0131B6  0EF8               	movlw	-8
 21480  0131B8  6AE3               	clrf	plusw1,c
 21481  0131BA  0EF9               	movlw	-7
 21482  0131BC  6AE3               	clrf	plusw1,c
 21483  0131BE  0EFA               	movlw	-6
 21484  0131C0  6AE3               	clrf	plusw1,c
 21485  0131C2  0EFB               	movlw	-5
 21486  0131C4  6AE3               	clrf	plusw1,c
 21487                           
 21488                           ;stkvar	_aexp @ sp[(-4)+2]
 21489                           ;stkvar	_bexp @ sp[(-4)+1]
 21490  0131C6  0EFE               	movlw	-2
 21491  0131C8  006F FF8C  F025    	movff	plusw1,btemp
 21492  0131CE  0EFD               	movlw	-3
 21493  0131D0  0060  F097  FFE3   	movff	btemp,plusw1
 21494  0131D6  D042               	goto	u7510
 21495  0131D8                     l8198:
 21496                           
 21497                           ;stkvar	_grs @ sp[(-4)+0]
 21498  0131D8  0EFC               	movlw	-4
 21499  0131DA  A0E3               	btfss	plusw1,0,c
 21500  0131DC  D00D               	goto	l8202
 21501                           
 21502                           ;stkvar	_grs @ sp[(-4)+0]
 21503  0131DE  0EFC               	movlw	-4
 21504  0131E0  006F FF8C  F030    	movff	plusw1,btemp+11
 21505  0131E6  90D8               	bcf	status,0,c
 21506  0131E8  3230               	rrcf	(btemp+11)^0,f,c
 21507  0131EA  0E01               	movlw	1
 21508  0131EC  1230               	iorwf	(btemp+11)^0,f,c
 21509                           
 21510                           ;stkvar	_grs @ sp[(-4)+0]
 21511  0131EE  0EFC               	movlw	-4
 21512  0131F0  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21513  0131F6  D009               	goto	l8204
 21514  0131F8                     l8202:
 21515                           
 21516                           ;stkvar	_grs @ sp[(-4)+0]
 21517  0131F8  50E1               	movf	fsr1l,w,c
 21518  0131FA  0FFC               	addlw	-4
 21519  0131FC  6ED9               	movwf	fsr2l,c
 21520  0131FE  50E2               	movf	fsr1h,w,c
 21521  013200  6EDA               	movwf	fsr2h,c
 21522  013202  0EFF               	movlw	255
 21523  013204  22DA               	addwfc	fsr2h,f,c
 21524  013206  90D8               	bcf	status,0,c
 21525  013208  32DF               	rrcf	indf2,f,c
 21526  01320A                     l8204:
 21527                           
 21528                           ;stkvar	_b @ sp[(-4)+-4]
 21529  01320A  0EF8               	movlw	-8
 21530  01320C  A0E3               	btfss	plusw1,0,c
 21531  01320E  D002               	goto	l8208
 21532                           
 21533                           ;stkvar	_grs @ sp[(-4)+0]
 21534  013210  0EFC               	movlw	-4
 21535  013212  8EE3               	bsf	plusw1,7,c
 21536  013214                     l8208:
 21537  013214  0E01               	movlw	1
 21538  013216  6E30               	movwf	(btemp+11)^0,c
 21539                           
 21540                           ;stkvar	_b @ sp[(-4)+-4]
 21541  013218  50E1               	movf	fsr1l,w,c
 21542  01321A  0FF8               	addlw	-8
 21543  01321C  6ED9               	movwf	fsr2l,c
 21544  01321E  50E2               	movf	fsr1h,w,c
 21545  013220  6EDA               	movwf	fsr2h,c
 21546  013222  0EFF               	movlw	255
 21547  013224  22DA               	addwfc	fsr2h,f,c
 21548  013226  2830               	incf	(btemp+11)^0,w,c
 21549  013228  52DE               	movf	postinc2,f,c
 21550  01322A  D008               	goto	u7500
 21551  01322C                     u7505:
 21552  01322C  52DE               	movf	postinc2,f,c
 21553  01322E  90D8               	bcf	status,0,c
 21554  013230  BEDC               	btfsc	preinc2,7,c
 21555  013232  80D8               	bsf	status,0,c
 21556  013234  32DD               	rrcf	postdec2,f,c
 21557  013236  32DD               	rrcf	postdec2,f,c
 21558  013238  32DD               	rrcf	postdec2,f,c
 21559  01323A  32DE               	rrcf	postinc2,f,c
 21560  01323C                     u7500:
 21561  01323C  2EE8               	decfsz	wreg,f,c
 21562  01323E  D7F6               	goto	u7505
 21563                           
 21564                           ;stkvar	_bexp @ sp[(-4)+1]
 21565  013240  0EFD               	movlw	-3
 21566  013242  2AE3               	incf	plusw1,f,c
 21567  013244                     l8212:
 21568                           
 21569                           ;stkvar	_aexp @ sp[(-4)+2]
 21570                           ;stkvar	_bexp @ sp[(-4)+1]
 21571  013244  50E1               	movf	fsr1l,w,c
 21572  013246  0FFD               	addlw	-3
 21573  013248  6ED9               	movwf	fsr2l,c
 21574  01324A  50E2               	movf	fsr1h,w,c
 21575  01324C  6EDA               	movwf	fsr2h,c
 21576  01324E  0EFF               	movlw	255
 21577  013250  22DA               	addwfc	fsr2h,f,c
 21578  013252  0EFE               	movlw	-2
 21579  013254  50E3               	movf	plusw1,w,c
 21580  013256  5CDE               	subwf	postinc2,w,c
 21581  013258  A0D8               	btfss	status,0,c
 21582  01325A  D7BE               	goto	l8198
 21583  01325C                     u7510:
 21584                           
 21585                           ;stkvar	_signs @ sp[(-4)+3]
 21586  01325C  0EFF               	movlw	-1
 21587  01325E  BCE3               	btfsc	plusw1,6,c
 21588  013260  D066               	goto	l8240
 21589                           
 21590                           ;stkvar	_bexp @ sp[(-4)+1]
 21591  013262  0EFD               	movlw	-3
 21592  013264  50E3               	movf	plusw1,w,c
 21593  013266  B4D8               	btfsc	status,2,c
 21594  013268  D0F2               	goto	u7610
 21595                           
 21596                           ;stkvar	_a @ sp[(-4)+-8]
 21597                           ;stkvar	_b @ sp[(-4)+-4]
 21598  01326A  0EF8               	movlw	-8
 21599  01326C  50E3               	movf	plusw1,w,c
 21600  01326E  6E25               	movwf	btemp^0,c
 21601  013270  0EF4               	movlw	-12
 21602  013272  50E3               	movf	plusw1,w,c
 21603  013274  2625               	addwf	btemp^0,f,c
 21604  013276  0EF8               	movlw	-8
 21605  013278  0060  F097  FFE3   	movff	btemp,plusw1
 21606  01327E  0EF9               	movlw	-7
 21607  013280  50E3               	movf	plusw1,w,c
 21608  013282  6E25               	movwf	btemp^0,c
 21609  013284  0EF5               	movlw	-11
 21610  013286  50E3               	movf	plusw1,w,c
 21611  013288  2225               	addwfc	btemp^0,f,c
 21612  01328A  0EF9               	movlw	-7
 21613  01328C  0060  F097  FFE3   	movff	btemp,plusw1
 21614  013292  0EFA               	movlw	-6
 21615  013294  50E3               	movf	plusw1,w,c
 21616  013296  6E25               	movwf	btemp^0,c
 21617  013298  0EF6               	movlw	-10
 21618  01329A  50E3               	movf	plusw1,w,c
 21619  01329C  2225               	addwfc	btemp^0,f,c
 21620  01329E  0EFA               	movlw	-6
 21621  0132A0  0060  F097  FFE3   	movff	btemp,plusw1
 21622  0132A6  0EFB               	movlw	-5
 21623  0132A8  50E3               	movf	plusw1,w,c
 21624  0132AA  6E25               	movwf	btemp^0,c
 21625  0132AC  0EF7               	movlw	-9
 21626  0132AE  50E3               	movf	plusw1,w,c
 21627  0132B0  2225               	addwfc	btemp^0,f,c
 21628  0132B2  0EFB               	movlw	-5
 21629  0132B4  0060  F097  FFE3   	movff	btemp,plusw1
 21630                           
 21631                           ;stkvar	_b @ sp[(-4)+-4]
 21632  0132BA  0EFB               	movlw	-5
 21633  0132BC  A0E3               	btfss	plusw1,0,c
 21634  0132BE  D101               	goto	u7650
 21635                           
 21636                           ;stkvar	_grs @ sp[(-4)+0]
 21637  0132C0  0EFC               	movlw	-4
 21638  0132C2  A0E3               	btfss	plusw1,0,c
 21639  0132C4  D00D               	goto	l8230
 21640                           
 21641                           ;stkvar	_grs @ sp[(-4)+0]
 21642  0132C6  0EFC               	movlw	-4
 21643  0132C8  006F FF8C  F030    	movff	plusw1,btemp+11
 21644  0132CE  90D8               	bcf	status,0,c
 21645  0132D0  3230               	rrcf	(btemp+11)^0,f,c
 21646  0132D2  0E01               	movlw	1
 21647  0132D4  1230               	iorwf	(btemp+11)^0,f,c
 21648                           
 21649                           ;stkvar	_grs @ sp[(-4)+0]
 21650  0132D6  0EFC               	movlw	-4
 21651  0132D8  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21652  0132DE  D009               	goto	l8232
 21653  0132E0                     l8230:
 21654                           
 21655                           ;stkvar	_grs @ sp[(-4)+0]
 21656  0132E0  50E1               	movf	fsr1l,w,c
 21657  0132E2  0FFC               	addlw	-4
 21658  0132E4  6ED9               	movwf	fsr2l,c
 21659  0132E6  50E2               	movf	fsr1h,w,c
 21660  0132E8  6EDA               	movwf	fsr2h,c
 21661  0132EA  0EFF               	movlw	255
 21662  0132EC  22DA               	addwfc	fsr2h,f,c
 21663  0132EE  90D8               	bcf	status,0,c
 21664  0132F0  32DF               	rrcf	indf2,f,c
 21665  0132F2                     l8232:
 21666                           
 21667                           ;stkvar	_b @ sp[(-4)+-4]
 21668  0132F2  0EF8               	movlw	-8
 21669  0132F4  A0E3               	btfss	plusw1,0,c
 21670  0132F6  D002               	goto	l8236
 21671                           
 21672                           ;stkvar	_grs @ sp[(-4)+0]
 21673  0132F8  0EFC               	movlw	-4
 21674  0132FA  8EE3               	bsf	plusw1,7,c
 21675  0132FC                     l8236:
 21676  0132FC  0E01               	movlw	1
 21677  0132FE  6E30               	movwf	(btemp+11)^0,c
 21678                           
 21679                           ;stkvar	_b @ sp[(-4)+-4]
 21680  013300  50E1               	movf	fsr1l,w,c
 21681  013302  0FF8               	addlw	-8
 21682  013304  6ED9               	movwf	fsr2l,c
 21683  013306  50E2               	movf	fsr1h,w,c
 21684  013308  6EDA               	movwf	fsr2h,c
 21685  01330A  0EFF               	movlw	255
 21686  01330C  22DA               	addwfc	fsr2h,f,c
 21687  01330E  2830               	incf	(btemp+11)^0,w,c
 21688  013310  52DE               	movf	postinc2,f,c
 21689  013312  D008               	goto	u7570
 21690  013314                     u7575:
 21691  013314  52DE               	movf	postinc2,f,c
 21692  013316  90D8               	bcf	status,0,c
 21693  013318  BEDC               	btfsc	preinc2,7,c
 21694  01331A  80D8               	bsf	status,0,c
 21695  01331C  32DD               	rrcf	postdec2,f,c
 21696  01331E  32DD               	rrcf	postdec2,f,c
 21697  013320  32DD               	rrcf	postdec2,f,c
 21698  013322  32DE               	rrcf	postinc2,f,c
 21699  013324                     u7570:
 21700  013324  2EE8               	decfsz	wreg,f,c
 21701  013326  D7F6               	goto	u7575
 21702                           
 21703                           ;stkvar	_bexp @ sp[(-4)+1]
 21704  013328  0EFD               	movlw	-3
 21705  01332A  2AE3               	incf	plusw1,f,c
 21706  01332C  D0CA               	goto	u7650
 21707  01332E                     l8240:
 21708                           
 21709                           ;stkvar	_a @ sp[(-4)+-8]
 21710                           ;stkvar	_b @ sp[(-4)+-4]
 21711  01332E  50E1               	movf	fsr1l,w,c
 21712  013330  0FF8               	addlw	-8
 21713  013332  6ED9               	movwf	fsr2l,c
 21714  013334  50E2               	movf	fsr1h,w,c
 21715  013336  6EDA               	movwf	fsr2h,c
 21716  013338  0EFF               	movlw	255
 21717  01333A  22DA               	addwfc	fsr2h,f,c
 21718  01333C  0EF4               	movlw	-12
 21719  01333E  50E3               	movf	plusw1,w,c
 21720  013340  5CDE               	subwf	postinc2,w,c
 21721  013342  0EF5               	movlw	-11
 21722  013344  50E3               	movf	plusw1,w,c
 21723  013346  58DE               	subwfb	postinc2,w,c
 21724  013348  0EF6               	movlw	-10
 21725  01334A  50E3               	movf	plusw1,w,c
 21726  01334C  58DE               	subwfb	postinc2,w,c
 21727  01334E  50DE               	movf	postinc2,w,c
 21728  013350  0A80               	xorlw	128
 21729  013352  6E25               	movwf	btemp^0,c
 21730  013354  0EF7               	movlw	-9
 21731  013356  50E3               	movf	plusw1,w,c
 21732  013358  0A80               	xorlw	128
 21733  01335A  5825               	subwfb	btemp^0,w,c
 21734  01335C  B0D8               	btfsc	status,0,c
 21735  01335E  D053               	goto	l8252
 21736                           
 21737                           ;stkvar	_b @ sp[(-4)+-4]
 21738                           ;stkvar	_a @ sp[(-4)+-8]
 21739  013360  0EF4               	movlw	-12
 21740  013362  006F FF8C  F02D    	movff	plusw1,btemp+8
 21741  013368  0EF5               	movlw	-11
 21742  01336A  006F FF8C  F02E    	movff	plusw1,btemp+9
 21743  013370  0EF6               	movlw	-10
 21744  013372  006F FF8C  F02F    	movff	plusw1,btemp+10
 21745  013378  0EF7               	movlw	-9
 21746  01337A  006F FF8C  F030    	movff	plusw1,btemp+11
 21747  013380  0EF8               	movlw	-8
 21748  013382  50E3               	movf	plusw1,w,c
 21749  013384  5E2D               	subwf	(btemp+8)^0,f,c
 21750  013386  0EF9               	movlw	-7
 21751  013388  50E3               	movf	plusw1,w,c
 21752  01338A  5A2E               	subwfb	(btemp+9)^0,f,c
 21753  01338C  0EFA               	movlw	-6
 21754  01338E  50E3               	movf	plusw1,w,c
 21755  013390  5A2F               	subwfb	(btemp+10)^0,f,c
 21756  013392  0EFB               	movlw	-5
 21757  013394  50E3               	movf	plusw1,w,c
 21758  013396  5A30               	subwfb	(btemp+11)^0,f,c
 21759  013398  0EFF               	movlw	255
 21760  01339A  242D               	addwf	(btemp+8)^0,w,c
 21761  01339C  6E29               	movwf	(btemp+4)^0,c
 21762  01339E  0EFF               	movlw	255
 21763  0133A0  202E               	addwfc	(btemp+9)^0,w,c
 21764  0133A2  6E2A               	movwf	(btemp+5)^0,c
 21765  0133A4  0EFF               	movlw	255
 21766  0133A6  202F               	addwfc	(btemp+10)^0,w,c
 21767  0133A8  6E2B               	movwf	(btemp+6)^0,c
 21768  0133AA  0EFF               	movlw	255
 21769  0133AC  2030               	addwfc	(btemp+11)^0,w,c
 21770  0133AE  6E2C               	movwf	(btemp+7)^0,c
 21771                           
 21772                           ;stkvar	_b @ sp[(-4)+-4]
 21773  0133B0  0EF8               	movlw	-8
 21774  0133B2  0060  F0A7  FFE3   	movff	btemp+4,plusw1
 21775  0133B8  0EF9               	movlw	-7
 21776  0133BA  0060  F0AB  FFE3   	movff	btemp+5,plusw1
 21777  0133C0  0EFA               	movlw	-6
 21778  0133C2  0060  F0AF  FFE3   	movff	btemp+6,plusw1
 21779  0133C8  0EFB               	movlw	-5
 21780  0133CA  0060  F0B3  FFE3   	movff	btemp+7,plusw1
 21781                           
 21782                           ;stkvar	_signs @ sp[(-4)+3]
 21783  0133D0  0EFF               	movlw	-1
 21784  0133D2  7EE3               	btg	plusw1,7,c
 21785                           
 21786                           ;stkvar	_grs @ sp[(-4)+0]
 21787  0133D4  0EFC               	movlw	-4
 21788  0133D6  50E3               	movf	plusw1,w,c
 21789  0133D8  0800               	sublw	0
 21790  0133DA  6E30               	movwf	(btemp+11)^0,c
 21791                           
 21792                           ;stkvar	_grs @ sp[(-4)+0]
 21793  0133DC  0EFC               	movlw	-4
 21794  0133DE  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21795                           
 21796                           ;stkvar	_grs @ sp[(-4)+0]
 21797  0133E4  0EFC               	movlw	-4
 21798  0133E6  50E3               	movf	plusw1,w,c
 21799  0133E8  A4D8               	btfss	status,2,c
 21800  0133EA  D020               	goto	l8254
 21801                           
 21802                           ;stkvar	_b @ sp[(-4)+-4]
 21803  0133EC  50E1               	movf	fsr1l,w,c
 21804  0133EE  0FF8               	addlw	-8
 21805  0133F0  6ED9               	movwf	fsr2l,c
 21806  0133F2  50E2               	movf	fsr1h,w,c
 21807  0133F4  6EDA               	movwf	fsr2h,c
 21808  0133F6  0EFF               	movlw	255
 21809  0133F8  22DA               	addwfc	fsr2h,f,c
 21810  0133FA  2ADE               	incf	postinc2,f,c
 21811  0133FC  0E00               	movlw	0
 21812  0133FE  22DE               	addwfc	postinc2,f,c
 21813  013400  22DE               	addwfc	postinc2,f,c
 21814  013402  22DE               	addwfc	postinc2,f,c
 21815  013404  D013               	goto	l8254
 21816  013406                     l8252:
 21817                           
 21818                           ;stkvar	_a @ sp[(-4)+-8]
 21819                           ;stkvar	_b @ sp[(-4)+-4]
 21820  013406  50E1               	movf	fsr1l,w,c
 21821  013408  0FF8               	addlw	-8
 21822  01340A  6ED9               	movwf	fsr2l,c
 21823  01340C  50E2               	movf	fsr1h,w,c
 21824  01340E  6EDA               	movwf	fsr2h,c
 21825  013410  0EFF               	movlw	255
 21826  013412  22DA               	addwfc	fsr2h,f,c
 21827  013414  0EF4               	movlw	-12
 21828  013416  50E3               	movf	plusw1,w,c
 21829  013418  5EDE               	subwf	postinc2,f,c
 21830  01341A  0EF5               	movlw	-11
 21831  01341C  50E3               	movf	plusw1,w,c
 21832  01341E  5ADE               	subwfb	postinc2,f,c
 21833  013420  0EF6               	movlw	-10
 21834  013422  50E3               	movf	plusw1,w,c
 21835  013424  5ADE               	subwfb	postinc2,f,c
 21836  013426  0EF7               	movlw	-9
 21837  013428  50E3               	movf	plusw1,w,c
 21838  01342A  5ADE               	subwfb	postinc2,f,c
 21839  01342C                     l8254:
 21840                           
 21841                           ;stkvar	_b @ sp[(-4)+-4]
 21842  01342C  0EF8               	movlw	-8
 21843  01342E  50E3               	movf	plusw1,w,c
 21844  013430  E145               	bnz	l8276
 21845  013432  0EF9               	movlw	-7
 21846  013434  50E3               	movf	plusw1,w,c
 21847  013436  E142               	bnz	l8276
 21848  013438  0EFA               	movlw	-6
 21849  01343A  50E3               	movf	plusw1,w,c
 21850  01343C  E13F               	bnz	l8276
 21851  01343E  0EFB               	movlw	-5
 21852  013440  50E3               	movf	plusw1,w,c
 21853  013442  A4D8               	btfss	status,2,c
 21854  013444  D03B               	goto	l8276
 21855                           
 21856                           ;stkvar	_grs @ sp[(-4)+0]
 21857  013446  0EFC               	movlw	-4
 21858  013448  50E3               	movf	plusw1,w,c
 21859  01344A  A4D8               	btfss	status,2,c
 21860  01344C  D037               	goto	l8276
 21861  01344E                     u7610:
 21862  01344E  0E00               	movlw	0
 21863  013450  6E25               	movwf	btemp^0,c
 21864  013452  0E00               	movlw	0
 21865  013454  6E26               	movwf	(btemp+1)^0,c
 21866  013456  0E00               	movlw	0
 21867  013458  6E27               	movwf	(btemp+2)^0,c
 21868  01345A  0E00               	movlw	0
 21869  01345C  6E28               	movwf	(btemp+3)^0,c
 21870  01345E  D0C6               	goto	l2750
 21871  013460                     l8262:
 21872                           
 21873                           ;stkvar	_b @ sp[(-4)+-4]
 21874  013460  90D8               	bcf	status,0,c
 21875  013462  0EF8               	movlw	-8
 21876  013464  36E3               	rlcf	plusw1,f,c
 21877  013466  0EF9               	movlw	-7
 21878  013468  36E3               	rlcf	plusw1,f,c
 21879  01346A  0EFA               	movlw	-6
 21880  01346C  36E3               	rlcf	plusw1,f,c
 21881  01346E  0EFB               	movlw	-5
 21882  013470  36E3               	rlcf	plusw1,f,c
 21883                           
 21884                           ;stkvar	_grs @ sp[(-4)+0]
 21885  013472  0EFC               	movlw	-4
 21886  013474  AEE3               	btfss	plusw1,7,c
 21887  013476  D002               	goto	l2762
 21888                           
 21889                           ;stkvar	_b @ sp[(-4)+-4]
 21890  013478  0EF8               	movlw	-8
 21891  01347A  80E3               	bsf	plusw1,0,c
 21892  01347C                     l2762:
 21893                           
 21894                           ;stkvar	_grs @ sp[(-4)+0]
 21895  01347C  0EFC               	movlw	-4
 21896  01347E  A0E3               	btfss	plusw1,0,c
 21897  013480  D00E               	goto	l8270
 21898                           
 21899                           ;stkvar	_grs @ sp[(-4)+0]
 21900  013482  0EFC               	movlw	-4
 21901  013484  006F FF8C  F030    	movff	plusw1,btemp+11
 21902  01348A  90D8               	bcf	status,0,c
 21903  01348C  3430               	rlcf	(btemp+11)^0,w,c
 21904  01348E  6E2F               	movwf	(btemp+10)^0,c
 21905  013490  0E01               	movlw	1
 21906  013492  122F               	iorwf	(btemp+10)^0,f,c
 21907                           
 21908                           ;stkvar	_grs @ sp[(-4)+0]
 21909  013494  0EFC               	movlw	-4
 21910  013496  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 21911  01349C  D009               	goto	l8272
 21912  01349E                     l8270:
 21913                           
 21914                           ;stkvar	_grs @ sp[(-4)+0]
 21915  01349E  50E1               	movf	fsr1l,w,c
 21916  0134A0  0FFC               	addlw	-4
 21917  0134A2  6ED9               	movwf	fsr2l,c
 21918  0134A4  50E2               	movf	fsr1h,w,c
 21919  0134A6  6EDA               	movwf	fsr2h,c
 21920  0134A8  0EFF               	movlw	255
 21921  0134AA  22DA               	addwfc	fsr2h,f,c
 21922  0134AC  90D8               	bcf	status,0,c
 21923  0134AE  36DF               	rlcf	indf2,f,c
 21924  0134B0                     l8272:
 21925                           
 21926                           ;stkvar	_bexp @ sp[(-4)+1]
 21927  0134B0  0EFD               	movlw	-3
 21928  0134B2  50E3               	movf	plusw1,w,c
 21929  0134B4  B4D8               	btfsc	status,2,c
 21930  0134B6  D002               	goto	l8276
 21931                           
 21932                           ;stkvar	_bexp @ sp[(-4)+1]
 21933  0134B8  0EFD               	movlw	-3
 21934  0134BA  06E3               	decf	plusw1,f,c
 21935  0134BC                     l8276:
 21936                           
 21937                           ;stkvar	_b @ sp[(-4)+-4]
 21938  0134BC  0EFA               	movlw	-6
 21939  0134BE  AEE3               	btfss	plusw1,7,c
 21940  0134C0  D7CF               	goto	l8262
 21941  0134C2                     u7650:
 21942                           
 21943                           ;stkvar	_aexp @ sp[(-4)+2]
 21944  0134C2  0EFE               	movlw	-2
 21945  0134C4  6AE3               	clrf	plusw1,c
 21946                           
 21947                           ;stkvar	_grs @ sp[(-4)+0]
 21948  0134C6  0EFC               	movlw	-4
 21949  0134C8  AEE3               	btfss	plusw1,7,c
 21950  0134CA  D00F               	goto	l8290
 21951                           
 21952                           ;stkvar	_grs @ sp[(-4)+0]
 21953  0134CC  0EFC               	movlw	-4
 21954  0134CE  006F FF8C  F030    	movff	plusw1,btemp+11
 21955  0134D4  0E7F               	movlw	127
 21956  0134D6  1630               	andwf	(btemp+11)^0,f,c
 21957  0134D8  B4D8               	btfsc	status,2,c
 21958  0134DA  D004               	goto	l8286
 21959  0134DC                     u7670:
 21960                           
 21961                           ;stkvar	_aexp @ sp[(-4)+2]
 21962  0134DC  0EFE               	movlw	-2
 21963  0134DE  6AE3               	clrf	plusw1,c
 21964  0134E0  2AE3               	incf	plusw1,f,c
 21965  0134E2  D003               	goto	l8290
 21966  0134E4                     l8286:
 21967                           
 21968                           ;stkvar	_b @ sp[(-4)+-4]
 21969  0134E4  0EF8               	movlw	-8
 21970  0134E6  B0E3               	btfsc	plusw1,0,c
 21971  0134E8  D7F9               	goto	u7670
 21972  0134EA                     l8290:
 21973                           
 21974                           ;stkvar	_aexp @ sp[(-4)+2]
 21975  0134EA  0EFE               	movlw	-2
 21976  0134EC  50E3               	movf	plusw1,w,c
 21977  0134EE  B4D8               	btfsc	status,2,c
 21978  0134F0  D02B               	goto	l8302
 21979                           
 21980                           ;stkvar	_b @ sp[(-4)+-4]
 21981  0134F2  50E1               	movf	fsr1l,w,c
 21982  0134F4  0FF8               	addlw	-8
 21983  0134F6  6ED9               	movwf	fsr2l,c
 21984  0134F8  50E2               	movf	fsr1h,w,c
 21985  0134FA  6EDA               	movwf	fsr2h,c
 21986  0134FC  0EFF               	movlw	255
 21987  0134FE  22DA               	addwfc	fsr2h,f,c
 21988  013500  2ADE               	incf	postinc2,f,c
 21989  013502  0E00               	movlw	0
 21990  013504  22DE               	addwfc	postinc2,f,c
 21991  013506  22DE               	addwfc	postinc2,f,c
 21992  013508  22DE               	addwfc	postinc2,f,c
 21993                           
 21994                           ;stkvar	_b @ sp[(-4)+-4]
 21995  01350A  0EFB               	movlw	-5
 21996  01350C  A0E3               	btfss	plusw1,0,c
 21997  01350E  D01C               	goto	l8302
 21998  013510  0E01               	movlw	1
 21999  013512  6E30               	movwf	(btemp+11)^0,c
 22000                           
 22001                           ;stkvar	_b @ sp[(-4)+-4]
 22002  013514  50E1               	movf	fsr1l,w,c
 22003  013516  0FF8               	addlw	-8
 22004  013518  6ED9               	movwf	fsr2l,c
 22005  01351A  50E2               	movf	fsr1h,w,c
 22006  01351C  6EDA               	movwf	fsr2h,c
 22007  01351E  0EFF               	movlw	255
 22008  013520  22DA               	addwfc	fsr2h,f,c
 22009  013522  2830               	incf	(btemp+11)^0,w,c
 22010  013524  52DE               	movf	postinc2,f,c
 22011  013526  D008               	goto	u7710
 22012  013528                     u7715:
 22013  013528  52DE               	movf	postinc2,f,c
 22014  01352A  90D8               	bcf	status,0,c
 22015  01352C  BEDC               	btfsc	preinc2,7,c
 22016  01352E  80D8               	bsf	status,0,c
 22017  013530  32DD               	rrcf	postdec2,f,c
 22018  013532  32DD               	rrcf	postdec2,f,c
 22019  013534  32DD               	rrcf	postdec2,f,c
 22020  013536  32DE               	rrcf	postinc2,f,c
 22021  013538                     u7710:
 22022  013538  2EE8               	decfsz	wreg,f,c
 22023  01353A  D7F6               	goto	u7715
 22024                           
 22025                           ;stkvar	_bexp @ sp[(-4)+1]
 22026  01353C  0EFD               	movlw	-3
 22027  01353E  28E3               	incf	plusw1,w,c
 22028  013540  B4D8               	btfsc	status,2,c
 22029  013542  D002               	goto	l8302
 22030                           
 22031                           ;stkvar	_bexp @ sp[(-4)+1]
 22032  013544  0EFD               	movlw	-3
 22033  013546  2AE3               	incf	plusw1,f,c
 22034  013548                     l8302:
 22035                           
 22036                           ;stkvar	_bexp @ sp[(-4)+1]
 22037  013548  0EFD               	movlw	-3
 22038  01354A  28E3               	incf	plusw1,w,c
 22039  01354C  B4D8               	btfsc	status,2,c
 22040  01354E  D004               	goto	u7740
 22041                           
 22042                           ;stkvar	_bexp @ sp[(-4)+1]
 22043  013550  0EFD               	movlw	-3
 22044  013552  50E3               	movf	plusw1,w,c
 22045  013554  A4D8               	btfss	status,2,c
 22046  013556  D00E               	goto	l8312
 22047  013558                     u7740:
 22048                           
 22049                           ;stkvar	_b @ sp[(-4)+-4]
 22050  013558  0EF8               	movlw	-8
 22051  01355A  6AE3               	clrf	plusw1,c
 22052  01355C  0EF9               	movlw	-7
 22053  01355E  6AE3               	clrf	plusw1,c
 22054  013560  0EFA               	movlw	-6
 22055  013562  6AE3               	clrf	plusw1,c
 22056  013564  0EFB               	movlw	-5
 22057  013566  6AE3               	clrf	plusw1,c
 22058                           
 22059                           ;stkvar	_bexp @ sp[(-4)+1]
 22060  013568  0EFD               	movlw	-3
 22061  01356A  50E3               	movf	plusw1,w,c
 22062  01356C  A4D8               	btfss	status,2,c
 22063  01356E  D002               	goto	l8312
 22064                           
 22065                           ;stkvar	_signs @ sp[(-4)+3]
 22066  013570  0EFF               	movlw	-1
 22067  013572  6AE3               	clrf	plusw1,c
 22068  013574                     l8312:
 22069                           
 22070                           ;stkvar	_bexp @ sp[(-4)+1]
 22071  013574  0EFD               	movlw	-3
 22072  013576  A0E3               	btfss	plusw1,0,c
 22073  013578  D009               	goto	l8316
 22074                           
 22075                           ;stkvar	_b @ sp[(-4)+-4]
 22076  01357A  0EFA               	movlw	250
 22077  01357C  24E1               	addwf	fsr1l,w,c
 22078  01357E  6ED9               	movwf	fsr2l,c
 22079  013580  0EFF               	movlw	255
 22080  013582  20E2               	addwfc	fsr1h,w,c
 22081  013584  6EDA               	movwf	fsr2h,c
 22082  013586  0E00               	movlw	0
 22083  013588  8EDB               	bsf	plusw2,7,c
 22084  01358A  D008               	goto	l8318
 22085  01358C                     l8316:
 22086                           
 22087                           ;stkvar	_b @ sp[(-4)+-4]
 22088  01358C  0EFA               	movlw	250
 22089  01358E  24E1               	addwf	fsr1l,w,c
 22090  013590  6ED9               	movwf	fsr2l,c
 22091  013592  0EFF               	movlw	255
 22092  013594  20E2               	addwfc	fsr1h,w,c
 22093  013596  6EDA               	movwf	fsr2h,c
 22094  013598  0E7F               	movlw	127
 22095  01359A  16DF               	andwf	indf2,f,c
 22096  01359C                     l8318:
 22097                           
 22098                           ;stkvar	_b @ sp[(-4)+-4]
 22099  01359C  0EFB               	movlw	251
 22100  01359E  24E1               	addwf	fsr1l,w,c
 22101  0135A0  6ED9               	movwf	fsr2l,c
 22102  0135A2  0EFF               	movlw	255
 22103  0135A4  20E2               	addwfc	fsr1h,w,c
 22104  0135A6  6EDA               	movwf	fsr2h,c
 22105                           
 22106                           ;stkvar	_bexp @ sp[(-4)+1]
 22107  0135A8  0EFD               	movlw	-3
 22108  0135AA  006F FF8C  F030    	movff	plusw1,btemp+11
 22109  0135B0  90D8               	bcf	status,0,c
 22110  0135B2  3030               	rrcf	(btemp+11)^0,w,c
 22111  0135B4  6EDF               	movwf	indf2,c
 22112                           
 22113                           ;stkvar	_signs @ sp[(-4)+3]
 22114  0135B6  0EFF               	movlw	-1
 22115  0135B8  AEE3               	btfss	plusw1,7,c
 22116  0135BA  D008               	goto	l8324
 22117                           
 22118                           ;stkvar	_b @ sp[(-4)+-4]
 22119  0135BC  0EFB               	movlw	251
 22120  0135BE  24E1               	addwf	fsr1l,w,c
 22121  0135C0  6ED9               	movwf	fsr2l,c
 22122  0135C2  0EFF               	movlw	255
 22123  0135C4  20E2               	addwfc	fsr1h,w,c
 22124  0135C6  6EDA               	movwf	fsr2h,c
 22125  0135C8  0E00               	movlw	0
 22126  0135CA  8EDB               	bsf	plusw2,7,c
 22127  0135CC                     l8324:
 22128                           
 22129                           ;stkvar	_b @ sp[(-4)+-4]
 22130  0135CC  0EF8               	movlw	-8
 22131  0135CE  006F FF8C  F025    	movff	plusw1,btemp
 22132  0135D4  0EF9               	movlw	-7
 22133  0135D6  006F FF8C  F026    	movff	plusw1,btemp+1
 22134  0135DC  0EFA               	movlw	-6
 22135  0135DE  006F FF8C  F027    	movff	plusw1,btemp+2
 22136  0135E4  0EFB               	movlw	-5
 22137  0135E6  006F FF8C  F028    	movff	plusw1,btemp+3
 22138  0135EC                     l2750:
 22139                           
 22140                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 22141  0135EC  0EF4               	movlw	244
 22142  0135EE  26E1               	addwf	fsr1l,f,c
 22143  0135F0  0EFF               	movlw	255
 22144  0135F2  22E2               	addwfc	fsr1h,f,c
 22145  0135F4  0012               	return		;funcret
 22146  0135F6                     __end_of___fladd:
 22147                           	opt callstack 0
 22148                           
 22149 ;; *************** function ___flmul *****************
 22150 ;; Defined at:
 22151 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 22152 ;; Parameters:    Size  Location     Type
 22153 ;;  b               4  [STACK] unsigned char 
 22154 ;;  a               4  [STACK] unsigned char 
 22155 ;; Auto vars:     Size  Location     Type
 22156 ;;  prod            4  [STACK] struct .
 22157 ;;  grs             4  [STACK] unsigned long 
 22158 ;;  temp            2  [STACK] struct .
 22159 ;;  bexp            1  [STACK] unsigned char 
 22160 ;;  aexp            1  [STACK] unsigned char 
 22161 ;;  sign            1  [STACK] unsigned char 
 22162 ;; Return value:  Size  Location     Type
 22163 ;;                  4  [STACK] unsigned char 
 22164 ;; Registers used:
 22165 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22166 ;; Tracked objects:
 22167 ;;		On entry : 0/2
 22168 ;;		On exit  : 0/0
 22169 ;;		Unchanged: 0/0
 22170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22175 ;;Total ram usage:        0 bytes
 22176 ;; Hardware stack levels used:    1
 22177 ;; Hardware stack levels required when called:    7
 22178 ;; This function calls:
 22179 ;;		Nothing
 22180 ;; This function is called by:
 22181 ;;		_conv_raw_result
 22182 ;;		_lp_filter
 22183 ;;		_calc_model_data
 22184 ;;		_efgtoa
 22185 ;; This function uses a reentrant model
 22186 ;;
 22187                           
 22188                           	psect	text94
 22189  012610                     __ptext94:
 22190                           	opt callstack 0
 22191  012610                     ___flmul:
 22192                           	opt callstack 0
 22193                           
 22194                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 22195  012610  0E0D               	movlw	13
 22196  012612  26E1               	addwf	fsr1l,f,c
 22197  012614  0E00               	movlw	0
 22198  012616  22E2               	addwfc	fsr1h,f,c
 22199                           
 22200                           ;stkvar	_b @ sp[(-13)+-4]
 22201                           
 22202                           ;incstack = 0
 22203  012618  0EF2               	movlw	242
 22204  01261A  24E1               	addwf	fsr1l,w,c
 22205  01261C  6ED9               	movwf	fsr2l,c
 22206  01261E  0EFF               	movlw	255
 22207  012620  20E2               	addwfc	fsr1h,w,c
 22208  012622  6EDA               	movwf	fsr2h,c
 22209  012624  50DF               	movf	indf2,w,c
 22210  012626  6E30               	movwf	(btemp+11)^0,c
 22211  012628  0E80               	movlw	128
 22212  01262A  1630               	andwf	(btemp+11)^0,f,c
 22213                           
 22214                           ;stkvar	_sign @ sp[(-13)+12]
 22215  01262C  0EFF               	movlw	-1
 22216  01262E  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 22217                           
 22218                           ;stkvar	_b @ sp[(-13)+-4]
 22219  012634  0EF2               	movlw	242
 22220  012636  24E1               	addwf	fsr1l,w,c
 22221  012638  6ED9               	movwf	fsr2l,c
 22222  01263A  0EFF               	movlw	255
 22223  01263C  20E2               	addwfc	fsr1h,w,c
 22224  01263E  6EDA               	movwf	fsr2h,c
 22225  012640  50DF               	movf	indf2,w,c
 22226  012642  6E30               	movwf	(btemp+11)^0,c
 22227  012644  90D8               	bcf	status,0,c
 22228  012646  3430               	rlcf	(btemp+11)^0,w,c
 22229  012648  6E2F               	movwf	(btemp+10)^0,c
 22230                           
 22231                           ;stkvar	_bexp @ sp[(-13)+10]
 22232  01264A  0EFD               	movlw	-3
 22233  01264C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 22234                           
 22235                           ;stkvar	_b @ sp[(-13)+-4]
 22236  012652  0EF1               	movlw	241
 22237  012654  24E1               	addwf	fsr1l,w,c
 22238  012656  6ED9               	movwf	fsr2l,c
 22239  012658  0EFF               	movlw	255
 22240  01265A  20E2               	addwfc	fsr1h,w,c
 22241  01265C  6EDA               	movwf	fsr2h,c
 22242  01265E  AEDF               	btfss	indf2,7,c
 22243  012660  D002               	goto	l6810
 22244                           
 22245                           ;stkvar	_bexp @ sp[(-13)+10]
 22246  012662  0EFD               	movlw	-3
 22247  012664  80E3               	bsf	plusw1,0,c
 22248  012666                     l6810:
 22249                           
 22250                           ;stkvar	_bexp @ sp[(-13)+10]
 22251  012666  0EFD               	movlw	-3
 22252  012668  50E3               	movf	plusw1,w,c
 22253  01266A  B4D8               	btfsc	status,2,c
 22254  01266C  D01F               	goto	l6818
 22255                           
 22256                           ;stkvar	_bexp @ sp[(-13)+10]
 22257  01266E  0EFD               	movlw	-3
 22258  012670  28E3               	incf	plusw1,w,c
 22259  012672  A4D8               	btfss	status,2,c
 22260  012674  D018               	goto	l6816
 22261  012676  0E00               	movlw	0
 22262  012678  6E2D               	movwf	(btemp+8)^0,c
 22263  01267A  0E00               	movlw	0
 22264  01267C  6E2E               	movwf	(btemp+9)^0,c
 22265  01267E  0E00               	movlw	0
 22266  012680  6E2F               	movwf	(btemp+10)^0,c
 22267  012682  0E00               	movlw	0
 22268  012684  6E30               	movwf	(btemp+11)^0,c
 22269                           
 22270                           ;stkvar	_b @ sp[(-13)+-4]
 22271  012686  0EEF               	movlw	-17
 22272  012688  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 22273  01268E  0EF0               	movlw	-16
 22274  012690  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 22275  012696  0EF1               	movlw	-15
 22276  012698  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 22277  01269E  0EF2               	movlw	-14
 22278  0126A0  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 22279  0126A6                     l6816:
 22280                           
 22281                           ;stkvar	_b @ sp[(-13)+-4]
 22282  0126A6  0EF1               	movlw	-15
 22283  0126A8  8EE3               	bsf	plusw1,7,c
 22284  0126AA  D018               	goto	l6820
 22285  0126AC                     l6818:
 22286  0126AC  0E00               	movlw	0
 22287  0126AE  6E2D               	movwf	(btemp+8)^0,c
 22288  0126B0  0E00               	movlw	0
 22289  0126B2  6E2E               	movwf	(btemp+9)^0,c
 22290  0126B4  0E00               	movlw	0
 22291  0126B6  6E2F               	movwf	(btemp+10)^0,c
 22292  0126B8  0E00               	movlw	0
 22293  0126BA  6E30               	movwf	(btemp+11)^0,c
 22294                           
 22295                           ;stkvar	_b @ sp[(-13)+-4]
 22296  0126BC  0EEF               	movlw	-17
 22297  0126BE  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 22298  0126C4  0EF0               	movlw	-16
 22299  0126C6  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 22300  0126CC  0EF1               	movlw	-15
 22301  0126CE  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 22302  0126D4  0EF2               	movlw	-14
 22303  0126D6  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 22304  0126DC                     l6820:
 22305                           
 22306                           ;stkvar	_a @ sp[(-13)+-8]
 22307  0126DC  0EEE               	movlw	238
 22308  0126DE  24E1               	addwf	fsr1l,w,c
 22309  0126E0  6ED9               	movwf	fsr2l,c
 22310  0126E2  0EFF               	movlw	255
 22311  0126E4  20E2               	addwfc	fsr1h,w,c
 22312  0126E6  6EDA               	movwf	fsr2h,c
 22313  0126E8  50DF               	movf	indf2,w,c
 22314  0126EA  6E30               	movwf	(btemp+11)^0,c
 22315  0126EC  0E80               	movlw	128
 22316  0126EE  1630               	andwf	(btemp+11)^0,f,c
 22317                           
 22318                           ;stkvar	_sign @ sp[(-13)+12]
 22319  0126F0  50E1               	movf	fsr1l,w,c
 22320  0126F2  0FFF               	addlw	-1
 22321  0126F4  6ED9               	movwf	fsr2l,c
 22322  0126F6  50E2               	movf	fsr1h,w,c
 22323  0126F8  6EDA               	movwf	fsr2h,c
 22324  0126FA  0EFF               	movlw	255
 22325  0126FC  22DA               	addwfc	fsr2h,f,c
 22326  0126FE  5030               	movf	(btemp+11)^0,w,c
 22327  012700  1ADF               	xorwf	indf2,f,c
 22328                           
 22329                           ;stkvar	_a @ sp[(-13)+-8]
 22330  012702  0EEE               	movlw	238
 22331  012704  24E1               	addwf	fsr1l,w,c
 22332  012706  6ED9               	movwf	fsr2l,c
 22333  012708  0EFF               	movlw	255
 22334  01270A  20E2               	addwfc	fsr1h,w,c
 22335  01270C  6EDA               	movwf	fsr2h,c
 22336  01270E  50DF               	movf	indf2,w,c
 22337  012710  6E30               	movwf	(btemp+11)^0,c
 22338  012712  90D8               	bcf	status,0,c
 22339  012714  3430               	rlcf	(btemp+11)^0,w,c
 22340  012716  6E2F               	movwf	(btemp+10)^0,c
 22341                           
 22342                           ;stkvar	_aexp @ sp[(-13)+11]
 22343  012718  0EFE               	movlw	-2
 22344  01271A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 22345                           
 22346                           ;stkvar	_a @ sp[(-13)+-8]
 22347  012720  0EED               	movlw	237
 22348  012722  24E1               	addwf	fsr1l,w,c
 22349  012724  6ED9               	movwf	fsr2l,c
 22350  012726  0EFF               	movlw	255
 22351  012728  20E2               	addwfc	fsr1h,w,c
 22352  01272A  6EDA               	movwf	fsr2h,c
 22353  01272C  AEDF               	btfss	indf2,7,c
 22354  01272E  D002               	goto	l6828
 22355                           
 22356                           ;stkvar	_aexp @ sp[(-13)+11]
 22357  012730  0EFE               	movlw	-2
 22358  012732  80E3               	bsf	plusw1,0,c
 22359  012734                     l6828:
 22360                           
 22361                           ;stkvar	_aexp @ sp[(-13)+11]
 22362  012734  0EFE               	movlw	-2
 22363  012736  50E3               	movf	plusw1,w,c
 22364  012738  B4D8               	btfsc	status,2,c
 22365  01273A  D01F               	goto	l6836
 22366                           
 22367                           ;stkvar	_aexp @ sp[(-13)+11]
 22368  01273C  0EFE               	movlw	-2
 22369  01273E  28E3               	incf	plusw1,w,c
 22370  012740  A4D8               	btfss	status,2,c
 22371  012742  D018               	goto	l6834
 22372  012744  0E00               	movlw	0
 22373  012746  6E2D               	movwf	(btemp+8)^0,c
 22374  012748  0E00               	movlw	0
 22375  01274A  6E2E               	movwf	(btemp+9)^0,c
 22376  01274C  0E00               	movlw	0
 22377  01274E  6E2F               	movwf	(btemp+10)^0,c
 22378  012750  0E00               	movlw	0
 22379  012752  6E30               	movwf	(btemp+11)^0,c
 22380                           
 22381                           ;stkvar	_a @ sp[(-13)+-8]
 22382  012754  0EEB               	movlw	-21
 22383  012756  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 22384  01275C  0EEC               	movlw	-20
 22385  01275E  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 22386  012764  0EED               	movlw	-19
 22387  012766  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 22388  01276C  0EEE               	movlw	-18
 22389  01276E  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 22390  012774                     l6834:
 22391                           
 22392                           ;stkvar	_a @ sp[(-13)+-8]
 22393  012774  0EED               	movlw	-19
 22394  012776  8EE3               	bsf	plusw1,7,c
 22395  012778  D018               	goto	l6838
 22396  01277A                     l6836:
 22397  01277A  0E00               	movlw	0
 22398  01277C  6E2D               	movwf	(btemp+8)^0,c
 22399  01277E  0E00               	movlw	0
 22400  012780  6E2E               	movwf	(btemp+9)^0,c
 22401  012782  0E00               	movlw	0
 22402  012784  6E2F               	movwf	(btemp+10)^0,c
 22403  012786  0E00               	movlw	0
 22404  012788  6E30               	movwf	(btemp+11)^0,c
 22405                           
 22406                           ;stkvar	_a @ sp[(-13)+-8]
 22407  01278A  0EEB               	movlw	-21
 22408  01278C  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 22409  012792  0EEC               	movlw	-20
 22410  012794  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 22411  01279A  0EED               	movlw	-19
 22412  01279C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 22413  0127A2  0EEE               	movlw	-18
 22414  0127A4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 22415  0127AA                     l6838:
 22416                           
 22417                           ;stkvar	_aexp @ sp[(-13)+11]
 22418  0127AA  0EFE               	movlw	-2
 22419  0127AC  50E3               	movf	plusw1,w,c
 22420  0127AE  B4D8               	btfsc	status,2,c
 22421  0127B0  D004               	goto	u5360
 22422                           
 22423                           ;stkvar	_bexp @ sp[(-13)+10]
 22424  0127B2  0EFD               	movlw	-3
 22425  0127B4  50E3               	movf	plusw1,w,c
 22426  0127B6  A4D8               	btfss	status,2,c
 22427  0127B8  D009               	goto	l6846
 22428  0127BA                     u5360:
 22429  0127BA  0E00               	movlw	0
 22430  0127BC  6E25               	movwf	btemp^0,c
 22431  0127BE  0E00               	movlw	0
 22432  0127C0  6E26               	movwf	(btemp+1)^0,c
 22433  0127C2  0E00               	movlw	0
 22434  0127C4  6E27               	movwf	(btemp+2)^0,c
 22435  0127C6  0E00               	movlw	0
 22436  0127C8  6E28               	movwf	(btemp+3)^0,c
 22437  0127CA  D332               	goto	l2831
 22438  0127CC                     l6846:
 22439                           
 22440                           ;stkvar	_b @ sp[(-13)+-4]
 22441  0127CC  0EEF               	movlw	-17
 22442  0127CE  006F FF8C  F030    	movff	plusw1,btemp+11
 22443                           
 22444                           ;stkvar	_a @ sp[(-13)+-8]
 22445  0127D4  0EED               	movlw	237
 22446  0127D6  24E1               	addwf	fsr1l,w,c
 22447  0127D8  6ED9               	movwf	fsr2l,c
 22448  0127DA  0EFF               	movlw	255
 22449  0127DC  20E2               	addwfc	fsr1h,w,c
 22450  0127DE  6EDA               	movwf	fsr2h,c
 22451  0127E0  50DF               	movf	indf2,w,c
 22452  0127E2  0230               	mulwf	(btemp+11)^0,c
 22453                           
 22454                           ;stkvar	_temp @ sp[(-13)+8]
 22455  0127E4  0EFB               	movlw	-5
 22456  0127E6  006F FFCF FFE3     	movff	prodl,plusw1
 22457  0127EC  0EFC               	movlw	-4
 22458  0127EE  006F FFD3 FFE3     	movff	prodh,plusw1
 22459                           
 22460                           ;stkvar	_temp @ sp[(-13)+8]
 22461  0127F4  0EFB               	movlw	-5
 22462  0127F6  006F FF8C  F030    	movff	plusw1,btemp+11
 22463  0127FC  0060  F0C0  F029   	movff	btemp+11,btemp+4
 22464  012802  6A2A               	clrf	(btemp+5)^0,c
 22465  012804  6A2B               	clrf	(btemp+6)^0,c
 22466  012806  6A2C               	clrf	(btemp+7)^0,c
 22467                           
 22468                           ;stkvar	_grs @ sp[(-13)+4]
 22469  012808  0EF7               	movlw	-9
 22470  01280A  0060  F0A7  FFE3   	movff	btemp+4,plusw1
 22471  012810  0EF8               	movlw	-8
 22472  012812  0060  F0AB  FFE3   	movff	btemp+5,plusw1
 22473  012818  0EF9               	movlw	-7
 22474  01281A  0060  F0AF  FFE3   	movff	btemp+6,plusw1
 22475  012820  0EFA               	movlw	-6
 22476  012822  0060  F0B3  FFE3   	movff	btemp+7,plusw1
 22477                           
 22478                           ;stkvar	_temp @ sp[(-13)+8]
 22479  012828  0EFC               	movlw	252
 22480  01282A  24E1               	addwf	fsr1l,w,c
 22481  01282C  6ED9               	movwf	fsr2l,c
 22482  01282E  0EFF               	movlw	255
 22483  012830  20E2               	addwfc	fsr1h,w,c
 22484  012832  6EDA               	movwf	fsr2h,c
 22485  012834  50DF               	movf	indf2,w,c
 22486  012836  6E30               	movwf	(btemp+11)^0,c
 22487  012838  0060  F0C0  F029   	movff	btemp+11,btemp+4
 22488  01283E  6A2A               	clrf	(btemp+5)^0,c
 22489  012840  6A2B               	clrf	(btemp+6)^0,c
 22490  012842  6A2C               	clrf	(btemp+7)^0,c
 22491                           
 22492                           ;stkvar	_prod @ sp[(-13)+0]
 22493  012844  0EF3               	movlw	-13
 22494  012846  0060  F0A7  FFE3   	movff	btemp+4,plusw1
 22495  01284C  0EF4               	movlw	-12
 22496  01284E  0060  F0AB  FFE3   	movff	btemp+5,plusw1
 22497  012854  0EF5               	movlw	-11
 22498  012856  0060  F0AF  FFE3   	movff	btemp+6,plusw1
 22499  01285C  0EF6               	movlw	-10
 22500  01285E  0060  F0B3  FFE3   	movff	btemp+7,plusw1
 22501                           
 22502                           ;stkvar	_b @ sp[(-13)+-4]
 22503  012864  0EF0               	movlw	240
 22504  012866  24E1               	addwf	fsr1l,w,c
 22505  012868  6ED9               	movwf	fsr2l,c
 22506  01286A  0EFF               	movlw	255
 22507  01286C  20E2               	addwfc	fsr1h,w,c
 22508  01286E  6EDA               	movwf	fsr2h,c
 22509  012870  50DF               	movf	indf2,w,c
 22510  012872  6E30               	movwf	(btemp+11)^0,c
 22511                           
 22512                           ;stkvar	_a @ sp[(-13)+-8]
 22513  012874  0EEC               	movlw	236
 22514  012876  24E1               	addwf	fsr1l,w,c
 22515  012878  6ED9               	movwf	fsr2l,c
 22516  01287A  0EFF               	movlw	255
 22517  01287C  20E2               	addwfc	fsr1h,w,c
 22518  01287E  6EDA               	movwf	fsr2h,c
 22519  012880  50DF               	movf	indf2,w,c
 22520  012882  0230               	mulwf	(btemp+11)^0,c
 22521                           
 22522                           ;stkvar	_temp @ sp[(-13)+8]
 22523  012884  0EFB               	movlw	-5
 22524  012886  006F FFCF FFE3     	movff	prodl,plusw1
 22525  01288C  0EFC               	movlw	-4
 22526  01288E  006F FFD3 FFE3     	movff	prodh,plusw1
 22527                           
 22528                           ;stkvar	_grs @ sp[(-13)+4]
 22529  012894  50E1               	movf	fsr1l,w,c
 22530  012896  0FF7               	addlw	-9
 22531  012898  6ED9               	movwf	fsr2l,c
 22532  01289A  50E2               	movf	fsr1h,w,c
 22533  01289C  6EDA               	movwf	fsr2h,c
 22534  01289E  0EFF               	movlw	255
 22535  0128A0  22DA               	addwfc	fsr2h,f,c
 22536                           
 22537                           ;stkvar	_temp @ sp[(-13)+8]
 22538  0128A2  0EFB               	movlw	-5
 22539  0128A4  50E3               	movf	plusw1,w,c
 22540  0128A6  26DE               	addwf	postinc2,f,c
 22541  0128A8  0E00               	movlw	0
 22542  0128AA  22DE               	addwfc	postinc2,f,c
 22543  0128AC  22DE               	addwfc	postinc2,f,c
 22544  0128AE  22DE               	addwfc	postinc2,f,c
 22545                           
 22546                           ;stkvar	_prod @ sp[(-13)+0]
 22547  0128B0  50E1               	movf	fsr1l,w,c
 22548  0128B2  0FF3               	addlw	-13
 22549  0128B4  6ED9               	movwf	fsr2l,c
 22550  0128B6  50E2               	movf	fsr1h,w,c
 22551  0128B8  6EDA               	movwf	fsr2h,c
 22552  0128BA  0EFF               	movlw	255
 22553  0128BC  22DA               	addwfc	fsr2h,f,c
 22554                           
 22555                           ;stkvar	_temp @ sp[(-13)+8]
 22556  0128BE  0EFC               	movlw	252
 22557  0128C0  24E1               	addwf	fsr1l,w,c
 22558  0128C2  6EE9               	movwf	fsr0l,c
 22559  0128C4  0EFF               	movlw	255
 22560  0128C6  20E2               	addwfc	fsr1h,w,c
 22561  0128C8  6EEA               	movwf	fsr0h,c
 22562  0128CA  50EF               	movf	indf0,w,c
 22563  0128CC  26DE               	addwf	postinc2,f,c
 22564  0128CE  0E00               	movlw	0
 22565  0128D0  22DE               	addwfc	postinc2,f,c
 22566  0128D2  22DE               	addwfc	postinc2,f,c
 22567  0128D4  22DE               	addwfc	postinc2,f,c
 22568                           
 22569                           ;stkvar	_b @ sp[(-13)+-4]
 22570  0128D6  0EF1               	movlw	241
 22571  0128D8  24E1               	addwf	fsr1l,w,c
 22572  0128DA  6ED9               	movwf	fsr2l,c
 22573  0128DC  0EFF               	movlw	255
 22574  0128DE  20E2               	addwfc	fsr1h,w,c
 22575  0128E0  6EDA               	movwf	fsr2h,c
 22576  0128E2  50DF               	movf	indf2,w,c
 22577  0128E4  6E30               	movwf	(btemp+11)^0,c
 22578                           
 22579                           ;stkvar	_a @ sp[(-13)+-8]
 22580  0128E6  0EEB               	movlw	-21
 22581  0128E8  50E3               	movf	plusw1,w,c
 22582  0128EA  0230               	mulwf	(btemp+11)^0,c
 22583                           
 22584                           ;stkvar	_temp @ sp[(-13)+8]
 22585  0128EC  0EFB               	movlw	-5
 22586  0128EE  006F FFCF FFE3     	movff	prodl,plusw1
 22587  0128F4  0EFC               	movlw	-4
 22588  0128F6  006F FFD3 FFE3     	movff	prodh,plusw1
 22589                           
 22590                           ;stkvar	_grs @ sp[(-13)+4]
 22591  0128FC  50E1               	movf	fsr1l,w,c
 22592  0128FE  0FF7               	addlw	-9
 22593  012900  6ED9               	movwf	fsr2l,c
 22594  012902  50E2               	movf	fsr1h,w,c
 22595  012904  6EDA               	movwf	fsr2h,c
 22596  012906  0EFF               	movlw	255
 22597  012908  22DA               	addwfc	fsr2h,f,c
 22598                           
 22599                           ;stkvar	_temp @ sp[(-13)+8]
 22600  01290A  0EFB               	movlw	-5
 22601  01290C  50E3               	movf	plusw1,w,c
 22602  01290E  26DE               	addwf	postinc2,f,c
 22603  012910  0E00               	movlw	0
 22604  012912  22DE               	addwfc	postinc2,f,c
 22605  012914  22DE               	addwfc	postinc2,f,c
 22606  012916  22DE               	addwfc	postinc2,f,c
 22607                           
 22608                           ;stkvar	_prod @ sp[(-13)+0]
 22609  012918  50E1               	movf	fsr1l,w,c
 22610  01291A  0FF3               	addlw	-13
 22611  01291C  6ED9               	movwf	fsr2l,c
 22612  01291E  50E2               	movf	fsr1h,w,c
 22613  012920  6EDA               	movwf	fsr2h,c
 22614  012922  0EFF               	movlw	255
 22615  012924  22DA               	addwfc	fsr2h,f,c
 22616                           
 22617                           ;stkvar	_temp @ sp[(-13)+8]
 22618  012926  0EFC               	movlw	252
 22619  012928  24E1               	addwf	fsr1l,w,c
 22620  01292A  6EE9               	movwf	fsr0l,c
 22621  01292C  0EFF               	movlw	255
 22622  01292E  20E2               	addwfc	fsr1h,w,c
 22623  012930  6EEA               	movwf	fsr0h,c
 22624  012932  50EF               	movf	indf0,w,c
 22625  012934  26DE               	addwf	postinc2,f,c
 22626  012936  0E00               	movlw	0
 22627  012938  22DE               	addwfc	postinc2,f,c
 22628  01293A  22DE               	addwfc	postinc2,f,c
 22629  01293C  22DE               	addwfc	postinc2,f,c
 22630                           
 22631                           ;stkvar	_grs @ sp[(-13)+4]
 22632  01293E  50E1               	movf	fsr1l,w,c
 22633  012940  0FF7               	addlw	-9
 22634  012942  6ED9               	movwf	fsr2l,c
 22635  012944  50E2               	movf	fsr1h,w,c
 22636  012946  6EDA               	movwf	fsr2h,c
 22637  012948  0EFF               	movlw	255
 22638  01294A  22DA               	addwfc	fsr2h,f,c
 22639  01294C  0E08               	movlw	8
 22640  01294E                     u5375:
 22641  01294E  90D8               	bcf	status,0,c
 22642  012950  36DE               	rlcf	postinc2,f,c
 22643  012952  36DE               	rlcf	postinc2,f,c
 22644  012954  36DE               	rlcf	postinc2,f,c
 22645  012956  36DD               	rlcf	postdec2,f,c
 22646  012958  52DD               	movf	postdec2,f,c
 22647  01295A  52DD               	movf	postdec2,f,c
 22648  01295C  2EE8               	decfsz	wreg,f,c
 22649  01295E  D7F7               	goto	u5375
 22650                           
 22651                           ;stkvar	_b @ sp[(-13)+-4]
 22652  012960  0EF0               	movlw	240
 22653  012962  24E1               	addwf	fsr1l,w,c
 22654  012964  6ED9               	movwf	fsr2l,c
 22655  012966  0EFF               	movlw	255
 22656  012968  20E2               	addwfc	fsr1h,w,c
 22657  01296A  6EDA               	movwf	fsr2h,c
 22658  01296C  50DF               	movf	indf2,w,c
 22659  01296E  6E30               	movwf	(btemp+11)^0,c
 22660                           
 22661                           ;stkvar	_a @ sp[(-13)+-8]
 22662  012970  0EEB               	movlw	-21
 22663  012972  50E3               	movf	plusw1,w,c
 22664  012974  0230               	mulwf	(btemp+11)^0,c
 22665                           
 22666                           ;stkvar	_temp @ sp[(-13)+8]
 22667  012976  0EFB               	movlw	-5
 22668  012978  006F FFCF FFE3     	movff	prodl,plusw1
 22669  01297E  0EFC               	movlw	-4
 22670  012980  006F FFD3 FFE3     	movff	prodh,plusw1
 22671                           
 22672                           ;stkvar	_temp @ sp[(-13)+8]
 22673  012986  0EFB               	movlw	-5
 22674  012988  006F FF8C  F02F    	movff	plusw1,btemp+10
 22675  01298E  0EFC               	movlw	-4
 22676  012990  006F FF8C  F030    	movff	plusw1,btemp+11
 22677                           
 22678                           ;stkvar	_grs @ sp[(-13)+4]
 22679  012996  50E1               	movf	fsr1l,w,c
 22680  012998  0FF7               	addlw	-9
 22681  01299A  6ED9               	movwf	fsr2l,c
 22682  01299C  50E2               	movf	fsr1h,w,c
 22683  01299E  6EDA               	movwf	fsr2h,c
 22684  0129A0  0EFF               	movlw	255
 22685  0129A2  22DA               	addwfc	fsr2h,f,c
 22686  0129A4  502F               	movf	(btemp+10)^0,w,c
 22687  0129A6  26DE               	addwf	postinc2,f,c
 22688  0129A8  5030               	movf	(btemp+11)^0,w,c
 22689  0129AA  22DE               	addwfc	postinc2,f,c
 22690  0129AC  0E00               	movlw	0
 22691  0129AE  22DE               	addwfc	postinc2,f,c
 22692  0129B0  22DE               	addwfc	postinc2,f,c
 22693                           
 22694                           ;stkvar	_b @ sp[(-13)+-4]
 22695  0129B2  0EEF               	movlw	-17
 22696  0129B4  006F FF8C  F030    	movff	plusw1,btemp+11
 22697                           
 22698                           ;stkvar	_a @ sp[(-13)+-8]
 22699  0129BA  0EEC               	movlw	236
 22700  0129BC  24E1               	addwf	fsr1l,w,c
 22701  0129BE  6ED9               	movwf	fsr2l,c
 22702  0129C0  0EFF               	movlw	255
 22703  0129C2  20E2               	addwfc	fsr1h,w,c
 22704  0129C4  6EDA               	movwf	fsr2h,c
 22705  0129C6  50DF               	movf	indf2,w,c
 22706  0129C8  0230               	mulwf	(btemp+11)^0,c
 22707                           
 22708                           ;stkvar	_temp @ sp[(-13)+8]
 22709  0129CA  0EFB               	movlw	-5
 22710  0129CC  006F FFCF FFE3     	movff	prodl,plusw1
 22711  0129D2  0EFC               	movlw	-4
 22712  0129D4  006F FFD3 FFE3     	movff	prodh,plusw1
 22713                           
 22714                           ;stkvar	_temp @ sp[(-13)+8]
 22715  0129DA  0EFB               	movlw	-5
 22716  0129DC  006F FF8C  F02F    	movff	plusw1,btemp+10
 22717  0129E2  0EFC               	movlw	-4
 22718  0129E4  006F FF8C  F030    	movff	plusw1,btemp+11
 22719                           
 22720                           ;stkvar	_grs @ sp[(-13)+4]
 22721  0129EA  50E1               	movf	fsr1l,w,c
 22722  0129EC  0FF7               	addlw	-9
 22723  0129EE  6ED9               	movwf	fsr2l,c
 22724  0129F0  50E2               	movf	fsr1h,w,c
 22725  0129F2  6EDA               	movwf	fsr2h,c
 22726  0129F4  0EFF               	movlw	255
 22727  0129F6  22DA               	addwfc	fsr2h,f,c
 22728  0129F8  502F               	movf	(btemp+10)^0,w,c
 22729  0129FA  26DE               	addwf	postinc2,f,c
 22730  0129FC  5030               	movf	(btemp+11)^0,w,c
 22731  0129FE  22DE               	addwfc	postinc2,f,c
 22732  012A00  0E00               	movlw	0
 22733  012A02  22DE               	addwfc	postinc2,f,c
 22734  012A04  22DE               	addwfc	postinc2,f,c
 22735                           
 22736                           ;stkvar	_grs @ sp[(-13)+4]
 22737  012A06  50E1               	movf	fsr1l,w,c
 22738  012A08  0FF7               	addlw	-9
 22739  012A0A  6ED9               	movwf	fsr2l,c
 22740  012A0C  50E2               	movf	fsr1h,w,c
 22741  012A0E  6EDA               	movwf	fsr2h,c
 22742  012A10  0EFF               	movlw	255
 22743  012A12  22DA               	addwfc	fsr2h,f,c
 22744  012A14  0E08               	movlw	8
 22745  012A16                     u5385:
 22746  012A16  90D8               	bcf	status,0,c
 22747  012A18  36DE               	rlcf	postinc2,f,c
 22748  012A1A  36DE               	rlcf	postinc2,f,c
 22749  012A1C  36DE               	rlcf	postinc2,f,c
 22750  012A1E  36DD               	rlcf	postdec2,f,c
 22751  012A20  52DD               	movf	postdec2,f,c
 22752  012A22  52DD               	movf	postdec2,f,c
 22753  012A24  2EE8               	decfsz	wreg,f,c
 22754  012A26  D7F7               	goto	u5385
 22755                           
 22756                           ;stkvar	_b @ sp[(-13)+-4]
 22757  012A28  0EEF               	movlw	-17
 22758  012A2A  006F FF8C  F030    	movff	plusw1,btemp+11
 22759                           
 22760                           ;stkvar	_a @ sp[(-13)+-8]
 22761  012A30  0EEB               	movlw	-21
 22762  012A32  50E3               	movf	plusw1,w,c
 22763  012A34  0230               	mulwf	(btemp+11)^0,c
 22764                           
 22765                           ;stkvar	_temp @ sp[(-13)+8]
 22766  012A36  0EFB               	movlw	-5
 22767  012A38  006F FFCF FFE3     	movff	prodl,plusw1
 22768  012A3E  0EFC               	movlw	-4
 22769  012A40  006F FFD3 FFE3     	movff	prodh,plusw1
 22770                           
 22771                           ;stkvar	_temp @ sp[(-13)+8]
 22772  012A46  0EFB               	movlw	-5
 22773  012A48  006F FF8C  F02F    	movff	plusw1,btemp+10
 22774  012A4E  0EFC               	movlw	-4
 22775  012A50  006F FF8C  F030    	movff	plusw1,btemp+11
 22776                           
 22777                           ;stkvar	_grs @ sp[(-13)+4]
 22778  012A56  50E1               	movf	fsr1l,w,c
 22779  012A58  0FF7               	addlw	-9
 22780  012A5A  6ED9               	movwf	fsr2l,c
 22781  012A5C  50E2               	movf	fsr1h,w,c
 22782  012A5E  6EDA               	movwf	fsr2h,c
 22783  012A60  0EFF               	movlw	255
 22784  012A62  22DA               	addwfc	fsr2h,f,c
 22785  012A64  502F               	movf	(btemp+10)^0,w,c
 22786  012A66  26DE               	addwf	postinc2,f,c
 22787  012A68  5030               	movf	(btemp+11)^0,w,c
 22788  012A6A  22DE               	addwfc	postinc2,f,c
 22789  012A6C  0E00               	movlw	0
 22790  012A6E  22DE               	addwfc	postinc2,f,c
 22791  012A70  22DE               	addwfc	postinc2,f,c
 22792                           
 22793                           ;stkvar	_b @ sp[(-13)+-4]
 22794  012A72  0EF0               	movlw	240
 22795  012A74  24E1               	addwf	fsr1l,w,c
 22796  012A76  6ED9               	movwf	fsr2l,c
 22797  012A78  0EFF               	movlw	255
 22798  012A7A  20E2               	addwfc	fsr1h,w,c
 22799  012A7C  6EDA               	movwf	fsr2h,c
 22800  012A7E  50DF               	movf	indf2,w,c
 22801  012A80  6E30               	movwf	(btemp+11)^0,c
 22802                           
 22803                           ;stkvar	_a @ sp[(-13)+-8]
 22804  012A82  0EED               	movlw	237
 22805  012A84  24E1               	addwf	fsr1l,w,c
 22806  012A86  6ED9               	movwf	fsr2l,c
 22807  012A88  0EFF               	movlw	255
 22808  012A8A  20E2               	addwfc	fsr1h,w,c
 22809  012A8C  6EDA               	movwf	fsr2h,c
 22810  012A8E  50DF               	movf	indf2,w,c
 22811  012A90  0230               	mulwf	(btemp+11)^0,c
 22812                           
 22813                           ;stkvar	_temp @ sp[(-13)+8]
 22814  012A92  0EFB               	movlw	-5
 22815  012A94  006F FFCF FFE3     	movff	prodl,plusw1
 22816  012A9A  0EFC               	movlw	-4
 22817  012A9C  006F FFD3 FFE3     	movff	prodh,plusw1
 22818                           
 22819                           ;stkvar	_temp @ sp[(-13)+8]
 22820  012AA2  0EFB               	movlw	-5
 22821  012AA4  006F FF8C  F02F    	movff	plusw1,btemp+10
 22822  012AAA  0EFC               	movlw	-4
 22823  012AAC  006F FF8C  F030    	movff	plusw1,btemp+11
 22824                           
 22825                           ;stkvar	_prod @ sp[(-13)+0]
 22826  012AB2  50E1               	movf	fsr1l,w,c
 22827  012AB4  0FF3               	addlw	-13
 22828  012AB6  6ED9               	movwf	fsr2l,c
 22829  012AB8  50E2               	movf	fsr1h,w,c
 22830  012ABA  6EDA               	movwf	fsr2h,c
 22831  012ABC  0EFF               	movlw	255
 22832  012ABE  22DA               	addwfc	fsr2h,f,c
 22833  012AC0  502F               	movf	(btemp+10)^0,w,c
 22834  012AC2  26DE               	addwf	postinc2,f,c
 22835  012AC4  5030               	movf	(btemp+11)^0,w,c
 22836  012AC6  22DE               	addwfc	postinc2,f,c
 22837  012AC8  0E00               	movlw	0
 22838  012ACA  22DE               	addwfc	postinc2,f,c
 22839  012ACC  22DE               	addwfc	postinc2,f,c
 22840                           
 22841                           ;stkvar	_b @ sp[(-13)+-4]
 22842  012ACE  0EF1               	movlw	241
 22843  012AD0  24E1               	addwf	fsr1l,w,c
 22844  012AD2  6ED9               	movwf	fsr2l,c
 22845  012AD4  0EFF               	movlw	255
 22846  012AD6  20E2               	addwfc	fsr1h,w,c
 22847  012AD8  6EDA               	movwf	fsr2h,c
 22848  012ADA  50DF               	movf	indf2,w,c
 22849  012ADC  6E30               	movwf	(btemp+11)^0,c
 22850                           
 22851                           ;stkvar	_a @ sp[(-13)+-8]
 22852  012ADE  0EEC               	movlw	236
 22853  012AE0  24E1               	addwf	fsr1l,w,c
 22854  012AE2  6ED9               	movwf	fsr2l,c
 22855  012AE4  0EFF               	movlw	255
 22856  012AE6  20E2               	addwfc	fsr1h,w,c
 22857  012AE8  6EDA               	movwf	fsr2h,c
 22858  012AEA  50DF               	movf	indf2,w,c
 22859  012AEC  0230               	mulwf	(btemp+11)^0,c
 22860                           
 22861                           ;stkvar	_temp @ sp[(-13)+8]
 22862  012AEE  0EFB               	movlw	-5
 22863  012AF0  006F FFCF FFE3     	movff	prodl,plusw1
 22864  012AF6  0EFC               	movlw	-4
 22865  012AF8  006F FFD3 FFE3     	movff	prodh,plusw1
 22866                           
 22867                           ;stkvar	_temp @ sp[(-13)+8]
 22868  012AFE  0EFB               	movlw	-5
 22869  012B00  006F FF8C  F02F    	movff	plusw1,btemp+10
 22870  012B06  0EFC               	movlw	-4
 22871  012B08  006F FF8C  F030    	movff	plusw1,btemp+11
 22872                           
 22873                           ;stkvar	_prod @ sp[(-13)+0]
 22874  012B0E  50E1               	movf	fsr1l,w,c
 22875  012B10  0FF3               	addlw	-13
 22876  012B12  6ED9               	movwf	fsr2l,c
 22877  012B14  50E2               	movf	fsr1h,w,c
 22878  012B16  6EDA               	movwf	fsr2h,c
 22879  012B18  0EFF               	movlw	255
 22880  012B1A  22DA               	addwfc	fsr2h,f,c
 22881  012B1C  502F               	movf	(btemp+10)^0,w,c
 22882  012B1E  26DE               	addwf	postinc2,f,c
 22883  012B20  5030               	movf	(btemp+11)^0,w,c
 22884  012B22  22DE               	addwfc	postinc2,f,c
 22885  012B24  0E00               	movlw	0
 22886  012B26  22DE               	addwfc	postinc2,f,c
 22887  012B28  22DE               	addwfc	postinc2,f,c
 22888                           
 22889                           ;stkvar	_b @ sp[(-13)+-4]
 22890  012B2A  0EF1               	movlw	241
 22891  012B2C  24E1               	addwf	fsr1l,w,c
 22892  012B2E  6ED9               	movwf	fsr2l,c
 22893  012B30  0EFF               	movlw	255
 22894  012B32  20E2               	addwfc	fsr1h,w,c
 22895  012B34  6EDA               	movwf	fsr2h,c
 22896  012B36  50DF               	movf	indf2,w,c
 22897  012B38  6E30               	movwf	(btemp+11)^0,c
 22898                           
 22899                           ;stkvar	_a @ sp[(-13)+-8]
 22900  012B3A  0EED               	movlw	237
 22901  012B3C  24E1               	addwf	fsr1l,w,c
 22902  012B3E  6ED9               	movwf	fsr2l,c
 22903  012B40  0EFF               	movlw	255
 22904  012B42  20E2               	addwfc	fsr1h,w,c
 22905  012B44  6EDA               	movwf	fsr2h,c
 22906  012B46  50DF               	movf	indf2,w,c
 22907  012B48  0230               	mulwf	(btemp+11)^0,c
 22908                           
 22909                           ;stkvar	_temp @ sp[(-13)+8]
 22910  012B4A  0EFB               	movlw	-5
 22911  012B4C  006F FFCF FFE3     	movff	prodl,plusw1
 22912  012B52  0EFC               	movlw	-4
 22913  012B54  006F FFD3 FFE3     	movff	prodh,plusw1
 22914                           
 22915                           ;stkvar	_temp @ sp[(-13)+8]
 22916  012B5A  0EFB               	movlw	-5
 22917  012B5C  006F FF8C  F02F    	movff	plusw1,btemp+10
 22918  012B62  0EFC               	movlw	-4
 22919  012B64  006F FF8C  F030    	movff	plusw1,btemp+11
 22920  012B6A  502F               	movf	(btemp+10)^0,w,c
 22921  012B6C  6E29               	movwf	(btemp+4)^0,c
 22922  012B6E  5030               	movf	(btemp+11)^0,w,c
 22923  012B70  6E2A               	movwf	(btemp+5)^0,c
 22924  012B72  6A2B               	clrf	(btemp+6)^0,c
 22925  012B74  6A2C               	clrf	(btemp+7)^0,c
 22926  012B76  0060  F0AC  F02C   	movff	btemp+6,btemp+7
 22927  012B7C  0060  F0A8  F02B   	movff	btemp+5,btemp+6
 22928  012B82  0060  F0A4  F02A   	movff	btemp+4,btemp+5
 22929  012B88  6A29               	clrf	(btemp+4)^0,c
 22930                           
 22931                           ;stkvar	_prod @ sp[(-13)+0]
 22932  012B8A  50E1               	movf	fsr1l,w,c
 22933  012B8C  0FF3               	addlw	-13
 22934  012B8E  6ED9               	movwf	fsr2l,c
 22935  012B90  50E2               	movf	fsr1h,w,c
 22936  012B92  6EDA               	movwf	fsr2h,c
 22937  012B94  0EFF               	movlw	255
 22938  012B96  22DA               	addwfc	fsr2h,f,c
 22939  012B98  5029               	movf	(btemp+4)^0,w,c
 22940  012B9A  26DE               	addwf	postinc2,f,c
 22941  012B9C  502A               	movf	(btemp+5)^0,w,c
 22942  012B9E  22DE               	addwfc	postinc2,f,c
 22943  012BA0  502B               	movf	(btemp+6)^0,w,c
 22944  012BA2  22DE               	addwfc	postinc2,f,c
 22945  012BA4  502C               	movf	(btemp+7)^0,w,c
 22946  012BA6  22DE               	addwfc	postinc2,f,c
 22947                           
 22948                           ;stkvar	_prod @ sp[(-13)+0]
 22949  012BA8  50E1               	movf	fsr1l,w,c
 22950  012BAA  0FF3               	addlw	-13
 22951  012BAC  6ED9               	movwf	fsr2l,c
 22952  012BAE  50E2               	movf	fsr1h,w,c
 22953  012BB0  6EDA               	movwf	fsr2h,c
 22954  012BB2  0EFF               	movlw	255
 22955  012BB4  22DA               	addwfc	fsr2h,f,c
 22956                           
 22957                           ;stkvar	_grs @ sp[(-13)+4]
 22958  012BB6  0EFA               	movlw	250
 22959  012BB8  24E1               	addwf	fsr1l,w,c
 22960  012BBA  6EE9               	movwf	fsr0l,c
 22961  012BBC  0EFF               	movlw	255
 22962  012BBE  20E2               	addwfc	fsr1h,w,c
 22963  012BC0  6EEA               	movwf	fsr0h,c
 22964  012BC2  50EF               	movf	indf0,w,c
 22965  012BC4  26DE               	addwf	postinc2,f,c
 22966  012BC6  0E00               	movlw	0
 22967  012BC8  22DE               	addwfc	postinc2,f,c
 22968  012BCA  22DE               	addwfc	postinc2,f,c
 22969  012BCC  22DE               	addwfc	postinc2,f,c
 22970                           
 22971                           ;stkvar	_grs @ sp[(-13)+4]
 22972  012BCE  50E1               	movf	fsr1l,w,c
 22973  012BD0  0FF7               	addlw	-9
 22974  012BD2  6ED9               	movwf	fsr2l,c
 22975  012BD4  50E2               	movf	fsr1h,w,c
 22976  012BD6  6EDA               	movwf	fsr2h,c
 22977  012BD8  0EFF               	movlw	255
 22978  012BDA  22DA               	addwfc	fsr2h,f,c
 22979  012BDC  0E08               	movlw	8
 22980  012BDE                     u5395:
 22981  012BDE  90D8               	bcf	status,0,c
 22982  012BE0  36DE               	rlcf	postinc2,f,c
 22983  012BE2  36DE               	rlcf	postinc2,f,c
 22984  012BE4  36DE               	rlcf	postinc2,f,c
 22985  012BE6  36DD               	rlcf	postdec2,f,c
 22986  012BE8  52DD               	movf	postdec2,f,c
 22987  012BEA  52DD               	movf	postdec2,f,c
 22988  012BEC  2EE8               	decfsz	wreg,f,c
 22989  012BEE  D7F7               	goto	u5395
 22990  012BF0  0E82               	movlw	130
 22991  012BF2  6E2F               	movwf	(btemp+10)^0,c
 22992  012BF4  0EFF               	movlw	255
 22993  012BF6  6E30               	movwf	(btemp+11)^0,c
 22994                           
 22995                           ;stkvar	_bexp @ sp[(-13)+10]
 22996  012BF8  0EFD               	movlw	-3
 22997  012BFA  50E3               	movf	plusw1,w,c
 22998  012BFC  6E2D               	movwf	(btemp+8)^0,c
 22999  012BFE  6A2E               	clrf	(btemp+9)^0,c
 23000                           
 23001                           ;stkvar	_aexp @ sp[(-13)+11]
 23002  012C00  0EFE               	movlw	-2
 23003  012C02  50E3               	movf	plusw1,w,c
 23004  012C04  262D               	addwf	(btemp+8)^0,f,c
 23005  012C06  0E00               	movlw	0
 23006  012C08  222E               	addwfc	(btemp+9)^0,f,c
 23007  012C0A  502F               	movf	(btemp+10)^0,w,c
 23008  012C0C  262D               	addwf	(btemp+8)^0,f,c
 23009  012C0E  5030               	movf	(btemp+11)^0,w,c
 23010  012C10  222E               	addwfc	(btemp+9)^0,f,c
 23011                           
 23012                           ;stkvar	_temp @ sp[(-13)+8]
 23013  012C12  0EFB               	movlw	-5
 23014  012C14  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 23015  012C1A  0EFC               	movlw	-4
 23016  012C1C  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 23017  012C22  D021               	goto	l6908
 23018  012C24                     l6898:
 23019                           
 23020                           ;stkvar	_prod @ sp[(-13)+0]
 23021  012C24  90D8               	bcf	status,0,c
 23022  012C26  0EF3               	movlw	-13
 23023  012C28  36E3               	rlcf	plusw1,f,c
 23024  012C2A  0EF4               	movlw	-12
 23025  012C2C  36E3               	rlcf	plusw1,f,c
 23026  012C2E  0EF5               	movlw	-11
 23027  012C30  36E3               	rlcf	plusw1,f,c
 23028  012C32  0EF6               	movlw	-10
 23029  012C34  36E3               	rlcf	plusw1,f,c
 23030                           
 23031                           ;stkvar	_grs @ sp[(-13)+4]
 23032  012C36  0EFA               	movlw	-6
 23033  012C38  AEE3               	btfss	plusw1,7,c
 23034  012C3A  D002               	goto	l6904
 23035                           
 23036                           ;stkvar	_prod @ sp[(-13)+0]
 23037  012C3C  0EF3               	movlw	-13
 23038  012C3E  80E3               	bsf	plusw1,0,c
 23039  012C40                     l6904:
 23040                           
 23041                           ;stkvar	_grs @ sp[(-13)+4]
 23042  012C40  90D8               	bcf	status,0,c
 23043  012C42  0EF7               	movlw	-9
 23044  012C44  36E3               	rlcf	plusw1,f,c
 23045  012C46  0EF8               	movlw	-8
 23046  012C48  36E3               	rlcf	plusw1,f,c
 23047  012C4A  0EF9               	movlw	-7
 23048  012C4C  36E3               	rlcf	plusw1,f,c
 23049  012C4E  0EFA               	movlw	-6
 23050  012C50  36E3               	rlcf	plusw1,f,c
 23051                           
 23052                           ;stkvar	_temp @ sp[(-13)+8]
 23053  012C52  50E1               	movf	fsr1l,w,c
 23054  012C54  0FFB               	addlw	-5
 23055  012C56  6ED9               	movwf	fsr2l,c
 23056  012C58  50E2               	movf	fsr1h,w,c
 23057  012C5A  6EDA               	movwf	fsr2h,c
 23058  012C5C  0EFF               	movlw	255
 23059  012C5E  22DA               	addwfc	fsr2h,f,c
 23060  012C60  06DE               	decf	postinc2,f,c
 23061  012C62  0E00               	movlw	0
 23062  012C64  5ADD               	subwfb	postdec2,f,c
 23063  012C66                     l6908:
 23064                           
 23065                           ;stkvar	_prod @ sp[(-13)+0]
 23066  012C66  0EF5               	movlw	-11
 23067  012C68  AEE3               	btfss	plusw1,7,c
 23068  012C6A  D7DC               	goto	l6898
 23069                           
 23070                           ;stkvar	_aexp @ sp[(-13)+11]
 23071  012C6C  0EFE               	movlw	-2
 23072  012C6E  6AE3               	clrf	plusw1,c
 23073                           
 23074                           ;stkvar	_grs @ sp[(-13)+4]
 23075  012C70  0EFA               	movlw	-6
 23076  012C72  AEE3               	btfss	plusw1,7,c
 23077  012C74  D020               	goto	l6922
 23078                           
 23079                           ;stkvar	_grs @ sp[(-13)+4]
 23080  012C76  50E1               	movf	fsr1l,w,c
 23081  012C78  0FF7               	addlw	-9
 23082  012C7A  6ED9               	movwf	fsr2l,c
 23083  012C7C  50E2               	movf	fsr1h,w,c
 23084  012C7E  6EDA               	movwf	fsr2h,c
 23085  012C80  0EFF               	movlw	255
 23086  012C82  22DA               	addwfc	fsr2h,f,c
 23087  012C84  0EFF               	movlw	255
 23088  012C86  14DE               	andwf	postinc2,w,c
 23089  012C88  6E2D               	movwf	(btemp+8)^0,c
 23090  012C8A  0EFF               	movlw	255
 23091  012C8C  14DE               	andwf	postinc2,w,c
 23092  012C8E  6E2E               	movwf	(btemp+9)^0,c
 23093  012C90  0EFF               	movlw	255
 23094  012C92  14DE               	andwf	postinc2,w,c
 23095  012C94  6E2F               	movwf	(btemp+10)^0,c
 23096  012C96  0E7F               	movlw	127
 23097  012C98  14DE               	andwf	postinc2,w,c
 23098  012C9A  6E30               	movwf	(btemp+11)^0,c
 23099  012C9C  502D               	movf	(btemp+8)^0,w,c
 23100  012C9E  102E               	iorwf	(btemp+9)^0,w,c
 23101  012CA0  102F               	iorwf	(btemp+10)^0,w,c
 23102  012CA2  1030               	iorwf	(btemp+11)^0,w,c
 23103  012CA4  B4D8               	btfsc	status,2,c
 23104  012CA6  D004               	goto	l6918
 23105  012CA8                     u5430:
 23106                           
 23107                           ;stkvar	_aexp @ sp[(-13)+11]
 23108  012CA8  0EFE               	movlw	-2
 23109  012CAA  6AE3               	clrf	plusw1,c
 23110  012CAC  2AE3               	incf	plusw1,f,c
 23111  012CAE  D003               	goto	l6922
 23112  012CB0                     l6918:
 23113                           
 23114                           ;stkvar	_prod @ sp[(-13)+0]
 23115  012CB0  0EF3               	movlw	-13
 23116  012CB2  B0E3               	btfsc	plusw1,0,c
 23117  012CB4  D7F9               	goto	u5430
 23118  012CB6                     l6922:
 23119                           
 23120                           ;stkvar	_aexp @ sp[(-13)+11]
 23121  012CB6  0EFE               	movlw	-2
 23122  012CB8  50E3               	movf	plusw1,w,c
 23123  012CBA  B4D8               	btfsc	status,2,c
 23124  012CBC  D036               	goto	l6932
 23125                           
 23126                           ;stkvar	_prod @ sp[(-13)+0]
 23127  012CBE  50E1               	movf	fsr1l,w,c
 23128  012CC0  0FF3               	addlw	-13
 23129  012CC2  6ED9               	movwf	fsr2l,c
 23130  012CC4  50E2               	movf	fsr1h,w,c
 23131  012CC6  6EDA               	movwf	fsr2h,c
 23132  012CC8  0EFF               	movlw	255
 23133  012CCA  22DA               	addwfc	fsr2h,f,c
 23134  012CCC  2ADE               	incf	postinc2,f,c
 23135  012CCE  0E00               	movlw	0
 23136  012CD0  22DE               	addwfc	postinc2,f,c
 23137  012CD2  22DE               	addwfc	postinc2,f,c
 23138  012CD4  22DE               	addwfc	postinc2,f,c
 23139                           
 23140                           ;stkvar	_prod @ sp[(-13)+0]
 23141  012CD6  0EF6               	movlw	-10
 23142  012CD8  A0E3               	btfss	plusw1,0,c
 23143  012CDA  D027               	goto	l6932
 23144  012CDC  0E01               	movlw	1
 23145  012CDE  6E30               	movwf	(btemp+11)^0,c
 23146                           
 23147                           ;stkvar	_prod @ sp[(-13)+0]
 23148  012CE0  50E1               	movf	fsr1l,w,c
 23149  012CE2  0FF3               	addlw	-13
 23150  012CE4  6ED9               	movwf	fsr2l,c
 23151  012CE6  50E2               	movf	fsr1h,w,c
 23152  012CE8  6EDA               	movwf	fsr2h,c
 23153  012CEA  0EFF               	movlw	255
 23154  012CEC  22DA               	addwfc	fsr2h,f,c
 23155  012CEE  2830               	incf	(btemp+11)^0,w,c
 23156  012CF0  52DE               	movf	postinc2,f,c
 23157  012CF2  D008               	goto	u5470
 23158  012CF4                     u5475:
 23159  012CF4  52DE               	movf	postinc2,f,c
 23160  012CF6  90D8               	bcf	status,0,c
 23161  012CF8  BEDC               	btfsc	preinc2,7,c
 23162  012CFA  80D8               	bsf	status,0,c
 23163  012CFC  32DD               	rrcf	postdec2,f,c
 23164  012CFE  32DD               	rrcf	postdec2,f,c
 23165  012D00  32DD               	rrcf	postdec2,f,c
 23166  012D02  32DE               	rrcf	postinc2,f,c
 23167  012D04                     u5470:
 23168  012D04  2EE8               	decfsz	wreg,f,c
 23169  012D06  D7F6               	goto	u5475
 23170                           
 23171                           ;stkvar	_temp @ sp[(-13)+8]
 23172  012D08  0EFB               	movlw	-5
 23173  012D0A  50E3               	movf	plusw1,w,c
 23174  012D0C  0F01               	addlw	1
 23175  012D0E  6E25               	movwf	btemp^0,c
 23176  012D10  0EFB               	movlw	-5
 23177  012D12  0060  F097  FFE3   	movff	btemp,plusw1
 23178  012D18  6A25               	clrf	btemp^0,c
 23179  012D1A  0EFC               	movlw	-4
 23180  012D1C  50E3               	movf	plusw1,w,c
 23181  012D1E  2025               	addwfc	btemp^0,w,c
 23182  012D20  6E25               	movwf	btemp^0,c
 23183  012D22  0EFC               	movlw	-4
 23184  012D24  0060  F097  FFE3   	movff	btemp,plusw1
 23185  012D2A                     l6932:
 23186                           
 23187                           ;stkvar	_temp @ sp[(-13)+8]
 23188  012D2A  0EFC               	movlw	-4
 23189  012D2C  BEE3               	btfsc	plusw1,7,c
 23190  012D2E  D020               	goto	l6936
 23191  012D30  0EFC               	movlw	-4
 23192  012D32  50E3               	movf	plusw1,w,c
 23193  012D34  E104               	bnz	u5480
 23194  012D36  0EFB               	movlw	-5
 23195  012D38  28E3               	incf	plusw1,w,c
 23196  012D3A  A0D8               	btfss	status,0,c
 23197  012D3C  D019               	goto	l6936
 23198  012D3E                     u5480:
 23199  012D3E  0E00               	movlw	0
 23200  012D40  6E2D               	movwf	(btemp+8)^0,c
 23201  012D42  0E00               	movlw	0
 23202  012D44  6E2E               	movwf	(btemp+9)^0,c
 23203  012D46  0E80               	movlw	128
 23204  012D48  6E2F               	movwf	(btemp+10)^0,c
 23205  012D4A  0E7F               	movlw	127
 23206  012D4C  6E30               	movwf	(btemp+11)^0,c
 23207                           
 23208                           ;stkvar	_prod @ sp[(-13)+0]
 23209  012D4E  0EF3               	movlw	-13
 23210  012D50  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 23211  012D56  0EF4               	movlw	-12
 23212  012D58  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 23213  012D5E  0EF5               	movlw	-11
 23214  012D60  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 23215  012D66  0EF6               	movlw	-10
 23216  012D68  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 23217  012D6E  D044               	goto	l6952
 23218  012D70                     l6936:
 23219                           
 23220                           ;stkvar	_temp @ sp[(-13)+8]
 23221  012D70  0EFC               	movlw	-4
 23222  012D72  BEE3               	btfsc	plusw1,7,c
 23223  012D74  D007               	goto	u5490
 23224  012D76  0EFC               	movlw	-4
 23225  012D78  50E3               	movf	plusw1,w,c
 23226  012D7A  E10F               	bnz	l6942
 23227  012D7C  0EFB               	movlw	-5
 23228  012D7E  04E3               	decf	plusw1,w,c
 23229  012D80  B0D8               	btfsc	status,0,c
 23230  012D82  D00B               	goto	l6942
 23231  012D84                     u5490:
 23232                           
 23233                           ;stkvar	_prod @ sp[(-13)+0]
 23234  012D84  0EF3               	movlw	-13
 23235  012D86  6AE3               	clrf	plusw1,c
 23236  012D88  0EF4               	movlw	-12
 23237  012D8A  6AE3               	clrf	plusw1,c
 23238  012D8C  0EF5               	movlw	-11
 23239  012D8E  6AE3               	clrf	plusw1,c
 23240  012D90  0EF6               	movlw	-10
 23241  012D92  6AE3               	clrf	plusw1,c
 23242                           
 23243                           ;stkvar	_sign @ sp[(-13)+12]
 23244  012D94  0EFF               	movlw	-1
 23245  012D96  6AE3               	clrf	plusw1,c
 23246  012D98  D02F               	goto	l6952
 23247  012D9A                     l6942:
 23248                           
 23249                           ;stkvar	_temp @ sp[(-13)+8]
 23250                           ;stkvar	_bexp @ sp[(-13)+10]
 23251  012D9A  0EFB               	movlw	-5
 23252  012D9C  006F FF8C  F025    	movff	plusw1,btemp
 23253  012DA2  0EFD               	movlw	-3
 23254  012DA4  0060  F097  FFE3   	movff	btemp,plusw1
 23255                           
 23256                           ;stkvar	_prod @ sp[(-13)+0]
 23257  012DAA  50E1               	movf	fsr1l,w,c
 23258  012DAC  0FF3               	addlw	-13
 23259  012DAE  6ED9               	movwf	fsr2l,c
 23260  012DB0  50E2               	movf	fsr1h,w,c
 23261  012DB2  6EDA               	movwf	fsr2h,c
 23262  012DB4  0EFF               	movlw	255
 23263  012DB6  22DA               	addwfc	fsr2h,f,c
 23264  012DB8  0EFF               	movlw	255
 23265  012DBA  16DE               	andwf	postinc2,f,c
 23266  012DBC  0EFF               	movlw	255
 23267  012DBE  16DE               	andwf	postinc2,f,c
 23268  012DC0  0E7F               	movlw	127
 23269  012DC2  16DE               	andwf	postinc2,f,c
 23270  012DC4  0E00               	movlw	0
 23271  012DC6  16DE               	andwf	postinc2,f,c
 23272                           
 23273                           ;stkvar	_bexp @ sp[(-13)+10]
 23274  012DC8  0EFD               	movlw	-3
 23275  012DCA  A0E3               	btfss	plusw1,0,c
 23276  012DCC  D008               	goto	l6950
 23277                           
 23278                           ;stkvar	_prod @ sp[(-13)+0]
 23279  012DCE  0EF5               	movlw	245
 23280  012DD0  24E1               	addwf	fsr1l,w,c
 23281  012DD2  6ED9               	movwf	fsr2l,c
 23282  012DD4  0EFF               	movlw	255
 23283  012DD6  20E2               	addwfc	fsr1h,w,c
 23284  012DD8  6EDA               	movwf	fsr2h,c
 23285  012DDA  0E00               	movlw	0
 23286  012DDC  8EDB               	bsf	plusw2,7,c
 23287  012DDE                     l6950:
 23288                           
 23289                           ;stkvar	_prod @ sp[(-13)+0]
 23290  012DDE  0EF6               	movlw	246
 23291  012DE0  24E1               	addwf	fsr1l,w,c
 23292  012DE2  6ED9               	movwf	fsr2l,c
 23293  012DE4  0EFF               	movlw	255
 23294  012DE6  20E2               	addwfc	fsr1h,w,c
 23295  012DE8  6EDA               	movwf	fsr2h,c
 23296                           
 23297                           ;stkvar	_bexp @ sp[(-13)+10]
 23298  012DEA  0EFD               	movlw	-3
 23299  012DEC  006F FF8C  F030    	movff	plusw1,btemp+11
 23300  012DF2  90D8               	bcf	status,0,c
 23301  012DF4  3030               	rrcf	(btemp+11)^0,w,c
 23302  012DF6  6EDF               	movwf	indf2,c
 23303  012DF8                     l6952:
 23304                           
 23305                           ;stkvar	_sign @ sp[(-13)+12]
 23306  012DF8  0EFF               	movlw	-1
 23307  012DFA  006F FF8C  F030    	movff	plusw1,btemp+11
 23308                           
 23309                           ;stkvar	_prod @ sp[(-13)+0]
 23310  012E00  0EF6               	movlw	246
 23311  012E02  24E1               	addwf	fsr1l,w,c
 23312  012E04  6ED9               	movwf	fsr2l,c
 23313  012E06  0EFF               	movlw	255
 23314  012E08  20E2               	addwfc	fsr1h,w,c
 23315  012E0A  6EDA               	movwf	fsr2h,c
 23316  012E0C  5030               	movf	(btemp+11)^0,w,c
 23317  012E0E  12DF               	iorwf	indf2,f,c
 23318                           
 23319                           ;stkvar	_prod @ sp[(-13)+0]
 23320  012E10  0EF3               	movlw	-13
 23321  012E12  006F FF8C  F025    	movff	plusw1,btemp
 23322  012E18  0EF4               	movlw	-12
 23323  012E1A  006F FF8C  F026    	movff	plusw1,btemp+1
 23324  012E20  0EF5               	movlw	-11
 23325  012E22  006F FF8C  F027    	movff	plusw1,btemp+2
 23326  012E28  0EF6               	movlw	-10
 23327  012E2A  006F FF8C  F028    	movff	plusw1,btemp+3
 23328  012E30                     l2831:
 23329                           
 23330                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 23331  012E30  0EEB               	movlw	235
 23332  012E32  26E1               	addwf	fsr1l,f,c
 23333  012E34  0EFF               	movlw	255
 23334  012E36  22E2               	addwfc	fsr1h,f,c
 23335  012E38  0012               	return		;funcret
 23336  012E3A                     __end_of___flmul:
 23337                           	opt callstack 0
 23338                           
 23339 ;; *************** function _SYSTEM_Initialize *****************
 23340 ;; Defined at:
 23341 ;;		line 50 in file "mcc_generated_files/mcc.c"
 23342 ;; Parameters:    Size  Location     Type
 23343 ;;		None
 23344 ;; Auto vars:     Size  Location     Type
 23345 ;;		None
 23346 ;; Return value:  Size  Location     Type
 23347 ;;                  1  [STACK] void 
 23348 ;; Registers used:
 23349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 23350 ;; Tracked objects:
 23351 ;;		On entry : 0/0
 23352 ;;		On exit  : 3F/3C
 23353 ;;		Unchanged: 0/0
 23354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23359 ;;Total ram usage:        0 bytes
 23360 ;; Hardware stack levels used:    1
 23361 ;; Hardware stack levels required when called:    9
 23362 ;; This function calls:
 23363 ;;		_ADCC_Initialize
 23364 ;;		_CLKREF_Initialize
 23365 ;;		_DMA1_Initialize
 23366 ;;		_DMA2_Initialize
 23367 ;;		_EXT_INT_Initialize
 23368 ;;		_FVR_Initialize
 23369 ;;		_INTERRUPT_Initialize
 23370 ;;		_OSCILLATOR_Initialize
 23371 ;;		_PIN_MANAGER_Initialize
 23372 ;;		_PMD_Initialize
 23373 ;;		_PWM8_Initialize
 23374 ;;		_SPI1_Initialize
 23375 ;;		_TMR2_Initialize
 23376 ;;		_TMR3_Initialize
 23377 ;;		_TMR5_Initialize
 23378 ;;		_TMR6_Initialize
 23379 ;;		_UART1_Initialize
 23380 ;;		_UART2_Initialize
 23381 ;; This function is called by:
 23382 ;;		_main
 23383 ;; This function uses a reentrant model
 23384 ;;
 23385                           
 23386                           	psect	text95
 23387  018538                     __ptext95:
 23388                           	opt callstack 0
 23389  018538                     _SYSTEM_Initialize:
 23390                           	opt callstack 21
 23391                           
 23392                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 23393                           
 23394                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23395                           ;incstack = 0
 23396  018538  EC73  F0C0         	call	_INTERRUPT_Initialize	;wreg free
 23397                           
 23398                           ; BSR set to: 57
 23399                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 23400  01853C  EC9E  F0C8         	call	_PMD_Initialize	;wreg free
 23401                           
 23402                           ; BSR set to: 57
 23403                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 23404  018540  ECF6  F0BD         	call	_PIN_MANAGER_Initialize	;wreg free
 23405                           
 23406                           ; BSR set to: 58
 23407                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 23408  018544  EC93  F0C8         	call	_OSCILLATOR_Initialize	;wreg free
 23409                           
 23410                           ; BSR set to: 57
 23411                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 23412  018548  EC05  F0C9         	call	_FVR_Initialize	;wreg free
 23413                           
 23414                           ; BSR set to: 62
 23415                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 23416  01854C  EC09  F0C0         	call	_ADCC_Initialize	;wreg free
 23417                           
 23418                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 23419  018550  EC88  F0C8         	call	_PWM8_Initialize	;wreg free
 23420                           
 23421                           ; BSR set to: 63
 23422                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 23423  018554  EC71  F0C8         	call	_TMR2_Initialize	;wreg free
 23424                           
 23425                           ; BSR set to: 57
 23426                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 23427  018558  ECF4  F0C4         	call	_EXT_INT_Initialize	;wreg free
 23428                           
 23429                           ; BSR set to: 57
 23430                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 23431  01855C  ECB0  F0C5         	call	_TMR6_Initialize	;wreg free
 23432                           
 23433                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 23434  018560  EC4E  F0C3         	call	_TMR3_Initialize	;wreg free
 23435                           
 23436                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 23437  018564  EC2B  F0C3         	call	_TMR5_Initialize	;wreg free
 23438                           
 23439                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 23440  018568  ECD9  F0C0         	call	_UART1_Initialize	;wreg free
 23441                           
 23442                           ; BSR set to: 57
 23443                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 23444  01856C  EC6D  F0C1         	call	_UART2_Initialize	;wreg free
 23445                           
 23446                           ; BSR set to: 57
 23447                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 23448  018570  EC7D  F0C8         	call	_SPI1_Initialize	;wreg free
 23449                           
 23450                           ; BSR set to: 61
 23451                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 23452  018574  ECC9  F0C1         	call	_DMA2_Initialize	;wreg free
 23453                           
 23454                           ; BSR set to: 59
 23455                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 23456  018578  ECD4  F0BF         	call	_DMA1_Initialize	;wreg free
 23457                           
 23458                           ; BSR set to: 59
 23459                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 23460  01857C  ECDF  F0C8         	call	_CLKREF_Initialize	;wreg free
 23461                           
 23462                           ; BSR set to: 60
 23463                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 23464  018580  0012               	return		;funcret
 23465  018582                     __end_of_SYSTEM_Initialize:
 23466                           	opt callstack 0
 23467                           
 23468 ;; *************** function _UART2_Initialize *****************
 23469 ;; Defined at:
 23470 ;;		line 78 in file "mcc_generated_files/uart2.c"
 23471 ;; Parameters:    Size  Location     Type
 23472 ;;		None
 23473 ;; Auto vars:     Size  Location     Type
 23474 ;;		None
 23475 ;; Return value:  Size  Location     Type
 23476 ;;                  1  [STACK] void 
 23477 ;; Registers used:
 23478 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23479 ;; Tracked objects:
 23480 ;;		On entry : 3F/39
 23481 ;;		On exit  : 3F/39
 23482 ;;		Unchanged: 0/0
 23483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23488 ;;Total ram usage:        0 bytes
 23489 ;; Hardware stack levels used:    1
 23490 ;; Hardware stack levels required when called:    8
 23491 ;; This function calls:
 23492 ;;		_UART2_SetRxInterruptHandler
 23493 ;;		_UART2_SetTxInterruptHandler
 23494 ;; This function is called by:
 23495 ;;		_SYSTEM_Initialize
 23496 ;; This function uses a reentrant model
 23497 ;;
 23498                           
 23499                           	psect	text96
 23500  0182DA                     __ptext96:
 23501                           	opt callstack 0
 23502  0182DA                     _UART2_Initialize:
 23503                           	opt callstack 21
 23504                           
 23505                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 23506                           
 23507                           ; BSR set to: 60
 23508                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23509                           ;incstack = 0
 23510  0182DA  0139               	movlb	57	; () banked
 23511  0182DC  9596               	bcf	150,2,b	;volatile
 23512                           
 23513                           ; BSR set to: 57
 23514                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 23515  0182DE  0E5C               	movlw	low _UART2_Receive_ISR
 23516  0182E0  6EE6               	movwf	postinc1,c
 23517  0182E2  0E90               	movlw	high _UART2_Receive_ISR
 23518  0182E4  6EE6               	movwf	postinc1,c
 23519  0182E6  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 23520  0182E8  6EE6               	movwf	postinc1,c
 23521  0182EA  EC3D  F0C6         	call	_UART2_SetRxInterruptHandler	;wreg free
 23522                           
 23523                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 23524  0182EE  0139               	movlb	57	; () banked
 23525  0182F0  9796               	bcf	150,3,b	;volatile
 23526                           
 23527                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 23528  0182F2  0E34               	movlw	low _UART2_Transmit_ISR
 23529  0182F4  6EE6               	movwf	postinc1,c
 23530  0182F6  0E8B               	movlw	high _UART2_Transmit_ISR
 23531  0182F8  6EE6               	movwf	postinc1,c
 23532  0182FA  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 23533  0182FC  6EE6               	movwf	postinc1,c
 23534  0182FE  EC29  F0C6         	call	_UART2_SetTxInterruptHandler	;wreg free
 23535                           
 23536                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 23537  018302  013D               	movlb	61	; () banked
 23538  018304  6BD4               	clrf	212,b	;volatile
 23539                           
 23540                           ; BSR set to: 61
 23541                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 23542  018306  6BD6               	clrf	214,b	;volatile
 23543                           
 23544                           ; BSR set to: 61
 23545                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 23546  018308  6BD8               	clrf	216,b	;volatile
 23547                           
 23548                           ; BSR set to: 61
 23549                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 23550  01830A  0EB0               	movlw	176
 23551  01830C  6FDA               	movwf	218,b	;volatile
 23552                           
 23553                           ; BSR set to: 61
 23554                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 23555  01830E  0E80               	movlw	128
 23556  018310  6FDB               	movwf	219,b	;volatile
 23557                           
 23558                           ; BSR set to: 61
 23559                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 23560  018312  6BDC               	clrf	220,b	;volatile
 23561                           
 23562                           ; BSR set to: 61
 23563                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 23564  018314  0E82               	movlw	130
 23565  018316  6FDD               	movwf	221,b	;volatile
 23566                           
 23567                           ; BSR set to: 61
 23568                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 23569  018318  0E06               	movlw	6
 23570  01831A  6FDE               	movwf	222,b	;volatile
 23571                           
 23572                           ; BSR set to: 61
 23573                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 23574  01831C  6BDF               	clrf	223,b	;volatile
 23575                           
 23576                           ; BSR set to: 61
 23577                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 23578  01831E  6BE0               	clrf	224,b	;volatile
 23579                           
 23580                           ; BSR set to: 61
 23581                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 23582  018320  6BE1               	clrf	225,b	;volatile
 23583                           
 23584                           ; BSR set to: 61
 23585                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 23586  018322  6BE2               	clrf	226,b	;volatile
 23587                           
 23588                           ; BSR set to: 61
 23589                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 23590  018324  6A1E               	clrf	_uart2TxHead^0,c	;volatile
 23591                           
 23592                           ; BSR set to: 61
 23593                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 23594  018326  6A1D               	clrf	_uart2TxTail^0,c	;volatile
 23595                           
 23596                           ; BSR set to: 61
 23597                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 23598  018328  0E40               	movlw	64
 23599  01832A  6E1C               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 23600                           
 23601                           ; BSR set to: 61
 23602                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 23603  01832C  6A1B               	clrf	_uart2RxHead^0,c	;volatile
 23604                           
 23605                           ; BSR set to: 61
 23606                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 23607  01832E  6A1A               	clrf	_uart2RxTail^0,c	;volatile
 23608                           
 23609                           ; BSR set to: 61
 23610                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 23611  018330  6A19               	clrf	_uart2RxCount^0,c	;volatile
 23612                           
 23613                           ; BSR set to: 61
 23614                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 23615  018332  0139               	movlb	57	; () banked
 23616  018334  8596               	bsf	150,2,b	;volatile
 23617                           
 23618                           ; BSR set to: 57
 23619                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23620  018336  0012               	return		;funcret
 23621  018338                     __end_of_UART2_Initialize:
 23622                           	opt callstack 0
 23623                           
 23624 ;; *************** function _UART2_SetTxInterruptHandler *****************
 23625 ;; Defined at:
 23626 ;;		line 252 in file "mcc_generated_files/uart2.c"
 23627 ;; Parameters:    Size  Location     Type
 23628 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23629 ;;		 -> UART2_Transmit_ISR(1), 
 23630 ;; Auto vars:     Size  Location     Type
 23631 ;;		None
 23632 ;; Return value:  Size  Location     Type
 23633 ;;                  1  [STACK] void 
 23634 ;; Registers used:
 23635 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23636 ;; Tracked objects:
 23637 ;;		On entry : 3F/39
 23638 ;;		On exit  : 0/0
 23639 ;;		Unchanged: 0/0
 23640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23645 ;;Total ram usage:        0 bytes
 23646 ;; Hardware stack levels used:    1
 23647 ;; Hardware stack levels required when called:    7
 23648 ;; This function calls:
 23649 ;;		Nothing
 23650 ;; This function is called by:
 23651 ;;		_UART2_Initialize
 23652 ;; This function uses a reentrant model
 23653 ;;
 23654                           
 23655                           	psect	text97
 23656  018C52                     __ptext97:
 23657                           	opt callstack 0
 23658  018C52                     _UART2_SetTxInterruptHandler:
 23659                           	opt callstack 21
 23660                           
 23661                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 23662                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23663                           
 23664                           ; BSR set to: 57
 23665                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23666                           ;incstack = 0
 23667  018C52  50E1               	movf	fsr1l,w,c
 23668  018C54  0FFD               	addlw	-3
 23669  018C56  6ED9               	movwf	fsr2l,c
 23670  018C58  50E2               	movf	fsr1h,w,c
 23671  018C5A  6EDA               	movwf	fsr2h,c
 23672  018C5C  0EFF               	movlw	255
 23673  018C5E  22DA               	addwfc	fsr2h,f,c
 23674  018C60  006F FF78  F0BE    	movff	postinc2,_UART2_TxInterruptHandler
 23675  018C66  006F FF78  F0BF    	movff	postinc2,_UART2_TxInterruptHandler+1
 23676  018C6C  006F FF74  F0C0    	movff	postdec2,_UART2_TxInterruptHandler+2
 23677                           
 23678                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23679  018C72  52E5               	movf	postdec1,f,c
 23680  018C74  52E5               	movf	postdec1,f,c
 23681  018C76  52E5               	movf	postdec1,f,c
 23682  018C78  0012               	return		;funcret
 23683  018C7A                     __end_of_UART2_SetTxInterruptHandler:
 23684                           	opt callstack 0
 23685                           
 23686 ;; *************** function _UART2_SetRxInterruptHandler *****************
 23687 ;; Defined at:
 23688 ;;		line 248 in file "mcc_generated_files/uart2.c"
 23689 ;; Parameters:    Size  Location     Type
 23690 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23691 ;;		 -> UART2_Receive_ISR(1), 
 23692 ;; Auto vars:     Size  Location     Type
 23693 ;;		None
 23694 ;; Return value:  Size  Location     Type
 23695 ;;                  1  [STACK] void 
 23696 ;; Registers used:
 23697 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23698 ;; Tracked objects:
 23699 ;;		On entry : 3F/39
 23700 ;;		On exit  : 0/0
 23701 ;;		Unchanged: 0/0
 23702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23707 ;;Total ram usage:        0 bytes
 23708 ;; Hardware stack levels used:    1
 23709 ;; Hardware stack levels required when called:    7
 23710 ;; This function calls:
 23711 ;;		Nothing
 23712 ;; This function is called by:
 23713 ;;		_UART2_Initialize
 23714 ;; This function uses a reentrant model
 23715 ;;
 23716                           
 23717                           	psect	text98
 23718  018C7A                     __ptext98:
 23719                           	opt callstack 0
 23720  018C7A                     _UART2_SetRxInterruptHandler:
 23721                           	opt callstack 21
 23722                           
 23723                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 23724                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23725                           
 23726                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23727                           ;incstack = 0
 23728  018C7A  50E1               	movf	fsr1l,w,c
 23729  018C7C  0FFD               	addlw	-3
 23730  018C7E  6ED9               	movwf	fsr2l,c
 23731  018C80  50E2               	movf	fsr1h,w,c
 23732  018C82  6EDA               	movwf	fsr2h,c
 23733  018C84  0EFF               	movlw	255
 23734  018C86  22DA               	addwfc	fsr2h,f,c
 23735  018C88  006F FF78  F001    	movff	postinc2,_UART2_RxInterruptHandler
 23736  018C8E  006F FF78  F002    	movff	postinc2,_UART2_RxInterruptHandler+1
 23737  018C94  006F FF74  F003    	movff	postdec2,_UART2_RxInterruptHandler+2
 23738                           
 23739                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23740  018C9A  52E5               	movf	postdec1,f,c
 23741  018C9C  52E5               	movf	postdec1,f,c
 23742  018C9E  52E5               	movf	postdec1,f,c
 23743  018CA0  0012               	return		;funcret
 23744  018CA2                     __end_of_UART2_SetRxInterruptHandler:
 23745                           	opt callstack 0
 23746                           
 23747 ;; *************** function _UART1_Initialize *****************
 23748 ;; Defined at:
 23749 ;;		line 79 in file "mcc_generated_files/uart1.c"
 23750 ;; Parameters:    Size  Location     Type
 23751 ;;		None
 23752 ;; Auto vars:     Size  Location     Type
 23753 ;;		None
 23754 ;; Return value:  Size  Location     Type
 23755 ;;                  1  [STACK] void 
 23756 ;; Registers used:
 23757 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23758 ;; Tracked objects:
 23759 ;;		On entry : 0/39
 23760 ;;		On exit  : 3F/39
 23761 ;;		Unchanged: 0/0
 23762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23767 ;;Total ram usage:        0 bytes
 23768 ;; Hardware stack levels used:    1
 23769 ;; Hardware stack levels required when called:    8
 23770 ;; This function calls:
 23771 ;;		_UART1_SetRxInterruptHandler
 23772 ;;		_UART1_SetTxInterruptHandler
 23773 ;; This function is called by:
 23774 ;;		_SYSTEM_Initialize
 23775 ;; This function uses a reentrant model
 23776 ;;
 23777                           
 23778                           	psect	text99
 23779  0181B2                     __ptext99:
 23780                           	opt callstack 0
 23781  0181B2                     _UART1_Initialize:
 23782                           	opt callstack 21
 23783                           
 23784                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 23785                           
 23786                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23787                           ;incstack = 0
 23788  0181B2  0139               	movlb	57	; () banked
 23789  0181B4  9793               	bcf	147,3,b	;volatile
 23790                           
 23791                           ; BSR set to: 57
 23792                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 23793  0181B6  0E3E               	movlw	low _UART1_Receive_ISR
 23794  0181B8  6EE6               	movwf	postinc1,c
 23795  0181BA  0E90               	movlw	high _UART1_Receive_ISR
 23796  0181BC  6EE6               	movwf	postinc1,c
 23797  0181BE  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 23798  0181C0  6EE6               	movwf	postinc1,c
 23799  0181C2  EC65  F0C6         	call	_UART1_SetRxInterruptHandler	;wreg free
 23800                           
 23801                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 23802  0181C6  0139               	movlb	57	; () banked
 23803  0181C8  9993               	bcf	147,4,b	;volatile
 23804                           
 23805                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 23806  0181CA  0E08               	movlw	low _UART1_Transmit_ISR
 23807  0181CC  6EE6               	movwf	postinc1,c
 23808  0181CE  0E8B               	movlw	high _UART1_Transmit_ISR
 23809  0181D0  6EE6               	movwf	postinc1,c
 23810  0181D2  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 23811  0181D4  6EE6               	movwf	postinc1,c
 23812  0181D6  EC51  F0C6         	call	_UART1_SetTxInterruptHandler	;wreg free
 23813                           
 23814                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 23815  0181DA  013D               	movlb	61	; () banked
 23816  0181DC  6BEC               	clrf	236,b	;volatile
 23817                           
 23818                           ; BSR set to: 61
 23819                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 23820  0181DE  6BED               	clrf	237,b	;volatile
 23821                           
 23822                           ; BSR set to: 61
 23823                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 23824  0181E0  6BEE               	clrf	238,b	;volatile
 23825                           
 23826                           ; BSR set to: 61
 23827                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 23828  0181E2  6BEF               	clrf	239,b	;volatile
 23829                           
 23830                           ; BSR set to: 61
 23831                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 23832  0181E4  6BF0               	clrf	240,b	;volatile
 23833                           
 23834                           ; BSR set to: 61
 23835                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 23836  0181E6  6BF1               	clrf	241,b	;volatile
 23837                           
 23838                           ; BSR set to: 61
 23839                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 23840  0181E8  0EB0               	movlw	176
 23841  0181EA  6FF2               	movwf	242,b	;volatile
 23842                           
 23843                           ; BSR set to: 61
 23844                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 23845  0181EC  0E80               	movlw	128
 23846  0181EE  6FF3               	movwf	243,b	;volatile
 23847                           
 23848                           ; BSR set to: 61
 23849                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 23850  0181F0  6BF4               	clrf	244,b	;volatile
 23851                           
 23852                           ; BSR set to: 61
 23853                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 23854  0181F2  0E82               	movlw	130
 23855  0181F4  6FF5               	movwf	245,b	;volatile
 23856                           
 23857                           ; BSR set to: 61
 23858                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 23859  0181F6  0E06               	movlw	6
 23860  0181F8  6FF6               	movwf	246,b	;volatile
 23861                           
 23862                           ; BSR set to: 61
 23863                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 23864  0181FA  6BF7               	clrf	247,b	;volatile
 23865                           
 23866                           ; BSR set to: 61
 23867                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 23868  0181FC  6BF8               	clrf	248,b	;volatile
 23869                           
 23870                           ; BSR set to: 61
 23871                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 23872  0181FE  6BF9               	clrf	249,b	;volatile
 23873                           
 23874                           ; BSR set to: 61
 23875                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 23876  018200  6BFA               	clrf	250,b	;volatile
 23877                           
 23878                           ; BSR set to: 61
 23879                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 23880  018202  6A24               	clrf	_uart1TxHead^0,c	;volatile
 23881                           
 23882                           ; BSR set to: 61
 23883                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 23884  018204  6A23               	clrf	_uart1TxTail^0,c	;volatile
 23885                           
 23886                           ; BSR set to: 61
 23887                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 23888  018206  0E40               	movlw	64
 23889  018208  6E22               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 23890                           
 23891                           ; BSR set to: 61
 23892                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 23893  01820A  6A21               	clrf	_uart1RxHead^0,c	;volatile
 23894                           
 23895                           ; BSR set to: 61
 23896                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 23897  01820C  6A20               	clrf	_uart1RxTail^0,c	;volatile
 23898                           
 23899                           ; BSR set to: 61
 23900                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 23901  01820E  6A1F               	clrf	_uart1RxCount^0,c	;volatile
 23902                           
 23903                           ; BSR set to: 61
 23904                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 23905  018210  0139               	movlb	57	; () banked
 23906  018212  8793               	bsf	147,3,b	;volatile
 23907                           
 23908                           ; BSR set to: 57
 23909                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23910  018214  0012               	return		;funcret
 23911  018216                     __end_of_UART1_Initialize:
 23912                           	opt callstack 0
 23913                           
 23914 ;; *************** function _UART1_SetTxInterruptHandler *****************
 23915 ;; Defined at:
 23916 ;;		line 246 in file "mcc_generated_files/uart1.c"
 23917 ;; Parameters:    Size  Location     Type
 23918 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23919 ;;		 -> UART1_Transmit_ISR(1), 
 23920 ;; Auto vars:     Size  Location     Type
 23921 ;;		None
 23922 ;; Return value:  Size  Location     Type
 23923 ;;                  1  [STACK] void 
 23924 ;; Registers used:
 23925 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23926 ;; Tracked objects:
 23927 ;;		On entry : 3F/39
 23928 ;;		On exit  : 0/0
 23929 ;;		Unchanged: 0/0
 23930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23935 ;;Total ram usage:        0 bytes
 23936 ;; Hardware stack levels used:    1
 23937 ;; Hardware stack levels required when called:    7
 23938 ;; This function calls:
 23939 ;;		Nothing
 23940 ;; This function is called by:
 23941 ;;		_UART1_Initialize
 23942 ;; This function uses a reentrant model
 23943 ;;
 23944                           
 23945                           	psect	text100
 23946  018CA2                     __ptext100:
 23947                           	opt callstack 0
 23948  018CA2                     _UART1_SetTxInterruptHandler:
 23949                           	opt callstack 21
 23950                           
 23951                           ;mcc_generated_files/uart1.c: 246: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 247: {;mcc_generated_files/uart1.c: 248:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 23952                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23953                           
 23954                           ; BSR set to: 57
 23955                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23956                           ;incstack = 0
 23957  018CA2  50E1               	movf	fsr1l,w,c
 23958  018CA4  0FFD               	addlw	-3
 23959  018CA6  6ED9               	movwf	fsr2l,c
 23960  018CA8  50E2               	movf	fsr1h,w,c
 23961  018CAA  6EDA               	movwf	fsr2h,c
 23962  018CAC  0EFF               	movlw	255
 23963  018CAE  22DA               	addwfc	fsr2h,f,c
 23964  018CB0  006F FF78  F0B8    	movff	postinc2,_UART1_TxInterruptHandler
 23965  018CB6  006F FF78  F0B9    	movff	postinc2,_UART1_TxInterruptHandler+1
 23966  018CBC  006F FF74  F0BA    	movff	postdec2,_UART1_TxInterruptHandler+2
 23967                           
 23968                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23969  018CC2  52E5               	movf	postdec1,f,c
 23970  018CC4  52E5               	movf	postdec1,f,c
 23971  018CC6  52E5               	movf	postdec1,f,c
 23972  018CC8  0012               	return		;funcret
 23973  018CCA                     __end_of_UART1_SetTxInterruptHandler:
 23974                           	opt callstack 0
 23975                           
 23976 ;; *************** function _UART1_SetRxInterruptHandler *****************
 23977 ;; Defined at:
 23978 ;;		line 241 in file "mcc_generated_files/uart1.c"
 23979 ;; Parameters:    Size  Location     Type
 23980 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23981 ;;		 -> UART1_Receive_ISR(1), 
 23982 ;; Auto vars:     Size  Location     Type
 23983 ;;		None
 23984 ;; Return value:  Size  Location     Type
 23985 ;;                  1  [STACK] void 
 23986 ;; Registers used:
 23987 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23988 ;; Tracked objects:
 23989 ;;		On entry : 3F/39
 23990 ;;		On exit  : 0/0
 23991 ;;		Unchanged: 0/0
 23992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23997 ;;Total ram usage:        0 bytes
 23998 ;; Hardware stack levels used:    1
 23999 ;; Hardware stack levels required when called:    7
 24000 ;; This function calls:
 24001 ;;		Nothing
 24002 ;; This function is called by:
 24003 ;;		_UART1_Initialize
 24004 ;; This function uses a reentrant model
 24005 ;;
 24006                           
 24007                           	psect	text101
 24008  018CCA                     __ptext101:
 24009                           	opt callstack 0
 24010  018CCA                     _UART1_SetRxInterruptHandler:
 24011                           	opt callstack 21
 24012                           
 24013                           ;mcc_generated_files/uart1.c: 241: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 242: {;mcc_generated_files/uart1.c: 243:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 24014                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24015                           
 24016                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24017                           ;incstack = 0
 24018  018CCA  50E1               	movf	fsr1l,w,c
 24019  018CCC  0FFD               	addlw	-3
 24020  018CCE  6ED9               	movwf	fsr2l,c
 24021  018CD0  50E2               	movf	fsr1h,w,c
 24022  018CD2  6EDA               	movwf	fsr2h,c
 24023  018CD4  0EFF               	movlw	255
 24024  018CD6  22DA               	addwfc	fsr2h,f,c
 24025  018CD8  006F FF78  F0BB    	movff	postinc2,_UART1_RxInterruptHandler
 24026  018CDE  006F FF78  F0BC    	movff	postinc2,_UART1_RxInterruptHandler+1
 24027  018CE4  006F FF74  F0BD    	movff	postdec2,_UART1_RxInterruptHandler+2
 24028                           
 24029                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 24030  018CEA  52E5               	movf	postdec1,f,c
 24031  018CEC  52E5               	movf	postdec1,f,c
 24032  018CEE  52E5               	movf	postdec1,f,c
 24033  018CF0  0012               	return		;funcret
 24034  018CF2                     __end_of_UART1_SetRxInterruptHandler:
 24035                           	opt callstack 0
 24036                           
 24037 ;; *************** function _TMR6_Initialize *****************
 24038 ;; Defined at:
 24039 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 24040 ;; Parameters:    Size  Location     Type
 24041 ;;		None
 24042 ;; Auto vars:     Size  Location     Type
 24043 ;;		None
 24044 ;; Return value:  Size  Location     Type
 24045 ;;                  1  [STACK] void 
 24046 ;; Registers used:
 24047 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 24048 ;; Tracked objects:
 24049 ;;		On entry : 3F/39
 24050 ;;		On exit  : 0/0
 24051 ;;		Unchanged: 0/0
 24052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24057 ;;Total ram usage:        0 bytes
 24058 ;; Hardware stack levels used:    1
 24059 ;; Hardware stack levels required when called:    8
 24060 ;; This function calls:
 24061 ;;		_TMR6_SetInterruptHandler
 24062 ;; This function is called by:
 24063 ;;		_SYSTEM_Initialize
 24064 ;; This function uses a reentrant model
 24065 ;;
 24066                           
 24067                           	psect	text102
 24068  018B60                     __ptext102:
 24069                           	opt callstack 0
 24070  018B60                     _TMR6_Initialize:
 24071                           	opt callstack 21
 24072                           
 24073                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 24074                           
 24075                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24076                           ;incstack = 0
 24077  018B60  0E01               	movlw	1
 24078  018B62  6E96               	movwf	150,c	;volatile
 24079                           
 24080                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 24081  018B64  6A95               	clrf	149,c	;volatile
 24082                           
 24083                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 24084  018B66  6A97               	clrf	151,c	;volatile
 24085                           
 24086                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 24087  018B68  0E7C               	movlw	124
 24088  018B6A  6E93               	movwf	147,c	;volatile
 24089                           
 24090                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 24091  018B6C  6A92               	clrf	146,c	;volatile
 24092                           
 24093                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 24094  018B6E  0139               	movlb	57	; () banked
 24095  018B70  91A9               	bcf	169,0,b	;volatile
 24096                           
 24097                           ; BSR set to: 57
 24098                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 24099  018B72  8199               	bsf	153,0,b	;volatile
 24100                           
 24101                           ; BSR set to: 57
 24102                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 24103  018B74  0EEA               	movlw	low _TMR6_DefaultInterruptHandler
 24104  018B76  6EE6               	movwf	postinc1,c
 24105  018B78  0E84               	movlw	high _TMR6_DefaultInterruptHandler
 24106  018B7A  6EE6               	movwf	postinc1,c
 24107  018B7C  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 24108  018B7E  6EE6               	movwf	postinc1,c
 24109  018B80  EC79  F0C6         	call	_TMR6_SetInterruptHandler	;wreg free
 24110                           
 24111                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 24112  018B84  0EE0               	movlw	224
 24113  018B86  6E94               	movwf	148,c	;volatile
 24114                           
 24115                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24116  018B88  0012               	return		;funcret
 24117  018B8A                     __end_of_TMR6_Initialize:
 24118                           	opt callstack 0
 24119                           
 24120 ;; *************** function _TMR6_SetInterruptHandler *****************
 24121 ;; Defined at:
 24122 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 24123 ;; Parameters:    Size  Location     Type
 24124 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24125 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 24126 ;; Auto vars:     Size  Location     Type
 24127 ;;		None
 24128 ;; Return value:  Size  Location     Type
 24129 ;;                  1  [STACK] void 
 24130 ;; Registers used:
 24131 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24132 ;; Tracked objects:
 24133 ;;		On entry : 3F/39
 24134 ;;		On exit  : 0/0
 24135 ;;		Unchanged: 0/0
 24136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24141 ;;Total ram usage:        0 bytes
 24142 ;; Hardware stack levels used:    1
 24143 ;; Hardware stack levels required when called:    7
 24144 ;; This function calls:
 24145 ;;		Nothing
 24146 ;; This function is called by:
 24147 ;;		_TMR6_Initialize
 24148 ;; This function uses a reentrant model
 24149 ;;
 24150                           
 24151                           	psect	text103
 24152  018CF2                     __ptext103:
 24153                           	opt callstack 0
 24154  018CF2                     _TMR6_SetInterruptHandler:
 24155                           	opt callstack 21
 24156                           
 24157                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 24158                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24159                           
 24160                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24161                           ;incstack = 0
 24162  018CF2  50E1               	movf	fsr1l,w,c
 24163  018CF4  0FFD               	addlw	-3
 24164  018CF6  6ED9               	movwf	fsr2l,c
 24165  018CF8  50E2               	movf	fsr1h,w,c
 24166  018CFA  6EDA               	movwf	fsr2h,c
 24167  018CFC  0EFF               	movlw	255
 24168  018CFE  22DA               	addwfc	fsr2h,f,c
 24169  018D00  006F FF78  F0AF    	movff	postinc2,_TMR6_InterruptHandler
 24170  018D06  006F FF78  F0B0    	movff	postinc2,_TMR6_InterruptHandler+1
 24171  018D0C  006F FF74  F0B1    	movff	postdec2,_TMR6_InterruptHandler+2
 24172                           
 24173                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24174  018D12  52E5               	movf	postdec1,f,c
 24175  018D14  52E5               	movf	postdec1,f,c
 24176  018D16  52E5               	movf	postdec1,f,c
 24177  018D18  0012               	return		;funcret
 24178  018D1A                     __end_of_TMR6_SetInterruptHandler:
 24179                           	opt callstack 0
 24180                           
 24181 ;; *************** function _TMR5_Initialize *****************
 24182 ;; Defined at:
 24183 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 24184 ;; Parameters:    Size  Location     Type
 24185 ;;		None
 24186 ;; Auto vars:     Size  Location     Type
 24187 ;;		None
 24188 ;; Return value:  Size  Location     Type
 24189 ;;                  1  [STACK] void 
 24190 ;; Registers used:
 24191 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 24192 ;; Tracked objects:
 24193 ;;		On entry : 0/39
 24194 ;;		On exit  : 0/0
 24195 ;;		Unchanged: 0/0
 24196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24201 ;;Total ram usage:        0 bytes
 24202 ;; Hardware stack levels used:    1
 24203 ;; Hardware stack levels required when called:    8
 24204 ;; This function calls:
 24205 ;;		_TMR5_SetInterruptHandler
 24206 ;; This function is called by:
 24207 ;;		_SYSTEM_Initialize
 24208 ;; This function uses a reentrant model
 24209 ;;
 24210                           
 24211                           	psect	text104
 24212  018656                     __ptext104:
 24213                           	opt callstack 0
 24214  018656                     _TMR5_Initialize:
 24215                           	opt callstack 21
 24216                           
 24217                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 24218                           
 24219                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24220                           ;incstack = 0
 24221  018656  6A9B               	clrf	155,c	;volatile
 24222                           
 24223                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 24224  018658  6A9C               	clrf	156,c	;volatile
 24225                           
 24226                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 24227  01865A  0E01               	movlw	1
 24228  01865C  6E9D               	movwf	157,c	;volatile
 24229                           
 24230                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 24231  01865E  0E63               	movlw	99
 24232  018660  6E99               	movwf	153,c	;volatile
 24233                           
 24234                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 24235  018662  0EC0               	movlw	192
 24236  018664  6E98               	movwf	152,c	;volatile
 24237                           
 24238                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 24239  018666  5098               	movf	152,w,c	;volatile
 24240  018668  006F FE64  F025    	movff	16281,btemp	;volatile
 24241  01866E  6A26               	clrf	(btemp+1)^0,c
 24242  018670  0060  F094  F026   	movff	btemp,btemp+1
 24243  018676  6A25               	clrf	btemp^0,c
 24244  018678  1025               	iorwf	btemp^0,w,c
 24245  01867A  6E16               	movwf	_timer5ReloadVal^0,c	;volatile
 24246  01867C  5026               	movf	(btemp+1)^0,w,c
 24247  01867E  6E17               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 24248                           
 24249                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 24250  018680  0139               	movlb	57	; () banked
 24251  018682  9DA8               	bcf	168,6,b	;volatile
 24252                           
 24253                           ; BSR set to: 57
 24254                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 24255  018684  8D98               	bsf	152,6,b	;volatile
 24256                           
 24257                           ; BSR set to: 57
 24258                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 24259  018686  0E0A               	movlw	low _TMR5_DefaultInterruptHandler
 24260  018688  6EE6               	movwf	postinc1,c
 24261  01868A  0E8E               	movlw	high _TMR5_DefaultInterruptHandler
 24262  01868C  6EE6               	movwf	postinc1,c
 24263  01868E  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 24264  018690  6EE6               	movwf	postinc1,c
 24265  018692  EC8D  F0C6         	call	_TMR5_SetInterruptHandler	;wreg free
 24266                           
 24267                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 24268  018696  0E31               	movlw	49
 24269  018698  6E9A               	movwf	154,c	;volatile
 24270                           
 24271                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24272  01869A  0012               	return		;funcret
 24273  01869C                     __end_of_TMR5_Initialize:
 24274                           	opt callstack 0
 24275                           
 24276 ;; *************** function _TMR5_SetInterruptHandler *****************
 24277 ;; Defined at:
 24278 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 24279 ;; Parameters:    Size  Location     Type
 24280 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24281 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 24282 ;; Auto vars:     Size  Location     Type
 24283 ;;		None
 24284 ;; Return value:  Size  Location     Type
 24285 ;;                  1  [STACK] void 
 24286 ;; Registers used:
 24287 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24288 ;; Tracked objects:
 24289 ;;		On entry : 3F/39
 24290 ;;		On exit  : 0/0
 24291 ;;		Unchanged: 0/0
 24292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24297 ;;Total ram usage:        0 bytes
 24298 ;; Hardware stack levels used:    1
 24299 ;; Hardware stack levels required when called:    7
 24300 ;; This function calls:
 24301 ;;		Nothing
 24302 ;; This function is called by:
 24303 ;;		_TMR5_Initialize
 24304 ;; This function uses a reentrant model
 24305 ;;
 24306                           
 24307                           	psect	text105
 24308  018D1A                     __ptext105:
 24309                           	opt callstack 0
 24310  018D1A                     _TMR5_SetInterruptHandler:
 24311                           	opt callstack 21
 24312                           
 24313                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 24314                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24315                           
 24316                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24317                           ;incstack = 0
 24318  018D1A  50E1               	movf	fsr1l,w,c
 24319  018D1C  0FFD               	addlw	-3
 24320  018D1E  6ED9               	movwf	fsr2l,c
 24321  018D20  50E2               	movf	fsr1h,w,c
 24322  018D22  6EDA               	movwf	fsr2h,c
 24323  018D24  0EFF               	movlw	255
 24324  018D26  22DA               	addwfc	fsr2h,f,c
 24325  018D28  006F FF78  F0AC    	movff	postinc2,_TMR5_InterruptHandler
 24326  018D2E  006F FF78  F0AD    	movff	postinc2,_TMR5_InterruptHandler+1
 24327  018D34  006F FF74  F0AE    	movff	postdec2,_TMR5_InterruptHandler+2
 24328                           
 24329                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24330  018D3A  52E5               	movf	postdec1,f,c
 24331  018D3C  52E5               	movf	postdec1,f,c
 24332  018D3E  52E5               	movf	postdec1,f,c
 24333  018D40  0012               	return		;funcret
 24334  018D42                     __end_of_TMR5_SetInterruptHandler:
 24335                           	opt callstack 0
 24336                           
 24337 ;; *************** function _TMR3_Initialize *****************
 24338 ;; Defined at:
 24339 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 24340 ;; Parameters:    Size  Location     Type
 24341 ;;		None
 24342 ;; Auto vars:     Size  Location     Type
 24343 ;;		None
 24344 ;; Return value:  Size  Location     Type
 24345 ;;                  1  [STACK] void 
 24346 ;; Registers used:
 24347 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 24348 ;; Tracked objects:
 24349 ;;		On entry : 0/39
 24350 ;;		On exit  : 0/0
 24351 ;;		Unchanged: 0/0
 24352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24357 ;;Total ram usage:        0 bytes
 24358 ;; Hardware stack levels used:    1
 24359 ;; Hardware stack levels required when called:    8
 24360 ;; This function calls:
 24361 ;;		_TMR3_SetInterruptHandler
 24362 ;; This function is called by:
 24363 ;;		_SYSTEM_Initialize
 24364 ;; This function uses a reentrant model
 24365 ;;
 24366                           
 24367                           	psect	text106
 24368  01869C                     __ptext106:
 24369                           	opt callstack 0
 24370  01869C                     _TMR3_Initialize:
 24371                           	opt callstack 21
 24372                           
 24373                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 24374                           
 24375                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24376                           ;incstack = 0
 24377  01869C  6AA7               	clrf	167,c	;volatile
 24378                           
 24379                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 24380  01869E  6AA8               	clrf	168,c	;volatile
 24381                           
 24382                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 24383  0186A0  0E01               	movlw	1
 24384  0186A2  6EA9               	movwf	169,c	;volatile
 24385                           
 24386                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 24387  0186A4  0E3C               	movlw	60
 24388  0186A6  6EA5               	movwf	165,c	;volatile
 24389                           
 24390                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 24391  0186A8  0EB0               	movlw	176
 24392  0186AA  6EA4               	movwf	164,c	;volatile
 24393                           
 24394                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 24395  0186AC  50A4               	movf	164,w,c	;volatile
 24396  0186AE  006F FE94  F025    	movff	16293,btemp	;volatile
 24397  0186B4  6A26               	clrf	(btemp+1)^0,c
 24398  0186B6  0060  F094  F026   	movff	btemp,btemp+1
 24399  0186BC  6A25               	clrf	btemp^0,c
 24400  0186BE  1025               	iorwf	btemp^0,w,c
 24401  0186C0  6E12               	movwf	_timer3ReloadVal^0,c	;volatile
 24402  0186C2  5026               	movf	(btemp+1)^0,w,c
 24403  0186C4  6E13               	movwf	(_timer3ReloadVal+1)^0,c	;volatile
 24404                           
 24405                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 24406  0186C6  0139               	movlb	57	; () banked
 24407  0186C8  9DA6               	bcf	166,6,b	;volatile
 24408                           
 24409                           ; BSR set to: 57
 24410                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 24411  0186CA  8D96               	bsf	150,6,b	;volatile
 24412                           
 24413                           ; BSR set to: 57
 24414                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 24415  0186CC  0E38               	movlw	low _TMR3_DefaultInterruptHandler
 24416  0186CE  6EE6               	movwf	postinc1,c
 24417  0186D0  0E92               	movlw	high _TMR3_DefaultInterruptHandler
 24418  0186D2  6EE6               	movwf	postinc1,c
 24419  0186D4  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 24420  0186D6  6EE6               	movwf	postinc1,c
 24421  0186D8  ECA1  F0C6         	call	_TMR3_SetInterruptHandler	;wreg free
 24422                           
 24423                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 24424  0186DC  0E31               	movlw	49
 24425  0186DE  6EA6               	movwf	166,c	;volatile
 24426                           
 24427                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24428  0186E0  0012               	return		;funcret
 24429  0186E2                     __end_of_TMR3_Initialize:
 24430                           	opt callstack 0
 24431                           
 24432 ;; *************** function _TMR3_SetInterruptHandler *****************
 24433 ;; Defined at:
 24434 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 24435 ;; Parameters:    Size  Location     Type
 24436 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24437 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 24438 ;; Auto vars:     Size  Location     Type
 24439 ;;		None
 24440 ;; Return value:  Size  Location     Type
 24441 ;;                  1  [STACK] void 
 24442 ;; Registers used:
 24443 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24444 ;; Tracked objects:
 24445 ;;		On entry : 0/1
 24446 ;;		On exit  : 0/0
 24447 ;;		Unchanged: 0/0
 24448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24453 ;;Total ram usage:        0 bytes
 24454 ;; Hardware stack levels used:    1
 24455 ;; Hardware stack levels required when called:    7
 24456 ;; This function calls:
 24457 ;;		Nothing
 24458 ;; This function is called by:
 24459 ;;		_TMR3_Initialize
 24460 ;;		_init_bsoc
 24461 ;; This function uses a reentrant model
 24462 ;;
 24463                           
 24464                           	psect	text107
 24465  018D42                     __ptext107:
 24466                           	opt callstack 0
 24467  018D42                     _TMR3_SetInterruptHandler:
 24468                           	opt callstack 22
 24469                           
 24470                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 24471                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24472                           
 24473                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24474                           ;incstack = 0
 24475  018D42  50E1               	movf	fsr1l,w,c
 24476  018D44  0FFD               	addlw	-3
 24477  018D46  6ED9               	movwf	fsr2l,c
 24478  018D48  50E2               	movf	fsr1h,w,c
 24479  018D4A  6EDA               	movwf	fsr2h,c
 24480  018D4C  0EFF               	movlw	255
 24481  018D4E  22DA               	addwfc	fsr2h,f,c
 24482  018D50  006F FF78  F0A9    	movff	postinc2,_TMR3_InterruptHandler
 24483  018D56  006F FF78  F0AA    	movff	postinc2,_TMR3_InterruptHandler+1
 24484  018D5C  006F FF74  F0AB    	movff	postdec2,_TMR3_InterruptHandler+2
 24485                           
 24486                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24487  018D62  52E5               	movf	postdec1,f,c
 24488  018D64  52E5               	movf	postdec1,f,c
 24489  018D66  52E5               	movf	postdec1,f,c
 24490  018D68  0012               	return		;funcret
 24491  018D6A                     __end_of_TMR3_SetInterruptHandler:
 24492                           	opt callstack 0
 24493                           
 24494 ;; *************** function _TMR2_Initialize *****************
 24495 ;; Defined at:
 24496 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 24497 ;; Parameters:    Size  Location     Type
 24498 ;;		None
 24499 ;; Auto vars:     Size  Location     Type
 24500 ;;		None
 24501 ;; Return value:  Size  Location     Type
 24502 ;;                  1  [STACK] void 
 24503 ;; Registers used:
 24504 ;;		wreg, status,2
 24505 ;; Tracked objects:
 24506 ;;		On entry : 3F/3F
 24507 ;;		On exit  : 3F/39
 24508 ;;		Unchanged: 0/0
 24509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24514 ;;Total ram usage:        0 bytes
 24515 ;; Hardware stack levels used:    1
 24516 ;; Hardware stack levels required when called:    7
 24517 ;; This function calls:
 24518 ;;		Nothing
 24519 ;; This function is called by:
 24520 ;;		_SYSTEM_Initialize
 24521 ;; This function uses a reentrant model
 24522 ;;
 24523                           
 24524                           	psect	text108
 24525  0190E2                     __ptext108:
 24526                           	opt callstack 0
 24527  0190E2                     _TMR2_Initialize:
 24528                           	opt callstack 22
 24529                           
 24530                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 24531                           
 24532                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24533                           ;incstack = 0
 24534  0190E2  0E01               	movlw	1
 24535  0190E4  6EAE               	movwf	174,c	;volatile
 24536                           
 24537                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 24538  0190E6  6AAD               	clrf	173,c	;volatile
 24539                           
 24540                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 24541  0190E8  6AAF               	clrf	175,c	;volatile
 24542                           
 24543                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 24544  0190EA  0E63               	movlw	99
 24545  0190EC  6EAB               	movwf	171,c	;volatile
 24546                           
 24547                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 24548  0190EE  6AAA               	clrf	170,c	;volatile
 24549                           
 24550                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 24551  0190F0  0139               	movlb	57	; () banked
 24552  0190F2  95A4               	bcf	164,2,b	;volatile
 24553                           
 24554                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 24555  0190F4  0EC0               	movlw	192
 24556  0190F6  6EAC               	movwf	172,c	;volatile
 24557                           
 24558                           ; BSR set to: 57
 24559                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24560  0190F8  0012               	return		;funcret
 24561  0190FA                     __end_of_TMR2_Initialize:
 24562                           	opt callstack 0
 24563                           
 24564 ;; *************** function _SPI1_Initialize *****************
 24565 ;; Defined at:
 24566 ;;		line 64 in file "mcc_generated_files/spi1.c"
 24567 ;; Parameters:    Size  Location     Type
 24568 ;;		None
 24569 ;; Auto vars:     Size  Location     Type
 24570 ;;		None
 24571 ;; Return value:  Size  Location     Type
 24572 ;;                  1  [STACK] void 
 24573 ;; Registers used:
 24574 ;;		wreg, status,2
 24575 ;; Tracked objects:
 24576 ;;		On entry : 3F/39
 24577 ;;		On exit  : 3F/3D
 24578 ;;		Unchanged: 0/0
 24579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24584 ;;Total ram usage:        0 bytes
 24585 ;; Hardware stack levels used:    1
 24586 ;; Hardware stack levels required when called:    7
 24587 ;; This function calls:
 24588 ;;		Nothing
 24589 ;; This function is called by:
 24590 ;;		_SYSTEM_Initialize
 24591 ;; This function uses a reentrant model
 24592 ;;
 24593                           
 24594                           	psect	text109
 24595  0190FA                     __ptext109:
 24596                           	opt callstack 0
 24597  0190FA                     _SPI1_Initialize:
 24598                           	opt callstack 22
 24599                           
 24600                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 24601                           
 24602                           ; BSR set to: 57
 24603                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24604                           ;incstack = 0
 24605  0190FA  0E40               	movlw	64
 24606  0190FC  013D               	movlb	61	; () banked
 24607  0190FE  6F15               	movwf	21,b	;volatile
 24608                           
 24609                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 24610  019100  0E03               	movlw	3
 24611  019102  6F16               	movwf	22,b	;volatile
 24612                           
 24613                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 24614  019104  0E4F               	movlw	79
 24615  019106  6F19               	movwf	25,b	;volatile
 24616                           
 24617                           ; BSR set to: 61
 24618                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 24619  019108  6B1C               	clrf	28,b	;volatile
 24620                           
 24621                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 24622  01910A  0E83               	movlw	131
 24623  01910C  6F14               	movwf	20,b	;volatile
 24624                           
 24625                           ; BSR set to: 61
 24626                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24627  01910E  0012               	return		;funcret
 24628  019110                     __end_of_SPI1_Initialize:
 24629                           	opt callstack 0
 24630                           
 24631 ;; *************** function _PWM8_Initialize *****************
 24632 ;; Defined at:
 24633 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 24634 ;; Parameters:    Size  Location     Type
 24635 ;;		None
 24636 ;; Auto vars:     Size  Location     Type
 24637 ;;		None
 24638 ;; Return value:  Size  Location     Type
 24639 ;;                  1  [STACK] void 
 24640 ;; Registers used:
 24641 ;;		wreg, status,2
 24642 ;; Tracked objects:
 24643 ;;		On entry : 0/3E
 24644 ;;		On exit  : 3F/3F
 24645 ;;		Unchanged: 0/0
 24646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24651 ;;Total ram usage:        0 bytes
 24652 ;; Hardware stack levels used:    1
 24653 ;; Hardware stack levels required when called:    7
 24654 ;; This function calls:
 24655 ;;		Nothing
 24656 ;; This function is called by:
 24657 ;;		_SYSTEM_Initialize
 24658 ;; This function uses a reentrant model
 24659 ;;
 24660                           
 24661                           	psect	text110
 24662  019110                     __ptext110:
 24663                           	opt callstack 0
 24664  019110                     _PWM8_Initialize:
 24665                           	opt callstack 22
 24666                           
 24667                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 24668                           
 24669                           ; BSR set to: 61
 24670                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24671                           ;incstack = 0
 24672  019110  0E80               	movlw	128
 24673  019112  6E62               	movwf	98,c	;volatile
 24674                           
 24675                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 24676  019114  6A61               	clrf	97,c	;volatile
 24677                           
 24678                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 24679  019116  0E40               	movlw	64
 24680  019118  6E60               	movwf	96,c	;volatile
 24681                           
 24682                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 24683  01911A  013F               	movlb	63	; () banked
 24684  01911C  515F               	movf	95,w,b	;volatile
 24685  01911E  0B3F               	andlw	-193
 24686  019120  0940               	iorlw	64
 24687  019122  6F5F               	movwf	95,b	;volatile
 24688                           
 24689                           ; BSR set to: 63
 24690                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24691  019124  0012               	return		;funcret
 24692  019126                     __end_of_PWM8_Initialize:
 24693                           	opt callstack 0
 24694                           
 24695 ;; *************** function _PMD_Initialize *****************
 24696 ;; Defined at:
 24697 ;;		line 90 in file "mcc_generated_files/mcc.c"
 24698 ;; Parameters:    Size  Location     Type
 24699 ;;		None
 24700 ;; Auto vars:     Size  Location     Type
 24701 ;;		None
 24702 ;; Return value:  Size  Location     Type
 24703 ;;                  1  [STACK] void 
 24704 ;; Registers used:
 24705 ;;		None
 24706 ;; Tracked objects:
 24707 ;;		On entry : 3F/39
 24708 ;;		On exit  : 3F/39
 24709 ;;		Unchanged: 0/0
 24710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24715 ;;Total ram usage:        0 bytes
 24716 ;; Hardware stack levels used:    1
 24717 ;; Hardware stack levels required when called:    7
 24718 ;; This function calls:
 24719 ;;		Nothing
 24720 ;; This function is called by:
 24721 ;;		_SYSTEM_Initialize
 24722 ;; This function uses a reentrant model
 24723 ;;
 24724                           
 24725                           	psect	text111
 24726  01913C                     __ptext111:
 24727                           	opt callstack 0
 24728  01913C                     _PMD_Initialize:
 24729                           	opt callstack 22
 24730                           
 24731                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 24732                           
 24733                           ; BSR set to: 63
 24734                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24735                           ;incstack = 0
 24736  01913C  0139               	movlb	57	; () banked
 24737  01913E  6BC0               	clrf	192,b	;volatile
 24738                           
 24739                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 24740  019140  6BC1               	clrf	193,b	;volatile
 24741                           
 24742                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 24743  019142  6BC2               	clrf	194,b	;volatile
 24744                           
 24745                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 24746  019144  6BC3               	clrf	195,b	;volatile
 24747                           
 24748                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 24749  019146  6BC4               	clrf	196,b	;volatile
 24750                           
 24751                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 24752  019148  6BC5               	clrf	197,b	;volatile
 24753                           
 24754                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 24755  01914A  6BC6               	clrf	198,b	;volatile
 24756                           
 24757                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 24758  01914C  6BC7               	clrf	199,b	;volatile
 24759                           
 24760                           ; BSR set to: 57
 24761                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 24762  01914E  0012               	return		;funcret
 24763  019150                     __end_of_PMD_Initialize:
 24764                           	opt callstack 0
 24765                           
 24766 ;; *************** function _PIN_MANAGER_Initialize *****************
 24767 ;; Defined at:
 24768 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 24769 ;; Parameters:    Size  Location     Type
 24770 ;;		None
 24771 ;; Auto vars:     Size  Location     Type
 24772 ;;		None
 24773 ;; Return value:  Size  Location     Type
 24774 ;;                  1  [STACK] void 
 24775 ;; Registers used:
 24776 ;;		wreg, status,2
 24777 ;; Tracked objects:
 24778 ;;		On entry : 3F/39
 24779 ;;		On exit  : 3F/3A
 24780 ;;		Unchanged: 0/0
 24781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24786 ;;Total ram usage:        0 bytes
 24787 ;; Hardware stack levels used:    1
 24788 ;; Hardware stack levels required when called:    7
 24789 ;; This function calls:
 24790 ;;		Nothing
 24791 ;; This function is called by:
 24792 ;;		_SYSTEM_Initialize
 24793 ;; This function uses a reentrant model
 24794 ;;
 24795                           
 24796                           	psect	text112
 24797  017BEC                     __ptext112:
 24798                           	opt callstack 0
 24799  017BEC                     _PIN_MANAGER_Initialize:
 24800                           	opt callstack 22
 24801                           
 24802                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 24803                           
 24804                           ; BSR set to: 57
 24805                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24806                           ;incstack = 0
 24807  017BEC  0E07               	movlw	7
 24808  017BEE  6EBE               	movwf	190,c	;volatile
 24809                           
 24810                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 24811  017BF0  0E80               	movlw	128
 24812  017BF2  6EBD               	movwf	189,c	;volatile
 24813                           
 24814                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 24815  017BF4  6ABA               	clrf	186,c	;volatile
 24816                           
 24817                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 24818  017BF6  6ABF               	clrf	191,c	;volatile
 24819                           
 24820                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 24821  017BF8  6ABB               	clrf	187,c	;volatile
 24822                           
 24823                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 24824  017BFA  0E07               	movlw	7
 24825  017BFC  6EBC               	movwf	188,c	;volatile
 24826                           
 24827                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 24828  017BFE  6AC6               	clrf	198,c	;volatile
 24829                           
 24830                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 24831  017C00  0E0F               	movlw	15
 24832  017C02  6EC7               	movwf	199,c	;volatile
 24833                           
 24834                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 24835  017C04  68C2               	setf	194,c	;volatile
 24836                           
 24837                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 24838  017C06  0EBF               	movlw	191
 24839  017C08  6EC3               	movwf	195,c	;volatile
 24840                           
 24841                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 24842  017C0A  0E90               	movlw	144
 24843  017C0C  6EC4               	movwf	196,c	;volatile
 24844                           
 24845                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 24846  017C0E  0E0C               	movlw	12
 24847  017C10  6EC5               	movwf	197,c	;volatile
 24848                           
 24849                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 24850  017C12  013A               	movlb	58	; () banked
 24851  017C14  6B70               	clrf	112,b	;volatile
 24852                           
 24853                           ; BSR set to: 58
 24854                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 24855  017C16  6B60               	clrf	96,b	;volatile
 24856                           
 24857                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 24858  017C18  0E3C               	movlw	60
 24859  017C1A  6F50               	movwf	80,b	;volatile
 24860                           
 24861                           ; BSR set to: 58
 24862                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 24863  017C1C  6B80               	clrf	128,b	;volatile
 24864                           
 24865                           ; BSR set to: 58
 24866                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 24867  017C1E  6B90               	clrf	144,b	;volatile
 24868                           
 24869                           ; BSR set to: 58
 24870                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 24871  017C20  6940               	setf	64,b	;volatile
 24872                           
 24873                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 24874  017C22  0E0C               	movlw	12
 24875  017C24  6F71               	movwf	113,b	;volatile
 24876                           
 24877                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 24878  017C26  0E0F               	movlw	15
 24879  017C28  6F91               	movwf	145,b	;volatile
 24880                           
 24881                           ; BSR set to: 58
 24882                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 24883  017C2A  6B81               	clrf	129,b	;volatile
 24884                           
 24885                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 24886  017C2C  0E83               	movlw	131
 24887  017C2E  6F51               	movwf	81,b	;volatile
 24888                           
 24889                           ; BSR set to: 58
 24890                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 24891  017C30  6B41               	clrf	65,b	;volatile
 24892                           
 24893                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 24894  017C32  0E97               	movlw	151
 24895  017C34  6F61               	movwf	97,b	;volatile
 24896                           
 24897                           ; BSR set to: 58
 24898                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 24899  017C36  6B82               	clrf	130,b	;volatile
 24900                           
 24901                           ; BSR set to: 58
 24902                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 24903  017C38  6B92               	clrf	146,b	;volatile
 24904                           
 24905                           ; BSR set to: 58
 24906                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 24907  017C3A  6B42               	clrf	66,b	;volatile
 24908                           
 24909                           ; BSR set to: 58
 24910                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 24911  017C3C  6B52               	clrf	82,b	;volatile
 24912                           
 24913                           ; BSR set to: 58
 24914                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 24915  017C3E  6B62               	clrf	98,b	;volatile
 24916                           
 24917                           ; BSR set to: 58
 24918                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 24919  017C40  6B72               	clrf	114,b	;volatile
 24920                           
 24921                           ; BSR set to: 58
 24922                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 24923  017C42  6943               	setf	67,b	;volatile
 24924                           
 24925                           ; BSR set to: 58
 24926                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 24927  017C44  6953               	setf	83,b	;volatile
 24928                           
 24929                           ; BSR set to: 58
 24930                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 24931  017C46  6963               	setf	99,b	;volatile
 24932                           
 24933                           ; BSR set to: 58
 24934                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 24935  017C48  6973               	setf	115,b	;volatile
 24936                           
 24937                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 24938  017C4A  0E07               	movlw	7
 24939  017C4C  6F83               	movwf	131,b	;volatile
 24940                           
 24941                           ; BSR set to: 58
 24942                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 24943  017C4E  6993               	setf	147,b	;volatile
 24944                           
 24945                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 24946  017C50  0E0F               	movlw	15
 24947  017C52  6FE8               	movwf	232,b	;volatile
 24948                           
 24949                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 24950  017C54  0E13               	movlw	19
 24951  017C56  6FDE               	movwf	222,b	;volatile
 24952                           
 24953                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 24954  017C58  0E16               	movlw	22
 24955  017C5A  6F0E               	movwf	14,b	;volatile
 24956                           
 24957                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 24958  017C5C  0E1E               	movlw	30
 24959  017C5E  6F13               	movwf	19,b	;volatile
 24960                           
 24961                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 24962  017C60  0E08               	movlw	8
 24963  017C62  6FC0               	movwf	192,b	;volatile
 24964                           
 24965                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 24966  017C64  0E10               	movlw	16
 24967  017C66  6F19               	movwf	25,b	;volatile
 24968                           
 24969                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 24970  017C68  0E09               	movlw	9
 24971  017C6A  6FC1               	movwf	193,b	;volatile
 24972                           
 24973                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 24974  017C6C  0E1F               	movlw	31
 24975  017C6E  6F15               	movwf	21,b	;volatile
 24976                           
 24977                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 24978  017C70  0E13               	movlw	19
 24979  017C72  6F16               	movwf	22,b	;volatile
 24980                           
 24981                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 24982  017C74  0E17               	movlw	23
 24983  017C76  6FE5               	movwf	229,b	;volatile
 24984                           
 24985                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 24986  017C78  0E14               	movlw	20
 24987  017C7A  6FDF               	movwf	223,b	;volatile
 24988                           
 24989                           ; BSR set to: 58
 24990                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 24991  017C7C  0012               	return		;funcret
 24992  017C7E                     __end_of_PIN_MANAGER_Initialize:
 24993                           	opt callstack 0
 24994                           
 24995 ;; *************** function _OSCILLATOR_Initialize *****************
 24996 ;; Defined at:
 24997 ;;		line 72 in file "mcc_generated_files/mcc.c"
 24998 ;; Parameters:    Size  Location     Type
 24999 ;;		None
 25000 ;; Auto vars:     Size  Location     Type
 25001 ;;		None
 25002 ;; Return value:  Size  Location     Type
 25003 ;;                  1  [STACK] void 
 25004 ;; Registers used:
 25005 ;;		wreg, status,2
 25006 ;; Tracked objects:
 25007 ;;		On entry : 3F/3A
 25008 ;;		On exit  : 3F/39
 25009 ;;		Unchanged: 0/0
 25010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25015 ;;Total ram usage:        0 bytes
 25016 ;; Hardware stack levels used:    1
 25017 ;; Hardware stack levels required when called:    7
 25018 ;; This function calls:
 25019 ;;		Nothing
 25020 ;; This function is called by:
 25021 ;;		_SYSTEM_Initialize
 25022 ;; This function uses a reentrant model
 25023 ;;
 25024                           
 25025                           	psect	text113
 25026  019126                     __ptext113:
 25027                           	opt callstack 0
 25028  019126                     _OSCILLATOR_Initialize:
 25029                           	opt callstack 22
 25030                           
 25031                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 25032                           
 25033                           ; BSR set to: 58
 25034                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25035                           ;incstack = 0
 25036  019126  0E20               	movlw	32
 25037  019128  0139               	movlb	57	; () banked
 25038  01912A  6FD9               	movwf	217,b	;volatile
 25039                           
 25040                           ; BSR set to: 57
 25041                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 25042  01912C  6BDB               	clrf	219,b	;volatile
 25043                           
 25044                           ; BSR set to: 57
 25045                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 25046  01912E  6BDD               	clrf	221,b	;volatile
 25047                           
 25048                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 25049  019130  0E02               	movlw	2
 25050  019132  6FDF               	movwf	223,b	;volatile
 25051                           
 25052                           ; BSR set to: 57
 25053                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 25054  019134  6BDE               	clrf	222,b	;volatile
 25055  019136                     l173:
 25056                           
 25057                           ; BSR set to: 57
 25058                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 25059  019136  B1DC               	btfsc	220,0,b	;volatile
 25060  019138  0012               	return	
 25061  01913A  D7FD               	goto	l173
 25062  01913C                     __end_of_OSCILLATOR_Initialize:
 25063                           	opt callstack 0
 25064                           
 25065 ;; *************** function _INTERRUPT_Initialize *****************
 25066 ;; Defined at:
 25067 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 25068 ;; Parameters:    Size  Location     Type
 25069 ;;		None
 25070 ;; Auto vars:     Size  Location     Type
 25071 ;;  state           1  [STACK] _Bool 
 25072 ;; Return value:  Size  Location     Type
 25073 ;;                  1  [STACK] void 
 25074 ;; Registers used:
 25075 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 25076 ;; Tracked objects:
 25077 ;;		On entry : 0/0
 25078 ;;		On exit  : 3F/39
 25079 ;;		Unchanged: 0/0
 25080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25085 ;;Total ram usage:        0 bytes
 25086 ;; Hardware stack levels used:    1
 25087 ;; Hardware stack levels required when called:    7
 25088 ;; This function calls:
 25089 ;;		Nothing
 25090 ;; This function is called by:
 25091 ;;		_SYSTEM_Initialize
 25092 ;; This function uses a reentrant model
 25093 ;;
 25094                           
 25095                           	psect	text114
 25096  0180E6                     __ptext114:
 25097                           	opt callstack 0
 25098  0180E6                     _INTERRUPT_Initialize:
 25099                           	opt callstack 0
 25100                           
 25101                           ; BSR set to: 57
 25102                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25103  0180E6  52E6               	movf	postinc1,f,c
 25104                           
 25105                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 25106                           
 25107                           ;incstack = 0
 25108  0180E8  8AD2               	bsf	210,5,c	;volatile
 25109                           
 25110                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 25111  0180EA  AED2               	btfss	16338,7,c	;volatile
 25112  0180EC  D003               	goto	u8120
 25113  0180EE  6A30               	clrf	(btemp+11)^0,c
 25114  0180F0  2A30               	incf	(btemp+11)^0,f,c
 25115  0180F2  D001               	goto	u8138
 25116  0180F4                     u8120:
 25117  0180F4  6A30               	clrf	(btemp+11)^0,c
 25118  0180F6                     u8138:
 25119                           
 25120                           ;stkvar	_state @ sp[(-1)+0]
 25121  0180F6  0EFF               	movlw	-1
 25122  0180F8  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 25123                           
 25124                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 25125  0180FE  9ED2               	bcf	16338,7,c	;volatile
 25126                           
 25127                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 25128  018100  0E55               	movlw	85
 25129  018102  6ED4               	movwf	212,c	;volatile
 25130                           
 25131                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 25132  018104  0EAA               	movlw	170
 25133  018106  6ED4               	movwf	212,c	;volatile
 25134                           
 25135                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 25136  018108  90D4               	bcf	212,0,c	;volatile
 25137                           
 25138                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 25139  01810A  0138               	movlb	56	; () banked
 25140  01810C  6B9F               	clrf	159,b	;volatile
 25141                           
 25142                           ; BSR set to: 56
 25143                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 25144  01810E  6B9E               	clrf	158,b	;volatile
 25145                           
 25146                           ; BSR set to: 56
 25147                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 25148  018110  0E08               	movlw	8
 25149  018112  6F9D               	movwf	157,b	;volatile
 25150                           
 25151                           ; BSR set to: 56
 25152                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 25153  018114  0E55               	movlw	85
 25154  018116  6ED4               	movwf	212,c	;volatile
 25155                           
 25156                           ; BSR set to: 56
 25157                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 25158  018118  0EAA               	movlw	170
 25159  01811A  6ED4               	movwf	212,c	;volatile
 25160                           
 25161                           ; BSR set to: 56
 25162                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 25163  01811C  80D4               	bsf	212,0,c	;volatile
 25164                           
 25165                           ; BSR set to: 56
 25166                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 25167                           ;stkvar	_state @ sp[(-1)+0]
 25168  01811E  0EFF               	movlw	-1
 25169  018120  B0E3               	btfsc	plusw1,0,c
 25170  018122  D002               	bra	u8145
 25171  018124  9ED2               	bcf	16338,7,c	;volatile
 25172  018126  D001               	bra	u8146
 25173  018128                     u8145:
 25174  018128  8ED2               	bsf	16338,7,c	;volatile
 25175  01812A                     u8146:
 25176                           
 25177                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 25178  01812A  0139               	movlb	57	; () banked
 25179  01812C  8782               	bsf	130,3,b	;volatile
 25180                           
 25181                           ; BSR set to: 57
 25182                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 25183  01812E  8382               	bsf	130,1,b	;volatile
 25184                           
 25185                           ; BSR set to: 57
 25186                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 25187  018130  8182               	bsf	130,0,b	;volatile
 25188                           
 25189                           ; BSR set to: 57
 25190                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 25191  018132  8582               	bsf	130,2,b	;volatile
 25192                           
 25193                           ; BSR set to: 57
 25194                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 25195  018134  8786               	bsf	134,3,b	;volatile
 25196                           
 25197                           ; BSR set to: 57
 25198                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 25199  018136  8586               	bsf	134,2,b	;volatile
 25200                           
 25201                           ; BSR set to: 57
 25202                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 25203  018138  8983               	bsf	131,4,b	;volatile
 25204                           
 25205                           ; BSR set to: 57
 25206                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 25207  01813A  8783               	bsf	131,3,b	;volatile
 25208                           
 25209                           ; BSR set to: 57
 25210                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 25211  01813C  8181               	bsf	129,0,b	;volatile
 25212                           
 25213                           ; BSR set to: 57
 25214                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 0;
 25215  01813E  9185               	bcf	133,0,b	;volatile
 25216                           
 25217                           ; BSR set to: 57
 25218                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR9bits.TMR6IP = 1;
 25219  018140  8189               	bsf	137,0,b	;volatile
 25220                           
 25221                           ; BSR set to: 57
 25222                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR8bits.TMR5IP = 0;
 25223  018142  9D88               	bcf	136,6,b	;volatile
 25224                           
 25225                           ; BSR set to: 57
 25226                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 25227  018144  8581               	bsf	129,2,b	;volatile
 25228                           
 25229                           ; BSR set to: 57
 25230                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 25231  018146  8781               	bsf	129,3,b	;volatile
 25232                           
 25233                           ; BSR set to: 57
 25234                           ;mcc_generated_files/interrupt_manager.c: 86:     IPR6bits.TMR3IP = 0;
 25235  018148  9D86               	bcf	134,6,b	;volatile
 25236                           
 25237                           ; BSR set to: 57
 25238                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 25239  01814A  52E5               	movf	postdec1,f,c
 25240  01814C  0012               	return		;funcret
 25241  01814E                     __end_of_INTERRUPT_Initialize:
 25242                           	opt callstack 0
 25243                           
 25244 ;; *************** function _FVR_Initialize *****************
 25245 ;; Defined at:
 25246 ;;		line 58 in file "mcc_generated_files/fvr.c"
 25247 ;; Parameters:    Size  Location     Type
 25248 ;;		None
 25249 ;; Auto vars:     Size  Location     Type
 25250 ;;		None
 25251 ;; Return value:  Size  Location     Type
 25252 ;;                  1  [STACK] void 
 25253 ;; Registers used:
 25254 ;;		wreg, status,2
 25255 ;; Tracked objects:
 25256 ;;		On entry : 3F/39
 25257 ;;		On exit  : 3F/3E
 25258 ;;		Unchanged: 0/0
 25259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25264 ;;Total ram usage:        0 bytes
 25265 ;; Hardware stack levels used:    1
 25266 ;; Hardware stack levels required when called:    7
 25267 ;; This function calls:
 25268 ;;		Nothing
 25269 ;; This function is called by:
 25270 ;;		_SYSTEM_Initialize
 25271 ;; This function uses a reentrant model
 25272 ;;
 25273                           
 25274                           	psect	text115
 25275  01920A                     __ptext115:
 25276                           	opt callstack 0
 25277  01920A                     _FVR_Initialize:
 25278                           	opt callstack 22
 25279                           
 25280                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 25281                           
 25282                           ; BSR set to: 57
 25283                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25284                           ;incstack = 0
 25285  01920A  0EAF               	movlw	175
 25286  01920C  013E               	movlb	62	; () banked
 25287  01920E  6FC1               	movwf	193,b	;volatile
 25288                           
 25289                           ; BSR set to: 62
 25290                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 25291  019210  0012               	return		;funcret
 25292  019212                     __end_of_FVR_Initialize:
 25293                           	opt callstack 0
 25294                           
 25295 ;; *************** function _EXT_INT_Initialize *****************
 25296 ;; Defined at:
 25297 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 25298 ;; Parameters:    Size  Location     Type
 25299 ;;		None
 25300 ;; Auto vars:     Size  Location     Type
 25301 ;;		None
 25302 ;; Return value:  Size  Location     Type
 25303 ;;                  1  [STACK] void 
 25304 ;; Registers used:
 25305 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25306 ;; Tracked objects:
 25307 ;;		On entry : 3F/39
 25308 ;;		On exit  : 3F/39
 25309 ;;		Unchanged: 0/0
 25310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25315 ;;Total ram usage:        0 bytes
 25316 ;; Hardware stack levels used:    1
 25317 ;; Hardware stack levels required when called:    8
 25318 ;; This function calls:
 25319 ;;		_INT0_SetInterruptHandler
 25320 ;;		_INT1_SetInterruptHandler
 25321 ;; This function is called by:
 25322 ;;		_SYSTEM_Initialize
 25323 ;; This function uses a reentrant model
 25324 ;;
 25325                           
 25326                           	psect	text116
 25327  0189E8                     __ptext116:
 25328                           	opt callstack 0
 25329  0189E8                     _EXT_INT_Initialize:
 25330                           	opt callstack 21
 25331                           
 25332                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 25333                           
 25334                           ; BSR set to: 62
 25335                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25336                           ;incstack = 0
 25337  0189E8  0139               	movlb	57	; () banked
 25338  0189EA  91A1               	bcf	161,0,b	;volatile
 25339                           
 25340                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 25341  0189EC  90D2               	bcf	210,0,c	;volatile
 25342                           
 25343                           ; BSR set to: 57
 25344                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 25345  0189EE  0E3A               	movlw	low _INT0_DefaultInterruptHandler
 25346  0189F0  6EE6               	movwf	postinc1,c
 25347  0189F2  0E92               	movlw	high _INT0_DefaultInterruptHandler
 25348  0189F4  6EE6               	movwf	postinc1,c
 25349  0189F6  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 25350  0189F8  6EE6               	movwf	postinc1,c
 25351  0189FA  ECC9  F0C6         	call	_INT0_SetInterruptHandler	;wreg free
 25352                           
 25353                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 25354  0189FE  0139               	movlb	57	; () banked
 25355  018A00  8191               	bsf	145,0,b	;volatile
 25356                           
 25357                           ; BSR set to: 57
 25358                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 25359  018A02  91A5               	bcf	165,0,b	;volatile
 25360                           
 25361                           ; BSR set to: 57
 25362                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 25363  018A04  92D2               	bcf	210,1,c	;volatile
 25364                           
 25365                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 25366  018A06  0E36               	movlw	low _INT1_DefaultInterruptHandler
 25367  018A08  6EE6               	movwf	postinc1,c
 25368  018A0A  0E92               	movlw	high _INT1_DefaultInterruptHandler
 25369  018A0C  6EE6               	movwf	postinc1,c
 25370  018A0E  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 25371  018A10  6EE6               	movwf	postinc1,c
 25372  018A12  ECB5  F0C6         	call	_INT1_SetInterruptHandler	;wreg free
 25373                           
 25374                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 25375  018A16  0139               	movlb	57	; () banked
 25376  018A18  8195               	bsf	149,0,b	;volatile
 25377                           
 25378                           ; BSR set to: 57
 25379                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 25380  018A1A  0012               	return		;funcret
 25381  018A1C                     __end_of_EXT_INT_Initialize:
 25382                           	opt callstack 0
 25383                           
 25384 ;; *************** function _INT1_SetInterruptHandler *****************
 25385 ;; Defined at:
 25386 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 25387 ;; Parameters:    Size  Location     Type
 25388 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25389 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 25390 ;; Auto vars:     Size  Location     Type
 25391 ;;		None
 25392 ;; Return value:  Size  Location     Type
 25393 ;;                  1  [STACK] void 
 25394 ;; Registers used:
 25395 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25396 ;; Tracked objects:
 25397 ;;		On entry : 3F/39
 25398 ;;		On exit  : 0/0
 25399 ;;		Unchanged: 0/0
 25400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25405 ;;Total ram usage:        0 bytes
 25406 ;; Hardware stack levels used:    1
 25407 ;; Hardware stack levels required when called:    7
 25408 ;; This function calls:
 25409 ;;		Nothing
 25410 ;; This function is called by:
 25411 ;;		_EXT_INT_Initialize
 25412 ;;		_start_switch_handler
 25413 ;; This function uses a reentrant model
 25414 ;;
 25415                           
 25416                           	psect	text117
 25417  018D6A                     __ptext117:
 25418                           	opt callstack 0
 25419  018D6A                     _INT1_SetInterruptHandler:
 25420                           	opt callstack 22
 25421                           
 25422                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 25423                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25424                           
 25425                           ; BSR set to: 57
 25426                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25427                           ;incstack = 0
 25428  018D6A  50E1               	movf	fsr1l,w,c
 25429  018D6C  0FFD               	addlw	-3
 25430  018D6E  6ED9               	movwf	fsr2l,c
 25431  018D70  50E2               	movf	fsr1h,w,c
 25432  018D72  6EDA               	movwf	fsr2h,c
 25433  018D74  0EFF               	movlw	255
 25434  018D76  22DA               	addwfc	fsr2h,f,c
 25435  018D78  006F FF78  F004    	movff	postinc2,_INT1_InterruptHandler
 25436  018D7E  006F FF78  F005    	movff	postinc2,_INT1_InterruptHandler+1
 25437  018D84  006F FF74  F006    	movff	postdec2,_INT1_InterruptHandler+2
 25438                           
 25439                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 25440  018D8A  52E5               	movf	postdec1,f,c
 25441  018D8C  52E5               	movf	postdec1,f,c
 25442  018D8E  52E5               	movf	postdec1,f,c
 25443  018D90  0012               	return		;funcret
 25444  018D92                     __end_of_INT1_SetInterruptHandler:
 25445                           	opt callstack 0
 25446                           
 25447 ;; *************** function _INT0_SetInterruptHandler *****************
 25448 ;; Defined at:
 25449 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 25450 ;; Parameters:    Size  Location     Type
 25451 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25452 ;;		 -> INT0_DefaultInterruptHandler(1), 
 25453 ;; Auto vars:     Size  Location     Type
 25454 ;;		None
 25455 ;; Return value:  Size  Location     Type
 25456 ;;                  1  [STACK] void 
 25457 ;; Registers used:
 25458 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25459 ;; Tracked objects:
 25460 ;;		On entry : 3F/39
 25461 ;;		On exit  : 0/0
 25462 ;;		Unchanged: 0/0
 25463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25468 ;;Total ram usage:        0 bytes
 25469 ;; Hardware stack levels used:    1
 25470 ;; Hardware stack levels required when called:    7
 25471 ;; This function calls:
 25472 ;;		Nothing
 25473 ;; This function is called by:
 25474 ;;		_EXT_INT_Initialize
 25475 ;; This function uses a reentrant model
 25476 ;;
 25477                           
 25478                           	psect	text118
 25479  018D92                     __ptext118:
 25480                           	opt callstack 0
 25481  018D92                     _INT0_SetInterruptHandler:
 25482                           	opt callstack 21
 25483                           
 25484                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 25485                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25486                           
 25487                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25488                           ;incstack = 0
 25489  018D92  50E1               	movf	fsr1l,w,c
 25490  018D94  0FFD               	addlw	-3
 25491  018D96  6ED9               	movwf	fsr2l,c
 25492  018D98  50E2               	movf	fsr1h,w,c
 25493  018D9A  6EDA               	movwf	fsr2h,c
 25494  018D9C  0EFF               	movlw	255
 25495  018D9E  22DA               	addwfc	fsr2h,f,c
 25496  018DA0  006F FF78  F007    	movff	postinc2,_INT0_InterruptHandler
 25497  018DA6  006F FF78  F008    	movff	postinc2,_INT0_InterruptHandler+1
 25498  018DAC  006F FF74  F009    	movff	postdec2,_INT0_InterruptHandler+2
 25499                           
 25500                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 25501  018DB2  52E5               	movf	postdec1,f,c
 25502  018DB4  52E5               	movf	postdec1,f,c
 25503  018DB6  52E5               	movf	postdec1,f,c
 25504  018DB8  0012               	return		;funcret
 25505  018DBA                     __end_of_INT0_SetInterruptHandler:
 25506                           	opt callstack 0
 25507                           
 25508 ;; *************** function _DMA2_Initialize *****************
 25509 ;; Defined at:
 25510 ;;		line 61 in file "mcc_generated_files/dma2.c"
 25511 ;; Parameters:    Size  Location     Type
 25512 ;;		None
 25513 ;; Auto vars:     Size  Location     Type
 25514 ;;		None
 25515 ;; Return value:  Size  Location     Type
 25516 ;;                  1  [STACK] void 
 25517 ;; Registers used:
 25518 ;;		wreg, status,2
 25519 ;; Tracked objects:
 25520 ;;		On entry : 3F/3D
 25521 ;;		On exit  : 3F/3B
 25522 ;;		Unchanged: 0/0
 25523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25528 ;;Total ram usage:        0 bytes
 25529 ;; Hardware stack levels used:    1
 25530 ;; Hardware stack levels required when called:    7
 25531 ;; This function calls:
 25532 ;;		Nothing
 25533 ;; This function is called by:
 25534 ;;		_SYSTEM_Initialize
 25535 ;; This function uses a reentrant model
 25536 ;;
 25537                           
 25538                           	psect	text119
 25539  018392                     __ptext119:
 25540                           	opt callstack 0
 25541  018392                     _DMA2_Initialize:
 25542                           	opt callstack 22
 25543                           
 25544                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 25545                           
 25546                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25547                           ;incstack = 0
 25548  018392  0E00               	movlw	0
 25549  018394  013B               	movlb	59	; () banked
 25550  018396  6FD9               	movwf	217,b	;volatile
 25551  018398  0E10               	movlw	16
 25552  01839A  6FDA               	movwf	218,b	;volatile
 25553  01839C  0E00               	movlw	0
 25554  01839E  6FDB               	movwf	219,b	;volatile
 25555                           
 25556                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 25557  0183A0  0E3F               	movlw	63
 25558  0183A2  6FD1               	movwf	209,b	;volatile
 25559  0183A4  0EBB               	movlw	187
 25560  0183A6  6FD0               	movwf	208,b	;volatile
 25561                           
 25562                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 25563  0183A8  0E03               	movlw	3
 25564  0183AA  6FDD               	movwf	221,b	;volatile
 25565                           
 25566                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 25567  0183AC  0E00               	movlw	0
 25568  0183AE  6FD8               	movwf	216,b	;volatile
 25569  0183B0  0E01               	movlw	1
 25570  0183B2  6FD7               	movwf	215,b	;volatile
 25571                           
 25572                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 25573  0183B4  0E00               	movlw	0
 25574  0183B6  6FCF               	movwf	207,b	;volatile
 25575  0183B8  0E01               	movlw	1
 25576  0183BA  6FCE               	movwf	206,b	;volatile
 25577                           
 25578                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 25579  0183BC  0E46               	movlw	70
 25580  0183BE  6FDF               	movwf	223,b	;volatile
 25581                           
 25582                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 25583  0183C0  0E3D               	movlw	61
 25584  0183C2  6FDE               	movwf	222,b	;volatile
 25585                           
 25586                           ; BSR set to: 59
 25587                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 25588  0183C4  0139               	movlb	57	; () banked
 25589  0183C6  97A5               	bcf	165,3,b	;volatile
 25590                           
 25591                           ; BSR set to: 57
 25592                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 25593  0183C8  95A5               	bcf	165,2,b	;volatile
 25594                           
 25595                           ; BSR set to: 57
 25596                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 25597  0183CA  9BA5               	bcf	165,5,b	;volatile
 25598                           
 25599                           ; BSR set to: 57
 25600                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 25601  0183CC  99A5               	bcf	165,4,b	;volatile
 25602                           
 25603                           ; BSR set to: 57
 25604                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 25605  0183CE  9795               	bcf	149,3,b	;volatile
 25606                           
 25607                           ; BSR set to: 57
 25608                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 25609  0183D0  9595               	bcf	149,2,b	;volatile
 25610                           
 25611                           ; BSR set to: 57
 25612                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 25613  0183D2  9B95               	bcf	149,5,b	;volatile
 25614                           
 25615                           ; BSR set to: 57
 25616                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 25617  0183D4  9995               	bcf	149,4,b	;volatile
 25618  0183D6  9ED2               	bcf	16338,7,c	;# 
 25619  0183D8  0139               	banksel	14831	;# 
 25620  0183DA  0E55               	movlw	85	;# 
 25621  0183DC  6FEF               	movwf	14831,b	;# 
 25622  0183DE  0EAA               	movlw	170	;# 
 25623  0183E0  6FEF               	movwf	14831,b	;# 
 25624  0183E2  81EF               	bsf	14831,0,b	;# 
 25625  0183E4  8ED2               	bsf	16338,7,c	;# 
 25626                           
 25627                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 25628  0183E6  013B               	movlb	59	; () banked
 25629  0183E8  6BDC               	clrf	220,b	;volatile
 25630                           
 25631                           ; BSR set to: 59
 25632                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25633  0183EA  0012               	return		;funcret
 25634  0183EC                     __end_of_DMA2_Initialize:
 25635                           	opt callstack 0
 25636                           
 25637 ;; *************** function _DMA1_Initialize *****************
 25638 ;; Defined at:
 25639 ;;		line 86 in file "mcc_generated_files/dma1.c"
 25640 ;; Parameters:    Size  Location     Type
 25641 ;;		None
 25642 ;; Auto vars:     Size  Location     Type
 25643 ;;		None
 25644 ;; Return value:  Size  Location     Type
 25645 ;;                  1  [STACK] void 
 25646 ;; Registers used:
 25647 ;;		wreg, status,2
 25648 ;; Tracked objects:
 25649 ;;		On entry : 3F/3B
 25650 ;;		On exit  : 3F/3B
 25651 ;;		Unchanged: 0/0
 25652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25657 ;;Total ram usage:        0 bytes
 25658 ;; Hardware stack levels used:    1
 25659 ;; Hardware stack levels required when called:    7
 25660 ;; This function calls:
 25661 ;;		Nothing
 25662 ;; This function is called by:
 25663 ;;		_SYSTEM_Initialize
 25664 ;; This function uses a reentrant model
 25665 ;;
 25666                           
 25667                           	psect	text120
 25668  017FA8                     __ptext120:
 25669                           	opt callstack 0
 25670  017FA8                     _DMA1_Initialize:
 25671                           	opt callstack 22
 25672                           
 25673                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 25674                           
 25675                           ; BSR set to: 59
 25676                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25677                           ;incstack = 0
 25678  017FA8  0E00               	movlw	0
 25679  017FAA  013B               	movlb	59	; () banked
 25680  017FAC  6FF9               	movwf	249,b	;volatile
 25681  017FAE  0E10               	movlw	16
 25682  017FB0  6FFA               	movwf	250,b	;volatile
 25683  017FB2  0E00               	movlw	0
 25684  017FB4  6FFB               	movwf	251,b	;volatile
 25685                           
 25686                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 25687  017FB6  0E3D               	movlw	61
 25688  017FB8  6FF1               	movwf	241,b	;volatile
 25689  017FBA  0E11               	movlw	17
 25690  017FBC  6FF0               	movwf	240,b	;volatile
 25691                           
 25692                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 25693  017FBE  0E03               	movlw	3
 25694  017FC0  6FFD               	movwf	253,b	;volatile
 25695                           
 25696                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 25697  017FC2  0E00               	movlw	0
 25698  017FC4  6FF8               	movwf	248,b	;volatile
 25699  017FC6  0E01               	movlw	1
 25700  017FC8  6FF7               	movwf	247,b	;volatile
 25701                           
 25702                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 25703  017FCA  0E00               	movlw	0
 25704  017FCC  6FEF               	movwf	239,b	;volatile
 25705  017FCE  0E01               	movlw	1
 25706  017FD0  6FEE               	movwf	238,b	;volatile
 25707                           
 25708                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 25709  017FD2  0E15               	movlw	21
 25710  017FD4  6FFF               	movwf	255,b	;volatile
 25711                           
 25712                           ; BSR set to: 59
 25713                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 25714  017FD6  6BFE               	clrf	254,b	;volatile
 25715                           
 25716                           ; BSR set to: 59
 25717                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 25718  017FD8  0139               	movlb	57	; () banked
 25719  017FDA  93A2               	bcf	162,1,b	;volatile
 25720                           
 25721                           ; BSR set to: 57
 25722                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 25723  017FDC  91A2               	bcf	162,0,b	;volatile
 25724                           
 25725                           ; BSR set to: 57
 25726                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 25727  017FDE  97A2               	bcf	162,3,b	;volatile
 25728                           
 25729                           ; BSR set to: 57
 25730                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 25731  017FE0  95A2               	bcf	162,2,b	;volatile
 25732                           
 25733                           ; BSR set to: 57
 25734                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 25735  017FE2  8392               	bsf	146,1,b	;volatile
 25736                           
 25737                           ; BSR set to: 57
 25738                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 25739  017FE4  8192               	bsf	146,0,b	;volatile
 25740                           
 25741                           ; BSR set to: 57
 25742                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 25743  017FE6  8792               	bsf	146,3,b	;volatile
 25744                           
 25745                           ; BSR set to: 57
 25746                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 25747  017FE8  8592               	bsf	146,2,b	;volatile
 25748                           
 25749                           ; BSR set to: 57
 25750                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 25751  017FEA  6BF1               	clrf	241,b	;volatile
 25752                           
 25753                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 25754  017FEC  0E01               	movlw	1
 25755  017FEE  6FF2               	movwf	242,b	;volatile
 25756                           
 25757                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 25758  017FF0  0E04               	movlw	4
 25759  017FF2  6FF3               	movwf	243,b	;volatile
 25760                           
 25761                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 25762  017FF4  0E02               	movlw	2
 25763  017FF6  6FF4               	movwf	244,b	;volatile
 25764                           
 25765                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 25766  017FF8  0E03               	movlw	3
 25767  017FFA  6FF7               	movwf	247,b	;volatile
 25768  017FFC  9ED2               	bcf	16338,7,c	;# 
 25769  017FFE  0139               	banksel	14831	;# 
 25770  018000  0E55               	movlw	85	;# 
 25771  018002  6FEF               	movwf	14831,b	;# 
 25772  018004  0EAA               	movlw	170	;# 
 25773  018006  6FEF               	movwf	14831,b	;# 
 25774  018008  81EF               	bsf	14831,0,b	;# 
 25775  01800A  8ED2               	bsf	16338,7,c	;# 
 25776                           
 25777                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 25778  01800C  013B               	movlb	59	; () banked
 25779  01800E  6BFC               	clrf	252,b	;volatile
 25780                           
 25781                           ; BSR set to: 59
 25782                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25783  018010  0012               	return		;funcret
 25784  018012                     __end_of_DMA1_Initialize:
 25785                           	opt callstack 0
 25786                           
 25787 ;; *************** function _CLKREF_Initialize *****************
 25788 ;; Defined at:
 25789 ;;		line 58 in file "mcc_generated_files/clkref.c"
 25790 ;; Parameters:    Size  Location     Type
 25791 ;;		None
 25792 ;; Auto vars:     Size  Location     Type
 25793 ;;		None
 25794 ;; Return value:  Size  Location     Type
 25795 ;;                  1  [STACK] void 
 25796 ;; Registers used:
 25797 ;;		wreg, status,2
 25798 ;; Tracked objects:
 25799 ;;		On entry : 3F/3B
 25800 ;;		On exit  : 3F/3C
 25801 ;;		Unchanged: 0/0
 25802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25807 ;;Total ram usage:        0 bytes
 25808 ;; Hardware stack levels used:    1
 25809 ;; Hardware stack levels required when called:    7
 25810 ;; This function calls:
 25811 ;;		Nothing
 25812 ;; This function is called by:
 25813 ;;		_SYSTEM_Initialize
 25814 ;; This function uses a reentrant model
 25815 ;;
 25816                           
 25817                           	psect	text121
 25818  0191BE                     __ptext121:
 25819                           	opt callstack 0
 25820  0191BE                     _CLKREF_Initialize:
 25821                           	opt callstack 22
 25822                           
 25823                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 25824                           
 25825                           ; BSR set to: 59
 25826                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25827                           ;incstack = 0
 25828  0191BE  013C               	movlb	60	; () banked
 25829  0191C0  6BE6               	clrf	230,b	;volatile
 25830                           
 25831                           ; BSR set to: 60
 25832                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 25833  0191C2  0E94               	movlw	148
 25834  0191C4  6FE5               	movwf	229,b	;volatile
 25835                           
 25836                           ; BSR set to: 60
 25837                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 25838  0191C6  0012               	return		;funcret
 25839  0191C8                     __end_of_CLKREF_Initialize:
 25840                           	opt callstack 0
 25841                           
 25842 ;; *************** function _ADCC_Initialize *****************
 25843 ;; Defined at:
 25844 ;;		line 65 in file "mcc_generated_files/adcc.c"
 25845 ;; Parameters:    Size  Location     Type
 25846 ;;		None
 25847 ;; Auto vars:     Size  Location     Type
 25848 ;;		None
 25849 ;; Return value:  Size  Location     Type
 25850 ;;                  1  [STACK] void 
 25851 ;; Registers used:
 25852 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 25853 ;; Tracked objects:
 25854 ;;		On entry : 3F/3E
 25855 ;;		On exit  : 0/0
 25856 ;;		Unchanged: 0/0
 25857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25862 ;;Total ram usage:        0 bytes
 25863 ;; Hardware stack levels used:    1
 25864 ;; Hardware stack levels required when called:    8
 25865 ;; This function calls:
 25866 ;;		_ADCC_SetADIInterruptHandler
 25867 ;;		_ADCC_SetADTIInterruptHandler
 25868 ;; This function is called by:
 25869 ;;		_SYSTEM_Initialize
 25870 ;; This function uses a reentrant model
 25871 ;;
 25872                           
 25873                           	psect	text122
 25874  018012                     __ptext122:
 25875                           	opt callstack 0
 25876  018012                     _ADCC_Initialize:
 25877                           	opt callstack 21
 25878                           
 25879                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 25880                           
 25881                           ; BSR set to: 60
 25882                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25883                           ;incstack = 0
 25884  018012  013E               	movlb	62	; () banked
 25885  018014  6BDE               	clrf	222,b	;volatile
 25886                           
 25887                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 25888  018016  6BDF               	clrf	223,b	;volatile
 25889                           
 25890                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 25891  018018  6BE0               	clrf	224,b	;volatile
 25892                           
 25893                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 25894  01801A  6BE1               	clrf	225,b	;volatile
 25895                           
 25896                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 25897  01801C  6BE4               	clrf	228,b	;volatile
 25898                           
 25899                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 25900  01801E  6BE5               	clrf	229,b	;volatile
 25901                           
 25902                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 25903  018020  6BEA               	clrf	234,b	;volatile
 25904                           
 25905                           ; BSR set to: 62
 25906                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 25907  018022  0E40               	movlw	64
 25908  018024  6FEC               	movwf	236,b	;volatile
 25909                           
 25910                           ; BSR set to: 62
 25911                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 25912  018026  6BF1               	clrf	241,b	;volatile
 25913                           
 25914                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 25915  018028  0E20               	movlw	32
 25916  01802A  6FF3               	movwf	243,b	;volatile
 25917                           
 25918                           ; BSR set to: 62
 25919                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 25920  01802C  6BF4               	clrf	244,b	;volatile
 25921                           
 25922                           ; BSR set to: 62
 25923                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 25924  01802E  6BF5               	clrf	245,b	;volatile
 25925                           
 25926                           ; BSR set to: 62
 25927                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 25928  018030  6BF6               	clrf	246,b	;volatile
 25929                           
 25930                           ; BSR set to: 62
 25931                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 25932  018032  6BF7               	clrf	247,b	;volatile
 25933                           
 25934                           ; BSR set to: 62
 25935                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 25936  018034  6BF9               	clrf	249,b	;volatile
 25937                           
 25938                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 25939  018036  0E5B               	movlw	91
 25940  018038  6FFA               	movwf	250,b	;volatile
 25941                           
 25942                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 25943  01803A  0E27               	movlw	39
 25944  01803C  6FFB               	movwf	251,b	;volatile
 25945                           
 25946                           ; BSR set to: 62
 25947                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 25948  01803E  6BFC               	clrf	252,b	;volatile
 25949                           
 25950                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 25951  018040  0E02               	movlw	2
 25952  018042  6FFD               	movwf	253,b	;volatile
 25953                           
 25954                           ; BSR set to: 62
 25955                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 25956  018044  6BFE               	clrf	254,b	;volatile
 25957                           
 25958                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 25959  018046  0E07               	movlw	7
 25960  018048  6FFF               	movwf	255,b	;volatile
 25961                           
 25962                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 25963  01804A  0E84               	movlw	132
 25964  01804C  6FF8               	movwf	248,b	;volatile
 25965                           
 25966                           ; BSR set to: 62
 25967                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 25968  01804E  0139               	movlb	57	; () banked
 25969  018050  95A1               	bcf	161,2,b	;volatile
 25970                           
 25971                           ; BSR set to: 57
 25972                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 25973  018052  8591               	bsf	145,2,b	;volatile
 25974                           
 25975                           ; BSR set to: 57
 25976                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 25977  018054  0E3C               	movlw	low _ADCC_DefaultInterruptHandler
 25978  018056  6EE6               	movwf	postinc1,c
 25979  018058  0E92               	movlw	high _ADCC_DefaultInterruptHandler
 25980  01805A  6EE6               	movwf	postinc1,c
 25981  01805C  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 25982  01805E  6EE6               	movwf	postinc1,c
 25983  018060  ECF1  F0C6         	call	_ADCC_SetADIInterruptHandler	;wreg free
 25984                           
 25985                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 25986  018064  0139               	movlb	57	; () banked
 25987  018066  97A1               	bcf	161,3,b	;volatile
 25988                           
 25989                           ; BSR set to: 57
 25990                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 25991  018068  8791               	bsf	145,3,b	;volatile
 25992                           
 25993                           ; BSR set to: 57
 25994                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 25995  01806A  0E3C               	movlw	low _ADCC_DefaultInterruptHandler
 25996  01806C  6EE6               	movwf	postinc1,c
 25997  01806E  0E92               	movlw	high _ADCC_DefaultInterruptHandler
 25998  018070  6EE6               	movwf	postinc1,c
 25999  018072  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 26000  018074  6EE6               	movwf	postinc1,c
 26001  018076  ECDD  F0C6         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 26002                           
 26003                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 26004  01807A  0012               	return		;funcret
 26005  01807C                     __end_of_ADCC_Initialize:
 26006                           	opt callstack 0
 26007                           
 26008 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 26009 ;; Defined at:
 26010 ;;		line 336 in file "mcc_generated_files/adcc.c"
 26011 ;; Parameters:    Size  Location     Type
 26012 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 26013 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 26014 ;; Auto vars:     Size  Location     Type
 26015 ;;		None
 26016 ;; Return value:  Size  Location     Type
 26017 ;;                  1  [STACK] void 
 26018 ;; Registers used:
 26019 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 26020 ;; Tracked objects:
 26021 ;;		On entry : 0/0
 26022 ;;		On exit  : 0/0
 26023 ;;		Unchanged: 0/0
 26024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26029 ;;Total ram usage:        0 bytes
 26030 ;; Hardware stack levels used:    1
 26031 ;; Hardware stack levels required when called:    7
 26032 ;; This function calls:
 26033 ;;		Nothing
 26034 ;; This function is called by:
 26035 ;;		_ADCC_Initialize
 26036 ;;		_start_adc_scan
 26037 ;; This function uses a reentrant model
 26038 ;;
 26039                           
 26040                           	psect	text123
 26041  018DBA                     __ptext123:
 26042                           	opt callstack 0
 26043  018DBA                     _ADCC_SetADTIInterruptHandler:
 26044                           	opt callstack 22
 26045                           
 26046                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 26047                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 26048                           
 26049                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26050                           ;incstack = 0
 26051  018DBA  50E1               	movf	fsr1l,w,c
 26052  018DBC  0FFD               	addlw	-3
 26053  018DBE  6ED9               	movwf	fsr2l,c
 26054  018DC0  50E2               	movf	fsr1h,w,c
 26055  018DC2  6EDA               	movwf	fsr2h,c
 26056  018DC4  0EFF               	movlw	255
 26057  018DC6  22DA               	addwfc	fsr2h,f,c
 26058  018DC8  006F FF78  F0B2    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 26059  018DCE  006F FF78  F0B3    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 26060  018DD4  006F FF74  F0B4    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 26061                           
 26062                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 26063  018DDA  52E5               	movf	postdec1,f,c
 26064  018DDC  52E5               	movf	postdec1,f,c
 26065  018DDE  52E5               	movf	postdec1,f,c
 26066  018DE0  0012               	return		;funcret
 26067  018DE2                     __end_of_ADCC_SetADTIInterruptHandler:
 26068                           	opt callstack 0
 26069                           
 26070 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 26071 ;; Defined at:
 26072 ;;		line 323 in file "mcc_generated_files/adcc.c"
 26073 ;; Parameters:    Size  Location     Type
 26074 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 26075 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 26076 ;; Auto vars:     Size  Location     Type
 26077 ;;		None
 26078 ;; Return value:  Size  Location     Type
 26079 ;;                  1  [STACK] void 
 26080 ;; Registers used:
 26081 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 26082 ;; Tracked objects:
 26083 ;;		On entry : 6/0
 26084 ;;		On exit  : 0/0
 26085 ;;		Unchanged: 0/0
 26086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26091 ;;Total ram usage:        0 bytes
 26092 ;; Hardware stack levels used:    1
 26093 ;; Hardware stack levels required when called:    7
 26094 ;; This function calls:
 26095 ;;		Nothing
 26096 ;; This function is called by:
 26097 ;;		_ADCC_Initialize
 26098 ;;		_start_adc_scan
 26099 ;; This function uses a reentrant model
 26100 ;;
 26101                           
 26102                           	psect	text124
 26103  018DE2                     __ptext124:
 26104                           	opt callstack 0
 26105  018DE2                     _ADCC_SetADIInterruptHandler:
 26106                           	opt callstack 22
 26107                           
 26108                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 26109                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 26110                           
 26111                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26112                           ;incstack = 0
 26113  018DE2  50E1               	movf	fsr1l,w,c
 26114  018DE4  0FFD               	addlw	-3
 26115  018DE6  6ED9               	movwf	fsr2l,c
 26116  018DE8  50E2               	movf	fsr1h,w,c
 26117  018DEA  6EDA               	movwf	fsr2h,c
 26118  018DEC  0EFF               	movlw	255
 26119  018DEE  22DA               	addwfc	fsr2h,f,c
 26120  018DF0  006F FF78  F0B5    	movff	postinc2,_ADCC_ADI_InterruptHandler
 26121  018DF6  006F FF78  F0B6    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 26122  018DFC  006F FF74  F0B7    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 26123                           
 26124                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 26125  018E02  52E5               	movf	postdec1,f,c
 26126  018E04  52E5               	movf	postdec1,f,c
 26127  018E06  52E5               	movf	postdec1,f,c
 26128  018E08  0012               	return		;funcret
 26129  018E0A                     __end_of_ADCC_SetADIInterruptHandler:
 26130                           	opt callstack 0
 26131                           
 26132 ;; *************** function _INT1_ISR *****************
 26133 ;; Defined at:
 26134 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 26135 ;; Parameters:    Size  Location     Type
 26136 ;;		None
 26137 ;; Auto vars:     Size  Location     Type
 26138 ;;		None
 26139 ;; Return value:  Size  Location     Type
 26140 ;;                  1    wreg      void 
 26141 ;; Registers used:
 26142 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 26143 ;; Tracked objects:
 26144 ;;		On entry : 0/0
 26145 ;;		On exit  : 0/0
 26146 ;;		Unchanged: 0/0
 26147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26150 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26151 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26152 ;;Total ram usage:        4 bytes
 26153 ;; Hardware stack levels used:    1
 26154 ;; Hardware stack levels required when called:    5
 26155 ;; This function calls:
 26156 ;;		_INT1_CallBack
 26157 ;; This function is called by:
 26158 ;;		Interrupt level 1
 26159 ;; This function uses a non-reentrant model
 26160 ;;
 26161                           
 26162                           	psect	text125
 26163  018868                     __ptext125:
 26164                           	opt callstack 0
 26165  018868                     _INT1_ISR:
 26166                           	opt callstack 12
 26167                           
 26168                           ;incstack = 0
 26169  018868  006F FF60  F04B    	movff	status,??_INT1_ISR
 26170  01886E  0060  F094  F04C   	movff	btemp,??_INT1_ISR+1
 26171  018874  0060  F0BC  F04D   	movff	btemp+10,??_INT1_ISR+2
 26172  01887A  0060  F0C0  F04E   	movff	btemp+11,??_INT1_ISR+3
 26173  018880  EE16  F00B         	lfsr	1,___intlo_sp
 26174                           
 26175                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 26176  018884  0139               	movlb	57	; () banked
 26177  018886  91A5               	bcf	165,0,b	;volatile
 26178                           
 26179                           ; BSR set to: 57
 26180                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 26181  018888  ECB1  F0C7         	call	_INT1_CallBack	;wreg free
 26182  01888C  0060  F138  F030   	movff	??_INT1_ISR+3,btemp+11
 26183  018892  0060  F134  F02F   	movff	??_INT1_ISR+2,btemp+10
 26184  018898  0060  F130  F025   	movff	??_INT1_ISR+1,btemp
 26185  01889E  0060  F12F  FFD8   	movff	??_INT1_ISR,status
 26186  0188A4  0011               	retfie		f
 26187  0188A6                     __end_of_INT1_ISR:
 26188                           	opt callstack 0
 26189                           
 26190 ;; *************** function _INT1_CallBack *****************
 26191 ;; Defined at:
 26192 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 26193 ;; Parameters:    Size  Location     Type
 26194 ;;		None
 26195 ;; Auto vars:     Size  Location     Type
 26196 ;;		None
 26197 ;; Return value:  Size  Location     Type
 26198 ;;                  1  [STACK] void 
 26199 ;; Registers used:
 26200 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 26201 ;; Tracked objects:
 26202 ;;		On entry : 3F/39
 26203 ;;		On exit  : 0/0
 26204 ;;		Unchanged: 0/0
 26205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26210 ;;Total ram usage:        0 bytes
 26211 ;; Hardware stack levels used:    1
 26212 ;; Hardware stack levels required when called:    4
 26213 ;; This function calls:
 26214 ;;		Absolute function
 26215 ;;		_INT1_DefaultInterruptHandler
 26216 ;;		_switch_handler
 26217 ;; This function is called by:
 26218 ;;		_INT1_ISR
 26219 ;; This function uses a reentrant model
 26220 ;;
 26221                           
 26222                           	psect	text126
 26223  018F62                     __ptext126:
 26224                           	opt callstack 0
 26225  018F62                     _INT1_CallBack:
 26226                           	opt callstack 12
 26227                           
 26228                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 26229                           
 26230                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26231                           ;incstack = 0
 26232  018F62  5004               	movf	_INT1_InterruptHandler^0,w,c
 26233  018F64  1005               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 26234  018F66  1006               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
 26235  018F68  B4D8               	btfsc	status,2,c
 26236  018F6A  0012               	return	
 26237                           
 26238                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 26239  018F6C  D801               	call	u857_28
 26240  018F6E  0012               	return	
 26241  018F70                     u857_28:
 26242  018F70  0005               	push	
 26243  018F72  6EFA               	movwf	pclath,c
 26244  018F74  5004               	movf	_INT1_InterruptHandler^0,w,c
 26245  018F76  6EFD               	movwf	tosl,c
 26246  018F78  5005               	movf	(_INT1_InterruptHandler+1)^0,w,c
 26247  018F7A  6EFE               	movwf	tosh,c
 26248  018F7C  5006               	movf	(_INT1_InterruptHandler+2)^0,w,c
 26249  018F7E  6EFF               	movwf	tosu,c
 26250  018F80  50FA               	movf	pclath,w,c
 26251  018F82  0012               	return		;indir
 26252  018F84                     __end_of_INT1_CallBack:
 26253                           	opt callstack 0
 26254                           
 26255 ;; *************** function _INT1_DefaultInterruptHandler *****************
 26256 ;; Defined at:
 26257 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 26258 ;; Parameters:    Size  Location     Type
 26259 ;;		None
 26260 ;; Auto vars:     Size  Location     Type
 26261 ;;		None
 26262 ;; Return value:  Size  Location     Type
 26263 ;;                  1  [STACK] void 
 26264 ;; Registers used:
 26265 ;;		None
 26266 ;; Tracked objects:
 26267 ;;		On entry : 0/39
 26268 ;;		On exit  : 0/0
 26269 ;;		Unchanged: 0/0
 26270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26275 ;;Total ram usage:        0 bytes
 26276 ;; Hardware stack levels used:    1
 26277 ;; Hardware stack levels required when called:    3
 26278 ;; This function calls:
 26279 ;;		Nothing
 26280 ;; This function is called by:
 26281 ;;		_EXT_INT_Initialize
 26282 ;;		_INT1_CallBack
 26283 ;; This function uses a reentrant model
 26284 ;;
 26285                           
 26286                           	psect	text127
 26287  019236                     __ptext127:
 26288                           	opt callstack 0
 26289  019236                     _INT1_DefaultInterruptHandler:
 26290                           	opt callstack 12
 26291                           
 26292                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26293                           
 26294                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26295                           ;incstack = 0
 26296  019236  0012               	return		;funcret
 26297  019238                     __end_of_INT1_DefaultInterruptHandler:
 26298                           	opt callstack 0
 26299                           
 26300 ;; *************** function _switch_handler *****************
 26301 ;; Defined at:
 26302 ;;		line 58 in file "dio.c"
 26303 ;; Parameters:    Size  Location     Type
 26304 ;;		None
 26305 ;; Auto vars:     Size  Location     Type
 26306 ;;  i               1  [STACK] unsigned char 
 26307 ;;  sw_value        1  [STACK] unsigned char 
 26308 ;; Return value:  Size  Location     Type
 26309 ;;                  1  [STACK] void 
 26310 ;; Registers used:
 26311 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 26312 ;; Tracked objects:
 26313 ;;		On entry : 0/39
 26314 ;;		On exit  : 0/0
 26315 ;;		Unchanged: 0/0
 26316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26321 ;;Total ram usage:        0 bytes
 26322 ;; Hardware stack levels used:    1
 26323 ;; Hardware stack levels required when called:    3
 26324 ;; This function calls:
 26325 ;;		Nothing
 26326 ;; This function is called by:
 26327 ;;		_start_switch_handler
 26328 ;;		_INT1_CallBack
 26329 ;; This function uses a reentrant model
 26330 ;;
 26331                           
 26332                           	psect	text128
 26333  0168D0                     __ptext128:
 26334                           	opt callstack 0
 26335  0168D0                     _switch_handler:
 26336                           	opt callstack 0
 26337                           
 26338                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26339  0168D0  52E6               	movf	postinc1,f,c
 26340  0168D2  52E6               	movf	postinc1,f,c
 26341                           
 26342                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 26343                           ;stkvar	_i @ sp[(-2)+0]
 26344                           
 26345                           ;incstack = 0
 26346  0168D4  0EFE               	movlw	-2
 26347  0168D6  6AE3               	clrf	plusw1,c
 26348  0168D8  9EBD               	bcf	189,7,c	;volatile
 26349  0168DA  82BE               	bsf	190,1,c	;volatile
 26350                           
 26351                           ;dio.c: 72:  __nop();
 26352  0168DC  F000               	nop	
 26353                           
 26354                           ;dio.c: 73:  __nop();
 26355  0168DE  F000               	nop	
 26356                           
 26357                           ;dio.c: 74:  __nop();
 26358  0168E0  F000               	nop	
 26359  0168E2  D019               	goto	l9144
 26360  0168E4                     l9132:
 26361                           
 26362                           ;dio.c: 79:    sw_value = PORTFbits.RF3;
 26363  0168E4  A6CF               	btfss	207,3,c	;volatile
 26364  0168E6  D011               	goto	u843_20
 26365  0168E8  D00D               	goto	u843_21
 26366  0168EA                     u840_28:
 26367                           
 26368                           ;stkvar	_sw_value @ sp[(-2)+1]
 26369  0168EA  0EFF               	movlw	-1
 26370  0168EC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 26371                           
 26372                           ;dio.c: 80:    break;
 26373  0168F2  D027               	goto	l9146
 26374  0168F4                     l9134:
 26375                           
 26376                           ;dio.c: 82:    sw_value = PORTFbits.RF2;
 26377  0168F4  A4CF               	btfss	207,2,c	;volatile
 26378  0168F6  D009               	goto	u843_20
 26379  0168F8  D005               	goto	u843_21
 26380  0168FA                     l9136:
 26381                           
 26382                           ;dio.c: 85:    sw_value = PORTFbits.RF1;
 26383  0168FA  A2CF               	btfss	207,1,c	;volatile
 26384  0168FC  D006               	goto	u843_20
 26385  0168FE  D002               	goto	u843_21
 26386  016900                     l9138:
 26387                           
 26388                           ;dio.c: 88:    sw_value = PORTFbits.RF0;
 26389  016900  A0CF               	btfss	207,0,c	;volatile
 26390  016902  D003               	goto	u843_20
 26391  016904                     u843_21:
 26392  016904  6A30               	clrf	(btemp+11)^0,c
 26393  016906  2A30               	incf	(btemp+11)^0,f,c
 26394  016908  D7F0               	goto	u840_28
 26395  01690A                     u843_20:
 26396  01690A  6A30               	clrf	(btemp+11)^0,c
 26397  01690C  D7EE               	goto	u840_28
 26398  01690E                     l9140:
 26399                           
 26400                           ;dio.c: 91:    sw_value = 1;
 26401                           ;stkvar	_sw_value @ sp[(-2)+1]
 26402  01690E  0EFF               	movlw	-1
 26403  016910  6AE3               	clrf	plusw1,c
 26404  016912  2AE3               	incf	plusw1,f,c
 26405                           
 26406                           ;dio.c: 92:    break;
 26407  016914  D016               	goto	l9146
 26408  016916                     l9144:
 26409                           
 26410                           ;stkvar	_i @ sp[(-2)+0]
 26411  016916  0EFE               	movlw	-2
 26412  016918  50E3               	movf	plusw1,w,c
 26413  01691A  6E2F               	movwf	(btemp+10)^0,c
 26414  01691C  6A30               	clrf	(btemp+11)^0,c
 26415                           
 26416                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26417                           ; Switch size 1, requested type "simple"
 26418                           ; Number of cases is 1, Range of values is 0 to 0
 26419                           ; switch strategies available:
 26420                           ; Name         Instructions Cycles
 26421                           ; simple_byte            4     3 (average)
 26422                           ;	Chosen strategy is simple_byte
 26423  01691E  5030               	movf	(btemp+11)^0,w,c
 26424  016920  0A00               	xorlw	0	; case 0
 26425  016922  A4D8               	btfss	status,2,c
 26426  016924  D7F4               	goto	l9140
 26427                           
 26428                           ; Switch size 1, requested type "simple"
 26429                           ; Number of cases is 4, Range of values is 0 to 3
 26430                           ; switch strategies available:
 26431                           ; Name         Instructions Cycles
 26432                           ; simple_byte           13     7 (average)
 26433                           ;	Chosen strategy is simple_byte
 26434  016926  502F               	movf	(btemp+10)^0,w,c
 26435  016928  0A00               	xorlw	0	; case 0
 26436  01692A  B4D8               	btfsc	status,2,c
 26437  01692C  D7E9               	goto	l9138
 26438  01692E  0A01               	xorlw	1	; case 1
 26439  016930  B4D8               	btfsc	status,2,c
 26440  016932  D7E3               	goto	l9136
 26441  016934  0A03               	xorlw	3	; case 2
 26442  016936  B4D8               	btfsc	status,2,c
 26443  016938  D7DD               	goto	l9134
 26444  01693A  0A01               	xorlw	1	; case 3
 26445  01693C  B4D8               	btfsc	status,2,c
 26446  01693E  D7D2               	goto	l9132
 26447  016940  D7E6               	goto	l9140
 26448  016942                     l9146:
 26449                           
 26450                           ;dio.c: 96:   if (sw_value) {
 26451                           ;stkvar	_sw_value @ sp[(-2)+1]
 26452  016942  0EFF               	movlw	-1
 26453  016944  50E3               	movf	plusw1,w,c
 26454  016946  B4D8               	btfsc	status,2,c
 26455  016948  D014               	goto	l9152
 26456                           
 26457                           ;dio.c: 97:    if (S.button[i].sw == SW_ON) {
 26458                           ;stkvar	_i @ sp[(-2)+0]
 26459  01694A  0EFE               	movlw	-2
 26460  01694C  50E3               	movf	plusw1,w,c
 26461  01694E  0D05               	mullw	5
 26462  016950  50F3               	movf	243,w,c
 26463  016952  0F60               	addlw	low _S
 26464  016954  6ED9               	movwf	fsr2l,c
 26465  016956  6ADA               	clrf	fsr2h,c
 26466  016958  04DE               	decf	postinc2,w,c
 26467  01695A  A4D8               	btfss	status,2,c
 26468  01695C  D041               	goto	l9160
 26469                           
 26470                           ;dio.c: 98:     S.button[i].sw = SW_OFF;
 26471                           ;stkvar	_i @ sp[(-2)+0]
 26472  01695E  0EFE               	movlw	-2
 26473  016960  50E3               	movf	plusw1,w,c
 26474  016962  0D05               	mullw	5
 26475  016964  50F3               	movf	243,w,c
 26476  016966  0F60               	addlw	low _S
 26477  016968  6ED9               	movwf	fsr2l,c
 26478  01696A  6ADA               	clrf	fsr2h,c
 26479  01696C  0E00               	movlw	0
 26480  01696E  6EDF               	movwf	indf2,c
 26481  016970  D037               	goto	l9160
 26482  016972                     l9152:
 26483                           
 26484                           ;dio.c: 101:    if (S.button[i].sw == SW_OFF) {
 26485                           ;stkvar	_i @ sp[(-2)+0]
 26486  016972  0EFE               	movlw	-2
 26487  016974  50E3               	movf	plusw1,w,c
 26488  016976  0D05               	mullw	5
 26489  016978  50F3               	movf	243,w,c
 26490  01697A  0F60               	addlw	low _S
 26491  01697C  6ED9               	movwf	fsr2l,c
 26492  01697E  6ADA               	clrf	fsr2h,c
 26493  016980  50DF               	movf	indf2,w,c
 26494  016982  A4D8               	btfss	status,2,c
 26495  016984  D02D               	goto	l9160
 26496                           
 26497                           ;dio.c: 102:     S.button[i].sw = SW_ON;
 26498                           ;stkvar	_i @ sp[(-2)+0]
 26499  016986  0EFE               	movlw	-2
 26500  016988  50E3               	movf	plusw1,w,c
 26501  01698A  0D05               	mullw	5
 26502  01698C  50F3               	movf	243,w,c
 26503  01698E  0F60               	addlw	low _S
 26504  016990  6ED9               	movwf	fsr2l,c
 26505  016992  6ADA               	clrf	fsr2h,c
 26506  016994  0E01               	movlw	1
 26507  016996  6EDF               	movwf	indf2,c
 26508                           
 26509                           ;dio.c: 103:     S.button[i].count = V.timerint_count;
 26510  016998  EE20  F2B8         	lfsr	2,_V+184	;volatile
 26511                           
 26512                           ;stkvar	_i @ sp[(-2)+0]
 26513  01699C  0EFE               	movlw	-2
 26514  01699E  50E3               	movf	plusw1,w,c
 26515  0169A0  0D05               	mullw	5
 26516  0169A2  50F3               	movf	243,w,c
 26517  0169A4  0F61               	addlw	low (_S+1)
 26518  0169A6  6EE9               	movwf	fsr0l,c
 26519  0169A8  6AEA               	clrf	fsr0h,c
 26520  0169AA  006F FF7B FFEE     	movff	postinc2,postinc0
 26521  0169B0  006F FF7B FFEE     	movff	postinc2,postinc0
 26522  0169B6  006F FF7B FFEE     	movff	postinc2,postinc0
 26523  0169BC  006F FF7B FFEE     	movff	postinc2,postinc0
 26524                           
 26525                           ;dio.c: 104:     S.sw_bitmap |= 1 << i;
 26526                           ;stkvar	_i @ sp[(-2)+0]
 26527  0169C2  0EFE               	movlw	-2
 26528  0169C4  006F FF8C  F030    	movff	plusw1,btemp+11
 26529  0169CA  0E01               	movlw	1
 26530  0169CC  6E2F               	movwf	(btemp+10)^0,c
 26531  0169CE  2A30               	incf	(btemp+11)^0,f,c
 26532  0169D0  D002               	goto	u847_24
 26533  0169D2                     u847_25:
 26534  0169D2  90D8               	bcf	status,0,c
 26535  0169D4  362F               	rlcf	(btemp+10)^0,f,c
 26536  0169D6                     u847_24:
 26537  0169D6  2E30               	decfsz	(btemp+11)^0,f,c
 26538  0169D8  D7FC               	goto	u847_25
 26539  0169DA  502F               	movf	(btemp+10)^0,w,c
 26540  0169DC  0100               	movlb	0	; () banked
 26541  0169DE  1388               	iorwf	(_S+40)& (0+255),f,b	;volatile
 26542  0169E0                     l9160:
 26543                           
 26544                           ;dio.c: 107:  } while (++i < 4);
 26545                           ;stkvar	_i @ sp[(-2)+0]
 26546  0169E0  0EFE               	movlw	-2
 26547  0169E2  2AE3               	incf	plusw1,f,c
 26548  0169E4  0EFE               	movlw	-2
 26549  0169E6  006F FF8C  F025    	movff	plusw1,btemp
 26550  0169EC  0E03               	movlw	3
 26551  0169EE  6425               	cpfsgt	btemp^0,c
 26552  0169F0  D792               	goto	l9144
 26553                           
 26554                           ;dio.c: 110:  do { LATEbits.LATE1 = 0; } while(0);
 26555  0169F2  92BE               	bcf	190,1,c	;volatile
 26556  0169F4  A4BE               	btfss	190,2,c	;volatile
 26557  0169F6  D002               	goto	u849_20
 26558  0169F8  0E01               	movlw	1
 26559  0169FA  D001               	goto	u849_26
 26560  0169FC                     u849_20:
 26561  0169FC  0E00               	movlw	0
 26562  0169FE                     u849_26:
 26563  0169FE  0AFF               	xorlw	255
 26564  016A00  6E30               	movwf	(btemp+11)^0,c
 26565  016A02  4630               	rlncf	(btemp+11)^0,f,c
 26566  016A04  4630               	rlncf	(btemp+11)^0,f,c
 26567  016A06  50BE               	movf	190,w,c	;volatile
 26568  016A08  1830               	xorwf	(btemp+11)^0,w,c
 26569  016A0A  0BFB               	andlw	-5
 26570  016A0C  1830               	xorwf	(btemp+11)^0,w,c
 26571  016A0E  6EBE               	movwf	190,c	;volatile
 26572  016A10  8EBD               	bsf	189,7,c	;volatile
 26573                           
 26574                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 26575  016A12  52E5               	movf	postdec1,f,c
 26576  016A14  52E5               	movf	postdec1,f,c
 26577  016A16  0012               	return		;funcret
 26578  016A18                     __end_of_switch_handler:
 26579                           	opt callstack 0
 26580                           
 26581 ;; *************** function _TMR5_ISR *****************
 26582 ;; Defined at:
 26583 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 26584 ;; Parameters:    Size  Location     Type
 26585 ;;		None
 26586 ;; Auto vars:     Size  Location     Type
 26587 ;;		None
 26588 ;; Return value:  Size  Location     Type
 26589 ;;                  1    wreg      void 
 26590 ;; Registers used:
 26591 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 26592 ;; Tracked objects:
 26593 ;;		On entry : 0/0
 26594 ;;		On exit  : 0/0
 26595 ;;		Unchanged: 0/0
 26596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26599 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26600 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26601 ;;Total ram usage:        4 bytes
 26602 ;; Hardware stack levels used:    1
 26603 ;; Hardware stack levels required when called:    5
 26604 ;; This function calls:
 26605 ;;		_TMR5_CallBack
 26606 ;;		_TMR5_WriteTimer
 26607 ;; This function is called by:
 26608 ;;		Interrupt level 1
 26609 ;; This function uses a non-reentrant model
 26610 ;;
 26611                           
 26612                           	psect	text129
 26613  0183EC                     __ptext129:
 26614                           	opt callstack 0
 26615  0183EC                     _TMR5_ISR:
 26616                           	opt callstack 12
 26617                           
 26618                           ;incstack = 0
 26619  0183EC  006F FF60  F051    	movff	status,??_TMR5_ISR+2
 26620  0183F2  0060  F0C0  F052   	movff	btemp+11,??_TMR5_ISR+3
 26621  0183F8  EE16  F00B         	lfsr	1,___intlo_sp
 26622                           
 26623                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 26624  0183FC  0139               	movlb	57	; () banked
 26625  0183FE  9DA8               	bcf	168,6,b	;volatile
 26626                           
 26627                           ; BSR set to: 57
 26628                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 26629  018400  0060  F05B  FFE6   	movff	_timer5ReloadVal,postinc1
 26630  018406  0060  F05F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 26631  01840C  ECF4  F0C3         	call	_TMR5_WriteTimer	;wreg free
 26632                           
 26633                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 26634  018410  0102               	movlb	2	; () banked
 26635  018412  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 26636  018414  6E4F               	movwf	??_TMR5_ISR^0,c
 26637  018416  6A50               	clrf	(??_TMR5_ISR+1)^0,c
 26638  018418  0E05               	movlw	5
 26639  01841A  264F               	addwf	??_TMR5_ISR^0,f,c
 26640  01841C  0E00               	movlw	0
 26641  01841E  2250               	addwfc	(??_TMR5_ISR+1)^0,f,c
 26642  018420  4A14               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 26643  018422  2A15               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 26644  018424  504F               	movf	??_TMR5_ISR^0,w,c
 26645  018426  5C14               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 26646  018428  5050               	movf	(??_TMR5_ISR+1)^0,w,c
 26647  01842A  5815               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 26648  01842C  A0D8               	btfss	status,0,c
 26649  01842E  D004               	goto	i1l1047
 26650                           
 26651                           ; BSR set to: 2
 26652                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 26653  018430  EC7B  F0C7         	call	_TMR5_CallBack	;wreg free
 26654                           
 26655                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 26656  018434  6A14               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 26657  018436  6A15               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 26658  018438                     i1l1047:
 26659  018438  0060  F148  F030   	movff	??_TMR5_ISR+3,btemp+11
 26660  01843E  0060  F147  FFD8   	movff	??_TMR5_ISR+2,status
 26661  018444  0011               	retfie		f
 26662  018446                     __end_of_TMR5_ISR:
 26663                           	opt callstack 0
 26664                           
 26665 ;; *************** function _TMR5_WriteTimer *****************
 26666 ;; Defined at:
 26667 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 26668 ;; Parameters:    Size  Location     Type
 26669 ;;  timerVal        2  [STACK] unsigned short 
 26670 ;; Auto vars:     Size  Location     Type
 26671 ;;		None
 26672 ;; Return value:  Size  Location     Type
 26673 ;;                  1  [STACK] void 
 26674 ;; Registers used:
 26675 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 26676 ;; Tracked objects:
 26677 ;;		On entry : 3F/39
 26678 ;;		On exit  : 0/0
 26679 ;;		Unchanged: 0/0
 26680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26685 ;;Total ram usage:        0 bytes
 26686 ;; Hardware stack levels used:    1
 26687 ;; Hardware stack levels required when called:    3
 26688 ;; This function calls:
 26689 ;;		Nothing
 26690 ;; This function is called by:
 26691 ;;		_TMR5_ISR
 26692 ;; This function uses a reentrant model
 26693 ;;
 26694                           
 26695                           	psect	text130
 26696  0187E8                     __ptext130:
 26697                           	opt callstack 0
 26698  0187E8                     _TMR5_WriteTimer:
 26699                           	opt callstack 13
 26700                           
 26701                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 26702                           
 26703                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26704                           ;incstack = 0
 26705  0187E8  A49A               	btfss	154,2,c	;volatile
 26706  0187EA  D00F               	goto	l9288
 26707                           
 26708                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 26709  0187EC  909A               	bcf	154,0,c	;volatile
 26710                           
 26711                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 26712                           ;stkvar	_timerVal @ sp[(0)+-2]
 26713  0187EE  0EFF               	movlw	255
 26714  0187F0  24E1               	addwf	fsr1l,w,c
 26715  0187F2  6ED9               	movwf	fsr2l,c
 26716  0187F4  0EFF               	movlw	255
 26717  0187F6  20E2               	addwfc	fsr1h,w,c
 26718  0187F8  6EDA               	movwf	fsr2h,c
 26719  0187FA  50DF               	movf	indf2,w,c
 26720  0187FC  6E99               	movwf	153,c	;volatile
 26721                           
 26722                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 26723                           ;stkvar	_timerVal @ sp[(0)+-2]
 26724  0187FE  0EFE               	movlw	-2
 26725  018800  006F FF8F FF98     	movff	plusw1,16280	;volatile
 26726                           
 26727                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 26728  018806  809A               	bsf	154,0,c	;volatile
 26729                           
 26730                           ;mcc_generated_files/tmr5.c: 142:  } else {
 26731  018808  D00C               	goto	l1030
 26732  01880A                     l9288:
 26733                           
 26734                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 26735                           ;stkvar	_timerVal @ sp[(0)+-2]
 26736  01880A  0EFF               	movlw	255
 26737  01880C  24E1               	addwf	fsr1l,w,c
 26738  01880E  6ED9               	movwf	fsr2l,c
 26739  018810  0EFF               	movlw	255
 26740  018812  20E2               	addwfc	fsr1h,w,c
 26741  018814  6EDA               	movwf	fsr2h,c
 26742  018816  50DF               	movf	indf2,w,c
 26743  018818  6E99               	movwf	153,c	;volatile
 26744                           
 26745                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 26746                           ;stkvar	_timerVal @ sp[(0)+-2]
 26747  01881A  0EFE               	movlw	-2
 26748  01881C  006F FF8F FF98     	movff	plusw1,16280	;volatile
 26749  018822                     l1030:
 26750                           
 26751                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 26752  018822  52E5               	movf	postdec1,f,c
 26753  018824  52E5               	movf	postdec1,f,c
 26754  018826  0012               	return		;funcret
 26755  018828                     __end_of_TMR5_WriteTimer:
 26756                           	opt callstack 0
 26757                           
 26758 ;; *************** function _TMR5_CallBack *****************
 26759 ;; Defined at:
 26760 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 26761 ;; Parameters:    Size  Location     Type
 26762 ;;		None
 26763 ;; Auto vars:     Size  Location     Type
 26764 ;;		None
 26765 ;; Return value:  Size  Location     Type
 26766 ;;                  1  [STACK] void 
 26767 ;; Registers used:
 26768 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 26769 ;; Tracked objects:
 26770 ;;		On entry : 3F/2
 26771 ;;		On exit  : 0/0
 26772 ;;		Unchanged: 0/0
 26773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26778 ;;Total ram usage:        0 bytes
 26779 ;; Hardware stack levels used:    1
 26780 ;; Hardware stack levels required when called:    4
 26781 ;; This function calls:
 26782 ;;		Absolute function
 26783 ;;		_TMR5_DefaultInterruptHandler
 26784 ;; This function is called by:
 26785 ;;		_TMR5_ISR
 26786 ;; This function uses a reentrant model
 26787 ;;
 26788                           
 26789                           	psect	text131
 26790  018EF6                     __ptext131:
 26791                           	opt callstack 0
 26792  018EF6                     _TMR5_CallBack:
 26793                           	opt callstack 12
 26794                           
 26795                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 26796                           
 26797                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26798                           ;incstack = 0
 26799  018EF6  0100               	movlb	0	; () banked
 26800  018EF8  51AC               	movf	_TMR5_InterruptHandler& (0+255),w,b
 26801  018EFA  11AD               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 26802  018EFC  11AE               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 26803  018EFE  B4D8               	btfsc	status,2,c
 26804  018F00  0012               	return	
 26805                           
 26806                           ; BSR set to: 0
 26807                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 26808  018F02  D801               	call	u868_28
 26809  018F04  0012               	return	
 26810  018F06                     u868_28:
 26811  018F06  0005               	push	
 26812  018F08  6EFA               	movwf	pclath,c
 26813  018F0A  51AC               	movf	_TMR5_InterruptHandler& (0+255),w,b
 26814  018F0C  6EFD               	movwf	tosl,c
 26815  018F0E  51AD               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 26816  018F10  6EFE               	movwf	tosh,c
 26817  018F12  51AE               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 26818  018F14  6EFF               	movwf	tosu,c
 26819  018F16  50FA               	movf	pclath,w,c
 26820  018F18  0012               	return		;indir
 26821  018F1A                     __end_of_TMR5_CallBack:
 26822                           	opt callstack 0
 26823                           
 26824 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 26825 ;; Defined at:
 26826 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 26827 ;; Parameters:    Size  Location     Type
 26828 ;;		None
 26829 ;; Auto vars:     Size  Location     Type
 26830 ;;		None
 26831 ;; Return value:  Size  Location     Type
 26832 ;;                  1  [STACK] void 
 26833 ;; Registers used:
 26834 ;;		wreg, status,2, status,0, btemp+11
 26835 ;; Tracked objects:
 26836 ;;		On entry : 3F/0
 26837 ;;		On exit  : 3F/2
 26838 ;;		Unchanged: 0/0
 26839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26844 ;;Total ram usage:        0 bytes
 26845 ;; Hardware stack levels used:    1
 26846 ;; Hardware stack levels required when called:    3
 26847 ;; This function calls:
 26848 ;;		Nothing
 26849 ;; This function is called by:
 26850 ;;		_TMR5_Initialize
 26851 ;;		_TMR5_CallBack
 26852 ;; This function uses a reentrant model
 26853 ;;
 26854                           
 26855                           	psect	text132
 26856  018E0A                     __ptext132:
 26857                           	opt callstack 0
 26858  018E0A                     _TMR5_DefaultInterruptHandler:
 26859                           	opt callstack 12
 26860                           
 26861                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 26862                           
 26863                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26864                           ;incstack = 0
 26865  018E0A  A0BE               	btfss	190,0,c	;volatile
 26866  018E0C  D002               	goto	u818_20
 26867  018E0E  0E01               	movlw	1
 26868  018E10  D001               	goto	u818_26
 26869  018E12                     u818_20:
 26870  018E12  0E00               	movlw	0
 26871  018E14                     u818_26:
 26872  018E14  0AFF               	xorlw	255
 26873  018E16  6E30               	movwf	(btemp+11)^0,c
 26874  018E18  50BE               	movf	190,w,c	;volatile
 26875  018E1A  1830               	xorwf	(btemp+11)^0,w,c
 26876  018E1C  0BFE               	andlw	-2
 26877  018E1E  1830               	xorwf	(btemp+11)^0,w,c
 26878  018E20  6EBE               	movwf	190,c	;volatile
 26879                           
 26880                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 26881  018E22  0E01               	movlw	1
 26882  018E24  0102               	movlb	2	; () banked
 26883  018E26  27B8               	addwf	(_V+184)& (0+255),f,b	;volatile
 26884  018E28  0E00               	movlw	0
 26885  018E2A  23B9               	addwfc	(_V+185)& (0+255),f,b	;volatile
 26886  018E2C  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 26887  018E2E  23BB               	addwfc	(_V+187)& (0+255),f,b	;volatile
 26888                           
 26889                           ; BSR set to: 2
 26890                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26891  018E30  0012               	return		;funcret
 26892  018E32                     __end_of_TMR5_DefaultInterruptHandler:
 26893                           	opt callstack 0
 26894                           
 26895 ;; *************** function _TMR3_ISR *****************
 26896 ;; Defined at:
 26897 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 26898 ;; Parameters:    Size  Location     Type
 26899 ;;		None
 26900 ;; Auto vars:     Size  Location     Type
 26901 ;;		None
 26902 ;; Return value:  Size  Location     Type
 26903 ;;                  1    wreg      void 
 26904 ;; Registers used:
 26905 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl
 26906 ;; Tracked objects:
 26907 ;;		On entry : 0/0
 26908 ;;		On exit  : 0/0
 26909 ;;		Unchanged: 0/0
 26910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26913 ;;      Temps:          0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26914 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26915 ;;Total ram usage:       13 bytes
 26916 ;; Hardware stack levels used:    1
 26917 ;; Hardware stack levels required when called:    6
 26918 ;; This function calls:
 26919 ;;		_TMR3_CallBack
 26920 ;;		_TMR3_WriteTimer
 26921 ;; This function is called by:
 26922 ;;		Interrupt level 1
 26923 ;; This function uses a non-reentrant model
 26924 ;;
 26925                           
 26926                           	psect	text133
 26927  01746C                     __ptext133:
 26928                           	opt callstack 0
 26929  01746C                     _TMR3_ISR:
 26930                           	opt callstack 11
 26931                           
 26932                           ; BSR set to: 2
 26933                           ;incstack = 0
 26934  01746C  006F FF60  F1D1    	movff	status,??_TMR3_ISR
 26935  017472  0060  F094  F1D2   	movff	btemp,??_TMR3_ISR+1
 26936  017478  0060  F098  F1D3   	movff	btemp+1,??_TMR3_ISR+2
 26937  01747E  0060  F09C  F1D4   	movff	btemp+2,??_TMR3_ISR+3
 26938  017484  0060  F0A0  F1D5   	movff	btemp+3,??_TMR3_ISR+4
 26939  01748A  0060  F0A4  F1D6   	movff	btemp+4,??_TMR3_ISR+5
 26940  017490  0060  F0A8  F1D7   	movff	btemp+5,??_TMR3_ISR+6
 26941  017496  0060  F0AC  F1D8   	movff	btemp+6,??_TMR3_ISR+7
 26942  01749C  0060  F0B0  F1D9   	movff	btemp+7,??_TMR3_ISR+8
 26943  0174A2  0060  F0B4  F1DA   	movff	btemp+8,??_TMR3_ISR+9
 26944  0174A8  0060  F0B8  F1DB   	movff	btemp+9,??_TMR3_ISR+10
 26945  0174AE  0060  F0BC  F1DC   	movff	btemp+10,??_TMR3_ISR+11
 26946  0174B4  0060  F0C0  F1DD   	movff	btemp+11,??_TMR3_ISR+12
 26947  0174BA  EE16  F00B         	lfsr	1,___intlo_sp
 26948                           
 26949                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 26950  0174BE  0139               	movlb	57	; () banked
 26951  0174C0  9DA6               	bcf	166,6,b	;volatile
 26952                           
 26953                           ; BSR set to: 57
 26954                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 26955  0174C2  0060  F04B  FFE6   	movff	_timer3ReloadVal,postinc1
 26956  0174C8  0060  F04F  FFE6   	movff	_timer3ReloadVal+1,postinc1
 26957  0174CE  EC14  F0C4         	call	_TMR3_WriteTimer	;wreg free
 26958                           
 26959                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 26960  0174D2  4A10               	infsnz	TMR3_ISR@CountCallBack^0,f,c	;volatile
 26961  0174D4  2A11               	incf	(TMR3_ISR@CountCallBack+1)^0,f,c	;volatile
 26962  0174D6  5011               	movf	(TMR3_ISR@CountCallBack+1)^0,w,c	;volatile
 26963  0174D8  E104               	bnz	i1u1069_20
 26964  0174DA  0E28               	movlw	40
 26965  0174DC  5C10               	subwf	TMR3_ISR@CountCallBack^0,w,c	;volatile
 26966  0174DE  A0D8               	btfss	status,0,c
 26967  0174E0  D004               	goto	i1l1235
 26968  0174E2                     i1u1069_20:
 26969                           
 26970                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 26971  0174E2  EC8D  F0C7         	call	_TMR3_CallBack	;wreg free
 26972                           
 26973                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 26974  0174E6  6A10               	clrf	TMR3_ISR@CountCallBack^0,c	;volatile
 26975  0174E8  6A11               	clrf	(TMR3_ISR@CountCallBack+1)^0,c	;volatile
 26976  0174EA                     i1l1235:
 26977  0174EA  0060  F774  F030   	movff	??_TMR3_ISR+12,btemp+11
 26978  0174F0  0060  F770  F02F   	movff	??_TMR3_ISR+11,btemp+10
 26979  0174F6  0060  F76C  F02E   	movff	??_TMR3_ISR+10,btemp+9
 26980  0174FC  0060  F768  F02D   	movff	??_TMR3_ISR+9,btemp+8
 26981  017502  0060  F764  F02C   	movff	??_TMR3_ISR+8,btemp+7
 26982  017508  0060  F760  F02B   	movff	??_TMR3_ISR+7,btemp+6
 26983  01750E  0060  F75C  F02A   	movff	??_TMR3_ISR+6,btemp+5
 26984  017514  0060  F758  F029   	movff	??_TMR3_ISR+5,btemp+4
 26985  01751A  0060  F754  F028   	movff	??_TMR3_ISR+4,btemp+3
 26986  017520  0060  F750  F027   	movff	??_TMR3_ISR+3,btemp+2
 26987  017526  0060  F74C  F026   	movff	??_TMR3_ISR+2,btemp+1
 26988  01752C  0060  F748  F025   	movff	??_TMR3_ISR+1,btemp
 26989  017532  0060  F747  FFD8   	movff	??_TMR3_ISR,status
 26990  017538  0011               	retfie		f
 26991  01753A                     __end_of_TMR3_ISR:
 26992                           	opt callstack 0
 26993                           
 26994 ;; *************** function _TMR3_WriteTimer *****************
 26995 ;; Defined at:
 26996 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 26997 ;; Parameters:    Size  Location     Type
 26998 ;;  timerVal        2  [STACK] unsigned short 
 26999 ;; Auto vars:     Size  Location     Type
 27000 ;;		None
 27001 ;; Return value:  Size  Location     Type
 27002 ;;                  1  [STACK] void 
 27003 ;; Registers used:
 27004 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 27005 ;; Tracked objects:
 27006 ;;		On entry : 3F/39
 27007 ;;		On exit  : 0/0
 27008 ;;		Unchanged: 0/0
 27009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27014 ;;Total ram usage:        0 bytes
 27015 ;; Hardware stack levels used:    1
 27016 ;; Hardware stack levels required when called:    3
 27017 ;; This function calls:
 27018 ;;		Nothing
 27019 ;; This function is called by:
 27020 ;;		_TMR3_ISR
 27021 ;; This function uses a reentrant model
 27022 ;;
 27023                           
 27024                           	psect	text134
 27025  018828                     __ptext134:
 27026                           	opt callstack 0
 27027  018828                     _TMR3_WriteTimer:
 27028                           	opt callstack 13
 27029                           
 27030                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 27031                           
 27032                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27033                           ;incstack = 0
 27034  018828  A4A6               	btfss	166,2,c	;volatile
 27035  01882A  D00F               	goto	l5866
 27036                           
 27037                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 27038  01882C  90A6               	bcf	166,0,c	;volatile
 27039                           
 27040                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 27041                           ;stkvar	_timerVal @ sp[(0)+-2]
 27042  01882E  0EFF               	movlw	255
 27043  018830  24E1               	addwf	fsr1l,w,c
 27044  018832  6ED9               	movwf	fsr2l,c
 27045  018834  0EFF               	movlw	255
 27046  018836  20E2               	addwfc	fsr1h,w,c
 27047  018838  6EDA               	movwf	fsr2h,c
 27048  01883A  50DF               	movf	indf2,w,c
 27049  01883C  6EA5               	movwf	165,c	;volatile
 27050                           
 27051                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 27052                           ;stkvar	_timerVal @ sp[(0)+-2]
 27053  01883E  0EFE               	movlw	-2
 27054  018840  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 27055                           
 27056                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 27057  018846  80A6               	bsf	166,0,c	;volatile
 27058                           
 27059                           ;mcc_generated_files/tmr3.c: 141:     }
 27060  018848  D00C               	goto	l1218
 27061  01884A                     l5866:
 27062                           
 27063                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 27064                           ;stkvar	_timerVal @ sp[(0)+-2]
 27065  01884A  0EFF               	movlw	255
 27066  01884C  24E1               	addwf	fsr1l,w,c
 27067  01884E  6ED9               	movwf	fsr2l,c
 27068  018850  0EFF               	movlw	255
 27069  018852  20E2               	addwfc	fsr1h,w,c
 27070  018854  6EDA               	movwf	fsr2h,c
 27071  018856  50DF               	movf	indf2,w,c
 27072  018858  6EA5               	movwf	165,c	;volatile
 27073                           
 27074                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 27075                           ;stkvar	_timerVal @ sp[(0)+-2]
 27076  01885A  0EFE               	movlw	-2
 27077  01885C  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 27078  018862                     l1218:
 27079                           
 27080                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 27081  018862  52E5               	movf	postdec1,f,c
 27082  018864  52E5               	movf	postdec1,f,c
 27083  018866  0012               	return		;funcret
 27084  018868                     __end_of_TMR3_WriteTimer:
 27085                           	opt callstack 0
 27086                           
 27087 ;; *************** function _TMR3_CallBack *****************
 27088 ;; Defined at:
 27089 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 27090 ;; Parameters:    Size  Location     Type
 27091 ;;		None
 27092 ;; Auto vars:     Size  Location     Type
 27093 ;;		None
 27094 ;; Return value:  Size  Location     Type
 27095 ;;                  1  [STACK] void 
 27096 ;; Registers used:
 27097 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl
 27098 ;; Tracked objects:
 27099 ;;		On entry : 0/39
 27100 ;;		On exit  : 0/0
 27101 ;;		Unchanged: 0/0
 27102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27107 ;;Total ram usage:        0 bytes
 27108 ;; Hardware stack levels used:    1
 27109 ;; Hardware stack levels required when called:    5
 27110 ;; This function calls:
 27111 ;;		Absolute function
 27112 ;;		_TMR3_DefaultInterruptHandler
 27113 ;;		_calc_bsoc
 27114 ;; This function is called by:
 27115 ;;		_TMR3_ISR
 27116 ;; This function uses a reentrant model
 27117 ;;
 27118                           
 27119                           	psect	text135
 27120  018F1A                     __ptext135:
 27121                           	opt callstack 0
 27122  018F1A                     _TMR3_CallBack:
 27123                           	opt callstack 11
 27124                           
 27125                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 27126                           
 27127                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27128                           ;incstack = 0
 27129  018F1A  0100               	movlb	0	; () banked
 27130  018F1C  51A9               	movf	_TMR3_InterruptHandler& (0+255),w,b
 27131  018F1E  11AA               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 27132  018F20  11AB               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 27133  018F22  B4D8               	btfsc	status,2,c
 27134  018F24  0012               	return	
 27135                           
 27136                           ; BSR set to: 0
 27137                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 27138  018F26  D801               	call	u870_28
 27139  018F28  0012               	return	
 27140  018F2A                     u870_28:
 27141  018F2A  0005               	push	
 27142  018F2C  6EFA               	movwf	pclath,c
 27143  018F2E  51A9               	movf	_TMR3_InterruptHandler& (0+255),w,b
 27144  018F30  6EFD               	movwf	tosl,c
 27145  018F32  51AA               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 27146  018F34  6EFE               	movwf	tosh,c
 27147  018F36  51AB               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 27148  018F38  6EFF               	movwf	tosu,c
 27149  018F3A  50FA               	movf	pclath,w,c
 27150  018F3C  0012               	return		;indir
 27151  018F3E                     __end_of_TMR3_CallBack:
 27152                           	opt callstack 0
 27153                           
 27154 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 27155 ;; Defined at:
 27156 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 27157 ;; Parameters:    Size  Location     Type
 27158 ;;		None
 27159 ;; Auto vars:     Size  Location     Type
 27160 ;;		None
 27161 ;; Return value:  Size  Location     Type
 27162 ;;                  1  [STACK] void 
 27163 ;; Registers used:
 27164 ;;		None
 27165 ;; Tracked objects:
 27166 ;;		On entry : 3F/0
 27167 ;;		On exit  : 0/0
 27168 ;;		Unchanged: 0/0
 27169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27174 ;;Total ram usage:        0 bytes
 27175 ;; Hardware stack levels used:    1
 27176 ;; Hardware stack levels required when called:    3
 27177 ;; This function calls:
 27178 ;;		Nothing
 27179 ;; This function is called by:
 27180 ;;		_TMR3_Initialize
 27181 ;;		_TMR3_CallBack
 27182 ;; This function uses a reentrant model
 27183 ;;
 27184                           
 27185                           	psect	text136
 27186  019238                     __ptext136:
 27187                           	opt callstack 0
 27188  019238                     _TMR3_DefaultInterruptHandler:
 27189                           	opt callstack 12
 27190                           
 27191                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 27192                           
 27193                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27194                           ;incstack = 0
 27195  019238  0012               	return		;funcret
 27196  01923A                     __end_of_TMR3_DefaultInterruptHandler:
 27197                           	opt callstack 0
 27198                           
 27199 ;; *************** function _calc_bsoc *****************
 27200 ;; Defined at:
 27201 ;;		line 7 in file "bsoc.c"
 27202 ;; Parameters:    Size  Location     Type
 27203 ;;		None
 27204 ;; Auto vars:     Size  Location     Type
 27205 ;;		None
 27206 ;; Return value:  Size  Location     Type
 27207 ;;                  1  [STACK] void 
 27208 ;; Registers used:
 27209 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 27210 ;; Tracked objects:
 27211 ;;		On entry : 3F/0
 27212 ;;		On exit  : 3F/1
 27213 ;;		Unchanged: 0/0
 27214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27219 ;;Total ram usage:        0 bytes
 27220 ;; Hardware stack levels used:    1
 27221 ;; Hardware stack levels required when called:    4
 27222 ;; This function calls:
 27223 ;;		___fladd
 27224 ;;		___fldiv
 27225 ;; This function is called by:
 27226 ;;		_init_bsoc
 27227 ;;		_TMR3_CallBack
 27228 ;; This function uses a reentrant model
 27229 ;;
 27230                           
 27231                           	psect	text137
 27232  017D0E                     __ptext137:
 27233                           	opt callstack 0
 27234  017D0E                     _calc_bsoc:
 27235                           	opt callstack 11
 27236                           
 27237                           ;bsoc.c: 9:  C.dynamic_ah += (C.c_bat/360.0);
 27238                           
 27239                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27240                           ;incstack = 0
 27241  017D0E  0E00               	movlw	0
 27242  017D10  6EE6               	movwf	postinc1,c
 27243  017D12  0E00               	movlw	0
 27244  017D14  6EE6               	movwf	postinc1,c
 27245  017D16  0EB4               	movlw	180
 27246  017D18  6EE6               	movwf	postinc1,c
 27247  017D1A  0E43               	movlw	67
 27248  017D1C  6EE6               	movwf	postinc1,c
 27249  017D1E  0060  F513  FFE6   	movff	_C+68,postinc1
 27250  017D24  0060  F517  FFE6   	movff	_C+69,postinc1
 27251  017D2A  0060  F51B  FFE6   	movff	_C+70,postinc1
 27252  017D30  0060  F51F  FFE6   	movff	_C+71,postinc1
 27253  017D36  ECFB  F09A         	call	___fldiv	;wreg free
 27254  017D3A  0060  F097  FFE6   	movff	btemp,postinc1
 27255  017D40  0060  F09B  FFE6   	movff	btemp+1,postinc1
 27256  017D46  0060  F09F  FFE6   	movff	btemp+2,postinc1
 27257  017D4C  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 27258  017D52  0060  F613  FFE6   	movff	_C+132,postinc1
 27259  017D58  0060  F617  FFE6   	movff	_C+133,postinc1
 27260  017D5E  0060  F61B  FFE6   	movff	_C+134,postinc1
 27261  017D64  0060  F61F  FFE6   	movff	_C+135,postinc1
 27262  017D6A  EC1D  F097         	call	___fladd	;wreg free
 27263  017D6E  0060  F094  F184   	movff	btemp,_C+132	;volatile
 27264  017D74  0060  F098  F185   	movff	btemp+1,_C+133	;volatile
 27265  017D7A  0060  F09C  F186   	movff	btemp+2,_C+134	;volatile
 27266  017D80  0060  F0A0  F187   	movff	btemp+3,_C+135	;volatile
 27267                           
 27268                           ;bsoc.c: 11:  V.lowint_count++;
 27269  017D86  0E01               	movlw	1
 27270  017D88  0102               	movlb	2	; () banked
 27271  017D8A  27B0               	addwf	(_V+176)& (0+255),f,b	;volatile
 27272  017D8C  0E00               	movlw	0
 27273  017D8E  23B1               	addwfc	(_V+177)& (0+255),f,b	;volatile
 27274  017D90  23B2               	addwfc	(_V+178)& (0+255),f,b	;volatile
 27275  017D92  23B3               	addwfc	(_V+179)& (0+255),f,b	;volatile
 27276                           
 27277                           ; BSR set to: 2
 27278                           ;bsoc.c: 12:  C.update=0;
 27279  017D94  0101               	movlb	1	; () banked
 27280  017D96  6BA0               	clrf	(_C+160)& (0+255),b	;volatile
 27281                           
 27282                           ; BSR set to: 1
 27283                           ; _calc_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 27284  017D98  0012               	return		;funcret
 27285  017D9A                     __end_of_calc_bsoc:
 27286                           	opt callstack 0
 27287                           
 27288 ;; *************** function _INT0_ISR *****************
 27289 ;; Defined at:
 27290 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 27291 ;; Parameters:    Size  Location     Type
 27292 ;;		None
 27293 ;; Auto vars:     Size  Location     Type
 27294 ;;		None
 27295 ;; Return value:  Size  Location     Type
 27296 ;;                  1    wreg      void 
 27297 ;; Registers used:
 27298 ;;		wreg, status,2, status,0, pclath, tosl
 27299 ;; Tracked objects:
 27300 ;;		On entry : 0/0
 27301 ;;		On exit  : 0/0
 27302 ;;		Unchanged: 0/0
 27303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27308 ;;Total ram usage:        0 bytes
 27309 ;; Hardware stack levels used:    1
 27310 ;; Hardware stack levels required when called:    2
 27311 ;; This function calls:
 27312 ;;		_INT0_CallBack
 27313 ;; This function is called by:
 27314 ;;		Interrupt level 2
 27315 ;; This function uses a non-reentrant model
 27316 ;;
 27317                           
 27318                           	psect	text138
 27319  0191A0                     __ptext138:
 27320                           	opt callstack 0
 27321  0191A0                     _INT0_ISR:
 27322                           	opt callstack 11
 27323                           
 27324                           ; BSR set to: 1
 27325                           ;incstack = 0
 27326  0191A0  EE14  F016         	lfsr	1,___inthi_sp
 27327                           
 27328                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 27329  0191A4  0139               	movlb	57	; () banked
 27330  0191A6  91A1               	bcf	161,0,b	;volatile
 27331                           
 27332                           ; BSR set to: 57
 27333                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 27334  0191A8  ECC2  F0C7         	call	_INT0_CallBack	;wreg free
 27335  0191AC  0011               	retfie		f
 27336  0191AE                     __end_of_INT0_ISR:
 27337                           	opt callstack 0
 27338                           
 27339 ;; *************** function _INT0_CallBack *****************
 27340 ;; Defined at:
 27341 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 27342 ;; Parameters:    Size  Location     Type
 27343 ;;		None
 27344 ;; Auto vars:     Size  Location     Type
 27345 ;;		None
 27346 ;; Return value:  Size  Location     Type
 27347 ;;                  1  [STACK] void 
 27348 ;; Registers used:
 27349 ;;		wreg, status,2, status,0, pclath, tosl
 27350 ;; Tracked objects:
 27351 ;;		On entry : 3F/39
 27352 ;;		On exit  : 0/0
 27353 ;;		Unchanged: 0/0
 27354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27359 ;;Total ram usage:        0 bytes
 27360 ;; Hardware stack levels used:    1
 27361 ;; Hardware stack levels required when called:    1
 27362 ;; This function calls:
 27363 ;;		Absolute function
 27364 ;;		_INT0_DefaultInterruptHandler
 27365 ;; This function is called by:
 27366 ;;		_INT0_ISR
 27367 ;; This function uses a reentrant model
 27368 ;;
 27369                           
 27370                           	psect	text139
 27371  018F84                     __ptext139:
 27372                           	opt callstack 0
 27373  018F84                     _INT0_CallBack:
 27374                           	opt callstack 11
 27375                           
 27376                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 27377                           
 27378                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27379                           ;incstack = 0
 27380  018F84  5007               	movf	_INT0_InterruptHandler^0,w,c
 27381  018F86  1008               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 27382  018F88  1009               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 27383  018F8A  B4D8               	btfsc	status,2,c
 27384  018F8C  0012               	return	
 27385                           
 27386                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 27387  018F8E  D801               	call	u398_48
 27388  018F90  0012               	return	
 27389  018F92                     u398_48:
 27390  018F92  0005               	push	
 27391  018F94  6EFA               	movwf	pclath,c
 27392  018F96  5007               	movf	_INT0_InterruptHandler^0,w,c
 27393  018F98  6EFD               	movwf	tosl,c
 27394  018F9A  5008               	movf	(_INT0_InterruptHandler+1)^0,w,c
 27395  018F9C  6EFE               	movwf	tosh,c
 27396  018F9E  5009               	movf	(_INT0_InterruptHandler+2)^0,w,c
 27397  018FA0  6EFF               	movwf	tosu,c
 27398  018FA2  50FA               	movf	pclath,w,c
 27399  018FA4  0012               	return		;indir
 27400  018FA6                     __end_of_INT0_CallBack:
 27401                           	opt callstack 0
 27402                           
 27403 ;; *************** function _INT0_DefaultInterruptHandler *****************
 27404 ;; Defined at:
 27405 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 27406 ;; Parameters:    Size  Location     Type
 27407 ;;		None
 27408 ;; Auto vars:     Size  Location     Type
 27409 ;;		None
 27410 ;; Return value:  Size  Location     Type
 27411 ;;                  1  [STACK] void 
 27412 ;; Registers used:
 27413 ;;		None
 27414 ;; Tracked objects:
 27415 ;;		On entry : 0/39
 27416 ;;		On exit  : 0/0
 27417 ;;		Unchanged: 0/0
 27418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27423 ;;Total ram usage:        0 bytes
 27424 ;; Hardware stack levels used:    1
 27425 ;; This function calls:
 27426 ;;		Nothing
 27427 ;; This function is called by:
 27428 ;;		_EXT_INT_Initialize
 27429 ;;		_INT0_CallBack
 27430 ;; This function uses a reentrant model
 27431 ;;
 27432                           
 27433                           	psect	text140
 27434  01923A                     __ptext140:
 27435                           	opt callstack 0
 27436  01923A                     _INT0_DefaultInterruptHandler:
 27437                           	opt callstack 11
 27438                           
 27439                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 27440                           
 27441                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27442                           ;incstack = 0
 27443  01923A  0012               	return		;funcret
 27444  01923C                     __end_of_INT0_DefaultInterruptHandler:
 27445                           	opt callstack 0
 27446                           
 27447 ;; *************** function _Default_ISR *****************
 27448 ;; Defined at:
 27449 ;;		line 89 in file "mcc_generated_files/interrupt_manager.c"
 27450 ;; Parameters:    Size  Location     Type
 27451 ;;		None
 27452 ;; Auto vars:     Size  Location     Type
 27453 ;;		None
 27454 ;; Return value:  Size  Location     Type
 27455 ;;                  1    wreg      void 
 27456 ;; Registers used:
 27457 ;;		None
 27458 ;; Tracked objects:
 27459 ;;		On entry : 0/0
 27460 ;;		On exit  : 0/0
 27461 ;;		Unchanged: 0/0
 27462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27467 ;;Total ram usage:        0 bytes
 27468 ;; Hardware stack levels used:    1
 27469 ;; This function calls:
 27470 ;;		Nothing
 27471 ;; This function is called by:
 27472 ;;		Interrupt level 2
 27473 ;; This function uses a non-reentrant model
 27474 ;;
 27475                           
 27476                           	psect	text141
 27477  019230                     __ptext141:
 27478                           	opt callstack 0
 27479  019230                     _Default_ISR:
 27480                           	opt callstack 13
 27481                           
 27482                           ;incstack = 0
 27483  019230  EE14  F016         	lfsr	1,___inthi_sp
 27484  019234  0011               	retfie		f
 27485  019236                     __end_of_Default_ISR:
 27486                           	opt callstack 0
 27487                           
 27488 ;; *************** function _ADCC_ISR *****************
 27489 ;; Defined at:
 27490 ;;		line 314 in file "mcc_generated_files/adcc.c"
 27491 ;; Parameters:    Size  Location     Type
 27492 ;;		None
 27493 ;; Auto vars:     Size  Location     Type
 27494 ;;		None
 27495 ;; Return value:  Size  Location     Type
 27496 ;;                  1    wreg      void 
 27497 ;; Registers used:
 27498 ;;		wreg, status,2, status,0, pclath, tosl
 27499 ;; Tracked objects:
 27500 ;;		On entry : 0/0
 27501 ;;		On exit  : 0/0
 27502 ;;		Unchanged: 0/0
 27503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27508 ;;Total ram usage:        0 bytes
 27509 ;; Hardware stack levels used:    1
 27510 ;; Hardware stack levels required when called:    1
 27511 ;; This function calls:
 27512 ;;		Absolute function
 27513 ;;		_ADCC_DefaultInterruptHandler
 27514 ;;		_adc_int_handler
 27515 ;; This function is called by:
 27516 ;;		Interrupt level 2
 27517 ;; This function uses a non-reentrant model
 27518 ;;
 27519                           
 27520                           	psect	text142
 27521  018ADC                     __ptext142:
 27522                           	opt callstack 0
 27523  018ADC                     _ADCC_ISR:
 27524                           	opt callstack 12
 27525                           
 27526                           ;incstack = 0
 27527  018ADC  EE14  F016         	lfsr	1,___inthi_sp
 27528                           
 27529                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 27530  018AE0  0139               	movlb	57	; () banked
 27531  018AE2  95A1               	bcf	161,2,b	;volatile
 27532                           
 27533                           ; BSR set to: 57
 27534                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 27535  018AE4  0100               	movlb	0	; () banked
 27536  018AE6  51B5               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 27537  018AE8  11B6               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 27538  018AEA  11B7               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 27539  018AEC  B4D8               	btfsc	status,2,c
 27540  018AEE  0011               	retfie		f
 27541                           
 27542                           ; BSR set to: 0
 27543                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 27544  018AF0  D801               	call	i2u892_48
 27545  018AF2  0011               	retfie		f
 27546  018AF4                     i2u892_48:
 27547  018AF4  0005               	push	
 27548  018AF6  6EFA               	movwf	pclath,c
 27549  018AF8  51B5               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 27550  018AFA  6EFD               	movwf	tosl,c
 27551  018AFC  51B6               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 27552  018AFE  6EFE               	movwf	tosh,c
 27553  018B00  51B7               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 27554  018B02  6EFF               	movwf	tosu,c
 27555  018B04  50FA               	movf	pclath,w,c
 27556  018B06  0012               	return		;indir
 27557  018B08                     __end_of_ADCC_ISR:
 27558                           	opt callstack 0
 27559                           
 27560 ;; *************** function _adc_int_t_handler *****************
 27561 ;; Defined at:
 27562 ;;		line 128 in file "daq.c"
 27563 ;; Parameters:    Size  Location     Type
 27564 ;;		None
 27565 ;; Auto vars:     Size  Location     Type
 27566 ;;		None
 27567 ;; Return value:  Size  Location     Type
 27568 ;;                  1  [STACK] void 
 27569 ;; Registers used:
 27570 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 27571 ;; Tracked objects:
 27572 ;;		On entry : 3F/0
 27573 ;;		On exit  : 1/0
 27574 ;;		Unchanged: 0/0
 27575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27580 ;;Total ram usage:        0 bytes
 27581 ;; Hardware stack levels used:    1
 27582 ;; Hardware stack levels required when called:    1
 27583 ;; This function calls:
 27584 ;;		_ADCC_DischargeSampleCapacitor
 27585 ;;		_ADCC_StartConversion
 27586 ;; This function is called by:
 27587 ;;		_start_adc_scan
 27588 ;;		_ADCC_ThresholdISR
 27589 ;; This function uses a reentrant model
 27590 ;;
 27591                           
 27592                           	psect	text143
 27593  017F2A                     __ptext143:
 27594                           	opt callstack 0
 27595  017F2A                     _adc_int_t_handler:
 27596                           	opt callstack 11
 27597                           
 27598                           ;daq.c: 133:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 27599                           
 27600                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27601                           ;incstack = 0
 27602  017F2A  013E               	movlb	62	; () banked
 27603  017F2C  51E6               	movf	230,w,b	;volatile
 27604  017F2E  006F FB9C  F025    	movff	16103,btemp	;volatile
 27605  017F34  6A26               	clrf	(btemp+1)^0,c
 27606  017F36  0060  F094  F026   	movff	btemp,btemp+1
 27607  017F3C  6A25               	clrf	btemp^0,c
 27608  017F3E  2625               	addwf	btemp^0,f,c
 27609  017F40  0E00               	movlw	0
 27610  017F42  2226               	addwfc	(btemp+1)^0,f,c
 27611  017F44  0100               	movlb	0	; () banked
 27612  017F46  51E7               	movf	(_R+36)& (0+255),w,b	;volatile
 27613  017F48  0D02               	mullw	2
 27614  017F4A  50F3               	movf	243,w,c
 27615  017F4C  0FC3               	addlw	low _R
 27616  017F4E  6ED9               	movwf	fsr2l,c
 27617  017F50  6ADA               	clrf	fsr2h,c
 27618  017F52  0060  F097  FFDE   	movff	btemp,postinc2
 27619  017F58  0060  F09B  FFDD   	movff	btemp+1,postdec2
 27620  017F5E                     l9528:
 27621                           
 27622                           ;daq.c: 135:   if (++R.scan_index > 0XD) {
 27623  017F5E  0100               	movlb	0	; () banked
 27624  017F60  2BE7               	incf	(_R+36)& (0+255),f,b	;volatile
 27625  017F62  0E0D               	movlw	13
 27626  017F64  65E7               	cpfsgt	(_R+36)& (0+255),b	;volatile
 27627  017F66  D003               	goto	l9534
 27628                           
 27629                           ; BSR set to: 0
 27630                           ;daq.c: 136:    R.done = 1;
 27631  017F68  0E01               	movlw	1
 27632  017F6A  6FEA               	movwf	(_R+39)& (0+255),b	;volatile
 27633  017F6C  0012               	return	
 27634  017F6E                     l9534:
 27635                           
 27636                           ; BSR set to: 0
 27637                           ;daq.c: 142:  } while (!((R.scan_select >> R.scan_index) &0x1));
 27638  017F6E  0060  F39C  F030   	movff	_R+36,btemp+11	;volatile
 27639  017F74  EE20  F0E8         	lfsr	2,_R+37	;volatile
 27640  017F78  006F FF78  F02D    	movff	postinc2,btemp+8
 27641  017F7E  006F FF74  F02E    	movff	postdec2,btemp+9
 27642  017F84  2A30               	incf	(btemp+11)^0,f,c
 27643  017F86  D003               	goto	u889_44
 27644  017F88                     u889_45:
 27645  017F88  90D8               	bcf	status,0,c
 27646  017F8A  322E               	rrcf	(btemp+9)^0,f,c
 27647  017F8C  322D               	rrcf	(btemp+8)^0,f,c
 27648  017F8E                     u889_44:
 27649  017F8E  2E30               	decfsz	(btemp+11)^0,f,c
 27650  017F90  D7FB               	goto	u889_45
 27651  017F92  A02D               	btfss	(btemp+8)^0,0,c
 27652  017F94  D7E4               	goto	l9528
 27653                           
 27654                           ;daq.c: 143:  ADCC_DischargeSampleCapacitor();
 27655  017F96  ECF5  F0C8         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 27656                           
 27657                           ; BSR set to: 62
 27658                           ;daq.c: 144:  ADCC_StartConversion(R.scan_index & 0xf);
 27659  017F9A  0100               	movlb	0	; () banked
 27660  017F9C  51E7               	movf	(_R+36)& (0+255),w,b	;volatile
 27661  017F9E  0B0F               	andlw	15
 27662  017FA0  6EE6               	movwf	postinc1,c
 27663  017FA2  ECA8  F0C8         	call	_ADCC_StartConversion	;wreg free
 27664                           
 27665                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 27666  017FA6  0012               	return		;funcret
 27667  017FA8                     __end_of_adc_int_t_handler:
 27668                           	opt callstack 0
 27669                           
 27670 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 27671 ;; Defined at:
 27672 ;;		line 339 in file "mcc_generated_files/adcc.c"
 27673 ;; Parameters:    Size  Location     Type
 27674 ;;		None
 27675 ;; Auto vars:     Size  Location     Type
 27676 ;;		None
 27677 ;; Return value:  Size  Location     Type
 27678 ;;                  1  [STACK] void 
 27679 ;; Registers used:
 27680 ;;		None
 27681 ;; Tracked objects:
 27682 ;;		On entry : 3F/0
 27683 ;;		On exit  : 0/0
 27684 ;;		Unchanged: 0/0
 27685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27690 ;;Total ram usage:        0 bytes
 27691 ;; Hardware stack levels used:    1
 27692 ;; This function calls:
 27693 ;;		Nothing
 27694 ;; This function is called by:
 27695 ;;		_ADCC_Initialize
 27696 ;;		_ADCC_ISR
 27697 ;;		_ADCC_ThresholdISR
 27698 ;; This function uses a reentrant model
 27699 ;;
 27700                           
 27701                           	psect	text144
 27702  01923C                     __ptext144:
 27703                           	opt callstack 0
 27704  01923C                     _ADCC_DefaultInterruptHandler:
 27705                           	opt callstack 12
 27706                           
 27707                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 27708                           
 27709                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27710                           ;incstack = 0
 27711  01923C  0012               	return		;funcret
 27712  01923E                     __end_of_ADCC_DefaultInterruptHandler:
 27713                           	opt callstack 0
 27714                           
 27715 ;; *************** function _adc_int_handler *****************
 27716 ;; Defined at:
 27717 ;;		line 118 in file "daq.c"
 27718 ;; Parameters:    Size  Location     Type
 27719 ;;		None
 27720 ;; Auto vars:     Size  Location     Type
 27721 ;;		None
 27722 ;; Return value:  Size  Location     Type
 27723 ;;                  1  [STACK] void 
 27724 ;; Registers used:
 27725 ;;		None
 27726 ;; Tracked objects:
 27727 ;;		On entry : 3F/0
 27728 ;;		On exit  : 0/0
 27729 ;;		Unchanged: 0/0
 27730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27735 ;;Total ram usage:        0 bytes
 27736 ;; Hardware stack levels used:    1
 27737 ;; This function calls:
 27738 ;;		Nothing
 27739 ;; This function is called by:
 27740 ;;		_start_adc_scan
 27741 ;;		_ADCC_ISR
 27742 ;; This function uses a reentrant model
 27743 ;;
 27744                           
 27745                           	psect	text145
 27746  01923E                     __ptext145:
 27747                           	opt callstack 0
 27748  01923E                     _adc_int_handler:
 27749                           	opt callstack 12
 27750                           
 27751                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 27752                           
 27753                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27754                           ;incstack = 0
 27755  01923E  0012               	return		;funcret
 27756  019240                     __end_of_adc_int_handler:
 27757                           	opt callstack 0
 27758                           
 27759 ;; *************** function _ADCC_ThresholdISR *****************
 27760 ;; Defined at:
 27761 ;;		line 327 in file "mcc_generated_files/adcc.c"
 27762 ;; Parameters:    Size  Location     Type
 27763 ;;		None
 27764 ;; Auto vars:     Size  Location     Type
 27765 ;;		None
 27766 ;; Return value:  Size  Location     Type
 27767 ;;                  1    wreg      void 
 27768 ;; Registers used:
 27769 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 27770 ;; Tracked objects:
 27771 ;;		On entry : 0/0
 27772 ;;		On exit  : 0/0
 27773 ;;		Unchanged: 0/0
 27774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27777 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27778 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27779 ;;Total ram usage:        5 bytes
 27780 ;; Hardware stack levels used:    1
 27781 ;; Hardware stack levels required when called:    2
 27782 ;; This function calls:
 27783 ;;		Absolute function
 27784 ;;		_ADCC_DefaultInterruptHandler
 27785 ;;		_adc_int_t_handler
 27786 ;; This function is called by:
 27787 ;;		Interrupt level 2
 27788 ;; This function uses a non-reentrant model
 27789 ;;
 27790                           
 27791                           	psect	text146
 27792  01807C                     __ptext146:
 27793                           	opt callstack 0
 27794  01807C                     _ADCC_ThresholdISR:
 27795                           	opt callstack 11
 27796                           
 27797                           ;incstack = 0
 27798  01807C  0060  F094  F045   	movff	btemp,??_ADCC_ThresholdISR
 27799  018082  0060  F098  F046   	movff	btemp+1,??_ADCC_ThresholdISR+1
 27800  018088  0060  F0B4  F047   	movff	btemp+8,??_ADCC_ThresholdISR+2
 27801  01808E  0060  F0B8  F048   	movff	btemp+9,??_ADCC_ThresholdISR+3
 27802  018094  0060  F0C0  F049   	movff	btemp+11,??_ADCC_ThresholdISR+4
 27803  01809A  EE14  F016         	lfsr	1,___inthi_sp
 27804                           
 27805                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 27806  01809E  0139               	movlb	57	; () banked
 27807  0180A0  97A1               	bcf	161,3,b	;volatile
 27808                           
 27809                           ; BSR set to: 57
 27810                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 27811  0180A2  0100               	movlb	0	; () banked
 27812  0180A4  51B2               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 27813  0180A6  11B3               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 27814  0180A8  11B4               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 27815  0180AA  B4D8               	btfsc	status,2,c
 27816  0180AC  D00C               	goto	i2u894_49
 27817                           
 27818                           ; BSR set to: 0
 27819                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 27820  0180AE  D801               	call	i2u894_48
 27821  0180B0  D00A               	goto	i2u894_49
 27822  0180B2                     i2u894_48:
 27823  0180B2  0005               	push	
 27824  0180B4  6EFA               	movwf	pclath,c
 27825  0180B6  51B2               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 27826  0180B8  6EFD               	movwf	tosl,c
 27827  0180BA  51B3               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 27828  0180BC  6EFE               	movwf	tosh,c
 27829  0180BE  51B4               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 27830  0180C0  6EFF               	movwf	tosu,c
 27831  0180C2  50FA               	movf	pclath,w,c
 27832  0180C4  0012               	return		;indir
 27833  0180C6                     i2u894_49:
 27834  0180C6  0060  F124  F030   	movff	??_ADCC_ThresholdISR+4,btemp+11
 27835  0180CC  0060  F120  F02E   	movff	??_ADCC_ThresholdISR+3,btemp+9
 27836  0180D2  0060  F11C  F02D   	movff	??_ADCC_ThresholdISR+2,btemp+8
 27837  0180D8  0060  F118  F026   	movff	??_ADCC_ThresholdISR+1,btemp+1
 27838  0180DE  0060  F114  F025   	movff	??_ADCC_ThresholdISR,btemp
 27839  0180E4  0011               	retfie		f
 27840  0180E6                     __end_of_ADCC_ThresholdISR:
 27841                           	opt callstack 0
 27842                           
 27843 ;; *************** function _UART1_tx_vect_isr *****************
 27844 ;; Defined at:
 27845 ;;		line 199 in file "mcc_generated_files/uart1.c"
 27846 ;; Parameters:    Size  Location     Type
 27847 ;;		None
 27848 ;; Auto vars:     Size  Location     Type
 27849 ;;		None
 27850 ;; Return value:  Size  Location     Type
 27851 ;;                  1    wreg      void 
 27852 ;; Registers used:
 27853 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 27854 ;; Tracked objects:
 27855 ;;		On entry : 0/0
 27856 ;;		On exit  : 0/0
 27857 ;;		Unchanged: 0/0
 27858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27863 ;;Total ram usage:        0 bytes
 27864 ;; Hardware stack levels used:    1
 27865 ;; Hardware stack levels required when called:    1
 27866 ;; This function calls:
 27867 ;;		Absolute function
 27868 ;;		_UART1_Transmit_ISR
 27869 ;; This function is called by:
 27870 ;;		Interrupt level 2
 27871 ;; This function uses a non-reentrant model
 27872 ;;
 27873                           
 27874                           	psect	text147
 27875  018E34                     __ptext147:
 27876                           	opt callstack 0
 27877  018E34                     _UART1_tx_vect_isr:
 27878                           	opt callstack 12
 27879                           
 27880                           ;incstack = 0
 27881  018E34  EE14  F016         	lfsr	1,___inthi_sp
 27882                           
 27883                           ;mcc_generated_files/uart1.c: 201:  if (UART1_TxInterruptHandler) {
 27884  018E38  0100               	movlb	0	; () banked
 27885  018E3A  51B8               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 27886  018E3C  11B9               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 27887  018E3E  11BA               	iorwf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 27888  018E40  B4D8               	btfsc	status,2,c
 27889  018E42  0011               	retfie		f
 27890                           
 27891                           ; BSR set to: 0
 27892                           ;mcc_generated_files/uart1.c: 202:   UART1_TxInterruptHandler();
 27893  018E44  D801               	call	i2u896_48
 27894  018E46  0011               	retfie		f
 27895  018E48                     i2u896_48:
 27896  018E48  0005               	push	
 27897  018E4A  6EFA               	movwf	pclath,c
 27898  018E4C  51B8               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 27899  018E4E  6EFD               	movwf	tosl,c
 27900  018E50  51B9               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 27901  018E52  6EFE               	movwf	tosh,c
 27902  018E54  51BA               	movf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 27903  018E56  6EFF               	movwf	tosu,c
 27904  018E58  50FA               	movf	pclath,w,c
 27905  018E5A  0012               	return		;indir
 27906  018E5C                     __end_of_UART1_tx_vect_isr:
 27907                           	opt callstack 0
 27908                           
 27909 ;; *************** function _UART1_Transmit_ISR *****************
 27910 ;; Defined at:
 27911 ;;		line 213 in file "mcc_generated_files/uart1.c"
 27912 ;; Parameters:    Size  Location     Type
 27913 ;;		None
 27914 ;; Auto vars:     Size  Location     Type
 27915 ;;		None
 27916 ;; Return value:  Size  Location     Type
 27917 ;;                  1  [STACK] void 
 27918 ;; Registers used:
 27919 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27920 ;; Tracked objects:
 27921 ;;		On entry : 3F/0
 27922 ;;		On exit  : 3B/39
 27923 ;;		Unchanged: 0/0
 27924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27929 ;;Total ram usage:        0 bytes
 27930 ;; Hardware stack levels used:    1
 27931 ;; This function calls:
 27932 ;;		Nothing
 27933 ;; This function is called by:
 27934 ;;		_UART1_Initialize
 27935 ;;		_UART1_tx_vect_isr
 27936 ;; This function uses a reentrant model
 27937 ;;
 27938                           
 27939                           	psect	text148
 27940  018B08                     __ptext148:
 27941                           	opt callstack 0
 27942  018B08                     _UART1_Transmit_ISR:
 27943                           	opt callstack 12
 27944                           
 27945                           ;mcc_generated_files/uart1.c: 216:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 27946                           
 27947                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27948                           ;incstack = 0
 27949  018B08  0E40               	movlw	64
 27950  018B0A  6022               	cpfslt	_uart1TxBufferRemaining^0,c
 27951  018B0C  D010               	goto	l583
 27952                           
 27953                           ;mcc_generated_files/uart1.c: 217:   U1TXB = uart1TxBuffer[uart1TxTail++];
 27954  018B0E  0EBC               	movlw	low _uart1TxBuffer
 27955  018B10  2423               	addwf	_uart1TxTail^0,w,c	;volatile
 27956  018B12  6ED9               	movwf	fsr2l,c
 27957  018B14  6ADA               	clrf	fsr2h,c
 27958  018B16  0E02               	movlw	high _uart1TxBuffer
 27959  018B18  22DA               	addwfc	fsr2h,f,c
 27960  018B1A  50DF               	movf	indf2,w,c
 27961  018B1C  013D               	movlb	61	; () banked
 27962  018B1E  6FEA               	movwf	234,b	;volatile
 27963                           
 27964                           ; BSR set to: 61
 27965  018B20  2A23               	incf	_uart1TxTail^0,f,c	;volatile
 27966                           
 27967                           ; BSR set to: 61
 27968                           ;mcc_generated_files/uart1.c: 218:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 27969  018B22  0E3F               	movlw	63
 27970  018B24  6423               	cpfsgt	_uart1TxTail^0,c
 27971  018B26  D001               	goto	l9240
 27972                           
 27973                           ; BSR set to: 61
 27974                           ;mcc_generated_files/uart1.c: 219:    uart1TxTail = 0;
 27975  018B28  6A23               	clrf	_uart1TxTail^0,c	;volatile
 27976  018B2A                     l9240:
 27977                           
 27978                           ; BSR set to: 61
 27979                           ;mcc_generated_files/uart1.c: 221:   uart1TxBufferRemaining++;
 27980  018B2A  2A22               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 27981                           
 27982                           ;mcc_generated_files/uart1.c: 222:  } else {
 27983  018B2C  0012               	return	
 27984  018B2E                     l583:
 27985                           
 27986                           ;mcc_generated_files/uart1.c: 223:   PIE3bits.U1TXIE = 0;
 27987  018B2E  0139               	movlb	57	; () banked
 27988  018B30  9993               	bcf	147,4,b	;volatile
 27989                           
 27990                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 27991  018B32  0012               	return		;funcret
 27992  018B34                     __end_of_UART1_Transmit_ISR:
 27993                           	opt callstack 0
 27994                           
 27995 ;; *************** function _UART1_rx_vect_isr *****************
 27996 ;; Defined at:
 27997 ;;		line 206 in file "mcc_generated_files/uart1.c"
 27998 ;; Parameters:    Size  Location     Type
 27999 ;;		None
 28000 ;; Auto vars:     Size  Location     Type
 28001 ;;		None
 28002 ;; Return value:  Size  Location     Type
 28003 ;;                  1    wreg      void 
 28004 ;; Registers used:
 28005 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 28006 ;; Tracked objects:
 28007 ;;		On entry : 0/0
 28008 ;;		On exit  : 0/0
 28009 ;;		Unchanged: 0/0
 28010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28015 ;;Total ram usage:        0 bytes
 28016 ;; Hardware stack levels used:    1
 28017 ;; Hardware stack levels required when called:    1
 28018 ;; This function calls:
 28019 ;;		Absolute function
 28020 ;;		_UART1_Receive_ISR
 28021 ;; This function is called by:
 28022 ;;		Interrupt level 2
 28023 ;; This function uses a non-reentrant model
 28024 ;;
 28025                           
 28026                           	psect	text149
 28027  018E5C                     __ptext149:
 28028                           	opt callstack 0
 28029  018E5C                     _UART1_rx_vect_isr:
 28030                           	opt callstack 12
 28031                           
 28032                           ;incstack = 0
 28033  018E5C  EE14  F016         	lfsr	1,___inthi_sp
 28034                           
 28035                           ;mcc_generated_files/uart1.c: 208:  if (UART1_RxInterruptHandler) {
 28036  018E60  0100               	movlb	0	; () banked
 28037  018E62  51BB               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 28038  018E64  11BC               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 28039  018E66  11BD               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 28040  018E68  B4D8               	btfsc	status,2,c
 28041  018E6A  0011               	retfie		f
 28042                           
 28043                           ; BSR set to: 0
 28044                           ;mcc_generated_files/uart1.c: 209:   UART1_RxInterruptHandler();
 28045  018E6C  D801               	call	i2u898_48
 28046  018E6E  0011               	retfie		f
 28047  018E70                     i2u898_48:
 28048  018E70  0005               	push	
 28049  018E72  6EFA               	movwf	pclath,c
 28050  018E74  51BB               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 28051  018E76  6EFD               	movwf	tosl,c
 28052  018E78  51BC               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 28053  018E7A  6EFE               	movwf	tosh,c
 28054  018E7C  51BD               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 28055  018E7E  6EFF               	movwf	tosu,c
 28056  018E80  50FA               	movf	pclath,w,c
 28057  018E82  0012               	return		;indir
 28058  018E84                     __end_of_UART1_rx_vect_isr:
 28059                           	opt callstack 0
 28060                           
 28061 ;; *************** function _UART1_Receive_ISR *****************
 28062 ;; Defined at:
 28063 ;;		line 229 in file "mcc_generated_files/uart1.c"
 28064 ;; Parameters:    Size  Location     Type
 28065 ;;		None
 28066 ;; Auto vars:     Size  Location     Type
 28067 ;;		None
 28068 ;; Return value:  Size  Location     Type
 28069 ;;                  1  [STACK] void 
 28070 ;; Registers used:
 28071 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28072 ;; Tracked objects:
 28073 ;;		On entry : 3F/0
 28074 ;;		On exit  : 0/0
 28075 ;;		Unchanged: 0/0
 28076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28081 ;;Total ram usage:        0 bytes
 28082 ;; Hardware stack levels used:    1
 28083 ;; This function calls:
 28084 ;;		Nothing
 28085 ;; This function is called by:
 28086 ;;		_UART1_Initialize
 28087 ;;		_UART1_rx_vect_isr
 28088 ;; This function uses a reentrant model
 28089 ;;
 28090                           
 28091                           	psect	text150
 28092  01903E                     __ptext150:
 28093                           	opt callstack 0
 28094  01903E                     _UART1_Receive_ISR:
 28095                           	opt callstack 12
 28096                           
 28097                           ;mcc_generated_files/uart1.c: 232:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 28098                           
 28099                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28100                           ;incstack = 0
 28101  01903E  0E00               	movlw	low _uart1RxBuffer
 28102  019040  2421               	addwf	_uart1RxHead^0,w,c	;volatile
 28103  019042  6ED9               	movwf	fsr2l,c
 28104  019044  6ADA               	clrf	fsr2h,c
 28105  019046  0E05               	movlw	high _uart1RxBuffer
 28106  019048  22DA               	addwfc	fsr2h,f,c
 28107  01904A  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 28108  019050  2A21               	incf	_uart1RxHead^0,f,c	;volatile
 28109                           
 28110                           ;mcc_generated_files/uart1.c: 233:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 28111  019052  2821               	incf	_uart1RxHead^0,w,c
 28112  019054  B4D8               	btfsc	status,2,c
 28113                           
 28114                           ;mcc_generated_files/uart1.c: 234:   uart1RxHead = 0;
 28115  019056  6A21               	clrf	_uart1RxHead^0,c	;volatile
 28116                           
 28117                           ;mcc_generated_files/uart1.c: 236:  uart1RxCount++;
 28118  019058  2A1F               	incf	_uart1RxCount^0,f,c	;volatile
 28119                           
 28120                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 28121  01905A  0012               	return		;funcret
 28122  01905C                     __end_of_UART1_Receive_ISR:
 28123                           	opt callstack 0
 28124                           
 28125 ;; *************** function _UART2_tx_vect_isr *****************
 28126 ;; Defined at:
 28127 ;;		line 195 in file "mcc_generated_files/uart2.c"
 28128 ;; Parameters:    Size  Location     Type
 28129 ;;		None
 28130 ;; Auto vars:     Size  Location     Type
 28131 ;;		None
 28132 ;; Return value:  Size  Location     Type
 28133 ;;                  1    wreg      void 
 28134 ;; Registers used:
 28135 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 28136 ;; Tracked objects:
 28137 ;;		On entry : 0/0
 28138 ;;		On exit  : 0/0
 28139 ;;		Unchanged: 0/0
 28140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28145 ;;Total ram usage:        0 bytes
 28146 ;; Hardware stack levels used:    1
 28147 ;; Hardware stack levels required when called:    1
 28148 ;; This function calls:
 28149 ;;		Absolute function
 28150 ;;		_UART2_Transmit_ISR
 28151 ;; This function is called by:
 28152 ;;		Interrupt level 2
 28153 ;; This function uses a non-reentrant model
 28154 ;;
 28155                           
 28156                           	psect	text151
 28157  018E84                     __ptext151:
 28158                           	opt callstack 0
 28159  018E84                     _UART2_tx_vect_isr:
 28160                           	opt callstack 12
 28161                           
 28162                           ;incstack = 0
 28163  018E84  EE14  F016         	lfsr	1,___inthi_sp
 28164                           
 28165                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 28166  018E88  0100               	movlb	0	; () banked
 28167  018E8A  51BE               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 28168  018E8C  11BF               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 28169  018E8E  11C0               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 28170  018E90  B4D8               	btfsc	status,2,c
 28171  018E92  0011               	retfie		f
 28172                           
 28173                           ; BSR set to: 0
 28174                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 28175  018E94  D801               	call	i2u900_48
 28176  018E96  0011               	retfie		f
 28177  018E98                     i2u900_48:
 28178  018E98  0005               	push	
 28179  018E9A  6EFA               	movwf	pclath,c
 28180  018E9C  51BE               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 28181  018E9E  6EFD               	movwf	tosl,c
 28182  018EA0  51BF               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 28183  018EA2  6EFE               	movwf	tosh,c
 28184  018EA4  51C0               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 28185  018EA6  6EFF               	movwf	tosu,c
 28186  018EA8  50FA               	movf	pclath,w,c
 28187  018EAA  0012               	return		;indir
 28188  018EAC                     __end_of_UART2_tx_vect_isr:
 28189                           	opt callstack 0
 28190                           
 28191 ;; *************** function _UART2_Transmit_ISR *****************
 28192 ;; Defined at:
 28193 ;;		line 213 in file "mcc_generated_files/uart2.c"
 28194 ;; Parameters:    Size  Location     Type
 28195 ;;		None
 28196 ;; Auto vars:     Size  Location     Type
 28197 ;;		None
 28198 ;; Return value:  Size  Location     Type
 28199 ;;                  1  [STACK] void 
 28200 ;; Registers used:
 28201 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28202 ;; Tracked objects:
 28203 ;;		On entry : 3F/0
 28204 ;;		On exit  : 3B/39
 28205 ;;		Unchanged: 0/0
 28206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28211 ;;Total ram usage:        0 bytes
 28212 ;; Hardware stack levels used:    1
 28213 ;; This function calls:
 28214 ;;		Nothing
 28215 ;; This function is called by:
 28216 ;;		_UART2_Initialize
 28217 ;;		_UART2_tx_vect_isr
 28218 ;; This function uses a reentrant model
 28219 ;;
 28220                           
 28221                           	psect	text152
 28222  018B34                     __ptext152:
 28223                           	opt callstack 0
 28224  018B34                     _UART2_Transmit_ISR:
 28225                           	opt callstack 12
 28226                           
 28227                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 28228                           
 28229                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28230                           ;incstack = 0
 28231  018B34  0E40               	movlw	64
 28232  018B36  601C               	cpfslt	_uart2TxBufferRemaining^0,c
 28233  018B38  D010               	goto	l703
 28234                           
 28235                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 28236  018B3A  0E54               	movlw	low _uart2TxBuffer
 28237  018B3C  241D               	addwf	_uart2TxTail^0,w,c	;volatile
 28238  018B3E  6ED9               	movwf	fsr2l,c
 28239  018B40  6ADA               	clrf	fsr2h,c
 28240  018B42  0E03               	movlw	high _uart2TxBuffer
 28241  018B44  22DA               	addwfc	fsr2h,f,c
 28242  018B46  50DF               	movf	indf2,w,c
 28243  018B48  013D               	movlb	61	; () banked
 28244  018B4A  6FD2               	movwf	210,b	;volatile
 28245                           
 28246                           ; BSR set to: 61
 28247  018B4C  2A1D               	incf	_uart2TxTail^0,f,c	;volatile
 28248                           
 28249                           ; BSR set to: 61
 28250                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 28251  018B4E  0E3F               	movlw	63
 28252  018B50  641D               	cpfsgt	_uart2TxTail^0,c
 28253  018B52  D001               	goto	l9262
 28254                           
 28255                           ; BSR set to: 61
 28256                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 28257  018B54  6A1D               	clrf	_uart2TxTail^0,c	;volatile
 28258  018B56                     l9262:
 28259                           
 28260                           ; BSR set to: 61
 28261                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 28262  018B56  2A1C               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 28263                           
 28264                           ;mcc_generated_files/uart2.c: 224:     }
 28265  018B58  0012               	return	
 28266  018B5A                     l703:
 28267                           
 28268                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 28269  018B5A  0139               	movlb	57	; () banked
 28270  018B5C  9796               	bcf	150,3,b	;volatile
 28271                           
 28272                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 28273  018B5E  0012               	return		;funcret
 28274  018B60                     __end_of_UART2_Transmit_ISR:
 28275                           	opt callstack 0
 28276                           
 28277 ;; *************** function _UART2_rx_vect_isr *****************
 28278 ;; Defined at:
 28279 ;;		line 203 in file "mcc_generated_files/uart2.c"
 28280 ;; Parameters:    Size  Location     Type
 28281 ;;		None
 28282 ;; Auto vars:     Size  Location     Type
 28283 ;;		None
 28284 ;; Return value:  Size  Location     Type
 28285 ;;                  1    wreg      void 
 28286 ;; Registers used:
 28287 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 28288 ;; Tracked objects:
 28289 ;;		On entry : 0/0
 28290 ;;		On exit  : 0/0
 28291 ;;		Unchanged: 0/0
 28292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28297 ;;Total ram usage:        0 bytes
 28298 ;; Hardware stack levels used:    1
 28299 ;; Hardware stack levels required when called:    1
 28300 ;; This function calls:
 28301 ;;		Absolute function
 28302 ;;		_UART2_Receive_ISR
 28303 ;; This function is called by:
 28304 ;;		Interrupt level 2
 28305 ;; This function uses a non-reentrant model
 28306 ;;
 28307                           
 28308                           	psect	text153
 28309  018EAC                     __ptext153:
 28310                           	opt callstack 0
 28311  018EAC                     _UART2_rx_vect_isr:
 28312                           	opt callstack 12
 28313                           
 28314                           ;incstack = 0
 28315  018EAC  EE14  F016         	lfsr	1,___inthi_sp
 28316                           
 28317                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 28318  018EB0  5001               	movf	_UART2_RxInterruptHandler^0,w,c
 28319  018EB2  1002               	iorwf	(_UART2_RxInterruptHandler+1)^0,w,c
 28320  018EB4  1003               	iorwf	(_UART2_RxInterruptHandler+2)^0,w,c
 28321  018EB6  B4D8               	btfsc	status,2,c
 28322  018EB8  0011               	retfie		f
 28323                           
 28324                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 28325  018EBA  D801               	call	i2u902_48
 28326  018EBC  0011               	retfie		f
 28327  018EBE                     i2u902_48:
 28328  018EBE  0005               	push	
 28329  018EC0  6EFA               	movwf	pclath,c
 28330  018EC2  5001               	movf	_UART2_RxInterruptHandler^0,w,c
 28331  018EC4  6EFD               	movwf	tosl,c
 28332  018EC6  5002               	movf	(_UART2_RxInterruptHandler+1)^0,w,c
 28333  018EC8  6EFE               	movwf	tosh,c
 28334  018ECA  5003               	movf	(_UART2_RxInterruptHandler+2)^0,w,c
 28335  018ECC  6EFF               	movwf	tosu,c
 28336  018ECE  50FA               	movf	pclath,w,c
 28337  018ED0  0012               	return		;indir
 28338  018ED2                     __end_of_UART2_rx_vect_isr:
 28339                           	opt callstack 0
 28340                           
 28341 ;; *************** function _UART2_Receive_ISR *****************
 28342 ;; Defined at:
 28343 ;;		line 233 in file "mcc_generated_files/uart2.c"
 28344 ;; Parameters:    Size  Location     Type
 28345 ;;		None
 28346 ;; Auto vars:     Size  Location     Type
 28347 ;;		None
 28348 ;; Return value:  Size  Location     Type
 28349 ;;                  1  [STACK] void 
 28350 ;; Registers used:
 28351 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28352 ;; Tracked objects:
 28353 ;;		On entry : 0/0
 28354 ;;		On exit  : 0/0
 28355 ;;		Unchanged: 0/0
 28356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28361 ;;Total ram usage:        0 bytes
 28362 ;; Hardware stack levels used:    1
 28363 ;; This function calls:
 28364 ;;		Nothing
 28365 ;; This function is called by:
 28366 ;;		_UART2_Initialize
 28367 ;;		_UART2_rx_vect_isr
 28368 ;; This function uses a reentrant model
 28369 ;;
 28370                           
 28371                           	psect	text154
 28372  01905C                     __ptext154:
 28373                           	opt callstack 0
 28374  01905C                     _UART2_Receive_ISR:
 28375                           	opt callstack 12
 28376                           
 28377                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 28378                           
 28379                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28380                           ;incstack = 0
 28381  01905C  0E00               	movlw	low _uart2RxBuffer
 28382  01905E  241B               	addwf	_uart2RxHead^0,w,c	;volatile
 28383  019060  6ED9               	movwf	fsr2l,c
 28384  019062  6ADA               	clrf	fsr2h,c
 28385  019064  0E06               	movlw	high _uart2RxBuffer
 28386  019066  22DA               	addwfc	fsr2h,f,c
 28387  019068  006F F743 FFDF     	movff	15824,indf2	;volatile
 28388  01906E  2A1B               	incf	_uart2RxHead^0,f,c	;volatile
 28389                           
 28390                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 28391  019070  281B               	incf	_uart2RxHead^0,w,c
 28392  019072  B4D8               	btfsc	status,2,c
 28393                           
 28394                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 28395  019074  6A1B               	clrf	_uart2RxHead^0,c	;volatile
 28396                           
 28397                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 28398  019076  2A19               	incf	_uart2RxCount^0,f,c	;volatile
 28399                           
 28400                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 28401  019078  0012               	return		;funcret
 28402  01907A                     __end_of_UART2_Receive_ISR:
 28403                           	opt callstack 0
 28404                           
 28405 ;; *************** function _TMR6_ISR *****************
 28406 ;; Defined at:
 28407 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 28408 ;; Parameters:    Size  Location     Type
 28409 ;;		None
 28410 ;; Auto vars:     Size  Location     Type
 28411 ;;		None
 28412 ;; Return value:  Size  Location     Type
 28413 ;;                  1    wreg      void 
 28414 ;; Registers used:
 28415 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 28416 ;; Tracked objects:
 28417 ;;		On entry : 0/0
 28418 ;;		On exit  : 0/0
 28419 ;;		Unchanged: 0/0
 28420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28423 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28424 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28425 ;;Total ram usage:        1 bytes
 28426 ;; Hardware stack levels used:    1
 28427 ;; Hardware stack levels required when called:    2
 28428 ;; This function calls:
 28429 ;;		_TMR6_CallBack
 28430 ;; This function is called by:
 28431 ;;		Interrupt level 2
 28432 ;; This function uses a non-reentrant model
 28433 ;;
 28434                           
 28435                           	psect	text155
 28436  0190B0                     __ptext155:
 28437                           	opt callstack 0
 28438  0190B0                     _TMR6_ISR:
 28439                           	opt callstack 11
 28440                           
 28441                           ;incstack = 0
 28442  0190B0  0060  F094  F04A   	movff	btemp,??_TMR6_ISR
 28443  0190B6  EE14  F016         	lfsr	1,___inthi_sp
 28444                           
 28445                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 28446  0190BA  0139               	movlb	57	; () banked
 28447  0190BC  91A9               	bcf	169,0,b	;volatile
 28448                           
 28449                           ; BSR set to: 57
 28450                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 28451  0190BE  EC9F  F0C7         	call	_TMR6_CallBack	;wreg free
 28452  0190C2  0060  F128  F025   	movff	??_TMR6_ISR,btemp
 28453  0190C8  0011               	retfie		f
 28454  0190CA                     __end_of_TMR6_ISR:
 28455                           	opt callstack 0
 28456                           
 28457 ;; *************** function _TMR6_CallBack *****************
 28458 ;; Defined at:
 28459 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 28460 ;; Parameters:    Size  Location     Type
 28461 ;;		None
 28462 ;; Auto vars:     Size  Location     Type
 28463 ;;		None
 28464 ;; Return value:  Size  Location     Type
 28465 ;;                  1  [STACK] void 
 28466 ;; Registers used:
 28467 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 28468 ;; Tracked objects:
 28469 ;;		On entry : 3F/39
 28470 ;;		On exit  : 0/0
 28471 ;;		Unchanged: 0/0
 28472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28477 ;;Total ram usage:        0 bytes
 28478 ;; Hardware stack levels used:    1
 28479 ;; Hardware stack levels required when called:    1
 28480 ;; This function calls:
 28481 ;;		Absolute function
 28482 ;;		_TMR6_DefaultInterruptHandler
 28483 ;; This function is called by:
 28484 ;;		_TMR6_ISR
 28485 ;; This function uses a reentrant model
 28486 ;;
 28487                           
 28488                           	psect	text156
 28489  018F3E                     __ptext156:
 28490                           	opt callstack 0
 28491  018F3E                     _TMR6_CallBack:
 28492                           	opt callstack 11
 28493                           
 28494                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 28495                           
 28496                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28497                           ;incstack = 0
 28498  018F3E  0100               	movlb	0	; () banked
 28499  018F40  51AF               	movf	_TMR6_InterruptHandler& (0+255),w,b
 28500  018F42  11B0               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 28501  018F44  11B1               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 28502  018F46  B4D8               	btfsc	status,2,c
 28503  018F48  0012               	return	
 28504                           
 28505                           ; BSR set to: 0
 28506                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 28507  018F4A  D801               	call	u865_48
 28508  018F4C  0012               	return	
 28509  018F4E                     u865_48:
 28510  018F4E  0005               	push	
 28511  018F50  6EFA               	movwf	pclath,c
 28512  018F52  51AF               	movf	_TMR6_InterruptHandler& (0+255),w,b
 28513  018F54  6EFD               	movwf	tosl,c
 28514  018F56  51B0               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 28515  018F58  6EFE               	movwf	tosh,c
 28516  018F5A  51B1               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 28517  018F5C  6EFF               	movwf	tosu,c
 28518  018F5E  50FA               	movf	pclath,w,c
 28519  018F60  0012               	return		;indir
 28520  018F62                     __end_of_TMR6_CallBack:
 28521                           	opt callstack 0
 28522                           
 28523 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 28524 ;; Defined at:
 28525 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 28526 ;; Parameters:    Size  Location     Type
 28527 ;;		None
 28528 ;; Auto vars:     Size  Location     Type
 28529 ;;  i               1  [STACK] unsigned char 
 28530 ;; Return value:  Size  Location     Type
 28531 ;;                  1  [STACK] void 
 28532 ;; Registers used:
 28533 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 28534 ;; Tracked objects:
 28535 ;;		On entry : 3F/0
 28536 ;;		On exit  : 0/0
 28537 ;;		Unchanged: 0/0
 28538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28543 ;;Total ram usage:        0 bytes
 28544 ;; Hardware stack levels used:    1
 28545 ;; This function calls:
 28546 ;;		Nothing
 28547 ;; This function is called by:
 28548 ;;		_TMR6_Initialize
 28549 ;;		_TMR6_CallBack
 28550 ;; This function uses a reentrant model
 28551 ;;
 28552                           
 28553                           	psect	text157
 28554  0184EA                     __ptext157:
 28555                           	opt callstack 0
 28556  0184EA                     _TMR6_DefaultInterruptHandler:
 28557                           	opt callstack 0
 28558                           
 28559                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28560  0184EA  52E6               	movf	postinc1,f,c
 28561                           
 28562                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 28563                           ;stkvar	_i @ sp[(-1)+0]
 28564                           
 28565                           ;incstack = 0
 28566  0184EC  0EFF               	movlw	-1
 28567  0184EE  6AE3               	clrf	plusw1,c
 28568  0184F0                     l8914:
 28569                           
 28570                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 28571                           ;stkvar	_i @ sp[(-1)+0]
 28572  0184F0  0EFF               	movlw	-1
 28573  0184F2  50E3               	movf	plusw1,w,c
 28574  0184F4  0D02               	mullw	2
 28575  0184F6  0EB1               	movlw	low _tickCount
 28576  0184F8  24F3               	addwf	243,w,c
 28577  0184FA  6ED9               	movwf	fsr2l,c
 28578  0184FC  0E01               	movlw	high _tickCount
 28579  0184FE  20F4               	addwfc	prodh,w,c
 28580  018500  6EDA               	movwf	fsr2h,c
 28581  018502  50DE               	movf	postinc2,w,c
 28582  018504  10DE               	iorwf	postinc2,w,c
 28583  018506  B4D8               	btfsc	status,2,c
 28584  018508  D00C               	goto	l8918
 28585                           
 28586                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 28587                           ;stkvar	_i @ sp[(-1)+0]
 28588  01850A  0EFF               	movlw	-1
 28589  01850C  50E3               	movf	plusw1,w,c
 28590  01850E  0D02               	mullw	2
 28591  018510  0EB1               	movlw	low _tickCount
 28592  018512  24F3               	addwf	243,w,c
 28593  018514  6ED9               	movwf	fsr2l,c
 28594  018516  0E01               	movlw	high _tickCount
 28595  018518  20F4               	addwfc	prodh,w,c
 28596  01851A  6EDA               	movwf	fsr2h,c
 28597  01851C  06DE               	decf	postinc2,f,c
 28598  01851E  0E00               	movlw	0
 28599  018520  5ADD               	subwfb	postdec2,f,c
 28600  018522                     l8918:
 28601                           
 28602                           ;mcc_generated_files/tmr6.c: 207:  }
 28603                           ;stkvar	_i @ sp[(-1)+0]
 28604  018522  0EFF               	movlw	-1
 28605  018524  2AE3               	incf	plusw1,f,c
 28606                           
 28607                           ;stkvar	_i @ sp[(-1)+0]
 28608  018526  0EFF               	movlw	-1
 28609  018528  006F FF8C  F025    	movff	plusw1,btemp
 28610  01852E  0E0B               	movlw	11
 28611  018530  6425               	cpfsgt	btemp^0,c
 28612  018532  D7DE               	goto	l8914
 28613                           
 28614                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 28615  018534  52E5               	movf	postdec1,f,c
 28616  018536  0012               	return		;funcret
 28617  018538                     __end_of_TMR6_DefaultInterruptHandler:
 28618                           	opt callstack 0
 28619                           
 28620 ;; *************** function _DMA1_DMASCNT_ISR *****************
 28621 ;; Defined at:
 28622 ;;		line 126 in file "mcc_generated_files/dma1.c"
 28623 ;; Parameters:    Size  Location     Type
 28624 ;;		None
 28625 ;; Auto vars:     Size  Location     Type
 28626 ;;		None
 28627 ;; Return value:  Size  Location     Type
 28628 ;;                  1    wreg      void 
 28629 ;; Registers used:
 28630 ;;		None
 28631 ;; Tracked objects:
 28632 ;;		On entry : 0/0
 28633 ;;		On exit  : 3F/0
 28634 ;;		Unchanged: 0/0
 28635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28640 ;;Total ram usage:        0 bytes
 28641 ;; Hardware stack levels used:    1
 28642 ;; This function calls:
 28643 ;;		Nothing
 28644 ;; This function is called by:
 28645 ;;		Interrupt level 2
 28646 ;; This function uses a non-reentrant model
 28647 ;;
 28648                           
 28649                           	psect	text158
 28650  0191B0                     __ptext158:
 28651                           	opt callstack 0
 28652  0191B0                     _DMA1_DMASCNT_ISR:
 28653                           	opt callstack 13
 28654                           
 28655                           ;incstack = 0
 28656  0191B0  EE14  F016         	lfsr	1,___inthi_sp
 28657                           
 28658                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 28659  0191B4  0139               	movlb	57	; () banked
 28660  0191B6  91A2               	bcf	162,0,b	;volatile
 28661                           
 28662                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 28663  0191B8  0100               	movlb	0	; () banked
 28664  0191BA  9789               	bcf	_spi_link& (0+255),3,b	;volatile
 28665                           
 28666                           ; BSR set to: 0
 28667  0191BC  0011               	retfie		f
 28668  0191BE                     __end_of_DMA1_DMASCNT_ISR:
 28669                           	opt callstack 0
 28670                           
 28671 ;; *************** function _DMA1_DMADCNT_ISR *****************
 28672 ;; Defined at:
 28673 ;;		line 134 in file "mcc_generated_files/dma1.c"
 28674 ;; Parameters:    Size  Location     Type
 28675 ;;		None
 28676 ;; Auto vars:     Size  Location     Type
 28677 ;;		None
 28678 ;; Return value:  Size  Location     Type
 28679 ;;                  1    wreg      void 
 28680 ;; Registers used:
 28681 ;;		None
 28682 ;; Tracked objects:
 28683 ;;		On entry : 0/0
 28684 ;;		On exit  : 3F/39
 28685 ;;		Unchanged: 0/0
 28686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28691 ;;Total ram usage:        0 bytes
 28692 ;; Hardware stack levels used:    1
 28693 ;; This function calls:
 28694 ;;		Nothing
 28695 ;; This function is called by:
 28696 ;;		Interrupt level 2
 28697 ;; This function uses a non-reentrant model
 28698 ;;
 28699                           
 28700                           	psect	text159
 28701  0191C8                     __ptext159:
 28702                           	opt callstack 0
 28703  0191C8                     _DMA1_DMADCNT_ISR:
 28704                           	opt callstack 13
 28705                           
 28706                           ; BSR set to: 0
 28707                           ;incstack = 0
 28708  0191C8  EE14  F016         	lfsr	1,___inthi_sp
 28709                           
 28710                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 28711  0191CC  0139               	movlb	57	; () banked
 28712  0191CE  93A2               	bcf	162,1,b	;volatile
 28713                           
 28714                           ; BSR set to: 57
 28715  0191D0  0011               	retfie		f
 28716  0191D2                     __end_of_DMA1_DMADCNT_ISR:
 28717                           	opt callstack 0
 28718                           
 28719 ;; *************** function _DMA1_DMAA_ISR *****************
 28720 ;; Defined at:
 28721 ;;		line 144 in file "mcc_generated_files/dma1.c"
 28722 ;; Parameters:    Size  Location     Type
 28723 ;;		None
 28724 ;; Auto vars:     Size  Location     Type
 28725 ;;		None
 28726 ;; Return value:  Size  Location     Type
 28727 ;;                  1    wreg      void 
 28728 ;; Registers used:
 28729 ;;		None
 28730 ;; Tracked objects:
 28731 ;;		On entry : 0/0
 28732 ;;		On exit  : 3F/39
 28733 ;;		Unchanged: 0/0
 28734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28739 ;;Total ram usage:        0 bytes
 28740 ;; Hardware stack levels used:    1
 28741 ;; This function calls:
 28742 ;;		Nothing
 28743 ;; This function is called by:
 28744 ;;		Interrupt level 2
 28745 ;; This function uses a non-reentrant model
 28746 ;;
 28747                           
 28748                           	psect	text160
 28749  0191D4                     __ptext160:
 28750                           	opt callstack 0
 28751  0191D4                     _DMA1_DMAA_ISR:
 28752                           	opt callstack 13
 28753                           
 28754                           ; BSR set to: 57
 28755                           ;incstack = 0
 28756  0191D4  EE14  F016         	lfsr	1,___inthi_sp
 28757                           
 28758                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 28759  0191D8  0139               	movlb	57	; () banked
 28760  0191DA  97A2               	bcf	162,3,b	;volatile
 28761                           
 28762                           ; BSR set to: 57
 28763  0191DC  0011               	retfie		f
 28764  0191DE                     __end_of_DMA1_DMAA_ISR:
 28765                           	opt callstack 0
 28766                           
 28767 ;; *************** function _DMA1_DMAOR_ISR *****************
 28768 ;; Defined at:
 28769 ;;		line 155 in file "mcc_generated_files/dma1.c"
 28770 ;; Parameters:    Size  Location     Type
 28771 ;;		None
 28772 ;; Auto vars:     Size  Location     Type
 28773 ;;		None
 28774 ;; Return value:  Size  Location     Type
 28775 ;;                  1    wreg      void 
 28776 ;; Registers used:
 28777 ;;		None
 28778 ;; Tracked objects:
 28779 ;;		On entry : 0/0
 28780 ;;		On exit  : 3F/39
 28781 ;;		Unchanged: 0/0
 28782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28787 ;;Total ram usage:        0 bytes
 28788 ;; Hardware stack levels used:    1
 28789 ;; This function calls:
 28790 ;;		Nothing
 28791 ;; This function is called by:
 28792 ;;		Interrupt level 2
 28793 ;; This function uses a non-reentrant model
 28794 ;;
 28795                           
 28796                           	psect	text161
 28797  0191E0                     __ptext161:
 28798                           	opt callstack 0
 28799  0191E0                     _DMA1_DMAOR_ISR:
 28800                           	opt callstack 13
 28801                           
 28802                           ; BSR set to: 57
 28803                           ;incstack = 0
 28804  0191E0  EE14  F016         	lfsr	1,___inthi_sp
 28805                           
 28806                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 28807  0191E4  0139               	movlb	57	; () banked
 28808  0191E6  95A2               	bcf	162,2,b	;volatile
 28809                           
 28810                           ; BSR set to: 57
 28811  0191E8  0011               	retfie		f
 28812  0191EA                     __end_of_DMA1_DMAOR_ISR:
 28813                           	opt callstack 0
 28814                           
 28815                           ;
 28816                           ; Interrupt Vector Table @ 0x8
 28817                           ;
 28818                           
 28819                           	psect	ivt0x8
 28820  000008                     __pivt0x8:
 28821                           	opt callstack 0
 28822  000008                     ivt0x8_base:
 28823                           	opt callstack 0
 28824                           
 28825                           ; Vector 0 : SWINT
 28826  000008  648C               	dw	_Default_ISR shr (0+2)
 28827                           
 28828                           ; Vector 1 : HLVD
 28829  00000A  648C               	dw	_Default_ISR shr (0+2)
 28830                           
 28831                           ; Vector 2 : OSF
 28832  00000C  648C               	dw	_Default_ISR shr (0+2)
 28833                           
 28834                           ; Vector 3 : CSW
 28835  00000E  648C               	dw	_Default_ISR shr (0+2)
 28836                           
 28837                           ; Vector 4 : NVM
 28838  000010  648C               	dw	_Default_ISR shr (0+2)
 28839                           
 28840                           ; Vector 5 : SCAN
 28841  000012  648C               	dw	_Default_ISR shr (0+2)
 28842                           
 28843                           ; Vector 6 : CRC
 28844  000014  648C               	dw	_Default_ISR shr (0+2)
 28845                           
 28846                           ; Vector 7 : IOC
 28847  000016  648C               	dw	_Default_ISR shr (0+2)
 28848                           
 28849                           ; Vector 8 : INT0
 28850  000018  6468               	dw	_INT0_ISR shr (0+2)
 28851                           
 28852                           ; Vector 9 : ZCD
 28853  00001A  648C               	dw	_Default_ISR shr (0+2)
 28854                           
 28855                           ; Vector 10 : AD
 28856  00001C  62B7               	dw	_ADCC_ISR shr (0+2)
 28857                           
 28858                           ; Vector 11 : ADT
 28859  00001E  601F               	dw	_ADCC_ThresholdISR shr (0+2)
 28860                           
 28861                           ; Vector 12 : CMP1
 28862  000020  648C               	dw	_Default_ISR shr (0+2)
 28863                           
 28864                           ; Vector 13 : SMT1
 28865  000022  648C               	dw	_Default_ISR shr (0+2)
 28866                           
 28867                           ; Vector 14 : SMT1PRA
 28868  000024  648C               	dw	_Default_ISR shr (0+2)
 28869                           
 28870                           ; Vector 15 : SMT1PRW
 28871  000026  648C               	dw	_Default_ISR shr (0+2)
 28872                           
 28873                           ; Vector 16 : DMA1SCNT
 28874  000028  646C               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 28875                           
 28876                           ; Vector 17 : DMA1DCNT
 28877  00002A  6472               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 28878                           
 28879                           ; Vector 18 : DMA1OR
 28880  00002C  6478               	dw	_DMA1_DMAOR_ISR shr (0+2)
 28881                           
 28882                           ; Vector 19 : DMA1A
 28883  00002E  6475               	dw	_DMA1_DMAA_ISR shr (0+2)
 28884                           
 28885                           ; Vector 20 : SPI1RX
 28886  000030  648C               	dw	_Default_ISR shr (0+2)
 28887                           
 28888                           ; Vector 21 : SPI1TX
 28889  000032  648C               	dw	_Default_ISR shr (0+2)
 28890                           
 28891                           ; Vector 22 : SPI1
 28892  000034  648C               	dw	_Default_ISR shr (0+2)
 28893                           
 28894                           ; Vector 23 : I2C1RX
 28895  000036  648C               	dw	_Default_ISR shr (0+2)
 28896                           
 28897                           ; Vector 24 : I2C1TX
 28898  000038  648C               	dw	_Default_ISR shr (0+2)
 28899                           
 28900                           ; Vector 25 : I2C1
 28901  00003A  648C               	dw	_Default_ISR shr (0+2)
 28902                           
 28903                           ; Vector 26 : I2C1E
 28904  00003C  648C               	dw	_Default_ISR shr (0+2)
 28905                           
 28906                           ; Vector 27 : U1RX
 28907  00003E  6397               	dw	_UART1_rx_vect_isr shr (0+2)
 28908                           
 28909                           ; Vector 28 : U1TX
 28910  000040  638D               	dw	_UART1_tx_vect_isr shr (0+2)
 28911                           
 28912                           ; Vector 29 : U1E
 28913  000042  648C               	dw	_Default_ISR shr (0+2)
 28914                           
 28915                           ; Vector 30 : U1
 28916  000044  648C               	dw	_Default_ISR shr (0+2)
 28917                           
 28918                           ; Vector 31 : TMR0
 28919  000046  648C               	dw	_Default_ISR shr (0+2)
 28920                           
 28921                           ; Vector 32 : TMR1
 28922  000048  648C               	dw	_Default_ISR shr (0+2)
 28923                           
 28924                           ; Vector 33 : TMR1G
 28925  00004A  648C               	dw	_Default_ISR shr (0+2)
 28926                           
 28927                           ; Vector 34 : TMR2
 28928  00004C  648C               	dw	_Default_ISR shr (0+2)
 28929                           
 28930                           ; Vector 35 : CCP1
 28931  00004E  648C               	dw	_Default_ISR shr (0+2)
 28932                           
 28933                           ; Vector 36 : Undefined
 28934  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 28935                           
 28936                           ; Vector 37 : NCO1
 28937  000052  648C               	dw	_Default_ISR shr (0+2)
 28938                           
 28939                           ; Vector 38 : CWG1
 28940  000054  648C               	dw	_Default_ISR shr (0+2)
 28941                           
 28942                           ; Vector 39 : CLC1
 28943  000056  648C               	dw	_Default_ISR shr (0+2)
 28944                           
 28945                           ; Vector 40 : INT1
 28946  000058  621A               	dw	_INT1_ISR shr (0+2)
 28947                           
 28948                           ; Vector 41 : CMP2
 28949  00005A  648C               	dw	_Default_ISR shr (0+2)
 28950                           
 28951                           ; Vector 42 : DMA2SCNT
 28952  00005C  648C               	dw	_Default_ISR shr (0+2)
 28953                           
 28954                           ; Vector 43 : DMA2DCNT
 28955  00005E  648C               	dw	_Default_ISR shr (0+2)
 28956                           
 28957                           ; Vector 44 : DMA2OR
 28958  000060  648C               	dw	_Default_ISR shr (0+2)
 28959                           
 28960                           ; Vector 45 : DMA2A
 28961  000062  648C               	dw	_Default_ISR shr (0+2)
 28962                           
 28963                           ; Vector 46 : I2C2RX
 28964  000064  648C               	dw	_Default_ISR shr (0+2)
 28965                           
 28966                           ; Vector 47 : I2C2TX
 28967  000066  648C               	dw	_Default_ISR shr (0+2)
 28968                           
 28969                           ; Vector 48 : I2C2
 28970  000068  648C               	dw	_Default_ISR shr (0+2)
 28971                           
 28972                           ; Vector 49 : I2C2E
 28973  00006A  648C               	dw	_Default_ISR shr (0+2)
 28974                           
 28975                           ; Vector 50 : U2RX
 28976  00006C  63AB               	dw	_UART2_rx_vect_isr shr (0+2)
 28977                           
 28978                           ; Vector 51 : U2TX
 28979  00006E  63A1               	dw	_UART2_tx_vect_isr shr (0+2)
 28980                           
 28981                           ; Vector 52 : U2E
 28982  000070  648C               	dw	_Default_ISR shr (0+2)
 28983                           
 28984                           ; Vector 53 : U2
 28985  000072  648C               	dw	_Default_ISR shr (0+2)
 28986                           
 28987                           ; Vector 54 : TMR3
 28988  000074  5D1B               	dw	_TMR3_ISR shr (0+2)
 28989                           
 28990                           ; Vector 55 : TMR3G
 28991  000076  648C               	dw	_Default_ISR shr (0+2)
 28992                           
 28993                           ; Vector 56 : TMR4
 28994  000078  648C               	dw	_Default_ISR shr (0+2)
 28995                           
 28996                           ; Vector 57 : CCP2
 28997  00007A  648C               	dw	_Default_ISR shr (0+2)
 28998                           
 28999                           ; Vector 58 : Undefined
 29000  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 29001                           
 29002                           ; Vector 59 : CWG2
 29003  00007E  648C               	dw	_Default_ISR shr (0+2)
 29004                           
 29005                           ; Vector 60 : CLC2
 29006  000080  648C               	dw	_Default_ISR shr (0+2)
 29007                           
 29008                           ; Vector 61 : INT2
 29009  000082  648C               	dw	_Default_ISR shr (0+2)
 29010                           
 29011                           ; Vector 62 : Undefined
 29012  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 29013                           
 29014                           ; Vector 63 : Undefined
 29015  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 29016                           
 29017                           ; Vector 64 : Undefined
 29018  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 29019                           
 29020                           ; Vector 65 : Undefined
 29021  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 29022                           
 29023                           ; Vector 66 : Undefined
 29024  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 29025                           
 29026                           ; Vector 67 : Undefined
 29027  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 29028                           
 29029                           ; Vector 68 : Undefined
 29030  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 29031                           
 29032                           ; Vector 69 : Undefined
 29033  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 29034                           
 29035                           ; Vector 70 : TMR5
 29036  000094  60FB               	dw	_TMR5_ISR shr (0+2)
 29037                           
 29038                           ; Vector 71 : TMR5G
 29039  000096  648C               	dw	_Default_ISR shr (0+2)
 29040                           
 29041                           ; Vector 72 : TMR6
 29042  000098  642C               	dw	_TMR6_ISR shr (0+2)
 29043                           
 29044                           ; Vector 73 : CCP3
 29045  00009A  648C               	dw	_Default_ISR shr (0+2)
 29046                           
 29047                           ; Vector 74 : CWG3
 29048  00009C  648C               	dw	_Default_ISR shr (0+2)
 29049                           
 29050                           ; Vector 75 : CLC3
 29051  00009E  648C               	dw	_Default_ISR shr (0+2)
 29052                           
 29053                           ; Vector 76 : Undefined
 29054  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 29055                           
 29056                           ; Vector 77 : Undefined
 29057  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 29058                           
 29059                           ; Vector 78 : Undefined
 29060  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 29061                           
 29062                           ; Vector 79 : Undefined
 29063  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 29064                           
 29065                           ; Vector 80 : CCP4
 29066  0000A8  648C               	dw	_Default_ISR shr (0+2)
 29067                           
 29068                           ; Vector 81 : CLC4
 29069  0000AA  648C               	dw	_Default_ISR shr (0+2)
 29070  0000AC                     ivt0x8_undefint:
 29071                           	opt callstack 0
 29072  0000AC  00FF               	reset	
 29073                           
 29074                           	psect	text162
 29075  000000                     __ptext162:
 29076                           	opt callstack 0
 29077                           
 29078                           	psect	rparam
 29079  0000                     
 29080                           	psect	temp
 29081  000025                     btemp:
 29082                           	opt callstack 0
 29083  000025                     	ds	32
 29084  0000                     wtemp0	set	btemp
 29085  0000                     wtemp1	set	btemp+2
 29086  0000                     wtemp2	set	btemp+4
 29087  0000                     wtemp3	set	btemp+6
 29088  0000                     wtemp4	set	btemp+8
 29089  0000                     wtemp5	set	btemp+10
 29090  0000                     wtemp8	set	btemp+1
 29091  0000                     ttemp0	set	btemp
 29092  0000                     ttemp1	set	btemp+3
 29093  0000                     ttemp2	set	btemp+6
 29094  0000                     ttemp3	set	btemp+9
 29095  0000                     ttemp5	set	btemp+1
 29096  0000                     ttemp6	set	btemp+4
 29097  0000                     ttemp7	set	btemp+8
 29098  0000                     ltemp0	set	btemp
 29099  0000                     ltemp1	set	btemp+4
 29100  0000                     ltemp2	set	btemp+8
 29101  0000                     lltemp0	set	btemp
 29102  0000                     lltemp1	set	btemp+8
 29103  0000                     lltemp2	set	btemp+16
 29104  0000                     lltemp3	set	btemp+24
 29105                           tosu	equ	0x3FFF
 29106                           tosh	equ	0x3FFE
 29107                           tosl	equ	0x3FFD
 29108                           stkptr	equ	0x3FFC
 29109                           pclatu	equ	0x3FFB
 29110                           pclath	equ	0x3FFA
 29111                           pcl	equ	0x3FF9
 29112                           tblptru	equ	0x3FF8
 29113                           tblptrh	equ	0x3FF7
 29114                           tblptrl	equ	0x3FF6
 29115                           tablat	equ	0x3FF5
 29116                           prodh	equ	0x3FF4
 29117                           prodl	equ	0x3FF3
 29118                           indf0	equ	0x3FEF
 29119                           postinc0	equ	0x3FEE
 29120                           postdec0	equ	0x3FED
 29121                           preinc0	equ	0x3FEC
 29122                           plusw0	equ	0x3FEB
 29123                           fsr0h	equ	0x3FEA
 29124                           fsr0l	equ	0x3FE9
 29125                           wreg	equ	0x3FE8
 29126                           indf1	equ	0x3FE7
 29127                           postinc1	equ	0x3FE6
 29128                           postdec1	equ	0x3FE5
 29129                           preinc1	equ	0x3FE4
 29130                           plusw1	equ	0x3FE3
 29131                           fsr1h	equ	0x3FE2
 29132                           fsr1l	equ	0x3FE1
 29133                           bsr	equ	0x3FE0
 29134                           indf2	equ	0x3FDF
 29135                           postinc2	equ	0x3FDE
 29136                           postdec2	equ	0x3FDD
 29137                           preinc2	equ	0x3FDC
 29138                           plusw2	equ	0x3FDB
 29139                           fsr2h	equ	0x3FDA
 29140                           fsr2l	equ	0x3FD9
 29141                           status	equ	0x3FD8


Data Sizes:
    Strings     445
    Constant    144
    Data        419
    BSS         1393
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     14      50
    BANK0           160      0     153
    BANK1           256     13     222
    BANK2           256      0     252
    BANK3           256      0     228
    BANK4           256      0     134
    BANK5           256      0     255
    BANK6           256      0     255
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_45(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_56(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_56(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    s	PTR const unsigned char  size(2) Largest target is 290
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> STR_28(CODE[9]), STR_27(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), 
		 -> T(CODE[144]), STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[188]), 

    a	PTR const unsigned char  size(2) Largest target is 290
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> STR_28(CODE[9]), STR_27(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), 
		 -> T(CODE[144]), STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[188]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_51(CODE[4]), STR_50(CODE[4]), STR_47(CODE[4]), STR_46(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_51(CODE[4]), STR_50(CODE[4]), STR_47(CODE[4]), STR_46(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_23(CODE[17]), STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), 
		 -> STR_19(CODE[19]), STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), 
		 -> STR_11(CODE[17]), STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S5574_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 290
		 -> D(BIGRAM[290]), V(BANK2[188]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 290
		 -> D(BIGRAM[290]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[17]), 
		 -> STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), STR_19(CODE[19]), 
		 -> STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[17]), 
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[17]), 
		 -> STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), STR_19(CODE[19]), 
		 -> STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[17]), 
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[17]), 
		 -> STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), STR_19(CODE[19]), 
		 -> STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[17]), 
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_28(CODE[9]), STR_27(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_7(CODE[6]), 
		 -> STR_3(CODE[6]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_28(CODE[9]), STR_27(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_7(CODE[6]), 
		 -> STR_3(CODE[6]), V(BANK2[188]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_28(CODE[9]), 
		 -> STR_27(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), 
		 -> STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    S4306tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_28(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_27(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1934spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    S1934spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  309323
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                    _calc_model_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                   _convert_adc_data
                _eaDogM_WriteCommand
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (20) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (20) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      31
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     474
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   27976
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (1) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  166948
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   83221
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    10     12   26923
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   56386
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   56122
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   27945
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   28084
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   26698
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   26569
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           45    39      6   26237
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             10     4      6     225
 ---------------------------------------------------------------------------------
 (7) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               8     4      4     137
 ---------------------------------------------------------------------------------
 (8) _floorf                                              14    10      4     338
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       10     6      4     135
 ---------------------------------------------------------------------------------
 (8) ___fltol                                              6     2      4     229
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4      45
 ---------------------------------------------------------------------------------
 (8) ___flge                                               8     0      8     182
 ---------------------------------------------------------------------------------
 (8) ___fleq                                               8     0      8      90
 ---------------------------------------------------------------------------------
 (17) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     296
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     300
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (7) _atoi                                                11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              3     1      2      68
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (17) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     265
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                             10 COMRAM     4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           13    13      0    3121
                                              0 BANK1     13    13      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      60
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0    3061
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           0     0      0    3061
                            ___fladd
                            ___fldiv
 ---------------------------------------------------------------------------------
 (17) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (17) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (19) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (20) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (19) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (19) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (20) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (20) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (19) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (19) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (19) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (19) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (19) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (20) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       ___fladd
       ___fldiv
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     122      69        3.5%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      86      13       52.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      E4      11       89.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FC       9       98.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      D      DE       7       86.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      99       5       95.6%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      E      32       1       79.4%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     60D      58        0.0%
DATA                 0      0     72F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Dec  5 02:01:10 2019

                     _SPI1_Exchange8bit 8FC6                __end_of_set_display_info 903E  
                                     _C 0100                                       _D 06FF  
                                     _H 00F2                                       _P 00A5  
                                     _R 00C3                                       _S 0060  
                                     _T FDB1                                       _V 0200  
      __end_of_TMR5_SetInterruptHandler 8D42            __end_of_start_switch_handler 8FC6  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                __end_of_FVR_Initialize 9212                             __CFG_LVP$ON 000000  
                                   l173 9136                                     l703 8B5A  
                                   l583 8B2E                                     l837 8FD4  
                                   _GIE 01FE97                                     _abs 85CA  
                                   _pad 6D82                 __size_of_PMD_Initialize 0014  
                       _TMR2_Initialize 90E2                                     prod 003FF3  
                                   tosl 003FFD                                     wreg 003FE8  
                         _INT0_CallBack 8F84                      _UART1_Transmit_ISR 8B08  
                         __CFG_BBEN$OFF 000000                           _INT1_CallBack 8F62  
                          __CFG_ZCD$OFF 000000                                    l1030 8822  
                                  l1218 8862                                    l2035 123A  
                                  l2117 5272                                    l2064 066A  
                                  l2138 44E0                                    l1346 1F98  
                                  l1338 1DE0                                    l3043 614E  
                                  l1363 25D4                         _timer3ReloadVal 0012  
                                  l1444 8342                                    l1356 2036  
                                  l1348 1F9E                                    l2510 6616  
                                  l1358 20FC                                    l2079 0B1A  
                                  l3071 7E9C                                    l1359 220A  
                                  l3058 7F20                                    l1660 88C2  
                                  l1580 7972                                    l2188 1D78  
                                  l1717 903A                                    l1670 5D88  
                                  l1902 71AE                                    l1808 630E  
                                  l2472 75F4                                    l1584 7BE4  
                                  l2483 6778                                    l2476 66A4  
                                  l1677 6FA2                                    l1669 5C2C  
                                  l1765 4016                                    l2750 35EC  
                                  l2902 860A                    _ADCC_StartConversion 9150  
                                  l2831 2E30                                    l1599 892C  
                                  l2762 347C                                    l2933 5930  
                                  l1893 7D0A                                    l7006 68B6  
                                  l7022 6C9C                                    l2871 5F86  
                                  l7120 6582                                    l7104 6500  
                                  l7026 6CB4                                    l7018 6C8A  
                                  l7130 65C4                                    l7122 659E  
                                  l1979 6DDE                                    l2795 3B66  
                                  l7044 6D68                                    l7036 6D34  
                                  l7060 75F2                                    l7052 757C  
                                  l2894 64A4                                    l1999 40FA  
                                  l7056 75BE                                    l7128 65AE  
                                  l8202 31F8                                    l8122 2ED0  
                                  l7074 66F2                                    l8204 320A  
                                  l8212 3244                                    l8140 2F80  
                                  l8116 2E90                                    l7148 84DA  
                                  l7068 6662                                    l2997 6C60  
                                  l8302 3548                                    l8230 32E0  
                                  l8150 2FD6                                    l8134 2F4E  
                                  l8126 2EE6                                    l7086 6776  
                                  l7078 6740                                    l7094 85A0  
                                  l6630 6442                                    l8312 3574  
                                  l8232 32F2                                    l8240 332E  
                                  l8208 3214                                    l8152 3006  
                                  l8128 2F16                                    l9016 88D8  
                                  l6616 85FA                                    l6640 649C  
                                  l6810 2666                                    l8146 2FC0  
                                  l6730 54A8                                    l6634 6446  
                                  l6714 7E8C                                    l8066 8936  
                                  l9106 3FF6                                    l9140 690E  
                                  l9132 68E4                                    l6820 26DC  
                                  l8324 35CC                                    l8316 358C  
                                  l8252 3406                                    l8236 32FC  
                                  l8500 5E50                                    l9052 3B72  
                                  l9134 68F4                                    l8318 359C  
                                  l8270 349E                                    l8262 3460  
                                  l8254 342C                                    l8158 3028  
                                  l6566 7A46                                    l6742 5542  
                                  l8422 39A0                                    l8414 396E  
                                  l8406 3908                                    l8342 368C  
                                  l8510 5EB2                                    l8502 5E66  
                                  l9240 8B2A                                    l9160 69E0  
                                  l9152 6972                                    l9136 68FA  
                                  l9144 6916                                    l6904 2C40  
                                  l6816 26A6                                    l8272 34B0  
                                  l6568 7A68                                    l6736 54FC  
                                  l8432 39E2                                    l8408 391A  
                                  l8416 3972                                    l8336 364C  
                                  l6672 4974                                    l8512 5ED0  
                                  l8504 5E84                                    l9080 3DCC  
                                  l9072 3D9A                                    l8096 8C14  
                                  l5866 884A                                    l9138 6900  
                                  l9146 6942                                    l6922 2CB6  
                                  l6834 2774                                    l6818 26AC  
                                  l8290 34EA                                    l6754 5614  
                                  l8442 3A2C                                    l8362 376A  
                                  l8346 36A2                                    l6658 7F10  
                                  l7714 6018                                    l8522 5F04  
                                  l8514 5EE6                                    l9058 3BA2  
                                  l9402 76C0                                    l6932 2D2A  
                                  l6908 2C66                                    l6836 277A  
                                  l6828 2734                                    l8276 34BC  
                                  l8188 3166                                    l8428 39BC  
                                  l8380 3828                                    l8356 372A  
                                  l8348 36D2                                    l6692 4B2A  
                                  l7716 6084                                    l8532 5F66  
                                  l9092 3F48                                    l9084 3E68  
                                  l9068 3CC0                                    l9262 8B56  
                                  l6950 2DDE                                    l6942 2D9A  
                                  l6918 2CB0                                    l6846 27CC  
                                  l6838 27AA                                    l8286 34E4  
                                  l8198 31D8                                    l7662 56E0  
                                  l6790 5ACC                                    l6782 5A20  
                                  l6774 5998                                    l8462 3AE2  
                                  l8446 3A32                                    l8374 37EE  
                                  l8366 3780                                    l6686 4A92  
                                  l9406 76FE                                    l6952 2DF8  
                                  l6936 2D70                                    l9424 517C  
                                  l7680 57BA                                    l7672 5776  
                                  l7664 5702                                    l8456 3AA6  
                                  l8368 37B0                                    l6696 4B98  
                                  l6688 4AE2                                    l9176 7CC4  
                                  l9440 7118                                    l9522 87E0  
                                  l7682 57DE                                    l8474 3B3A  
                                  l8490 5DD6                                    l9098 3FE4  
                                  l9450 7188                                    l7684 581C  
                                  l6972 67A6                                    l8476 3B4A  
                                  l8468 3B12                                    l8388 3842  
                                  l9428 70BC                                    l9534 7F6E  
                                  l7678 57A2                                    l8398 38D2  
                                  l9528 7F5E                                    l9288 880A  
                                  l7688 5884                                    l6984 67DC  
                                  l8914 84F0                                    l6898 2C24  
                                  l7698 5920                                    l6978 67BC  
                                  l8498 5E42                                    l8918 8522  
                                  l6998 6882                                    l7984 8C4A  
                                  l8970 6190                                    l8982 61D4  
                                  STR_1 FF5F                                    STR_2 FFB1  
                                  STR_3 FFDF                                    l8978 61BC  
                                  STR_4 FF4E                                    STR_5 FF70  
                                  STR_6 FFB1                                    STR_7 FFDF  
                                  STR_8 FF3D                                    STR_9 FF92  
                                  l9994 6B76                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    u5000 871C  
                                  u5010 7E4A                                    _T2PR 003FAB  
                                  u5020 7E4C                                    u5101 5502  
                                  u5110 553C                                    u5040 8AA0  
                                  u5120 556E                                    u5050 8AA2  
                                  u5210 59E8                                    u5140 564C  
                                  u5220 5A1A                                    u5070 54A2  
                                  u5230 5A4C                                    u5160 569E  
                                  u5090 54F8                                    u5250 5B04  
                                  _T6PR 003F93                                    u4700 8A40  
                                  _PMD0 0039C0                                    _PMD1 0039C1  
                                  u5430 2CA8                                    u5270 5B56  
                                  u5190 5992                                    u4710 8A42  
                                  _PMD2 0039C2                                    _PMD3 0039C3  
                                  u5360 27BA                                    u8000 3AF6  
                                  _PMD4 0039C4                                    _PMD5 0039C5  
                                  u4650 7A96                                    u5610 6CE0  
                                  _PMD6 0039C6                                    _PMD7 0039C7  
                                  u5540 6808                                    u4820 6494  
                                  u4900 4958                                    u5470 2D04  
                                  u5630 6D54                                    u4830 6496  
                                  u5375 294E                                    u4815 6476  
                                  u8120 80F4                                    u5480 2D3E  
                                  u4760 85DE                                    u5560 68A2  
                                  u4680 8A70                                    u5385 2A16  
                                  u4657 7A88                                    u5490 2D84  
                                  u5730 859C                                    u5810 65CC  
                                  u4770 63C6                                    u4690 8A72  
                                  u5475 2CF4                                    u5395 2BDE  
                                  u7500 323C                                    u8220 616E  
                                  u5740 64E0                                    u4940 4A38  
                                  u4860 7ECE                                    u4925 4992  
                                  u7510 325C                                    u5670 75EE  
                                  u5830 65F6                                    u5750 64F4  
                                  u4926 4998                                    u4870 7ED0  
                                  u7335 8756                                    u4775 63BC  
                                  u4927 49A6                                    u5840 84B6  
                                  u9200 6BE6                                    u5760 652E  
                                  u4960 4B10                                    u8080 5EFA  
                                  u8304 3BBC                                    u8145 8128  
                                  u7505 322C                                    u5745 64D6  
                                  u4945 4A2E                                    u8305 3BB6  
                                  u8146 812A                                    u8138 80F6  
                                  u7610 344E                                    u7450 318C  
                                  u5850 84D6                                    u4890 490C  
                                  u7460 31AC                                    u9300 404C  
                                  u8324 3BDE                                    u7461 31A6  
                                  u5765 6524                                    u4965 4B06  
                                  u8325 3BD8                                    u7710 3538  
                                  u9310 404E                                    u4990 871A  
                                  u8510 7CB0                                    u4895 4902  
                                  u9400 43BE                                    u8344 3DB4  
                                  u9401 43BC                                    u8345 3DAE  
                                  u7650 34C2                                    u7570 3324  
                                  u6850 5772                                    u9410 43D2  
                                  u9330 40BE                                    u7715 3528  
                                  u7740 3558                                    u9180 6B6A  
                                  u9420 43D6                                    u7900 399A  
                                  u9260 745A                                    u8364 3E82  
                                  u8284 3B8C                                    u8540 7CF6  
                                  u8365 3E7C                                    u8285 3B86  
                                  u7670 34DC                                    u7478 31AE  
                                  u6870 58CA                                    u9350 40D0  
                                  u9510 0194                                    u6950 6110  
                                  u8390 3EAC                                    u7575 3314  
                                  u6880 58CC                                    u9440 43EC  
                                  u9600 050E                                    u9520 0196  
                                  u8384 3EA4                                    u8528 7CB2  
                                  u8385 3E9E                                    u9370 4120  
                                  u9267 744C                                    u9380 4378  
                                  u7940 3A24                                    u9700 0648  
                                  u9630 0562                                    u9550 02A6  
                                  u8558 7CF8                                    u9391 43A8  
                                  u9560 02A8                                    u9480 00DA  
                                  _PLLR 01CEE0                                    u7980 3A80  
                                  u9660 05C6                                    u7990 3ABA  
                                  u7985 3A70                                    u9930 10B8  
                                  u9770 0A18                                    u9950 116E  
                                  u9870 0EE4                                    u9960 1170  
                                  _WPUA 003A41                                    _WPUB 003A51  
                                  _WPUC 003A61                                    _WPUD 003A71  
                                  _WPUE 003A81                                    _WPUF 003A91  
                      __end_of_ADCC_ISR 8B08                           __CFG_FCMEN$ON 000000  
                                  _dbuf 0394                                    _atoi 56C6  
                                  _ctoa 7D9A                                    _main 1D82  
                                  _dtoa 401C                                    _nanf 8216  
                                  _seed 01C9                                    _prec 000C  
                                  _nout 00C1                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 5188                                    btemp 0025  
                                  _xtoa 449C                  __end_of_check_adc_scan 920A  
                         ___fpclassifyf 6318                                    prodh 003FF4  
                                  prodl 003FF3                                    start 00AE  
                       _timer5ReloadVal 0016               __end_of_SPI1_Exchange8bit 8FE4  
             __size_of_clear_hid_pflags 0024                         _TMR3_Initialize 869C  
                         __CFG_CSWEN$ON 000000                       _UART1_rx_vect_isr 8E5C  
                          ___param_bank 000000                      ?_UART1_rx_vect_isr 0045  
                      __end_of_INT0_ISR 91AE                        __end_of_INT1_ISR 88A6  
        __size_of_OSCILLATOR_Initialize 0016                __end_of_ringBufS_put_dma 797A  
         __end_of_OSCILLATOR_Initialize 913C                                   l10010 7B10  
                                 l10020 6DD6                                   l10006 7AD2  
                                 l10030 6E6E                                   l10022 6DE8  
                                 l10110 4416                                   l10016 6DAE  
                                 l10026 6E24                                   l10042 7DB8  
                                 l10114 4452                                   l10202 04D2  
                                 l10044 7DE4                                   l10036 73E0  
                                 l10220 058E                                   l10140 00F0  
                                 l10310 0C32                                   l10214 0554  
                                 l11110 22D0                                   l11030 1DFA  
                                 l11022 1DC2                                   l10080 4152  
                                 l10160 0216                                   l10128 00AC  
                                 l11024 1DCA                                   l10090 4364  
                                 l10410 119A                                   l10322 0CBA  
                                 l10330 0D24                                   l10234 05F6  
                                 l10226 0594                                   l10218 057C  
                                 l10162 022C                                   l11114 2332  
                                 l10076 4134                                   l10068 40EA  
                                 l10252 06B8                                   l10236 0602  
                                 l10148 0146                                   l11124 24AE  
                                 l11132 24F8                                   l11028 1DE8  
                                 l10262 077A                                   l10158 01EA  
                                 l10166 0258                                   l10430 51F4  
                                 l10502 45A6                                   l11150 2566  
                                 l11142 253C                                   l11126 24D8  
                                 l10272 0926                                   l10256 06F0  
                                 l10192 0396                                   l10176 02FC  
                                 l10184 032A                                   l11160 25AA  
                                 l10338 0D90                                   l10346 0EA2  
                                 l10450 52E4                                   l11170 25FE  
                                 l11090 2004                                   l10372 0FD6  
                                 l10196 0406                                   l10460 539E  
                                 l10700 1D24                                   l11156 2584  
                                 l11148 254E                                   l11076 1FA2  
                                 l10374 0FF0                                   l10358 0F3A  
                                 l10294 0B12                                   l10286 0A48  
                                 l10198 0470                                   l10454 5314  
                                 l10446 52A8                                   l10542 480C  
                                 l10518 469C                                   l10526 4722  
                                 l10606 165C                                   l11078 1FD0  
                                 l10384 1092                                   l10296 0B34  
                                 l10464 53CA                                   l10640 191C  
                                 l10616 16F2                                   l10394 10E2  
                                 l10482 44D0                                   l10722 4C5A  
                                 l11098 2028                                   l10468 5406  
                                 l10660 1A7C                                   l10636 18E8  
                                 l10628 1830                                   l10564 1326  
                                 l10494 4546                                   l10670 1B2A  
                                 l10590 14F8                                   l10566 1360  
                                 l10742 4E30                                   l10734 4D82  
                                 l10806 79D2                                   l10488 450A  
                                 l10568 1376                                   l10728 4D18  
                                 l10840 6EBA                                   l10690 1D00  
                                 l10586 14A8                                   l10754 7850  
                                 l10684 1CA6                                   l10588 14E2  
                                 l10756 7892                                   PRLOCK 0039EF  
                                 l10694 1D04                                   l10960 5BFC  
                                 l10974 5D24                         __end_of___aodiv 56C6  
                                 _ADCAP 003EF5                                   _ADACT 003EFE  
                       __end_of___fladd 35F6                                   _ADCLK 003EFF  
                       __end_of___aomod 5B7A                                   _ADPCH 003EF1  
                       __end_of___fldiv 3B70                                   _ADREF 003EFD  
                       __end_of___awdiv 68D0                         __end_of___flneg 85CA  
                                 STR_11 FF81                                   STR_12 FEB8  
                                 STR_20 FE92                                   STR_21 FF92  
                                 STR_13 FEF1                                   STR_30 FE6C  
                                 STR_22 FF92                                   STR_14 FEDE  
                                 STR_23 FF81                                   STR_31 FFCC  
                                 STR_15 FF2A                                   STR_32 FFCC  
                                 STR_24 FFFB                                   STR_16 FF04  
                                 STR_25 FFF8                                   STR_33 FFA2  
                                 STR_17 FF17                           __CFG_WDTE$OFF 000000  
                                 STR_34 FFA2                                   STR_50 FFE9  
                                 STR_18 FECB                                   STR_35 FFA2  
                                 STR_51 FFF1                                   STR_27 FFC0  
                                 STR_19 FEA5                                   STR_28 FFD6  
                                 STR_36 FE41                         __end_of___awmod 6D82  
                                 STR_45 FE6B                                   STR_29 FE6C  
                                 STR_54 FFF5                                   STR_46 FFE5  
                                 STR_38 FE7F                                   STR_47 FFED  
                                 STR_39 FE59                                   STR_56 FFF5  
                                 _ADRPT 003EEC                         __end_of___flmul 2E3A  
                       __end_of___flsub 8656                         __end_of___fltol 6620  
                                 u10030 530A                                   u10040 5350  
                                 u10200 473E                                   u10120 459E  
                                 u10130 45F2                                   u10211 476E  
                                 u10220 4784                                   u10140 45F4  
                                 u10300 13C0                                   u10221 4782  
                                 u10070 542C                                   u10230 4798  
                                 u10310 13E6                                   u10047 5342  
                                 u10240 479C                                   u10160 4652  
                                 u10170 4654                                   u10090 44B6  
                                 u10410 1746                                   u10340 1540  
                                 u10190 471E                                   u10350 1542  
                                 u10440 19D6                                   u10360 1568  
                                 u10450 19D8                                   u10290 13BE  
                                 u10195 4700                                   u10550 4EA4  
                                 u10490 1B7E                                   _U1P1H 003DED  
                                 u10580 79B2                                   _U1P2H 003DEF  
                                 u10670 5D74                                   _U1P1L 003DEC  
                                 _U1P3H 003DF1                                   _T3CLK 003FA9  
                                 u10680 5D76                                   _T2CON 003FAC  
                                 _U1P2L 003DEE                                   _U1P3L 003DF0  
                                 _U2P1L 003DD4                                   _T3CON 003FA6  
                                 _U2P2L 003DD6                                   _U2P3L 003DD8  
                                 _T5CLK 003F9D                                   _T2HLT 003FAD  
                                 _T5CON 003F9A                                   _T6CON 003F94  
                        __CFG_DEBUG$OFF 000000                                   _T6HLT 003F95  
            _ADCC_ADTI_InterruptHandler 00B2                                   _T2TMR 003FAA  
                                 _U1UIR 003DF8                                   _T2RST 003FAF  
                                 _U1RXB 003DE8                                   _U2UIR 003DE0  
                                 _U1TXB 003DEA                                   _U2RXB 003DD0  
                                 _U2TXB 003DD2                                   _T6TMR 003F92  
                                 _T6RST 003F97                     ??_UART1_rx_vect_isr 004A  
                                 _ISRPR 0039F1                                   _OSCEN 0039DD  
                                 _TMR3H 003FA5                                   _TMR5H 003F99  
                                 _TMR3L 003FA4                                   _TMR5L 003F98  
                                 _TRISA 003FC2                                   _TRISB 003FC3  
                                 _TRISC 003FC4                                   _TRISD 003FC5  
                                 _TRISE 003FC6                                   _TRISF 003FC7  
                           _Default_ISR 9230                 __size_of_clear_adc_scan 0006  
     __size_of_TMR3_SetInterruptHandler 0028       __size_of_TMR6_SetInterruptHandler 0028  
                     _UART1_tx_vect_isr 8E34                           __CFG_WRTB$OFF 000000  
                      __end_of_TMR3_ISR 753A                           __CFG_WRTC$OFF 000000  
                         __CFG_WRTD$OFF 000000                        __end_of_TMR5_ISR 8446  
                          _DMA1CON0bits 003BFC                        __end_of_TMR6_ISR 90CA  
                          _DMA1CON1bits 003BFD                                   _flags 000E  
              __size_of_calc_model_data 02DA                                   _fputc 6B46  
            __size_of_send_lcd_cmd_long 0028                         __end_of_isalpha 8726  
                                 _fputs 7AC2                         __end_of_isdigit 8AAC  
                    __CFG_MCLRE$EXTMCLR 000000                      ?_UART1_tx_vect_isr 0045  
                                 _srand 89B4                                   _width 000A  
                                 _putch 9096                         __end_of_islower 8A4C  
                       __end_of_isspace 84EA                _INT1_SetInterruptHandler 8D6A  
                       __end_of_isupper 8A7C                                   pclath 003FFA  
                                 tablat 003FF5                                   ltemp0 0025  
                                 ltemp1 0029                                   ltemp2 002D  
              __size_of_DMA1_Initialize 006A                                   plusw1 003FE3  
                                 plusw2 003FDB                                   ttemp0 0025  
                                 ttemp1 0028                                   ttemp2 002B  
                                 ttemp3 002E                                   ttemp5 0026  
                                 ttemp6 0029                                   ttemp7 002D  
                                 status 003FD8     __end_of_UART1_SetRxInterruptHandler 8CF2  
           _UART1_SetRxInterruptHandler 8CCA                                   wtemp0 0025  
                                 wtemp1 0027                                   wtemp2 0029  
                                 wtemp3 002B                                   wtemp4 002D  
                                 wtemp5 002F                                   wtemp8 0026  
                       __end_of_sprintf 70B0                         __end_of_tolower 7F2A  
                       __end_of_strncmp 6158                         __end_of_toupper 7EA6  
                   ??_UART1_tx_vect_isr 004A               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr 8E84                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize 8656                   __end_of_ringBufS_init 8C02  
                       __initialization 71B2                       _UART2_rx_vect_isr 8EAC  
                          __end_of_atoi 593A                            __end_of_ctoa 7E22  
                          __end_of_main 2610                            __end_of_dtoa 449C  
                          __end_of_nanf 8278                            __end_of_stoa 5446  
                          __end_of_xtoa 4856                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0045                 __end_of_TMR2_Initialize 90FA  
              __size_of_DMA2_Initialize 005A              __end_of_check_enter_button 87E8  
              _TMR5_SetInterruptHandler 8D1A                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E                   _TMR3_InterruptHandler 00A9  
  __size_of_UART1_SetTxInterruptHandler 0028                     ??_UART2_rx_vect_isr 004A  
             __end_of_UART1_tx_vect_isr 8E5C                                  INTCON0 003FD2  
  __size_of_UART2_SetRxInterruptHandler 0028                          __CFG_MVECEN$ON 000000  
                       _TMR6_Initialize 8B60                         _PWM8_Initialize 9110  
                      _UART1_Initialize 81B2                       _UART2_tx_vect_isr 8E84  
                    _UART2_Transmit_ISR 8B34                                  _ADACCU 003EEA  
                                _ADACQH 003EF4                                  _ADACQL 003EF3  
                                _ADCON0 003EF8                                  _ADCON1 003EF9  
                                _ADCON2 003EFA                                  _ADCON3 003EFB  
                        _start_adc_scan 814E                                  _ADLTHH 003EDF  
                                _ADLTHL 003EDE                                  _ADPREH 003EF7  
                                _ADPREL 003EF6                                  _DMA1PR 0039F3  
                                _DMA2PR 0039F4                                  _ADSTAT 003EFC  
                                _ADUTHH 003EE1                                  _ADUTHL 003EE0  
                    _PWM8_LoadDutyValue 8726                                  _ANSELA 003A40  
                                _ANSELB 003A50                                  _ANSELC 003A60  
                                _ANSELD 003A70                                  _ANSELE 003A80  
                                _ANSELF 003A90                      ?_UART2_tx_vect_isr 0045  
                                _U1CON0 003DF2                                  _U1CON1 003DF3  
                                _U1CON2 003DF4                                  _T3GATE 003FA8  
                                _U1BRGH 003DF6                                  _U1FIFO 003DF7  
                                _T3GCON 003FA7                                  _U2CON0 003DDA  
                                _U2CON1 003DDB                                  _U1BRGL 003DF5  
                                _U2CON2 003DDC                                  _U2BRGH 003DDE  
                                _U2FIFO 003DDF                                  _U2BRGL 003DDD  
                                _T5GATE 003F9C                                  _T5GCON 003F9B  
                                _MAINPR 0039F2                                  _RC3PPS 003A13  
                                _RD1PPS 003A19                                  _RB6PPS 003A0E  
                                i1l1047 8438                    _start_switch_handler 8FA6  
                                i1l1235 74EA                                  _RC5PPS 003A15  
                                _ODCONA 003A42                                  _ODCONB 003A52  
                                _ODCONC 003A62                                  _RC6PPS 003A16  
                                _ODCOND 003A72                                  _ODCONE 003A82  
                                _ODCONF 003A92                 __end_of_TMR3_Initialize 86E2  
                        __CFG_WDTCCS$SC 000000                                  _FVRCON 003EC1  
                      _mode_lamp_bright 9192                                  _SCANPR 0039F7  
                                _IVTADH 00389E                                  _IVTADL 00389D  
                                _IVTADU 00389F            __size_of_eaDogM_WriteCommand 000E  
                                _OSCFRQ 0039DF                                  u398_48 8F92  
                                u840_28 68EA                                  u818_20 8E12  
                                u818_26 8E14                                  u843_20 690A  
                                u843_21 6904                                  u870_28 8F2A  
                                u847_24 69D6                                  u847_25 69D2  
                                u849_20 69FC                                  u849_26 69FE  
                                u857_28 8F70                                  u865_48 8F4E  
                  __size_of_hid_display 0102                                  u868_28 8F06  
                                u889_44 7F8E                                  u889_45 7F88  
                      __end_of___xxtofl 5F90   __end_of_ADCC_DischargeSampleCapacitor 91F2  
__size_of_ADCC_DischargeSampleCapacitor 0008           _ADCC_DischargeSampleCapacitor 91EA  
              __end_of_send_lcd_cmd_dma 8498                         _TMR3_WriteTimer 8828  
                   ??_UART2_tx_vect_isr 004A               __end_of_UART2_rx_vect_isr 8ED2  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize 91BE  
                      _UART2_Initialize 82DA                                  _WaitMs 8914  
                       _conv_raw_result 3B70                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 6620  
                                ___fleq 753A                       _ADCC_ThresholdISR 807C  
                        __CFG_STVREN$ON 000000                          _ringBufS_flush 7B5A  
                                _efgtoa 0000                                  _floorf 4856  
                    ?_ADCC_ThresholdISR 0045                                  _memset 4BC2  
                  __size_of_help_button 0038                                  clear_0 7220  
                                clear_1 7234                                  clear_2 7248  
                                clear_3 725A                                  clear_4 7266  
                                clear_5 7272                                  clear_6 727E  
                                clear_7 728A                                  clear_8 7296  
                                _printf 8278                      _eaDogM_WriteString 797A  
                                _strcpy 7398                               ?_ADCC_ISR 0045  
                                _strlen 7A20                      __size_of_TimerDone 0028  
                       _ADCC_Initialize 8012                          _PMD_Initialize 913C  
             __end_of_UART2_tx_vect_isr 8EAC                                  lltemp0 0025  
                                lltemp1 002D                                  lltemp2 0035  
                                lltemp3 003D                     ??_ADCC_ThresholdISR 0045  
                __end_of_start_adc_scan 81B2                            __mediumconst FDB0  
                                preinc2 003FDC                                  tblptrh 003FF7  
                                tblptrl 003FF6                                  tblptru 003FF8  
                      __end_of_wdtdelay 8392                        __end_of_vfprintf 78D0  
                            _StartTimer 8768           __size_of_INTERRUPT_Initialize 0068  
               __end_of_TMR5_Initialize 869C                       _SYSTEM_Initialize 8538  
                            __accesstop 0060                 __end_of__initialization 72A8  
                             ?_INT0_ISR 0045                               ?_INT1_ISR 0045  
                  __end_of_display_help 9202                    __end_of_display_info 91FA  
             __end_of_CLKREF_Initialize 91C8                           ___rparam_used 000001  
            __size_of_UART1_rx_vect_isr 0028                         _TMR5_WriteTimer 87E8  
                 _set_temp_display_help 9174                        _clear_hid_pflags 8ED2  
                 __end_of_TMR3_CallBack 8F3E               __end_of_ADCC_ThresholdISR 80E6  
                    __size_of_calc_bsoc 008C                  __end_of_ringBufS_flush 7BEC  
                        __pcstackCOMRAM 0045                              ___inthi_sp 1016  
                            ___intlo_sp 180B                            __pidataBANK0 88DE  
                          __pidataBANK1 7772                            __pidataBANK2 75FE  
                             ?_TMR3_ISR 0045                               ?_TMR5_ISR 0045  
                             ?_TMR6_ISR 0045                          ivt0x8_undefint 00AC  
                         __end_of_fputc 6C6A                           __end_of_fputs 7B5A  
                         __end_of_srand 89E8                   __end_of_TMR5_CallBack 8F1A  
                         __end_of_putch 90B0                 __end_of_PWM8_Initialize 9126  
               __end_of_TMR6_Initialize 8B8A                       _adc_int_t_handler 7F2A  
                __end_of_PMD_Initialize 9150                              ??_ADCC_ISR 0045  
                 __end_of_TMR6_CallBack 8F62             __size_of_EXT_INT_Initialize 0034  
            __size_of_UART1_tx_vect_isr 0028                           _DMA1_DMAA_ISR 91D4  
                 TMR3_ISR@CountCallBack 0010                          _clear_adc_scan 9212  
                    __size_of_hid_input 0090                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 0001               __end_of_SYSTEM_Initialize 8582  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
               __end_of_TMR3_WriteTimer 8868                              __pbssBANK0 0060  
                            __pbssBANK1 01B1                              __pbssBANK2 02BC  
                            __pbssBANK3 0300                              __pbssBANK4 0400  
                            __pbssBANK5 0500                              __pbssBANK6 0600  
                            _check_help 5B7A                 __end_of_conv_raw_result 401C  
                 _INT0_InterruptHandler 0007                              ??_INT0_ISR 0045  
                            ??_INT1_ISR 004B                       __end_of_TimerDone 8C52  
                      _DMA1_DMADCNT_ISR 91C8                      __size_of_init_bsoc 0012  
            __size_of_UART2_rx_vect_isr 0026                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01C0                   __end_of_wait_lcd_done 9096  
      __end_of_TMR3_SetInterruptHandler 8D6A                         __CFG_PPS1WAY$ON 000000  
      __end_of_TMR6_SetInterruptHandler 8D1A                              ??_TMR3_ISR 01D1  
               __end_of_ADCC_Initialize 807C                              ??_TMR5_ISR 004F  
             __end_of_adc_int_t_handler 7FA8                              ??_TMR6_ISR 004A  
                               _ADFLTRH 003EE7                                 _ADFLTRL 003EE6  
                               _DMA1DSA 003BF0                                 _DMA2DSA 003BD0  
                               _DMA1DSZ 003BEE                                 _DMA2DSZ 003BCE  
                               _DMA1SSA 003BF9                                 _DMA2SSA 003BD9  
  __end_of_ADCC_SetADTIInterruptHandler 8DE2   __size_of_ADCC_SetADTIInterruptHandler 0028  
          _ADCC_SetADTIInterruptHandler 8DBA                                 _DMA1SSZ 003BF7  
                               _DMA2SSZ 003BD7                                 _ADSTPTH 003EE5  
                               _ADSTPTL 003EE4                       _UART1_Receive_ISR 903E  
                               _CLKRCLK 003CE6                                 _CLKRCON 003CE5  
                __end_of_clear_adc_scan 9218                          ?_DMA1_DMAA_ISR 0045  
                      _DMA1_DMASCNT_ISR 91B0                                 _U1ERRIE 003DFA  
                    __size_of_set_vterm 001E                                 _U1ERRIR 003DF9  
                               _U2ERRIE 003DE2                                 _U2ERRIR 003DE1  
                               _INT0PPS 003AC0                     __CFG_PWRTS$PWRT_OFF 000000  
                               _INT1PPS 003AC1                            ?_Default_ISR 0045  
            __size_of_UART2_tx_vect_isr 0028                                 _U1RXPPS 003AE5  
                               _U2RXPPS 003AE8                                 _OSCCON1 0039D9  
                               _OSCCON3 0039DB                                 _IVTLOCK 003FD4  
                    __size_of_vfpfcnvrt 0B3E                                 _SPI1CLK 003D1C  
                               _SPI1RXB 003D10                       __end_of_calc_bsoc 7D9A  
                               _SPI1TXB 003D11                                 _OSCTUNE 0039DE  
                               _PWM8DCH 003F61                                 _PWM8DCL 003F60  
                               _PWM8CON 003F62                                 _SLRCONA 003A43  
                               _SLRCONB 003A53                                 _SLRCONC 003A63  
                               _SLRCOND 003A73                                 _SLRCONE 003A83  
                               _SLRCONF 003A93                              _get_switch 8C02  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer 8828  
               __size_of_switch_handler 0148                      __size_of_stop_bsoc 0006  
     __size_of_INT0_SetInterruptHandler 0028              __size_of_CLKREF_Initialize 000A  
               __size_of_DMA1_DMAOR_ISR 000A                                 __Hparam 0000  
            __size_of_ADCC_ThresholdISR 006A                           _mode_lamp_dim 90CA  
                               __Lparam 0000                __end_of_UART1_Initialize 8216  
                     __end_of_hid_input 7D0E                         __size_of_WaitMs 0036  
                       __size_of___flge 0162                         __size_of___fleq 00C4  
                               ___aodiv 5446                                 ___fladd 2E3A  
                               ___aomod 593A                                 ___fldiv 35F6  
                               ___awdiv 6782                                 ___flneg 8582  
                               ___awmod 6C6A                                 ___flmul 2610  
                               ___flsub 8610                                 ___fltol 64AE  
             __end_of_UART1_Receive_ISR 905C                         __size_of_efgtoa 1244  
                       __size_of_floorf 036C                    __end_of_init_display 7398  
                               __pcinit 71B2                __end_of_mode_lamp_bright 91A0  
                       __size_of_memset 02EC                __size_of_adc_int_handler 0002  
                   _eaDogM_WriteCommand 9184                                 __ramtop 2000  
           __size_of_UART1_Transmit_ISR 002C                                 __ptext0 1D82  
                               __ptext1 8980                                 __ptext2 8FA6  
                               __ptext3 814E                                 __ptext4 9150  
                               __ptext5 91EA                                 __ptext6 89B4  
                               __ptext7 72AE                                 __ptext8 8B8A  
                               __ptext9 8BB2                       _UART2_Receive_ISR 905C  
                       __size_of_printf 0062                         __CFG_WRTAPP$OFF 000000  
                       __size_of_strcpy 00D4                         __size_of_strlen 00A2  
                 _OSCILLATOR_Initialize 9126                                 us517999 56B0  
                          __size_of_abs 0046                                 us528999 5B68  
                          __size_of_pad 0114                       __end_of_init_bsoc 9174  
                               _isalpha 86E2                                 _isdigit 8A7C  
                             _T3CONbits 003FA6                                 us929999 4036  
                               _mode_sw 0018                       __end_of_lp_filter 6318  
                               us998999 519A                                 _islower 8A1C  
                               _isspace 8498                         __CFG_WRTSAF$OFF 000000  
                             _T5CONbits 003F9A                __end_of_UART2_Initialize 8338  
                               _isupper 8A4C              __size_of_SYSTEM_Initialize 004A  
                               _sprintf 6FA6                                 _tolower 7EA6  
                 __size_of_display_help 0008                                 _utctime 009D  
                 __size_of_display_info 0008                                 _strncmp 5F90  
                               _toupper 7E22                    end_of_initialization 72A8  
             __size_of_convert_adc_data 00B8                      _check_enter_button 87A8  
   __end_of_UART1_SetTxInterruptHandler 8CCA             _UART1_SetTxInterruptHandler 8CA2  
                             i1u1069_20 74E2     __end_of_UART2_SetRxInterruptHandler 8CA2  
           _UART2_SetRxInterruptHandler 8C7A                       __end_of_set_vterm 9020  
                     __end_of_vfpfcnvrt 1D82                               _SPI1TCNTL 003D12  
                               postdec0 003FED                                 postdec1 003FE5  
                               postdec2 003FDD                                 postinc0 003FEE  
                               postinc1 003FE6                                 postinc2 003FDE  
            __size_of_adc_int_t_handler 007E                     __size_of_StartTimer 0040  
                     __end_of_start_lcd 9224               __end_of_UART2_Receive_ISR 907A  
                        wdtdelay@dcount 00A1                   __CFG_WDTCPS$WDTCPS_31 000000  
                       ??_DMA1_DMAA_ISR 004B                   _INT1_InterruptHandler 0004  
                             _PORTBbits 003FCB                       __end_of_stop_bsoc 922A  
              _TMR3_SetInterruptHandler 8D42                               _PORTFbits 003FCF  
              _TMR6_SetInterruptHandler 8CF2                            _display_help 91FA  
                 _TMR5_InterruptHandler 00AC                            _display_info 91F2  
  __size_of_UART2_SetTxInterruptHandler 0028                __end_of_clear_hid_pflags 8EF6  
                     __size_of_ADCC_ISR 002C     __end_of_ADCC_SetADIInterruptHandler 8E0A  
           _ADCC_SetADIInterruptHandler 8DE2                              _update_lcd 6E96  
                       _calc_model_data 4EAE                  __size_of_ringBufS_init 0028  
                      __CFG_FEXTOSC$ECH 000000                              _static_soc 8980  
                       _DMA1_Initialize 7FA8                              _start_bsoc 922A  
                       _SPI1_Initialize 90FA                   __end_of_get_vterm_ptr 8ADA  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 003E  
                        __end_of_WaitMs 894A            __end_of_INTERRUPT_Initialize 814E  
                            _vterm_dump 6A18                          __end_of___flge 6782  
                        __end_of___fleq 75FE    __end_of_INT0_DefaultInterruptHandler 923C  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler 923A  
            __size_of_UART1_Receive_ISR 001E                         _DMA2_Initialize 8392  
                        __end_of_efgtoa 1244                       __size_of_TMR3_ISR 00CE  
                     __size_of_TMR5_ISR 005A                       __size_of_TMR6_ISR 001A  
                   __size_of_check_help 0212                          __end_of_floorf 4BC2  
           __size_of_UART2_Transmit_ISR 002C                              floorf@F524 0095  
                        __end_of_memset 4EAE                          __end_of_printf 82DA  
              __end_of_DMA1_DMADCNT_ISR 91D2             __size_of_PWM8_LoadDutyValue 0042  
                 __end_of_INT0_CallBack 8FA6                          __end_of_strcpy 746C  
                        __end_of_strlen 7AC2                     start_initialization 71B2  
  __end_of_TMR5_DefaultInterruptHandler 8E32   __size_of_TMR5_DefaultInterruptHandler 0028  
          _TMR5_DefaultInterruptHandler 8E0A         __size_of_PIN_MANAGER_Initialize 0092  
                           __end_of_abs 8610                   __end_of_INT1_CallBack 8F84  
             __size_of_set_display_info 001E                             __end_of_pad 6E96  
                  __size_of_Default_ISR 0006                    __end_of_send_lcd_cmd 8BDA  
                        _switch_handler 68D0           __size_of_ADCC_StartConversion 0012  
                            ivt0x8_base 0008                           _uart1RxBuffer 0500  
                 __end_of___fpclassifyf 64AE                           _uart2RxBuffer 0600  
                         _uart1TxBuffer 02BC                __end_of_DMA1_DMASCNT_ISR 91BE  
                         _uart2TxBuffer 0354                          _DMA1_DMAOR_ISR 91E0  
                   __end_of_hid_display 71B2                        __CFG_LPBOREN$OFF 000000  
                 __size_of_init_display 00EA             __size_of_eaDogM_WriteString 00A6  
                             _TimerDone 8C2A                           _ringBufS_init 8BDA  
                           __pdataBANK0 00C3                             __pdataBANK1 0100  
                           __pdataBANK2 0200              __size_of_UART2_Receive_ISR 001E  
                   __size_of_get_switch 0028              __end_of_EXT_INT_Initialize 8A1C  
               __end_of_calc_model_data 5188                     __end_of_help_button 88DE  
       __end_of_eaDogM_WriteStringAtPos 8980                             __pbssBIGRAM 06FF  
               __end_of_DMA1_Initialize 8012                             __pbssCOMRAM 0001  
      __end_of_INT0_SetInterruptHandler 8DBA                           __pcstackBANK1 01D1  
              __size_of_TMR2_Initialize 0018                  __size_of_TMR3_CallBack 0024  
                __end_of_switch_handler 6A18                       __size_of___xxtofl 0204  
               __end_of_SPI1_Initialize 9110                _UART1_RxInterruptHandler 00BB  
              _UART2_TxInterruptHandler 00BE                               __end_of_T FE41  
                      _convert_adc_data 76BA                               _calc_bsoc 7D0E  
             __size_of_ringBufS_put_dma 00AA                            _init_display 72AE  
                __end_of_DMA1_DMAOR_ISR 91EA                  __size_of_TMR5_CallBack 0024  
                 _TMR6_InterruptHandler 00AF                  __size_of_TMR6_CallBack 0024  
               __end_of_DMA2_Initialize 83EC                  _PIN_MANAGER_Initialize 7BEC  
              __size_of_TMR3_Initialize 0046                    __end_of_wait_lcd_set 921E  
                         __pmediumconst FDB0                               __ptext100 8CA2  
                             __ptext101 8CCA                               __ptext110 9110  
                             __ptext102 8B60                               __ptext111 913C  
                             __ptext103 8CF2                               __ptext120 7FA8  
                             __ptext112 7BEC                               __ptext104 8656  
                             __ptext121 91BE                               __ptext113 9126  
                             __ptext105 8D1A                               __ptext130 87E8  
                             __ptext122 8012                               __ptext114 80E6  
                             __ptext106 869C                               __ptext131 8EF6  
                             __ptext123 8DBA                               __ptext115 920A  
                             __ptext107 8D42                               __ptext140 923A  
                             __ptext132 8E0A                               __ptext124 8DE2  
                             __ptext116 89E8                               __ptext108 90E2  
                             __ptext141 9230                               __ptext133 746C  
                             __ptext125 8868                               __ptext117 8D6A  
                             __ptext109 90FA                               __ptext150 903E  
                             __ptext142 8ADC                               __ptext134 8828  
                             __ptext126 8F62                               __ptext118 8D92  
                             __ptext151 8E84                               __ptext143 7F2A  
                             __ptext135 8F1A                               __ptext127 9236  
                             __ptext119 8392                               __ptext160 91D4  
                             __ptext152 8B34                               __ptext144 923C  
                             __ptext136 9238                               __ptext128 68D0  
                             __ptext161 91E0                               __ptext153 8EAC  
                             __ptext145 923E                               __ptext137 7D0E  
                             __ptext129 83EC                               __ptext162 0000  
                             __ptext154 905C                               __ptext146 807C  
                             __ptext138 91A0                               __ptext155 90B0  
                             __ptext147 8E34                               __ptext139 8F84  
                             __ptext156 8F3E                               __ptext148 8B08  
                             __ptext157 84EA                               __ptext149 8E5C  
                             __ptext158 91B0                               __ptext159 91C8  
                             _hid_input 7C7E                      __end_of_StartTimer 87A8  
                     __size_of_wdtdelay 005A                       __size_of_vfprintf 00AC  
                              _ADCC_ISR 8ADC                  __CFG_BBSIZE$BBSIZE_512 000000  
                              _DMA1CON0 003BFC                                _DMA1CON1 003BFD  
                              _DMA1AIRQ 003BFE                                _DMA2CON0 003BDC  
                              _DMA2CON1 003BDD                                _DMA2AIRQ 003BDE  
                              _DMA1SIRQ 003BFF                                _DMA2SIRQ 003BDF  
               __size_of_get_raw_result 001E                               _init_bsoc 9162  
                __size_of_wait_lcd_done 001C                          __size_of_fputc 0124  
                              _T2CLKCON 003FAE                          __size_of_fputs 0098  
                             _lp_filter 6158                             _hid_display 70B0  
                        __size_of_srand 0034                          __size_of_putch 001A  
                  _INTERRUPT_Initialize 80E6                                _T6CLKCON 003F96  
         __size_of_start_switch_handler 0020                         ?_DMA1_DMAOR_ISR 0045  
                              _INT0_ISR 91A0                                _INT1_ISR 8868  
                              _LATCbits 003FBC                                _LATDbits 003FBD  
                              _LATEbits 003FBE       __size_of_INT1_SetInterruptHandler 0028  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _PIE2bits 003992                                _IPR5bits 003985  
                              _PIE3bits 003993                               _tickCount 01B1  
                              _IPR6bits 003986                                _PIE5bits 003995  
                              _IPR8bits 003988                                _PIE6bits 003996  
                              _IPR9bits 003989                                _PIE8bits 003998  
                   __CFG_BORV$VBOR_2P45 000000                                _PIE9bits 003999  
                             _ring_buf1 0443                               _ring_buf2 0400  
                              _PIR1bits 0039A1                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                           _TMR3_CallBack 8F1A  
                              _PIR5bits 0039A5                                _PIR6bits 0039A6  
                              i2u900_48 8E98                                i2u902_48 8EBE  
                              _PIR8bits 0039A8                                _PIR9bits 0039A9  
                              i2u892_48 8AF4                __size_of_TMR5_Initialize 0046  
                              i2u894_48 80B2                                i2u894_49 80C6  
                              i2u896_48 8E48                                i2u898_48 8E70  
                             _set_vterm 9002                     __size_of_update_lcd 0110  
                           _help_button 88A6                                _TMR3_ISR 746C  
            __end_of_UART1_Transmit_ISR 8B34                                _TMR5_ISR 83EC  
                              _TMR6_ISR 90B0                               _port_data 01A1  
                   __size_of_static_soc 0034                               _vfpfcnvrt 1244  
                          _SPI1INTFbits 003D1A                     __size_of_start_bsoc 0006  
                         _TMR5_CallBack 8EF6                              _ADCON0bits 003EF8  
                    __end_of_check_help 5D8C                               _start_lcd 921E  
               __size_of_FVR_Initialize 0008               __size_of_send_lcd_cmd_dma 0052  
                         _TMR6_CallBack 8F3E                   __size_of_send_lcd_cmd 0028  
     __size_of_TMR5_SetInterruptHandler 0028                               _stop_bsoc 9224  
                      _set_display_info 9020                __size_of_PWM8_Initialize 0016  
              __size_of_TMR6_Initialize 002A                             _INTCON0bits 003FD2  
                             copy_data0 71C6                               copy_data1 71E8  
                             copy_data2 720A                _INT0_SetInterruptHandler 8D92  
                   __size_of_vterm_dump 012E                  _uart1TxBufferRemaining 0022  
   __end_of_UART2_SetTxInterruptHandler 8C7A             _UART2_SetTxInterruptHandler 8C52  
                          _uart1RxCount 001F                            _uart2RxCount 0019  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 0036  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                __size_of_TMR3_WriteTimer 0040  
                              __Lrparam 0000                 __size_of_check_adc_scan 0008  
                    __CFG_BOREN$SBORDIS 000000                __size_of_conv_raw_result 04AC  
                         _wait_lcd_done 907A                            _send_lcd_cmd 8BB2  
                      __size_of___aodiv 0280                        __size_of___fladd 07BC  
                      __size_of___aomod 0240                         _adc_int_handler 923E  
                      __size_of___fldiv 057A                        __size_of___awdiv 014E  
                      __size_of___flneg 0048                        __size_of___awmod 0118  
                      __size_of___flmul 082A                        __size_of___flsub 0046  
                      __size_of___fltol 0172                      __end_of_get_switch 8C2A  
                 __end_of_DMA1_DMAA_ISR 91DE                      ___fpclassifyf@F463 0099  
  __size_of_UART1_SetRxInterruptHandler 0028                         lp_filter@smooth 0300  
                              ___xxtofl 5D8C                       ?_DMA1_DMADCNT_ISR 0045  
           __size_of_check_enter_button 0040                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand 9192                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 004B                                __ptext10 8FC6  
                              __ptext11 8BDA                                __ptext20 8FE4  
                              __ptext12 9162                                __ptext21 5D8C  
                              __ptext13 70B0                                __ptext30 894A  
                              __ptext22 8ED2                                __ptext14 7C7E  
                              __ptext31 8446                                __ptext23 9212  
                              __ptext15 8C02                                __ptext40 7824  
                              __ptext32 907A                                __ptext24 5B7A  
                              __ptext16 9184                                __ptext41 1244  
                              __ptext33 8338                                __ptext25 6A18  
                              __ptext17 76BA                                __ptext50 8A4C  
                              __ptext42 449C                                __ptext34 797A  
                              __ptext26 6FA6                                __ptext18 3B70  
                              __ptext51 7398                                __ptext43 7E22  
                              __ptext35 9218                                __ptext27 8AAC  
                              __ptext19 8216                                __ptext60 6782  
                              __ptext52 4856                                __ptext44 8A1C  
                              __ptext36 921E                                __ptext28 8914  
                              __ptext61 401C                                __ptext53 6318  
                              __ptext45 86E2                                __ptext37 7B5A  
                              __ptext29 6E96                                __ptext70 9096  
                              __ptext62 85CA                                __ptext54 64AE  
                              __ptext46 5F90                                __ptext38 4BC2  
                              __ptext71 78D0                                __ptext63 593A  
                              __ptext55 8582                                __ptext47 5188  
                              __ptext39 8278                                __ptext80 8726  
                              __ptext72 56C6                                __ptext64 5446  
                              __ptext56 6620                                __ptext48 0000  
                              __ptext81 88A6                                __ptext73 8498  
                              __ptext65 7D9A                                __ptext57 753A  
                              __ptext49 7EA6                                __ptext90 922A  
                              __ptext82 8C2A                                __ptext74 8A7C  
                              __ptext66 6D82                                __ptext58 35F6  
                              __ptext91 6158                                __ptext83 8768  
                              __ptext75 9002                                __ptext67 7A20  
                              __ptext59 6C6A                                __ptext92 8610  
                              __ptext84 91F2                                __ptext76 9174  
                              __ptext68 7AC2                                __ptext93 2E3A  
                              __ptext85 91FA                                __ptext77 9020  
                              __ptext69 6B46                                __ptext94 2610  
                              __ptext86 87A8                                __ptext78 90CA  
                              __ptext95 8538                                __ptext87 9202  
                              __ptext79 9192                                __ptext96 82DA  
                              __ptext88 4EAE                                __ptext97 8C52  
                              __ptext89 9224                                __ptext98 8C7A  
                              __ptext99 81B2                        __size_of_isupper 0030  
                              us1011999 451C                        __size_of_sprintf 010A  
                      __size_of_tolower 0084                        __size_of_strncmp 01C8  
                      __size_of_toupper 0084                        _ringBufS_put_dma 78D0  
                         __size_of_atoi 0274                           __size_of_ctoa 0088  
                         __size_of_main 088E                           __size_of_dtoa 0480  
                         __size_of_nanf 0062                   __size_of_wait_lcd_set 0006  
                         __size_of_stoa 02BE                           __size_of_xtoa 03BA  
                  __CFG_WDTCWS$WDTCWS_7 000000                       ?_DMA1_DMASCNT_ISR 0045  
                           _IVTLOCKbits 003FD4                __size_of_TMR5_WriteTimer 0040  
             _ADCC_ADI_InterruptHandler 00B5                               stoa@F1166 00EB  
                    ??_DMA1_DMASCNT_ISR 004B            __end_of_ADCC_StartConversion 9162  
                              _spi_link 0089                                _wdtdelay 8338  
            __end_of_UART2_Transmit_ISR 8B60                                _vfprintf 7824  
              __end_of_convert_adc_data 7772              __end_of_PWM8_LoadDutyValue 8768  
  __end_of_TMR3_DefaultInterruptHandler 923A   __size_of_TMR3_DefaultInterruptHandler 0002  
          _TMR3_DefaultInterruptHandler 9238    __end_of_INT1_DefaultInterruptHandler 9238  
 __size_of_INT1_DefaultInterruptHandler 0002            _INT1_DefaultInterruptHandler 9236  
                         ??_Default_ISR 0045                             _uart1RxHead 0021  
                __size_of_get_vterm_ptr 002E                             _uart1TxHead 0024  
                           _uart2RxHead 001B                             _uart1RxTail 0020  
                        _get_raw_result 8FE4                             _uart2TxHead 001E  
                           _uart1TxTail 0023                             _uart2RxTail 001A  
                           _uart2TxTail 001D                            _wait_lcd_set 9218  
                    _EXT_INT_Initialize 89E8    __end_of_TMR6_DefaultInterruptHandler 8538  
 __size_of_TMR6_DefaultInterruptHandler 004E            _TMR6_DefaultInterruptHandler 84EA  
  __end_of_ADCC_DefaultInterruptHandler 923E   __size_of_ADCC_DefaultInterruptHandler 0002  
          _ADCC_DefaultInterruptHandler 923C                                intlevel1 0000  
                              intlevel2 0000                       _send_lcd_cmd_long 8B8A  
        __size_of_set_temp_display_help 0010           __end_of_set_temp_display_help 9184  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString 7A20  
                 __end_of_mode_lamp_dim 90E2                 __end_of_adc_int_handler 9240  
                __size_of_INT0_CallBack 0022                              _SPI1SCKPPS 003ADE  
                            _SPI1SDIPPS 003ADF                  __size_of_INT1_CallBack 0022  
                    __end_of_update_lcd 6FA6                  _uart2TxBufferRemaining 001C  
                    __end_of_static_soc 89B4                      __end_of_start_bsoc 9230  
                        _FVR_Initialize 920A                  __end_of_get_raw_result 9002  
                      _send_lcd_cmd_dma 8446                  __size_of___fpclassifyf 0196  
                 TMR5_ISR@CountCallBack 0014        __end_of_INT1_SetInterruptHandler 8D92  
             __size_of_UART1_Initialize 0064                        ??_DMA1_DMAOR_ISR 004B  
              _UART1_TxInterruptHandler 00B8               __end_of_send_lcd_cmd_long 8BB2  
               __size_of_start_adc_scan 0064                     __end_of_Default_ISR 9236  
        __end_of_PIN_MANAGER_Initialize 7C7E               __size_of_mode_lamp_bright 000E  
                    __end_of_vterm_dump 6B46                 _eaDogM_WriteStringAtPos 894A  
                         _get_vterm_ptr 8AAC                          _check_adc_scan 9202  
             __size_of_UART2_Initialize 005E  
