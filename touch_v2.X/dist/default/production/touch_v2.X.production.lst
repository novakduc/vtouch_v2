

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Nov 23 04:42:26 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1,inline
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1,inline
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1
   127                           	psect	text106,global,reloc=2,class=CODE,delta=1
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	text111,global,reloc=2,class=CODE,delta=1
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	text113,global,reloc=2,class=CODE,delta=1
   135                           	psect	text114,global,reloc=2,class=CODE,delta=1
   136                           	psect	text115,global,reloc=2,class=CODE,delta=1
   137                           	psect	text116,global,reloc=4,class=CODE,delta=1
   138                           	psect	text117,global,reloc=2,class=CODE,delta=1
   139                           	psect	text118,global,reloc=2,class=CODE,delta=1
   140                           	psect	text119,global,reloc=2,class=CODE,delta=1
   141                           	psect	text120,global,reloc=4,class=CODE,delta=1
   142                           	psect	text121,global,reloc=2,class=CODE,delta=1
   143                           	psect	text122,global,reloc=2,class=CODE,delta=1
   144                           	psect	text123,global,reloc=2,class=CODE,delta=1
   145                           	psect	text124,global,reloc=4,class=CODE,delta=1
   146                           	psect	text125,global,reloc=2,class=CODE,delta=1
   147                           	psect	text126,global,reloc=2,class=CODE,delta=1
   148                           	psect	text127,global,reloc=4,class=CODE,delta=1
   149                           	psect	text128,global,reloc=4,class=CODE,delta=1
   150                           	psect	text129,global,reloc=2,class=CODE,delta=1
   151                           	psect	text130,global,reloc=2,class=CODE,delta=1
   152                           	psect	text131,global,reloc=2,class=CODE,delta=1
   153                           	psect	text132,global,reloc=4,class=CODE,delta=1
   154                           	psect	text133,global,reloc=4,class=CODE,delta=1
   155                           	psect	text134,global,reloc=2,class=CODE,delta=1
   156                           	psect	text135,global,reloc=4,class=CODE,delta=1
   157                           	psect	text136,global,reloc=2,class=CODE,delta=1
   158                           	psect	text137,global,reloc=4,class=CODE,delta=1
   159                           	psect	text138,global,reloc=2,class=CODE,delta=1
   160                           	psect	text139,global,reloc=4,class=CODE,delta=1
   161                           	psect	text140,global,reloc=2,class=CODE,delta=1
   162                           	psect	text141,global,reloc=4,class=CODE,delta=1
   163                           	psect	text142,global,reloc=2,class=CODE,delta=1
   164                           	psect	text143,global,reloc=2,class=CODE,delta=1
   165                           	psect	text144,global,reloc=4,class=CODE,delta=1
   166                           	psect	text145,global,reloc=4,class=CODE,delta=1
   167                           	psect	text146,global,reloc=4,class=CODE,delta=1
   168                           	psect	text147,global,reloc=4,class=CODE,delta=1
   169                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   170                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   171                           	psect	text148,global,reloc=4,class=CODE,delta=1
   172                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   173                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   174  0000                     
   175                           ; Version 2.10
   176                           ; Generated 31/07/2019 GMT
   177                           ; 
   178                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   179                           ; All rights reserved.
   180                           ; 
   181                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   182                           ; 
   183                           ; Redistribution and use in source and binary forms, with or without modification, are
   184                           ; permitted provided that the following conditions are met:
   185                           ; 
   186                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   187                           ;        conditions and the following disclaimer.
   188                           ; 
   189                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   190                           ;        of conditions and the following disclaimer in the documentation and/or other
   191                           ;        materials provided with the distribution.
   192                           ; 
   193                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   194                           ;        software without specific prior written permission.
   195                           ; 
   196                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   197                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   198                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   199                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   200                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   201                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   202                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   203                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   204                           ; 
   205                           ; 
   206                           ; Code-generator required, PIC18F57K42 Definitions
   207                           ; 
   208                           ; SFR Addresses
   209  0000                     
   210 ;;_mode	offset	0
   211 ;;_channel	offset=-1 (param)
   212 ;;_s	offset=-2 (param)
   213 ;;_cmd	offset=-1 (param)
   214 ;;_cmd	offset=-1 (param)
   215 ;;_data	offset=-1 (param)
   216 ;;__this	offset=-2 (param)
   217 ;;_cmd	offset=-1 (param)
   218 ;;_i	offset	0
   219 ;;_lp_speed	offset	0
   220 ;;_new	offset=-4 (param)
   221 ;;_bn	offset=-5 (param)
   222 ;;_slow	offset=-6 (param)
   223 ;;_chan	offset=-1 (param)
   224 ;;_to_what	offset=-2 (param)
   225 ;;_u	offset	0
   226 ;;_s	offset=-2 (param)
   227 ;;_index	offset=-1 (param)
   228 ;;_arg	offset	0
   229 ;;_exp	offset	4
   230 ;;_sign	offset=-1 (param)
   231 ;;_val	offset=-5 (param)
   232 ;;_flipper	offset=-1 (param)
   233 ;;_f	offset	0
   234 ;;_ap	offset	6
   235 ;;_s	offset=-3 (param)
   236 ;;_fmt	offset=-5 (param)
   237 ;;_line	offset=-1 (param)
   238 ;;_vterm	offset=-2 (param)
   239 ;;_numMilliseconds	offset=-2 (param)
   240 ;;_vterm	offset=-1 (param)
   241 ;;_r	offset=-1 (param)
   242 ;;_c	offset=-2 (param)
   243 ;;_strPtr	offset=-4 (param)
   244 ;;_strPtr	offset=-1 (param)
   245 ;;_delay	offset=-4 (param)
   246 ;;_strPtr	offset=-2 (param)
   247 ;;__this	offset=-2 (param)
   248 ;;_clearBuffer	offset=-3 (param)
   249 ;;_s	offset	0
   250 ;;_k	offset	2
   251 ;;_dest	offset=-2 (param)
   252 ;;_c	offset=-4 (param)
   253 ;;_n	offset=-6 (param)
   254 ;;_ap	offset	0
   255 ;;_fmt	offset=-3 (param)
   256 ;;_cfmt	offset	0
   257 ;;_fp	offset=-2 (param)
   258 ;;_fmt	offset=-4 (param)
   259 ;;_ap	offset=-6 (param)
   260 ;;_vfpfcnvrt$4428	offset	0
   261 ;;_vfpfcnvrt$4439	offset	2
   262 ;;_vfpfcnvrt$4427	offset	4
   263 ;;_llu	offset	6
   264 ;;_ll	offset	14
   265 ;;_f	offset	22
   266 ;;_ct	offset	26
   267 ;;_cp	offset	29
   268 ;;_c	offset	31
   269 ;;_fp	offset=-2 (param)
   270 ;;_fmt	offset=-4 (param)
   271 ;;_ap	offset=-6 (param)
   272 ;;_xtoa$4413	offset	0
   273 ;;_xtoa$4412	offset	2
   274 ;;_n	offset	4
   275 ;;_c	offset	12
   276 ;;_i	offset	14
   277 ;;_w	offset	16
   278 ;;_p	offset	18
   279 ;;_fp	offset=-2 (param)
   280 ;;_d	offset=-10 (param)
   281 ;;_x	offset=-11 (param)
   282 ;;_toupper$5097	offset	0
   283 ;;_c	offset=-2 (param)
   284 ;;_c	offset=-2 (param)
   285 ;;_c	offset=-2 (param)
   286 ;;_n	offset	0
   287 ;;_i	offset	8
   288 ;;_w	offset	10
   289 ;;_p	offset	12
   290 ;;_fp	offset=-2 (param)
   291 ;;_d	offset=-10 (param)
   292 ;;_counter	offset	0
   293 ;;_dividend	offset=-8 (param)
   294 ;;_divisor	offset=-16 (param)
   295 ;;_quotient	offset	0
   296 ;;_counter	offset	8
   297 ;;_dividend	offset=-8 (param)
   298 ;;_divisor	offset=-16 (param)
   299 ;;_r	offset	0
   300 ;;_l	offset	2
   301 ;;__l	offset=-2 (param)
   302 ;;__r	offset=-4 (param)
   303 ;;_n	offset=-6 (param)
   304 ;;_nuls	offset	0
   305 ;;_l	offset	7
   306 ;;_p	offset	9
   307 ;;_cp	offset	11
   308 ;;_w	offset	13
   309 ;;_i	offset	15
   310 ;;_fp	offset=-2 (param)
   311 ;;_s	offset=-4 (param)
   312 ;;_efgtoa$4385	offset	0
   313 ;;_efgtoa$4384	offset	2
   314 ;;_efgtoa$4383	offset	4
   315 ;;_efgtoa$4379	offset	6
   316 ;;_efgtoa$4375	offset	8
   317 ;;_efgtoa$4374	offset	10
   318 ;;_u	offset	12
   319 ;;_g	offset	16
   320 ;;_l	offset	20
   321 ;;_h	offset	24
   322 ;;_ou	offset	28
   323 ;;_n	offset	32
   324 ;;_e	offset	34
   325 ;;_i	offset	36
   326 ;;_w	offset	38
   327 ;;_p	offset	40
   328 ;;_sign	offset	42
   329 ;;_d	offset	44
   330 ;;_ne	offset	46
   331 ;;_m	offset	48
   332 ;;_pp	offset	50
   333 ;;_t	offset	52
   334 ;;_mode	offset	54
   335 ;;_nmode	offset	55
   336 ;;_fp	offset=-2 (param)
   337 ;;_f	offset=-6 (param)
   338 ;;_c	offset=-7 (param)
   339 ;;_tolower$5082	offset	0
   340 ;;_c	offset=-2 (param)
   341 ;;_c	offset=-2 (param)
   342 ;;_d	offset	0
   343 ;;_s	offset	2
   344 ;;_dest	offset=-2 (param)
   345 ;;_src	offset=-4 (param)
   346 ;;_u	offset	0
   347 ;;_m	offset	4
   348 ;;_e	offset	8
   349 ;;_x	offset=-4 (param)
   350 ;;_u	offset	0
   351 ;;_e	offset	4
   352 ;;_x	offset=-4 (param)
   353 ;;_exp1	offset	0
   354 ;;_sign1	offset	1
   355 ;;_f1	offset=-4 (param)
   356 ;;_b	offset=-4 (param)
   357 ;;_a	offset=-8 (param)
   358 ;;_grs	offset	0
   359 ;;_bexp	offset	1
   360 ;;_aexp	offset	2
   361 ;;_signs	offset	3
   362 ;;_b	offset=-4 (param)
   363 ;;_a	offset=-8 (param)
   364 ;;_f1	offset=-4 (param)
   365 ;;_prod	offset	0
   366 ;;_grs	offset	4
   367 ;;_temp	offset	8
   368 ;;_bexp	offset	10
   369 ;;_aexp	offset	11
   370 ;;_sign	offset	12
   371 ;;_b	offset=-4 (param)
   372 ;;_a	offset=-8 (param)
   373 ;;_ff1	offset=-4 (param)
   374 ;;_ff2	offset=-8 (param)
   375 ;;_ff1	offset=-4 (param)
   376 ;;_ff2	offset=-8 (param)
   377 ;;_grs	offset	0
   378 ;;_rem	offset	4
   379 ;;_new_exp	offset	8
   380 ;;_aexp	offset	10
   381 ;;_bexp	offset	11
   382 ;;_sign	offset	12
   383 ;;_b	offset=-4 (param)
   384 ;;_a	offset=-8 (param)
   385 ;;_sign	offset	0
   386 ;;_counter	offset	1
   387 ;;_dividend	offset=-2 (param)
   388 ;;_divisor	offset=-4 (param)
   389 ;;_quotient	offset	0
   390 ;;_sign	offset	2
   391 ;;_counter	offset	3
   392 ;;_dividend	offset=-2 (param)
   393 ;;_divisor	offset=-4 (param)
   394 ;;_dtoa$4351	offset	0
   395 ;;_n	offset	2
   396 ;;_i	offset	10
   397 ;;_s	offset	12
   398 ;;_w	offset	14
   399 ;;_p	offset	16
   400 ;;_fp	offset=-2 (param)
   401 ;;_d	offset=-10 (param)
   402 ;;_a	offset=-2 (param)
   403 ;;_sign	offset	0
   404 ;;_counter	offset	1
   405 ;;_dividend	offset=-8 (param)
   406 ;;_divisor	offset=-16 (param)
   407 ;;_quotient	offset	0
   408 ;;_sign	offset	8
   409 ;;_counter	offset	9
   410 ;;_dividend	offset=-8 (param)
   411 ;;_divisor	offset=-16 (param)
   412 ;;_w	offset	0
   413 ;;_fp	offset=-2 (param)
   414 ;;_c	offset=-3 (param)
   415 ;;_w	offset	0
   416 ;;_i	offset	2
   417 ;;_fp	offset=-2 (param)
   418 ;;_buf	offset=-4 (param)
   419 ;;_p	offset=-6 (param)
   420 ;;_a	offset	0
   421 ;;_s	offset=-2 (param)
   422 ;;_i	offset	0
   423 ;;_c	offset	2
   424 ;;_s	offset=-2 (param)
   425 ;;_fp	offset=-4 (param)
   426 ;;_c	offset=-2 (param)
   427 ;;_fp	offset=-4 (param)
   428 ;;_c	offset=-1 (param)
   429 ;;__this	offset=-2 (param)
   430 ;;_c	offset=-3 (param)
   431 ;;_atoi$4935	offset	0
   432 ;;_atoi$4933	offset	2
   433 ;;_atoi$4934	offset	4
   434 ;;_n	offset	5
   435 ;;_neg	offset	7
   436 ;;_s	offset=-2 (param)
   437 ;;_isspace$4973	offset	0
   438 ;;_c	offset=-2 (param)
   439 ;;_c	offset=-2 (param)
   440 ;;_vterm	offset=-1 (param)
   441 ;;_new_response_info	offset=-1 (param)
   442 ;;_new_response_info	offset=-1 (param)
   443 ;;_level	offset=-2 (param)
   444 ;;_dutyValue	offset=-2 (param)
   445 ;;_timer	offset=-1 (param)
   446 ;;_timer	offset=-1 (param)
   447 ;;_count	offset=-3 (param)
   448 ;;_InterruptHandler	offset=-3 (param)
   449 ;;_InterruptHandler	offset=-3 (param)
   450 ;;_InterruptHandler	offset=-3 (param)
   451 ;;_InterruptHandler	offset=-3 (param)
   452 ;;_InterruptHandler	offset=-3 (param)
   453 ;;_InterruptHandler	offset=-3 (param)
   454 ;;_state	offset	0
   455 ;;_InterruptHandler	offset=-3 (param)
   456 ;;_InterruptHandler	offset=-3 (param)
   457 ;;_InterruptHandler	offset=-3 (param)
   458 ;;_InterruptHandler	offset=-3 (param)
   459 ;;_i	offset	0
   460 ;;_sw_value	offset	1
   461 ;;_timerVal	offset=-2 (param)
   462 ;;_channel	offset=-1 (param)
   463 ;;_i	offset	0
   464                           
   465                           	psect	idataBANK0
   466  01879C                     __pidataBANK0:
   467                           	opt callstack 0
   468                           
   469                           ;initializer for _R
   470  01879C  0000               	dw	0
   471  01879E  0000               	dw	0
   472  0187A0  0000               	dw	0
   473  0187A2  0000               	dw	0
   474  0187A4  0000               	dw	0
   475  0187A6  0000               	dw	0
   476  0187A8  0000               	dw	0
   477  0187AA  0000               	dw	0
   478  0187AC  0000               	dw	0
   479  0187AE  0000               	dw	0
   480  0187B0  0000               	dw	0
   481  0187B2  0000               	dw	0
   482  0187B4  0000               	dw	0
   483  0187B6  0000               	dw	0
   484  0187B8  0000               	dw	0
   485  0187BA  0000               	dw	0
   486  0187BC  0F5B               	dw	3931
   487  0187BE  0F88               	dw	3976
   488  0187C0  00                 	db	0
   489  0187C1  0000               	dw	0
   490  0187C3  00                 	db	0
   491                           
   492                           ;initializer for stoa@F1166
   493  0187C4  28                 	db	40
   494  0187C5  6E                 	db	110
   495  0187C6  75                 	db	117
   496  0187C7  6C                 	db	108
   497  0187C8  6C                 	db	108
   498  0187C9  29                 	db	41
   499  0187CA  00                 	db	0
   500                           
   501                           ;initializer for _port_data
   502  0187CB  FF                 	db	255
   503  0187CC  00                 	db	0
   504  0187CD  FF                 	db	255
   505  0187CE  00                 	db	0
   506  0187CF  FF                 	db	255
   507  0187D0  00                 	db	0
   508  0187D1  FF                 	db	255
   509  0187D2  00                 	db	0
   510  0187D3  FF                 	db	255
   511  0187D4  00                 	db	0
   512  0187D5  FF                 	db	255
   513  0187D6  00                 	db	0
   514  0187D7  FF                 	db	255
   515  0187D8  00                 	db	0
   516  0187D9  FF                 	db	255
   517  0187DA  00                 	db	0
   518                           
   519                           	psect	idataBANK1
   520  0175D0                     __pidataBANK1:
   521                           	opt callstack 0
   522                           
   523                           ;initializer for _V
   524  0175D0  00                 	db	0
   525  0175D1  00                 	db	0
   526  0175D2  00                 	db	0
   527  0175D3  00                 	db	0
   528  0175D4  00                 	db	0
   529  0175D5  00                 	db	0
   530  0175D6  00                 	db	0
   531  0175D7  00                 	db	0
   532  0175D8  00                 	db	0
   533  0175D9  00                 	db	0
   534  0175DA  00                 	db	0
   535  0175DB  00                 	db	0
   536  0175DC  00                 	db	0
   537  0175DD  00                 	db	0
   538  0175DE  00                 	db	0
   539  0175DF  00                 	db	0
   540  0175E0  00                 	db	0
   541  0175E1  00                 	db	0
   542  0175E2  00                 	db	0
   543  0175E3  00                 	db	0
   544  0175E4  00                 	db	0
   545  0175E5  00                 	db	0
   546  0175E6  00                 	db	0
   547  0175E7  00                 	db	0
   548  0175E8  00                 	db	0
   549  0175E9  00                 	db	0
   550  0175EA  00                 	db	0
   551  0175EB  00                 	db	0
   552  0175EC  00                 	db	0
   553  0175ED  00                 	db	0
   554  0175EE  00                 	db	0
   555  0175EF  00                 	db	0
   556  0175F0  00                 	db	0
   557  0175F1  00                 	db	0
   558  0175F2  00                 	db	0
   559  0175F3  00                 	db	0
   560  0175F4  00                 	db	0
   561  0175F5  00                 	db	0
   562  0175F6  00                 	db	0
   563  0175F7  00                 	db	0
   564  0175F8  00                 	db	0
   565  0175F9  00                 	db	0
   566  0175FA  00                 	db	0
   567  0175FB  00                 	db	0
   568  0175FC  00                 	db	0
   569  0175FD  00                 	db	0
   570  0175FE  00                 	db	0
   571  0175FF  00                 	db	0
   572  017600  00                 	db	0
   573  017601  00                 	db	0
   574  017602  00                 	db	0
   575  017603  00                 	db	0
   576  017604  00                 	db	0
   577  017605  00                 	db	0
   578  017606  00                 	db	0
   579  017607  00                 	db	0
   580  017608  00                 	db	0
   581  017609  00                 	db	0
   582  01760A  00                 	db	0
   583  01760B  00                 	db	0
   584  01760C  00                 	db	0
   585  01760D  00                 	db	0
   586  01760E  00                 	db	0
   587  01760F  00                 	db	0
   588  017610  00                 	db	0
   589  017611  00                 	db	0
   590  017612  00                 	db	0
   591  017613  00                 	db	0
   592  017614  00                 	db	0
   593  017615  00                 	db	0
   594  017616  00                 	db	0
   595  017617  00                 	db	0
   596  017618  00                 	db	0
   597  017619  00                 	db	0
   598  01761A  00                 	db	0
   599  01761B  00                 	db	0
   600  01761C  00                 	db	0
   601  01761D  00                 	db	0
   602  01761E  00                 	db	0
   603  01761F  00                 	db	0
   604  017620  00                 	db	0
   605  017621  00                 	db	0
   606  017622  00                 	db	0
   607  017623  00                 	db	0
   608  017624  00                 	db	0
   609  017625  00                 	db	0
   610  017626  00                 	db	0
   611  017627  00                 	db	0
   612  017628  00                 	db	0
   613  017629  00                 	db	0
   614  01762A  00                 	db	0
   615  01762B  00                 	db	0
   616  01762C  00                 	db	0
   617  01762D  00                 	db	0
   618  01762E  00                 	db	0
   619  01762F  00                 	db	0
   620  017630  00                 	db	0
   621  017631  00                 	db	0
   622  017632  00                 	db	0
   623  017633  00                 	db	0
   624  017634  00                 	db	0
   625  017635  00                 	db	0
   626  017636  00                 	db	0
   627  017637  00                 	db	0
   628  017638  00                 	db	0
   629  017639  00                 	db	0
   630  01763A  00                 	db	0
   631  01763B  00                 	db	0
   632  01763C  00                 	db	0
   633  01763D  00                 	db	0
   634  01763E  00                 	db	0
   635  01763F  00                 	db	0
   636  017640  00                 	db	0
   637  017641  00                 	db	0
   638  017642  00                 	db	0
   639  017643  00                 	db	0
   640  017644  00                 	db	0
   641  017645  00                 	db	0
   642  017646  00                 	db	0
   643  017647  00                 	db	0
   644  017648  00                 	db	0
   645  017649  00                 	db	0
   646  01764A  00                 	db	0
   647  01764B  00                 	db	0
   648  01764C  00                 	db	0
   649  01764D  00                 	db	0
   650  01764E  00                 	db	0
   651  01764F  00                 	db	0
   652  017650  00                 	db	0
   653  017651  0000               	dw	0
   654  017653  0000               	dw	0
   655  017655  0000               	dw	0
   656  017657  0000               	dw	0
   657  017659  00                 	db	0
   658  01765A  00                 	db	0
   659  01765B  00                 	db	0
   660  01765C  00                 	db	0
   661  01765D  00                 	db	0
   662  01765E  00                 	db	0
   663  01765F  0000               	dw	0
   664  017661  0000               	dw	0
   665  017663  0000               	dw	0
   666  017665  0000               	dw	0
   667  017667  0000               	dw	0
   668  017669  0000               	dw	0
   669  01766B  00                 	db	0
   670  01766C  00                 	db	0
   671  01766D  00                 	db	0
   672  01766E  00                 	db	0
   673  01766F  00                 	db	0
   674  017670  00                 	db	0
   675  017671  00                 	db	0
   676  017672  00                 	db	0
   677  017673  00                 	db	0
   678  017674  00                 	db	0
   679  017675  0000               	dw	0
   680  017677  0000               	dw	0
   681  017679  2D                 	db	45
   682  01767A  00                 	db	0
   683  01767B  0000               	dw	0
   684  01767D  0000               	dw	0
   685  01767F  0000               	dw	0
   686  017681  0000               	dw	0
   687  017683  0000               	dw	0
   688  017685  0000               	dw	0
   689  017687  0000               	dw	0
   690  017689  0000               	dw	0
   691  01768B  00                 	db	0
   692  01768C  00                 	db	0
   693  01768D  00                 	db	0
   694  01768E  00                 	db	0
   695  01768F  00                 	db	0
   696  017690  00                 	db	0
   697  017691  00                 	db	0
   698  017692  00                 	db	0
   699  017693  00                 	db	0
   700  017694  00                 	db	0
   701  017695  00                 	db	0
   702  017696  00                 	db	0
   703  017697  00                 	db	0
   704  017698  00                 	db	0
   705  017699  00                 	db	0
   706  01769A  00                 	db	0
   707  01769B  00                 	db	0
   708  01769C  00                 	db	0
   709  01769D  00                 	db	0
   710  01769E  00                 	db	0
   711  01769F  00                 	db	0
   712  0176A0  00                 	db	0
   713  0176A1  00                 	db	0
   714  0176A2  00                 	db	0
   715  0176A3  00                 	db	0
   716  0176A4  00                 	db	0
   717  0176A5  00                 	db	0
   718  0176A6  00                 	db	0
   719  0176A7  00                 	db	0
   720  0176A8  00                 	db	0
   721  0176A9  00                 	db	0
   722  0176AA  00                 	db	0
   723  0176AB  00                 	db	0
   724  0176AC  00                 	db	0
   725  0176AD  00                 	db	0
   726  0176AE  00                 	db	0
   727  0176AF  00                 	db	0
   728  0176B0  00                 	db	0
   729  0176B1  00                 	db	0
   730  0176B2  00                 	db	0
   731                           
   732                           	psect	mediumconst
   733  00FE4E                     __pmediumconst:
   734                           	opt callstack 0
   735  00FE4E  00                 	db	0
   736  00FE4F                     _T:
   737                           	opt callstack 0
   738  00FE4F  63                 	db	99
   739  00FE50  6F                 	db	111
   740  00FE51  6D                 	db	109
   741  00FE52  6D                 	db	109
   742  00FE53  61                 	db	97
   743  00FE54  6E                 	db	110
   744  00FE55  64                 	db	100
   745  00FE56  73                 	db	115
   746  00FE57  20                 	db	32
   747  00FE58  31                 	db	49
   748  00FE59  00                 	db	0
   749  00FE5A  00                 	db	0
   750  00FE5B  00                 	db	0
   751  00FE5C  00                 	db	0
   752  00FE5D  00                 	db	0
   753  00FE5E  00                 	db	0
   754  00FE5F  00                 	db	0
   755  00FE60  00                 	db	0
   756  00FE61  64                 	db	100
   757  00FE62  69                 	db	105
   758  00FE63  73                 	db	115
   759  00FE64  70                 	db	112
   760  00FE65  6C                 	db	108
   761  00FE66  61                 	db	97
   762  00FE67  79                 	db	121
   763  00FE68  73                 	db	115
   764  00FE69  20                 	db	32
   765  00FE6A  31                 	db	49
   766  00FE6B  00                 	db	0
   767  00FE6C  00                 	db	0
   768  00FE6D  00                 	db	0
   769  00FE6E  00                 	db	0
   770  00FE6F  00                 	db	0
   771  00FE70  00                 	db	0
   772  00FE71  00                 	db	0
   773  00FE72  00                 	db	0
   774  00FE73  63                 	db	99
   775  00FE74  6F                 	db	111
   776  00FE75  6D                 	db	109
   777  00FE76  6D                 	db	109
   778  00FE77  61                 	db	97
   779  00FE78  6E                 	db	110
   780  00FE79  64                 	db	100
   781  00FE7A  73                 	db	115
   782  00FE7B  20                 	db	32
   783  00FE7C  32                 	db	50
   784  00FE7D  00                 	db	0
   785  00FE7E  00                 	db	0
   786  00FE7F  00                 	db	0
   787  00FE80  00                 	db	0
   788  00FE81  00                 	db	0
   789  00FE82  00                 	db	0
   790  00FE83  00                 	db	0
   791  00FE84  00                 	db	0
   792  00FE85  64                 	db	100
   793  00FE86  69                 	db	105
   794  00FE87  73                 	db	115
   795  00FE88  70                 	db	112
   796  00FE89  6C                 	db	108
   797  00FE8A  61                 	db	97
   798  00FE8B  79                 	db	121
   799  00FE8C  73                 	db	115
   800  00FE8D  20                 	db	32
   801  00FE8E  32                 	db	50
   802  00FE8F  00                 	db	0
   803  00FE90  00                 	db	0
   804  00FE91  00                 	db	0
   805  00FE92  00                 	db	0
   806  00FE93  00                 	db	0
   807  00FE94  00                 	db	0
   808  00FE95  00                 	db	0
   809  00FE96  00                 	db	0
   810  00FE97  63                 	db	99
   811  00FE98  6F                 	db	111
   812  00FE99  6D                 	db	109
   813  00FE9A  6D                 	db	109
   814  00FE9B  61                 	db	97
   815  00FE9C  6E                 	db	110
   816  00FE9D  64                 	db	100
   817  00FE9E  73                 	db	115
   818  00FE9F  20                 	db	32
   819  00FEA0  33                 	db	51
   820  00FEA1  00                 	db	0
   821  00FEA2  00                 	db	0
   822  00FEA3  00                 	db	0
   823  00FEA4  00                 	db	0
   824  00FEA5  00                 	db	0
   825  00FEA6  00                 	db	0
   826  00FEA7  00                 	db	0
   827  00FEA8  00                 	db	0
   828  00FEA9  64                 	db	100
   829  00FEAA  69                 	db	105
   830  00FEAB  73                 	db	115
   831  00FEAC  70                 	db	112
   832  00FEAD  6C                 	db	108
   833  00FEAE  61                 	db	97
   834  00FEAF  79                 	db	121
   835  00FEB0  73                 	db	115
   836  00FEB1  20                 	db	32
   837  00FEB2  33                 	db	51
   838  00FEB3  00                 	db	0
   839  00FEB4  00                 	db	0
   840  00FEB5  00                 	db	0
   841  00FEB6  00                 	db	0
   842  00FEB7  00                 	db	0
   843  00FEB8  00                 	db	0
   844  00FEB9  00                 	db	0
   845  00FEBA  00                 	db	0
   846  00FEBB  63                 	db	99
   847  00FEBC  6F                 	db	111
   848  00FEBD  6D                 	db	109
   849  00FEBE  6D                 	db	109
   850  00FEBF  61                 	db	97
   851  00FEC0  6E                 	db	110
   852  00FEC1  64                 	db	100
   853  00FEC2  73                 	db	115
   854  00FEC3  20                 	db	32
   855  00FEC4  34                 	db	52
   856  00FEC5  00                 	db	0
   857  00FEC6  00                 	db	0
   858  00FEC7  00                 	db	0
   859  00FEC8  00                 	db	0
   860  00FEC9  00                 	db	0
   861  00FECA  00                 	db	0
   862  00FECB  00                 	db	0
   863  00FECC  00                 	db	0
   864  00FECD  64                 	db	100
   865  00FECE  69                 	db	105
   866  00FECF  73                 	db	115
   867  00FED0  70                 	db	112
   868  00FED1  6C                 	db	108
   869  00FED2  61                 	db	97
   870  00FED3  79                 	db	121
   871  00FED4  73                 	db	115
   872  00FED5  20                 	db	32
   873  00FED6  34                 	db	52
   874  00FED7  00                 	db	0
   875  00FED8  00                 	db	0
   876  00FED9  00                 	db	0
   877  00FEDA  00                 	db	0
   878  00FEDB  00                 	db	0
   879  00FEDC  00                 	db	0
   880  00FEDD  00                 	db	0
   881  00FEDE  00                 	db	0
   882  00FEDF                     __end_of_T:
   883                           	opt callstack 0
   884  0000                     _IVTADL	set	14493
   885  0000                     _IVTADH	set	14494
   886  0000                     _IVTADU	set	14495
   887  0000                     _PIR4bits	set	14756
   888  0000                     _PIE8bits	set	14744
   889  0000                     _PIR8bits	set	14760
   890  0000                     _SCANPR	set	14839
   891  0000                     _DMA2PR	set	14836
   892  0000                     _DMA1PR	set	14835
   893  0000                     _MAINPR	set	14834
   894  0000                     _ISRPR	set	14833
   895  0000                     _PIE2bits	set	14738
   896  0000                     _PIR2bits	set	14754
   897  0000                     _PIE9bits	set	14745
   898  0000                     _PIR9bits	set	14761
   899  0000                     _PIE6bits	set	14742
   900  0000                     _PIE3bits	set	14739
   901  0000                     _PMD7	set	14791
   902  0000                     _PMD6	set	14790
   903  0000                     _PMD5	set	14789
   904  0000                     _PMD4	set	14788
   905  0000                     _PMD3	set	14787
   906  0000                     _PMD2	set	14786
   907  0000                     _PMD1	set	14785
   908  0000                     _PMD0	set	14784
   909  0000                     _OSCTUNE	set	14814
   910  0000                     _OSCFRQ	set	14815
   911  0000                     _OSCEN	set	14813
   912  0000                     _OSCCON3	set	14811
   913  0000                     _OSCCON1	set	14809
   914  0000                     _IPR8bits	set	14728
   915  0000                     _IPR9bits	set	14729
   916  0000                     _IPR5bits	set	14725
   917  0000                     _IPR1bits	set	14721
   918  0000                     _IPR3bits	set	14723
   919  0000                     _IPR6bits	set	14726
   920  0000                     _IPR2bits	set	14722
   921  0000                     _PIE5bits	set	14741
   922  0000                     _PIE1bits	set	14737
   923  0000                     _PIR5bits	set	14757
   924  0000                     _PIR1bits	set	14753
   925  0000                     _PLLR	set	118496
   926  0000                     _SPI1SDIPPS	set	15071
   927  0000                     _U1RXPPS	set	15077
   928  0000                     _RC6PPS	set	14870
   929  0000                     _RC5PPS	set	14869
   930  0000                     _INT1PPS	set	15041
   931  0000                     _RD1PPS	set	14873
   932  0000                     _INT0PPS	set	15040
   933  0000                     _RC3PPS	set	14867
   934  0000                     _RB6PPS	set	14862
   935  0000                     _SPI1SCKPPS	set	15070
   936  0000                     _U2RXPPS	set	15080
   937  0000                     _SLRCONF	set	14995
   938  0000                     _SLRCONE	set	14979
   939  0000                     _SLRCOND	set	14963
   940  0000                     _SLRCONC	set	14947
   941  0000                     _SLRCONB	set	14931
   942  0000                     _SLRCONA	set	14915
   943  0000                     _ODCOND	set	14962
   944  0000                     _ODCONC	set	14946
   945  0000                     _ODCONB	set	14930
   946  0000                     _ODCONA	set	14914
   947  0000                     _ODCONF	set	14994
   948  0000                     _ODCONE	set	14978
   949  0000                     _WPUC	set	14945
   950  0000                     _WPUA	set	14913
   951  0000                     _WPUB	set	14929
   952  0000                     _WPUE	set	14977
   953  0000                     _WPUF	set	14993
   954  0000                     _WPUD	set	14961
   955  0000                     _ANSELA	set	14912
   956  0000                     _ANSELF	set	14992
   957  0000                     _ANSELE	set	14976
   958  0000                     _ANSELB	set	14928
   959  0000                     _ANSELC	set	14944
   960  0000                     _ANSELD	set	14960
   961  0000                     _DMA2SSA	set	15321
   962  0000                     _DMA1SSA	set	15353
   963  0000                     _DMA2DSZ	set	15310
   964  0000                     _DMA2SSZ	set	15319
   965  0000                     _DMA2DSA	set	15312
   966  0000                     _DMA1DSZ	set	15342
   967  0000                     _DMA1SSZ	set	15351
   968  0000                     _DMA1DSA	set	15344
   969  0000                     _DMA1CON0bits	set	15356
   970  0000                     _DMA1CON1bits	set	15357
   971  0000                     _DMA2CON0	set	15324
   972  0000                     _DMA2AIRQ	set	15326
   973  0000                     _DMA2SIRQ	set	15327
   974  0000                     _DMA2CON1	set	15325
   975  0000                     _DMA1CON0	set	15356
   976  0000                     _DMA1AIRQ	set	15358
   977  0000                     _DMA1SIRQ	set	15359
   978  0000                     _DMA1CON1	set	15357
   979  0000                     _CLKRCON	set	15589
   980  0000                     _CLKRCLK	set	15590
   981  0000                     _SPI1INTFbits	set	15642
   982  0000                     _SPI1RXB	set	15632
   983  0000                     _SPI1TXB	set	15633
   984  0000                     _SPI1TCNTL	set	15634
   985  0000                     _SPI1CON0	set	15636
   986  0000                     _SPI1CLK	set	15644
   987  0000                     _SPI1BAUD	set	15641
   988  0000                     _SPI1CON2	set	15638
   989  0000                     _SPI1CON1	set	15637
   990  0000                     _U2RXB	set	15824
   991  0000                     _U2TXB	set	15826
   992  0000                     _U2ERRIE	set	15842
   993  0000                     _U2ERRIR	set	15841
   994  0000                     _U2UIR	set	15840
   995  0000                     _U2FIFO	set	15839
   996  0000                     _U2BRGH	set	15838
   997  0000                     _U2BRGL	set	15837
   998  0000                     _U2CON2	set	15836
   999  0000                     _U2CON1	set	15835
  1000  0000                     _U2CON0	set	15834
  1001  0000                     _U2P3L	set	15832
  1002  0000                     _U2P2L	set	15830
  1003  0000                     _U2P1L	set	15828
  1004  0000                     _U1RXB	set	15848
  1005  0000                     _U1TXB	set	15850
  1006  0000                     _U1ERRIE	set	15866
  1007  0000                     _U1ERRIR	set	15865
  1008  0000                     _U1UIR	set	15864
  1009  0000                     _U1FIFO	set	15863
  1010  0000                     _U1BRGH	set	15862
  1011  0000                     _U1BRGL	set	15861
  1012  0000                     _U1CON2	set	15860
  1013  0000                     _U1CON1	set	15859
  1014  0000                     _U1CON0	set	15858
  1015  0000                     _U1P3H	set	15857
  1016  0000                     _U1P3L	set	15856
  1017  0000                     _U1P2H	set	15855
  1018  0000                     _U1P2L	set	15854
  1019  0000                     _U1P1H	set	15853
  1020  0000                     _U1P1L	set	15852
  1021  0000                     _FVRCON	set	16065
  1022  0000                     _ADFLTRL	set	16102
  1023  0000                     _ADFLTRH	set	16103
  1024  0000                     _ADCON0bits	set	16120
  1025  0000                     _ADCON0	set	16120
  1026  0000                     _ADCLK	set	16127
  1027  0000                     _ADACT	set	16126
  1028  0000                     _ADREF	set	16125
  1029  0000                     _ADSTAT	set	16124
  1030  0000                     _ADCON3	set	16123
  1031  0000                     _ADCON2	set	16122
  1032  0000                     _ADCON1	set	16121
  1033  0000                     _ADPREH	set	16119
  1034  0000                     _ADPREL	set	16118
  1035  0000                     _ADCAP	set	16117
  1036  0000                     _ADACQH	set	16116
  1037  0000                     _ADACQL	set	16115
  1038  0000                     _ADPCH	set	16113
  1039  0000                     _ADRPT	set	16108
  1040  0000                     _ADACCU	set	16106
  1041  0000                     _ADSTPTH	set	16101
  1042  0000                     _ADSTPTL	set	16100
  1043  0000                     _ADUTHH	set	16097
  1044  0000                     _ADUTHL	set	16096
  1045  0000                     _ADLTHH	set	16095
  1046  0000                     _ADLTHL	set	16094
  1047  0000                     _CCPTMRS1bits	set	16223
  1048  0000                     _PORTFbits	set	16335
  1049  0000                     _LATCbits	set	16316
  1050  0000                     _LATDbits	set	16317
  1051  0000                     _PORTBbits	set	16331
  1052  0000                     _T2CON	set	16300
  1053  0000                     _T2TMR	set	16298
  1054  0000                     _T2PR	set	16299
  1055  0000                     _T2RST	set	16303
  1056  0000                     _T2HLT	set	16301
  1057  0000                     _T2CLKCON	set	16302
  1058  0000                     _PWM8DCL	set	16224
  1059  0000                     _PWM8DCH	set	16225
  1060  0000                     _PWM8CON	set	16226
  1061  0000                     _LATEbits	set	16318
  1062  0000                     _T5CONbits	set	16282
  1063  0000                     _T5CON	set	16282
  1064  0000                     _TMR5L	set	16280
  1065  0000                     _TMR5H	set	16281
  1066  0000                     _T5CLK	set	16285
  1067  0000                     _T5GATE	set	16284
  1068  0000                     _T5GCON	set	16283
  1069  0000                     _T6CON	set	16276
  1070  0000                     _T6TMR	set	16274
  1071  0000                     _T6PR	set	16275
  1072  0000                     _T6RST	set	16279
  1073  0000                     _T6HLT	set	16277
  1074  0000                     _T6CLKCON	set	16278
  1075  0000                     _TRISD	set	16325
  1076  0000                     _TRISC	set	16324
  1077  0000                     _TRISB	set	16323
  1078  0000                     _TRISA	set	16322
  1079  0000                     _TRISF	set	16327
  1080  0000                     _TRISE	set	16326
  1081  0000                     _LATC	set	16316
  1082  0000                     _LATB	set	16315
  1083  0000                     _LATF	set	16319
  1084  0000                     _LATA	set	16314
  1085  0000                     _LATD	set	16317
  1086  0000                     _LATE	set	16318
  1087  0000                     _IVTLOCKbits	set	16340
  1088  0000                     _IVTLOCK	set	16340
  1089  0000                     _INTCON0bits	set	16338
  1090  0000                     _GIE	set	130711
  1091  00FEDF                     
  1092                           ; BSR set to: 57
  1093  00FEDF  20                 	db	32
  1094  00FEE0  4D                 	db	77	;'M'
  1095  00FEE1  65                 	db	101	;'e'
  1096  00FEE2  73                 	db	115	;'s'
  1097  00FEE3  67                 	db	103	;'g'
  1098  00FEE4  20                 	db	32
  1099  00FEE5  25                 	db	37
  1100  00FEE6  64                 	db	100	;'d'
  1101  00FEE7  20                 	db	32
  1102  00FEE8  53                 	db	83	;'S'
  1103  00FEE9  74                 	db	116	;'t'
  1104  00FEEA  61                 	db	97	;'a'
  1105  00FEEB  63                 	db	99	;'c'
  1106  00FEEC  6B                 	db	107	;'k'
  1107  00FEED  20                 	db	32
  1108  00FEEE  25                 	db	37
  1109  00FEEF  64                 	db	100	;'d'
  1110  00FEF0  20                 	db	32
  1111  00FEF1  20                 	db	32
  1112  00FEF2  20                 	db	32
  1113  00FEF3  20                 	db	32
  1114  00FEF4  20                 	db	32
  1115  00FEF5  20                 	db	32
  1116  00FEF6  00                 	db	0
  1117  00FEF7                     STR_27:
  1118                           
  1119                           ; BSR set to: 57
  1120  00FEF7  20                 	db	32
  1121  00FEF8  20                 	db	32
  1122  00FEF9  20                 	db	32
  1123  00FEFA  20                 	db	32
  1124  00FEFB  20                 	db	32
  1125  00FEFC  20                 	db	32
  1126  00FEFD  20                 	db	32
  1127  00FEFE  20                 	db	32
  1128  00FEFF  20                 	db	32
  1129  00FF00  20                 	db	32
  1130  00FF01  20                 	db	32
  1131  00FF02  20                 	db	32
  1132  00FF03  20                 	db	32
  1133  00FF04  20                 	db	32
  1134  00FF05  20                 	db	32
  1135  00FF06  20                 	db	32
  1136  00FF07  20                 	db	32
  1137  00FF08  20                 	db	32
  1138  00FF09  00                 	db	0
  1139  00FF0A                     STR_17:
  1140                           
  1141                           ; BSR set to: 57
  1142  00FF0A  48                 	db	72	;'H'
  1143  00FF0B  45                 	db	69	;'E'
  1144  00FF0C  4C                 	db	76	;'L'
  1145  00FF0D  50                 	db	80	;'P'
  1146  00FF0E  20                 	db	32
  1147  00FF0F  25                 	db	37
  1148  00FF10  73                 	db	115	;'s'
  1149  00FF11  20                 	db	32
  1150  00FF12  20                 	db	32
  1151  00FF13  20                 	db	32
  1152  00FF14  20                 	db	32
  1153  00FF15  20                 	db	32
  1154  00FF16  20                 	db	32
  1155  00FF17  20                 	db	32
  1156  00FF18  20                 	db	32
  1157  00FF19  20                 	db	32
  1158  00FF1A  20                 	db	32
  1159  00FF1B  20                 	db	32
  1160  00FF1C  00                 	db	0
  1161  00FF1D                     
  1162                           ; BSR set to: 57
  1163  00FF1D  44                 	db	68	;'D'
  1164  00FF1E  49                 	db	73	;'I'
  1165  00FF1F  53                 	db	83	;'S'
  1166  00FF20  50                 	db	80	;'P'
  1167  00FF21  4C                 	db	76	;'L'
  1168  00FF22  41                 	db	65	;'A'
  1169  00FF23  59                 	db	89	;'Y'
  1170  00FF24  20                 	db	32
  1171  00FF25  25                 	db	37
  1172  00FF26  73                 	db	115	;'s'
  1173  00FF27  20                 	db	32
  1174  00FF28  20                 	db	32
  1175  00FF29  20                 	db	32
  1176  00FF2A  20                 	db	32
  1177  00FF2B  20                 	db	32
  1178  00FF2C  20                 	db	32
  1179  00FF2D  20                 	db	32
  1180  00FF2E  20                 	db	32
  1181  00FF2F  00                 	db	0
  1182  00FF30                     STR_11:
  1183                           
  1184                           ; BSR set to: 57
  1185  00FF30  25                 	db	37
  1186  00FF31  64                 	db	100	;'d'
  1187  00FF32  20                 	db	32
  1188  00FF33  25                 	db	37
  1189  00FF34  32                 	db	50	;'2'
  1190  00FF35  2E                 	db	46
  1191  00FF36  34                 	db	52	;'4'
  1192  00FF37  66                 	db	102	;'f'
  1193  00FF38  2C                 	db	44
  1194  00FF39  20                 	db	32
  1195  00FF3A  25                 	db	37
  1196  00FF3B  6C                 	db	108	;'l'
  1197  00FF3C  75                 	db	117	;'u'
  1198  00FF3D  20                 	db	32
  1199  00FF3E  20                 	db	32
  1200  00FF3F  20                 	db	32
  1201  00FF40  23                 	db	35
  1202  00FF41  00                 	db	0
  1203  00FF42                     STR_8:
  1204                           
  1205                           ; BSR set to: 57
  1206  00FF42  20                 	db	32
  1207  00FF43  56                 	db	86	;'V'
  1208  00FF44  54                 	db	84	;'T'
  1209  00FF45  45                 	db	69	;'E'
  1210  00FF46  52                 	db	82	;'R'
  1211  00FF47  4D                 	db	77	;'M'
  1212  00FF48  20                 	db	32
  1213  00FF49  23                 	db	35
  1214  00FF4A  32                 	db	50	;'2'
  1215  00FF4B  20                 	db	32
  1216  00FF4C  20                 	db	32
  1217  00FF4D  20                 	db	32
  1218  00FF4E  20                 	db	32
  1219  00FF4F  20                 	db	32
  1220  00FF50  20                 	db	32
  1221  00FF51  20                 	db	32
  1222  00FF52  00                 	db	0
  1223  00FF53                     STR_4:
  1224                           
  1225                           ; BSR set to: 57
  1226  00FF53  20                 	db	32
  1227  00FF54  4E                 	db	78	;'N'
  1228  00FF55  53                 	db	83	;'S'
  1229  00FF56  41                 	db	65	;'A'
  1230  00FF57  53                 	db	83	;'S'
  1231  00FF58  50                 	db	80	;'P'
  1232  00FF59  4F                 	db	79	;'O'
  1233  00FF5A  4F                 	db	79	;'O'
  1234  00FF5B  4B                 	db	75	;'K'
  1235  00FF5C  20                 	db	32
  1236  00FF5D  20                 	db	32
  1237  00FF5E  20                 	db	32
  1238  00FF5F  20                 	db	32
  1239  00FF60  20                 	db	32
  1240  00FF61  20                 	db	32
  1241  00FF62  20                 	db	32
  1242  00FF63  00                 	db	0
  1243  00FF64                     STR_1:
  1244                           
  1245                           ; BSR set to: 57
  1246  00FF64  20                 	db	32
  1247  00FF65  4D                 	db	77	;'M'
  1248  00FF66  42                 	db	66	;'B'
  1249  00FF67  4D                 	db	77	;'M'
  1250  00FF68  43                 	db	67	;'C'
  1251  00FF69  20                 	db	32
  1252  00FF6A  53                 	db	83	;'S'
  1253  00FF6B  4F                 	db	79	;'O'
  1254  00FF6C  4C                 	db	76	;'L'
  1255  00FF6D  41                 	db	65	;'A'
  1256  00FF6E  52                 	db	82	;'R'
  1257  00FF6F  4D                 	db	77	;'M'
  1258  00FF70  4F                 	db	79	;'O'
  1259  00FF71  4E                 	db	78	;'N'
  1260  00FF72  20                 	db	32
  1261  00FF73  20                 	db	32
  1262  00FF74  00                 	db	0
  1263  00FF75                     STR_5:
  1264                           
  1265                           ; BSR set to: 57
  1266  00FF75  20                 	db	32
  1267  00FF76  53                 	db	83	;'S'
  1268  00FF77  45                 	db	69	;'E'
  1269  00FF78  51                 	db	81	;'Q'
  1270  00FF79  55                 	db	85	;'U'
  1271  00FF7A  45                 	db	69	;'E'
  1272  00FF7B  4E                 	db	78	;'N'
  1273  00FF7C  43                 	db	67	;'C'
  1274  00FF7D  45                 	db	69	;'E'
  1275  00FF7E  20                 	db	32
  1276  00FF7F  54                 	db	84	;'T'
  1277  00FF80  45                 	db	69	;'E'
  1278  00FF81  53                 	db	83	;'S'
  1279  00FF82  54                 	db	84	;'T'
  1280  00FF83  20                 	db	32
  1281  00FF84  20                 	db	32
  1282  00FF85  00                 	db	0
  1283  00FF86                     STR_21:
  1284                           
  1285                           ; BSR set to: 57
  1286  00FF86  76                 	db	118	;'v'
  1287  00FF87  74                 	db	116	;'t'
  1288  00FF88  65                 	db	101	;'e'
  1289  00FF89  72                 	db	114	;'r'
  1290  00FF8A  6D                 	db	109	;'m'
  1291  00FF8B  20                 	db	32
  1292  00FF8C  25                 	db	37
  1293  00FF8D  78                 	db	120	;'x'
  1294  00FF8E  3A                 	db	58	;':'
  1295  00FF8F  25                 	db	37
  1296  00FF90  78                 	db	120	;'x'
  1297  00FF91  20                 	db	32
  1298  00FF92  20                 	db	32
  1299  00FF93  20                 	db	32
  1300  00FF94  00                 	db	0
  1301  00FF95                     STR_2:
  1302                           
  1303                           ; BSR set to: 57
  1304  00FF95  20                 	db	32
  1305  00FF96  56                 	db	86	;'V'
  1306  00FF97  65                 	db	101	;'e'
  1307  00FF98  72                 	db	114	;'r'
  1308  00FF99  73                 	db	115	;'s'
  1309  00FF9A  69                 	db	105	;'i'
  1310  00FF9B  6F                 	db	111	;'o'
  1311  00FF9C  6E                 	db	110	;'n'
  1312  00FF9D  20                 	db	32
  1313  00FF9E  25                 	db	37
  1314  00FF9F  73                 	db	115	;'s'
  1315  00FFA0  20                 	db	32
  1316  00FFA1  20                 	db	32
  1317  00FFA2  20                 	db	32
  1318  00FFA3  00                 	db	0
  1319  00FFA4                     STR_9:
  1320                           
  1321                           ; BSR set to: 57
  1322  00FFA4  25                 	db	37
  1323  00FFA5  64                 	db	100	;'d'
  1324  00FFA6  20                 	db	32
  1325  00FFA7  25                 	db	37
  1326  00FFA8  32                 	db	50	;'2'
  1327  00FFA9  2E                 	db	46
  1328  00FFAA  34                 	db	52	;'4'
  1329  00FFAB  66                 	db	102	;'f'
  1330  00FFAC  20                 	db	32
  1331  00FFAD  20                 	db	32
  1332  00FFAE  20                 	db	32
  1333  00FFAF  25                 	db	37
  1334  00FFB0  64                 	db	100	;'d'
  1335  00FFB1  00                 	db	0
  1336  00FFB2                     STR_15:
  1337                           
  1338                           ; BSR set to: 57
  1339  00FFB2  4E                 	db	78	;'N'
  1340  00FFB3  6F                 	db	111	;'o'
  1341  00FFB4  76                 	db	118	;'v'
  1342  00FFB5  20                 	db	32
  1343  00FFB6  32                 	db	50	;'2'
  1344  00FFB7  32                 	db	50	;'2'
  1345  00FFB8  20                 	db	32
  1346  00FFB9  32                 	db	50	;'2'
  1347  00FFBA  30                 	db	48	;'0'
  1348  00FFBB  31                 	db	49	;'1'
  1349  00FFBC  39                 	db	57	;'9'
  1350  00FFBD  00                 	db	0
  1351  00FFBE                     STR_19:
  1352                           
  1353                           ; BSR set to: 57
  1354  00FFBE  25                 	db	37
  1355  00FFBF  73                 	db	115	;'s'
  1356  00FFC0  20                 	db	32
  1357  00FFC1  20                 	db	32
  1358  00FFC2  20                 	db	32
  1359  00FFC3  20                 	db	32
  1360  00FFC4  20                 	db	32
  1361  00FFC5  20                 	db	32
  1362  00FFC6  20                 	db	32
  1363  00FFC7  00                 	db	0
  1364  00FFC8                     STR_16:
  1365                           
  1366                           ; BSR set to: 57
  1367  00FFC8  31                 	db	49	;'1'
  1368  00FFC9  39                 	db	57	;'9'
  1369  00FFCA  3A                 	db	58	;':'
  1370  00FFCB  34                 	db	52	;'4'
  1371  00FFCC  31                 	db	49	;'1'
  1372  00FFCD  3A                 	db	58	;':'
  1373  00FFCE  32                 	db	50	;'2'
  1374  00FFCF  35                 	db	53	;'5'
  1375  00FFD0  00                 	db	0
  1376  00FFD1                     STR_3:
  1377                           
  1378                           ; BSR set to: 57
  1379  00FFD1  30                 	db	48	;'0'
  1380  00FFD2  2E                 	db	46
  1381  00FFD3  39                 	db	57	;'9'
  1382  00FFD4  35                 	db	53	;'5'
  1383  00FFD5  00                 	db	0
  1384  00FFD6                     STR_34:
  1385                           
  1386                           ; BSR set to: 57
  1387  00FFD6  49                 	db	73	;'I'
  1388  00FFD7  4E                 	db	78	;'N'
  1389  00FFD8  46                 	db	70	;'F'
  1390  00FFD9  00                 	db	0
  1391  00FFDA                     STR_38:
  1392                           
  1393                           ; BSR set to: 57
  1394  00FFDA  4E                 	db	78	;'N'
  1395  00FFDB  41                 	db	65	;'A'
  1396  00FFDC  4E                 	db	78	;'N'
  1397  00FFDD  00                 	db	0
  1398  00FFDE                     STR_35:
  1399                           
  1400                           ; BSR set to: 57
  1401  00FFDE  69                 	db	105	;'i'
  1402  00FFDF  6E                 	db	110	;'n'
  1403  00FFE0  66                 	db	102	;'f'
  1404  00FFE1  00                 	db	0
  1405  00FFE2                     STR_39:
  1406                           
  1407                           ; BSR set to: 57
  1408  00FFE2  6E                 	db	110	;'n'
  1409  00FFE3  61                 	db	97	;'a'
  1410  00FFE4  6E                 	db	110	;'n'
  1411  00FFE5  00                 	db	0
  1412  00FFE6                     STR_65:
  1413                           
  1414                           ; BSR set to: 57
  1415  00FFE6  6C                 	db	108	;'l'
  1416  00FFE7  58                 	db	88	;'X'
  1417  00FFE8  00                 	db	0
  1418  00FFE9                     STR_42:
  1419                           
  1420                           ; BSR set to: 57
  1421  00FFE9  6C                 	db	108	;'l'
  1422  00FFEA  64                 	db	100	;'d'
  1423  00FFEB  00                 	db	0
  1424  00FFEC                     STR_51:
  1425                           
  1426                           ; BSR set to: 57
  1427  00FFEC  6C                 	db	108	;'l'
  1428  00FFED  66                 	db	102	;'f'
  1429  00FFEE  00                 	db	0
  1430  00FFEF                     STR_46:
  1431                           
  1432                           ; BSR set to: 57
  1433  00FFEF  6C                 	db	108	;'l'
  1434  00FFF0  69                 	db	105	;'i'
  1435  00FFF1  00                 	db	0
  1436  00FFF2                     STR_56:
  1437                           
  1438                           ; BSR set to: 57
  1439  00FFF2  6C                 	db	108	;'l'
  1440  00FFF3  75                 	db	117	;'u'
  1441  00FFF4  00                 	db	0
  1442  00FFF5                     STR_61:
  1443                           
  1444                           ; BSR set to: 57
  1445  00FFF5  6C                 	db	108	;'l'
  1446  00FFF6  78                 	db	120	;'x'
  1447  00FFF7  00                 	db	0
  1448  00FFF8                     STR_13:
  1449                           
  1450                           ; BSR set to: 57
  1451  00FFF8  25                 	db	37
  1452  00FFF9  63                 	db	99	;'c'
  1453  00FFFA  00                 	db	0
  1454  00FFFB                     STR_12:
  1455                           
  1456                           ; BSR set to: 57
  1457  00FFFB  25                 	db	37
  1458  00FFFC  73                 	db	115	;'s'
  1459  00FFFD  00                 	db	0
  1460  0000                     
  1461                           ; #config settings
  1462  00FFFE  00                 	db	0	; dummy byte at the end
  1463  0000                     
  1464                           	psect	cinit
  1465  017788                     __pcinit:
  1466                           	opt callstack 0
  1467  017788                     start_initialization:
  1468                           	opt callstack 0
  1469  017788                     __initialization:
  1470                           	opt callstack 0
  1471                           
  1472                           ; Initialize objects allocated to BANK1 (227 bytes)
  1473                           ; load TBLPTR registers with __pidataBANK1
  1474  017788  0ED0               	movlw	low __pidataBANK1
  1475  01778A  6EF6               	movwf	tblptrl,c
  1476  01778C  0E75               	movlw	high __pidataBANK1
  1477  01778E  6EF7               	movwf	tblptrh,c
  1478  017790  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1479  017792  6EF8               	movwf	tblptru,c
  1480  017794  EE00  F100         	lfsr	0,__pdataBANK1
  1481  017798  EE20 F0E3          	lfsr	2,227
  1482  01779C                     copy_data0:
  1483  01779C  0009               	tblrd		*+
  1484  01779E  006F FFD7 FFEE     	movff	tablat,postinc0
  1485  0177A4  50DD               	movf	postdec2,w,c
  1486  0177A6  50D9               	movf	fsr2l,w,c
  1487  0177A8  E1F9               	bnz	copy_data0
  1488                           
  1489                           ; Initialize objects allocated to BANK0 (63 bytes)
  1490                           ; load TBLPTR registers with __pidataBANK0
  1491  0177AA  0E9C               	movlw	low __pidataBANK0
  1492  0177AC  6EF6               	movwf	tblptrl,c
  1493  0177AE  0E87               	movlw	high __pidataBANK0
  1494  0177B0  6EF7               	movwf	tblptrh,c
  1495  0177B2  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1496  0177B4  6EF8               	movwf	tblptru,c
  1497  0177B6  EE00  F0A6         	lfsr	0,__pdataBANK0
  1498  0177BA  EE20 F03F          	lfsr	2,63
  1499  0177BE                     copy_data1:
  1500  0177BE  0009               	tblrd		*+
  1501  0177C0  006F FFD7 FFEE     	movff	tablat,postinc0
  1502  0177C6  50DD               	movf	postdec2,w,c
  1503  0177C8  50D9               	movf	fsr2l,w,c
  1504  0177CA  E1F9               	bnz	copy_data1
  1505                           
  1506                           ; Clear objects allocated to BANK7 (255 bytes)
  1507  0177CC  EE01  F300         	lfsr	0,__pbssBANK7
  1508  0177D0  EE20 F0FF          	lfsr	2,255
  1509  0177D4                     clear_0:
  1510  0177D4  6AEE               	clrf	postinc0,c
  1511  0177D6  50DD               	movf	postdec2,w,c
  1512  0177D8  50D9               	movf	fsr2l,w,c
  1513  0177DA  E1FC               	bnz	clear_0
  1514  0177DC  50DA               	movf	fsr2h,w,c
  1515  0177DE  E1FA               	bnz	clear_0
  1516                           
  1517                           ; Clear objects allocated to BANK6 (255 bytes)
  1518  0177E0  EE01  F200         	lfsr	0,__pbssBANK6
  1519  0177E4  EE20 F0FF          	lfsr	2,255
  1520  0177E8                     clear_1:
  1521  0177E8  6AEE               	clrf	postinc0,c
  1522  0177EA  50DD               	movf	postdec2,w,c
  1523  0177EC  50D9               	movf	fsr2l,w,c
  1524  0177EE  E1FC               	bnz	clear_1
  1525  0177F0  50DA               	movf	fsr2h,w,c
  1526  0177F2  E1FA               	bnz	clear_1
  1527                           
  1528                           ; Clear objects allocated to BANK5 (218 bytes)
  1529  0177F4  EE01  F100         	lfsr	0,__pbssBANK5
  1530  0177F8  0EDA               	movlw	218
  1531  0177FA                     clear_2:
  1532  0177FA  6AEE               	clrf	postinc0,c
  1533  0177FC  06E8               	decf	wreg,f,c
  1534  0177FE  E1FD               	bnz	clear_2
  1535                           
  1536                           ; Clear objects allocated to BANK4 (67 bytes)
  1537  017800  EE01  F000         	lfsr	0,__pbssBANK4
  1538  017804  0E43               	movlw	67
  1539  017806                     clear_3:
  1540  017806  6AEE               	clrf	postinc0,c
  1541  017808  06E8               	decf	wreg,f,c
  1542  01780A  E1FD               	bnz	clear_3
  1543                           
  1544                           ; Clear objects allocated to BANK3 (195 bytes)
  1545  01780C  EE00  F300         	lfsr	0,__pbssBANK3
  1546  017810  0EC3               	movlw	195
  1547  017812                     clear_4:
  1548  017812  6AEE               	clrf	postinc0,c
  1549  017814  06E8               	decf	wreg,f,c
  1550  017816  E1FD               	bnz	clear_4
  1551                           
  1552                           ; Clear objects allocated to BANK2 (252 bytes)
  1553  017818  EE00  F200         	lfsr	0,__pbssBANK2
  1554  01781C  0EFC               	movlw	252
  1555  01781E                     clear_5:
  1556  01781E  6AEE               	clrf	postinc0,c
  1557  017820  06E8               	decf	wreg,f,c
  1558  017822  E1FD               	bnz	clear_5
  1559                           
  1560                           ; Clear objects allocated to BANK0 (70 bytes)
  1561  017824  EE00  F060         	lfsr	0,__pbssBANK0
  1562  017828  0E46               	movlw	70
  1563  01782A                     clear_6:
  1564  01782A  6AEE               	clrf	postinc0,c
  1565  01782C  06E8               	decf	wreg,f,c
  1566  01782E  E1FD               	bnz	clear_6
  1567                           
  1568                           ; Clear objects allocated to COMRAM (49 bytes)
  1569  017830  EE00  F001         	lfsr	0,__pbssCOMRAM
  1570  017834  0E31               	movlw	49
  1571  017836                     clear_7:
  1572  017836  6AEE               	clrf	postinc0,c
  1573  017838  06E8               	decf	wreg,f,c
  1574  01783A  E1FD               	bnz	clear_7
  1575                           
  1576                           ;
  1577                           ; Setup IVTBASE
  1578                           ;
  1579  01783C  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1580  01783E  6ED5               	movwf	213,c
  1581  017840  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1582  017842  6ED6               	movwf	214,c
  1583  017844  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1584  017846  6ED7               	movwf	215,c
  1585  017848                     end_of_initialization:
  1586                           	opt callstack 0
  1587  017848                     __end_of__initialization:
  1588                           	opt callstack 0
  1589  017848  0100               	movlb	0
  1590  01784A  EFAB  F0A0         	goto	_main	;jump to C main() function
  1591                           
  1592                           	psect	bssCOMRAM
  1593  000001                     __pbssCOMRAM:
  1594                           	opt callstack 0
  1595  000001                     _ADCC_ADTI_InterruptHandler:
  1596                           	opt callstack 0
  1597  000001                     	ds	3
  1598  000004                     _ADCC_ADI_InterruptHandler:
  1599                           	opt callstack 0
  1600  000004                     	ds	3
  1601  000007                     _UART1_TxInterruptHandler:
  1602                           	opt callstack 0
  1603  000007                     	ds	3
  1604  00000A                     _UART1_RxInterruptHandler:
  1605                           	opt callstack 0
  1606  00000A                     	ds	3
  1607  00000D                     _UART2_TxInterruptHandler:
  1608                           	opt callstack 0
  1609  00000D                     	ds	3
  1610  000010                     _UART2_RxInterruptHandler:
  1611                           	opt callstack 0
  1612  000010                     	ds	3
  1613  000013                     _INT1_InterruptHandler:
  1614                           	opt callstack 0
  1615  000013                     	ds	3
  1616  000016                     _INT0_InterruptHandler:
  1617                           	opt callstack 0
  1618  000016                     	ds	3
  1619  000019                     _nout:
  1620                           	opt callstack 0
  1621  000019                     	ds	2
  1622  00001B                     _width:
  1623                           	opt callstack 0
  1624  00001B                     	ds	2
  1625  00001D                     _prec:
  1626                           	opt callstack 0
  1627  00001D                     	ds	2
  1628  00001F                     _flags:
  1629                           	opt callstack 0
  1630  00001F                     	ds	2
  1631  000021                     TMR5_ISR@CountCallBack:
  1632                           	opt callstack 0
  1633  000021                     	ds	2
  1634  000023                     _timer5ReloadVal:
  1635                           	opt callstack 0
  1636  000023                     	ds	2
  1637  000025                     _mode_sw:
  1638                           	opt callstack 0
  1639  000025                     	ds	1
  1640  000026                     _uart2RxCount:
  1641                           	opt callstack 0
  1642  000026                     	ds	1
  1643  000027                     _uart2RxTail:
  1644                           	opt callstack 0
  1645  000027                     	ds	1
  1646  000028                     _uart2RxHead:
  1647                           	opt callstack 0
  1648  000028                     	ds	1
  1649  000029                     _uart2TxBufferRemaining:
  1650                           	opt callstack 0
  1651  000029                     	ds	1
  1652  00002A                     _uart2TxTail:
  1653                           	opt callstack 0
  1654  00002A                     	ds	1
  1655  00002B                     _uart2TxHead:
  1656                           	opt callstack 0
  1657  00002B                     	ds	1
  1658  00002C                     _uart1RxCount:
  1659                           	opt callstack 0
  1660  00002C                     	ds	1
  1661  00002D                     _uart1RxTail:
  1662                           	opt callstack 0
  1663  00002D                     	ds	1
  1664  00002E                     _uart1RxHead:
  1665                           	opt callstack 0
  1666  00002E                     	ds	1
  1667  00002F                     _uart1TxBufferRemaining:
  1668                           	opt callstack 0
  1669  00002F                     	ds	1
  1670  000030                     _uart1TxTail:
  1671                           	opt callstack 0
  1672  000030                     	ds	1
  1673  000031                     _uart1TxHead:
  1674                           	opt callstack 0
  1675  000031                     	ds	1
  1676                           
  1677                           	psect	bssBANK0
  1678  000060                     __pbssBANK0:
  1679                           	opt callstack 0
  1680  000060                     _tickCount:
  1681                           	opt callstack 0
  1682  000060                     	ds	24
  1683  000078                     _spi_link:
  1684                           	opt callstack 0
  1685  000078                     	ds	12
  1686  000084                     floorf@F524:
  1687                           	opt callstack 0
  1688  000084                     	ds	4
  1689  000088                     ___fpclassifyf@F463:
  1690                           	opt callstack 0
  1691  000088                     	ds	4
  1692  00008C                     _utctime:
  1693                           	opt callstack 0
  1694  00008C                     	ds	4
  1695  000090                     wdtdelay@dcount:
  1696                           	opt callstack 0
  1697  000090                     	ds	4
  1698  000094                     _P:
  1699                           	opt callstack 0
  1700  000094                     	ds	4
  1701  000098                     _TMR5_InterruptHandler:
  1702                           	opt callstack 0
  1703  000098                     	ds	3
  1704  00009B                     _TMR6_InterruptHandler:
  1705                           	opt callstack 0
  1706  00009B                     	ds	3
  1707  00009E                     _seed:
  1708                           	opt callstack 0
  1709  00009E                     	ds	8
  1710                           
  1711                           	psect	dataBANK0
  1712  0000A6                     __pdataBANK0:
  1713                           	opt callstack 0
  1714  0000A6                     _R:
  1715                           	opt callstack 0
  1716  0000A6                     	ds	40
  1717  0000CE                     stoa@F1166:
  1718                           	opt callstack 0
  1719  0000CE                     	ds	7
  1720  0000D5                     _port_data:
  1721                           	opt callstack 0
  1722  0000D5                     	ds	16
  1723                           
  1724                           	psect	dataBANK1
  1725  000100                     __pdataBANK1:
  1726                           	opt callstack 0
  1727  000100                     _V:
  1728                           	opt callstack 0
  1729  000100                     	ds	227
  1730                           
  1731                           	psect	bssBANK2
  1732  000200                     __pbssBANK2:
  1733                           	opt callstack 0
  1734  000200                     _C:
  1735                           	opt callstack 0
  1736  000200                     	ds	108
  1737  00026C                     lp_filter@smooth:
  1738                           	opt callstack 0
  1739  00026C                     	ds	64
  1740  0002AC                     _dbuf:
  1741                           	opt callstack 0
  1742  0002AC                     	ds	80
  1743                           
  1744                           	psect	bssBANK3
  1745  000300                     __pbssBANK3:
  1746                           	opt callstack 0
  1747  000300                     _uart2TxBuffer:
  1748                           	opt callstack 0
  1749  000300                     	ds	64
  1750  000340                     _uart1TxBuffer:
  1751                           	opt callstack 0
  1752  000340                     	ds	64
  1753  000380                     _ring_buf1:
  1754                           	opt callstack 0
  1755  000380                     	ds	67
  1756                           
  1757                           	psect	bssBANK4
  1758  000400                     __pbssBANK4:
  1759                           	opt callstack 0
  1760  000400                     _ring_buf2:
  1761                           	opt callstack 0
  1762  000400                     	ds	67
  1763                           
  1764                           	psect	bssBANK5
  1765  000500                     __pbssBANK5:
  1766                           	opt callstack 0
  1767  000500                     _D:
  1768                           	opt callstack 0
  1769  000500                     	ds	218
  1770                           
  1771                           	psect	bssBANK6
  1772  000600                     __pbssBANK6:
  1773                           	opt callstack 0
  1774  000600                     _uart1RxBuffer:
  1775                           	opt callstack 0
  1776  000600                     	ds	255
  1777                           
  1778                           	psect	bssBANK7
  1779  000700                     __pbssBANK7:
  1780                           	opt callstack 0
  1781  000700                     _uart2RxBuffer:
  1782                           	opt callstack 0
  1783  000700                     	ds	255
  1784                           
  1785                           	psect	cstackBANK0
  1786  0000E5                     __pcstackBANK0:
  1787                           	opt callstack 0
  1788  0000E5                     ??_INT1_ISR:
  1789                           
  1790                           ; 1 bytes @ 0x0
  1791  0000E5                     	ds	4
  1792  0000E9                     ??_TMR5_ISR:
  1793                           
  1794                           ; 1 bytes @ 0x4
  1795  0000E9                     	ds	4
  1796                           
  1797                           	psect	cstackCOMRAM
  1798  000052                     __pcstackCOMRAM:
  1799                           	opt callstack 0
  1800  000052                     ??_ADCC_ThresholdISR:
  1801  000052                     
  1802                           ; 1 bytes @ 0x0
  1803  000052                     	ds	5
  1804  000057                     ??_TMR6_ISR:
  1805                           
  1806                           ; 1 bytes @ 0x5
  1807  000057                     	ds	1
  1808  000058                     
  1809                           ; 1 bytes @ 0x6
  1810 ;;
  1811 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1812 ;;
  1813 ;; *************** function _main *****************
  1814 ;; Defined at:
  1815 ;;		line 157 in file "main.c"
  1816 ;; Parameters:    Size  Location     Type
  1817 ;;		None
  1818 ;; Auto vars:     Size  Location     Type
  1819 ;;  mode            1  [STACK] enum E17005
  1820 ;; Return value:  Size  Location     Type
  1821 ;;                  1  [STACK] void 
  1822 ;; Registers used:
  1823 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  1824 ;; Tracked objects:
  1825 ;;		On entry : 0/0
  1826 ;;		On exit  : 1/1
  1827 ;;		Unchanged: 0/0
  1828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1833 ;;Total ram usage:        0 bytes
  1834 ;; Hardware stack levels required when called:   19
  1835 ;; This function calls:
  1836 ;;		_SYSTEM_Initialize
  1837 ;;		_StartTimer
  1838 ;;		_TimerDone
  1839 ;;		_WaitMs
  1840 ;;		_check_adc_scan
  1841 ;;		_check_help
  1842 ;;		_clear_adc_scan
  1843 ;;		_convert_adc_data
  1844 ;;		_eaDogM_WriteCommand
  1845 ;;		_get_raw_result
  1846 ;;		_get_vterm_ptr
  1847 ;;		_init_display
  1848 ;;		_mode_lamp_dim
  1849 ;;		_set_display_info
  1850 ;;		_set_vterm
  1851 ;;		_sprintf
  1852 ;;		_srand
  1853 ;;		_start_adc_scan
  1854 ;;		_start_switch_handler
  1855 ;;		_update_lcd
  1856 ;; This function is called by:
  1857 ;;		Startup code after reset
  1858 ;; This function uses a reentrant model
  1859 ;;
  1860                           
  1861                           	psect	text0
  1862  014156                     __ptext0:
  1863                           	opt callstack 0
  1864  014156                     _main:
  1865                           	opt callstack 0
  1866                           
  1867                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1868  014156  52E6               	movf	postinc1,f,c
  1869                           
  1870                           ;main.c: 159:  UI_STATES mode;;main.c: 162:  SYSTEM_Initialize();
  1871                           
  1872                           ;incstack = 0
  1873  014158  EC02  F0C3         	call	_SYSTEM_Initialize	;wreg free
  1874                           
  1875                           ; BSR set to: 60
  1876                           ;main.c: 165:  (INTCON0bits.GIEH = 1);
  1877  01415C  8ED2               	bsf	210,7,c	;volatile
  1878                           
  1879                           ; BSR set to: 60
  1880                           ;main.c: 168:  (INTCON0bits.GIEL = 1);
  1881  01415E  8CD2               	bsf	210,6,c	;volatile
  1882                           
  1883                           ; BSR set to: 60
  1884                           ;main.c: 170:  V.ui_state = UI_STATE_INIT;
  1885  014160  0101               	movlb	1	; () banked
  1886  014162  6B00               	clrf	_V& (0+255),b	;volatile
  1887                           
  1888                           ; BSR set to: 1
  1889                           ;main.c: 175:  WaitMs(300);
  1890  014164  0E2C               	movlw	44
  1891  014166  6EE6               	movwf	postinc1,c
  1892  014168  0E01               	movlw	1
  1893  01416A  6EE6               	movwf	postinc1,c
  1894  01416C  EC47  F0C4         	call	_WaitMs	;wreg free
  1895                           
  1896                           ;main.c: 176:  if (PORTBbits.RB0) {
  1897  014170  A0CB               	btfss	203,0,c	;volatile
  1898  014172  D004               	goto	l10537
  1899                           
  1900                           ;main.c: 177:   mode = UI_STATE_HOST;
  1901                           ;stkvar	_mode @ sp[(-1)+0]
  1902  014174  0EFF               	movlw	-1
  1903  014176  6AE3               	clrf	plusw1,c
  1904  014178  2AE3               	incf	plusw1,f,c
  1905                           
  1906                           ;main.c: 178:  } else {
  1907  01417A  D004               	goto	l10539
  1908  01417C                     l10537:
  1909                           
  1910                           ;main.c: 179:   mode = UI_STATE_LOG;
  1911                           ;stkvar	_mode @ sp[(-1)+0]
  1912  01417C  0EFF               	movlw	-1
  1913  01417E  6AE3               	clrf	plusw1,c
  1914  014180  80E3               	bsf	plusw1,0,c
  1915  014182  82E3               	bsf	plusw1,1,c	;indir
  1916  014184                     l10539:
  1917                           
  1918                           ;main.c: 182:  if (mode == UI_STATE_HOST) {
  1919                           ;stkvar	_mode @ sp[(-1)+0]
  1920  014184  0EFF               	movlw	-1
  1921  014186  04E3               	decf	plusw1,w,c
  1922  014188  A4D8               	btfss	status,2,c
  1923  01418A  D007               	goto	l1244
  1924                           
  1925                           ;main.c: 183:   do { LATDbits.LATD0 = 1; } while(0);
  1926  01418C  80BD               	bsf	189,0,c	;volatile
  1927                           
  1928                           ;main.c: 184:   V.mode_pwm = 70;
  1929  01418E  0E00               	movlw	0
  1930  014190  0101               	movlb	1	; () banked
  1931  014192  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  1932  014194  0E46               	movlw	70
  1933  014196  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  1934                           
  1935                           ;main.c: 185:  } else {
  1936  014198  D004               	goto	l10543
  1937  01419A                     l1244:
  1938  01419A  90BD               	bcf	189,0,c	;volatile
  1939                           
  1940                           ;main.c: 187:   V.mode_pwm = 0;
  1941  01419C  0101               	movlb	1	; () banked
  1942  01419E  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  1943  0141A0  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  1944  0141A2                     l10543:
  1945                           
  1946                           ; BSR set to: 1
  1947                           ;main.c: 189:  mode_lamp_dim(V.mode_pwm);
  1948  0141A2  0060  F657  FFE6   	movff	_V+149,postinc1
  1949  0141A8  0060  F65B  FFE6   	movff	_V+150,postinc1
  1950  0141AE  ECB5  F0C7         	call	_mode_lamp_dim	;wreg free
  1951  0141B2  D0D0               	goto	l10587
  1952  0141B4                     l10545:
  1953                           
  1954                           ; BSR set to: 1
  1955                           ;main.c: 200:    init_display();
  1956  0141B4  EC73  F0BA         	call	_init_display	;wreg free
  1957                           
  1958                           ; BSR set to: 61
  1959                           ;main.c: 201:    eaDogM_WriteCommand(0b00001100);
  1960  0141B8  0E0C               	movlw	12
  1961  0141BA  6EE6               	movwf	postinc1,c
  1962  0141BC  EC09  F0C8         	call	_eaDogM_WriteCommand	;wreg free
  1963                           
  1964                           ; BSR set to: 0
  1965                           ;main.c: 203:    V.ui_state = mode;
  1966                           ;stkvar	_mode @ sp[(-1)+0]
  1967  0141C0  0EFF               	movlw	-1
  1968  0141C2  006F FF8C  F100    	movff	plusw1,_V	;volatile
  1969                           
  1970                           ; BSR set to: 0
  1971                           ;main.c: 204:    srand(1957);
  1972  0141C8  0EA5               	movlw	165
  1973  0141CA  6EE6               	movwf	postinc1,c
  1974  0141CC  0E07               	movlw	7
  1975  0141CE  6EE6               	movwf	postinc1,c
  1976  0141D0  EC7D  F0C4         	call	_srand	;wreg free
  1977                           
  1978                           ; BSR set to: 0
  1979                           ;main.c: 205:    set_vterm(0);
  1980  0141D4  0E00               	movlw	0
  1981  0141D6  6EE6               	movwf	postinc1,c
  1982  0141D8  EC80  F0C7         	call	_set_vterm	;wreg free
  1983                           
  1984                           ; BSR set to: 5
  1985                           ;main.c: 206:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  1986  0141DC  0E64               	movlw	low STR_1
  1987  0141DE  6EE6               	movwf	postinc1,c
  1988  0141E0  0EFF               	movlw	high STR_1
  1989  0141E2  6EE6               	movwf	postinc1,c
  1990  0141E4  0E00               	movlw	0
  1991  0141E6  6EE6               	movwf	postinc1,c
  1992  0141E8  0E00               	movlw	0
  1993  0141EA  6EE6               	movwf	postinc1,c
  1994  0141EC  ECF9  F0C4         	call	_get_vterm_ptr	;wreg free
  1995  0141F0  0060  F0CB  FFE6   	movff	btemp,postinc1
  1996  0141F6  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  1997  0141FC  0E04               	movlw	4
  1998  0141FE  6EE6               	movwf	postinc1,c
  1999  014200  ECEE  F0B9         	call	_sprintf	;wreg free
  2000                           
  2001                           ;main.c: 207:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.95");
  2002  014204  0ED1               	movlw	low STR_3
  2003  014206  6EE6               	movwf	postinc1,c
  2004  014208  0EFF               	movlw	high STR_3
  2005  01420A  6EE6               	movwf	postinc1,c
  2006  01420C  0E95               	movlw	low STR_2
  2007  01420E  6EE6               	movwf	postinc1,c
  2008  014210  0EFF               	movlw	high STR_2
  2009  014212  6EE6               	movwf	postinc1,c
  2010  014214  0E00               	movlw	0
  2011  014216  6EE6               	movwf	postinc1,c
  2012  014218  0E01               	movlw	1
  2013  01421A  6EE6               	movwf	postinc1,c
  2014  01421C  ECF9  F0C4         	call	_get_vterm_ptr	;wreg free
  2015  014220  0060  F0CB  FFE6   	movff	btemp,postinc1
  2016  014226  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2017  01422C  0E06               	movlw	6
  2018  01422E  6EE6               	movwf	postinc1,c
  2019  014230  ECEE  F0B9         	call	_sprintf	;wreg free
  2020                           
  2021                           ;main.c: 208:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  2022  014234  0E53               	movlw	low STR_4
  2023  014236  6EE6               	movwf	postinc1,c
  2024  014238  0EFF               	movlw	high STR_4
  2025  01423A  6EE6               	movwf	postinc1,c
  2026  01423C  0E00               	movlw	0
  2027  01423E  6EE6               	movwf	postinc1,c
  2028  014240  0E02               	movlw	2
  2029  014242  6EE6               	movwf	postinc1,c
  2030  014244  ECF9  F0C4         	call	_get_vterm_ptr	;wreg free
  2031  014248  0060  F0CB  FFE6   	movff	btemp,postinc1
  2032  01424E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2033  014254  0E04               	movlw	4
  2034  014256  6EE6               	movwf	postinc1,c
  2035  014258  ECEE  F0B9         	call	_sprintf	;wreg free
  2036                           
  2037                           ;main.c: 209:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  2038  01425C  0E75               	movlw	low STR_5
  2039  01425E  6EE6               	movwf	postinc1,c
  2040  014260  0EFF               	movlw	high STR_5
  2041  014262  6EE6               	movwf	postinc1,c
  2042  014264  0E02               	movlw	2
  2043  014266  6EE6               	movwf	postinc1,c
  2044  014268  0E00               	movlw	0
  2045  01426A  6EE6               	movwf	postinc1,c
  2046  01426C  ECF9  F0C4         	call	_get_vterm_ptr	;wreg free
  2047  014270  0060  F0CB  FFE6   	movff	btemp,postinc1
  2048  014276  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2049  01427C  0E04               	movlw	4
  2050  01427E  6EE6               	movwf	postinc1,c
  2051  014280  ECEE  F0B9         	call	_sprintf	;wreg free
  2052                           
  2053                           ;main.c: 210:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.95");
  2054  014284  0ED1               	movlw	low STR_3
  2055  014286  6EE6               	movwf	postinc1,c
  2056  014288  0EFF               	movlw	high STR_3
  2057  01428A  6EE6               	movwf	postinc1,c
  2058  01428C  0E95               	movlw	low STR_2
  2059  01428E  6EE6               	movwf	postinc1,c
  2060  014290  0EFF               	movlw	high STR_2
  2061  014292  6EE6               	movwf	postinc1,c
  2062  014294  0E02               	movlw	2
  2063  014296  6EE6               	movwf	postinc1,c
  2064  014298  0E01               	movlw	1
  2065  01429A  6EE6               	movwf	postinc1,c
  2066  01429C  ECF9  F0C4         	call	_get_vterm_ptr	;wreg free
  2067  0142A0  0060  F0CB  FFE6   	movff	btemp,postinc1
  2068  0142A6  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2069  0142AC  0E06               	movlw	6
  2070  0142AE  6EE6               	movwf	postinc1,c
  2071  0142B0  ECEE  F0B9         	call	_sprintf	;wreg free
  2072                           
  2073                           ;main.c: 211:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  2074  0142B4  0E42               	movlw	low STR_8
  2075  0142B6  6EE6               	movwf	postinc1,c
  2076  0142B8  0EFF               	movlw	high STR_8
  2077  0142BA  6EE6               	movwf	postinc1,c
  2078  0142BC  0E02               	movlw	2
  2079  0142BE  6EE6               	movwf	postinc1,c
  2080  0142C0  0E02               	movlw	2
  2081  0142C2  6EE6               	movwf	postinc1,c
  2082  0142C4  ECF9  F0C4         	call	_get_vterm_ptr	;wreg free
  2083  0142C8  0060  F0CB  FFE6   	movff	btemp,postinc1
  2084  0142CE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2085  0142D4  0E04               	movlw	4
  2086  0142D6  6EE6               	movwf	postinc1,c
  2087  0142D8  ECEE  F0B9         	call	_sprintf	;wreg free
  2088                           
  2089                           ;main.c: 212:    update_lcd(0);
  2090  0142DC  0E00               	movlw	0
  2091  0142DE  6EE6               	movwf	postinc1,c
  2092  0142E0  EC67  F0B9         	call	_update_lcd	;wreg free
  2093                           
  2094                           ;main.c: 213:    WaitMs(3000);
  2095  0142E4  0EB8               	movlw	184
  2096  0142E6  6EE6               	movwf	postinc1,c
  2097  0142E8  0E0B               	movlw	11
  2098  0142EA  6EE6               	movwf	postinc1,c
  2099  0142EC  EC47  F0C4         	call	_WaitMs	;wreg free
  2100                           
  2101                           ;main.c: 214:    StartTimer(TMR_DISPLAY, 250);
  2102  0142F0  0EFA               	movlw	250
  2103  0142F2  6EE6               	movwf	postinc1,c
  2104  0142F4  0E00               	movlw	0
  2105  0142F6  6EE6               	movwf	postinc1,c
  2106  0142F8  0E0A               	movlw	10
  2107  0142FA  6EE6               	movwf	postinc1,c
  2108  0142FC  EC0D  F0C4         	call	_StartTimer	;wreg free
  2109                           
  2110                           ;main.c: 215:    StartTimer(TMR_ADC, 500);
  2111  014300  0EF4               	movlw	244
  2112  014302  6EE6               	movwf	postinc1,c
  2113  014304  0E01               	movlw	1
  2114  014306  6EE6               	movwf	postinc1,c
  2115  014308  0E01               	movlw	1
  2116  01430A  6EE6               	movwf	postinc1,c
  2117  01430C  EC0D  F0C4         	call	_StartTimer	;wreg free
  2118                           
  2119                           ;main.c: 216:    StartTimer(TMR_INFO, 3000);
  2120  014310  0EB8               	movlw	184
  2121  014312  6EE6               	movwf	postinc1,c
  2122  014314  0E0B               	movlw	11
  2123  014316  6EE6               	movwf	postinc1,c
  2124  014318  0E07               	movlw	7
  2125  01431A  6EE6               	movwf	postinc1,c
  2126  01431C  EC0D  F0C4         	call	_StartTimer	;wreg free
  2127                           
  2128                           ;main.c: 217:    StartTimer(TMR_FLIPPER, 1500);
  2129  014320  0EDC               	movlw	220
  2130  014322  6EE6               	movwf	postinc1,c
  2131  014324  0E05               	movlw	5
  2132  014326  6EE6               	movwf	postinc1,c
  2133  014328  0E0B               	movlw	11
  2134  01432A  6EE6               	movwf	postinc1,c
  2135  01432C  EC0D  F0C4         	call	_StartTimer	;wreg free
  2136                           
  2137                           ;main.c: 218:    StartTimer(TMR_HELPDIS, 3000);
  2138  014330  0EB8               	movlw	184
  2139  014332  6EE6               	movwf	postinc1,c
  2140  014334  0E0B               	movlw	11
  2141  014336  6EE6               	movwf	postinc1,c
  2142  014338  0E09               	movlw	9
  2143  01433A  6EE6               	movwf	postinc1,c
  2144  01433C  EC0D  F0C4         	call	_StartTimer	;wreg free
  2145                           
  2146                           ;main.c: 220:    start_adc_scan();
  2147  014340  ECC9  F0C0         	call	_start_adc_scan	;wreg free
  2148                           
  2149                           ;main.c: 221:    start_switch_handler();
  2150  014344  EC8E  F0C7         	call	_start_switch_handler	;wreg free
  2151                           
  2152                           ;main.c: 223:    break;
  2153  014348  D01C               	goto	l10589
  2154  01434A                     l1252:
  2155                           
  2156                           ; BSR set to: 1
  2157                           ;main.c: 229:    P.SYSTEM_STABLE = 1;
  2158  01434A  0100               	movlb	0	; () banked
  2159  01434C  8195               	bsf	(_P+1)& (0+255),0,b	;volatile
  2160                           
  2161                           ;main.c: 230:    break;
  2162  01434E  D019               	goto	l10589
  2163  014350                     l1254:
  2164                           
  2165                           ; BSR set to: 1
  2166                           ;main.c: 233:    V.ui_state = UI_STATE_INIT;
  2167  014350  6B00               	clrf	_V& (0+255),b	;volatile
  2168                           
  2169                           ;main.c: 234:    break;
  2170  014352  D017               	goto	l10589
  2171  014354                     l10587:
  2172  014354  0101               	movlb	1	; () banked
  2173  014356  5100               	movf	_V& (0+255),w,b	;volatile
  2174  014358  6E3C               	movwf	(btemp+10)^0,c
  2175  01435A  6A3D               	clrf	(btemp+11)^0,c
  2176                           
  2177                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2178                           ; Switch size 1, requested type "simple"
  2179                           ; Number of cases is 1, Range of values is 0 to 0
  2180                           ; switch strategies available:
  2181                           ; Name         Instructions Cycles
  2182                           ; simple_byte            4     3 (average)
  2183                           ;	Chosen strategy is simple_byte
  2184  01435C  503D               	movf	(btemp+11)^0,w,c
  2185  01435E  0A00               	xorlw	0	; case 0
  2186  014360  A4D8               	btfss	status,2,c
  2187  014362  D7F6               	goto	l1254
  2188                           
  2189                           ; BSR set to: 1
  2190                           ; Switch size 1, requested type "simple"
  2191                           ; Number of cases is 5, Range of values is 0 to 5
  2192                           ; switch strategies available:
  2193                           ; Name         Instructions Cycles
  2194                           ; simple_byte           16     9 (average)
  2195                           ;	Chosen strategy is simple_byte
  2196  014364  503C               	movf	(btemp+10)^0,w,c
  2197  014366  0A00               	xorlw	0	; case 0
  2198  014368  B4D8               	btfsc	status,2,c
  2199  01436A  D724               	goto	l10545
  2200  01436C  0A01               	xorlw	1	; case 1
  2201  01436E  B4D8               	btfsc	status,2,c
  2202  014370  D008               	goto	l10589
  2203  014372  0A02               	xorlw	2	; case 3
  2204  014374  B4D8               	btfsc	status,2,c
  2205  014376  D005               	goto	l10589
  2206  014378  0A07               	xorlw	7	; case 4
  2207  01437A  B4D8               	btfsc	status,2,c
  2208  01437C  D7E6               	goto	l1252
  2209  01437E  0A01               	xorlw	1	; case 5
  2210  014380  D7E7               	goto	l1254
  2211  014382                     l10589:
  2212                           
  2213                           ;main.c: 237:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  2214  014382  0E01               	movlw	1
  2215  014384  6EE6               	movwf	postinc1,c
  2216  014386  ECCF  F0C6         	call	_TimerDone	;wreg free
  2217  01438A  5032               	movf	btemp^0,w,c
  2218  01438C  B4D8               	btfsc	status,2,c
  2219  01438E  D013               	goto	l10601
  2220  014390  EC49  F0C8         	call	_check_adc_scan	;wreg free
  2221  014394  5032               	movf	btemp^0,w,c
  2222  014396  B4D8               	btfsc	status,2,c
  2223  014398  D00E               	goto	l10601
  2224                           
  2225                           ;main.c: 241:    convert_adc_data();
  2226  01439A  ECBB  F0BF         	call	_convert_adc_data	;wreg free
  2227                           
  2228                           ;main.c: 245:    clear_adc_scan();
  2229  01439E  EC51  F0C8         	call	_clear_adc_scan	;wreg free
  2230                           
  2231                           ; BSR set to: 0
  2232                           ;main.c: 246:    start_adc_scan();
  2233  0143A2  ECC9  F0C0         	call	_start_adc_scan	;wreg free
  2234                           
  2235                           ;main.c: 247:    StartTimer(TMR_ADC, 500);
  2236  0143A6  0EF4               	movlw	244
  2237  0143A8  6EE6               	movwf	postinc1,c
  2238  0143AA  0E01               	movlw	1
  2239  0143AC  6EE6               	movwf	postinc1,c
  2240  0143AE  0E01               	movlw	1
  2241  0143B0  6EE6               	movwf	postinc1,c
  2242  0143B2  EC0D  F0C4         	call	_StartTimer	;wreg free
  2243  0143B6                     l10601:
  2244                           
  2245                           ;main.c: 254:   if (TimerDone(TMR_DISPLAY)) {
  2246                           
  2247                           ;main.c: 250:   if (V.ticks) {
  2248  0143B6  0E0A               	movlw	10
  2249  0143B8  6EE6               	movwf	postinc1,c
  2250  0143BA  ECCF  F0C6         	call	_TimerDone	;wreg free
  2251  0143BE  5032               	movf	btemp^0,w,c
  2252  0143C0  B4D8               	btfsc	status,2,c
  2253  0143C2  D0AB               	goto	l10619
  2254                           
  2255                           ;main.c: 255:    if (TimerDone(TMR_HELPDIS)) {
  2256  0143C4  0E09               	movlw	9
  2257  0143C6  6EE6               	movwf	postinc1,c
  2258  0143C8  ECCF  F0C6         	call	_TimerDone	;wreg free
  2259  0143CC  5032               	movf	btemp^0,w,c
  2260  0143CE  B4D8               	btfsc	status,2,c
  2261  0143D0  D004               	goto	l10609
  2262                           
  2263                           ;main.c: 256:     set_display_info(DIS_STR);
  2264  0143D2  0E00               	movlw	0
  2265  0143D4  6EE6               	movwf	postinc1,c
  2266  0143D6  EC45  F0C7         	call	_set_display_info	;wreg free
  2267  0143DA                     l10609:
  2268                           
  2269                           ;main.c: 258:    sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d", get_raw_result(C_BATT), C
      +                          .calc[C_BATT], V.button[SSELECT].sw);
  2270  0143DA  0101               	movlb	1	; () banked
  2271  0143DC  51C5               	movf	(_V+197)& (0+255),w,b	;volatile
  2272  0143DE  6EE6               	movwf	postinc1,c
  2273  0143E0  0E00               	movlw	0
  2274  0143E2  6EE6               	movwf	postinc1,c
  2275  0143E4  0060  F803  FFE6   	movff	_C,postinc1
  2276  0143EA  0060  F807  FFE6   	movff	_C+1,postinc1
  2277  0143F0  0060  F80B  FFE6   	movff	_C+2,postinc1
  2278  0143F6  0060  F80F  FFE6   	movff	_C+3,postinc1
  2279  0143FC  0E00               	movlw	0
  2280  0143FE  6EE6               	movwf	postinc1,c
  2281  014400  EC36  F0C7         	call	_get_raw_result	;wreg free
  2282  014404  0060  F0CB  FFE6   	movff	btemp,postinc1
  2283  01440A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2284  014410  0EA4               	movlw	low STR_9
  2285  014412  6EE6               	movwf	postinc1,c
  2286  014414  0EFF               	movlw	high STR_9
  2287  014416  6EE6               	movwf	postinc1,c
  2288  014418  0E00               	movlw	0
  2289  01441A  6EE6               	movwf	postinc1,c
  2290  01441C  0E00               	movlw	0
  2291  01441E  6EE6               	movwf	postinc1,c
  2292  014420  ECF9  F0C4         	call	_get_vterm_ptr	;wreg free
  2293  014424  0060  F0CB  FFE6   	movff	btemp,postinc1
  2294  01442A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2295  014430  0E0C               	movlw	12
  2296  014432  6EE6               	movwf	postinc1,c
  2297  014434  ECEE  F0B9         	call	_sprintf	;wreg free
  2298                           
  2299                           ;main.c: 259:    sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d", get_raw_result(C_PV), C.c
      +                          alc[C_PV], V.button[SENTER].sw);
  2300  014438  0101               	movlb	1	; () banked
  2301  01443A  51CA               	movf	(_V+202)& (0+255),w,b	;volatile
  2302  01443C  6EE6               	movwf	postinc1,c
  2303  01443E  0E00               	movlw	0
  2304  014440  6EE6               	movwf	postinc1,c
  2305  014442  0060  F813  FFE6   	movff	_C+4,postinc1
  2306  014448  0060  F817  FFE6   	movff	_C+5,postinc1
  2307  01444E  0060  F81B  FFE6   	movff	_C+6,postinc1
  2308  014454  0060  F81F  FFE6   	movff	_C+7,postinc1
  2309  01445A  0E01               	movlw	1
  2310  01445C  6EE6               	movwf	postinc1,c
  2311  01445E  EC36  F0C7         	call	_get_raw_result	;wreg free
  2312  014462  0060  F0CB  FFE6   	movff	btemp,postinc1
  2313  014468  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2314  01446E  0EA4               	movlw	low STR_9
  2315  014470  6EE6               	movwf	postinc1,c
  2316  014472  0EFF               	movlw	high STR_9
  2317  014474  6EE6               	movwf	postinc1,c
  2318  014476  0E00               	movlw	0
  2319  014478  6EE6               	movwf	postinc1,c
  2320  01447A  0E01               	movlw	1
  2321  01447C  6EE6               	movwf	postinc1,c
  2322  01447E  ECF9  F0C4         	call	_get_vterm_ptr	;wreg free
  2323  014482  0060  F0CB  FFE6   	movff	btemp,postinc1
  2324  014488  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2325  01448E  0E0C               	movlw	12
  2326  014490  6EE6               	movwf	postinc1,c
  2327  014492  ECEE  F0B9         	call	_sprintf	;wreg free
  2328                           
  2329                           ;main.c: 260:    sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %lu   #", get_raw_result(V_CC),
      +                           C.calc[V_CC], V.timerint_count);
  2330  014496  0060  F6DF  FFE6   	movff	_V+183,postinc1
  2331  01449C  0060  F6E3  FFE6   	movff	_V+184,postinc1
  2332  0144A2  0060  F6E7  FFE6   	movff	_V+185,postinc1
  2333  0144A8  0060  F6EB  FFE6   	movff	_V+186,postinc1
  2334  0144AE  0060  F823  FFE6   	movff	_C+8,postinc1
  2335  0144B4  0060  F827  FFE6   	movff	_C+9,postinc1
  2336  0144BA  0060  F82B  FFE6   	movff	_C+10,postinc1
  2337  0144C0  0060  F82F  FFE6   	movff	_C+11,postinc1
  2338  0144C6  0E02               	movlw	2
  2339  0144C8  6EE6               	movwf	postinc1,c
  2340  0144CA  EC36  F0C7         	call	_get_raw_result	;wreg free
  2341  0144CE  0060  F0CB  FFE6   	movff	btemp,postinc1
  2342  0144D4  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2343  0144DA  0E30               	movlw	low STR_11
  2344  0144DC  6EE6               	movwf	postinc1,c
  2345  0144DE  0EFF               	movlw	high STR_11
  2346  0144E0  6EE6               	movwf	postinc1,c
  2347  0144E2  0E00               	movlw	0
  2348  0144E4  6EE6               	movwf	postinc1,c
  2349  0144E6  0E02               	movlw	2
  2350  0144E8  6EE6               	movwf	postinc1,c
  2351  0144EA  ECF9  F0C4         	call	_get_vterm_ptr	;wreg free
  2352  0144EE  0060  F0CB  FFE6   	movff	btemp,postinc1
  2353  0144F4  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2354  0144FA  0E0E               	movlw	14
  2355  0144FC  6EE6               	movwf	postinc1,c
  2356  0144FE  ECEE  F0B9         	call	_sprintf	;wreg free
  2357                           
  2358                           ;main.c: 261:    StartTimer(TMR_DISPLAY, 250);
  2359  014502  0EFA               	movlw	250
  2360  014504  6EE6               	movwf	postinc1,c
  2361  014506  0E00               	movlw	0
  2362  014508  6EE6               	movwf	postinc1,c
  2363  01450A  0E0A               	movlw	10
  2364  01450C  6EE6               	movwf	postinc1,c
  2365  01450E  EC0D  F0C4         	call	_StartTimer	;wreg free
  2366                           
  2367                           ;main.c: 262:    update_lcd(0);
  2368  014512  0E00               	movlw	0
  2369  014514  6EE6               	movwf	postinc1,c
  2370  014516  EC67  F0B9         	call	_update_lcd	;wreg free
  2371  01451A                     l10619:
  2372                           
  2373                           ;main.c: 268:   check_help(V.flipper);
  2374  01451A  0101               	movlb	1	; () banked
  2375  01451C  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  2376  01451E  6EE6               	movwf	postinc1,c
  2377  014520  EC62  F0AF         	call	_check_help	;wreg free
  2378                           
  2379                           ;main.c: 273:   if (V.set_sequ) {
  2380  014524  0101               	movlb	1	; () banked
  2381  014526  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  2382  014528  D715               	goto	l10587
  2383                           
  2384                           ; BSR set to: 1
  2385                           ;main.c: 274:    if (TimerDone(TMR_INFO)) {
  2386  01452A  0E07               	movlw	7
  2387  01452C  6EE6               	movwf	postinc1,c
  2388  01452E  ECCF  F0C6         	call	_TimerDone	;wreg free
  2389  014532  5032               	movf	btemp^0,w,c
  2390  014534  B4D8               	btfsc	status,2,c
  2391  014536  D00B               	goto	l10631
  2392                           
  2393                           ;main.c: 275:     V.set_sequ = 0;
  2394  014538  0101               	movlb	1	; () banked
  2395  01453A  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  2396                           
  2397                           ; BSR set to: 1
  2398                           ;main.c: 276:     set_vterm(0);
  2399  01453C  0E00               	movlw	0
  2400  01453E  6EE6               	movwf	postinc1,c
  2401  014540  EC80  F0C7         	call	_set_vterm	;wreg free
  2402                           
  2403                           ; BSR set to: 5
  2404                           ;main.c: 277:     update_lcd(0);
  2405  014544  0E00               	movlw	0
  2406  014546  6EE6               	movwf	postinc1,c
  2407  014548  EC67  F0B9         	call	_update_lcd	;wreg free
  2408                           
  2409                           ;main.c: 278:    } else {
  2410  01454C  D703               	goto	l10587
  2411  01454E                     l10631:
  2412                           
  2413                           ;main.c: 279:     set_vterm(2);
  2414  01454E  0E02               	movlw	2
  2415  014550  6EE6               	movwf	postinc1,c
  2416  014552  EC80  F0C7         	call	_set_vterm	;wreg free
  2417                           
  2418                           ; BSR set to: 5
  2419                           ;main.c: 280:     update_lcd(2);
  2420  014556  0E02               	movlw	2
  2421  014558  6EE6               	movwf	postinc1,c
  2422  01455A  EC67  F0B9         	call	_update_lcd	;wreg free
  2423  01455E  D6FA               	goto	l10587
  2424  014560                     __end_of_main:
  2425                           	opt callstack 0
  2426                           
  2427 ;; *************** function _start_switch_handler *****************
  2428 ;; Defined at:
  2429 ;;		line 107 in file "mbmc.c"
  2430 ;; Parameters:    Size  Location     Type
  2431 ;;		None
  2432 ;; Auto vars:     Size  Location     Type
  2433 ;;		None
  2434 ;; Return value:  Size  Location     Type
  2435 ;;                  1  [STACK] void 
  2436 ;; Registers used:
  2437 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
  2438 ;; Tracked objects:
  2439 ;;		On entry : 1/4
  2440 ;;		On exit  : 3F/39
  2441 ;;		Unchanged: 0/0
  2442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2447 ;;Total ram usage:        0 bytes
  2448 ;; Hardware stack levels used:    1
  2449 ;; Hardware stack levels required when called:    7
  2450 ;; This function calls:
  2451 ;;		_INT1_SetInterruptHandler
  2452 ;; This function is called by:
  2453 ;;		_main
  2454 ;; This function uses a reentrant model
  2455 ;;
  2456                           
  2457                           	psect	text1
  2458  018F1C                     __ptext1:
  2459                           	opt callstack 0
  2460  018F1C                     _start_switch_handler:
  2461                           	opt callstack 23
  2462                           
  2463                           ;mbmc.c: 109:  (PIE5bits.INT1IE = 0);
  2464                           
  2465                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2466                           ;incstack = 0
  2467  018F1C  0139               	movlb	57	; () banked
  2468  018F1E  9195               	bcf	149,0,b	;volatile
  2469                           
  2470                           ; BSR set to: 57
  2471                           ;mbmc.c: 110:  INT1_SetInterruptHandler(switch_handler);
  2472  018F20  0E12               	movlw	low _switch_handler
  2473  018F22  6EE6               	movwf	postinc1,c
  2474  018F24  0E6D               	movlw	high _switch_handler
  2475  018F26  6EE6               	movwf	postinc1,c
  2476  018F28  0E01               	movlw	low (_switch_handler shr (0+16))
  2477  018F2A  6EE6               	movwf	postinc1,c
  2478  018F2C  EC1B  F0C6         	call	_INT1_SetInterruptHandler	;wreg free
  2479                           
  2480                           ;mbmc.c: 111:  (PIE5bits.INT1IE = 1);
  2481  018F30  0139               	movlb	57	; () banked
  2482  018F32  8195               	bsf	149,0,b	;volatile
  2483                           
  2484                           ; BSR set to: 57
  2485                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  2486  018F34  0012               	return		;funcret
  2487  018F36                     __end_of_start_switch_handler:
  2488                           	opt callstack 0
  2489                           
  2490 ;; *************** function _start_adc_scan *****************
  2491 ;; Defined at:
  2492 ;;		line 33 in file "daq.c"
  2493 ;; Parameters:    Size  Location     Type
  2494 ;;		None
  2495 ;; Auto vars:     Size  Location     Type
  2496 ;;		None
  2497 ;; Return value:  Size  Location     Type
  2498 ;;                  1  [STACK] _Bool 
  2499 ;; Registers used:
  2500 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  2501 ;; Tracked objects:
  2502 ;;		On entry : 0/5
  2503 ;;		On exit  : 1/0
  2504 ;;		Unchanged: 0/0
  2505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2510 ;;Total ram usage:        0 bytes
  2511 ;; Hardware stack levels used:    1
  2512 ;; Hardware stack levels required when called:    7
  2513 ;; This function calls:
  2514 ;;		_ADCC_DischargeSampleCapacitor
  2515 ;;		_ADCC_SetADIInterruptHandler
  2516 ;;		_ADCC_SetADTIInterruptHandler
  2517 ;;		_ADCC_StartConversion
  2518 ;; This function is called by:
  2519 ;;		_main
  2520 ;; This function uses a reentrant model
  2521 ;;
  2522                           
  2523                           	psect	text2
  2524  018192                     __ptext2:
  2525                           	opt callstack 0
  2526  018192                     _start_adc_scan:
  2527                           	opt callstack 23
  2528                           
  2529                           ;daq.c: 35:  if (R.done)
  2530                           
  2531                           ; BSR set to: 57
  2532                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2533                           ;incstack = 0
  2534  018192  0100               	movlb	0	; () banked
  2535  018194  51CD               	movf	(_R+39)& (0+255),w,b	;volatile
  2536  018196  A4D8               	btfss	status,2,c
  2537  018198  0012               	return	
  2538                           
  2539                           ; BSR set to: 0
  2540                           ;daq.c: 38:  R.scan_index = 0;
  2541  01819A  6BCA               	clrf	(_R+36)& (0+255),b	;volatile
  2542                           
  2543                           ; BSR set to: 0
  2544                           ;daq.c: 39:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  2545  01819C  013A               	movlb	58	; () banked
  2546  01819E  5140               	movf	64,w,b	;volatile
  2547  0181A0  006E F940  F032    	movff	14928,btemp	;volatile
  2548  0181A6  6A33               	clrf	(btemp+1)^0,c
  2549  0181A8  0060  F0C8  F033   	movff	btemp,btemp+1
  2550  0181AE  6A32               	clrf	btemp^0,c
  2551  0181B0  2632               	addwf	btemp^0,f,c
  2552  0181B2  0E00               	movlw	0
  2553  0181B4  2233               	addwfc	(btemp+1)^0,f,c
  2554  0181B6  0E77               	movlw	119
  2555  0181B8  1432               	andwf	btemp^0,w,c
  2556  0181BA  0100               	movlb	0	; () banked
  2557  0181BC  6FCB               	movwf	(_R+37)& (0+255),b	;volatile
  2558  0181BE  0E3C               	movlw	60
  2559  0181C0  1433               	andwf	(btemp+1)^0,w,c
  2560  0181C2  6FCC               	movwf	(_R+38)& (0+255),b	;volatile
  2561                           
  2562                           ; BSR set to: 0
  2563                           ;daq.c: 40:  ADCC_SetADIInterruptHandler(adc_int_handler);
  2564  0181C4  0EC0               	movlw	low _adc_int_handler
  2565  0181C6  6EE6               	movwf	postinc1,c
  2566  0181C8  0E90               	movlw	high _adc_int_handler
  2567  0181CA  6EE6               	movwf	postinc1,c
  2568  0181CC  0E01               	movlw	low (_adc_int_handler shr (0+16))
  2569  0181CE  6EE6               	movwf	postinc1,c
  2570  0181D0  EC57  F0C6         	call	_ADCC_SetADIInterruptHandler	;wreg free
  2571                           
  2572                           ;daq.c: 41:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  2573  0181D4  0EF8               	movlw	low _adc_int_t_handler
  2574  0181D6  6EE6               	movwf	postinc1,c
  2575  0181D8  0E7E               	movlw	high _adc_int_t_handler
  2576  0181DA  6EE6               	movwf	postinc1,c
  2577  0181DC  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  2578  0181DE  6EE6               	movwf	postinc1,c
  2579  0181E0  EC43  F0C6         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  2580                           
  2581                           ;daq.c: 42:  ADCC_DischargeSampleCapacitor();
  2582  0181E4  EC3D  F0C8         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  2583                           
  2584                           ; BSR set to: 62
  2585                           ;daq.c: 43:  ADCC_StartConversion(R.scan_index & 0xf);
  2586  0181E8  0100               	movlb	0	; () banked
  2587  0181EA  51CA               	movf	(_R+36)& (0+255),w,b	;volatile
  2588  0181EC  0B0F               	andlw	15
  2589  0181EE  6EE6               	movwf	postinc1,c
  2590  0181F0  ECF8  F0C7         	call	_ADCC_StartConversion	;wreg free
  2591                           
  2592                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  2593  0181F4  0012               	return		;funcret
  2594  0181F6                     __end_of_start_adc_scan:
  2595                           	opt callstack 0
  2596                           
  2597 ;; *************** function _ADCC_StartConversion *****************
  2598 ;; Defined at:
  2599 ;;		line 128 in file "mcc_generated_files/adcc.c"
  2600 ;; Parameters:    Size  Location     Type
  2601 ;;  channel         1  [STACK] enum E16136
  2602 ;; Auto vars:     Size  Location     Type
  2603 ;;		None
  2604 ;; Return value:  Size  Location     Type
  2605 ;;                  1  [STACK] void 
  2606 ;; Registers used:
  2607 ;;		fsr1l, fsr1h
  2608 ;; Tracked objects:
  2609 ;;		On entry : 3F/0
  2610 ;;		On exit  : 3F/3E
  2611 ;;		Unchanged: 0/0
  2612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2617 ;;Total ram usage:        0 bytes
  2618 ;; Hardware stack levels used:    1
  2619 ;; Hardware stack levels required when called:    6
  2620 ;; This function calls:
  2621 ;;		Nothing
  2622 ;; This function is called by:
  2623 ;;		_start_adc_scan
  2624 ;;		_adc_int_t_handler
  2625 ;; This function uses a reentrant model
  2626 ;;
  2627                           
  2628                           	psect	text3
  2629  018FF0                     __ptext3:
  2630                           	opt callstack 0
  2631  018FF0                     _ADCC_StartConversion:
  2632                           	opt callstack 6
  2633                           
  2634                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  2635                           ;stkvar	_channel @ sp[(0)+-1]
  2636                           
  2637                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2638                           ;incstack = 0
  2639  018FF0  0EFF               	movlw	-1
  2640  018FF2  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  2641                           
  2642                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  2643  018FF8  013E               	movlb	62	; () banked
  2644  018FFA  8FF8               	bsf	248,7,b	;volatile
  2645                           
  2646                           ; BSR set to: 62
  2647                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  2648  018FFC  81F8               	bsf	248,0,b	;volatile
  2649                           
  2650                           ; BSR set to: 62
  2651                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  2652  018FFE  52E5               	movf	postdec1,f,c
  2653  019000  0012               	return		;funcret
  2654  019002                     __end_of_ADCC_StartConversion:
  2655                           	opt callstack 0
  2656                           
  2657 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  2658 ;; Defined at:
  2659 ;;		line 189 in file "mcc_generated_files/adcc.c"
  2660 ;; Parameters:    Size  Location     Type
  2661 ;;		None
  2662 ;; Auto vars:     Size  Location     Type
  2663 ;;		None
  2664 ;; Return value:  Size  Location     Type
  2665 ;;                  1  [STACK] void 
  2666 ;; Registers used:
  2667 ;;		wreg, status,2
  2668 ;; Tracked objects:
  2669 ;;		On entry : 0/0
  2670 ;;		On exit  : 3F/3E
  2671 ;;		Unchanged: 0/0
  2672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2677 ;;Total ram usage:        0 bytes
  2678 ;; Hardware stack levels used:    1
  2679 ;; Hardware stack levels required when called:    6
  2680 ;; This function calls:
  2681 ;;		Nothing
  2682 ;; This function is called by:
  2683 ;;		_start_adc_scan
  2684 ;;		_adc_int_t_handler
  2685 ;; This function uses a reentrant model
  2686 ;;
  2687                           
  2688                           	psect	text4
  2689  01907A                     __ptext4:
  2690                           	opt callstack 0
  2691  01907A                     _ADCC_DischargeSampleCapacitor:
  2692                           	opt callstack 6
  2693                           
  2694                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  2695                           
  2696                           ; BSR set to: 62
  2697                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2698                           ;incstack = 0
  2699  01907A  0E3B               	movlw	59
  2700  01907C  013E               	movlb	62	; () banked
  2701  01907E  6FF1               	movwf	241,b	;volatile
  2702                           
  2703                           ; BSR set to: 62
  2704                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  2705  019080  0012               	return		;funcret
  2706  019082                     __end_of_ADCC_DischargeSampleCapacitor:
  2707                           	opt callstack 0
  2708                           
  2709 ;; *************** function _srand *****************
  2710 ;; Defined at:
  2711 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  2712 ;; Parameters:    Size  Location     Type
  2713 ;;  s               2  [STACK] unsigned int 
  2714 ;; Auto vars:     Size  Location     Type
  2715 ;;		None
  2716 ;; Return value:  Size  Location     Type
  2717 ;;                  1  [STACK] void 
  2718 ;; Registers used:
  2719 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  2720 ;; Tracked objects:
  2721 ;;		On entry : 3F/0
  2722 ;;		On exit  : 3F/0
  2723 ;;		Unchanged: 0/0
  2724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2729 ;;Total ram usage:        0 bytes
  2730 ;; Hardware stack levels used:    1
  2731 ;; Hardware stack levels required when called:    6
  2732 ;; This function calls:
  2733 ;;		Nothing
  2734 ;; This function is called by:
  2735 ;;		_main
  2736 ;; This function uses a reentrant model
  2737 ;;
  2738                           
  2739                           	psect	text5
  2740  0188FA                     __ptext5:
  2741                           	opt callstack 0
  2742  0188FA                     _srand:
  2743                           	opt callstack 24
  2744                           
  2745                           ;stkvar	_s @ sp[(0)+-2]
  2746                           
  2747                           ; BSR set to: 62
  2748                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2749                           ;incstack = 0
  2750  0188FA  0EFE               	movlw	-2
  2751  0188FC  50E3               	movf	plusw1,w,c
  2752  0188FE  0FFF               	addlw	255
  2753  018900  6E3C               	movwf	(btemp+10)^0,c
  2754  018902  0EFF               	movlw	-1
  2755  018904  006F FF8C  F03D    	movff	plusw1,btemp+11
  2756  01890A  0EFF               	movlw	255
  2757  01890C  223D               	addwfc	(btemp+11)^0,f,c
  2758  01890E  0060  F0F0  F09E   	movff	btemp+10,_seed
  2759  018914  0060  F0F4  F09F   	movff	btemp+11,_seed+1
  2760  01891A  0100               	movlb	0	; () banked
  2761  01891C  6BA0               	clrf	(_seed+2)& (0+255),b
  2762  01891E  6BA1               	clrf	(_seed+3)& (0+255),b
  2763  018920  6BA2               	clrf	(_seed+4)& (0+255),b
  2764  018922  6BA3               	clrf	(_seed+5)& (0+255),b
  2765  018924  6BA4               	clrf	(_seed+6)& (0+255),b
  2766  018926  6BA5               	clrf	(_seed+7)& (0+255),b
  2767                           
  2768                           ; BSR set to: 0
  2769                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  2770  018928  52E5               	movf	postdec1,f,c
  2771  01892A  52E5               	movf	postdec1,f,c
  2772  01892C  0012               	return		;funcret
  2773  01892E                     __end_of_srand:
  2774                           	opt callstack 0
  2775                           
  2776 ;; *************** function _init_display *****************
  2777 ;; Defined at:
  2778 ;;		line 37 in file "eadog.c"
  2779 ;; Parameters:    Size  Location     Type
  2780 ;;		None
  2781 ;; Auto vars:     Size  Location     Type
  2782 ;;		None
  2783 ;; Return value:  Size  Location     Type
  2784 ;;                  1  [STACK] void 
  2785 ;; Registers used:
  2786 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  2787 ;; Tracked objects:
  2788 ;;		On entry : 0/1
  2789 ;;		On exit  : 3F/3D
  2790 ;;		Unchanged: 0/0
  2791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2796 ;;Total ram usage:        0 bytes
  2797 ;; Hardware stack levels used:    1
  2798 ;; Hardware stack levels required when called:    8
  2799 ;; This function calls:
  2800 ;;		_ringBufS_init
  2801 ;;		_send_lcd_cmd
  2802 ;;		_send_lcd_cmd_long
  2803 ;;		_wdtdelay
  2804 ;; This function is called by:
  2805 ;;		_main
  2806 ;; This function uses a reentrant model
  2807 ;;
  2808                           
  2809                           	psect	text6
  2810  0174E6                     __ptext6:
  2811                           	opt callstack 0
  2812  0174E6                     _init_display:
  2813                           	opt callstack 22
  2814                           
  2815                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
  2816                           
  2817                           ; BSR set to: 0
  2818                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2819                           ;incstack = 0
  2820  0174E6  0E80               	movlw	low _ring_buf1
  2821  0174E8  0100               	movlb	0	; () banked
  2822  0174EA  6F7E               	movwf	(_spi_link+6)& (0+255),b	;volatile
  2823  0174EC  0E03               	movlw	high _ring_buf1
  2824  0174EE  6F7F               	movwf	(_spi_link+7)& (0+255),b	;volatile
  2825                           
  2826                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
  2827  0174F0  0E00               	movlw	low _ring_buf2
  2828  0174F2  6F7C               	movwf	(_spi_link+4)& (0+255),b	;volatile
  2829  0174F4  0E04               	movlw	high _ring_buf2
  2830  0174F6  6F7D               	movwf	(_spi_link+5)& (0+255),b	;volatile
  2831                           
  2832                           ; BSR set to: 0
  2833                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
  2834  0174F8  0060  F1FB  FFE6   	movff	_spi_link+6,postinc1
  2835  0174FE  0060  F1FF  FFE6   	movff	_spi_link+7,postinc1
  2836  017504  EC8F  F0C5         	call	_ringBufS_init	;wreg free
  2837                           
  2838                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
  2839  017508  0060  F1F3  FFE6   	movff	_spi_link+4,postinc1
  2840  01750E  0060  F1F7  FFE6   	movff	_spi_link+5,postinc1
  2841  017514  EC8F  F0C5         	call	_ringBufS_init	;wreg free
  2842                           
  2843                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
  2844  017518  84BE               	bsf	190,2,c	;volatile
  2845  01751A  84BC               	bsf	188,2,c	;volatile
  2846                           
  2847                           ;eadog.c: 46:  wdtdelay(350000);
  2848  01751C  0E30               	movlw	48
  2849  01751E  6EE6               	movwf	postinc1,c
  2850  017520  0E57               	movlw	87
  2851  017522  6EE6               	movwf	postinc1,c
  2852  017524  0E05               	movlw	5
  2853  017526  6EE6               	movwf	postinc1,c
  2854  017528  0E00               	movlw	0
  2855  01752A  6EE6               	movwf	postinc1,c
  2856  01752C  ECEC  F0C1         	call	_wdtdelay	;wreg free
  2857                           
  2858                           ; BSR set to: 0
  2859                           ;eadog.c: 47:  send_lcd_cmd(0x39);
  2860  017530  0E39               	movlw	57
  2861  017532  6EE6               	movwf	postinc1,c
  2862  017534  EC7B  F0C5         	call	_send_lcd_cmd	;wreg free
  2863                           
  2864                           ; BSR set to: 0
  2865                           ;eadog.c: 48:  send_lcd_cmd(0x1d);
  2866  017538  0E1D               	movlw	29
  2867  01753A  6EE6               	movwf	postinc1,c
  2868  01753C  EC7B  F0C5         	call	_send_lcd_cmd	;wreg free
  2869                           
  2870                           ; BSR set to: 0
  2871                           ;eadog.c: 49:  send_lcd_cmd(0x50);
  2872  017540  0E50               	movlw	80
  2873  017542  6EE6               	movwf	postinc1,c
  2874  017544  EC7B  F0C5         	call	_send_lcd_cmd	;wreg free
  2875                           
  2876                           ; BSR set to: 0
  2877                           ;eadog.c: 50:  send_lcd_cmd(0x6c);
  2878  017548  0E6C               	movlw	108
  2879  01754A  6EE6               	movwf	postinc1,c
  2880  01754C  EC7B  F0C5         	call	_send_lcd_cmd	;wreg free
  2881                           
  2882                           ; BSR set to: 0
  2883                           ;eadog.c: 51:  send_lcd_cmd(0x76);
  2884  017550  0E76               	movlw	118
  2885  017552  6EE6               	movwf	postinc1,c
  2886  017554  EC7B  F0C5         	call	_send_lcd_cmd	;wreg free
  2887                           
  2888                           ; BSR set to: 0
  2889                           ;eadog.c: 52:  send_lcd_cmd_long(0x38);
  2890  017558  0E38               	movlw	56
  2891  01755A  6EE6               	movwf	postinc1,c
  2892  01755C  EC67  F0C5         	call	_send_lcd_cmd_long	;wreg free
  2893                           
  2894                           ; BSR set to: 0
  2895                           ;eadog.c: 53:  send_lcd_cmd(0x0f);
  2896  017560  0E0F               	movlw	15
  2897  017562  6EE6               	movwf	postinc1,c
  2898  017564  EC7B  F0C5         	call	_send_lcd_cmd	;wreg free
  2899                           
  2900                           ; BSR set to: 0
  2901                           ;eadog.c: 54:  send_lcd_cmd_long(0x01);
  2902  017568  0E01               	movlw	1
  2903  01756A  6EE6               	movwf	postinc1,c
  2904  01756C  EC67  F0C5         	call	_send_lcd_cmd_long	;wreg free
  2905                           
  2906                           ; BSR set to: 0
  2907                           ;eadog.c: 55:  send_lcd_cmd(0x02);
  2908  017570  0E02               	movlw	2
  2909  017572  6EE6               	movwf	postinc1,c
  2910  017574  EC7B  F0C5         	call	_send_lcd_cmd	;wreg free
  2911                           
  2912                           ; BSR set to: 0
  2913                           ;eadog.c: 56:  send_lcd_cmd(0x06);
  2914  017578  0E06               	movlw	6
  2915  01757A  6EE6               	movwf	postinc1,c
  2916  01757C  EC7B  F0C5         	call	_send_lcd_cmd	;wreg free
  2917                           
  2918                           ; BSR set to: 0
  2919                           ;eadog.c: 57:  wdtdelay(30);
  2920  017580  0E1E               	movlw	30
  2921  017582  6EE6               	movwf	postinc1,c
  2922  017584  0E00               	movlw	0
  2923  017586  6EE6               	movwf	postinc1,c
  2924  017588  0E00               	movlw	0
  2925  01758A  6EE6               	movwf	postinc1,c
  2926  01758C  0E00               	movlw	0
  2927  01758E  6EE6               	movwf	postinc1,c
  2928  017590  ECEC  F0C1         	call	_wdtdelay	;wreg free
  2929                           
  2930                           ; BSR set to: 0
  2931                           ;eadog.c: 58:  SPI1CON2 = 0x02;
  2932  017594  0E02               	movlw	2
  2933  017596  013D               	movlb	61	; () banked
  2934  017598  6F16               	movwf	22,b	;volatile
  2935                           
  2936                           ; BSR set to: 61
  2937                           ;eadog.c: 59:  SPI1CON1 = 0x40;
  2938  01759A  0E40               	movlw	64
  2939  01759C  6F15               	movwf	21,b	;volatile
  2940                           
  2941                           ; BSR set to: 61
  2942                           ;eadog.c: 60:  SPI1CON0 = 0x83;
  2943  01759E  0E83               	movlw	131
  2944  0175A0  6F14               	movwf	20,b	;volatile
  2945                           
  2946                           ; BSR set to: 61
  2947                           ;eadog.c: 61:  SPI1INTFbits.SPI1TXUIF = 0;
  2948  0175A2  931A               	bcf	26,1,b	;volatile
  2949                           
  2950                           ; BSR set to: 61
  2951                           ;eadog.c: 62:  DMA1CON1bits.DMODE = 0;
  2952  0175A4  0E3F               	movlw	-193
  2953  0175A6  013B               	movlb	59	; () banked
  2954  0175A8  17FD               	andwf	253,f,b	;volatile
  2955                           
  2956                           ; BSR set to: 59
  2957                           ;eadog.c: 63:  DMA1CON1bits.DSTP = 0;
  2958  0175AA  9BFD               	bcf	253,5,b	;volatile
  2959                           
  2960                           ; BSR set to: 59
  2961                           ;eadog.c: 64:  DMA1CON1bits.SMODE = 1;
  2962  0175AC  51FD               	movf	253,w,b	;volatile
  2963  0175AE  0BF9               	andlw	-7
  2964  0175B0  0902               	iorlw	2
  2965  0175B2  6FFD               	movwf	253,b	;volatile
  2966                           
  2967                           ; BSR set to: 59
  2968                           ;eadog.c: 65:  DMA1CON1bits.SMR = 0;
  2969  0175B4  0EE7               	movlw	-25
  2970  0175B6  17FD               	andwf	253,f,b	;volatile
  2971                           
  2972                           ; BSR set to: 59
  2973                           ;eadog.c: 66:  DMA1CON1bits.SSTP = 1;
  2974  0175B8  81FD               	bsf	253,0,b	;volatile
  2975                           
  2976                           ; BSR set to: 59
  2977                           ;eadog.c: 67:  DMA1SSA = (uint32_t) & ring_buf1;
  2978  0175BA  0E80               	movlw	low _ring_buf1
  2979  0175BC  6FF9               	movwf	249,b	;volatile
  2980  0175BE  0E03               	movlw	high _ring_buf1
  2981  0175C0  6FFA               	movwf	250,b	;volatile
  2982  0175C2  0E00               	movlw	low (_ring_buf1 shr (0+16))
  2983  0175C4  6FFB               	movwf	251,b	;volatile
  2984                           
  2985                           ; BSR set to: 59
  2986                           ;eadog.c: 68:  DMA1CON0bits.DGO = 0;
  2987  0175C6  9BFC               	bcf	252,5,b	;volatile
  2988                           
  2989                           ; BSR set to: 59
  2990                           ;eadog.c: 69:  SPI1INTFbits.SPI1TXUIF = 1;
  2991  0175C8  013D               	movlb	61	; () banked
  2992  0175CA  831A               	bsf	26,1,b	;volatile
  2993                           
  2994                           ; BSR set to: 61
  2995                           ;eadog.c: 70:  LATEbits.LATE2 = 0;
  2996  0175CC  94BE               	bcf	190,2,c	;volatile
  2997                           
  2998                           ; BSR set to: 61
  2999                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  3000  0175CE  0012               	return		;funcret
  3001  0175D0                     __end_of_init_display:
  3002                           	opt callstack 0
  3003                           
  3004 ;; *************** function _send_lcd_cmd_long *****************
  3005 ;; Defined at:
  3006 ;;		line 114 in file "eadog.c"
  3007 ;; Parameters:    Size  Location     Type
  3008 ;;  cmd             1  [STACK] const unsigned char 
  3009 ;; Auto vars:     Size  Location     Type
  3010 ;;		None
  3011 ;; Return value:  Size  Location     Type
  3012 ;;                  1  [STACK] void 
  3013 ;; Registers used:
  3014 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  3015 ;; Tracked objects:
  3016 ;;		On entry : 3F/0
  3017 ;;		On exit  : 3F/0
  3018 ;;		Unchanged: 0/0
  3019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3024 ;;Total ram usage:        0 bytes
  3025 ;; Hardware stack levels used:    1
  3026 ;; Hardware stack levels required when called:    7
  3027 ;; This function calls:
  3028 ;;		_SPI1_Exchange8bit
  3029 ;;		_wdtdelay
  3030 ;; This function is called by:
  3031 ;;		_init_display
  3032 ;; This function uses a reentrant model
  3033 ;;
  3034                           
  3035                           	psect	text7
  3036  018ACE                     __ptext7:
  3037                           	opt callstack 0
  3038  018ACE                     _send_lcd_cmd_long:
  3039                           	opt callstack 22
  3040                           
  3041                           ; BSR set to: 61
  3042                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3043                           ;incstack = 0
  3044                           ;eadog.c: 114: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 115: {;eadog.c:
      +                           116:  do { LATCbits.LATC1 = 0; } while(0);
  3045  018ACE  92BC               	bcf	188,1,c	;volatile
  3046                           
  3047                           ;eadog.c: 117:  do { LATCbits.LATC2 = 0; } while(0);
  3048  018AD0  94BC               	bcf	188,2,c	;volatile
  3049                           
  3050                           ;eadog.c: 118:  SPI1_Exchange8bit(cmd);
  3051                           ;stkvar	_cmd @ sp[(0)+-1]
  3052  018AD2  0EFF               	movlw	-1
  3053  018AD4  50E3               	movf	plusw1,w,c
  3054  018AD6  6EE6               	movwf	postinc1,c
  3055  018AD8  EC27  F0C7         	call	_SPI1_Exchange8bit	;wreg free
  3056                           
  3057                           ; BSR set to: 57
  3058                           ;eadog.c: 119:  wdtdelay(800);
  3059  018ADC  0E20               	movlw	32
  3060  018ADE  6EE6               	movwf	postinc1,c
  3061  018AE0  0E03               	movlw	3
  3062  018AE2  6EE6               	movwf	postinc1,c
  3063  018AE4  0E00               	movlw	0
  3064  018AE6  6EE6               	movwf	postinc1,c
  3065  018AE8  0E00               	movlw	0
  3066  018AEA  6EE6               	movwf	postinc1,c
  3067  018AEC  ECEC  F0C1         	call	_wdtdelay	;wreg free
  3068                           
  3069                           ; BSR set to: 0
  3070  018AF0  82BC               	bsf	188,1,c	;volatile
  3071                           
  3072                           ; BSR set to: 0
  3073                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3074  018AF2  52E5               	movf	postdec1,f,c
  3075  018AF4  0012               	return		;funcret
  3076  018AF6                     __end_of_send_lcd_cmd_long:
  3077                           	opt callstack 0
  3078                           
  3079 ;; *************** function _send_lcd_cmd *****************
  3080 ;; Defined at:
  3081 ;;		line 102 in file "eadog.c"
  3082 ;; Parameters:    Size  Location     Type
  3083 ;;  cmd             1  [STACK] const unsigned char 
  3084 ;; Auto vars:     Size  Location     Type
  3085 ;;		None
  3086 ;; Return value:  Size  Location     Type
  3087 ;;                  1  [STACK] void 
  3088 ;; Registers used:
  3089 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  3090 ;; Tracked objects:
  3091 ;;		On entry : 3F/0
  3092 ;;		On exit  : 3F/0
  3093 ;;		Unchanged: 0/0
  3094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3099 ;;Total ram usage:        0 bytes
  3100 ;; Hardware stack levels used:    1
  3101 ;; Hardware stack levels required when called:    7
  3102 ;; This function calls:
  3103 ;;		_SPI1_Exchange8bit
  3104 ;;		_wdtdelay
  3105 ;; This function is called by:
  3106 ;;		_init_display
  3107 ;; This function uses a reentrant model
  3108 ;;
  3109                           
  3110                           	psect	text8
  3111  018AF6                     __ptext8:
  3112                           	opt callstack 0
  3113  018AF6                     _send_lcd_cmd:
  3114                           	opt callstack 22
  3115                           
  3116                           ; BSR set to: 0
  3117                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3118                           ;incstack = 0
  3119                           ;eadog.c: 102: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 103: {;eadog.c: 104:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  3120  018AF6  92BC               	bcf	188,1,c	;volatile
  3121                           
  3122                           ;eadog.c: 105:  do { LATCbits.LATC2 = 0; } while(0);
  3123  018AF8  94BC               	bcf	188,2,c	;volatile
  3124                           
  3125                           ;eadog.c: 106:  SPI1_Exchange8bit(cmd);
  3126                           ;stkvar	_cmd @ sp[(0)+-1]
  3127  018AFA  0EFF               	movlw	-1
  3128  018AFC  50E3               	movf	plusw1,w,c
  3129  018AFE  6EE6               	movwf	postinc1,c
  3130  018B00  EC27  F0C7         	call	_SPI1_Exchange8bit	;wreg free
  3131                           
  3132                           ; BSR set to: 57
  3133                           ;eadog.c: 107:  wdtdelay(30);
  3134  018B04  0E1E               	movlw	30
  3135  018B06  6EE6               	movwf	postinc1,c
  3136  018B08  0E00               	movlw	0
  3137  018B0A  6EE6               	movwf	postinc1,c
  3138  018B0C  0E00               	movlw	0
  3139  018B0E  6EE6               	movwf	postinc1,c
  3140  018B10  0E00               	movlw	0
  3141  018B12  6EE6               	movwf	postinc1,c
  3142  018B14  ECEC  F0C1         	call	_wdtdelay	;wreg free
  3143                           
  3144                           ; BSR set to: 0
  3145  018B18  82BC               	bsf	188,1,c	;volatile
  3146                           
  3147                           ; BSR set to: 0
  3148                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  3149  018B1A  52E5               	movf	postdec1,f,c
  3150  018B1C  0012               	return		;funcret
  3151  018B1E                     __end_of_send_lcd_cmd:
  3152                           	opt callstack 0
  3153                           
  3154 ;; *************** function _SPI1_Exchange8bit *****************
  3155 ;; Defined at:
  3156 ;;		line 79 in file "mcc_generated_files/spi1.c"
  3157 ;; Parameters:    Size  Location     Type
  3158 ;;  data            1  [STACK] unsigned char 
  3159 ;; Auto vars:     Size  Location     Type
  3160 ;;		None
  3161 ;; Return value:  Size  Location     Type
  3162 ;;                  1  [STACK] unsigned char 
  3163 ;; Registers used:
  3164 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  3165 ;; Tracked objects:
  3166 ;;		On entry : 0/0
  3167 ;;		On exit  : 3F/39
  3168 ;;		Unchanged: 0/0
  3169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3174 ;;Total ram usage:        0 bytes
  3175 ;; Hardware stack levels used:    1
  3176 ;; Hardware stack levels required when called:    6
  3177 ;; This function calls:
  3178 ;;		Nothing
  3179 ;; This function is called by:
  3180 ;;		_send_lcd_cmd
  3181 ;;		_send_lcd_cmd_long
  3182 ;; This function uses a reentrant model
  3183 ;;
  3184                           
  3185                           	psect	text9
  3186  018E4E                     __ptext9:
  3187                           	opt callstack 0
  3188  018E4E                     _SPI1_Exchange8bit:
  3189                           	opt callstack 22
  3190                           
  3191                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  3192                           
  3193                           ; BSR set to: 0
  3194                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3195                           ;incstack = 0
  3196  018E4E  0E01               	movlw	1
  3197  018E50  013D               	movlb	61	; () banked
  3198  018E52  6F12               	movwf	18,b	;volatile
  3199                           
  3200                           ; BSR set to: 61
  3201                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  3202                           ;stkvar	_data @ sp[(0)+-1]
  3203  018E54  0EFF               	movlw	-1
  3204  018E56  006F FF8F FD11     	movff	plusw1,15633	;volatile
  3205  018E5C                     l835:
  3206                           
  3207                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  3208  018E5C  0139               	movlb	57	; () banked
  3209  018E5E  A9A2               	btfss	162,4,b	;volatile
  3210  018E60  D7FD               	goto	l835
  3211                           
  3212                           ; BSR set to: 57
  3213                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  3214  018E62  006F F440  F032    	movff	15632,btemp	;volatile
  3215                           
  3216                           ; BSR set to: 57
  3217                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3218  018E68  52E5               	movf	postdec1,f,c
  3219  018E6A  0012               	return		;funcret
  3220  018E6C                     __end_of_SPI1_Exchange8bit:
  3221                           	opt callstack 0
  3222                           
  3223 ;; *************** function _ringBufS_init *****************
  3224 ;; Defined at:
  3225 ;;		line 22 in file "ringbufs.c"
  3226 ;; Parameters:    Size  Location     Type
  3227 ;;  _this           2  [STACK] PTR volatile struct ring
  3228 ;;		 -> ring_buf2(67), ring_buf1(67), 
  3229 ;; Auto vars:     Size  Location     Type
  3230 ;;		None
  3231 ;; Return value:  Size  Location     Type
  3232 ;;                  1  [STACK] void 
  3233 ;; Registers used:
  3234 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  3235 ;; Tracked objects:
  3236 ;;		On entry : 0/0
  3237 ;;		On exit  : 0/0
  3238 ;;		Unchanged: 0/0
  3239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3244 ;;Total ram usage:        0 bytes
  3245 ;; Hardware stack levels used:    1
  3246 ;; Hardware stack levels required when called:    7
  3247 ;; This function calls:
  3248 ;;		_memset
  3249 ;; This function is called by:
  3250 ;;		_init_display
  3251 ;; This function uses a reentrant model
  3252 ;;
  3253                           
  3254                           	psect	text10
  3255  018B1E                     __ptext10:
  3256                           	opt callstack 0
  3257  018B1E                     _ringBufS_init:
  3258                           	opt callstack 22
  3259                           
  3260                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  3261                           
  3262                           ; BSR set to: 57
  3263                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3264                           ;incstack = 0
  3265  018B1E  0E43               	movlw	67
  3266  018B20  6EE6               	movwf	postinc1,c
  3267  018B22  0E00               	movlw	0
  3268  018B24  6EE6               	movwf	postinc1,c
  3269  018B26  0E00               	movlw	0
  3270  018B28  6EE6               	movwf	postinc1,c
  3271  018B2A  0E00               	movlw	0
  3272  018B2C  6EE6               	movwf	postinc1,c
  3273                           
  3274                           ;stkvar	__this @ sp[(-4)+-2]
  3275  018B2E  0EFA               	movlw	-6
  3276  018B30  006F FF8F FFE6     	movff	plusw1,postinc1
  3277  018B36  006F FF8F FFE6     	movff	plusw1,postinc1
  3278  018B3C  ECE3  F0A7         	call	_memset	;wreg free
  3279                           
  3280                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  3281  018B40  52E5               	movf	postdec1,f,c
  3282  018B42  52E5               	movf	postdec1,f,c
  3283  018B44  0012               	return		;funcret
  3284  018B46                     __end_of_ringBufS_init:
  3285                           	opt callstack 0
  3286                           
  3287 ;; *************** function _eaDogM_WriteCommand *****************
  3288 ;; Defined at:
  3289 ;;		line 160 in file "eadog.c"
  3290 ;; Parameters:    Size  Location     Type
  3291 ;;  cmd             1  [STACK] const unsigned char 
  3292 ;; Auto vars:     Size  Location     Type
  3293 ;;		None
  3294 ;; Return value:  Size  Location     Type
  3295 ;;                  1  [STACK] void 
  3296 ;; Registers used:
  3297 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3298 ;; Tracked objects:
  3299 ;;		On entry : 3F/3D
  3300 ;;		On exit  : 3F/0
  3301 ;;		Unchanged: 0/0
  3302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3307 ;;Total ram usage:        0 bytes
  3308 ;; Hardware stack levels used:    1
  3309 ;; Hardware stack levels required when called:   16
  3310 ;; This function calls:
  3311 ;;		_send_lcd_cmd_dma
  3312 ;; This function is called by:
  3313 ;;		_main
  3314 ;; This function uses a reentrant model
  3315 ;;
  3316                           
  3317                           	psect	text11
  3318  019012                     __ptext11:
  3319                           	opt callstack 0
  3320  019012                     _eaDogM_WriteCommand:
  3321                           	opt callstack 14
  3322                           
  3323                           ;eadog.c: 160: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 161: {;eadog.c: 162:
      +                            send_lcd_cmd_dma(cmd);
  3324                           ;stkvar	_cmd @ sp[(0)+-1]
  3325                           
  3326                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3327                           ;incstack = 0
  3328  019012  0EFF               	movlw	-1
  3329  019014  50E3               	movf	plusw1,w,c
  3330  019016  6EE6               	movwf	postinc1,c
  3331  019018  EC46  F0C2         	call	_send_lcd_cmd_dma	;wreg free
  3332                           
  3333                           ; BSR set to: 0
  3334                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  3335  01901C  52E5               	movf	postdec1,f,c
  3336  01901E  0012               	return		;funcret
  3337  019020                     __end_of_eaDogM_WriteCommand:
  3338                           	opt callstack 0
  3339                           
  3340 ;; *************** function _convert_adc_data *****************
  3341 ;; Defined at:
  3342 ;;		line 41 in file "mbmc.c"
  3343 ;; Parameters:    Size  Location     Type
  3344 ;;		None
  3345 ;; Auto vars:     Size  Location     Type
  3346 ;;  i               1  [STACK] unsigned char 
  3347 ;; Return value:  Size  Location     Type
  3348 ;;                  1  [STACK] void 
  3349 ;; Registers used:
  3350 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3351 ;; Tracked objects:
  3352 ;;		On entry : 0/39
  3353 ;;		On exit  : 0/0
  3354 ;;		Unchanged: 0/0
  3355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3360 ;;Total ram usage:        0 bytes
  3361 ;; Hardware stack levels used:    1
  3362 ;; Hardware stack levels required when called:    9
  3363 ;; This function calls:
  3364 ;;		_conv_raw_result
  3365 ;;		_lp_filter
  3366 ;; This function is called by:
  3367 ;;		_main
  3368 ;; This function uses a reentrant model
  3369 ;;
  3370                           
  3371                           	psect	text12
  3372  017F76                     __ptext12:
  3373                           	opt callstack 0
  3374  017F76                     _convert_adc_data:
  3375                           	opt callstack 0
  3376                           
  3377                           ; BSR set to: 0
  3378                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3379  017F76  52E6               	movf	postinc1,f,c
  3380                           
  3381                           ;mbmc.c: 43:  uint8_t i = 0;
  3382                           ;stkvar	_i @ sp[(-1)+0]
  3383                           
  3384                           ;incstack = 0
  3385  017F78  0EFF               	movlw	-1
  3386  017F7A  6AE3               	clrf	plusw1,c
  3387  017F7C                     l9111:
  3388                           
  3389                           ;mbmc.c: 47:   C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  3390  017F7C  0E01               	movlw	1
  3391  017F7E  6EE6               	movwf	postinc1,c
  3392                           
  3393                           ;stkvar	_i @ sp[(-2)+0]
  3394  017F80  0EFE               	movlw	-2
  3395  017F82  50E3               	movf	plusw1,w,c
  3396  017F84  6EE6               	movwf	postinc1,c
  3397  017F86  0E01               	movlw	1
  3398  017F88  6EE6               	movwf	postinc1,c
  3399                           
  3400                           ;stkvar	_i @ sp[(-4)+0]
  3401  017F8A  0EFC               	movlw	-4
  3402  017F8C  50E3               	movf	plusw1,w,c
  3403  017F8E  6EE6               	movwf	postinc1,c
  3404  017F90  ECEB  F098         	call	_conv_raw_result	;wreg free
  3405  017F94  0060  F0CB  FFE6   	movff	btemp,postinc1
  3406  017F9A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3407  017FA0  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3408  017FA6  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3409  017FAC  EC6D  F0B1         	call	_lp_filter	;wreg free
  3410                           
  3411                           ;stkvar	_i @ sp[(-1)+0]
  3412  017FB0  0EFF               	movlw	-1
  3413  017FB2  50E3               	movf	plusw1,w,c
  3414  017FB4  0D04               	mullw	4
  3415  017FB6  0E00               	movlw	low _C
  3416  017FB8  24F3               	addwf	243,w,c
  3417  017FBA  6ED9               	movwf	fsr2l,c
  3418  017FBC  0E02               	movlw	high _C
  3419  017FBE  20F4               	addwfc	prodh,w,c
  3420  017FC0  6EDA               	movwf	fsr2h,c
  3421  017FC2  0060  F0CB  FFDE   	movff	btemp,postinc2
  3422  017FC8  0060  F0CF  FFDE   	movff	btemp+1,postinc2
  3423  017FCE  0060  F0D3  FFDE   	movff	btemp+2,postinc2
  3424  017FD4  0060  F0D7  FFDE   	movff	btemp+3,postinc2
  3425                           
  3426                           ;mbmc.c: 51:  } while (++i < 16);
  3427                           ;stkvar	_i @ sp[(-1)+0]
  3428  017FDA  0EFF               	movlw	-1
  3429  017FDC  2AE3               	incf	plusw1,f,c
  3430  017FDE  0EFF               	movlw	-1
  3431  017FE0  006F FF8C  F032    	movff	plusw1,btemp
  3432  017FE6  0E0F               	movlw	15
  3433  017FE8  6432               	cpfsgt	btemp^0,c
  3434  017FEA  D7C8               	goto	l9111
  3435                           
  3436                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  3437  017FEC  52E5               	movf	postdec1,f,c
  3438  017FEE  0012               	return		;funcret
  3439  017FF0                     __end_of_convert_adc_data:
  3440                           	opt callstack 0
  3441                           
  3442 ;; *************** function _lp_filter *****************
  3443 ;; Defined at:
  3444 ;;		line 19 in file "mbmc.c"
  3445 ;; Parameters:    Size  Location     Type
  3446 ;;  new             4  [STACK] const float 
  3447 ;;  bn              1  [STACK] const unsigned char 
  3448 ;;  slow            1  [STACK] const char 
  3449 ;; Auto vars:     Size  Location     Type
  3450 ;;  lp_speed        4  [STACK] float 
  3451 ;; Return value:  Size  Location     Type
  3452 ;;                  4  [STACK] float 
  3453 ;; Registers used:
  3454 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3455 ;; Tracked objects:
  3456 ;;		On entry : 0/39
  3457 ;;		On exit  : 0/0
  3458 ;;		Unchanged: 0/0
  3459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3464 ;;Total ram usage:        0 bytes
  3465 ;; Hardware stack levels used:    1
  3466 ;; Hardware stack levels required when called:    8
  3467 ;; This function calls:
  3468 ;;		___fladd
  3469 ;;		___flmul
  3470 ;;		___flsub
  3471 ;; This function is called by:
  3472 ;;		_convert_adc_data
  3473 ;; This function uses a reentrant model
  3474 ;;
  3475                           
  3476                           	psect	text13
  3477  0162DA                     __ptext13:
  3478                           	opt callstack 0
  3479  0162DA                     _lp_filter:
  3480                           	opt callstack 0
  3481                           
  3482                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3483  0162DA  52E6               	movf	postinc1,f,c
  3484  0162DC  52E6               	movf	postinc1,f,c
  3485  0162DE  52E6               	movf	postinc1,f,c
  3486  0162E0  52E6               	movf	postinc1,f,c
  3487                           
  3488                           ;mbmc.c: 19: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 20: {;mbmc.c: 21:  static float smooth[16];;mbmc.c: 22:  float lp_speed;;mbmc.c: 24: 
      +                           if (bn >= 16)
  3489                           ;stkvar	_bn @ sp[(-4)+-5]
  3490                           
  3491                           ;incstack = 0
  3492  0162E2  0EF7               	movlw	-9
  3493  0162E4  006F FF8C  F032    	movff	plusw1,btemp
  3494  0162EA  0E0F               	movlw	15
  3495  0162EC  6432               	cpfsgt	btemp^0,c
  3496  0162EE  D011               	goto	l8847
  3497  0162F0                     u8680:
  3498                           
  3499                           ;mbmc.c: 25:   return new;
  3500                           ;stkvar	_new @ sp[(-4)+-4]
  3501  0162F0  0EF8               	movlw	-8
  3502  0162F2  006F FF8C  F032    	movff	plusw1,btemp
  3503  0162F8  0EF9               	movlw	-7
  3504  0162FA  006F FF8C  F033    	movff	plusw1,btemp+1
  3505  016300  0EFA               	movlw	-6
  3506  016302  006F FF8C  F034    	movff	plusw1,btemp+2
  3507  016308  0EFB               	movlw	-5
  3508  01630A  006F FF8C  F035    	movff	plusw1,btemp+3
  3509  016310  D0BF               	goto	l1703
  3510  016312                     l8847:
  3511                           
  3512                           ;mbmc.c: 27:  if (slow == (-1)) {
  3513                           ;stkvar	_slow @ sp[(-4)+-6]
  3514  016312  0EF6               	movlw	-10
  3515  016314  28E3               	incf	plusw1,w,c
  3516  016316  A4D8               	btfss	status,2,c
  3517  016318  D012               	goto	l8855
  3518                           
  3519                           ;mbmc.c: 28:   smooth[bn] = 0.0;
  3520                           ;stkvar	_bn @ sp[(-4)+-5]
  3521  01631A  0EF7               	movlw	-9
  3522  01631C  50E3               	movf	plusw1,w,c
  3523  01631E  0D04               	mullw	4
  3524  016320  0E6C               	movlw	low lp_filter@smooth
  3525  016322  24F3               	addwf	243,w,c
  3526  016324  6ED9               	movwf	fsr2l,c
  3527  016326  0E02               	movlw	high lp_filter@smooth
  3528  016328  20F4               	addwfc	prodh,w,c
  3529  01632A  6EDA               	movwf	fsr2h,c
  3530  01632C  0E00               	movlw	0
  3531  01632E  6EDE               	movwf	postinc2,c
  3532  016330  0E00               	movlw	0
  3533  016332  6EDE               	movwf	postinc2,c
  3534  016334  0E00               	movlw	0
  3535  016336  6EDE               	movwf	postinc2,c
  3536  016338  0E00               	movlw	0
  3537  01633A  6EDD               	movwf	postdec2,c
  3538  01633C  D7D9               	goto	u8680
  3539  01633E                     l8855:
  3540                           
  3541                           ;mbmc.c: 32:  if (slow) {
  3542                           ;stkvar	_slow @ sp[(-4)+-6]
  3543  01633E  0EF6               	movlw	-10
  3544  016340  50E3               	movf	plusw1,w,c
  3545  016342  B4D8               	btfsc	status,2,c
  3546  016344  D008               	goto	l8859
  3547                           
  3548                           ;mbmc.c: 33:   lp_speed = 0.066;
  3549  016346  0E02               	movlw	2
  3550  016348  6E3A               	movwf	(btemp+8)^0,c
  3551  01634A  0E2B               	movlw	43
  3552  01634C  6E3B               	movwf	(btemp+9)^0,c
  3553  01634E  0E87               	movlw	135
  3554  016350  6E3C               	movwf	(btemp+10)^0,c
  3555  016352  0E3D               	movlw	61
  3556  016354  D007               	goto	L1
  3557  016356                     l8859:
  3558                           
  3559                           ;mbmc.c: 35:   lp_speed = 0.125;
  3560  016356  0E00               	movlw	0
  3561  016358  6E3A               	movwf	(btemp+8)^0,c
  3562  01635A  0E00               	movlw	0
  3563  01635C  6E3B               	movwf	(btemp+9)^0,c
  3564  01635E  0E00               	movlw	0
  3565  016360  6E3C               	movwf	(btemp+10)^0,c
  3566  016362  0E3E               	movlw	62
  3567  016364                     L1:
  3568  016364  6E3D               	movwf	(btemp+11)^0,c
  3569                           
  3570                           ;stkvar	_lp_speed @ sp[(-4)+0]
  3571  016366  0EFC               	movlw	-4
  3572  016368  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  3573  01636E  0EFD               	movlw	-3
  3574  016370  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  3575  016376  0EFE               	movlw	-2
  3576  016378  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  3577  01637E  0EFF               	movlw	-1
  3578  016380  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  3579                           
  3580                           ;mbmc.c: 38:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
  3581                           ;stkvar	_bn @ sp[(-4)+-5]
  3582  016386  0EF7               	movlw	-9
  3583  016388  50E3               	movf	plusw1,w,c
  3584  01638A  0D04               	mullw	4
  3585  01638C  0E6C               	movlw	low lp_filter@smooth
  3586  01638E  24F3               	addwf	243,w,c
  3587  016390  6ED9               	movwf	fsr2l,c
  3588  016392  0E02               	movlw	high lp_filter@smooth
  3589  016394  20F4               	addwfc	prodh,w,c
  3590  016396  6EDA               	movwf	fsr2h,c
  3591  016398  006F FF7B FFE6     	movff	postinc2,postinc1
  3592  01639E  006F FF7B FFE6     	movff	postinc2,postinc1
  3593  0163A4  006F FF7B FFE6     	movff	postinc2,postinc1
  3594  0163AA  006F FF7B FFE6     	movff	postinc2,postinc1
  3595                           
  3596                           ;stkvar	_lp_speed @ sp[(-8)+0]
  3597  0163B0  0EF8               	movlw	-8
  3598  0163B2  006F FF8F FFE6     	movff	plusw1,postinc1
  3599  0163B8  006F FF8F FFE6     	movff	plusw1,postinc1
  3600  0163BE  006F FF8F FFE6     	movff	plusw1,postinc1
  3601  0163C4  006F FF8F FFE6     	movff	plusw1,postinc1
  3602                           
  3603                           ;stkvar	_bn @ sp[(-12)+-5]
  3604  0163CA  0EEF               	movlw	-17
  3605  0163CC  50E3               	movf	plusw1,w,c
  3606  0163CE  0D04               	mullw	4
  3607  0163D0  0E6C               	movlw	low lp_filter@smooth
  3608  0163D2  24F3               	addwf	243,w,c
  3609  0163D4  6ED9               	movwf	fsr2l,c
  3610  0163D6  0E02               	movlw	high lp_filter@smooth
  3611  0163D8  20F4               	addwfc	prodh,w,c
  3612  0163DA  6EDA               	movwf	fsr2h,c
  3613  0163DC  006F FF7B FFE6     	movff	postinc2,postinc1
  3614  0163E2  006F FF7B FFE6     	movff	postinc2,postinc1
  3615  0163E8  006F FF7B FFE6     	movff	postinc2,postinc1
  3616  0163EE  006F FF7B FFE6     	movff	postinc2,postinc1
  3617                           
  3618                           ;stkvar	_new @ sp[(-16)+-4]
  3619  0163F4  0EEC               	movlw	-20
  3620  0163F6  006F FF8F FFE6     	movff	plusw1,postinc1
  3621  0163FC  006F FF8F FFE6     	movff	plusw1,postinc1
  3622  016402  006F FF8F FFE6     	movff	plusw1,postinc1
  3623  016408  006F FF8F FFE6     	movff	plusw1,postinc1
  3624  01640E  ECBC  F0C2         	call	___flsub	;wreg free
  3625  016412  0060  F0CB  FFE6   	movff	btemp,postinc1
  3626  016418  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3627  01641E  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3628  016424  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3629  01642A  ECF8  F090         	call	___flmul	;wreg free
  3630  01642E  0060  F0CB  FFE6   	movff	btemp,postinc1
  3631  016434  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3632  01643A  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3633  016440  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3634  016446  EC0D  F095         	call	___fladd	;wreg free
  3635                           
  3636                           ;stkvar	_bn @ sp[(-4)+-5]
  3637  01644A  0EF7               	movlw	-9
  3638  01644C  50E3               	movf	plusw1,w,c
  3639  01644E  0D04               	mullw	4
  3640  016450  0E6C               	movlw	low lp_filter@smooth
  3641  016452  24F3               	addwf	243,w,c
  3642  016454  6ED9               	movwf	fsr2l,c
  3643  016456  0E02               	movlw	high lp_filter@smooth
  3644  016458  20F4               	addwfc	prodh,w,c
  3645  01645A  6EDA               	movwf	fsr2h,c
  3646  01645C  0060  F0CB  FFDE   	movff	btemp,postinc2
  3647  016462  0060  F0CF  FFDE   	movff	btemp+1,postinc2
  3648  016468  0060  F0D3  FFDE   	movff	btemp+2,postinc2
  3649  01646E  0060  F0D7  FFDD   	movff	btemp+3,postdec2
  3650  016474  52DD               	movf	postdec2,f,c
  3651  016476  52DD               	movf	postdec2,f,c
  3652  016478  006F FF78  F032    	movff	postinc2,btemp
  3653  01647E  006F FF78  F033    	movff	postinc2,btemp+1
  3654  016484  006F FF78  F034    	movff	postinc2,btemp+2
  3655  01648A  006F FF78  F035    	movff	postinc2,btemp+3
  3656  016490                     l1703:
  3657                           
  3658                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
  3659  016490  0EF6               	movlw	246
  3660  016492  26E1               	addwf	fsr1l,f,c
  3661  016494  0EFF               	movlw	255
  3662  016496  22E2               	addwfc	fsr1h,f,c
  3663  016498  0012               	return		;funcret
  3664  01649A                     __end_of_lp_filter:
  3665                           	opt callstack 0
  3666                           
  3667 ;; *************** function _conv_raw_result *****************
  3668 ;; Defined at:
  3669 ;;		line 80 in file "daq.c"
  3670 ;; Parameters:    Size  Location     Type
  3671 ;;  chan            1  [STACK] const enum E16136
  3672 ;;  to_what         1  [STACK] const enum E16198
  3673 ;; Auto vars:     Size  Location     Type
  3674 ;;		None
  3675 ;; Return value:  Size  Location     Type
  3676 ;;                  4  [STACK] float 
  3677 ;; Registers used:
  3678 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3679 ;; Tracked objects:
  3680 ;;		On entry : 0/39
  3681 ;;		On exit  : 0/0
  3682 ;;		Unchanged: 0/0
  3683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3688 ;;Total ram usage:        0 bytes
  3689 ;; Hardware stack levels used:    1
  3690 ;; Hardware stack levels required when called:    8
  3691 ;; This function calls:
  3692 ;;		___fldiv
  3693 ;;		___flmul
  3694 ;;		___flsub
  3695 ;;		___xxtofl
  3696 ;;		_get_raw_result
  3697 ;;		_nanf
  3698 ;; This function is called by:
  3699 ;;		_convert_adc_data
  3700 ;; This function uses a reentrant model
  3701 ;;
  3702                           
  3703                           	psect	text14
  3704  0131D6                     __ptext14:
  3705                           	opt callstack 0
  3706  0131D6                     _conv_raw_result:
  3707                           	opt callstack 21
  3708                           
  3709                           ;daq.c: 80: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 81: {;daq.c: 82:  if (!(0b0011110001110111 >> chan & 0x1))
  3710                           ;stkvar	_chan @ sp[(0)+-1]
  3711                           
  3712                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3713                           ;incstack = 0
  3714  0131D6  0EFF               	movlw	-1
  3715  0131D8  006F FF8C  F03D    	movff	plusw1,btemp+11
  3716  0131DE  0E77               	movlw	119
  3717  0131E0  6E3A               	movwf	(btemp+8)^0,c
  3718  0131E2  0E3C               	movlw	60
  3719  0131E4  6E3B               	movwf	(btemp+9)^0,c
  3720  0131E6  2A3D               	incf	(btemp+11)^0,f,c
  3721  0131E8  D003               	goto	u8564
  3722  0131EA                     u8565:
  3723  0131EA  343B               	rlcf	(btemp+9)^0,w,c
  3724  0131EC  323B               	rrcf	(btemp+9)^0,f,c
  3725  0131EE  323A               	rrcf	(btemp+8)^0,f,c
  3726  0131F0                     u8564:
  3727  0131F0  2E3D               	decfsz	(btemp+11)^0,f,c
  3728  0131F2  D7FB               	goto	u8565
  3729  0131F4  B03A               	btfsc	(btemp+8)^0,0,c
  3730  0131F6  D29F               	goto	l8831
  3731                           
  3732                           ;daq.c: 83:   return nanf("");
  3733  0131F8  0E09               	movlw	low (STR_27+18)
  3734  0131FA  6EE6               	movwf	postinc1,c
  3735  0131FC  0EFF               	movlw	high (STR_27+18)
  3736  0131FE  6EE6               	movwf	postinc1,c
  3737  013200  EC2D  F0C1         	call	_nanf	;wreg free
  3738  013204  D2A8               	goto	l1650
  3739  013206                     l8783:
  3740                           
  3741                           ;daq.c: 87:   if (0b0000000000000011 >> chan & 0x1) {
  3742                           ;stkvar	_chan @ sp[(0)+-1]
  3743  013206  0EFF               	movlw	-1
  3744  013208  006F FF8C  F03D    	movff	plusw1,btemp+11
  3745  01320E  0E03               	movlw	3
  3746  013210  6E3A               	movwf	(btemp+8)^0,c
  3747  013212  0E00               	movlw	0
  3748  013214  6E3B               	movwf	(btemp+9)^0,c
  3749  013216  2A3D               	incf	(btemp+11)^0,f,c
  3750  013218  D003               	goto	u8584
  3751  01321A                     u8585:
  3752  01321A  343B               	rlcf	(btemp+9)^0,w,c
  3753  01321C  323B               	rrcf	(btemp+9)^0,f,c
  3754  01321E  323A               	rrcf	(btemp+8)^0,f,c
  3755  013220                     u8584:
  3756  013220  2E3D               	decfsz	(btemp+11)^0,f,c
  3757  013222  D7FB               	goto	u8585
  3758  013224  A03A               	btfss	(btemp+8)^0,0,c
  3759  013226  D117               	goto	l8797
  3760                           
  3761                           ;daq.c: 88:    if (0b0000000000000001 >> chan & 0x1) {
  3762                           ;stkvar	_chan @ sp[(0)+-1]
  3763  013228  0EFF               	movlw	-1
  3764  01322A  006F FF8C  F03D    	movff	plusw1,btemp+11
  3765  013230  0E01               	movlw	1
  3766  013232  6E3A               	movwf	(btemp+8)^0,c
  3767  013234  0E00               	movlw	0
  3768  013236  6E3B               	movwf	(btemp+9)^0,c
  3769  013238  2A3D               	incf	(btemp+11)^0,f,c
  3770  01323A  D003               	goto	u8604
  3771  01323C                     u8605:
  3772  01323C  343B               	rlcf	(btemp+9)^0,w,c
  3773  01323E  323B               	rrcf	(btemp+9)^0,f,c
  3774  013240  323A               	rrcf	(btemp+8)^0,f,c
  3775  013242                     u8604:
  3776  013242  2E3D               	decfsz	(btemp+11)^0,f,c
  3777  013244  D7FB               	goto	u8605
  3778  013246  A03A               	btfss	(btemp+8)^0,0,c
  3779  013248  D083               	goto	l8793
  3780                           
  3781                           ;daq.c: 89:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 143.85/
      +                          1000.0;
  3782  01324A  0E00               	movlw	0
  3783  01324C  6EE6               	movwf	postinc1,c
  3784  01324E  0E00               	movlw	0
  3785  013250  6EE6               	movwf	postinc1,c
  3786  013252  0E7A               	movlw	122
  3787  013254  6EE6               	movwf	postinc1,c
  3788  013256  0E44               	movlw	68
  3789  013258  6EE6               	movwf	postinc1,c
  3790  01325A  0E9A               	movlw	154
  3791  01325C  6EE6               	movwf	postinc1,c
  3792  01325E  0ED9               	movlw	217
  3793  013260  6EE6               	movwf	postinc1,c
  3794  013262  0E0F               	movlw	15
  3795  013264  6EE6               	movwf	postinc1,c
  3796  013266  0E43               	movlw	67
  3797  013268  6EE6               	movwf	postinc1,c
  3798  01326A  0060  F318  F03A   	movff	_R+32,btemp+8	;volatile
  3799  013270  0060  F31C  F03B   	movff	_R+33,btemp+9	;volatile
  3800  013276  0E00               	movlw	0
  3801  013278  BE3B               	btfsc	(btemp+9)^0,7,c
  3802  01327A  0EFF               	movlw	255
  3803  01327C  6E3C               	movwf	(btemp+10)^0,c
  3804  01327E  6E3D               	movwf	(btemp+11)^0,c
  3805  013280  0060  F0EB  FFE6   	movff	btemp+8,postinc1
  3806  013286  0060  F0EF  FFE6   	movff	btemp+9,postinc1
  3807  01328C  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  3808  013292  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  3809  013298  0E01               	movlw	1
  3810  01329A  6EE6               	movwf	postinc1,c
  3811  01329C  EC6B  F0B0         	call	___xxtofl	;wreg free
  3812  0132A0  0060  F0CB  FFE6   	movff	btemp,postinc1
  3813  0132A6  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3814  0132AC  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3815  0132B2  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3816                           
  3817                           ;stkvar	_chan @ sp[(-12)+-1]
  3818  0132B8  0EF3               	movlw	-13
  3819  0132BA  50E3               	movf	plusw1,w,c
  3820  0132BC  6EE6               	movwf	postinc1,c
  3821  0132BE  EC36  F0C7         	call	_get_raw_result	;wreg free
  3822  0132C2  0060  F0C8  F03C   	movff	btemp,btemp+10
  3823  0132C8  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  3824  0132CE  503C               	movf	(btemp+10)^0,w,c
  3825  0132D0  6E36               	movwf	(btemp+4)^0,c
  3826  0132D2  503D               	movf	(btemp+11)^0,w,c
  3827  0132D4  6E37               	movwf	(btemp+5)^0,c
  3828  0132D6  6A38               	clrf	(btemp+6)^0,c
  3829  0132D8  6A39               	clrf	(btemp+7)^0,c
  3830  0132DA  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  3831  0132E0  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  3832  0132E6  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  3833  0132EC  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  3834  0132F2  0E00               	movlw	0
  3835  0132F4  6EE6               	movwf	postinc1,c
  3836  0132F6  EC6B  F0B0         	call	___xxtofl	;wreg free
  3837  0132FA  0060  F0CB  FFE6   	movff	btemp,postinc1
  3838  013300  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3839  013306  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3840  01330C  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3841  013312  ECBC  F0C2         	call	___flsub	;wreg free
  3842  013316  0060  F0CB  FFE6   	movff	btemp,postinc1
  3843  01331C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3844  013322  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3845  013328  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3846  01332E  ECF8  F090         	call	___flmul	;wreg free
  3847  013332  0060  F0CB  FFE6   	movff	btemp,postinc1
  3848  013338  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3849  01333E  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3850  013344  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3851  01334A  ECAE  F09B         	call	___fldiv	;wreg free
  3852  01334E  D203               	goto	l1650
  3853  013350                     l8793:
  3854                           
  3855                           ;daq.c: 91:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 60.1/10
      +                          00.0;
  3856  013350  0E00               	movlw	0
  3857  013352  6EE6               	movwf	postinc1,c
  3858  013354  0E00               	movlw	0
  3859  013356  6EE6               	movwf	postinc1,c
  3860  013358  0E7A               	movlw	122
  3861  01335A  6EE6               	movwf	postinc1,c
  3862  01335C  0E44               	movlw	68
  3863  01335E  6EE6               	movwf	postinc1,c
  3864  013360  0E66               	movlw	102
  3865  013362  6EE6               	movwf	postinc1,c
  3866  013364  0E66               	movlw	102
  3867  013366  6EE6               	movwf	postinc1,c
  3868  013368  0E70               	movlw	112
  3869  01336A  6EE6               	movwf	postinc1,c
  3870  01336C  0E42               	movlw	66
  3871  01336E  6EE6               	movwf	postinc1,c
  3872  013370  0060  F320  F03A   	movff	_R+34,btemp+8	;volatile
  3873  013376  0060  F324  F03B   	movff	_R+35,btemp+9	;volatile
  3874  01337C  0E00               	movlw	0
  3875  01337E  BE3B               	btfsc	(btemp+9)^0,7,c
  3876  013380  0EFF               	movlw	255
  3877  013382  6E3C               	movwf	(btemp+10)^0,c
  3878  013384  6E3D               	movwf	(btemp+11)^0,c
  3879  013386  0060  F0EB  FFE6   	movff	btemp+8,postinc1
  3880  01338C  0060  F0EF  FFE6   	movff	btemp+9,postinc1
  3881  013392  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  3882  013398  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  3883  01339E  0E01               	movlw	1
  3884  0133A0  6EE6               	movwf	postinc1,c
  3885  0133A2  EC6B  F0B0         	call	___xxtofl	;wreg free
  3886  0133A6  0060  F0CB  FFE6   	movff	btemp,postinc1
  3887  0133AC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3888  0133B2  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3889  0133B8  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3890                           
  3891                           ;stkvar	_chan @ sp[(-12)+-1]
  3892  0133BE  0EF3               	movlw	-13
  3893  0133C0  50E3               	movf	plusw1,w,c
  3894  0133C2  6EE6               	movwf	postinc1,c
  3895  0133C4  EC36  F0C7         	call	_get_raw_result	;wreg free
  3896  0133C8  0060  F0C8  F03C   	movff	btemp,btemp+10
  3897  0133CE  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  3898  0133D4  503C               	movf	(btemp+10)^0,w,c
  3899  0133D6  6E36               	movwf	(btemp+4)^0,c
  3900  0133D8  503D               	movf	(btemp+11)^0,w,c
  3901  0133DA  6E37               	movwf	(btemp+5)^0,c
  3902  0133DC  6A38               	clrf	(btemp+6)^0,c
  3903  0133DE  6A39               	clrf	(btemp+7)^0,c
  3904  0133E0  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  3905  0133E6  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  3906  0133EC  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  3907  0133F2  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  3908  0133F8  0E00               	movlw	0
  3909  0133FA  6EE6               	movwf	postinc1,c
  3910  0133FC  EC6B  F0B0         	call	___xxtofl	;wreg free
  3911  013400  0060  F0CB  FFE6   	movff	btemp,postinc1
  3912  013406  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3913  01340C  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3914  013412  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3915  013418  ECBC  F0C2         	call	___flsub	;wreg free
  3916  01341C  0060  F0CB  FFE6   	movff	btemp,postinc1
  3917  013422  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3918  013428  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3919  01342E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3920  013434  ECF8  F090         	call	___flmul	;wreg free
  3921  013438  0060  F0CB  FFE6   	movff	btemp,postinc1
  3922  01343E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3923  013444  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3924  01344A  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3925  013450  ECAE  F09B         	call	___fldiv	;wreg free
  3926  013454  D180               	goto	l1650
  3927  013456                     l8797:
  3928                           
  3929                           ;daq.c: 94:    if (0b0000100000000000 >> chan & 0x1) {
  3930                           ;stkvar	_chan @ sp[(0)+-1]
  3931  013456  0EFF               	movlw	-1
  3932  013458  006F FF8C  F03D    	movff	plusw1,btemp+11
  3933  01345E  0E00               	movlw	0
  3934  013460  6E3A               	movwf	(btemp+8)^0,c
  3935  013462  0E08               	movlw	8
  3936  013464  6E3B               	movwf	(btemp+9)^0,c
  3937  013466  2A3D               	incf	(btemp+11)^0,f,c
  3938  013468  D003               	goto	u8624
  3939  01346A                     u8625:
  3940  01346A  343B               	rlcf	(btemp+9)^0,w,c
  3941  01346C  323B               	rrcf	(btemp+9)^0,f,c
  3942  01346E  323A               	rrcf	(btemp+8)^0,f,c
  3943  013470                     u8624:
  3944  013470  2E3D               	decfsz	(btemp+11)^0,f,c
  3945  013472  D7FB               	goto	u8625
  3946  013474  A03A               	btfss	(btemp+8)^0,0,c
  3947  013476  D008               	goto	l8805
  3948                           
  3949                           ;daq.c: 95:     return 25.0;
  3950  013478  0E00               	movlw	0
  3951  01347A  6E32               	movwf	btemp^0,c
  3952  01347C  0E00               	movlw	0
  3953  01347E  6E33               	movwf	(btemp+1)^0,c
  3954  013480  0EC8               	movlw	200
  3955  013482  6E34               	movwf	(btemp+2)^0,c
  3956  013484  0E41               	movlw	65
  3957  013486  D155               	goto	L2
  3958  013488                     l8805:
  3959                           
  3960                           ;daq.c: 97:     return((float) get_raw_result(chan) * 8.250825/2.0) / 1000.0;
  3961  013488  0E00               	movlw	0
  3962  01348A  6EE6               	movwf	postinc1,c
  3963  01348C  0E00               	movlw	0
  3964  01348E  6EE6               	movwf	postinc1,c
  3965  013490  0E7A               	movlw	122
  3966  013492  6EE6               	movwf	postinc1,c
  3967  013494  0E44               	movlw	68
  3968  013496  6EE6               	movwf	postinc1,c
  3969  013498  0E00               	movlw	0
  3970  01349A  6EE6               	movwf	postinc1,c
  3971  01349C  0E00               	movlw	0
  3972  01349E  6EE6               	movwf	postinc1,c
  3973  0134A0  0E00               	movlw	0
  3974  0134A2  6EE6               	movwf	postinc1,c
  3975  0134A4  0E40               	movlw	64
  3976  0134A6  6EE6               	movwf	postinc1,c
  3977  0134A8  0E61               	movlw	97
  3978  0134AA  6EE6               	movwf	postinc1,c
  3979  0134AC  0E03               	movlw	3
  3980  0134AE  6EE6               	movwf	postinc1,c
  3981  0134B0  0E04               	movlw	4
  3982  0134B2  6EE6               	movwf	postinc1,c
  3983  0134B4  0E41               	movlw	65
  3984  0134B6  6EE6               	movwf	postinc1,c
  3985                           
  3986                           ;stkvar	_chan @ sp[(-12)+-1]
  3987  0134B8  0EF3               	movlw	-13
  3988  0134BA  50E3               	movf	plusw1,w,c
  3989  0134BC  6EE6               	movwf	postinc1,c
  3990  0134BE  EC36  F0C7         	call	_get_raw_result	;wreg free
  3991  0134C2  0060  F0C8  F03C   	movff	btemp,btemp+10
  3992  0134C8  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  3993  0134CE  503C               	movf	(btemp+10)^0,w,c
  3994  0134D0  6E36               	movwf	(btemp+4)^0,c
  3995  0134D2  503D               	movf	(btemp+11)^0,w,c
  3996  0134D4  6E37               	movwf	(btemp+5)^0,c
  3997  0134D6  6A38               	clrf	(btemp+6)^0,c
  3998  0134D8  6A39               	clrf	(btemp+7)^0,c
  3999  0134DA  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4000  0134E0  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4001  0134E6  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4002  0134EC  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4003  0134F2  0E00               	movlw	0
  4004  0134F4  6EE6               	movwf	postinc1,c
  4005  0134F6  EC6B  F0B0         	call	___xxtofl	;wreg free
  4006  0134FA  0060  F0CB  FFE6   	movff	btemp,postinc1
  4007  013500  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4008  013506  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4009  01350C  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4010  013512  ECF8  F090         	call	___flmul	;wreg free
  4011  013516  0060  F0CB  FFE6   	movff	btemp,postinc1
  4012  01351C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4013  013522  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4014  013528  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4015  01352E  ECAE  F09B         	call	___fldiv	;wreg free
  4016  013532  0060  F0CB  FFE6   	movff	btemp,postinc1
  4017  013538  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4018  01353E  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4019  013544  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4020  01354A  ECAE  F09B         	call	___fldiv	;wreg free
  4021  01354E  D103               	goto	l1650
  4022  013550                     l8809:
  4023                           
  4024                           ;daq.c: 102:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
  4025                           ;stkvar	_chan @ sp[(0)+-1]
  4026  013550  0EFF               	movlw	-1
  4027  013552  006F FF8C  F03D    	movff	plusw1,btemp+11
  4028  013558  0E03               	movlw	3
  4029  01355A  6E3A               	movwf	(btemp+8)^0,c
  4030  01355C  0E00               	movlw	0
  4031  01355E  6E3B               	movwf	(btemp+9)^0,c
  4032  013560  2A3D               	incf	(btemp+11)^0,f,c
  4033  013562  D003               	goto	u8644
  4034  013564                     u8645:
  4035  013564  343B               	rlcf	(btemp+9)^0,w,c
  4036  013566  323B               	rrcf	(btemp+9)^0,f,c
  4037  013568  323A               	rrcf	(btemp+8)^0,f,c
  4038  01356A                     u8644:
  4039  01356A  2E3D               	decfsz	(btemp+11)^0,f,c
  4040  01356C  D7FB               	goto	u8645
  4041  01356E  B03A               	btfsc	(btemp+8)^0,0,c
  4042  013570  D011               	goto	u8670
  4043                           
  4044                           ;stkvar	_chan @ sp[(0)+-1]
  4045  013572  0EFF               	movlw	-1
  4046  013574  006F FF8C  F03D    	movff	plusw1,btemp+11
  4047  01357A  0E00               	movlw	0
  4048  01357C  6E3A               	movwf	(btemp+8)^0,c
  4049  01357E  0E08               	movlw	8
  4050  013580  6E3B               	movwf	(btemp+9)^0,c
  4051  013582  2A3D               	incf	(btemp+11)^0,f,c
  4052  013584  D003               	goto	u8664
  4053  013586                     u8665:
  4054  013586  343B               	rlcf	(btemp+9)^0,w,c
  4055  013588  323B               	rrcf	(btemp+9)^0,f,c
  4056  01358A  323A               	rrcf	(btemp+8)^0,f,c
  4057  01358C                     u8664:
  4058  01358C  2E3D               	decfsz	(btemp+11)^0,f,c
  4059  01358E  D7FB               	goto	u8665
  4060  013590  A03A               	btfss	(btemp+8)^0,0,c
  4061  013592  D064               	goto	l8817
  4062  013594                     u8670:
  4063                           
  4064                           ;daq.c: 103:    return((float) get_raw_result(chan) * 1.25/2.0) / 1000.0;
  4065  013594  0E00               	movlw	0
  4066  013596  6EE6               	movwf	postinc1,c
  4067  013598  0E00               	movlw	0
  4068  01359A  6EE6               	movwf	postinc1,c
  4069  01359C  0E7A               	movlw	122
  4070  01359E  6EE6               	movwf	postinc1,c
  4071  0135A0  0E44               	movlw	68
  4072  0135A2  6EE6               	movwf	postinc1,c
  4073  0135A4  0E00               	movlw	0
  4074  0135A6  6EE6               	movwf	postinc1,c
  4075  0135A8  0E00               	movlw	0
  4076  0135AA  6EE6               	movwf	postinc1,c
  4077  0135AC  0E00               	movlw	0
  4078  0135AE  6EE6               	movwf	postinc1,c
  4079  0135B0  0E40               	movlw	64
  4080  0135B2  6EE6               	movwf	postinc1,c
  4081  0135B4  0E00               	movlw	0
  4082  0135B6  6EE6               	movwf	postinc1,c
  4083  0135B8  0E00               	movlw	0
  4084  0135BA  6EE6               	movwf	postinc1,c
  4085  0135BC  0EA0               	movlw	160
  4086  0135BE  6EE6               	movwf	postinc1,c
  4087  0135C0  0E3F               	movlw	63
  4088  0135C2  6EE6               	movwf	postinc1,c
  4089                           
  4090                           ;stkvar	_chan @ sp[(-12)+-1]
  4091  0135C4  0EF3               	movlw	-13
  4092  0135C6  50E3               	movf	plusw1,w,c
  4093  0135C8  6EE6               	movwf	postinc1,c
  4094  0135CA  EC36  F0C7         	call	_get_raw_result	;wreg free
  4095  0135CE  0060  F0C8  F03C   	movff	btemp,btemp+10
  4096  0135D4  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4097  0135DA  503C               	movf	(btemp+10)^0,w,c
  4098  0135DC  6E36               	movwf	(btemp+4)^0,c
  4099  0135DE  503D               	movf	(btemp+11)^0,w,c
  4100  0135E0  6E37               	movwf	(btemp+5)^0,c
  4101  0135E2  6A38               	clrf	(btemp+6)^0,c
  4102  0135E4  6A39               	clrf	(btemp+7)^0,c
  4103  0135E6  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4104  0135EC  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4105  0135F2  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4106  0135F8  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4107  0135FE  0E00               	movlw	0
  4108  013600  6EE6               	movwf	postinc1,c
  4109  013602  EC6B  F0B0         	call	___xxtofl	;wreg free
  4110  013606  0060  F0CB  FFE6   	movff	btemp,postinc1
  4111  01360C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4112  013612  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4113  013618  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4114  01361E  ECF8  F090         	call	___flmul	;wreg free
  4115  013622  0060  F0CB  FFE6   	movff	btemp,postinc1
  4116  013628  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4117  01362E  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4118  013634  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4119  01363A  ECAE  F09B         	call	___fldiv	;wreg free
  4120  01363E  0060  F0CB  FFE6   	movff	btemp,postinc1
  4121  013644  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4122  01364A  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4123  013650  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4124  013656  ECAE  F09B         	call	___fldiv	;wreg free
  4125  01365A  D07D               	goto	l1650
  4126  01365C                     l8817:
  4127                           
  4128                           ;daq.c: 105:   return((float) get_raw_result(chan) * 8.250825/2.0) / 1000.0;
  4129  01365C  0E00               	movlw	0
  4130  01365E  6EE6               	movwf	postinc1,c
  4131  013660  0E00               	movlw	0
  4132  013662  6EE6               	movwf	postinc1,c
  4133  013664  0E7A               	movlw	122
  4134  013666  6EE6               	movwf	postinc1,c
  4135  013668  0E44               	movlw	68
  4136  01366A  6EE6               	movwf	postinc1,c
  4137  01366C  0E00               	movlw	0
  4138  01366E  6EE6               	movwf	postinc1,c
  4139  013670  0E00               	movlw	0
  4140  013672  6EE6               	movwf	postinc1,c
  4141  013674  0E00               	movlw	0
  4142  013676  6EE6               	movwf	postinc1,c
  4143  013678  0E40               	movlw	64
  4144  01367A  6EE6               	movwf	postinc1,c
  4145  01367C  0E61               	movlw	97
  4146  01367E  6EE6               	movwf	postinc1,c
  4147  013680  0E03               	movlw	3
  4148  013682  6EE6               	movwf	postinc1,c
  4149  013684  0E04               	movlw	4
  4150  013686  6EE6               	movwf	postinc1,c
  4151  013688  0E41               	movlw	65
  4152  01368A  6EE6               	movwf	postinc1,c
  4153                           
  4154                           ;stkvar	_chan @ sp[(-12)+-1]
  4155  01368C  0EF3               	movlw	-13
  4156  01368E  50E3               	movf	plusw1,w,c
  4157  013690  6EE6               	movwf	postinc1,c
  4158  013692  EC36  F0C7         	call	_get_raw_result	;wreg free
  4159  013696  0060  F0C8  F03C   	movff	btemp,btemp+10
  4160  01369C  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4161  0136A2  503C               	movf	(btemp+10)^0,w,c
  4162  0136A4  6E36               	movwf	(btemp+4)^0,c
  4163  0136A6  503D               	movf	(btemp+11)^0,w,c
  4164  0136A8  6E37               	movwf	(btemp+5)^0,c
  4165  0136AA  6A38               	clrf	(btemp+6)^0,c
  4166  0136AC  6A39               	clrf	(btemp+7)^0,c
  4167  0136AE  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4168  0136B4  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4169  0136BA  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4170  0136C0  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4171  0136C6  0E00               	movlw	0
  4172  0136C8  6EE6               	movwf	postinc1,c
  4173  0136CA  EC6B  F0B0         	call	___xxtofl	;wreg free
  4174  0136CE  0060  F0CB  FFE6   	movff	btemp,postinc1
  4175  0136D4  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4176  0136DA  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4177  0136E0  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4178  0136E6  ECF8  F090         	call	___flmul	;wreg free
  4179  0136EA  0060  F0CB  FFE6   	movff	btemp,postinc1
  4180  0136F0  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4181  0136F6  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4182  0136FC  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4183  013702  ECAE  F09B         	call	___fldiv	;wreg free
  4184  013706  0060  F0CB  FFE6   	movff	btemp,postinc1
  4185  01370C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4186  013712  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4187  013718  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4188  01371E  ECAE  F09B         	call	___fldiv	;wreg free
  4189  013722  D019               	goto	l1650
  4190  013724                     l8823:
  4191                           
  4192                           ;daq.c: 108:   return 0.0;
  4193  013724  0E00               	movlw	0
  4194  013726  6E32               	movwf	btemp^0,c
  4195  013728  0E00               	movlw	0
  4196  01372A  6E33               	movwf	(btemp+1)^0,c
  4197  01372C  0E00               	movlw	0
  4198  01372E  6E34               	movwf	(btemp+2)^0,c
  4199  013730  0E00               	movlw	0
  4200  013732                     L2:
  4201  013732  6E35               	movwf	(btemp+3)^0,c
  4202  013734  D010               	goto	l1650
  4203  013736                     l8831:
  4204                           
  4205                           ;stkvar	_to_what @ sp[(0)+-2]
  4206  013736  0EFE               	movlw	-2
  4207  013738  50E3               	movf	plusw1,w,c
  4208  01373A  6E3C               	movwf	(btemp+10)^0,c
  4209  01373C  6A3D               	clrf	(btemp+11)^0,c
  4210                           
  4211                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4212                           ; Switch size 1, requested type "simple"
  4213                           ; Number of cases is 1, Range of values is 0 to 0
  4214                           ; switch strategies available:
  4215                           ; Name         Instructions Cycles
  4216                           ; simple_byte            4     3 (average)
  4217                           ;	Chosen strategy is simple_byte
  4218  01373E  503D               	movf	(btemp+11)^0,w,c
  4219  013740  0A00               	xorlw	0	; case 0
  4220  013742  A4D8               	btfss	status,2,c
  4221  013744  D7EF               	goto	l8823
  4222                           
  4223                           ; Switch size 1, requested type "simple"
  4224                           ; Number of cases is 2, Range of values is 0 to 1
  4225                           ; switch strategies available:
  4226                           ; Name         Instructions Cycles
  4227                           ; simple_byte            7     4 (average)
  4228                           ;	Chosen strategy is simple_byte
  4229  013746  503C               	movf	(btemp+10)^0,w,c
  4230  013748  0A00               	xorlw	0	; case 0
  4231  01374A  B4D8               	btfsc	status,2,c
  4232  01374C  D55C               	goto	l8783
  4233  01374E  0A01               	xorlw	1	; case 1
  4234  013750  B4D8               	btfsc	status,2,c
  4235  013752  D6FE               	goto	l8809
  4236  013754  D7E7               	goto	l8823
  4237  013756                     l1650:
  4238                           
  4239                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  4240  013756  52E5               	movf	postdec1,f,c
  4241  013758  52E5               	movf	postdec1,f,c
  4242  01375A  0012               	return		;funcret
  4243  01375C                     __end_of_conv_raw_result:
  4244                           	opt callstack 0
  4245                           
  4246 ;; *************** function _nanf *****************
  4247 ;; Defined at:
  4248 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
  4249 ;; Parameters:    Size  Location     Type
  4250 ;;  s               2  [STACK] PTR const unsigned char 
  4251 ;;		 -> STR_33(1), 
  4252 ;; Auto vars:     Size  Location     Type
  4253 ;;  u               4  [STACK] struct .
  4254 ;; Return value:  Size  Location     Type
  4255 ;;                  4  [STACK] float 
  4256 ;; Registers used:
  4257 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
  4258 ;; Tracked objects:
  4259 ;;		On entry : 0/39
  4260 ;;		On exit  : 0/0
  4261 ;;		Unchanged: 0/0
  4262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4267 ;;Total ram usage:        0 bytes
  4268 ;; Hardware stack levels used:    1
  4269 ;; Hardware stack levels required when called:    6
  4270 ;; This function calls:
  4271 ;;		Nothing
  4272 ;; This function is called by:
  4273 ;;		_conv_raw_result
  4274 ;; This function uses a reentrant model
  4275 ;;
  4276                           
  4277                           	psect	text15
  4278  01825A                     __ptext15:
  4279                           	opt callstack 0
  4280  01825A                     _nanf:
  4281                           	opt callstack 0
  4282                           
  4283                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4284  01825A  52E6               	movf	postinc1,f,c
  4285  01825C  52E6               	movf	postinc1,f,c
  4286  01825E  52E6               	movf	postinc1,f,c
  4287  018260  52E6               	movf	postinc1,f,c
  4288                           
  4289                           ;incstack = 0
  4290  018262  0EFF               	movlw	255
  4291  018264  6E3A               	movwf	(btemp+8)^0,c
  4292  018266  0EFF               	movlw	255
  4293  018268  6E3B               	movwf	(btemp+9)^0,c
  4294  01826A  0EFF               	movlw	255
  4295  01826C  6E3C               	movwf	(btemp+10)^0,c
  4296  01826E  0E7F               	movlw	127
  4297  018270  6E3D               	movwf	(btemp+11)^0,c
  4298                           
  4299                           ;stkvar	_u @ sp[(-4)+0]
  4300  018272  0EFC               	movlw	-4
  4301  018274  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  4302  01827A  0EFD               	movlw	-3
  4303  01827C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  4304  018282  0EFE               	movlw	-2
  4305  018284  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  4306  01828A  0EFF               	movlw	-1
  4307  01828C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  4308                           
  4309                           ;stkvar	_u @ sp[(-4)+0]
  4310  018292  0EFC               	movlw	-4
  4311  018294  006F FF8C  F032    	movff	plusw1,btemp
  4312  01829A  0EFD               	movlw	-3
  4313  01829C  006F FF8C  F033    	movff	plusw1,btemp+1
  4314  0182A2  0EFE               	movlw	-2
  4315  0182A4  006F FF8C  F034    	movff	plusw1,btemp+2
  4316  0182AA  0EFF               	movlw	-1
  4317  0182AC  006F FF8C  F035    	movff	plusw1,btemp+3
  4318                           
  4319                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
  4320  0182B2  0EFA               	movlw	250
  4321  0182B4  26E1               	addwf	fsr1l,f,c
  4322  0182B6  0EFF               	movlw	255
  4323  0182B8  22E2               	addwfc	fsr1h,f,c
  4324  0182BA  0012               	return		;funcret
  4325  0182BC                     __end_of_nanf:
  4326                           	opt callstack 0
  4327                           
  4328 ;; *************** function _get_raw_result *****************
  4329 ;; Defined at:
  4330 ;;		line 72 in file "daq.c"
  4331 ;; Parameters:    Size  Location     Type
  4332 ;;  index           1  [STACK] const enum E16136
  4333 ;; Auto vars:     Size  Location     Type
  4334 ;;		None
  4335 ;; Return value:  Size  Location     Type
  4336 ;;                  2  [STACK] unsigned short 
  4337 ;; Registers used:
  4338 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  4339 ;; Tracked objects:
  4340 ;;		On entry : 0/1
  4341 ;;		On exit  : 0/0
  4342 ;;		Unchanged: 0/0
  4343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4348 ;;Total ram usage:        0 bytes
  4349 ;; Hardware stack levels used:    1
  4350 ;; Hardware stack levels required when called:    6
  4351 ;; This function calls:
  4352 ;;		Nothing
  4353 ;; This function is called by:
  4354 ;;		_main
  4355 ;;		_conv_raw_result
  4356 ;; This function uses a reentrant model
  4357 ;;
  4358                           
  4359                           	psect	text16
  4360  018E6C                     __ptext16:
  4361                           	opt callstack 0
  4362  018E6C                     _get_raw_result:
  4363                           	opt callstack 24
  4364                           
  4365                           ;daq.c: 72: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 73: {;daq.c: 
      +                          74:  return R.raw_adc[index];
  4366                           ;stkvar	_index @ sp[(0)+-1]
  4367                           
  4368                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4369                           ;incstack = 0
  4370  018E6C  0EFF               	movlw	-1
  4371  018E6E  50E3               	movf	plusw1,w,c
  4372  018E70  0D02               	mullw	2
  4373  018E72  50F3               	movf	243,w,c
  4374  018E74  0FA6               	addlw	low _R
  4375  018E76  6ED9               	movwf	fsr2l,c
  4376  018E78  6ADA               	clrf	fsr2h,c
  4377  018E7A  006F FF78  F032    	movff	postinc2,btemp
  4378  018E80  006F FF74  F033    	movff	postdec2,btemp+1
  4379                           
  4380                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  4381  018E86  52E5               	movf	postdec1,f,c
  4382  018E88  0012               	return		;funcret
  4383  018E8A                     __end_of_get_raw_result:
  4384                           	opt callstack 0
  4385                           
  4386 ;; *************** function ___xxtofl *****************
  4387 ;; Defined at:
  4388 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  4389 ;; Parameters:    Size  Location     Type
  4390 ;;  sign            1  [STACK] unsigned char 
  4391 ;;  val             4  [STACK] long 
  4392 ;; Auto vars:     Size  Location     Type
  4393 ;;  arg             4  [STACK] unsigned long 
  4394 ;;  exp             1  [STACK] unsigned char 
  4395 ;; Return value:  Size  Location     Type
  4396 ;;                  4  [STACK] unsigned char 
  4397 ;; Registers used:
  4398 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  4399 ;; Tracked objects:
  4400 ;;		On entry : 0/39
  4401 ;;		On exit  : 0/0
  4402 ;;		Unchanged: 0/0
  4403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4408 ;;Total ram usage:        0 bytes
  4409 ;; Hardware stack levels used:    1
  4410 ;; Hardware stack levels required when called:    6
  4411 ;; This function calls:
  4412 ;;		Nothing
  4413 ;; This function is called by:
  4414 ;;		_conv_raw_result
  4415 ;; This function uses a reentrant model
  4416 ;;
  4417                           
  4418                           	psect	text17
  4419  0160D6                     __ptext17:
  4420                           	opt callstack 0
  4421  0160D6                     ___xxtofl:
  4422                           	opt callstack 0
  4423                           
  4424                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4425  0160D6  0E05               	movlw	5
  4426  0160D8  26E1               	addwf	fsr1l,f,c
  4427  0160DA  0E00               	movlw	0
  4428  0160DC  22E2               	addwfc	fsr1h,f,c
  4429                           
  4430                           ;stkvar	_sign @ sp[(-5)+-1]
  4431                           
  4432                           ;incstack = 0
  4433  0160DE  0EFA               	movlw	-6
  4434  0160E0  50E3               	movf	plusw1,w,c
  4435  0160E2  B4D8               	btfsc	status,2,c
  4436  0160E4  D01D               	goto	l8257
  4437                           
  4438                           ;stkvar	_val @ sp[(-5)+-5]
  4439  0160E6  0EF9               	movlw	-7
  4440  0160E8  AEE3               	btfss	plusw1,7,c
  4441  0160EA  D01A               	goto	l8257
  4442                           
  4443                           ;stkvar	_val @ sp[(-5)+-5]
  4444  0160EC  0EF6               	movlw	-10
  4445  0160EE  006F FF8C  F03A    	movff	plusw1,btemp+8
  4446  0160F4  0EF7               	movlw	-9
  4447  0160F6  006F FF8C  F03B    	movff	plusw1,btemp+9
  4448  0160FC  0EF8               	movlw	-8
  4449  0160FE  006F FF8C  F03C    	movff	plusw1,btemp+10
  4450  016104  0EF9               	movlw	-7
  4451  016106  006F FF8C  F03D    	movff	plusw1,btemp+11
  4452  01610C  1E3A               	comf	(btemp+8)^0,f,c
  4453  01610E  1E3B               	comf	(btemp+9)^0,f,c
  4454  016110  1E3C               	comf	(btemp+10)^0,f,c
  4455  016112  1E3D               	comf	(btemp+11)^0,f,c
  4456  016114  2A3A               	incf	(btemp+8)^0,f,c
  4457  016116  0E00               	movlw	0
  4458  016118  223B               	addwfc	(btemp+9)^0,f,c
  4459  01611A  223C               	addwfc	(btemp+10)^0,f,c
  4460  01611C  223D               	addwfc	(btemp+11)^0,f,c
  4461  01611E  D010               	goto	L3
  4462  016120                     l8257:
  4463                           
  4464                           ;stkvar	_val @ sp[(-5)+-5]
  4465  016120  0EF6               	movlw	-10
  4466  016122  006F FF8C  F03A    	movff	plusw1,btemp+8
  4467  016128  0EF7               	movlw	-9
  4468  01612A  006F FF8C  F03B    	movff	plusw1,btemp+9
  4469  016130  0EF8               	movlw	-8
  4470  016132  006F FF8C  F03C    	movff	plusw1,btemp+10
  4471  016138  0EF9               	movlw	-7
  4472  01613A  006F FF8C  F03D    	movff	plusw1,btemp+11
  4473  016140                     L3:
  4474                           
  4475                           ;stkvar	_arg @ sp[(-5)+0]
  4476  016140  0EFB               	movlw	-5
  4477  016142  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  4478  016148  0EFC               	movlw	-4
  4479  01614A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  4480  016150  0EFD               	movlw	-3
  4481  016152  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  4482  016158  0EFE               	movlw	-2
  4483  01615A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  4484                           
  4485                           ;stkvar	_val @ sp[(-5)+-5]
  4486  016160  0EF6               	movlw	-10
  4487  016162  50E3               	movf	plusw1,w,c
  4488  016164  E113               	bnz	l8265
  4489  016166  0EF7               	movlw	-9
  4490  016168  50E3               	movf	plusw1,w,c
  4491  01616A  E110               	bnz	l8265
  4492  01616C  0EF8               	movlw	-8
  4493  01616E  50E3               	movf	plusw1,w,c
  4494  016170  E10D               	bnz	l8265
  4495  016172  0EF9               	movlw	-7
  4496  016174  50E3               	movf	plusw1,w,c
  4497  016176  A4D8               	btfss	status,2,c
  4498  016178  D009               	goto	l8265
  4499  01617A  0E00               	movlw	0
  4500  01617C  6E32               	movwf	btemp^0,c
  4501  01617E  0E00               	movlw	0
  4502  016180  6E33               	movwf	(btemp+1)^0,c
  4503  016182  0E00               	movlw	0
  4504  016184  6E34               	movwf	(btemp+2)^0,c
  4505  016186  0E00               	movlw	0
  4506  016188  6E35               	movwf	(btemp+3)^0,c
  4507  01618A  D0A2               	goto	l2702
  4508  01618C                     l8265:
  4509  01618C  0E96               	movlw	150
  4510  01618E  6E3D               	movwf	(btemp+11)^0,c
  4511                           
  4512                           ;stkvar	_exp @ sp[(-5)+4]
  4513  016190  0EFF               	movlw	-1
  4514  016192  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  4515  016198  D00B               	goto	l8269
  4516  01619A                     l8267:
  4517                           
  4518                           ;stkvar	_exp @ sp[(-5)+4]
  4519  01619A  0EFF               	movlw	-1
  4520  01619C  2AE3               	incf	plusw1,f,c
  4521                           
  4522                           ;stkvar	_arg @ sp[(-5)+0]
  4523  01619E  90D8               	bcf	status,0,c
  4524  0161A0  0EFE               	movlw	-2
  4525  0161A2  32E3               	rrcf	plusw1,f,c
  4526  0161A4  0EFD               	movlw	-3
  4527  0161A6  32E3               	rrcf	plusw1,f,c
  4528  0161A8  0EFC               	movlw	-4
  4529  0161AA  32E3               	rrcf	plusw1,f,c
  4530  0161AC  0EFB               	movlw	-5
  4531  0161AE  32E3               	rrcf	plusw1,f,c
  4532  0161B0                     l8269:
  4533                           
  4534                           ;stkvar	_arg @ sp[(-5)+0]
  4535  0161B0  50E1               	movf	fsr1l,w,c
  4536  0161B2  0FFB               	addlw	-5
  4537  0161B4  6ED9               	movwf	fsr2l,c
  4538  0161B6  50E2               	movf	fsr1h,w,c
  4539  0161B8  6EDA               	movwf	fsr2h,c
  4540  0161BA  0EFF               	movlw	255
  4541  0161BC  22DA               	addwfc	fsr2h,f,c
  4542  0161BE  52DE               	movf	postinc2,f,c
  4543  0161C0  52DE               	movf	postinc2,f,c
  4544  0161C2  52DE               	movf	postinc2,f,c
  4545  0161C4  0EFE               	movlw	254
  4546  0161C6  14DD               	andwf	postdec2,w,c
  4547  0161C8  B4D8               	btfsc	status,2,c
  4548  0161CA  D018               	goto	l8277
  4549  0161CC  D7E6               	goto	l8267
  4550  0161CE                     l8271:
  4551                           
  4552                           ;stkvar	_exp @ sp[(-5)+4]
  4553  0161CE  0EFF               	movlw	-1
  4554  0161D0  2AE3               	incf	plusw1,f,c
  4555                           
  4556                           ;stkvar	_arg @ sp[(-5)+0]
  4557  0161D2  50E1               	movf	fsr1l,w,c
  4558  0161D4  0FFB               	addlw	-5
  4559  0161D6  6ED9               	movwf	fsr2l,c
  4560  0161D8  50E2               	movf	fsr1h,w,c
  4561  0161DA  6EDA               	movwf	fsr2h,c
  4562  0161DC  0EFF               	movlw	255
  4563  0161DE  22DA               	addwfc	fsr2h,f,c
  4564  0161E0  2ADE               	incf	postinc2,f,c
  4565  0161E2  0E00               	movlw	0
  4566  0161E4  22DE               	addwfc	postinc2,f,c
  4567  0161E6  22DE               	addwfc	postinc2,f,c
  4568  0161E8  22DE               	addwfc	postinc2,f,c
  4569                           
  4570                           ;stkvar	_arg @ sp[(-5)+0]
  4571  0161EA  90D8               	bcf	status,0,c
  4572  0161EC  0EFE               	movlw	-2
  4573  0161EE  32E3               	rrcf	plusw1,f,c
  4574  0161F0  0EFD               	movlw	-3
  4575  0161F2  32E3               	rrcf	plusw1,f,c
  4576  0161F4  0EFC               	movlw	-4
  4577  0161F6  32E3               	rrcf	plusw1,f,c
  4578  0161F8  0EFB               	movlw	-5
  4579  0161FA  32E3               	rrcf	plusw1,f,c
  4580  0161FC                     l8277:
  4581                           
  4582                           ;stkvar	_arg @ sp[(-5)+0]
  4583  0161FC  50E1               	movf	fsr1l,w,c
  4584  0161FE  0FFB               	addlw	-5
  4585  016200  6ED9               	movwf	fsr2l,c
  4586  016202  50E2               	movf	fsr1h,w,c
  4587  016204  6EDA               	movwf	fsr2h,c
  4588  016206  0EFF               	movlw	255
  4589  016208  22DA               	addwfc	fsr2h,f,c
  4590  01620A  52DE               	movf	postinc2,f,c
  4591  01620C  52DE               	movf	postinc2,f,c
  4592  01620E  52DE               	movf	postinc2,f,c
  4593  016210  0EFF               	movlw	255
  4594  016212  14DD               	andwf	postdec2,w,c
  4595  016214  B4D8               	btfsc	status,2,c
  4596  016216  D00C               	goto	l8281
  4597  016218  D7DA               	goto	l8271
  4598  01621A                     l8279:
  4599                           
  4600                           ;stkvar	_exp @ sp[(-5)+4]
  4601  01621A  0EFF               	movlw	-1
  4602  01621C  06E3               	decf	plusw1,f,c
  4603                           
  4604                           ;stkvar	_arg @ sp[(-5)+0]
  4605  01621E  90D8               	bcf	status,0,c
  4606  016220  0EFB               	movlw	-5
  4607  016222  36E3               	rlcf	plusw1,f,c
  4608  016224  0EFC               	movlw	-4
  4609  016226  36E3               	rlcf	plusw1,f,c
  4610  016228  0EFD               	movlw	-3
  4611  01622A  36E3               	rlcf	plusw1,f,c
  4612  01622C  0EFE               	movlw	-2
  4613  01622E  36E3               	rlcf	plusw1,f,c
  4614  016230                     l8281:
  4615                           
  4616                           ;stkvar	_arg @ sp[(-5)+0]
  4617  016230  0EFD               	movlw	-3
  4618  016232  BEE3               	btfsc	plusw1,7,c
  4619  016234  D007               	goto	u8390
  4620                           
  4621                           ;stkvar	_exp @ sp[(-5)+4]
  4622  016236  0EFF               	movlw	-1
  4623  016238  006F FF8C  F032    	movff	plusw1,btemp
  4624  01623E  0E02               	movlw	2
  4625  016240  6032               	cpfslt	btemp^0,c
  4626  016242  D7EB               	goto	l8279
  4627  016244                     u8390:
  4628                           
  4629                           ;stkvar	_exp @ sp[(-5)+4]
  4630  016244  0EFF               	movlw	-1
  4631  016246  B0E3               	btfsc	plusw1,0,c
  4632  016248  D002               	goto	l8289
  4633                           
  4634                           ;stkvar	_arg @ sp[(-5)+0]
  4635  01624A  0EFD               	movlw	-3
  4636  01624C  9EE3               	bcf	plusw1,7,c
  4637  01624E                     l8289:
  4638                           
  4639                           ;stkvar	_exp @ sp[(-5)+4]
  4640  01624E  50E1               	movf	fsr1l,w,c
  4641  016250  0FFF               	addlw	-1
  4642  016252  6ED9               	movwf	fsr2l,c
  4643  016254  50E2               	movf	fsr1h,w,c
  4644  016256  6EDA               	movwf	fsr2h,c
  4645  016258  0EFF               	movlw	255
  4646  01625A  22DA               	addwfc	fsr2h,f,c
  4647  01625C  90D8               	bcf	status,0,c
  4648  01625E  32DF               	rrcf	indf2,f,c
  4649                           
  4650                           ;stkvar	_exp @ sp[(-5)+4]
  4651  016260  0EFF               	movlw	-1
  4652  016262  006F FF8C  F03D    	movff	plusw1,btemp+11
  4653  016268  0060  F0F4  F036   	movff	btemp+11,btemp+4
  4654  01626E  6A37               	clrf	(btemp+5)^0,c
  4655  016270  6A38               	clrf	(btemp+6)^0,c
  4656  016272  6A39               	clrf	(btemp+7)^0,c
  4657  016274  0060  F0D8  F039   	movff	btemp+4,btemp+7
  4658  01627A  6A38               	clrf	(btemp+6)^0,c
  4659  01627C  6A37               	clrf	(btemp+5)^0,c
  4660  01627E  6A36               	clrf	(btemp+4)^0,c
  4661                           
  4662                           ;stkvar	_arg @ sp[(-5)+0]
  4663  016280  50E1               	movf	fsr1l,w,c
  4664  016282  0FFB               	addlw	-5
  4665  016284  6ED9               	movwf	fsr2l,c
  4666  016286  50E2               	movf	fsr1h,w,c
  4667  016288  6EDA               	movwf	fsr2h,c
  4668  01628A  0EFF               	movlw	255
  4669  01628C  22DA               	addwfc	fsr2h,f,c
  4670  01628E  5036               	movf	(btemp+4)^0,w,c
  4671  016290  12DE               	iorwf	postinc2,f,c
  4672  016292  5037               	movf	(btemp+5)^0,w,c
  4673  016294  12DE               	iorwf	postinc2,f,c
  4674  016296  5038               	movf	(btemp+6)^0,w,c
  4675  016298  12DE               	iorwf	postinc2,f,c
  4676  01629A  5039               	movf	(btemp+7)^0,w,c
  4677  01629C  12DE               	iorwf	postinc2,f,c
  4678                           
  4679                           ;stkvar	_sign @ sp[(-5)+-1]
  4680  01629E  0EFA               	movlw	-6
  4681  0162A0  50E3               	movf	plusw1,w,c
  4682  0162A2  B4D8               	btfsc	status,2,c
  4683  0162A4  D005               	goto	l8299
  4684                           
  4685                           ;stkvar	_val @ sp[(-5)+-5]
  4686  0162A6  0EF9               	movlw	-7
  4687  0162A8  AEE3               	btfss	plusw1,7,c
  4688  0162AA  D002               	goto	l8299
  4689                           
  4690                           ;stkvar	_arg @ sp[(-5)+0]
  4691  0162AC  0EFE               	movlw	-2
  4692  0162AE  8EE3               	bsf	plusw1,7,c
  4693  0162B0                     l8299:
  4694                           
  4695                           ;stkvar	_arg @ sp[(-5)+0]
  4696  0162B0  0EFB               	movlw	-5
  4697  0162B2  006F FF8C  F032    	movff	plusw1,btemp
  4698  0162B8  0EFC               	movlw	-4
  4699  0162BA  006F FF8C  F033    	movff	plusw1,btemp+1
  4700  0162C0  0EFD               	movlw	-3
  4701  0162C2  006F FF8C  F034    	movff	plusw1,btemp+2
  4702  0162C8  0EFE               	movlw	-2
  4703  0162CA  006F FF8C  F035    	movff	plusw1,btemp+3
  4704  0162D0                     l2702:
  4705                           
  4706                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  4707  0162D0  0EF6               	movlw	246
  4708  0162D2  26E1               	addwf	fsr1l,f,c
  4709  0162D4  0EFF               	movlw	255
  4710  0162D6  22E2               	addwfc	fsr1h,f,c
  4711  0162D8  0012               	return		;funcret
  4712  0162DA                     __end_of___xxtofl:
  4713                           	opt callstack 0
  4714                           
  4715 ;; *************** function _clear_adc_scan *****************
  4716 ;; Defined at:
  4717 ;;		line 64 in file "daq.c"
  4718 ;; Parameters:    Size  Location     Type
  4719 ;;		None
  4720 ;; Auto vars:     Size  Location     Type
  4721 ;;		None
  4722 ;; Return value:  Size  Location     Type
  4723 ;;                  1  [STACK] void 
  4724 ;; Registers used:
  4725 ;;		None
  4726 ;; Tracked objects:
  4727 ;;		On entry : 0/39
  4728 ;;		On exit  : 3F/0
  4729 ;;		Unchanged: 0/0
  4730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4735 ;;Total ram usage:        0 bytes
  4736 ;; Hardware stack levels used:    1
  4737 ;; Hardware stack levels required when called:    6
  4738 ;; This function calls:
  4739 ;;		Nothing
  4740 ;; This function is called by:
  4741 ;;		_main
  4742 ;; This function uses a reentrant model
  4743 ;;
  4744                           
  4745                           	psect	text18
  4746  0190A2                     __ptext18:
  4747                           	opt callstack 0
  4748  0190A2                     _clear_adc_scan:
  4749                           	opt callstack 24
  4750                           
  4751                           ;daq.c: 66:  R.done = 0;
  4752                           
  4753                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4754                           ;incstack = 0
  4755  0190A2  0100               	movlb	0	; () banked
  4756  0190A4  6BCD               	clrf	(_R+39)& (0+255),b	;volatile
  4757                           
  4758                           ; BSR set to: 0
  4759                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  4760  0190A6  0012               	return		;funcret
  4761  0190A8                     __end_of_clear_adc_scan:
  4762                           	opt callstack 0
  4763                           
  4764 ;; *************** function _check_help *****************
  4765 ;; Defined at:
  4766 ;;		line 40 in file "mconfig.c"
  4767 ;; Parameters:    Size  Location     Type
  4768 ;;  flipper         1  [STACK] const _Bool 
  4769 ;; Auto vars:     Size  Location     Type
  4770 ;;		None
  4771 ;; Return value:  Size  Location     Type
  4772 ;;                  1  [STACK] void 
  4773 ;; Registers used:
  4774 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4775 ;; Tracked objects:
  4776 ;;		On entry : 3F/1
  4777 ;;		On exit  : 0/0
  4778 ;;		Unchanged: 0/0
  4779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4784 ;;Total ram usage:        0 bytes
  4785 ;; Hardware stack levels used:    1
  4786 ;; Hardware stack levels required when called:   18
  4787 ;; This function calls:
  4788 ;;		_StartTimer
  4789 ;;		_TimerDone
  4790 ;;		_display_help
  4791 ;;		_display_info
  4792 ;;		_get_vterm_ptr
  4793 ;;		_help_button
  4794 ;;		_mode_lamp_bright
  4795 ;;		_mode_lamp_dim
  4796 ;;		_set_display_info
  4797 ;;		_set_temp_display_help
  4798 ;;		_set_vterm
  4799 ;;		_sprintf
  4800 ;;		_update_lcd
  4801 ;;		_vterm_dump
  4802 ;; This function is called by:
  4803 ;;		_main
  4804 ;; This function uses a reentrant model
  4805 ;;
  4806                           
  4807                           	psect	text19
  4808  015EC4                     __ptext19:
  4809                           	opt callstack 0
  4810  015EC4                     _check_help:
  4811                           	opt callstack 12
  4812                           
  4813                           ;mconfig.c: 40: void check_help(const _Bool flipper);mconfig.c: 41: {;mconfig.c: 45:  if
      +                           (help_button() && display_info() != DIS_HELP) {
  4814                           
  4815                           ; BSR set to: 0
  4816                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4817                           ;incstack = 0
  4818  015EC4  EC2B  F0C4         	call	_help_button	;wreg free
  4819  015EC8  5032               	movf	btemp^0,w,c
  4820  015ECA  B4D8               	btfsc	status,2,c
  4821  015ECC  D0D0               	goto	l10493
  4822  015ECE  EC41  F0C8         	call	_display_info	;wreg free
  4823  015ED2  0432               	decf	btemp^0,w,c
  4824  015ED4  B4D8               	btfsc	status,2,c
  4825  015ED6  D0CB               	goto	l10493
  4826                           
  4827                           ;mconfig.c: 46:   StartTimer(TMR_FLIPPER, 1500);
  4828  015ED8  0EDC               	movlw	220
  4829  015EDA  6EE6               	movwf	postinc1,c
  4830  015EDC  0E05               	movlw	5
  4831  015EDE  6EE6               	movwf	postinc1,c
  4832  015EE0  0E0B               	movlw	11
  4833  015EE2  6EE6               	movwf	postinc1,c
  4834  015EE4  EC0D  F0C4         	call	_StartTimer	;wreg free
  4835                           
  4836                           ;mconfig.c: 47:   if (V.debug)
  4837  015EE8  0101               	movlb	1	; () banked
  4838  015EEA  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  4839                           
  4840                           ; BSR set to: 1
  4841                           ;mconfig.c: 48:    vterm_dump();
  4842  015EEC  EC28  F0B7         	call	_vterm_dump	;wreg free
  4843                           
  4844                           ;mconfig.c: 50:   set_vterm(1);
  4845  015EF0  0E01               	movlw	1
  4846  015EF2  6EE6               	movwf	postinc1,c
  4847  015EF4  EC80  F0C7         	call	_set_vterm	;wreg free
  4848                           
  4849                           ; BSR set to: 5
  4850                           ;mconfig.c: 51:   set_temp_display_help(display_info());
  4851  015EF8  EC41  F0C8         	call	_display_info	;wreg free
  4852  015EFC  5032               	movf	btemp^0,w,c
  4853  015EFE  6EE6               	movwf	postinc1,c
  4854  015F00  EC01  F0C8         	call	_set_temp_display_help	;wreg free
  4855                           
  4856                           ; BSR set to: 1
  4857                           ;mconfig.c: 52:   set_display_info(DIS_HELP);
  4858  015F04  0E01               	movlw	1
  4859  015F06  6EE6               	movwf	postinc1,c
  4860  015F08  EC45  F0C7         	call	_set_display_info	;wreg free
  4861                           
  4862                           ;mconfig.c: 53:   if (flipper) {
  4863                           ;stkvar	_flipper @ sp[(0)+-1]
  4864  015F0C  0EFF               	movlw	-1
  4865  015F0E  50E3               	movf	plusw1,w,c
  4866  015F10  B4D8               	btfsc	status,2,c
  4867  015F12  D019               	goto	l10481
  4868                           
  4869                           ;mconfig.c: 54:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  4870  015F14  0EB2               	movlw	low STR_15
  4871  015F16  6EE6               	movwf	postinc1,c
  4872  015F18  0EFF               	movlw	high STR_15
  4873  015F1A  6EE6               	movwf	postinc1,c
  4874  015F1C  0E0A               	movlw	low STR_17
  4875  015F1E  6EE6               	movwf	postinc1,c
  4876  015F20  0EFF               	movlw	high STR_17
  4877  015F22  6EE6               	movwf	postinc1,c
  4878  015F24  0E01               	movlw	1
  4879  015F26  6EE6               	movwf	postinc1,c
  4880  015F28  0E00               	movlw	0
  4881  015F2A  6EE6               	movwf	postinc1,c
  4882  015F2C  ECF9  F0C4         	call	_get_vterm_ptr	;wreg free
  4883  015F30  0060  F0CB  FFE6   	movff	btemp,postinc1
  4884  015F36  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4885  015F3C  0E06               	movlw	6
  4886  015F3E  6EE6               	movwf	postinc1,c
  4887  015F40  ECEE  F0B9         	call	_sprintf	;wreg free
  4888                           
  4889                           ;mconfig.c: 55:   } else {
  4890  015F44  D018               	goto	l1556
  4891  015F46                     l10481:
  4892                           
  4893                           ;mconfig.c: 56:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  4894  015F46  0EC8               	movlw	low STR_16
  4895  015F48  6EE6               	movwf	postinc1,c
  4896  015F4A  0EFF               	movlw	high STR_16
  4897  015F4C  6EE6               	movwf	postinc1,c
  4898  015F4E  0E0A               	movlw	low STR_17
  4899  015F50  6EE6               	movwf	postinc1,c
  4900  015F52  0EFF               	movlw	high STR_17
  4901  015F54  6EE6               	movwf	postinc1,c
  4902  015F56  0E01               	movlw	1
  4903  015F58  6EE6               	movwf	postinc1,c
  4904  015F5A  0E00               	movlw	0
  4905  015F5C  6EE6               	movwf	postinc1,c
  4906  015F5E  ECF9  F0C4         	call	_get_vterm_ptr	;wreg free
  4907  015F62  0060  F0CB  FFE6   	movff	btemp,postinc1
  4908  015F68  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4909  015F6E  0E06               	movlw	6
  4910  015F70  6EE6               	movwf	postinc1,c
  4911  015F72  ECEE  F0B9         	call	_sprintf	;wreg free
  4912  015F76                     l1556:
  4913                           
  4914                           ;mconfig.c: 58:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  4915  015F76  0101               	movlb	1	; () banked
  4916  015F78  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  4917  015F7A  32E8               	rrcf	wreg,f,c
  4918  015F7C  32E8               	rrcf	wreg,f,c
  4919  015F7E  0B03               	andlw	3
  4920  015F80  0D24               	mullw	36
  4921  015F82  0E12               	movlw	18
  4922  015F84  26F3               	addwf	243,f,c
  4923  015F86  0E00               	movlw	0
  4924  015F88  22F4               	addwfc	244,f,c
  4925  015F8A  0E4F               	movlw	low _T
  4926  015F8C  6E3C               	movwf	(btemp+10)^0,c
  4927  015F8E  0EFE               	movlw	high _T
  4928  015F90  6E3D               	movwf	(btemp+11)^0,c
  4929  015F92  50F3               	movf	243,w,c
  4930  015F94  263C               	addwf	(btemp+10)^0,f,c
  4931  015F96  50F4               	movf	244,w,c
  4932  015F98  223D               	addwfc	(btemp+11)^0,f,c
  4933  015F9A  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  4934  015FA0  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  4935  015FA6  0EBE               	movlw	low STR_19
  4936  015FA8  6EE6               	movwf	postinc1,c
  4937  015FAA  0EFF               	movlw	high STR_19
  4938  015FAC  6EE6               	movwf	postinc1,c
  4939  015FAE  0E01               	movlw	1
  4940  015FB0  6EE6               	movwf	postinc1,c
  4941  015FB2  0E01               	movlw	1
  4942  015FB4  6EE6               	movwf	postinc1,c
  4943  015FB6  ECF9  F0C4         	call	_get_vterm_ptr	;wreg free
  4944  015FBA  0060  F0CB  FFE6   	movff	btemp,postinc1
  4945  015FC0  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4946  015FC6  0E06               	movlw	6
  4947  015FC8  6EE6               	movwf	postinc1,c
  4948  015FCA  ECEE  F0B9         	call	_sprintf	;wreg free
  4949                           
  4950                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  4951  015FCE  0101               	movlb	1	; () banked
  4952  015FD0  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  4953  015FD2  32E8               	rrcf	wreg,f,c
  4954  015FD4  32E8               	rrcf	wreg,f,c
  4955  015FD6  0B03               	andlw	3
  4956  015FD8  0D24               	mullw	36
  4957  015FDA  0E4F               	movlw	low _T
  4958  015FDC  6E3C               	movwf	(btemp+10)^0,c
  4959  015FDE  0EFE               	movlw	high _T
  4960  015FE0  6E3D               	movwf	(btemp+11)^0,c
  4961  015FE2  50F3               	movf	243,w,c
  4962  015FE4  263C               	addwf	(btemp+10)^0,f,c
  4963  015FE6  50F4               	movf	244,w,c
  4964  015FE8  223D               	addwfc	(btemp+11)^0,f,c
  4965  015FEA  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  4966  015FF0  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  4967  015FF6  0EBE               	movlw	low STR_19
  4968  015FF8  6EE6               	movwf	postinc1,c
  4969  015FFA  0EFF               	movlw	high STR_19
  4970  015FFC  6EE6               	movwf	postinc1,c
  4971  015FFE  0E01               	movlw	1
  4972  016000  6EE6               	movwf	postinc1,c
  4973  016002  0E02               	movlw	2
  4974  016004  6EE6               	movwf	postinc1,c
  4975  016006  ECF9  F0C4         	call	_get_vterm_ptr	;wreg free
  4976  01600A  0060  F0CB  FFE6   	movff	btemp,postinc1
  4977  016010  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4978  016016  0E06               	movlw	6
  4979  016018  6EE6               	movwf	postinc1,c
  4980  01601A  ECEE  F0B9         	call	_sprintf	;wreg free
  4981                           
  4982                           ;mconfig.c: 60:   V.help_id++;
  4983  01601E  EE20  F19B         	lfsr	2,_V+155	;volatile
  4984  016022  38DF               	swapf	223,w,c
  4985  016024  6E3D               	movwf	(btemp+11)^0,c
  4986  016026  323D               	rrcf	(btemp+11)^0,f,c
  4987  016028  303D               	rrcf	(btemp+11)^0,w,c
  4988  01602A  0B03               	andlw	3
  4989  01602C  6E3D               	movwf	(btemp+11)^0,c
  4990  01602E  2A3D               	incf	(btemp+11)^0,f,c
  4991  016030  3A3D               	swapf	(btemp+11)^0,f,c
  4992  016032  363D               	rlcf	(btemp+11)^0,f,c
  4993  016034  363D               	rlcf	(btemp+11)^0,f,c
  4994  016036  50DF               	movf	223,w,c
  4995  016038  183D               	xorwf	(btemp+11)^0,w,c
  4996  01603A  0B3F               	andlw	-193
  4997  01603C  183D               	xorwf	(btemp+11)^0,w,c
  4998  01603E  6EDF               	movwf	223,c
  4999                           
  5000                           ;mconfig.c: 61:   StartTimer(TMR_HELPDIS, 3000);
  5001  016040  0EB8               	movlw	184
  5002  016042  6EE6               	movwf	postinc1,c
  5003  016044  0E0B               	movlw	11
  5004  016046  6EE6               	movwf	postinc1,c
  5005  016048  0E09               	movlw	9
  5006  01604A  6EE6               	movwf	postinc1,c
  5007  01604C  EC0D  F0C4         	call	_StartTimer	;wreg free
  5008                           
  5009                           ;mconfig.c: 62:   StartTimer(TMR_INFO, 3000);
  5010  016050  0EB8               	movlw	184
  5011  016052  6EE6               	movwf	postinc1,c
  5012  016054  0E0B               	movlw	11
  5013  016056  6EE6               	movwf	postinc1,c
  5014  016058  0E07               	movlw	7
  5015  01605A  6EE6               	movwf	postinc1,c
  5016  01605C  EC0D  F0C4         	call	_StartTimer	;wreg free
  5017                           
  5018                           ;mconfig.c: 63:   mode_lamp_bright();
  5019  016060  EC10  F0C8         	call	_mode_lamp_bright	;wreg free
  5020                           
  5021                           ;mconfig.c: 64:   update_lcd(1);
  5022  016064  0E01               	movlw	1
  5023  016066  6EE6               	movwf	postinc1,c
  5024  016068  EC67  F0B9         	call	_update_lcd	;wreg free
  5025                           
  5026                           ;mconfig.c: 65:  } else {
  5027  01606C  D032               	goto	l1560
  5028  01606E                     l10493:
  5029                           
  5030                           ;mconfig.c: 66:   if (TimerDone(TMR_HELPDIS)) {
  5031  01606E  0E09               	movlw	9
  5032  016070  6EE6               	movwf	postinc1,c
  5033  016072  ECCF  F0C6         	call	_TimerDone	;wreg free
  5034  016076  5032               	movf	btemp^0,w,c
  5035  016078  B4D8               	btfsc	status,2,c
  5036  01607A  D02B               	goto	l1560
  5037                           
  5038                           ;mconfig.c: 67:    set_vterm(0);
  5039  01607C  0E00               	movlw	0
  5040  01607E  6EE6               	movwf	postinc1,c
  5041  016080  EC80  F0C7         	call	_set_vterm	;wreg free
  5042                           
  5043                           ; BSR set to: 5
  5044                           ;mconfig.c: 68:    V.help = 0;
  5045  016084  0101               	movlb	1	; () banked
  5046  016086  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  5047                           
  5048                           ; BSR set to: 1
  5049                           ;mconfig.c: 69:    set_display_info(display_help());
  5050  016088  EC45  F0C8         	call	_display_help	;wreg free
  5051  01608C  5032               	movf	btemp^0,w,c
  5052  01608E  6EE6               	movwf	postinc1,c
  5053  016090  EC45  F0C7         	call	_set_display_info	;wreg free
  5054                           
  5055                           ;mconfig.c: 70:    mode_lamp_dim(V.mode_pwm);
  5056  016094  0060  F657  FFE6   	movff	_V+149,postinc1
  5057  01609A  0060  F65B  FFE6   	movff	_V+150,postinc1
  5058  0160A0  ECB5  F0C7         	call	_mode_lamp_dim	;wreg free
  5059                           
  5060                           ;mconfig.c: 71:    if (TimerDone(TMR_FLIPPER)) {
  5061  0160A4  0E0B               	movlw	11
  5062  0160A6  6EE6               	movwf	postinc1,c
  5063  0160A8  ECCF  F0C6         	call	_TimerDone	;wreg free
  5064  0160AC  5032               	movf	btemp^0,w,c
  5065  0160AE  B4D8               	btfsc	status,2,c
  5066  0160B0  D010               	goto	l1560
  5067                           
  5068                           ;mconfig.c: 72:     V.flipper = !V.flipper;
  5069  0160B2  0101               	movlb	1	; () banked
  5070  0160B4  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  5071  0160B6  A4D8               	btfss	status,2,c
  5072  0160B8  D002               	goto	u10900
  5073  0160BA  0E01               	movlw	1
  5074  0160BC  D001               	goto	u10910
  5075  0160BE                     u10900:
  5076  0160BE  0E00               	movlw	0
  5077  0160C0                     u10910:
  5078  0160C0  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  5079                           
  5080                           ; BSR set to: 1
  5081                           ;mconfig.c: 73:     StartTimer(TMR_FLIPPER, 1500);
  5082  0160C2  0EDC               	movlw	220
  5083  0160C4  6EE6               	movwf	postinc1,c
  5084  0160C6  0E05               	movlw	5
  5085  0160C8  6EE6               	movwf	postinc1,c
  5086  0160CA  0E0B               	movlw	11
  5087  0160CC  6EE6               	movwf	postinc1,c
  5088  0160CE  EC0D  F0C4         	call	_StartTimer	;wreg free
  5089  0160D2                     l1560:
  5090                           
  5091                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5092  0160D2  52E5               	movf	postdec1,f,c
  5093  0160D4  0012               	return		;funcret
  5094  0160D6                     __end_of_check_help:
  5095                           	opt callstack 0
  5096                           
  5097 ;; *************** function _vterm_dump *****************
  5098 ;; Defined at:
  5099 ;;		line 118 in file "mconfig.c"
  5100 ;; Parameters:    Size  Location     Type
  5101 ;;		None
  5102 ;; Auto vars:     Size  Location     Type
  5103 ;;		None
  5104 ;; Return value:  Size  Location     Type
  5105 ;;                  1  [STACK] void 
  5106 ;; Registers used:
  5107 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5108 ;; Tracked objects:
  5109 ;;		On entry : 3F/1
  5110 ;;		On exit  : 0/0
  5111 ;;		Unchanged: 0/0
  5112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5117 ;;Total ram usage:        0 bytes
  5118 ;; Hardware stack levels used:    1
  5119 ;; Hardware stack levels required when called:   17
  5120 ;; This function calls:
  5121 ;;		_WaitMs
  5122 ;;		_eaDogM_WriteStringAtPos
  5123 ;;		_get_vterm_ptr
  5124 ;;		_sprintf
  5125 ;;		_wait_lcd_done
  5126 ;; This function is called by:
  5127 ;;		_check_help
  5128 ;; This function uses a reentrant model
  5129 ;;
  5130                           
  5131                           	psect	text20
  5132  016E50                     __ptext20:
  5133                           	opt callstack 0
  5134  016E50                     _vterm_dump:
  5135                           	opt callstack 12
  5136                           
  5137                           ;mconfig.c: 120:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  5138                           
  5139                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5140                           ;incstack = 0
  5141  016E50  0E01               	movlw	1
  5142  016E52  6EE6               	movwf	postinc1,c
  5143  016E54  0E00               	movlw	0
  5144  016E56  6EE6               	movwf	postinc1,c
  5145  016E58  ECF9  F0C4         	call	_get_vterm_ptr	;wreg free
  5146  016E5C  0060  F0CB  FFE6   	movff	btemp,postinc1
  5147  016E62  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5148  016E68  0E00               	movlw	0
  5149  016E6A  6EE6               	movwf	postinc1,c
  5150  016E6C  0E00               	movlw	0
  5151  016E6E  6EE6               	movwf	postinc1,c
  5152  016E70  ECF9  F0C4         	call	_get_vterm_ptr	;wreg free
  5153  016E74  0060  F0CB  FFE6   	movff	btemp,postinc1
  5154  016E7A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5155  016E80  0E86               	movlw	low STR_21
  5156  016E82  6EE6               	movwf	postinc1,c
  5157  016E84  0EFF               	movlw	high STR_21
  5158  016E86  6EE6               	movwf	postinc1,c
  5159  016E88  0E01               	movlw	low (_V+1)
  5160  016E8A  6EE6               	movwf	postinc1,c
  5161  016E8C  0E01               	movlw	high (_V+1)
  5162  016E8E  6EE6               	movwf	postinc1,c
  5163  016E90  0E08               	movlw	8
  5164  016E92  6EE6               	movwf	postinc1,c
  5165  016E94  ECEE  F0B9         	call	_sprintf	;wreg free
  5166                           
  5167                           ;mconfig.c: 121:  wait_lcd_done();
  5168  016E98  EC72  F0C7         	call	_wait_lcd_done	;wreg free
  5169                           
  5170                           ; BSR set to: 0
  5171                           ;mconfig.c: 122:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  5172  016E9C  0E01               	movlw	low (_V+1)
  5173  016E9E  6EE6               	movwf	postinc1,c
  5174  016EA0  0E01               	movlw	high (_V+1)
  5175  016EA2  6EE6               	movwf	postinc1,c
  5176  016EA4  0E00               	movlw	0
  5177  016EA6  6EE6               	movwf	postinc1,c
  5178  016EA8  0E00               	movlw	0
  5179  016EAA  6EE6               	movwf	postinc1,c
  5180  016EAC  EC62  F0C4         	call	_eaDogM_WriteStringAtPos	;wreg free
  5181                           
  5182                           ; BSR set to: 59
  5183                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  5184  016EB0  0E01               	movlw	1
  5185  016EB2  6EE6               	movwf	postinc1,c
  5186  016EB4  0E01               	movlw	1
  5187  016EB6  6EE6               	movwf	postinc1,c
  5188  016EB8  ECF9  F0C4         	call	_get_vterm_ptr	;wreg free
  5189  016EBC  0060  F0CB  FFE6   	movff	btemp,postinc1
  5190  016EC2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5191  016EC8  0E00               	movlw	0
  5192  016ECA  6EE6               	movwf	postinc1,c
  5193  016ECC  0E01               	movlw	1
  5194  016ECE  6EE6               	movwf	postinc1,c
  5195  016ED0  ECF9  F0C4         	call	_get_vterm_ptr	;wreg free
  5196  016ED4  0060  F0CB  FFE6   	movff	btemp,postinc1
  5197  016EDA  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5198  016EE0  0E86               	movlw	low STR_21
  5199  016EE2  6EE6               	movwf	postinc1,c
  5200  016EE4  0EFF               	movlw	high STR_21
  5201  016EE6  6EE6               	movwf	postinc1,c
  5202  016EE8  0E01               	movlw	low (_V+1)
  5203  016EEA  6EE6               	movwf	postinc1,c
  5204  016EEC  0E01               	movlw	high (_V+1)
  5205  016EEE  6EE6               	movwf	postinc1,c
  5206  016EF0  0E08               	movlw	8
  5207  016EF2  6EE6               	movwf	postinc1,c
  5208  016EF4  ECEE  F0B9         	call	_sprintf	;wreg free
  5209                           
  5210                           ;mconfig.c: 124:  wait_lcd_done();
  5211  016EF8  EC72  F0C7         	call	_wait_lcd_done	;wreg free
  5212                           
  5213                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  5214  016EFC  0E01               	movlw	low (_V+1)
  5215  016EFE  6EE6               	movwf	postinc1,c
  5216  016F00  0E01               	movlw	high (_V+1)
  5217  016F02  6EE6               	movwf	postinc1,c
  5218  016F04  0E00               	movlw	0
  5219  016F06  6EE6               	movwf	postinc1,c
  5220  016F08  0E01               	movlw	1
  5221  016F0A  6EE6               	movwf	postinc1,c
  5222  016F0C  EC62  F0C4         	call	_eaDogM_WriteStringAtPos	;wreg free
  5223                           
  5224                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  5225  016F10  0E01               	movlw	1
  5226  016F12  6EE6               	movwf	postinc1,c
  5227  016F14  0E02               	movlw	2
  5228  016F16  6EE6               	movwf	postinc1,c
  5229  016F18  ECF9  F0C4         	call	_get_vterm_ptr	;wreg free
  5230  016F1C  0060  F0CB  FFE6   	movff	btemp,postinc1
  5231  016F22  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5232  016F28  0E00               	movlw	0
  5233  016F2A  6EE6               	movwf	postinc1,c
  5234  016F2C  0E02               	movlw	2
  5235  016F2E  6EE6               	movwf	postinc1,c
  5236  016F30  ECF9  F0C4         	call	_get_vterm_ptr	;wreg free
  5237  016F34  0060  F0CB  FFE6   	movff	btemp,postinc1
  5238  016F3A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5239  016F40  0E86               	movlw	low STR_21
  5240  016F42  6EE6               	movwf	postinc1,c
  5241  016F44  0EFF               	movlw	high STR_21
  5242  016F46  6EE6               	movwf	postinc1,c
  5243  016F48  0E01               	movlw	low (_V+1)
  5244  016F4A  6EE6               	movwf	postinc1,c
  5245  016F4C  0E01               	movlw	high (_V+1)
  5246  016F4E  6EE6               	movwf	postinc1,c
  5247  016F50  0E08               	movlw	8
  5248  016F52  6EE6               	movwf	postinc1,c
  5249  016F54  ECEE  F0B9         	call	_sprintf	;wreg free
  5250                           
  5251                           ;mconfig.c: 127:  wait_lcd_done();
  5252  016F58  EC72  F0C7         	call	_wait_lcd_done	;wreg free
  5253                           
  5254                           ; BSR set to: 0
  5255                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  5256  016F5C  0E01               	movlw	low (_V+1)
  5257  016F5E  6EE6               	movwf	postinc1,c
  5258  016F60  0E01               	movlw	high (_V+1)
  5259  016F62  6EE6               	movwf	postinc1,c
  5260  016F64  0E00               	movlw	0
  5261  016F66  6EE6               	movwf	postinc1,c
  5262  016F68  0E02               	movlw	2
  5263  016F6A  6EE6               	movwf	postinc1,c
  5264  016F6C  EC62  F0C4         	call	_eaDogM_WriteStringAtPos	;wreg free
  5265                           
  5266                           ; BSR set to: 59
  5267                           ;mconfig.c: 129:  WaitMs(3000);
  5268  016F70  0EB8               	movlw	184
  5269  016F72  6EE6               	movwf	postinc1,c
  5270  016F74  0E0B               	movlw	11
  5271  016F76  6EE6               	movwf	postinc1,c
  5272  016F78  EC47  F0C4         	call	_WaitMs	;wreg free
  5273                           
  5274                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  5275  016F7C  0012               	return		;funcret
  5276  016F7E                     __end_of_vterm_dump:
  5277                           	opt callstack 0
  5278                           
  5279 ;; *************** function _sprintf *****************
  5280 ;; Defined at:
  5281 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  5282 ;; Parameters:    Size  Location     Type
  5283 ;;  s               2  [STACK] PTR unsigned char 
  5284 ;;		 -> D.lcd(216), D(218), V(227), 
  5285 ;;  fmt             2  [STACK] PTR const unsigned char 
  5286 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
  5287 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
  5288 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
  5289 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
  5290 ;;		 -> STR_11(18), STR_10(14), STR_9(14), STR_8(17), 
  5291 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
  5292 ;;		 -> STR_1(17), 
  5293 ;; Auto vars:     Size  Location     Type
  5294 ;;  f               6  [STACK] struct _IO_FILE
  5295 ;;  ap              2  [STACK] PTR void [1]
  5296 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5297 ;;  ret             2    0        int 
  5298 ;; Return value:  Size  Location     Type
  5299 ;;                  2  [STACK] int 
  5300 ;; Registers used:
  5301 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5302 ;; Tracked objects:
  5303 ;;		On entry : 0/5
  5304 ;;		On exit  : 0/0
  5305 ;;		Unchanged: 0/0
  5306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5311 ;;Total ram usage:        0 bytes
  5312 ;; Hardware stack levels used:    1
  5313 ;; Hardware stack levels required when called:   14
  5314 ;; This function calls:
  5315 ;;		_vfprintf
  5316 ;; This function is called by:
  5317 ;;		_main
  5318 ;;		_check_help
  5319 ;;		_vterm_dump
  5320 ;; This function uses a reentrant model
  5321 ;;
  5322                           
  5323                           	psect	text21
  5324  0173DC                     __ptext21:
  5325                           	opt callstack 0
  5326  0173DC                     _sprintf:
  5327                           	opt callstack 0
  5328                           
  5329                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 14, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  5330  0173DC  0E08               	movlw	8
  5331  0173DE  26E1               	addwf	fsr1l,f,c
  5332  0173E0  0E00               	movlw	0
  5333  0173E2  22E2               	addwfc	fsr1h,f,c
  5334                           
  5335                           ;incstack = 0
  5336  0173E4  0EFE               	movlw	254
  5337  0173E6  6E3C               	movwf	(btemp+10)^0,c
  5338  0173E8  0EFF               	movlw	255
  5339  0173EA  6E3D               	movwf	(btemp+11)^0,c
  5340                           
  5341                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  5342  0173EC  0EF5               	movlw	245
  5343  0173EE  24E1               	addwf	fsr1l,w,c
  5344  0173F0  6E3A               	movwf	(btemp+8)^0,c
  5345  0173F2  0EFF               	movlw	255
  5346  0173F4  20E2               	addwfc	fsr1h,w,c
  5347  0173F6  6E3B               	movwf	(btemp+9)^0,c
  5348  0173F8  503C               	movf	(btemp+10)^0,w,c
  5349  0173FA  263A               	addwf	(btemp+8)^0,f,c
  5350  0173FC  503D               	movf	(btemp+11)^0,w,c
  5351  0173FE  223B               	addwfc	(btemp+9)^0,f,c
  5352                           
  5353                           ;stkvar	_ap @ sp[(-8)+6]
  5354  017400  0EFF               	movlw	-1
  5355  017402  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  5356  017408  0EFE               	movlw	-2
  5357  01740A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  5358                           
  5359                           ;stkvar	_s @ sp[(-8)+-3]
  5360  017410  0EF5               	movlw	-11
  5361  017412  006F FF8C  F03C    	movff	plusw1,btemp+10
  5362  017418  0EF6               	movlw	-10
  5363  01741A  006F FF8C  F03D    	movff	plusw1,btemp+11
  5364                           
  5365                           ;stkvar	_f @ sp[(-8)+0]
  5366  017420  0EF9               	movlw	-7
  5367  017422  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  5368  017428  0EF8               	movlw	-8
  5369  01742A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  5370                           
  5371                           ;stkvar	_f @ sp[(-8)+0]
  5372  017430  0EFA               	movlw	250
  5373  017432  24E1               	addwf	fsr1l,w,c
  5374  017434  6ED9               	movwf	fsr2l,c
  5375  017436  0EFF               	movlw	255
  5376  017438  20E2               	addwfc	fsr1h,w,c
  5377  01743A  6EDA               	movwf	fsr2h,c
  5378  01743C  0E00               	movlw	0
  5379  01743E  6EDE               	movwf	postinc2,c
  5380  017440  0E00               	movlw	0
  5381  017442  6EDD               	movwf	postdec2,c
  5382                           
  5383                           ;stkvar	_f @ sp[(-8)+0]
  5384  017444  0EFC               	movlw	252
  5385  017446  24E1               	addwf	fsr1l,w,c
  5386  017448  6ED9               	movwf	fsr2l,c
  5387  01744A  0EFF               	movlw	255
  5388  01744C  20E2               	addwfc	fsr1h,w,c
  5389  01744E  6EDA               	movwf	fsr2h,c
  5390  017450  0E00               	movlw	0
  5391  017452  6EDE               	movwf	postinc2,c
  5392  017454  0E00               	movlw	0
  5393  017456  6EDD               	movwf	postdec2,c
  5394                           
  5395                           ;stkvar	_ap @ sp[(-8)+6]
  5396  017458  0EFE               	movlw	254
  5397  01745A  24E1               	addwf	fsr1l,w,c
  5398  01745C  6E32               	movwf	btemp^0,c
  5399  01745E  0EFF               	movlw	255
  5400  017460  20E2               	addwfc	fsr1h,w,c
  5401  017462  6E33               	movwf	(btemp+1)^0,c
  5402  017464  0060  F0CB  FFE6   	movff	btemp,postinc1
  5403  01746A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5404                           
  5405                           ;stkvar	_fmt @ sp[(-10)+-5]
  5406  017470  0EF1               	movlw	-15
  5407  017472  006F FF8F FFE6     	movff	plusw1,postinc1
  5408  017478  006F FF8F FFE6     	movff	plusw1,postinc1
  5409                           
  5410                           ;stkvar	_f @ sp[(-12)+0]
  5411  01747E  0EF4               	movlw	244
  5412  017480  24E1               	addwf	fsr1l,w,c
  5413  017482  6E32               	movwf	btemp^0,c
  5414  017484  0EFF               	movlw	255
  5415  017486  20E2               	addwfc	fsr1h,w,c
  5416  017488  6E33               	movwf	(btemp+1)^0,c
  5417  01748A  0060  F0CB  FFE6   	movff	btemp,postinc1
  5418  017490  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5419  017496  ECDE  F0BC         	call	_vfprintf	;wreg free
  5420                           
  5421                           ;stkvar	_f @ sp[(-8)+0]
  5422  01749A  0EFA               	movlw	250
  5423  01749C  24E1               	addwf	fsr1l,w,c
  5424  01749E  6ED9               	movwf	fsr2l,c
  5425  0174A0  0EFF               	movlw	255
  5426  0174A2  20E2               	addwfc	fsr1h,w,c
  5427  0174A4  6EDA               	movwf	fsr2h,c
  5428  0174A6  006F FF78  F03C    	movff	postinc2,btemp+10
  5429  0174AC  006F FF74  F03D    	movff	postdec2,btemp+11
  5430                           
  5431                           ;stkvar	_s @ sp[(-8)+-3]
  5432  0174B2  0EF5               	movlw	-11
  5433  0174B4  006F FF8C  F03A    	movff	plusw1,btemp+8
  5434  0174BA  0EF6               	movlw	-10
  5435  0174BC  006F FF8C  F03B    	movff	plusw1,btemp+9
  5436  0174C2  503C               	movf	(btemp+10)^0,w,c
  5437  0174C4  243A               	addwf	(btemp+8)^0,w,c
  5438  0174C6  6ED9               	movwf	fsr2l,c
  5439  0174C8  503D               	movf	(btemp+11)^0,w,c
  5440  0174CA  203B               	addwfc	(btemp+9)^0,w,c
  5441  0174CC  6EDA               	movwf	fsr2h,c
  5442  0174CE  0E00               	movlw	0
  5443  0174D0  6EDF               	movwf	indf2,c
  5444                           
  5445                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 14, args
      +                          ize = 4, vargsize = 0
  5446  0174D2  0EF8               	movlw	248
  5447  0174D4  26E1               	addwf	fsr1l,f,c
  5448  0174D6  0EFF               	movlw	255
  5449  0174D8  22E2               	addwfc	fsr1h,f,c
  5450  0174DA  52E5               	movf	postdec1,f,c
  5451  0174DC  50E7               	movf	indf1,w,c
  5452  0174DE  5EE1               	subwf	fsr1l,f,c
  5453  0174E0  0E00               	movlw	0
  5454  0174E2  5AE2               	subwfb	fsr1h,f,c
  5455  0174E4  0012               	return		;funcret
  5456  0174E6                     __end_of_sprintf:
  5457                           	opt callstack 0
  5458                           
  5459 ;; *************** function _get_vterm_ptr *****************
  5460 ;; Defined at:
  5461 ;;		line 113 in file "mconfig.c"
  5462 ;; Parameters:    Size  Location     Type
  5463 ;;  line            1  [STACK] const unsigned char 
  5464 ;;  vterm           1  [STACK] const unsigned char 
  5465 ;; Auto vars:     Size  Location     Type
  5466 ;;		None
  5467 ;; Return value:  Size  Location     Type
  5468 ;;                  2  [STACK] PTR unsigned char 
  5469 ;; Registers used:
  5470 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  5471 ;; Tracked objects:
  5472 ;;		On entry : 0/5
  5473 ;;		On exit  : 0/0
  5474 ;;		Unchanged: 0/0
  5475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5480 ;;Total ram usage:        0 bytes
  5481 ;; Hardware stack levels used:    1
  5482 ;; Hardware stack levels required when called:    6
  5483 ;; This function calls:
  5484 ;;		Nothing
  5485 ;; This function is called by:
  5486 ;;		_main
  5487 ;;		_check_help
  5488 ;;		_vterm_dump
  5489 ;; This function uses a reentrant model
  5490 ;;
  5491                           
  5492                           	psect	text22
  5493  0189F2                     __ptext22:
  5494                           	opt callstack 0
  5495  0189F2                     _get_vterm_ptr:
  5496                           	opt callstack 24
  5497                           
  5498                           ;mconfig.c: 113: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 114: {;mconfig.c: 115:  return D.lcd[vterm & 0x03][line & 0x03];
  5499                           ;stkvar	_vterm @ sp[(0)+-2]
  5500                           
  5501                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5502                           ;incstack = 0
  5503  0189F2  0EFE               	movlw	-2
  5504  0189F4  50E3               	movf	plusw1,w,c
  5505  0189F6  0B03               	andlw	3
  5506  0189F8  0D36               	mullw	54
  5507  0189FA  0E00               	movlw	low _D
  5508  0189FC  6E32               	movwf	btemp^0,c
  5509  0189FE  0E05               	movlw	high _D
  5510  018A00  6E33               	movwf	(btemp+1)^0,c
  5511  018A02  50F3               	movf	243,w,c
  5512  018A04  2632               	addwf	btemp^0,f,c
  5513  018A06  50F4               	movf	244,w,c
  5514  018A08  2233               	addwfc	(btemp+1)^0,f,c
  5515                           
  5516                           ;stkvar	_line @ sp[(0)+-1]
  5517  018A0A  0EFF               	movlw	-1
  5518  018A0C  50E3               	movf	plusw1,w,c
  5519  018A0E  0B03               	andlw	3
  5520  018A10  0D12               	mullw	18
  5521  018A12  50F3               	movf	243,w,c
  5522  018A14  2632               	addwf	btemp^0,f,c
  5523  018A16  50F4               	movf	244,w,c
  5524  018A18  2233               	addwfc	(btemp+1)^0,f,c
  5525                           
  5526                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  5527  018A1A  52E5               	movf	postdec1,f,c
  5528  018A1C  52E5               	movf	postdec1,f,c
  5529  018A1E  0012               	return		;funcret
  5530  018A20                     __end_of_get_vterm_ptr:
  5531                           	opt callstack 0
  5532                           
  5533 ;; *************** function _WaitMs *****************
  5534 ;; Defined at:
  5535 ;;		line 32 in file "timers.c"
  5536 ;; Parameters:    Size  Location     Type
  5537 ;;  numMilliseco    2  [STACK] const unsigned short 
  5538 ;; Auto vars:     Size  Location     Type
  5539 ;;		None
  5540 ;; Return value:  Size  Location     Type
  5541 ;;                  1  [STACK] void 
  5542 ;; Registers used:
  5543 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  5544 ;; Tracked objects:
  5545 ;;		On entry : 1/1
  5546 ;;		On exit  : 0/0
  5547 ;;		Unchanged: 0/0
  5548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5553 ;;Total ram usage:        0 bytes
  5554 ;; Hardware stack levels used:    1
  5555 ;; Hardware stack levels required when called:    7
  5556 ;; This function calls:
  5557 ;;		_StartTimer
  5558 ;;		_TimerDone
  5559 ;; This function is called by:
  5560 ;;		_main
  5561 ;;		_vterm_dump
  5562 ;; This function uses a reentrant model
  5563 ;;
  5564                           
  5565                           	psect	text23
  5566  01888E                     __ptext23:
  5567                           	opt callstack 0
  5568  01888E                     _WaitMs:
  5569                           	opt callstack 21
  5570                           
  5571                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  5572                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  5573                           
  5574                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5575                           ;incstack = 0
  5576  01888E  0EFE               	movlw	-2
  5577  018890  006F FF8F FFE6     	movff	plusw1,postinc1
  5578  018896  006F FF8F FFE6     	movff	plusw1,postinc1
  5579  01889C  0E00               	movlw	0
  5580  01889E  6EE6               	movwf	postinc1,c
  5581  0188A0  EC0D  F0C4         	call	_StartTimer	;wreg free
  5582                           
  5583                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  5584  0188A4  D005               	goto	l8219
  5585  0188A6                     l1486:
  5586                           
  5587                           ;timers.c: 36:   __nop();
  5588  0188A6  F000               	nop	
  5589                           
  5590                           ;timers.c: 37:   __nop();
  5591  0188A8  F000               	nop	
  5592                           
  5593                           ;timers.c: 38:   __nop();
  5594  0188AA  F000               	nop	
  5595                           
  5596                           ;timers.c: 39:   __nop();
  5597  0188AC  F000               	nop	
  5598  0188AE  0004               	clrwdt		;# 
  5599  0188B0                     l8219:
  5600                           
  5601                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  5602  0188B0  0E00               	movlw	0
  5603  0188B2  6EE6               	movwf	postinc1,c
  5604  0188B4  ECCF  F0C6         	call	_TimerDone	;wreg free
  5605  0188B8  5032               	movf	btemp^0,w,c
  5606  0188BA  B4D8               	btfsc	status,2,c
  5607  0188BC  D7F4               	goto	l1486
  5608                           
  5609                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  5610  0188BE  52E5               	movf	postdec1,f,c
  5611  0188C0  52E5               	movf	postdec1,f,c
  5612  0188C2  0012               	return		;funcret
  5613  0188C4                     __end_of_WaitMs:
  5614                           	opt callstack 0
  5615                           
  5616 ;; *************** function _update_lcd *****************
  5617 ;; Defined at:
  5618 ;;		line 82 in file "mconfig.c"
  5619 ;; Parameters:    Size  Location     Type
  5620 ;;  vterm           1  [STACK] unsigned char 
  5621 ;; Auto vars:     Size  Location     Type
  5622 ;;		None
  5623 ;; Return value:  Size  Location     Type
  5624 ;;                  1  [STACK] unsigned char 
  5625 ;; Registers used:
  5626 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5627 ;; Tracked objects:
  5628 ;;		On entry : 0/5
  5629 ;;		On exit  : 1/1
  5630 ;;		Unchanged: 0/0
  5631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5636 ;;Total ram usage:        0 bytes
  5637 ;; Hardware stack levels used:    1
  5638 ;; Hardware stack levels required when called:   17
  5639 ;; This function calls:
  5640 ;;		_eaDogM_WriteStringAtPos
  5641 ;;		_wait_lcd_done
  5642 ;; This function is called by:
  5643 ;;		_main
  5644 ;;		_check_help
  5645 ;; This function uses a reentrant model
  5646 ;;
  5647                           
  5648                           	psect	text24
  5649  0172CE                     __ptext24:
  5650                           	opt callstack 0
  5651  0172CE                     _update_lcd:
  5652                           	opt callstack 13
  5653                           
  5654                           ;mconfig.c: 82: uint8_t update_lcd(uint8_t vterm);mconfig.c: 83: {;mconfig.c: 84:  vterm
      +                           = vterm & 0x03;
  5655                           ;stkvar	_vterm @ sp[(0)+-1]
  5656                           
  5657                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5658                           ;incstack = 0
  5659  0172CE  0EFF               	movlw	-1
  5660  0172D0  006F FF8C  F032    	movff	plusw1,btemp
  5661  0172D6  0E03               	movlw	3
  5662  0172D8  1632               	andwf	btemp^0,f,c
  5663  0172DA  0EFF               	movlw	-1
  5664  0172DC  0060  F0CB  FFE3   	movff	btemp,plusw1
  5665                           
  5666                           ;mconfig.c: 86:  if (D.vterm >= 1 && vterm == 0)
  5667  0172E2  0105               	movlb	5	; () banked
  5668  0172E4  A1D8               	btfss	(_D+216)& (0+255),0,b
  5669  0172E6  D004               	goto	l10365
  5670                           
  5671                           ; BSR set to: 5
  5672                           ;stkvar	_vterm @ sp[(0)+-1]
  5673  0172E8  0EFF               	movlw	-1
  5674  0172EA  50E3               	movf	plusw1,w,c
  5675  0172EC  B4D8               	btfsc	status,2,c
  5676  0172EE  D074               	goto	l1564
  5677  0172F0                     l10365:
  5678                           
  5679                           ; BSR set to: 5
  5680                           ;mconfig.c: 89:  D.lcd[vterm][0][16] = 0;
  5681                           ;stkvar	_vterm @ sp[(0)+-1]
  5682  0172F0  0EFF               	movlw	-1
  5683  0172F2  50E3               	movf	plusw1,w,c
  5684  0172F4  0D36               	mullw	54
  5685  0172F6  0E10               	movlw	low (_D+16)
  5686  0172F8  24F3               	addwf	243,w,c
  5687  0172FA  6ED9               	movwf	fsr2l,c
  5688  0172FC  0E05               	movlw	high (_D+16)
  5689  0172FE  20F4               	addwfc	prodh,w,c
  5690  017300  6EDA               	movwf	fsr2h,c
  5691  017302  0E00               	movlw	0
  5692  017304  6EDF               	movwf	indf2,c
  5693                           
  5694                           ;mconfig.c: 90:  D.lcd[vterm][1][16] = 0;
  5695                           ;stkvar	_vterm @ sp[(0)+-1]
  5696  017306  0EFF               	movlw	-1
  5697  017308  50E3               	movf	plusw1,w,c
  5698  01730A  0D36               	mullw	54
  5699  01730C  0E22               	movlw	low (_D+34)
  5700  01730E  24F3               	addwf	243,w,c
  5701  017310  6ED9               	movwf	fsr2l,c
  5702  017312  0E05               	movlw	high (_D+34)
  5703  017314  20F4               	addwfc	prodh,w,c
  5704  017316  6EDA               	movwf	fsr2h,c
  5705  017318  0E00               	movlw	0
  5706  01731A  6EDF               	movwf	indf2,c
  5707                           
  5708                           ;mconfig.c: 91:  D.lcd[vterm][2][16] = 0;
  5709                           ;stkvar	_vterm @ sp[(0)+-1]
  5710  01731C  0EFF               	movlw	-1
  5711  01731E  50E3               	movf	plusw1,w,c
  5712  017320  0D36               	mullw	54
  5713  017322  0E34               	movlw	low (_D+52)
  5714  017324  24F3               	addwf	243,w,c
  5715  017326  6ED9               	movwf	fsr2l,c
  5716  017328  0E05               	movlw	high (_D+52)
  5717  01732A  20F4               	addwfc	prodh,w,c
  5718  01732C  6EDA               	movwf	fsr2h,c
  5719  01732E  0E00               	movlw	0
  5720  017330  6EDF               	movwf	indf2,c
  5721                           
  5722                           ; BSR set to: 5
  5723                           ;mconfig.c: 92:  wait_lcd_done();
  5724  017332  EC72  F0C7         	call	_wait_lcd_done	;wreg free
  5725                           
  5726                           ; BSR set to: 0
  5727                           ;mconfig.c: 93:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  5728                           ;stkvar	_vterm @ sp[(0)+-1]
  5729  017336  0EFF               	movlw	-1
  5730  017338  50E3               	movf	plusw1,w,c
  5731  01733A  0D36               	mullw	54
  5732  01733C  0E00               	movlw	low _D
  5733  01733E  6E3C               	movwf	(btemp+10)^0,c
  5734  017340  0E05               	movlw	high _D
  5735  017342  6E3D               	movwf	(btemp+11)^0,c
  5736  017344  50F3               	movf	243,w,c
  5737  017346  263C               	addwf	(btemp+10)^0,f,c
  5738  017348  50F4               	movf	244,w,c
  5739  01734A  223D               	addwfc	(btemp+11)^0,f,c
  5740  01734C  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5741  017352  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5742  017358  0E00               	movlw	0
  5743  01735A  6EE6               	movwf	postinc1,c
  5744  01735C  0E00               	movlw	0
  5745  01735E  6EE6               	movwf	postinc1,c
  5746  017360  EC62  F0C4         	call	_eaDogM_WriteStringAtPos	;wreg free
  5747                           
  5748                           ; BSR set to: 59
  5749                           ;mconfig.c: 94:  wait_lcd_done();
  5750  017364  EC72  F0C7         	call	_wait_lcd_done	;wreg free
  5751                           
  5752                           ; BSR set to: 0
  5753                           ;mconfig.c: 95:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  5754                           ;stkvar	_vterm @ sp[(0)+-1]
  5755  017368  0EFF               	movlw	-1
  5756  01736A  50E3               	movf	plusw1,w,c
  5757  01736C  0D36               	mullw	54
  5758  01736E  0E00               	movlw	low _D
  5759  017370  6E3C               	movwf	(btemp+10)^0,c
  5760  017372  0E05               	movlw	high _D
  5761  017374  6E3D               	movwf	(btemp+11)^0,c
  5762  017376  0E12               	movlw	18
  5763  017378  263C               	addwf	(btemp+10)^0,f,c
  5764  01737A  0E00               	movlw	0
  5765  01737C  223D               	addwfc	(btemp+11)^0,f,c
  5766  01737E  50F3               	movf	243,w,c
  5767  017380  263C               	addwf	(btemp+10)^0,f,c
  5768  017382  50F4               	movf	244,w,c
  5769  017384  223D               	addwfc	(btemp+11)^0,f,c
  5770  017386  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5771  01738C  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5772  017392  0E00               	movlw	0
  5773  017394  6EE6               	movwf	postinc1,c
  5774  017396  0E01               	movlw	1
  5775  017398  6EE6               	movwf	postinc1,c
  5776  01739A  EC62  F0C4         	call	_eaDogM_WriteStringAtPos	;wreg free
  5777                           
  5778                           ; BSR set to: 59
  5779                           ;mconfig.c: 96:  wait_lcd_done();
  5780  01739E  EC72  F0C7         	call	_wait_lcd_done	;wreg free
  5781                           
  5782                           ; BSR set to: 0
  5783                           ;mconfig.c: 97:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  5784                           ;stkvar	_vterm @ sp[(0)+-1]
  5785  0173A2  0EFF               	movlw	-1
  5786  0173A4  50E3               	movf	plusw1,w,c
  5787  0173A6  0D36               	mullw	54
  5788  0173A8  0E00               	movlw	low _D
  5789  0173AA  6E3C               	movwf	(btemp+10)^0,c
  5790  0173AC  0E05               	movlw	high _D
  5791  0173AE  6E3D               	movwf	(btemp+11)^0,c
  5792  0173B0  0E24               	movlw	36
  5793  0173B2  263C               	addwf	(btemp+10)^0,f,c
  5794  0173B4  0E00               	movlw	0
  5795  0173B6  223D               	addwfc	(btemp+11)^0,f,c
  5796  0173B8  50F3               	movf	243,w,c
  5797  0173BA  263C               	addwf	(btemp+10)^0,f,c
  5798  0173BC  50F4               	movf	244,w,c
  5799  0173BE  223D               	addwfc	(btemp+11)^0,f,c
  5800  0173C0  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5801  0173C6  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5802  0173CC  0E00               	movlw	0
  5803  0173CE  6EE6               	movwf	postinc1,c
  5804  0173D0  0E02               	movlw	2
  5805  0173D2  6EE6               	movwf	postinc1,c
  5806  0173D4  EC62  F0C4         	call	_eaDogM_WriteStringAtPos	;wreg free
  5807  0173D8                     l1564:
  5808                           
  5809                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5810  0173D8  52E5               	movf	postdec1,f,c
  5811  0173DA  0012               	return		;funcret
  5812  0173DC                     __end_of_update_lcd:
  5813                           	opt callstack 0
  5814                           
  5815 ;; *************** function _eaDogM_WriteStringAtPos *****************
  5816 ;; Defined at:
  5817 ;;		line 252 in file "eadog.c"
  5818 ;; Parameters:    Size  Location     Type
  5819 ;;  r               1  [STACK] const unsigned char 
  5820 ;;  c               1  [STACK] const unsigned char 
  5821 ;;  strPtr          2  [STACK] PTR unsigned char 
  5822 ;;		 -> D.lcd(216), D(218), V(227), 
  5823 ;; Auto vars:     Size  Location     Type
  5824 ;;		None
  5825 ;; Return value:  Size  Location     Type
  5826 ;;                  1  [STACK] void 
  5827 ;; Registers used:
  5828 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5829 ;; Tracked objects:
  5830 ;;		On entry : 3F/0
  5831 ;;		On exit  : 3F/3B
  5832 ;;		Unchanged: 0/0
  5833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5838 ;;Total ram usage:        0 bytes
  5839 ;; Hardware stack levels used:    1
  5840 ;; Hardware stack levels required when called:   16
  5841 ;; This function calls:
  5842 ;;		_eaDogM_WriteString
  5843 ;;		_send_lcd_cmd_dma
  5844 ;; This function is called by:
  5845 ;;		_update_lcd
  5846 ;;		_vterm_dump
  5847 ;; This function uses a reentrant model
  5848 ;;
  5849                           
  5850                           	psect	text25
  5851  0188C4                     __ptext25:
  5852                           	opt callstack 0
  5853  0188C4                     _eaDogM_WriteStringAtPos:
  5854                           	opt callstack 13
  5855                           
  5856                           ;eadog.c: 252: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 253: {;eadog.c: 254:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  5857                           ;stkvar	_c @ sp[(0)+-2]
  5858                           
  5859                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5860                           ;incstack = 0
  5861  0188C4  0EFE               	movlw	-2
  5862  0188C6  006F FF8C  F03D    	movff	plusw1,btemp+11
  5863                           
  5864                           ;stkvar	_r @ sp[(0)+-1]
  5865  0188CC  0EFF               	movlw	-1
  5866  0188CE  50E3               	movf	plusw1,w,c
  5867  0188D0  0D10               	mullw	16
  5868  0188D2  50F3               	movf	243,w,c
  5869  0188D4  243D               	addwf	(btemp+11)^0,w,c
  5870  0188D6  0F80               	addlw	128
  5871  0188D8  6EE6               	movwf	postinc1,c
  5872  0188DA  EC46  F0C2         	call	_send_lcd_cmd_dma	;wreg free
  5873                           
  5874                           ;eadog.c: 255:  eaDogM_WriteString(strPtr);
  5875                           ;stkvar	_strPtr @ sp[(0)+-4]
  5876  0188DE  0EFC               	movlw	-4
  5877  0188E0  006F FF8F FFE6     	movff	plusw1,postinc1
  5878  0188E6  006F FF8F FFE6     	movff	plusw1,postinc1
  5879  0188EC  EC32  F0BD         	call	_eaDogM_WriteString	;wreg free
  5880                           
  5881                           ; BSR set to: 59
  5882                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  5883  0188F0  52E5               	movf	postdec1,f,c
  5884  0188F2  52E5               	movf	postdec1,f,c
  5885  0188F4  52E5               	movf	postdec1,f,c
  5886  0188F6  52E5               	movf	postdec1,f,c
  5887  0188F8  0012               	return		;funcret
  5888  0188FA                     __end_of_eaDogM_WriteStringAtPos:
  5889                           	opt callstack 0
  5890                           
  5891 ;; *************** function _send_lcd_cmd_dma *****************
  5892 ;; Defined at:
  5893 ;;		line 205 in file "eadog.c"
  5894 ;; Parameters:    Size  Location     Type
  5895 ;;  strPtr          1  [STACK] unsigned char 
  5896 ;; Auto vars:     Size  Location     Type
  5897 ;;		None
  5898 ;; Return value:  Size  Location     Type
  5899 ;;                  1  [STACK] void 
  5900 ;; Registers used:
  5901 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5902 ;; Tracked objects:
  5903 ;;		On entry : 0/3D
  5904 ;;		On exit  : 3F/0
  5905 ;;		Unchanged: 0/0
  5906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5911 ;;Total ram usage:        0 bytes
  5912 ;; Hardware stack levels used:    1
  5913 ;; Hardware stack levels required when called:   15
  5914 ;; This function calls:
  5915 ;;		_printf
  5916 ;;		_ringBufS_flush
  5917 ;;		_start_lcd
  5918 ;;		_wait_lcd_done
  5919 ;;		_wait_lcd_set
  5920 ;; This function is called by:
  5921 ;;		_eaDogM_WriteCommand
  5922 ;;		_eaDogM_WriteStringAtPos
  5923 ;; This function uses a reentrant model
  5924 ;;
  5925                           
  5926                           	psect	text26
  5927  01848C                     __ptext26:
  5928                           	opt callstack 0
  5929  01848C                     _send_lcd_cmd_dma:
  5930                           	opt callstack 13
  5931                           
  5932                           ;eadog.c: 205: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 206: {;eadog.c: 208:  wait
      +                          _lcd_set();
  5933                           
  5934                           ; BSR set to: 59
  5935                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5936                           ;incstack = 0
  5937  01848C  EC54  F0C8         	call	_wait_lcd_set	;wreg free
  5938                           
  5939                           ; BSR set to: 0
  5940                           ;eadog.c: 210:  ringBufS_flush(spi_link.tx1a, 0);
  5941  018490  0E00               	movlw	0
  5942  018492  6EE6               	movwf	postinc1,c
  5943  018494  0060  F1FB  FFE6   	movff	_spi_link+6,postinc1
  5944  01849A  0060  F1FF  FFE6   	movff	_spi_link+7,postinc1
  5945  0184A0  EC22  F0BE         	call	_ringBufS_flush	;wreg free
  5946  0184A4  92BC               	bcf	188,1,c	;volatile
  5947  0184A6  94BC               	bcf	188,2,c	;volatile
  5948                           
  5949                           ;eadog.c: 213:  DMA1CON0bits.EN = 0;
  5950  0184A8  013B               	movlb	59	; () banked
  5951  0184AA  9FFC               	bcf	252,7,b	;volatile
  5952                           
  5953                           ; BSR set to: 59
  5954                           ;eadog.c: 214:  DMA1SSZ = 1;
  5955  0184AC  0E00               	movlw	0
  5956  0184AE  6FF8               	movwf	248,b	;volatile
  5957  0184B0  0E01               	movlw	1
  5958  0184B2  6FF7               	movwf	247,b	;volatile
  5959                           
  5960                           ; BSR set to: 59
  5961                           ;eadog.c: 215:  DMA1CON0bits.EN = 1;
  5962  0184B4  8FFC               	bsf	252,7,b	;volatile
  5963                           
  5964                           ; BSR set to: 59
  5965                           ;eadog.c: 216:  printf("%c", strPtr);
  5966                           ;stkvar	_strPtr @ sp[(0)+-1]
  5967  0184B6  0EFF               	movlw	-1
  5968  0184B8  50E3               	movf	plusw1,w,c
  5969  0184BA  6EE6               	movwf	postinc1,c
  5970  0184BC  0E00               	movlw	0
  5971  0184BE  6EE6               	movwf	postinc1,c
  5972  0184C0  0EF8               	movlw	low STR_13
  5973  0184C2  6EE6               	movwf	postinc1,c
  5974  0184C4  0EFF               	movlw	high STR_13
  5975  0184C6  6EE6               	movwf	postinc1,c
  5976  0184C8  0E04               	movlw	4
  5977  0184CA  6EE6               	movwf	postinc1,c
  5978  0184CC  EC5E  F0C1         	call	_printf	;wreg free
  5979                           
  5980                           ;eadog.c: 217:  start_lcd();
  5981  0184D0  EC57  F0C8         	call	_start_lcd	;wreg free
  5982                           
  5983                           ; BSR set to: 59
  5984                           ;eadog.c: 218:  wait_lcd_done();
  5985  0184D4  EC72  F0C7         	call	_wait_lcd_done	;wreg free
  5986                           
  5987                           ; BSR set to: 0
  5988  0184D8  82BC               	bsf	188,1,c	;volatile
  5989                           
  5990                           ; BSR set to: 0
  5991                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  5992  0184DA  52E5               	movf	postdec1,f,c
  5993  0184DC  0012               	return		;funcret
  5994  0184DE                     __end_of_send_lcd_cmd_dma:
  5995                           	opt callstack 0
  5996                           
  5997 ;; *************** function _wait_lcd_done *****************
  5998 ;; Defined at:
  5999 ;;		line 141 in file "eadog.c"
  6000 ;; Parameters:    Size  Location     Type
  6001 ;;		None
  6002 ;; Auto vars:     Size  Location     Type
  6003 ;;		None
  6004 ;; Return value:  Size  Location     Type
  6005 ;;                  1  [STACK] void 
  6006 ;; Registers used:
  6007 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6008 ;; Tracked objects:
  6009 ;;		On entry : 0/1
  6010 ;;		On exit  : 3F/0
  6011 ;;		Unchanged: 0/0
  6012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6017 ;;Total ram usage:        0 bytes
  6018 ;; Hardware stack levels used:    1
  6019 ;; Hardware stack levels required when called:    7
  6020 ;; This function calls:
  6021 ;;		_wdtdelay
  6022 ;; This function is called by:
  6023 ;;		_send_lcd_cmd_dma
  6024 ;;		_update_lcd
  6025 ;;		_vterm_dump
  6026 ;; This function uses a reentrant model
  6027 ;;
  6028                           
  6029                           	psect	text27
  6030  018EE4                     __ptext27:
  6031                           	opt callstack 0
  6032  018EE4                     _wait_lcd_done:
  6033                           	opt callstack 22
  6034                           
  6035                           ;eadog.c: 143:  while (spi_link.LCD_DATA);
  6036                           
  6037                           ; BSR set to: 0
  6038                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6039                           ;incstack = 0
  6040  018EE4  0100               	movlb	0	; () banked
  6041  018EE6  B778               	btfsc	_spi_link& (0+255),3,b	;volatile
  6042  018EE8  D7FD               	goto	_wait_lcd_done
  6043                           
  6044                           ; BSR set to: 0
  6045                           ;eadog.c: 144:  wdtdelay(50);
  6046  018EEA  0E32               	movlw	50
  6047  018EEC  6EE6               	movwf	postinc1,c
  6048  018EEE  0E00               	movlw	0
  6049  018EF0  6EE6               	movwf	postinc1,c
  6050  018EF2  0E00               	movlw	0
  6051  018EF4  6EE6               	movwf	postinc1,c
  6052  018EF6  0E00               	movlw	0
  6053  018EF8  6EE6               	movwf	postinc1,c
  6054  018EFA  ECEC  F0C1         	call	_wdtdelay	;wreg free
  6055                           
  6056                           ; BSR set to: 0
  6057                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  6058  018EFE  0012               	return		;funcret
  6059  018F00                     __end_of_wait_lcd_done:
  6060                           	opt callstack 0
  6061                           
  6062 ;; *************** function _wdtdelay *****************
  6063 ;; Defined at:
  6064 ;;		line 22 in file "eadog.c"
  6065 ;; Parameters:    Size  Location     Type
  6066 ;;  delay           4  [STACK] const unsigned long 
  6067 ;; Auto vars:     Size  Location     Type
  6068 ;;		None
  6069 ;; Return value:  Size  Location     Type
  6070 ;;                  1  [STACK] void 
  6071 ;; Registers used:
  6072 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6073 ;; Tracked objects:
  6074 ;;		On entry : 0/0
  6075 ;;		On exit  : 3F/0
  6076 ;;		Unchanged: 0/0
  6077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6082 ;;Total ram usage:        0 bytes
  6083 ;; Hardware stack levels used:    1
  6084 ;; Hardware stack levels required when called:    6
  6085 ;; This function calls:
  6086 ;;		Nothing
  6087 ;; This function is called by:
  6088 ;;		_init_display
  6089 ;;		_send_lcd_cmd
  6090 ;;		_send_lcd_cmd_long
  6091 ;;		_wait_lcd_done
  6092 ;; This function uses a reentrant model
  6093 ;;
  6094                           
  6095                           	psect	text28
  6096  0183D8                     __ptext28:
  6097                           	opt callstack 0
  6098  0183D8                     _wdtdelay:
  6099                           	opt callstack 22
  6100                           
  6101                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
  6102                           
  6103                           ; BSR set to: 0
  6104                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6105                           ;incstack = 0
  6106  0183D8  0100               	movlb	0	; () banked
  6107  0183DA  6B90               	clrf	wdtdelay@dcount& (0+255),b
  6108  0183DC  6B91               	clrf	(wdtdelay@dcount+1)& (0+255),b
  6109  0183DE  6B92               	clrf	(wdtdelay@dcount+2)& (0+255),b
  6110  0183E0  6B93               	clrf	(wdtdelay@dcount+3)& (0+255),b
  6111  0183E2                     l1331:
  6112                           
  6113                           ; BSR set to: 0
  6114                           ;eadog.c: 27:   __nop();
  6115  0183E2  F000               	nop	
  6116  0183E4  0004               	clrwdt		;# 
  6117                           
  6118                           ;eadog.c: 29:  };
  6119  0183E6  0E01               	movlw	1
  6120  0183E8  0100               	movlb	0	; () banked
  6121  0183EA  2790               	addwf	wdtdelay@dcount& (0+255),f,b
  6122  0183EC  0E00               	movlw	0
  6123  0183EE  2391               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  6124  0183F0  2392               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  6125  0183F2  2393               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  6126                           
  6127                           ; BSR set to: 0
  6128                           ;stkvar	_delay @ sp[(0)+-4]
  6129  0183F4  0EFC               	movlw	-4
  6130  0183F6  006F FF8C  F032    	movff	plusw1,btemp
  6131  0183FC  5190               	movf	wdtdelay@dcount& (0+255),w,b
  6132  0183FE  5C32               	subwf	btemp^0,w,c
  6133  018400  0EFD               	movlw	-3
  6134  018402  006F FF8C  F032    	movff	plusw1,btemp
  6135  018408  5191               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  6136  01840A  5832               	subwfb	btemp^0,w,c
  6137  01840C  0EFE               	movlw	-2
  6138  01840E  006F FF8C  F032    	movff	plusw1,btemp
  6139  018414  5192               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  6140  018416  5832               	subwfb	btemp^0,w,c
  6141  018418  0EFF               	movlw	-1
  6142  01841A  006F FF8C  F032    	movff	plusw1,btemp
  6143  018420  5193               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  6144  018422  5832               	subwfb	btemp^0,w,c
  6145  018424  B0D8               	btfsc	status,0,c
  6146  018426  D7DD               	goto	l1331
  6147                           
  6148                           ; BSR set to: 0
  6149                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  6150  018428  52E5               	movf	postdec1,f,c
  6151  01842A  52E5               	movf	postdec1,f,c
  6152  01842C  52E5               	movf	postdec1,f,c
  6153  01842E  52E5               	movf	postdec1,f,c
  6154  018430  0012               	return		;funcret
  6155  018432                     __end_of_wdtdelay:
  6156                           	opt callstack 0
  6157                           
  6158 ;; *************** function _eaDogM_WriteString *****************
  6159 ;; Defined at:
  6160 ;;		line 184 in file "eadog.c"
  6161 ;; Parameters:    Size  Location     Type
  6162 ;;  strPtr          2  [STACK] PTR unsigned char 
  6163 ;;		 -> D.lcd(216), D(218), V(227), 
  6164 ;; Auto vars:     Size  Location     Type
  6165 ;;		None
  6166 ;; Return value:  Size  Location     Type
  6167 ;;                  1  [STACK] void 
  6168 ;; Registers used:
  6169 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6170 ;; Tracked objects:
  6171 ;;		On entry : 3F/0
  6172 ;;		On exit  : 3F/3B
  6173 ;;		Unchanged: 0/0
  6174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6179 ;;Total ram usage:        0 bytes
  6180 ;; Hardware stack levels used:    1
  6181 ;; Hardware stack levels required when called:   15
  6182 ;; This function calls:
  6183 ;;		_printf
  6184 ;;		_ringBufS_flush
  6185 ;;		_start_lcd
  6186 ;;		_strlen
  6187 ;;		_wait_lcd_set
  6188 ;; This function is called by:
  6189 ;;		_eaDogM_WriteStringAtPos
  6190 ;; This function uses a reentrant model
  6191 ;;
  6192                           
  6193                           	psect	text29
  6194  017A64                     __ptext29:
  6195                           	opt callstack 0
  6196  017A64                     _eaDogM_WriteString:
  6197                           	opt callstack 13
  6198                           
  6199                           ;eadog.c: 184: void eaDogM_WriteString(char *strPtr);eadog.c: 185: {;eadog.c: 187:  wait
      +                          _lcd_set();
  6200                           
  6201                           ; BSR set to: 0
  6202                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6203                           ;incstack = 0
  6204  017A64  EC54  F0C8         	call	_wait_lcd_set	;wreg free
  6205                           
  6206                           ; BSR set to: 0
  6207                           ;eadog.c: 189:  ringBufS_flush(spi_link.tx1a, 0);
  6208  017A68  0E00               	movlw	0
  6209  017A6A  6EE6               	movwf	postinc1,c
  6210  017A6C  0060  F1FB  FFE6   	movff	_spi_link+6,postinc1
  6211  017A72  0060  F1FF  FFE6   	movff	_spi_link+7,postinc1
  6212  017A78  EC22  F0BE         	call	_ringBufS_flush	;wreg free
  6213  017A7C  94BC               	bcf	188,2,c	;volatile
  6214                           
  6215                           ;eadog.c: 191:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  6216                           ;stkvar	_strPtr @ sp[(0)+-2]
  6217  017A7E  0EFE               	movlw	-2
  6218  017A80  006F FF8F FFE6     	movff	plusw1,postinc1
  6219  017A86  006F FF8F FFE6     	movff	plusw1,postinc1
  6220  017A8C  EC85  F0BD         	call	_strlen	;wreg free
  6221  017A90  5033               	movf	(btemp+1)^0,w,c
  6222  017A92  E104               	bnz	u10810
  6223  017A94  0E41               	movlw	65
  6224  017A96  5C32               	subwf	btemp^0,w,c
  6225  017A98  A0D8               	btfss	status,0,c
  6226  017A9A  D010               	goto	l10331
  6227  017A9C                     u10810:
  6228                           
  6229                           ;stkvar	_strPtr @ sp[(0)+-2]
  6230  017A9C  0EFE               	movlw	-2
  6231  017A9E  006F FF8C  F03C    	movff	plusw1,btemp+10
  6232  017AA4  0EFF               	movlw	-1
  6233  017AA6  006F FF8C  F03D    	movff	plusw1,btemp+11
  6234  017AAC  0E40               	movlw	64
  6235  017AAE  243C               	addwf	(btemp+10)^0,w,c
  6236  017AB0  6ED9               	movwf	fsr2l,c
  6237  017AB2  0E00               	movlw	0
  6238  017AB4  203D               	addwfc	(btemp+11)^0,w,c
  6239  017AB6  6EDA               	movwf	fsr2h,c
  6240  017AB8  0E00               	movlw	0
  6241  017ABA  6EDF               	movwf	indf2,c
  6242  017ABC                     l10331:
  6243                           
  6244                           ;eadog.c: 192:  DMA1CON0bits.EN = 0;
  6245  017ABC  013B               	movlb	59	; () banked
  6246  017ABE  9FFC               	bcf	252,7,b	;volatile
  6247                           
  6248                           ; BSR set to: 59
  6249                           ;eadog.c: 193:  DMA1SSZ = strlen(strPtr);
  6250                           ;stkvar	_strPtr @ sp[(0)+-2]
  6251  017AC0  0EFE               	movlw	-2
  6252  017AC2  006F FF8F FFE6     	movff	plusw1,postinc1
  6253  017AC8  006F FF8F FFE6     	movff	plusw1,postinc1
  6254  017ACE  EC85  F0BD         	call	_strlen	;wreg free
  6255  017AD2  0060  F0CB  FBF7   	movff	btemp,15351	;volatile
  6256  017AD8  0060  F0CF  FBF8   	movff	btemp+1,15352	;volatile
  6257                           
  6258                           ;eadog.c: 194:  DMA1CON0bits.EN = 1;
  6259  017ADE  013B               	movlb	59	; () banked
  6260  017AE0  8FFC               	bsf	252,7,b	;volatile
  6261                           
  6262                           ; BSR set to: 59
  6263                           ;eadog.c: 195:  printf("%s", strPtr);
  6264                           ;stkvar	_strPtr @ sp[(0)+-2]
  6265  017AE2  0EFE               	movlw	-2
  6266  017AE4  006F FF8F FFE6     	movff	plusw1,postinc1
  6267  017AEA  006F FF8F FFE6     	movff	plusw1,postinc1
  6268  017AF0  0EFB               	movlw	low STR_12
  6269  017AF2  6EE6               	movwf	postinc1,c
  6270  017AF4  0EFF               	movlw	high STR_12
  6271  017AF6  6EE6               	movwf	postinc1,c
  6272  017AF8  0E04               	movlw	4
  6273  017AFA  6EE6               	movwf	postinc1,c
  6274  017AFC  EC5E  F0C1         	call	_printf	;wreg free
  6275                           
  6276                           ;eadog.c: 196:  start_lcd();
  6277  017B00  EC57  F0C8         	call	_start_lcd	;wreg free
  6278                           
  6279                           ; BSR set to: 59
  6280                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  6281  017B04  52E5               	movf	postdec1,f,c
  6282  017B06  52E5               	movf	postdec1,f,c
  6283  017B08  0012               	return		;funcret
  6284  017B0A                     __end_of_eaDogM_WriteString:
  6285                           	opt callstack 0
  6286                           
  6287 ;; *************** function _wait_lcd_set *****************
  6288 ;; Defined at:
  6289 ;;		line 131 in file "eadog.c"
  6290 ;; Parameters:    Size  Location     Type
  6291 ;;		None
  6292 ;; Auto vars:     Size  Location     Type
  6293 ;;		None
  6294 ;; Return value:  Size  Location     Type
  6295 ;;                  1  [STACK] void 
  6296 ;; Registers used:
  6297 ;;		None
  6298 ;; Tracked objects:
  6299 ;;		On entry : 0/3D
  6300 ;;		On exit  : 3F/0
  6301 ;;		Unchanged: 0/0
  6302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6307 ;;Total ram usage:        0 bytes
  6308 ;; Hardware stack levels used:    1
  6309 ;; Hardware stack levels required when called:    6
  6310 ;; This function calls:
  6311 ;;		Nothing
  6312 ;; This function is called by:
  6313 ;;		_eaDogM_WriteString
  6314 ;;		_send_lcd_cmd_dma
  6315 ;; This function uses a reentrant model
  6316 ;;
  6317                           
  6318                           	psect	text30
  6319  0190A8                     __ptext30:
  6320                           	opt callstack 0
  6321  0190A8                     _wait_lcd_set:
  6322                           	opt callstack 21
  6323                           
  6324                           ;eadog.c: 133:  spi_link.LCD_DATA = 1;
  6325                           
  6326                           ; BSR set to: 59
  6327                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6328                           ;incstack = 0
  6329  0190A8  0100               	movlb	0	; () banked
  6330  0190AA  8778               	bsf	_spi_link& (0+255),3,b	;volatile
  6331                           
  6332                           ; BSR set to: 0
  6333                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  6334  0190AC  0012               	return		;funcret
  6335  0190AE                     __end_of_wait_lcd_set:
  6336                           	opt callstack 0
  6337                           
  6338 ;; *************** function _start_lcd *****************
  6339 ;; Defined at:
  6340 ;;		line 126 in file "eadog.c"
  6341 ;; Parameters:    Size  Location     Type
  6342 ;;		None
  6343 ;; Auto vars:     Size  Location     Type
  6344 ;;		None
  6345 ;; Return value:  Size  Location     Type
  6346 ;;                  1  [STACK] void 
  6347 ;; Registers used:
  6348 ;;		None
  6349 ;; Tracked objects:
  6350 ;;		On entry : 0/3B
  6351 ;;		On exit  : 3F/3B
  6352 ;;		Unchanged: 0/0
  6353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6358 ;;Total ram usage:        0 bytes
  6359 ;; Hardware stack levels used:    1
  6360 ;; Hardware stack levels required when called:    6
  6361 ;; This function calls:
  6362 ;;		Nothing
  6363 ;; This function is called by:
  6364 ;;		_eaDogM_WriteString
  6365 ;;		_send_lcd_cmd_dma
  6366 ;; This function uses a reentrant model
  6367 ;;
  6368                           
  6369                           	psect	text31
  6370  0190AE                     __ptext31:
  6371                           	opt callstack 0
  6372  0190AE                     _start_lcd:
  6373                           	opt callstack 21
  6374                           
  6375                           ;eadog.c: 128:  DMA1CON0bits.DMA1SIRQEN = 1;
  6376                           
  6377                           ; BSR set to: 0
  6378                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6379                           ;incstack = 0
  6380  0190AE  013B               	movlb	59	; () banked
  6381  0190B0  8DFC               	bsf	252,6,b	;volatile
  6382                           
  6383                           ; BSR set to: 59
  6384                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  6385  0190B2  0012               	return		;funcret
  6386  0190B4                     __end_of_start_lcd:
  6387                           	opt callstack 0
  6388                           
  6389 ;; *************** function _ringBufS_flush *****************
  6390 ;; Defined at:
  6391 ;;		line 76 in file "ringbufs.c"
  6392 ;; Parameters:    Size  Location     Type
  6393 ;;  _this           2  [STACK] PTR struct ringBufS_t
  6394 ;;		 -> ring_buf1(67), 
  6395 ;;  clearBuffer     1  [STACK] const char 
  6396 ;; Auto vars:     Size  Location     Type
  6397 ;;		None
  6398 ;; Return value:  Size  Location     Type
  6399 ;;                  1  [STACK] void 
  6400 ;; Registers used:
  6401 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6402 ;; Tracked objects:
  6403 ;;		On entry : 3F/0
  6404 ;;		On exit  : 0/0
  6405 ;;		Unchanged: 0/0
  6406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6411 ;;Total ram usage:        0 bytes
  6412 ;; Hardware stack levels used:    1
  6413 ;; Hardware stack levels required when called:    7
  6414 ;; This function calls:
  6415 ;;		_memset
  6416 ;; This function is called by:
  6417 ;;		_eaDogM_WriteString
  6418 ;;		_send_lcd_cmd_dma
  6419 ;; This function uses a reentrant model
  6420 ;;
  6421                           
  6422                           	psect	text32
  6423  017C44                     __ptext32:
  6424                           	opt callstack 0
  6425  017C44                     _ringBufS_flush:
  6426                           	opt callstack 20
  6427                           
  6428                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  6429                           ;stkvar	__this @ sp[(0)+-2]
  6430                           
  6431                           ; BSR set to: 59
  6432                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6433                           ;incstack = 0
  6434  017C44  0EFE               	movlw	-2
  6435  017C46  006F FF8C  F03C    	movff	plusw1,btemp+10
  6436  017C4C  0EFF               	movlw	-1
  6437  017C4E  006F FF8C  F03D    	movff	plusw1,btemp+11
  6438  017C54  0E42               	movlw	66
  6439  017C56  243C               	addwf	(btemp+10)^0,w,c
  6440  017C58  6ED9               	movwf	fsr2l,c
  6441  017C5A  0E00               	movlw	0
  6442  017C5C  203D               	addwfc	(btemp+11)^0,w,c
  6443  017C5E  6EDA               	movwf	fsr2h,c
  6444  017C60  0E00               	movlw	0
  6445  017C62  6EDF               	movwf	indf2,c
  6446                           
  6447                           ;ringbufs.c: 79:  _this->head = 0;
  6448                           ;stkvar	__this @ sp[(0)+-2]
  6449  017C64  0EFE               	movlw	-2
  6450  017C66  006F FF8C  F03C    	movff	plusw1,btemp+10
  6451  017C6C  0EFF               	movlw	-1
  6452  017C6E  006F FF8C  F03D    	movff	plusw1,btemp+11
  6453  017C74  0E40               	movlw	64
  6454  017C76  243C               	addwf	(btemp+10)^0,w,c
  6455  017C78  6ED9               	movwf	fsr2l,c
  6456  017C7A  0E00               	movlw	0
  6457  017C7C  203D               	addwfc	(btemp+11)^0,w,c
  6458  017C7E  6EDA               	movwf	fsr2h,c
  6459  017C80  0E00               	movlw	0
  6460  017C82  6EDF               	movwf	indf2,c
  6461                           
  6462                           ;ringbufs.c: 80:  _this->tail = 0;
  6463                           ;stkvar	__this @ sp[(0)+-2]
  6464  017C84  0EFE               	movlw	-2
  6465  017C86  006F FF8C  F03C    	movff	plusw1,btemp+10
  6466  017C8C  0EFF               	movlw	-1
  6467  017C8E  006F FF8C  F03D    	movff	plusw1,btemp+11
  6468  017C94  0E41               	movlw	65
  6469  017C96  243C               	addwf	(btemp+10)^0,w,c
  6470  017C98  6ED9               	movwf	fsr2l,c
  6471  017C9A  0E00               	movlw	0
  6472  017C9C  203D               	addwfc	(btemp+11)^0,w,c
  6473  017C9E  6EDA               	movwf	fsr2h,c
  6474  017CA0  0E00               	movlw	0
  6475  017CA2  6EDF               	movwf	indf2,c
  6476                           
  6477                           ;ringbufs.c: 81:  if (clearBuffer) {
  6478                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  6479  017CA4  0EFD               	movlw	-3
  6480  017CA6  50E3               	movf	plusw1,w,c
  6481  017CA8  B4D8               	btfsc	status,2,c
  6482  017CAA  D011               	goto	l1471
  6483                           
  6484                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  6485  017CAC  0E40               	movlw	64
  6486  017CAE  6EE6               	movwf	postinc1,c
  6487  017CB0  0E00               	movlw	0
  6488  017CB2  6EE6               	movwf	postinc1,c
  6489  017CB4  0E00               	movlw	0
  6490  017CB6  6EE6               	movwf	postinc1,c
  6491  017CB8  0E00               	movlw	0
  6492  017CBA  6EE6               	movwf	postinc1,c
  6493                           
  6494                           ;stkvar	__this @ sp[(-4)+-2]
  6495  017CBC  0EFA               	movlw	-6
  6496  017CBE  006F FF8F FFE6     	movff	plusw1,postinc1
  6497  017CC4  006F FF8F FFE6     	movff	plusw1,postinc1
  6498  017CCA  ECE3  F0A7         	call	_memset	;wreg free
  6499  017CCE                     l1471:
  6500                           
  6501                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  6502  017CCE  52E5               	movf	postdec1,f,c
  6503  017CD0  52E5               	movf	postdec1,f,c
  6504  017CD2  52E5               	movf	postdec1,f,c
  6505  017CD4  0012               	return		;funcret
  6506  017CD6                     __end_of_ringBufS_flush:
  6507                           	opt callstack 0
  6508                           
  6509 ;; *************** function _memset *****************
  6510 ;; Defined at:
  6511 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  6512 ;; Parameters:    Size  Location     Type
  6513 ;;  dest            2  [STACK] PTR void 
  6514 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6515 ;;  c               2  [STACK] int 
  6516 ;;  n               2  [STACK] unsigned int 
  6517 ;; Auto vars:     Size  Location     Type
  6518 ;;  s               2  [STACK] PTR unsigned char 
  6519 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6520 ;;  k               2  [STACK] unsigned int 
  6521 ;; Return value:  Size  Location     Type
  6522 ;;                  2  [STACK] PTR void 
  6523 ;; Registers used:
  6524 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6525 ;; Tracked objects:
  6526 ;;		On entry : 0/0
  6527 ;;		On exit  : 0/0
  6528 ;;		Unchanged: 0/0
  6529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6534 ;;Total ram usage:        0 bytes
  6535 ;; Hardware stack levels used:    1
  6536 ;; Hardware stack levels required when called:    6
  6537 ;; This function calls:
  6538 ;;		Nothing
  6539 ;; This function is called by:
  6540 ;;		_ringBufS_init
  6541 ;;		_ringBufS_flush
  6542 ;; This function uses a reentrant model
  6543 ;;
  6544                           
  6545                           	psect	text33
  6546  014FC6                     __ptext33:
  6547                           	opt callstack 0
  6548  014FC6                     _memset:
  6549                           	opt callstack 0
  6550                           
  6551                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6552  014FC6  52E6               	movf	postinc1,f,c
  6553  014FC8  52E6               	movf	postinc1,f,c
  6554  014FCA  52E6               	movf	postinc1,f,c
  6555  014FCC  52E6               	movf	postinc1,f,c
  6556                           
  6557                           ;stkvar	_dest @ sp[(-4)+-2]
  6558                           
  6559                           ;incstack = 0
  6560  014FCE  0EFA               	movlw	-6
  6561  014FD0  006F FF8C  F03C    	movff	plusw1,btemp+10
  6562  014FD6  0EFB               	movlw	-5
  6563  014FD8  006F FF8C  F03D    	movff	plusw1,btemp+11
  6564                           
  6565                           ;stkvar	_s @ sp[(-4)+0]
  6566  014FDE  0EFD               	movlw	-3
  6567  014FE0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  6568  014FE6  0EFC               	movlw	-4
  6569  014FE8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  6570                           
  6571                           ;stkvar	_n @ sp[(-4)+-6]
  6572  014FEE  0EF6               	movlw	-10
  6573  014FF0  006F FF8C  F032    	movff	plusw1,btemp
  6574  014FF6  0EF7               	movlw	-9
  6575  014FF8  50E3               	movf	plusw1,w,c
  6576  014FFA  1032               	iorwf	btemp^0,w,c
  6577  014FFC  B4D8               	btfsc	status,2,c
  6578  014FFE  D154               	goto	u10780
  6579                           
  6580                           ;stkvar	_c @ sp[(-4)+-4]
  6581                           ;stkvar	_s @ sp[(-4)+0]
  6582  015000  0EFC               	movlw	-4
  6583  015002  006F FF8F FFD9     	movff	plusw1,fsr2l
  6584  015008  0EFD               	movlw	-3
  6585  01500A  006F FF8F FFDA     	movff	plusw1,fsr2h
  6586  015010  0EF8               	movlw	-8
  6587  015012  006F FF8F FFDF     	movff	plusw1,indf2
  6588                           
  6589                           ;stkvar	_c @ sp[(-4)+-4]
  6590                           ;stkvar	_n @ sp[(-4)+-6]
  6591                           ;stkvar	_s @ sp[(-4)+0]
  6592  015018  0EFC               	movlw	-4
  6593  01501A  006F FF8C  F03C    	movff	plusw1,btemp+10
  6594  015020  0EFD               	movlw	-3
  6595  015022  006F FF8C  F03D    	movff	plusw1,btemp+11
  6596  015028  0EF6               	movlw	-10
  6597  01502A  50E3               	movf	plusw1,w,c
  6598  01502C  263C               	addwf	(btemp+10)^0,f,c
  6599  01502E  0EF7               	movlw	-9
  6600  015030  50E3               	movf	plusw1,w,c
  6601  015032  223D               	addwfc	(btemp+11)^0,f,c
  6602  015034  0EFF               	movlw	255
  6603  015036  243C               	addwf	(btemp+10)^0,w,c
  6604  015038  6ED9               	movwf	fsr2l,c
  6605  01503A  0EFF               	movlw	255
  6606  01503C  203D               	addwfc	(btemp+11)^0,w,c
  6607  01503E  6EDA               	movwf	fsr2h,c
  6608  015040  0EF8               	movlw	-8
  6609  015042  006F FF8F FFDF     	movff	plusw1,indf2
  6610                           
  6611                           ;stkvar	_n @ sp[(-4)+-6]
  6612  015048  0EF7               	movlw	-9
  6613  01504A  50E3               	movf	plusw1,w,c
  6614  01504C  E108               	bnz	l10247
  6615  01504E  0EF6               	movlw	-10
  6616  015050  006F FF8C  F032    	movff	plusw1,btemp
  6617  015056  0E03               	movlw	3
  6618  015058  5E32               	subwf	btemp^0,f,c
  6619  01505A  A0D8               	btfss	status,0,c
  6620  01505C  D125               	goto	u10780
  6621  01505E                     l10247:
  6622                           
  6623                           ;stkvar	_c @ sp[(-4)+-4]
  6624                           ;stkvar	_s @ sp[(-4)+0]
  6625  01505E  0EFC               	movlw	-4
  6626  015060  006F FF8C  F03C    	movff	plusw1,btemp+10
  6627  015066  0EFD               	movlw	-3
  6628  015068  006F FF8C  F03D    	movff	plusw1,btemp+11
  6629  01506E  0E01               	movlw	1
  6630  015070  243C               	addwf	(btemp+10)^0,w,c
  6631  015072  6ED9               	movwf	fsr2l,c
  6632  015074  0E00               	movlw	0
  6633  015076  203D               	addwfc	(btemp+11)^0,w,c
  6634  015078  6EDA               	movwf	fsr2h,c
  6635  01507A  0EF8               	movlw	-8
  6636  01507C  006F FF8F FFDF     	movff	plusw1,indf2
  6637                           
  6638                           ;stkvar	_c @ sp[(-4)+-4]
  6639                           ;stkvar	_s @ sp[(-4)+0]
  6640  015082  0EFC               	movlw	-4
  6641  015084  006F FF8C  F03C    	movff	plusw1,btemp+10
  6642  01508A  0EFD               	movlw	-3
  6643  01508C  006F FF8C  F03D    	movff	plusw1,btemp+11
  6644  015092  0E02               	movlw	2
  6645  015094  243C               	addwf	(btemp+10)^0,w,c
  6646  015096  6ED9               	movwf	fsr2l,c
  6647  015098  0E00               	movlw	0
  6648  01509A  203D               	addwfc	(btemp+11)^0,w,c
  6649  01509C  6EDA               	movwf	fsr2h,c
  6650  01509E  0EF8               	movlw	-8
  6651  0150A0  006F FF8F FFDF     	movff	plusw1,indf2
  6652                           
  6653                           ;stkvar	_c @ sp[(-4)+-4]
  6654                           ;stkvar	_n @ sp[(-4)+-6]
  6655                           ;stkvar	_s @ sp[(-4)+0]
  6656  0150A6  0EFC               	movlw	-4
  6657  0150A8  006F FF8C  F03C    	movff	plusw1,btemp+10
  6658  0150AE  0EFD               	movlw	-3
  6659  0150B0  006F FF8C  F03D    	movff	plusw1,btemp+11
  6660  0150B6  0EF6               	movlw	-10
  6661  0150B8  50E3               	movf	plusw1,w,c
  6662  0150BA  263C               	addwf	(btemp+10)^0,f,c
  6663  0150BC  0EF7               	movlw	-9
  6664  0150BE  50E3               	movf	plusw1,w,c
  6665  0150C0  223D               	addwfc	(btemp+11)^0,f,c
  6666  0150C2  0EFE               	movlw	254
  6667  0150C4  243C               	addwf	(btemp+10)^0,w,c
  6668  0150C6  6ED9               	movwf	fsr2l,c
  6669  0150C8  0EFF               	movlw	255
  6670  0150CA  203D               	addwfc	(btemp+11)^0,w,c
  6671  0150CC  6EDA               	movwf	fsr2h,c
  6672  0150CE  0EF8               	movlw	-8
  6673  0150D0  006F FF8F FFDF     	movff	plusw1,indf2
  6674                           
  6675                           ;stkvar	_c @ sp[(-4)+-4]
  6676                           ;stkvar	_n @ sp[(-4)+-6]
  6677                           ;stkvar	_s @ sp[(-4)+0]
  6678  0150D6  0EFC               	movlw	-4
  6679  0150D8  006F FF8C  F03C    	movff	plusw1,btemp+10
  6680  0150DE  0EFD               	movlw	-3
  6681  0150E0  006F FF8C  F03D    	movff	plusw1,btemp+11
  6682  0150E6  0EF6               	movlw	-10
  6683  0150E8  50E3               	movf	plusw1,w,c
  6684  0150EA  263C               	addwf	(btemp+10)^0,f,c
  6685  0150EC  0EF7               	movlw	-9
  6686  0150EE  50E3               	movf	plusw1,w,c
  6687  0150F0  223D               	addwfc	(btemp+11)^0,f,c
  6688  0150F2  0EFD               	movlw	253
  6689  0150F4  243C               	addwf	(btemp+10)^0,w,c
  6690  0150F6  6ED9               	movwf	fsr2l,c
  6691  0150F8  0EFF               	movlw	255
  6692  0150FA  203D               	addwfc	(btemp+11)^0,w,c
  6693  0150FC  6EDA               	movwf	fsr2h,c
  6694  0150FE  0EF8               	movlw	-8
  6695  015100  006F FF8F FFDF     	movff	plusw1,indf2
  6696                           
  6697                           ;stkvar	_n @ sp[(-4)+-6]
  6698  015106  0EF7               	movlw	-9
  6699  015108  50E3               	movf	plusw1,w,c
  6700  01510A  E108               	bnz	l10253
  6701  01510C  0EF6               	movlw	-10
  6702  01510E  006F FF8C  F032    	movff	plusw1,btemp
  6703  015114  0E07               	movlw	7
  6704  015116  5E32               	subwf	btemp^0,f,c
  6705  015118  A0D8               	btfss	status,0,c
  6706  01511A  D0C6               	goto	u10780
  6707  01511C                     l10253:
  6708                           
  6709                           ;stkvar	_c @ sp[(-4)+-4]
  6710                           ;stkvar	_s @ sp[(-4)+0]
  6711  01511C  0EFC               	movlw	-4
  6712  01511E  006F FF8C  F03C    	movff	plusw1,btemp+10
  6713  015124  0EFD               	movlw	-3
  6714  015126  006F FF8C  F03D    	movff	plusw1,btemp+11
  6715  01512C  0E03               	movlw	3
  6716  01512E  243C               	addwf	(btemp+10)^0,w,c
  6717  015130  6ED9               	movwf	fsr2l,c
  6718  015132  0E00               	movlw	0
  6719  015134  203D               	addwfc	(btemp+11)^0,w,c
  6720  015136  6EDA               	movwf	fsr2h,c
  6721  015138  0EF8               	movlw	-8
  6722  01513A  006F FF8F FFDF     	movff	plusw1,indf2
  6723                           
  6724                           ;stkvar	_c @ sp[(-4)+-4]
  6725                           ;stkvar	_n @ sp[(-4)+-6]
  6726                           ;stkvar	_s @ sp[(-4)+0]
  6727  015140  0EFC               	movlw	-4
  6728  015142  006F FF8C  F03C    	movff	plusw1,btemp+10
  6729  015148  0EFD               	movlw	-3
  6730  01514A  006F FF8C  F03D    	movff	plusw1,btemp+11
  6731  015150  0EF6               	movlw	-10
  6732  015152  50E3               	movf	plusw1,w,c
  6733  015154  263C               	addwf	(btemp+10)^0,f,c
  6734  015156  0EF7               	movlw	-9
  6735  015158  50E3               	movf	plusw1,w,c
  6736  01515A  223D               	addwfc	(btemp+11)^0,f,c
  6737  01515C  0EFC               	movlw	252
  6738  01515E  243C               	addwf	(btemp+10)^0,w,c
  6739  015160  6ED9               	movwf	fsr2l,c
  6740  015162  0EFF               	movlw	255
  6741  015164  203D               	addwfc	(btemp+11)^0,w,c
  6742  015166  6EDA               	movwf	fsr2h,c
  6743  015168  0EF8               	movlw	-8
  6744  01516A  006F FF8F FFDF     	movff	plusw1,indf2
  6745                           
  6746                           ;stkvar	_n @ sp[(-4)+-6]
  6747  015170  0EF7               	movlw	-9
  6748  015172  50E3               	movf	plusw1,w,c
  6749  015174  E108               	bnz	l10259
  6750  015176  0EF6               	movlw	-10
  6751  015178  006F FF8C  F032    	movff	plusw1,btemp
  6752  01517E  0E09               	movlw	9
  6753  015180  5E32               	subwf	btemp^0,f,c
  6754  015182  A0D8               	btfss	status,0,c
  6755  015184  D091               	goto	u10780
  6756  015186                     l10259:
  6757                           
  6758                           ;stkvar	_s @ sp[(-4)+0]
  6759  015186  0EFC               	movlw	-4
  6760  015188  006F FF8C  F03C    	movff	plusw1,btemp+10
  6761  01518E  1E3C               	comf	(btemp+10)^0,f,c
  6762  015190  0EFD               	movlw	-3
  6763  015192  006F FF8C  F03D    	movff	plusw1,btemp+11
  6764  015198  1E3D               	comf	(btemp+11)^0,f,c
  6765  01519A  2A3C               	incf	(btemp+10)^0,f,c
  6766  01519C  B4D8               	btfsc	status,2,c
  6767  01519E  2A3D               	incf	(btemp+11)^0,f,c
  6768  0151A0  0E03               	movlw	3
  6769  0151A2  163C               	andwf	(btemp+10)^0,f,c
  6770  0151A4  0E00               	movlw	0
  6771  0151A6  163D               	andwf	(btemp+11)^0,f,c
  6772                           
  6773                           ;stkvar	_k @ sp[(-4)+2]
  6774  0151A8  0EFE               	movlw	-2
  6775  0151AA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  6776  0151B0  0EFF               	movlw	-1
  6777  0151B2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  6778                           
  6779                           ;stkvar	_k @ sp[(-4)+2]
  6780                           ;stkvar	_s @ sp[(-4)+0]
  6781  0151B8  0EFC               	movlw	-4
  6782  0151BA  50E3               	movf	plusw1,w,c
  6783  0151BC  6E32               	movwf	btemp^0,c
  6784  0151BE  0EFE               	movlw	-2
  6785  0151C0  50E3               	movf	plusw1,w,c
  6786  0151C2  2632               	addwf	btemp^0,f,c
  6787  0151C4  0EFC               	movlw	-4
  6788  0151C6  0060  F0CB  FFE3   	movff	btemp,plusw1
  6789  0151CC  0EFD               	movlw	-3
  6790  0151CE  50E3               	movf	plusw1,w,c
  6791  0151D0  6E32               	movwf	btemp^0,c
  6792  0151D2  0EFF               	movlw	-1
  6793  0151D4  50E3               	movf	plusw1,w,c
  6794  0151D6  2232               	addwfc	btemp^0,f,c
  6795  0151D8  0EFD               	movlw	-3
  6796  0151DA  0060  F0CB  FFE3   	movff	btemp,plusw1
  6797                           
  6798                           ;stkvar	_k @ sp[(-4)+2]
  6799                           ;stkvar	_n @ sp[(-4)+-6]
  6800  0151E0  0EF6               	movlw	-10
  6801  0151E2  50E3               	movf	plusw1,w,c
  6802  0151E4  6E32               	movwf	btemp^0,c
  6803  0151E6  0EFE               	movlw	-2
  6804  0151E8  50E3               	movf	plusw1,w,c
  6805  0151EA  5E32               	subwf	btemp^0,f,c
  6806  0151EC  0EF6               	movlw	-10
  6807  0151EE  0060  F0CB  FFE3   	movff	btemp,plusw1
  6808  0151F4  0EF7               	movlw	-9
  6809  0151F6  50E3               	movf	plusw1,w,c
  6810  0151F8  6E32               	movwf	btemp^0,c
  6811  0151FA  0EFF               	movlw	-1
  6812  0151FC  50E3               	movf	plusw1,w,c
  6813  0151FE  5A32               	subwfb	btemp^0,f,c
  6814  015200  0EF7               	movlw	-9
  6815  015202  0060  F0CB  FFE3   	movff	btemp,plusw1
  6816  015208  0EFC               	movlw	252
  6817  01520A  6E3C               	movwf	(btemp+10)^0,c
  6818  01520C  0EFF               	movlw	255
  6819  01520E  6E3D               	movwf	(btemp+11)^0,c
  6820                           
  6821                           ;stkvar	_n @ sp[(-4)+-6]
  6822  015210  0EF6               	movlw	-10
  6823  015212  006F FF8C  F032    	movff	plusw1,btemp
  6824  015218  503C               	movf	(btemp+10)^0,w,c
  6825  01521A  1632               	andwf	btemp^0,f,c
  6826  01521C  0EF6               	movlw	-10
  6827  01521E  0060  F0CB  FFE3   	movff	btemp,plusw1
  6828  015224  0EF7               	movlw	-9
  6829  015226  006F FF8C  F032    	movff	plusw1,btemp
  6830  01522C  503D               	movf	(btemp+11)^0,w,c
  6831  01522E  1632               	andwf	btemp^0,f,c
  6832  015230  0EF7               	movlw	-9
  6833  015232  D02E               	goto	L4
  6834  015234                     l10267:
  6835                           
  6836                           ;stkvar	_c @ sp[(-4)+-4]
  6837                           ;stkvar	_s @ sp[(-4)+0]
  6838  015234  0EFC               	movlw	-4
  6839  015236  006F FF8F FFD9     	movff	plusw1,fsr2l
  6840  01523C  0EFD               	movlw	-3
  6841  01523E  006F FF8F FFDA     	movff	plusw1,fsr2h
  6842  015244  0EF8               	movlw	-8
  6843  015246  006F FF8F FFDF     	movff	plusw1,indf2
  6844                           
  6845                           ;stkvar	_n @ sp[(-4)+-6]
  6846  01524C  0EF6               	movlw	-10
  6847  01524E  006F FF8C  F032    	movff	plusw1,btemp
  6848  015254  0E01               	movlw	1
  6849  015256  5E32               	subwf	btemp^0,f,c
  6850  015258  0EF6               	movlw	-10
  6851  01525A  0060  F0CB  FFE3   	movff	btemp,plusw1
  6852  015260  0EF7               	movlw	-9
  6853  015262  006F FF8C  F032    	movff	plusw1,btemp
  6854  015268  0E00               	movlw	0
  6855  01526A  5A32               	subwfb	btemp^0,f,c
  6856  01526C  0EF7               	movlw	-9
  6857  01526E  0060  F0CB  FFE3   	movff	btemp,plusw1
  6858                           
  6859                           ;stkvar	_s @ sp[(-4)+0]
  6860  015274  0EFC               	movlw	-4
  6861  015276  50E3               	movf	plusw1,w,c
  6862  015278  0F01               	addlw	1
  6863  01527A  6E32               	movwf	btemp^0,c
  6864  01527C  0EFC               	movlw	-4
  6865  01527E  0060  F0CB  FFE3   	movff	btemp,plusw1
  6866  015284  6A32               	clrf	btemp^0,c
  6867  015286  0EFD               	movlw	-3
  6868  015288  50E3               	movf	plusw1,w,c
  6869  01528A  2032               	addwfc	btemp^0,w,c
  6870  01528C  6E32               	movwf	btemp^0,c
  6871  01528E  0EFD               	movlw	-3
  6872  015290                     L4:
  6873  015290  0060  F0CB  FFE3   	movff	btemp,plusw1
  6874                           
  6875                           ;stkvar	_n @ sp[(-4)+-6]
  6876  015296  0EF6               	movlw	-10
  6877  015298  006F FF8C  F032    	movff	plusw1,btemp
  6878  01529E  0EF7               	movlw	-9
  6879  0152A0  50E3               	movf	plusw1,w,c
  6880  0152A2  1032               	iorwf	btemp^0,w,c
  6881  0152A4  A4D8               	btfss	status,2,c
  6882  0152A6  D7C6               	goto	l10267
  6883  0152A8                     u10780:
  6884                           
  6885                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  6886  0152A8  0EF6               	movlw	246
  6887  0152AA  26E1               	addwf	fsr1l,f,c
  6888  0152AC  0EFF               	movlw	255
  6889  0152AE  22E2               	addwfc	fsr1h,f,c
  6890  0152B0  0012               	return		;funcret
  6891  0152B2                     __end_of_memset:
  6892                           	opt callstack 0
  6893                           
  6894 ;; *************** function _printf *****************
  6895 ;; Defined at:
  6896 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  6897 ;; Parameters:    Size  Location     Type
  6898 ;;  fmt             2  [STACK] PTR const unsigned char 
  6899 ;;		 -> STR_14(3), STR_13(3), STR_12(3), 
  6900 ;; Auto vars:     Size  Location     Type
  6901 ;;  ap              2  [STACK] PTR void [1]
  6902 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6903 ;;  ret             2    0        int 
  6904 ;; Return value:  Size  Location     Type
  6905 ;;                  2  [STACK] int 
  6906 ;; Registers used:
  6907 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6908 ;; Tracked objects:
  6909 ;;		On entry : 3F/3B
  6910 ;;		On exit  : 0/0
  6911 ;;		Unchanged: 0/0
  6912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6917 ;;Total ram usage:        0 bytes
  6918 ;; Hardware stack levels used:    1
  6919 ;; Hardware stack levels required when called:   14
  6920 ;; This function calls:
  6921 ;;		_vfprintf
  6922 ;; This function is called by:
  6923 ;;		_eaDogM_WriteString
  6924 ;;		_send_lcd_cmd_dma
  6925 ;; This function uses a reentrant model
  6926 ;;
  6927                           
  6928                           	psect	text34
  6929  0182BC                     __ptext34:
  6930                           	opt callstack 0
  6931  0182BC                     _printf:
  6932                           	opt callstack 0
  6933                           
  6934                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6935  0182BC  52E6               	movf	postinc1,f,c
  6936  0182BE  52E6               	movf	postinc1,f,c
  6937                           
  6938                           ;stkvar	?_printf @ sp[(-2)+-3]
  6939                           
  6940                           ;incstack = 0
  6941  0182C0  0EFB               	movlw	251
  6942  0182C2  24E1               	addwf	fsr1l,w,c
  6943  0182C4  6E3C               	movwf	(btemp+10)^0,c
  6944  0182C6  0EFF               	movlw	255
  6945  0182C8  20E2               	addwfc	fsr1h,w,c
  6946  0182CA  6E3D               	movwf	(btemp+11)^0,c
  6947                           
  6948                           ;stkvar	_ap @ sp[(-2)+0]
  6949  0182CC  0EFF               	movlw	-1
  6950  0182CE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  6951  0182D4  0EFE               	movlw	-2
  6952  0182D6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  6953                           
  6954                           ;stkvar	_ap @ sp[(-2)+0]
  6955  0182DC  0EFE               	movlw	254
  6956  0182DE  24E1               	addwf	fsr1l,w,c
  6957  0182E0  6E32               	movwf	btemp^0,c
  6958  0182E2  0EFF               	movlw	255
  6959  0182E4  20E2               	addwfc	fsr1h,w,c
  6960  0182E6  6E33               	movwf	(btemp+1)^0,c
  6961  0182E8  0060  F0CB  FFE6   	movff	btemp,postinc1
  6962  0182EE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6963                           
  6964                           ;stkvar	_fmt @ sp[(-4)+-3]
  6965  0182F4  0EF9               	movlw	-7
  6966  0182F6  006F FF8F FFE6     	movff	plusw1,postinc1
  6967  0182FC  006F FF8F FFE6     	movff	plusw1,postinc1
  6968  018302  0E00               	movlw	0
  6969  018304  6EE6               	movwf	postinc1,c
  6970  018306  0E00               	movlw	0
  6971  018308  6EE6               	movwf	postinc1,c
  6972  01830A  ECDE  F0BC         	call	_vfprintf	;wreg free
  6973                           
  6974                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  6975  01830E  52E5               	movf	postdec1,f,c
  6976  018310  52E5               	movf	postdec1,f,c
  6977  018312  52E5               	movf	postdec1,f,c
  6978  018314  50E7               	movf	indf1,w,c
  6979  018316  5EE1               	subwf	fsr1l,f,c
  6980  018318  0E00               	movlw	0
  6981  01831A  5AE2               	subwfb	fsr1h,f,c
  6982  01831C  0012               	return		;funcret
  6983  01831E                     __end_of_printf:
  6984                           	opt callstack 0
  6985                           
  6986 ;; *************** function _vfprintf *****************
  6987 ;; Defined at:
  6988 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  6989 ;; Parameters:    Size  Location     Type
  6990 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6991 ;;		 -> f(6), NULL(0), 
  6992 ;;  fmt             2  [STACK] PTR const unsigned char 
  6993 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
  6994 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
  6995 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
  6996 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
  6997 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(18), 
  6998 ;;		 -> STR_10(14), STR_9(14), STR_8(17), STR_6(15), 
  6999 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  7000 ;;  ap              2  [STACK] PTR PTR void 
  7001 ;;		 -> ap(2), ap(2), 
  7002 ;; Auto vars:     Size  Location     Type
  7003 ;;  cfmt            2  [STACK] PTR unsigned char 
  7004 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
  7005 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
  7006 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
  7007 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
  7008 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(18), 
  7009 ;;		 -> STR_10(14), STR_9(14), STR_8(17), STR_6(15), 
  7010 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  7011 ;; Return value:  Size  Location     Type
  7012 ;;                  2  [STACK] int 
  7013 ;; Registers used:
  7014 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7015 ;; Tracked objects:
  7016 ;;		On entry : 0/5
  7017 ;;		On exit  : 0/0
  7018 ;;		Unchanged: 0/0
  7019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7024 ;;Total ram usage:        0 bytes
  7025 ;; Hardware stack levels used:    1
  7026 ;; Hardware stack levels required when called:   13
  7027 ;; This function calls:
  7028 ;;		_vfpfcnvrt
  7029 ;; This function is called by:
  7030 ;;		_sprintf
  7031 ;;		_printf
  7032 ;; This function uses a reentrant model
  7033 ;;
  7034                           
  7035                           	psect	text35
  7036  0179BC                     __ptext35:
  7037                           	opt callstack 0
  7038  0179BC                     _vfprintf:
  7039                           	opt callstack 0
  7040                           
  7041                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7042  0179BC  52E6               	movf	postinc1,f,c
  7043  0179BE  52E6               	movf	postinc1,f,c
  7044                           
  7045                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  7046                           ;stkvar	_fmt @ sp[(-2)+-4]
  7047                           
  7048                           ;incstack = 0
  7049  0179C0  0EFA               	movlw	-6
  7050  0179C2  006F FF8C  F03C    	movff	plusw1,btemp+10
  7051  0179C8  0EFB               	movlw	-5
  7052  0179CA  006F FF8C  F03D    	movff	plusw1,btemp+11
  7053                           
  7054                           ;stkvar	_cfmt @ sp[(-2)+0]
  7055  0179D0  0EFF               	movlw	-1
  7056  0179D2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7057  0179D8  0EFE               	movlw	-2
  7058  0179DA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7059                           
  7060                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  7061  0179E0  6A19               	clrf	_nout^0,c
  7062  0179E2  6A1A               	clrf	(_nout+1)^0,c
  7063                           
  7064                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  7065  0179E4  D020               	goto	l10281
  7066  0179E6                     l10279:
  7067                           
  7068                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  7069                           ;stkvar	_ap @ sp[(-2)+-6]
  7070  0179E6  0EF8               	movlw	-8
  7071  0179E8  006F FF8F FFE6     	movff	plusw1,postinc1
  7072  0179EE  006F FF8F FFE6     	movff	plusw1,postinc1
  7073                           
  7074                           ;stkvar	_cfmt @ sp[(-4)+0]
  7075  0179F4  0EFC               	movlw	252
  7076  0179F6  24E1               	addwf	fsr1l,w,c
  7077  0179F8  6E32               	movwf	btemp^0,c
  7078  0179FA  0EFF               	movlw	255
  7079  0179FC  20E2               	addwfc	fsr1h,w,c
  7080  0179FE  6E33               	movwf	(btemp+1)^0,c
  7081  017A00  0060  F0CB  FFE6   	movff	btemp,postinc1
  7082  017A06  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  7083                           
  7084                           ;stkvar	_fp @ sp[(-6)+-2]
  7085  017A0C  0EF8               	movlw	-8
  7086  017A0E  006F FF8F FFE6     	movff	plusw1,postinc1
  7087  017A14  006F FF8F FFE6     	movff	plusw1,postinc1
  7088  017A1A  EC22  F089         	call	_vfpfcnvrt	;wreg free
  7089  017A1E  5032               	movf	btemp^0,w,c
  7090  017A20  2619               	addwf	_nout^0,f,c
  7091  017A22  5033               	movf	(btemp+1)^0,w,c
  7092  017A24  221A               	addwfc	(_nout+1)^0,f,c
  7093  017A26                     l10281:
  7094                           
  7095                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  7096                           ;stkvar	_cfmt @ sp[(-2)+0]
  7097  017A26  50E1               	movf	fsr1l,w,c
  7098  017A28  0FFE               	addlw	-2
  7099  017A2A  6ED9               	movwf	fsr2l,c
  7100  017A2C  50E2               	movf	fsr1h,w,c
  7101  017A2E  6EDA               	movwf	fsr2h,c
  7102  017A30  0EFF               	movlw	255
  7103  017A32  22DA               	addwfc	fsr2h,f,c
  7104  017A34  006F FF7B FFF6     	movff	postinc2,tblptrl
  7105  017A3A  006F FF77 FFF7     	movff	postdec2,tblptrh
  7106  017A40                     	if	0	;tblptru may be non-zero
  7107  017A40                     	endif
  7108  017A40                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7109  017A40  0E00               	movlw	low (__mediumconst shr (0+16))
  7110  017A42  6EF8               	movwf	tblptru,c
  7111  017A44                     	endif
  7112  017A44  0008               	tblrd		*
  7113  017A46  50F5               	movf	tablat,w,c
  7114  017A48  0900               	iorlw	0
  7115  017A4A  A4D8               	btfss	status,2,c
  7116  017A4C  D7CC               	goto	l10279
  7117                           
  7118                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  7119  017A4E  0060  F064  F032   	movff	_nout,btemp
  7120  017A54  0060  F068  F033   	movff	_nout+1,btemp+1
  7121                           
  7122                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  7123  017A5A  0EF8               	movlw	248
  7124  017A5C  26E1               	addwf	fsr1l,f,c
  7125  017A5E  0EFF               	movlw	255
  7126  017A60  22E2               	addwfc	fsr1h,f,c
  7127  017A62  0012               	return		;funcret
  7128  017A64                     __end_of_vfprintf:
  7129                           	opt callstack 0
  7130                           
  7131 ;; *************** function _vfpfcnvrt *****************
  7132 ;; Defined at:
  7133 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7134 ;; Parameters:    Size  Location     Type
  7135 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7136 ;;		 -> f(6), NULL(0), 
  7137 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  7138 ;;		 -> cfmt(2), 
  7139 ;;  ap              2  [STACK] PTR PTR void 
  7140 ;;		 -> ap(2), ap(2), 
  7141 ;; Auto vars:     Size  Location     Type
  7142 ;;  llu             8  [STACK] unsigned long long 
  7143 ;;  ll              8  [STACK] long long 
  7144 ;;  f               4  [STACK] long long 
  7145 ;;  ct              3  [STACK] unsigned char [3]
  7146 ;;  vp              3    0        PTR void 
  7147 ;;  cp              2  [STACK] PTR unsigned char 
  7148 ;;		 -> ?_printf(2), ?_sprintf(2), STR_16(9), STR_15(12), 
  7149 ;;		 -> D.lcd(216), D(218), T(144), STR_7(5), 
  7150 ;;		 -> STR_3(5), V(227), 
  7151 ;;  i               2    0        int 
  7152 ;;  done            2    0        int 
  7153 ;;  c               1  [STACK] unsigned char 
  7154 ;; Return value:  Size  Location     Type
  7155 ;;                  2  [STACK] int 
  7156 ;; Registers used:
  7157 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7158 ;; Tracked objects:
  7159 ;;		On entry : 0/5
  7160 ;;		On exit  : 0/0
  7161 ;;		Unchanged: 0/0
  7162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7167 ;;Total ram usage:        0 bytes
  7168 ;; Hardware stack levels used:    1
  7169 ;; Hardware stack levels required when called:   12
  7170 ;; This function calls:
  7171 ;;		_atoi
  7172 ;;		_ctoa
  7173 ;;		_dtoa
  7174 ;;		_efgtoa
  7175 ;;		_fputc
  7176 ;;		_isdigit
  7177 ;;		_isupper
  7178 ;;		_stoa
  7179 ;;		_strncmp
  7180 ;;		_tolower
  7181 ;;		_utoa
  7182 ;;		_xtoa
  7183 ;; This function is called by:
  7184 ;;		_vfprintf
  7185 ;; This function uses a reentrant model
  7186 ;;
  7187                           
  7188                           	psect	text36
  7189  011244                     __ptext36:
  7190                           	opt callstack 0
  7191  011244                     _vfpfcnvrt:
  7192                           	opt callstack 0
  7193                           
  7194                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  7195  011244  0E20               	movlw	32
  7196  011246  26E1               	addwf	fsr1l,f,c
  7197  011248  0E00               	movlw	0
  7198  01124A  22E2               	addwfc	fsr1h,f,c
  7199                           
  7200                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  7201                           ;stkvar	_fmt @ sp[(-32)+-4]
  7202                           
  7203                           ;incstack = 0
  7204  01124C  0EDC               	movlw	-36
  7205  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7206  011254  0EDD               	movlw	-35
  7207  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  7208  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7209  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  7210  011268                     	if	0	;tblptru may be non-zero
  7211  011268                     	endif
  7212  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7213  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  7214  01126A  6EF8               	movwf	tblptru,c
  7215  01126C                     	endif
  7216  01126C  0008               	tblrd		*
  7217  01126E  50F5               	movf	tablat,w,c
  7218  011270  0A25               	xorlw	37
  7219  011272  A4D8               	btfss	status,2,c
  7220  011274  EFC9  F090         	goto	l10225
  7221                           
  7222                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  7223                           ;stkvar	_fmt @ sp[(-32)+-4]
  7224  011278  0EDC               	movlw	-36
  7225  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7226  011280  0EDD               	movlw	-35
  7227  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  7228  011288  2ADE               	incf	postinc2,f,c
  7229  01128A  0E00               	movlw	0
  7230  01128C  22DD               	addwfc	postdec2,f,c
  7231                           
  7232                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  7233  01128E  6A1B               	clrf	_width^0,c
  7234  011290  6A1C               	clrf	(_width+1)^0,c
  7235  011292  6A1F               	clrf	_flags^0,c
  7236  011294  6A20               	clrf	(_flags+1)^0,c
  7237                           
  7238                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  7239  011296  681D               	setf	_prec^0,c
  7240  011298  681E               	setf	(_prec+1)^0,c
  7241                           
  7242                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  7243                           ;stkvar	_fmt @ sp[(-32)+-4]
  7244  01129A  0EDC               	movlw	-36
  7245  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7246  0112A2  0EDD               	movlw	-35
  7247  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7248  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  7249  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  7250  0112B6                     	if	0	;tblptru may be non-zero
  7251  0112B6                     	endif
  7252  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7253  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  7254  0112B8  6EF8               	movwf	tblptru,c
  7255  0112BA                     	endif
  7256  0112BA  0008               	tblrd		*
  7257  0112BC  50F5               	movf	tablat,w,c
  7258  0112BE  0A2A               	xorlw	42
  7259  0112C0  A4D8               	btfss	status,2,c
  7260  0112C2  D031               	goto	l10043
  7261                           
  7262                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  7263                           ;stkvar	_fmt @ sp[(-32)+-4]
  7264  0112C4  0EDC               	movlw	-36
  7265  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  7266  0112CC  0EDD               	movlw	-35
  7267  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  7268  0112D4  2ADE               	incf	postinc2,f,c
  7269  0112D6  0E00               	movlw	0
  7270  0112D8  22DD               	addwfc	postdec2,f,c
  7271                           
  7272                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  7273                           ;stkvar	_ap @ sp[(-32)+-6]
  7274  0112DA  0EDA               	movlw	-38
  7275  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  7276  0112E2  0EDB               	movlw	-37
  7277  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7278  0112EA  0E02               	movlw	2
  7279  0112EC  5EDE               	subwf	postinc2,f,c
  7280  0112EE  0E00               	movlw	0
  7281  0112F0  5ADD               	subwfb	postdec2,f,c
  7282  0112F2  006F FF78  F03C    	movff	postinc2,btemp+10
  7283  0112F8  006F FF74  F03D    	movff	postdec2,btemp+11
  7284  0112FE  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7285  011304  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7286  01130A  006F FF78  F01B    	movff	postinc2,_width
  7287  011310  006F FF74  F01C    	movff	postdec2,_width+1
  7288                           
  7289                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  7290  011316  AE1C               	btfss	(_width+1)^0,7,c
  7291  011318  D066               	goto	u10480
  7292                           
  7293                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  7294  01131A  801F               	bsf	_flags^0,0,c
  7295                           
  7296                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  7297  01131C  6C1B               	negf	_width^0,c
  7298  01131E  1E1C               	comf	(_width+1)^0,f,c
  7299  011320  B0D8               	btfsc	status,0,c
  7300  011322  2A1C               	incf	(_width+1)^0,f,c
  7301  011324  D060               	goto	u10480
  7302  011326                     l10043:
  7303                           
  7304                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  7305                           ;stkvar	_fmt @ sp[(-32)+-4]
  7306  011326  0EDC               	movlw	-36
  7307  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
  7308  01132E  0EDD               	movlw	-35
  7309  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
  7310  011336  006F FF78  F03C    	movff	postinc2,btemp+10
  7311  01133C  006F FF74  F03D    	movff	postdec2,btemp+11
  7312  011342  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  7313  011348  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  7314  01134E  ECF8  F0AB         	call	_atoi	;wreg free
  7315  011352  0060  F0C8  F01B   	movff	btemp,_width
  7316  011358  0060  F0CC  F01C   	movff	btemp+1,_width+1
  7317                           
  7318                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7319  01135E  D00B               	goto	l10047
  7320  011360                     l10045:
  7321                           
  7322                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  7323                           ;stkvar	_fmt @ sp[(-32)+-4]
  7324  011360  0EDC               	movlw	-36
  7325  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
  7326  011368  0EDD               	movlw	-35
  7327  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7328  011370  2ADE               	incf	postinc2,f,c
  7329  011372  0E00               	movlw	0
  7330  011374  22DD               	addwfc	postdec2,f,c
  7331  011376                     l10047:
  7332  011376  0ED0               	movlw	208
  7333  011378  6E3C               	movwf	(btemp+10)^0,c
  7334  01137A  0EFF               	movlw	255
  7335  01137C  6E3D               	movwf	(btemp+11)^0,c
  7336                           
  7337                           ;stkvar	_fmt @ sp[(-32)+-4]
  7338  01137E  0EDC               	movlw	-36
  7339  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
  7340  011386  0EDD               	movlw	-35
  7341  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
  7342  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
  7343  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
  7344  01139A                     	if	0	;tblptru may be non-zero
  7345  01139A                     	endif
  7346  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7347  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
  7348  01139C  6EF8               	movwf	tblptru,c
  7349  01139E                     	endif
  7350  01139E  0008               	tblrd		*
  7351  0113A0  50F5               	movf	tablat,w,c
  7352  0113A2  6E3A               	movwf	(btemp+8)^0,c
  7353  0113A4  6A3B               	clrf	(btemp+9)^0,c
  7354  0113A6  503C               	movf	(btemp+10)^0,w,c
  7355  0113A8  263A               	addwf	(btemp+8)^0,f,c
  7356  0113AA  503D               	movf	(btemp+11)^0,w,c
  7357  0113AC  223B               	addwfc	(btemp+9)^0,f,c
  7358  0113AE  503B               	movf	(btemp+9)^0,w,c
  7359  0113B0  E106               	bnz	u10460
  7360  0113B2  0E0A               	movlw	10
  7361  0113B4  5C3A               	subwf	(btemp+8)^0,w,c
  7362  0113B6  B0D8               	btfsc	status,0,c
  7363  0113B8  D002               	goto	u10460
  7364  0113BA  0E01               	movlw	1
  7365  0113BC  D001               	goto	u10470
  7366  0113BE                     u10460:
  7367  0113BE  0E00               	movlw	0
  7368  0113C0                     u10470:
  7369  0113C0  6E3C               	movwf	(btemp+10)^0,c
  7370  0113C2  6A3D               	clrf	(btemp+11)^0,c
  7371                           
  7372                           ;stkvar	_vfpfcnvrt$4427 @ sp[(-32)+4]
  7373  0113C4  0EE4               	movlw	-28
  7374  0113C6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7375  0113CC  0EE5               	movlw	-27
  7376  0113CE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7377                           
  7378                           ;stkvar	_vfpfcnvrt$4427 @ sp[(-32)+4]
  7379  0113D4  0EE4               	movlw	-28
  7380  0113D6  006F FF8C  F032    	movff	plusw1,btemp
  7381  0113DC  0EE5               	movlw	-27
  7382  0113DE  50E3               	movf	plusw1,w,c
  7383  0113E0  1032               	iorwf	btemp^0,w,c
  7384  0113E2  A4D8               	btfss	status,2,c
  7385  0113E4  D7BD               	goto	l10045
  7386  0113E6                     u10480:
  7387                           
  7388                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  7389                           ;stkvar	_fmt @ sp[(-32)+-4]
  7390  0113E6  0EDC               	movlw	-36
  7391  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  7392  0113EE  0EDD               	movlw	-35
  7393  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7394  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
  7395  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
  7396  011402                     	if	0	;tblptru may be non-zero
  7397  011402                     	endif
  7398  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7399  011402  0E00               	movlw	low (__mediumconst shr (0+16))
  7400  011404  6EF8               	movwf	tblptru,c
  7401  011406                     	endif
  7402  011406  0008               	tblrd		*
  7403  011408  50F5               	movf	tablat,w,c
  7404  01140A  0A2E               	xorlw	46
  7405  01140C  A4D8               	btfss	status,2,c
  7406  01140E  D0AC               	goto	u10530
  7407                           
  7408                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  7409  011410  6A1D               	clrf	_prec^0,c
  7410  011412  6A1E               	clrf	(_prec+1)^0,c
  7411                           
  7412                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  7413                           ;stkvar	_fmt @ sp[(-32)+-4]
  7414  011414  0EDC               	movlw	-36
  7415  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
  7416  01141C  0EDD               	movlw	-35
  7417  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7418  011424  2ADE               	incf	postinc2,f,c
  7419  011426  0E00               	movlw	0
  7420  011428  22DD               	addwfc	postdec2,f,c
  7421                           
  7422                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  7423                           ;stkvar	_fmt @ sp[(-32)+-4]
  7424  01142A  0EDC               	movlw	-36
  7425  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7426  011432  0EDD               	movlw	-35
  7427  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
  7428  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
  7429  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
  7430  011446                     	if	0	;tblptru may be non-zero
  7431  011446                     	endif
  7432  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7433  011446  0E00               	movlw	low (__mediumconst shr (0+16))
  7434  011448  6EF8               	movwf	tblptru,c
  7435  01144A                     	endif
  7436  01144A  0008               	tblrd		*
  7437  01144C  50F5               	movf	tablat,w,c
  7438  01144E  0A2A               	xorlw	42
  7439  011450  A4D8               	btfss	status,2,c
  7440  011452  D02A               	goto	l10065
  7441                           
  7442                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  7443                           ;stkvar	_fmt @ sp[(-32)+-4]
  7444  011454  0EDC               	movlw	-36
  7445  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
  7446  01145C  0EDD               	movlw	-35
  7447  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7448  011464  2ADE               	incf	postinc2,f,c
  7449  011466  0E00               	movlw	0
  7450  011468  22DD               	addwfc	postdec2,f,c
  7451                           
  7452                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  7453                           ;stkvar	_ap @ sp[(-32)+-6]
  7454  01146A  0EDA               	movlw	-38
  7455  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7456  011472  0EDB               	movlw	-37
  7457  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
  7458  01147A  0E02               	movlw	2
  7459  01147C  5EDE               	subwf	postinc2,f,c
  7460  01147E  0E00               	movlw	0
  7461  011480  5ADD               	subwfb	postdec2,f,c
  7462  011482  006F FF78  F03C    	movff	postinc2,btemp+10
  7463  011488  006F FF74  F03D    	movff	postdec2,btemp+11
  7464  01148E  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7465  011494  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7466  01149A  006F FF78  F01D    	movff	postinc2,_prec
  7467  0114A0  006F FF74  F01E    	movff	postdec2,_prec+1
  7468                           
  7469                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
  7470  0114A6  D060               	goto	u10530
  7471  0114A8                     l10065:
  7472                           
  7473                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  7474                           ;stkvar	_fmt @ sp[(-32)+-4]
  7475  0114A8  0EDC               	movlw	-36
  7476  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  7477  0114B0  0EDD               	movlw	-35
  7478  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  7479  0114B8  006F FF78  F03C    	movff	postinc2,btemp+10
  7480  0114BE  006F FF74  F03D    	movff	postdec2,btemp+11
  7481  0114C4  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  7482  0114CA  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  7483  0114D0  ECF8  F0AB         	call	_atoi	;wreg free
  7484  0114D4  0060  F0C8  F01D   	movff	btemp,_prec
  7485  0114DA  0060  F0CC  F01E   	movff	btemp+1,_prec+1
  7486                           
  7487                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7488  0114E0  D00B               	goto	l10069
  7489  0114E2                     l10067:
  7490                           
  7491                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  7492                           ;stkvar	_fmt @ sp[(-32)+-4]
  7493  0114E2  0EDC               	movlw	-36
  7494  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  7495  0114EA  0EDD               	movlw	-35
  7496  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  7497  0114F2  2ADE               	incf	postinc2,f,c
  7498  0114F4  0E00               	movlw	0
  7499  0114F6  22DD               	addwfc	postdec2,f,c
  7500  0114F8                     l10069:
  7501  0114F8  0ED0               	movlw	208
  7502  0114FA  6E3C               	movwf	(btemp+10)^0,c
  7503  0114FC  0EFF               	movlw	255
  7504  0114FE  6E3D               	movwf	(btemp+11)^0,c
  7505                           
  7506                           ;stkvar	_fmt @ sp[(-32)+-4]
  7507  011500  0EDC               	movlw	-36
  7508  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
  7509  011508  0EDD               	movlw	-35
  7510  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7511  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
  7512  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
  7513  01151C                     	if	0	;tblptru may be non-zero
  7514  01151C                     	endif
  7515  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7516  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
  7517  01151E  6EF8               	movwf	tblptru,c
  7518  011520                     	endif
  7519  011520  0008               	tblrd		*
  7520  011522  50F5               	movf	tablat,w,c
  7521  011524  6E3A               	movwf	(btemp+8)^0,c
  7522  011526  6A3B               	clrf	(btemp+9)^0,c
  7523  011528  503C               	movf	(btemp+10)^0,w,c
  7524  01152A  263A               	addwf	(btemp+8)^0,f,c
  7525  01152C  503D               	movf	(btemp+11)^0,w,c
  7526  01152E  223B               	addwfc	(btemp+9)^0,f,c
  7527  011530  503B               	movf	(btemp+9)^0,w,c
  7528  011532  E106               	bnz	u10510
  7529  011534  0E0A               	movlw	10
  7530  011536  5C3A               	subwf	(btemp+8)^0,w,c
  7531  011538  B0D8               	btfsc	status,0,c
  7532  01153A  D002               	goto	u10510
  7533  01153C  0E01               	movlw	1
  7534  01153E  D001               	goto	u10520
  7535  011540                     u10510:
  7536  011540  0E00               	movlw	0
  7537  011542                     u10520:
  7538  011542  6E3C               	movwf	(btemp+10)^0,c
  7539  011544  6A3D               	clrf	(btemp+11)^0,c
  7540                           
  7541                           ;stkvar	_vfpfcnvrt$4428 @ sp[(-32)+0]
  7542  011546  0EE0               	movlw	-32
  7543  011548  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7544  01154E  0EE1               	movlw	-31
  7545  011550  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7546                           
  7547                           ;stkvar	_vfpfcnvrt$4428 @ sp[(-32)+0]
  7548  011556  0EE0               	movlw	-32
  7549  011558  006F FF8C  F032    	movff	plusw1,btemp
  7550  01155E  0EE1               	movlw	-31
  7551  011560  50E3               	movf	plusw1,w,c
  7552  011562  1032               	iorwf	btemp^0,w,c
  7553  011564  A4D8               	btfss	status,2,c
  7554  011566  D7BD               	goto	l10067
  7555  011568                     u10530:
  7556                           
  7557                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  7558                           ;stkvar	_fmt @ sp[(-32)+-4]
  7559  011568  0EDC               	movlw	-36
  7560  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7561  011570  0EDD               	movlw	-35
  7562  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
  7563  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
  7564  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
  7565  011584                     	if	0	;tblptru may be non-zero
  7566  011584                     	endif
  7567  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7568  011584  0E00               	movlw	low (__mediumconst shr (0+16))
  7569  011586  6EF8               	movwf	tblptru,c
  7570  011588                     	endif
  7571  011588  0008               	tblrd		*
  7572  01158A  50F5               	movf	tablat,w,c
  7573  01158C  6EE6               	movwf	postinc1,c
  7574  01158E  0E00               	movlw	0
  7575  011590  6EE6               	movwf	postinc1,c
  7576  011592  EC3A  F0BF         	call	_tolower	;wreg free
  7577                           
  7578                           ;stkvar	_ct @ sp[(-32)+26]
  7579  011596  0EFA               	movlw	-6
  7580  011598  0060  F0CB  FFE3   	movff	btemp,plusw1
  7581                           
  7582                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  7583                           ;stkvar	_ct @ sp[(-32)+26]
  7584  01159E  0EFA               	movlw	-6
  7585  0115A0  50E3               	movf	plusw1,w,c
  7586  0115A2  B4D8               	btfsc	status,2,c
  7587  0115A4  D05B               	goto	l10085
  7588                           
  7589                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  7590                           ;stkvar	_ct @ sp[(-32)+26]
  7591  0115A6  0EFB               	movlw	251
  7592  0115A8  24E1               	addwf	fsr1l,w,c
  7593  0115AA  6ED9               	movwf	fsr2l,c
  7594  0115AC  0EFF               	movlw	255
  7595  0115AE  20E2               	addwfc	fsr1h,w,c
  7596  0115B0  6EDA               	movwf	fsr2h,c
  7597                           
  7598                           ;stkvar	_fmt @ sp[(-32)+-4]
  7599  0115B2  0EDC               	movlw	-36
  7600  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
  7601  0115BA  0EDD               	movlw	-35
  7602  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
  7603  0115C2  006F FFB8  F03C    	movff	postinc0,btemp+10
  7604  0115C8  006F FFB4  F03D    	movff	postdec0,btemp+11
  7605  0115CE  0E01               	movlw	1
  7606  0115D0  263C               	addwf	(btemp+10)^0,f,c
  7607  0115D2  0E00               	movlw	0
  7608  0115D4  223D               	addwfc	(btemp+11)^0,f,c
  7609  0115D6  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  7610  0115DC  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  7611  0115E2                     	if	0	;tblptru may be non-zero
  7612  0115E2                     	endif
  7613  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7614  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
  7615  0115E4  6EF8               	movwf	tblptru,c
  7616  0115E6                     	endif
  7617  0115E6  0008               	tblrd		*
  7618  0115E8  50F5               	movf	tablat,w,c
  7619  0115EA  6EE6               	movwf	postinc1,c
  7620  0115EC  0E00               	movlw	0
  7621  0115EE  6EE6               	movwf	postinc1,c
  7622  0115F0  EC3A  F0BF         	call	_tolower	;wreg free
  7623  0115F4  5032               	movf	btemp^0,w,c
  7624  0115F6  6EDF               	movwf	indf2,c
  7625                           
  7626                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  7627                           ;stkvar	_ct @ sp[(-32)+26]
  7628  0115F8  0EFB               	movlw	251
  7629  0115FA  24E1               	addwf	fsr1l,w,c
  7630  0115FC  6ED9               	movwf	fsr2l,c
  7631  0115FE  0EFF               	movlw	255
  7632  011600  20E2               	addwfc	fsr1h,w,c
  7633  011602  6EDA               	movwf	fsr2h,c
  7634  011604  50DF               	movf	indf2,w,c
  7635  011606  B4D8               	btfsc	status,2,c
  7636  011608  D029               	goto	l10085
  7637                           
  7638                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  7639                           ;stkvar	_ct @ sp[(-32)+26]
  7640  01160A  0EFC               	movlw	252
  7641  01160C  24E1               	addwf	fsr1l,w,c
  7642  01160E  6ED9               	movwf	fsr2l,c
  7643  011610  0EFF               	movlw	255
  7644  011612  20E2               	addwfc	fsr1h,w,c
  7645  011614  6EDA               	movwf	fsr2h,c
  7646                           
  7647                           ;stkvar	_fmt @ sp[(-32)+-4]
  7648  011616  0EDC               	movlw	-36
  7649  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
  7650  01161E  0EDD               	movlw	-35
  7651  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
  7652  011626  006F FFB8  F03C    	movff	postinc0,btemp+10
  7653  01162C  006F FFB4  F03D    	movff	postdec0,btemp+11
  7654  011632  0E02               	movlw	2
  7655  011634  263C               	addwf	(btemp+10)^0,f,c
  7656  011636  0E00               	movlw	0
  7657  011638  223D               	addwfc	(btemp+11)^0,f,c
  7658  01163A  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  7659  011640  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  7660  011646                     	if	0	;tblptru may be non-zero
  7661  011646                     	endif
  7662  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7663  011646  0E00               	movlw	low (__mediumconst shr (0+16))
  7664  011648  6EF8               	movwf	tblptru,c
  7665  01164A                     	endif
  7666  01164A  0008               	tblrd		*
  7667  01164C  50F5               	movf	tablat,w,c
  7668  01164E  6EE6               	movwf	postinc1,c
  7669  011650  0E00               	movlw	0
  7670  011652  6EE6               	movwf	postinc1,c
  7671  011654  EC3A  F0BF         	call	_tolower	;wreg free
  7672  011658  5032               	movf	btemp^0,w,c
  7673  01165A  6EDF               	movwf	indf2,c
  7674  01165C                     l10085:
  7675                           
  7676                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  7677                           ;stkvar	_fmt @ sp[(-32)+-4]
  7678  01165C  0EDC               	movlw	-36
  7679  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7680  011664  0EDD               	movlw	-35
  7681  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
  7682  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7683  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
  7684  011678                     	if	0	;tblptru may be non-zero
  7685  011678                     	endif
  7686  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7687  011678  0E00               	movlw	low (__mediumconst shr (0+16))
  7688  01167A  6EF8               	movwf	tblptru,c
  7689  01167C                     	endif
  7690  01167C  0008               	tblrd		*
  7691  01167E  50F5               	movf	tablat,w,c
  7692  011680  0A63               	xorlw	99
  7693  011682  A4D8               	btfss	status,2,c
  7694  011684  D037               	goto	l10095
  7695                           
  7696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  7697                           ;stkvar	_fmt @ sp[(-32)+-4]
  7698  011686  0EDC               	movlw	-36
  7699  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
  7700  01168E  0EDD               	movlw	-35
  7701  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
  7702  011696  2ADE               	incf	postinc2,f,c
  7703  011698  0E00               	movlw	0
  7704  01169A  22DD               	addwfc	postdec2,f,c
  7705                           
  7706                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  7707                           ;stkvar	_ap @ sp[(-32)+-6]
  7708  01169C  0EDA               	movlw	-38
  7709  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7710  0116A4  0EDB               	movlw	-37
  7711  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
  7712  0116AC  0E02               	movlw	2
  7713  0116AE  5EDE               	subwf	postinc2,f,c
  7714  0116B0  0E00               	movlw	0
  7715  0116B2  5ADD               	subwfb	postdec2,f,c
  7716  0116B4  006F FF78  F03C    	movff	postinc2,btemp+10
  7717  0116BA  006F FF74  F03D    	movff	postdec2,btemp+11
  7718  0116C0  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7719  0116C6  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7720  0116CC  50DF               	movf	indf2,w,c
  7721  0116CE  6E3D               	movwf	(btemp+11)^0,c
  7722                           
  7723                           ;stkvar	_c @ sp[(-32)+31]
  7724  0116D0  0EFF               	movlw	-1
  7725  0116D2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7726                           
  7727                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  7728                           ;stkvar	_c @ sp[(-32)+31]
  7729  0116D8  0EFF               	movlw	-1
  7730  0116DA  50E3               	movf	plusw1,w,c
  7731  0116DC  6EE6               	movwf	postinc1,c
  7732                           
  7733                           ;stkvar	_fp @ sp[(-33)+-2]
  7734  0116DE  0EDD               	movlw	-35
  7735  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  7736  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  7737  0116EC  ECB4  F0BE         	call	_ctoa	;wreg free
  7738  0116F0  EFF3  F090         	goto	l2011
  7739  0116F4                     l10095:
  7740                           
  7741                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  7742                           ;stkvar	_fmt @ sp[(-32)+-4]
  7743  0116F4  0EDC               	movlw	-36
  7744  0116F6  006F FF8F FFD9     	movff	plusw1,fsr2l
  7745  0116FC  0EDD               	movlw	-35
  7746  0116FE  006F FF8F FFDA     	movff	plusw1,fsr2h
  7747  011704  006F FF7B FFF6     	movff	postinc2,tblptrl
  7748  01170A  006F FF77 FFF7     	movff	postdec2,tblptrh
  7749  011710                     	if	0	;tblptru may be non-zero
  7750  011710                     	endif
  7751  011710                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7752  011710  0E00               	movlw	low (__mediumconst shr (0+16))
  7753  011712  6EF8               	movwf	tblptru,c
  7754  011714                     	endif
  7755  011714  0008               	tblrd		*
  7756  011716  50F5               	movf	tablat,w,c
  7757  011718  0A64               	xorlw	100
  7758  01171A  B4D8               	btfsc	status,2,c
  7759  01171C  D015               	goto	u10580
  7760                           
  7761                           ;stkvar	_fmt @ sp[(-32)+-4]
  7762  01171E  0EDC               	movlw	-36
  7763  011720  006F FF8F FFD9     	movff	plusw1,fsr2l
  7764  011726  0EDD               	movlw	-35
  7765  011728  006F FF8F FFDA     	movff	plusw1,fsr2h
  7766  01172E  006F FF7B FFF6     	movff	postinc2,tblptrl
  7767  011734  006F FF77 FFF7     	movff	postdec2,tblptrh
  7768  01173A                     	if	0	;tblptru may be non-zero
  7769  01173A                     	endif
  7770  01173A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7771  01173A  0E00               	movlw	low (__mediumconst shr (0+16))
  7772  01173C  6EF8               	movwf	tblptru,c
  7773  01173E                     	endif
  7774  01173E  0008               	tblrd		*
  7775  011740  50F5               	movf	tablat,w,c
  7776  011742  0A69               	xorlw	105
  7777  011744  A4D8               	btfss	status,2,c
  7778  011746  D076               	goto	l10107
  7779  011748                     u10580:
  7780                           
  7781                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  7782                           ;stkvar	_fmt @ sp[(-32)+-4]
  7783  011748  0EDC               	movlw	-36
  7784  01174A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7785  011750  0EDD               	movlw	-35
  7786  011752  006F FF8F FFDA     	movff	plusw1,fsr2h
  7787  011758  2ADE               	incf	postinc2,f,c
  7788  01175A  0E00               	movlw	0
  7789  01175C  22DD               	addwfc	postdec2,f,c
  7790                           
  7791                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  7792                           ;stkvar	_ap @ sp[(-32)+-6]
  7793  01175E  0EDA               	movlw	-38
  7794  011760  006F FF8F FFD9     	movff	plusw1,fsr2l
  7795  011766  0EDB               	movlw	-37
  7796  011768  006F FF8F FFDA     	movff	plusw1,fsr2h
  7797  01176E  0E02               	movlw	2
  7798  011770  5EDE               	subwf	postinc2,f,c
  7799  011772  0E00               	movlw	0
  7800  011774  5ADD               	subwfb	postdec2,f,c
  7801  011776  006F FF78  F03C    	movff	postinc2,btemp+10
  7802  01177C  006F FF74  F03D    	movff	postdec2,btemp+11
  7803  011782  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7804  011788  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7805  01178E  006F FF78  F03C    	movff	postinc2,btemp+10
  7806  011794  006F FF74  F03D    	movff	postdec2,btemp+11
  7807                           
  7808                           ;stkvar	_ll @ sp[(-32)+14]
  7809  01179A  0EEE               	movlw	-18
  7810  01179C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7811  0117A2  0EEF               	movlw	-17
  7812  0117A4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7813  0117AA  6A32               	clrf	btemp^0,c
  7814  0117AC  BEE3               	btfsc	plusw1,7,c
  7815  0117AE  6832               	setf	btemp^0,c
  7816  0117B0  0EF0               	movlw	-16
  7817  0117B2  0060  F0CB  FFE3   	movff	btemp,plusw1
  7818  0117B8  0EF1               	movlw	-15
  7819  0117BA  0060  F0CB  FFE3   	movff	btemp,plusw1
  7820  0117C0  0EF2               	movlw	-14
  7821  0117C2  0060  F0CB  FFE3   	movff	btemp,plusw1
  7822  0117C8  0EF3               	movlw	-13
  7823  0117CA  0060  F0CB  FFE3   	movff	btemp,plusw1
  7824  0117D0  0EF4               	movlw	-12
  7825  0117D2  0060  F0CB  FFE3   	movff	btemp,plusw1
  7826  0117D8  0EF5               	movlw	-11
  7827  0117DA  0060  F0CB  FFE3   	movff	btemp,plusw1
  7828  0117E0                     l10103:
  7829                           
  7830                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  7831                           ;stkvar	_ll @ sp[(-32)+14]
  7832  0117E0  50E1               	movf	fsr1l,w,c
  7833  0117E2  0FEE               	addlw	-18
  7834  0117E4  6ED9               	movwf	fsr2l,c
  7835  0117E6  50E2               	movf	fsr1h,w,c
  7836  0117E8  6EDA               	movwf	fsr2h,c
  7837  0117EA  0EFF               	movlw	255
  7838  0117EC  22DA               	addwfc	fsr2h,f,c
  7839  0117EE  006F FF7B FFE6     	movff	postinc2,postinc1
  7840  0117F4  006F FF7B FFE6     	movff	postinc2,postinc1
  7841  0117FA  006F FF7B FFE6     	movff	postinc2,postinc1
  7842  011800  006F FF7B FFE6     	movff	postinc2,postinc1
  7843  011806  006F FF7B FFE6     	movff	postinc2,postinc1
  7844  01180C  006F FF7B FFE6     	movff	postinc2,postinc1
  7845  011812  006F FF7B FFE6     	movff	postinc2,postinc1
  7846  011818  006F FF7B FFE6     	movff	postinc2,postinc1
  7847                           
  7848                           ;stkvar	_fp @ sp[(-40)+-2]
  7849  01181E  0ED6               	movlw	-42
  7850  011820  006F FF8F FFE6     	movff	plusw1,postinc1
  7851  011826  006F FF8F FFE6     	movff	plusw1,postinc1
  7852  01182C  EC6B  F09E         	call	_dtoa	;wreg free
  7853  011830  EFF3  F090         	goto	l2011
  7854  011834                     l10107:
  7855                           
  7856                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
  7857  011834  0E02               	movlw	2
  7858  011836  6EE6               	movwf	postinc1,c
  7859  011838  0E00               	movlw	0
  7860  01183A  6EE6               	movwf	postinc1,c
  7861  01183C  0EE9               	movlw	low STR_42
  7862  01183E  6EE6               	movwf	postinc1,c
  7863  011840  0EFF               	movlw	high STR_42
  7864  011842  6EE6               	movwf	postinc1,c
  7865                           
  7866                           ;stkvar	_fmt @ sp[(-36)+-4]
  7867  011844  0ED8               	movlw	-40
  7868  011846  006F FF8F FFD9     	movff	plusw1,fsr2l
  7869  01184C  0ED9               	movlw	-39
  7870  01184E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7871  011854  006F FF78  F03C    	movff	postinc2,btemp+10
  7872  01185A  006F FF74  F03D    	movff	postdec2,btemp+11
  7873  011860  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  7874  011866  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  7875  01186C  EC52  F0AE         	call	_strncmp	;wreg free
  7876  011870  5032               	movf	btemp^0,w,c
  7877  011872  1033               	iorwf	(btemp+1)^0,w,c
  7878  011874  B4D8               	btfsc	status,2,c
  7879  011876  D022               	goto	u10600
  7880  011878  0E02               	movlw	2
  7881  01187A  6EE6               	movwf	postinc1,c
  7882  01187C  0E00               	movlw	0
  7883  01187E  6EE6               	movwf	postinc1,c
  7884  011880  0EEF               	movlw	low STR_46
  7885  011882  6EE6               	movwf	postinc1,c
  7886  011884  0EFF               	movlw	high STR_46
  7887  011886  6EE6               	movwf	postinc1,c
  7888                           
  7889                           ;stkvar	_fmt @ sp[(-36)+-4]
  7890  011888  0ED8               	movlw	-40
  7891  01188A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7892  011890  0ED9               	movlw	-39
  7893  011892  006F FF8F FFDA     	movff	plusw1,fsr2h
  7894  011898  006F FF78  F03C    	movff	postinc2,btemp+10
  7895  01189E  006F FF74  F03D    	movff	postdec2,btemp+11
  7896  0118A4  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  7897  0118AA  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  7898  0118B0  EC52  F0AE         	call	_strncmp	;wreg free
  7899  0118B4  5032               	movf	btemp^0,w,c
  7900  0118B6  1033               	iorwf	(btemp+1)^0,w,c
  7901  0118B8  A4D8               	btfss	status,2,c
  7902  0118BA  D069               	goto	l10119
  7903  0118BC                     u10600:
  7904                           
  7905                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
  7906                           ;stkvar	_fmt @ sp[(-32)+-4]
  7907  0118BC  0EDC               	movlw	-36
  7908  0118BE  006F FF8F FFD9     	movff	plusw1,fsr2l
  7909  0118C4  0EDD               	movlw	-35
  7910  0118C6  006F FF8F FFDA     	movff	plusw1,fsr2h
  7911  0118CC  0E02               	movlw	2
  7912  0118CE  26DE               	addwf	postinc2,f,c
  7913  0118D0  0E00               	movlw	0
  7914  0118D2  22DD               	addwfc	postdec2,f,c
  7915                           
  7916                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
  7917                           ;stkvar	_ap @ sp[(-32)+-6]
  7918  0118D4  0EDA               	movlw	-38
  7919  0118D6  006F FF8F FFD9     	movff	plusw1,fsr2l
  7920  0118DC  0EDB               	movlw	-37
  7921  0118DE  006F FF8F FFDA     	movff	plusw1,fsr2h
  7922  0118E4  0E04               	movlw	4
  7923  0118E6  5EDE               	subwf	postinc2,f,c
  7924  0118E8  0E00               	movlw	0
  7925  0118EA  5ADD               	subwfb	postdec2,f,c
  7926  0118EC  006F FF78  F03C    	movff	postinc2,btemp+10
  7927  0118F2  006F FF74  F03D    	movff	postdec2,btemp+11
  7928  0118F8  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7929  0118FE  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7930  011904  006F FF78  F03A    	movff	postinc2,btemp+8
  7931  01190A  006F FF78  F03B    	movff	postinc2,btemp+9
  7932  011910  006F FF78  F03C    	movff	postinc2,btemp+10
  7933  011916  006F FF78  F03D    	movff	postinc2,btemp+11
  7934  01191C  0060  F0E8  F042   	movff	btemp+8,btemp+16
  7935  011922  0060  F0EC  F043   	movff	btemp+9,btemp+17
  7936  011928  0060  F0F0  F044   	movff	btemp+10,btemp+18
  7937  01192E  0060  F0F4  F045   	movff	btemp+11,btemp+19
  7938  011934  6A46               	clrf	(btemp+20)^0,c
  7939  011936  BE45               	btfsc	(btemp+19)^0,7,c
  7940  011938  6846               	setf	(btemp+20)^0,c
  7941  01193A  0060  F118  F047   	movff	btemp+20,btemp+21
  7942  011940  0060  F118  F048   	movff	btemp+20,btemp+22
  7943  011946  0060  F118  F049   	movff	btemp+20,btemp+23
  7944                           
  7945                           ;stkvar	_ll @ sp[(-32)+14]
  7946  01194C  0EEE               	movlw	-18
  7947  01194E  0060  F10B  FFE3   	movff	btemp+16,plusw1
  7948  011954  0EEF               	movlw	-17
  7949  011956  0060  F10F  FFE3   	movff	btemp+17,plusw1
  7950  01195C  0EF0               	movlw	-16
  7951  01195E  0060  F113  FFE3   	movff	btemp+18,plusw1
  7952  011964  0EF1               	movlw	-15
  7953  011966  0060  F117  FFE3   	movff	btemp+19,plusw1
  7954  01196C  0EF2               	movlw	-14
  7955  01196E  0060  F11B  FFE3   	movff	btemp+20,plusw1
  7956  011974  0EF3               	movlw	-13
  7957  011976  0060  F11F  FFE3   	movff	btemp+21,plusw1
  7958  01197C  0EF4               	movlw	-12
  7959  01197E  0060  F123  FFE3   	movff	btemp+22,plusw1
  7960  011984  0EF5               	movlw	-11
  7961  011986  0060  F127  FFE3   	movff	btemp+23,plusw1
  7962  01198C  D729               	goto	l10103
  7963  01198E                     l10119:
  7964                           
  7965                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  7966                           ;stkvar	_ct @ sp[(-32)+26]
  7967  01198E  0EFA               	movlw	-6
  7968  011990  006F FF8C  F032    	movff	plusw1,btemp
  7969  011996  0E66               	movlw	102
  7970  011998  1832               	xorwf	btemp^0,w,c
  7971  01199A  A4D8               	btfss	status,2,c
  7972  01199C  D06E               	goto	l10131
  7973                           
  7974                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  7975                           ;stkvar	_fmt @ sp[(-32)+-4]
  7976  01199E  0EDC               	movlw	-36
  7977  0119A0  006F FF8F FFD9     	movff	plusw1,fsr2l
  7978  0119A6  0EDD               	movlw	-35
  7979  0119A8  006F FF8F FFDA     	movff	plusw1,fsr2h
  7980  0119AE  006F FF7B FFF6     	movff	postinc2,tblptrl
  7981  0119B4  006F FF77 FFF7     	movff	postdec2,tblptrh
  7982  0119BA                     	if	0	;tblptru may be non-zero
  7983  0119BA                     	endif
  7984  0119BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7985  0119BA  0E00               	movlw	low (__mediumconst shr (0+16))
  7986  0119BC  6EF8               	movwf	tblptru,c
  7987  0119BE                     	endif
  7988                           
  7989                           ;stkvar	_c @ sp[(-32)+31]
  7990  0119BE  0008               	tblrd		*
  7991  0119C0  0EFF               	movlw	-1
  7992  0119C2  006F FFD7 FFE3     	movff	tablat,plusw1
  7993                           
  7994                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  7995                           ;stkvar	_fmt @ sp[(-32)+-4]
  7996  0119C8  0EDC               	movlw	-36
  7997  0119CA  006F FF8F FFD9     	movff	plusw1,fsr2l
  7998  0119D0  0EDD               	movlw	-35
  7999  0119D2  006F FF8F FFDA     	movff	plusw1,fsr2h
  8000  0119D8  2ADE               	incf	postinc2,f,c
  8001  0119DA  0E00               	movlw	0
  8002  0119DC  22DD               	addwfc	postdec2,f,c
  8003                           
  8004                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  8005                           ;stkvar	_ap @ sp[(-32)+-6]
  8006  0119DE  0EDA               	movlw	-38
  8007  0119E0  006F FF8F FFD9     	movff	plusw1,fsr2l
  8008  0119E6  0EDB               	movlw	-37
  8009  0119E8  006F FF8F FFDA     	movff	plusw1,fsr2h
  8010  0119EE  0E04               	movlw	4
  8011  0119F0  5EDE               	subwf	postinc2,f,c
  8012  0119F2  0E00               	movlw	0
  8013  0119F4  5ADD               	subwfb	postdec2,f,c
  8014  0119F6  006F FF78  F03C    	movff	postinc2,btemp+10
  8015  0119FC  006F FF74  F03D    	movff	postdec2,btemp+11
  8016  011A02  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8017  011A08  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8018  011A0E  006F FF78  F03A    	movff	postinc2,btemp+8
  8019  011A14  006F FF78  F03B    	movff	postinc2,btemp+9
  8020  011A1A  006F FF78  F03C    	movff	postinc2,btemp+10
  8021  011A20  006F FF78  F03D    	movff	postinc2,btemp+11
  8022                           
  8023                           ;stkvar	_f @ sp[(-32)+22]
  8024  011A26  0EF6               	movlw	-10
  8025  011A28  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  8026  011A2E  0EF7               	movlw	-9
  8027  011A30  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  8028  011A36  0EF8               	movlw	-8
  8029  011A38  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8030  011A3E  0EF9               	movlw	-7
  8031  011A40  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8032  011A46                     l10127:
  8033                           
  8034                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  8035                           ;stkvar	_c @ sp[(-32)+31]
  8036  011A46  0EFF               	movlw	-1
  8037  011A48  50E3               	movf	plusw1,w,c
  8038  011A4A  6EE6               	movwf	postinc1,c
  8039                           
  8040                           ;stkvar	_f @ sp[(-33)+22]
  8041  011A4C  0EF5               	movlw	-11
  8042  011A4E  006F FF8F FFE6     	movff	plusw1,postinc1
  8043  011A54  006F FF8F FFE6     	movff	plusw1,postinc1
  8044  011A5A  006F FF8F FFE6     	movff	plusw1,postinc1
  8045  011A60  006F FF8F FFE6     	movff	plusw1,postinc1
  8046                           
  8047                           ;stkvar	_fp @ sp[(-37)+-2]
  8048  011A66  0ED9               	movlw	-39
  8049  011A68  006F FF8F FFE6     	movff	plusw1,postinc1
  8050  011A6E  006F FF8F FFE6     	movff	plusw1,postinc1
  8051  011A74  EC00  F080         	call	_efgtoa	;wreg free
  8052  011A78  D3B6               	goto	l2011
  8053  011A7A                     l10131:
  8054                           
  8055                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  8056  011A7A  0E02               	movlw	2
  8057  011A7C  6EE6               	movwf	postinc1,c
  8058  011A7E  0E00               	movlw	0
  8059  011A80  6EE6               	movwf	postinc1,c
  8060  011A82  0EEC               	movlw	low STR_51
  8061  011A84  6EE6               	movwf	postinc1,c
  8062  011A86  0EFF               	movlw	high STR_51
  8063  011A88  6EE6               	movwf	postinc1,c
  8064                           
  8065                           ;stkvar	_ct @ sp[(-36)+26]
  8066  011A8A  0EF6               	movlw	246
  8067  011A8C  24E1               	addwf	fsr1l,w,c
  8068  011A8E  6E32               	movwf	btemp^0,c
  8069  011A90  0EFF               	movlw	255
  8070  011A92  20E2               	addwfc	fsr1h,w,c
  8071  011A94  6E33               	movwf	(btemp+1)^0,c
  8072  011A96  0060  F0CB  FFE6   	movff	btemp,postinc1
  8073  011A9C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  8074  011AA2  EC52  F0AE         	call	_strncmp	;wreg free
  8075  011AA6  5032               	movf	btemp^0,w,c
  8076  011AA8  1033               	iorwf	(btemp+1)^0,w,c
  8077  011AAA  A4D8               	btfss	status,2,c
  8078  011AAC  D096               	goto	l10151
  8079                           
  8080                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  8081                           ;stkvar	_fmt @ sp[(-32)+-4]
  8082  011AAE  0EDC               	movlw	-36
  8083  011AB0  006F FF8F FFD9     	movff	plusw1,fsr2l
  8084  011AB6  0EDD               	movlw	-35
  8085  011AB8  006F FF8F FFDA     	movff	plusw1,fsr2h
  8086  011ABE  006F FF78  F03C    	movff	postinc2,btemp+10
  8087  011AC4  006F FF74  F03D    	movff	postdec2,btemp+11
  8088  011ACA  0E01               	movlw	1
  8089  011ACC  263C               	addwf	(btemp+10)^0,f,c
  8090  011ACE  0E00               	movlw	0
  8091  011AD0  223D               	addwfc	(btemp+11)^0,f,c
  8092  011AD2  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  8093  011AD8  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  8094  011ADE                     	if	0	;tblptru may be non-zero
  8095  011ADE                     	endif
  8096  011ADE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8097  011ADE  0E00               	movlw	low (__mediumconst shr (0+16))
  8098  011AE0  6EF8               	movwf	tblptru,c
  8099  011AE2                     	endif
  8100                           
  8101                           ;stkvar	_c @ sp[(-32)+31]
  8102  011AE2  0008               	tblrd		*
  8103  011AE4  0EFF               	movlw	-1
  8104  011AE6  006F FFD7 FFE3     	movff	tablat,plusw1
  8105  011AEC  0EBF               	movlw	191
  8106  011AEE  6E3C               	movwf	(btemp+10)^0,c
  8107  011AF0  0EFF               	movlw	255
  8108  011AF2  6E3D               	movwf	(btemp+11)^0,c
  8109                           
  8110                           ;stkvar	_fmt @ sp[(-32)+-4]
  8111  011AF4  0EDC               	movlw	-36
  8112  011AF6  006F FF8F FFD9     	movff	plusw1,fsr2l
  8113  011AFC  0EDD               	movlw	-35
  8114  011AFE  006F FF8F FFDA     	movff	plusw1,fsr2h
  8115  011B04  006F FF7B FFF6     	movff	postinc2,tblptrl
  8116  011B0A  006F FF77 FFF7     	movff	postdec2,tblptrh
  8117  011B10                     	if	0	;tblptru may be non-zero
  8118  011B10                     	endif
  8119  011B10                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8120  011B10  0E00               	movlw	low (__mediumconst shr (0+16))
  8121  011B12  6EF8               	movwf	tblptru,c
  8122  011B14                     	endif
  8123  011B14  0008               	tblrd		*
  8124  011B16  50F5               	movf	tablat,w,c
  8125  011B18  6E3A               	movwf	(btemp+8)^0,c
  8126  011B1A  6A3B               	clrf	(btemp+9)^0,c
  8127  011B1C  503C               	movf	(btemp+10)^0,w,c
  8128  011B1E  263A               	addwf	(btemp+8)^0,f,c
  8129  011B20  503D               	movf	(btemp+11)^0,w,c
  8130  011B22  223B               	addwfc	(btemp+9)^0,f,c
  8131  011B24  503B               	movf	(btemp+9)^0,w,c
  8132  011B26  E106               	bnz	u10630
  8133  011B28  0E1A               	movlw	26
  8134  011B2A  5C3A               	subwf	(btemp+8)^0,w,c
  8135  011B2C  B0D8               	btfsc	status,0,c
  8136  011B2E  D002               	goto	u10630
  8137  011B30  0E01               	movlw	1
  8138  011B32  D001               	goto	u10640
  8139  011B34                     u10630:
  8140  011B34  0E00               	movlw	0
  8141  011B36                     u10640:
  8142  011B36  6E3C               	movwf	(btemp+10)^0,c
  8143  011B38  6A3D               	clrf	(btemp+11)^0,c
  8144                           
  8145                           ;stkvar	_vfpfcnvrt$4439 @ sp[(-32)+2]
  8146  011B3A  0EE2               	movlw	-30
  8147  011B3C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8148  011B42  0EE3               	movlw	-29
  8149  011B44  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8150                           
  8151                           ;stkvar	_vfpfcnvrt$4439 @ sp[(-32)+2]
  8152  011B4A  0EE2               	movlw	-30
  8153  011B4C  006F FF8C  F032    	movff	plusw1,btemp
  8154  011B52  0EE3               	movlw	-29
  8155  011B54  50E3               	movf	plusw1,w,c
  8156  011B56  1032               	iorwf	btemp^0,w,c
  8157                           
  8158                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  8159                           ;stkvar	_ap @ sp[(-32)+-6]
  8160                           
  8161                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
  8162                           
  8163                           ;stkvar	_f @ sp[(-32)+22]
  8164                           
  8165                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  8166                           ;stkvar	_ap @ sp[(-32)+-6]
  8167  011B58  0EDA               	movlw	-38
  8168  011B5A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8169  011B60  0EDB               	movlw	-37
  8170  011B62  006F FF8F FFDA     	movff	plusw1,fsr2h
  8171  011B68  0E04               	movlw	4
  8172  011B6A  5EDE               	subwf	postinc2,f,c
  8173  011B6C  0E00               	movlw	0
  8174  011B6E  5ADD               	subwfb	postdec2,f,c
  8175  011B70  006F FF78  F03C    	movff	postinc2,btemp+10
  8176  011B76  006F FF74  F03D    	movff	postdec2,btemp+11
  8177  011B7C  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8178  011B82  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8179  011B88  006F FF78  F03A    	movff	postinc2,btemp+8
  8180  011B8E  006F FF78  F03B    	movff	postinc2,btemp+9
  8181  011B94  006F FF78  F03C    	movff	postinc2,btemp+10
  8182  011B9A  006F FF78  F03D    	movff	postinc2,btemp+11
  8183                           
  8184                           ;stkvar	_f @ sp[(-32)+22]
  8185  011BA0  0EF6               	movlw	-10
  8186  011BA2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  8187  011BA8  0EF7               	movlw	-9
  8188  011BAA  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  8189  011BB0  0EF8               	movlw	-8
  8190  011BB2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8191  011BB8  0EF9               	movlw	-7
  8192  011BBA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8193                           
  8194                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  8195                           ;stkvar	_fmt @ sp[(-32)+-4]
  8196  011BC0  0EDC               	movlw	-36
  8197  011BC2  006F FF8F FFD9     	movff	plusw1,fsr2l
  8198  011BC8  0EDD               	movlw	-35
  8199  011BCA  006F FF8F FFDA     	movff	plusw1,fsr2h
  8200  011BD0  0E02               	movlw	2
  8201  011BD2  26DE               	addwf	postinc2,f,c
  8202  011BD4  0E00               	movlw	0
  8203  011BD6  22DD               	addwfc	postdec2,f,c
  8204  011BD8  D736               	goto	l10127
  8205  011BDA                     l10151:
  8206                           
  8207                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  8208                           ;stkvar	_fmt @ sp[(-32)+-4]
  8209  011BDA  0EDC               	movlw	-36
  8210  011BDC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8211  011BE2  0EDD               	movlw	-35
  8212  011BE4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8213  011BEA  006F FF7B FFF6     	movff	postinc2,tblptrl
  8214  011BF0  006F FF77 FFF7     	movff	postdec2,tblptrh
  8215  011BF6                     	if	0	;tblptru may be non-zero
  8216  011BF6                     	endif
  8217  011BF6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8218  011BF6  0E00               	movlw	low (__mediumconst shr (0+16))
  8219  011BF8  6EF8               	movwf	tblptru,c
  8220  011BFA                     	endif
  8221  011BFA  0008               	tblrd		*
  8222  011BFC  50F5               	movf	tablat,w,c
  8223  011BFE  0A73               	xorlw	115
  8224  011C00  A4D8               	btfss	status,2,c
  8225  011C02  D042               	goto	l10161
  8226                           
  8227                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  8228                           ;stkvar	_fmt @ sp[(-32)+-4]
  8229  011C04  0EDC               	movlw	-36
  8230  011C06  006F FF8F FFD9     	movff	plusw1,fsr2l
  8231  011C0C  0EDD               	movlw	-35
  8232  011C0E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8233  011C14  2ADE               	incf	postinc2,f,c
  8234  011C16  0E00               	movlw	0
  8235  011C18  22DD               	addwfc	postdec2,f,c
  8236                           
  8237                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  8238                           ;stkvar	_ap @ sp[(-32)+-6]
  8239  011C1A  0EDA               	movlw	-38
  8240  011C1C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8241  011C22  0EDB               	movlw	-37
  8242  011C24  006F FF8F FFDA     	movff	plusw1,fsr2h
  8243  011C2A  0E02               	movlw	2
  8244  011C2C  5EDE               	subwf	postinc2,f,c
  8245  011C2E  0E00               	movlw	0
  8246  011C30  5ADD               	subwfb	postdec2,f,c
  8247  011C32  006F FF78  F03C    	movff	postinc2,btemp+10
  8248  011C38  006F FF74  F03D    	movff	postdec2,btemp+11
  8249  011C3E  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8250  011C44  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8251  011C4A  006F FF78  F03C    	movff	postinc2,btemp+10
  8252  011C50  006F FF74  F03D    	movff	postdec2,btemp+11
  8253                           
  8254                           ;stkvar	_cp @ sp[(-32)+29]
  8255  011C56  0EFE               	movlw	-2
  8256  011C58  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8257  011C5E  0EFD               	movlw	-3
  8258  011C60  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8259                           
  8260                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  8261                           ;stkvar	_cp @ sp[(-32)+29]
  8262  011C66  0EFD               	movlw	-3
  8263  011C68  006F FF8F FFE6     	movff	plusw1,postinc1
  8264  011C6E  006F FF8F FFE6     	movff	plusw1,postinc1
  8265                           
  8266                           ;stkvar	_fp @ sp[(-34)+-2]
  8267  011C74  0EDC               	movlw	-36
  8268  011C76  006F FF8F FFE6     	movff	plusw1,postinc1
  8269  011C7C  006F FF8F FFE6     	movff	plusw1,postinc1
  8270  011C82  EC59  F0A9         	call	_stoa	;wreg free
  8271  011C86  D2AF               	goto	l2011
  8272  011C88                     l10161:
  8273                           
  8274                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
  8275                           ;stkvar	_fmt @ sp[(-32)+-4]
  8276  011C88  0EDC               	movlw	-36
  8277  011C8A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8278  011C90  0EDD               	movlw	-35
  8279  011C92  006F FF8F FFDA     	movff	plusw1,fsr2h
  8280  011C98  006F FF7B FFF6     	movff	postinc2,tblptrl
  8281  011C9E  006F FF77 FFF7     	movff	postdec2,tblptrh
  8282  011CA4                     	if	0	;tblptru may be non-zero
  8283  011CA4                     	endif
  8284  011CA4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8285  011CA4  0E00               	movlw	low (__mediumconst shr (0+16))
  8286  011CA6  6EF8               	movwf	tblptru,c
  8287  011CA8                     	endif
  8288  011CA8  0008               	tblrd		*
  8289  011CAA  50F5               	movf	tablat,w,c
  8290  011CAC  0A75               	xorlw	117
  8291  011CAE  A4D8               	btfss	status,2,c
  8292  011CB0  D07C               	goto	l10171
  8293                           
  8294                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
  8295                           ;stkvar	_fmt @ sp[(-32)+-4]
  8296  011CB2  0EDC               	movlw	-36
  8297  011CB4  006F FF8F FFD9     	movff	plusw1,fsr2l
  8298  011CBA  0EDD               	movlw	-35
  8299  011CBC  006F FF8F FFDA     	movff	plusw1,fsr2h
  8300  011CC2  2ADE               	incf	postinc2,f,c
  8301  011CC4  0E00               	movlw	0
  8302  011CC6  22DD               	addwfc	postdec2,f,c
  8303                           
  8304                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  8305                           ;stkvar	_ap @ sp[(-32)+-6]
  8306  011CC8  0EDA               	movlw	-38
  8307  011CCA  006F FF8F FFD9     	movff	plusw1,fsr2l
  8308  011CD0  0EDB               	movlw	-37
  8309  011CD2  006F FF8F FFDA     	movff	plusw1,fsr2h
  8310  011CD8  0E02               	movlw	2
  8311  011CDA  5EDE               	subwf	postinc2,f,c
  8312  011CDC  0E00               	movlw	0
  8313  011CDE  5ADD               	subwfb	postdec2,f,c
  8314  011CE0  006F FF78  F03C    	movff	postinc2,btemp+10
  8315  011CE6  006F FF74  F03D    	movff	postdec2,btemp+11
  8316  011CEC  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8317  011CF2  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8318  011CF8  006F FF78  F03C    	movff	postinc2,btemp+10
  8319  011CFE  006F FF74  F03D    	movff	postdec2,btemp+11
  8320  011D04  503C               	movf	(btemp+10)^0,w,c
  8321  011D06  6E42               	movwf	(btemp+16)^0,c
  8322  011D08  503D               	movf	(btemp+11)^0,w,c
  8323  011D0A  6E43               	movwf	(btemp+17)^0,c
  8324  011D0C  6A44               	clrf	(btemp+18)^0,c
  8325  011D0E  6A45               	clrf	(btemp+19)^0,c
  8326  011D10  6A46               	clrf	(btemp+20)^0,c
  8327  011D12  6A47               	clrf	(btemp+21)^0,c
  8328  011D14  6A48               	clrf	(btemp+22)^0,c
  8329  011D16  6A49               	clrf	(btemp+23)^0,c
  8330                           
  8331                           ;stkvar	_llu @ sp[(-32)+6]
  8332  011D18  0EE6               	movlw	-26
  8333  011D1A  0060  F10B  FFE3   	movff	btemp+16,plusw1
  8334  011D20  0EE7               	movlw	-25
  8335  011D22  0060  F10F  FFE3   	movff	btemp+17,plusw1
  8336  011D28  0EE8               	movlw	-24
  8337  011D2A  0060  F113  FFE3   	movff	btemp+18,plusw1
  8338  011D30  0EE9               	movlw	-23
  8339  011D32  0060  F117  FFE3   	movff	btemp+19,plusw1
  8340  011D38  0EEA               	movlw	-22
  8341  011D3A  0060  F11B  FFE3   	movff	btemp+20,plusw1
  8342  011D40  0EEB               	movlw	-21
  8343  011D42  0060  F11F  FFE3   	movff	btemp+21,plusw1
  8344  011D48  0EEC               	movlw	-20
  8345  011D4A  0060  F123  FFE3   	movff	btemp+22,plusw1
  8346  011D50  0EED               	movlw	-19
  8347  011D52  0060  F127  FFE3   	movff	btemp+23,plusw1
  8348                           
  8349                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
  8350                           ;stkvar	_llu @ sp[(-32)+6]
  8351  011D58  50E1               	movf	fsr1l,w,c
  8352  011D5A  0FE6               	addlw	-26
  8353  011D5C  6ED9               	movwf	fsr2l,c
  8354  011D5E  50E2               	movf	fsr1h,w,c
  8355  011D60  6EDA               	movwf	fsr2h,c
  8356  011D62  0EFF               	movlw	255
  8357  011D64  22DA               	addwfc	fsr2h,f,c
  8358  011D66  006F FF7B FFE6     	movff	postinc2,postinc1
  8359  011D6C  006F FF7B FFE6     	movff	postinc2,postinc1
  8360  011D72  006F FF7B FFE6     	movff	postinc2,postinc1
  8361  011D78  006F FF7B FFE6     	movff	postinc2,postinc1
  8362  011D7E  006F FF7B FFE6     	movff	postinc2,postinc1
  8363  011D84  006F FF7B FFE6     	movff	postinc2,postinc1
  8364  011D8A  006F FF7B FFE6     	movff	postinc2,postinc1
  8365  011D90  006F FF7B FFE6     	movff	postinc2,postinc1
  8366                           
  8367                           ;stkvar	_fp @ sp[(-40)+-2]
  8368  011D96  0ED6               	movlw	-42
  8369  011D98  006F FF8F FFE6     	movff	plusw1,postinc1
  8370  011D9E  006F FF8F FFE6     	movff	plusw1,postinc1
  8371  011DA4  EC43  F0A6         	call	_utoa	;wreg free
  8372  011DA8  D21E               	goto	l2011
  8373  011DAA                     l10171:
  8374                           
  8375                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
  8376  011DAA  0E02               	movlw	2
  8377  011DAC  6EE6               	movwf	postinc1,c
  8378  011DAE  0E00               	movlw	0
  8379  011DB0  6EE6               	movwf	postinc1,c
  8380  011DB2  0EF2               	movlw	low STR_56
  8381  011DB4  6EE6               	movwf	postinc1,c
  8382  011DB6  0EFF               	movlw	high STR_56
  8383  011DB8  6EE6               	movwf	postinc1,c
  8384                           
  8385                           ;stkvar	_fmt @ sp[(-36)+-4]
  8386  011DBA  0ED8               	movlw	-40
  8387  011DBC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8388  011DC2  0ED9               	movlw	-39
  8389  011DC4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8390  011DCA  006F FF78  F03C    	movff	postinc2,btemp+10
  8391  011DD0  006F FF74  F03D    	movff	postdec2,btemp+11
  8392  011DD6  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  8393  011DDC  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  8394  011DE2  EC52  F0AE         	call	_strncmp	;wreg free
  8395  011DE6  5032               	movf	btemp^0,w,c
  8396  011DE8  1033               	iorwf	(btemp+1)^0,w,c
  8397  011DEA  A4D8               	btfss	status,2,c
  8398  011DEC  D039               	goto	l10181
  8399                           
  8400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
  8401                           ;stkvar	_fmt @ sp[(-32)+-4]
  8402  011DEE  0EDC               	movlw	-36
  8403  011DF0  006F FF8F FFD9     	movff	plusw1,fsr2l
  8404  011DF6  0EDD               	movlw	-35
  8405  011DF8  006F FF8F FFDA     	movff	plusw1,fsr2h
  8406  011DFE  0E02               	movlw	2
  8407  011E00  26DE               	addwf	postinc2,f,c
  8408  011E02  0E00               	movlw	0
  8409  011E04  22DD               	addwfc	postdec2,f,c
  8410                           
  8411                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  8412                           ;stkvar	_ap @ sp[(-32)+-6]
  8413  011E06  0EDA               	movlw	-38
  8414  011E08  006F FF8F FFD9     	movff	plusw1,fsr2l
  8415  011E0E  0EDB               	movlw	-37
  8416  011E10  006F FF8F FFDA     	movff	plusw1,fsr2h
  8417  011E16  0E04               	movlw	4
  8418  011E18  5EDE               	subwf	postinc2,f,c
  8419  011E1A  0E00               	movlw	0
  8420  011E1C  5ADD               	subwfb	postdec2,f,c
  8421  011E1E  006F FF78  F03C    	movff	postinc2,btemp+10
  8422  011E24  006F FF74  F03D    	movff	postdec2,btemp+11
  8423  011E2A  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8424  011E30  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8425  011E36  006F FF78  F03A    	movff	postinc2,btemp+8
  8426  011E3C  006F FF78  F03B    	movff	postinc2,btemp+9
  8427  011E42  006F FF78  F03C    	movff	postinc2,btemp+10
  8428  011E48  006F FF78  F03D    	movff	postinc2,btemp+11
  8429  011E4E  503A               	movf	(btemp+8)^0,w,c
  8430  011E50  6E42               	movwf	(btemp+16)^0,c
  8431  011E52  503B               	movf	(btemp+9)^0,w,c
  8432  011E54  6E43               	movwf	(btemp+17)^0,c
  8433  011E56  503C               	movf	(btemp+10)^0,w,c
  8434  011E58  6E44               	movwf	(btemp+18)^0,c
  8435  011E5A  503D               	movf	(btemp+11)^0,w,c
  8436  011E5C  6E45               	movwf	(btemp+19)^0,c
  8437  011E5E  D758               	goto	L5
  8438  011E60                     l10181:
  8439                           
  8440                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  8441                           ;stkvar	_fmt @ sp[(-32)+-4]
  8442  011E60  0EDC               	movlw	-36
  8443  011E62  006F FF8F FFD9     	movff	plusw1,fsr2l
  8444  011E68  0EDD               	movlw	-35
  8445  011E6A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8446  011E70  006F FF7B FFF6     	movff	postinc2,tblptrl
  8447  011E76  006F FF77 FFF7     	movff	postdec2,tblptrh
  8448  011E7C                     	if	0	;tblptru may be non-zero
  8449  011E7C                     	endif
  8450  011E7C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8451  011E7C  0E00               	movlw	low (__mediumconst shr (0+16))
  8452  011E7E  6EF8               	movwf	tblptru,c
  8453  011E80                     	endif
  8454  011E80  0008               	tblrd		*
  8455  011E82  50F5               	movf	tablat,w,c
  8456  011E84  0A78               	xorlw	120
  8457  011E86  B4D8               	btfsc	status,2,c
  8458  011E88  D015               	goto	u10700
  8459                           
  8460                           ;stkvar	_fmt @ sp[(-32)+-4]
  8461  011E8A  0EDC               	movlw	-36
  8462  011E8C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8463  011E92  0EDD               	movlw	-35
  8464  011E94  006F FF8F FFDA     	movff	plusw1,fsr2h
  8465  011E9A  006F FF7B FFF6     	movff	postinc2,tblptrl
  8466  011EA0  006F FF77 FFF7     	movff	postdec2,tblptrh
  8467  011EA6                     	if	0	;tblptru may be non-zero
  8468  011EA6                     	endif
  8469  011EA6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8470  011EA6  0E00               	movlw	low (__mediumconst shr (0+16))
  8471  011EA8  6EF8               	movwf	tblptru,c
  8472  011EAA                     	endif
  8473  011EAA  0008               	tblrd		*
  8474  011EAC  50F5               	movf	tablat,w,c
  8475  011EAE  0A58               	xorlw	88
  8476  011EB0  A4D8               	btfss	status,2,c
  8477  011EB2  D094               	goto	l10195
  8478  011EB4                     u10700:
  8479                           
  8480                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  8481                           ;stkvar	_fmt @ sp[(-32)+-4]
  8482  011EB4  0EDC               	movlw	-36
  8483  011EB6  006F FF8F FFD9     	movff	plusw1,fsr2l
  8484  011EBC  0EDD               	movlw	-35
  8485  011EBE  006F FF8F FFDA     	movff	plusw1,fsr2h
  8486  011EC4  006F FF7B FFF6     	movff	postinc2,tblptrl
  8487  011ECA  006F FF77 FFF7     	movff	postdec2,tblptrh
  8488  011ED0                     	if	0	;tblptru may be non-zero
  8489  011ED0                     	endif
  8490  011ED0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8491  011ED0  0E00               	movlw	low (__mediumconst shr (0+16))
  8492  011ED2  6EF8               	movwf	tblptru,c
  8493  011ED4                     	endif
  8494                           
  8495                           ;stkvar	_c @ sp[(-32)+31]
  8496  011ED4  0008               	tblrd		*
  8497  011ED6  0EFF               	movlw	-1
  8498  011ED8  006F FFD7 FFE3     	movff	tablat,plusw1
  8499                           
  8500                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  8501                           ;stkvar	_fmt @ sp[(-32)+-4]
  8502  011EDE  0EDC               	movlw	-36
  8503  011EE0  006F FF8F FFD9     	movff	plusw1,fsr2l
  8504  011EE6  0EDD               	movlw	-35
  8505  011EE8  006F FF8F FFDA     	movff	plusw1,fsr2h
  8506  011EEE  2ADE               	incf	postinc2,f,c
  8507  011EF0  0E00               	movlw	0
  8508  011EF2  22DD               	addwfc	postdec2,f,c
  8509                           
  8510                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  8511                           ;stkvar	_ap @ sp[(-32)+-6]
  8512  011EF4  0EDA               	movlw	-38
  8513  011EF6  006F FF8F FFD9     	movff	plusw1,fsr2l
  8514  011EFC  0EDB               	movlw	-37
  8515  011EFE  006F FF8F FFDA     	movff	plusw1,fsr2h
  8516  011F04  0E02               	movlw	2
  8517  011F06  5EDE               	subwf	postinc2,f,c
  8518  011F08  0E00               	movlw	0
  8519  011F0A  5ADD               	subwfb	postdec2,f,c
  8520  011F0C  006F FF78  F03C    	movff	postinc2,btemp+10
  8521  011F12  006F FF74  F03D    	movff	postdec2,btemp+11
  8522  011F18  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8523  011F1E  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8524  011F24  006F FF78  F03C    	movff	postinc2,btemp+10
  8525  011F2A  006F FF74  F03D    	movff	postdec2,btemp+11
  8526  011F30  503C               	movf	(btemp+10)^0,w,c
  8527  011F32  6E42               	movwf	(btemp+16)^0,c
  8528  011F34  503D               	movf	(btemp+11)^0,w,c
  8529  011F36  6E43               	movwf	(btemp+17)^0,c
  8530  011F38  6A44               	clrf	(btemp+18)^0,c
  8531  011F3A  6A45               	clrf	(btemp+19)^0,c
  8532  011F3C  6A46               	clrf	(btemp+20)^0,c
  8533  011F3E  6A47               	clrf	(btemp+21)^0,c
  8534  011F40  6A48               	clrf	(btemp+22)^0,c
  8535  011F42  6A49               	clrf	(btemp+23)^0,c
  8536                           
  8537                           ;stkvar	_llu @ sp[(-32)+6]
  8538  011F44  0EE6               	movlw	-26
  8539  011F46  0060  F10B  FFE3   	movff	btemp+16,plusw1
  8540  011F4C  0EE7               	movlw	-25
  8541  011F4E  0060  F10F  FFE3   	movff	btemp+17,plusw1
  8542  011F54  0EE8               	movlw	-24
  8543  011F56  0060  F113  FFE3   	movff	btemp+18,plusw1
  8544  011F5C  0EE9               	movlw	-23
  8545  011F5E  0060  F117  FFE3   	movff	btemp+19,plusw1
  8546  011F64  0EEA               	movlw	-22
  8547  011F66  0060  F11B  FFE3   	movff	btemp+20,plusw1
  8548  011F6C  0EEB               	movlw	-21
  8549  011F6E  0060  F11F  FFE3   	movff	btemp+21,plusw1
  8550  011F74  0EEC               	movlw	-20
  8551  011F76  0060  F123  FFE3   	movff	btemp+22,plusw1
  8552  011F7C  0EED               	movlw	-19
  8553  011F7E  0060  F127  FFE3   	movff	btemp+23,plusw1
  8554                           
  8555                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  8556                           ;stkvar	_c @ sp[(-32)+31]
  8557  011F84  0EFF               	movlw	-1
  8558  011F86  50E3               	movf	plusw1,w,c
  8559  011F88  6EE6               	movwf	postinc1,c
  8560                           
  8561                           ;stkvar	_llu @ sp[(-33)+6]
  8562  011F8A  50E1               	movf	fsr1l,w,c
  8563  011F8C  0FE5               	addlw	-27
  8564  011F8E  6ED9               	movwf	fsr2l,c
  8565  011F90  50E2               	movf	fsr1h,w,c
  8566  011F92  6EDA               	movwf	fsr2h,c
  8567  011F94  0EFF               	movlw	255
  8568  011F96  22DA               	addwfc	fsr2h,f,c
  8569  011F98  006F FF7B FFE6     	movff	postinc2,postinc1
  8570  011F9E  006F FF7B FFE6     	movff	postinc2,postinc1
  8571  011FA4  006F FF7B FFE6     	movff	postinc2,postinc1
  8572  011FAA  006F FF7B FFE6     	movff	postinc2,postinc1
  8573  011FB0  006F FF7B FFE6     	movff	postinc2,postinc1
  8574  011FB6  006F FF7B FFE6     	movff	postinc2,postinc1
  8575  011FBC  006F FF7B FFE6     	movff	postinc2,postinc1
  8576  011FC2  006F FF7B FFE6     	movff	postinc2,postinc1
  8577                           
  8578                           ;stkvar	_fp @ sp[(-41)+-2]
  8579  011FC8  0ED5               	movlw	-43
  8580  011FCA  006F FF8F FFE6     	movff	plusw1,postinc1
  8581  011FD0  006F FF8F FFE6     	movff	plusw1,postinc1
  8582  011FD6  ECB0  F0A2         	call	_xtoa	;wreg free
  8583  011FDA  D105               	goto	l2011
  8584  011FDC                     l10195:
  8585                           
  8586                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
  8587  011FDC  0E02               	movlw	2
  8588  011FDE  6EE6               	movwf	postinc1,c
  8589  011FE0  0E00               	movlw	0
  8590  011FE2  6EE6               	movwf	postinc1,c
  8591  011FE4  0EF5               	movlw	low STR_61
  8592  011FE6  6EE6               	movwf	postinc1,c
  8593  011FE8  0EFF               	movlw	high STR_61
  8594  011FEA  6EE6               	movwf	postinc1,c
  8595                           
  8596                           ;stkvar	_fmt @ sp[(-36)+-4]
  8597  011FEC  0ED8               	movlw	-40
  8598  011FEE  006F FF8F FFD9     	movff	plusw1,fsr2l
  8599  011FF4  0ED9               	movlw	-39
  8600  011FF6  006F FF8F FFDA     	movff	plusw1,fsr2h
  8601  011FFC  006F FF78  F03C    	movff	postinc2,btemp+10
  8602  012002  006F FF74  F03D    	movff	postdec2,btemp+11
  8603  012008  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  8604  01200E  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  8605  012014  EC52  F0AE         	call	_strncmp	;wreg free
  8606  012018  5032               	movf	btemp^0,w,c
  8607  01201A  1033               	iorwf	(btemp+1)^0,w,c
  8608  01201C  B4D8               	btfsc	status,2,c
  8609  01201E  D022               	goto	u10720
  8610  012020  0E02               	movlw	2
  8611  012022  6EE6               	movwf	postinc1,c
  8612  012024  0E00               	movlw	0
  8613  012026  6EE6               	movwf	postinc1,c
  8614  012028  0EE6               	movlw	low STR_65
  8615  01202A  6EE6               	movwf	postinc1,c
  8616  01202C  0EFF               	movlw	high STR_65
  8617  01202E  6EE6               	movwf	postinc1,c
  8618                           
  8619                           ;stkvar	_fmt @ sp[(-36)+-4]
  8620  012030  0ED8               	movlw	-40
  8621  012032  006F FF8F FFD9     	movff	plusw1,fsr2l
  8622  012038  0ED9               	movlw	-39
  8623  01203A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8624  012040  006F FF78  F03C    	movff	postinc2,btemp+10
  8625  012046  006F FF74  F03D    	movff	postdec2,btemp+11
  8626  01204C  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  8627  012052  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  8628  012058  EC52  F0AE         	call	_strncmp	;wreg free
  8629  01205C  5032               	movf	btemp^0,w,c
  8630  01205E  1033               	iorwf	(btemp+1)^0,w,c
  8631  012060  A4D8               	btfss	status,2,c
  8632  012062  D058               	goto	l10209
  8633  012064                     u10720:
  8634                           
  8635                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
  8636                           ;stkvar	_fmt @ sp[(-32)+-4]
  8637  012064  0EDC               	movlw	-36
  8638  012066  006F FF8F FFD9     	movff	plusw1,fsr2l
  8639  01206C  0EDD               	movlw	-35
  8640  01206E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8641  012074  006F FF78  F03C    	movff	postinc2,btemp+10
  8642  01207A  006F FF74  F03D    	movff	postdec2,btemp+11
  8643  012080  0E01               	movlw	1
  8644  012082  263C               	addwf	(btemp+10)^0,f,c
  8645  012084  0E00               	movlw	0
  8646  012086  223D               	addwfc	(btemp+11)^0,f,c
  8647  012088  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  8648  01208E  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  8649  012094                     	if	0	;tblptru may be non-zero
  8650  012094                     	endif
  8651  012094                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8652  012094  0E00               	movlw	low (__mediumconst shr (0+16))
  8653  012096  6EF8               	movwf	tblptru,c
  8654  012098                     	endif
  8655                           
  8656                           ;stkvar	_c @ sp[(-32)+31]
  8657  012098  0008               	tblrd		*
  8658  01209A  0EFF               	movlw	-1
  8659  01209C  006F FFD7 FFE3     	movff	tablat,plusw1
  8660                           
  8661                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
  8662                           ;stkvar	_fmt @ sp[(-32)+-4]
  8663  0120A2  0EDC               	movlw	-36
  8664  0120A4  006F FF8F FFD9     	movff	plusw1,fsr2l
  8665  0120AA  0EDD               	movlw	-35
  8666  0120AC  006F FF8F FFDA     	movff	plusw1,fsr2h
  8667  0120B2  0E02               	movlw	2
  8668  0120B4  26DE               	addwf	postinc2,f,c
  8669  0120B6  0E00               	movlw	0
  8670  0120B8  22DD               	addwfc	postdec2,f,c
  8671                           
  8672                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  8673                           ;stkvar	_ap @ sp[(-32)+-6]
  8674  0120BA  0EDA               	movlw	-38
  8675  0120BC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8676  0120C2  0EDB               	movlw	-37
  8677  0120C4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8678  0120CA  0E04               	movlw	4
  8679  0120CC  5EDE               	subwf	postinc2,f,c
  8680  0120CE  0E00               	movlw	0
  8681  0120D0  5ADD               	subwfb	postdec2,f,c
  8682  0120D2  006F FF78  F03C    	movff	postinc2,btemp+10
  8683  0120D8  006F FF74  F03D    	movff	postdec2,btemp+11
  8684  0120DE  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8685  0120E4  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8686  0120EA  006F FF78  F03A    	movff	postinc2,btemp+8
  8687  0120F0  006F FF78  F03B    	movff	postinc2,btemp+9
  8688  0120F6  006F FF78  F03C    	movff	postinc2,btemp+10
  8689  0120FC  006F FF78  F03D    	movff	postinc2,btemp+11
  8690  012102  503A               	movf	(btemp+8)^0,w,c
  8691  012104  6E42               	movwf	(btemp+16)^0,c
  8692  012106  503B               	movf	(btemp+9)^0,w,c
  8693  012108  6E43               	movwf	(btemp+17)^0,c
  8694  01210A  503C               	movf	(btemp+10)^0,w,c
  8695  01210C  6E44               	movwf	(btemp+18)^0,c
  8696  01210E  503D               	movf	(btemp+11)^0,w,c
  8697  012110  6E45               	movwf	(btemp+19)^0,c
  8698  012112  D714               	goto	L6
  8699  012114                     l10209:
  8700                           
  8701                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  8702                           ;stkvar	_fmt @ sp[(-32)+-4]
  8703  012114  0EDC               	movlw	-36
  8704  012116  006F FF8F FFD9     	movff	plusw1,fsr2l
  8705  01211C  0EDD               	movlw	-35
  8706  01211E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8707  012124  006F FF7B FFF6     	movff	postinc2,tblptrl
  8708  01212A  006F FF77 FFF7     	movff	postdec2,tblptrh
  8709  012130                     	if	0	;tblptru may be non-zero
  8710  012130                     	endif
  8711  012130                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8712  012130  0E00               	movlw	low (__mediumconst shr (0+16))
  8713  012132  6EF8               	movwf	tblptru,c
  8714  012134                     	endif
  8715  012134  0008               	tblrd		*
  8716  012136  50F5               	movf	tablat,w,c
  8717  012138  0A25               	xorlw	37
  8718  01213A  A4D8               	btfss	status,2,c
  8719  01213C  D01A               	goto	l10219
  8720                           
  8721                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  8722                           ;stkvar	_fmt @ sp[(-32)+-4]
  8723  01213E  0EDC               	movlw	-36
  8724  012140  006F FF8F FFD9     	movff	plusw1,fsr2l
  8725  012146  0EDD               	movlw	-35
  8726  012148  006F FF8F FFDA     	movff	plusw1,fsr2h
  8727  01214E  2ADE               	incf	postinc2,f,c
  8728  012150  0E00               	movlw	0
  8729  012152  22DD               	addwfc	postdec2,f,c
  8730                           
  8731                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  8732                           ;stkvar	_fp @ sp[(-32)+-2]
  8733  012154  0EDE               	movlw	-34
  8734  012156  006F FF8F FFE6     	movff	plusw1,postinc1
  8735  01215C  006F FF8F FFE6     	movff	plusw1,postinc1
  8736  012162  0E25               	movlw	37
  8737  012164  6EE6               	movwf	postinc1,c
  8738  012166  0E00               	movlw	0
  8739  012168  6EE6               	movwf	postinc1,c
  8740  01216A  ECBF  F0B7         	call	_fputc	;wreg free
  8741  01216E                     l10215:
  8742                           
  8743                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  8744  01216E  0E01               	movlw	1
  8745  012170  D00C               	goto	L7
  8746  012172                     l10219:
  8747                           
  8748                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  8749                           ;stkvar	_fmt @ sp[(-32)+-4]
  8750  012172  0EDC               	movlw	-36
  8751  012174  006F FF8F FFD9     	movff	plusw1,fsr2l
  8752  01217A  0EDD               	movlw	-35
  8753  01217C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8754  012182  2ADE               	incf	postinc2,f,c
  8755  012184  0E00               	movlw	0
  8756  012186  22DD               	addwfc	postdec2,f,c
  8757                           
  8758                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  8759  012188  0E00               	movlw	0
  8760  01218A                     L7:
  8761  01218A  6E32               	movwf	btemp^0,c
  8762  01218C  0E00               	movlw	0
  8763  01218E  6E33               	movwf	(btemp+1)^0,c
  8764  012190  D02A               	goto	l2011
  8765  012192                     l10225:
  8766                           
  8767                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  8768                           ;stkvar	_fp @ sp[(-32)+-2]
  8769  012192  0EDE               	movlw	-34
  8770  012194  006F FF8F FFE6     	movff	plusw1,postinc1
  8771  01219A  006F FF8F FFE6     	movff	plusw1,postinc1
  8772                           
  8773                           ;stkvar	_fmt @ sp[(-34)+-4]
  8774  0121A0  0EDA               	movlw	-38
  8775  0121A2  006F FF8F FFD9     	movff	plusw1,fsr2l
  8776  0121A8  0EDB               	movlw	-37
  8777  0121AA  006F FF8F FFDA     	movff	plusw1,fsr2h
  8778  0121B0  006F FF7B FFF6     	movff	postinc2,tblptrl
  8779  0121B6  006F FF77 FFF7     	movff	postdec2,tblptrh
  8780  0121BC                     	if	0	;tblptru may be non-zero
  8781  0121BC                     	endif
  8782  0121BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8783  0121BC  0E00               	movlw	low (__mediumconst shr (0+16))
  8784  0121BE  6EF8               	movwf	tblptru,c
  8785  0121C0                     	endif
  8786  0121C0  0008               	tblrd		*
  8787  0121C2  50F5               	movf	tablat,w,c
  8788  0121C4  6EE6               	movwf	postinc1,c
  8789  0121C6  0E00               	movlw	0
  8790  0121C8  6EE6               	movwf	postinc1,c
  8791  0121CA  ECBF  F0B7         	call	_fputc	;wreg free
  8792                           
  8793                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  8794                           ;stkvar	_fmt @ sp[(-32)+-4]
  8795  0121CE  0EDC               	movlw	-36
  8796  0121D0  006F FF8F FFD9     	movff	plusw1,fsr2l
  8797  0121D6  0EDD               	movlw	-35
  8798  0121D8  006F FF8F FFDA     	movff	plusw1,fsr2h
  8799  0121DE  2ADE               	incf	postinc2,f,c
  8800  0121E0  0E00               	movlw	0
  8801  0121E2  22DD               	addwfc	postdec2,f,c
  8802  0121E4  D7C4               	goto	l10215
  8803  0121E6                     l2011:
  8804                           
  8805                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  8806  0121E6  0EDA               	movlw	218
  8807  0121E8  26E1               	addwf	fsr1l,f,c
  8808  0121EA  0EFF               	movlw	255
  8809  0121EC  22E2               	addwfc	fsr1h,f,c
  8810  0121EE  0012               	return		;funcret
  8811  0121F0                     __end_of_vfpfcnvrt:
  8812                           	opt callstack 0
  8813                           
  8814 ;; *************** function _xtoa *****************
  8815 ;; Defined at:
  8816 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8817 ;; Parameters:    Size  Location     Type
  8818 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8819 ;;		 -> f(6), NULL(0), 
  8820 ;;  d               8  [STACK] unsigned long long 
  8821 ;;  x               1  [STACK] unsigned char 
  8822 ;; Auto vars:     Size  Location     Type
  8823 ;;  n               8  [STACK] unsigned long long 
  8824 ;;  c               2  [STACK] int 
  8825 ;;  i               2  [STACK] int 
  8826 ;;  w               2  [STACK] int 
  8827 ;;  p               2  [STACK] int 
  8828 ;; Return value:  Size  Location     Type
  8829 ;;                  2  [STACK] int 
  8830 ;; Registers used:
  8831 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  8832 ;; Tracked objects:
  8833 ;;		On entry : 0/5
  8834 ;;		On exit  : 0/0
  8835 ;;		Unchanged: 0/0
  8836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8841 ;;Total ram usage:        0 bytes
  8842 ;; Hardware stack levels used:    1
  8843 ;; Hardware stack levels required when called:   11
  8844 ;; This function calls:
  8845 ;;		_isalpha
  8846 ;;		_isupper
  8847 ;;		_pad
  8848 ;;		_toupper
  8849 ;; This function is called by:
  8850 ;;		_vfpfcnvrt
  8851 ;; This function uses a reentrant model
  8852 ;;
  8853                           
  8854                           	psect	text37
  8855  014560                     __ptext37:
  8856                           	opt callstack 0
  8857  014560                     _xtoa:
  8858                           	opt callstack 0
  8859                           
  8860                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  8861  014560  0E14               	movlw	20
  8862  014562  26E1               	addwf	fsr1l,f,c
  8863  014564  0E00               	movlw	0
  8864  014566  22E2               	addwfc	fsr1h,f,c
  8865                           
  8866                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  8867                           
  8868                           ;incstack = 0
  8869  014568  AE1E               	btfss	(_prec+1)^0,7,c
  8870                           
  8871                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  8872  01456A  921F               	bcf	_flags^0,1,c
  8873                           
  8874                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  8875  01456C  BE1E               	btfsc	(_prec+1)^0,7,c
  8876  01456E  D005               	goto	u10260
  8877  014570  501E               	movf	(_prec+1)^0,w,c
  8878  014572  E110               	bnz	l9961
  8879  014574  041D               	decf	_prec^0,w,c
  8880  014576  B0D8               	btfsc	status,0,c
  8881  014578  D00D               	goto	l9961
  8882  01457A                     u10260:
  8883  01457A  0E01               	movlw	1
  8884  01457C  6E3C               	movwf	(btemp+10)^0,c
  8885  01457E  0E00               	movlw	0
  8886  014580  6E3D               	movwf	(btemp+11)^0,c
  8887                           
  8888                           ;stkvar	_p @ sp[(-20)+18]
  8889  014582  0EFE               	movlw	-2
  8890  014584  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8891  01458A  0EFF               	movlw	-1
  8892  01458C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8893  014592  D008               	goto	l1961
  8894  014594                     l9961:
  8895                           
  8896                           ;stkvar	_p @ sp[(-20)+18]
  8897  014594  0EFE               	movlw	-2
  8898  014596  0060  F077  FFE3   	movff	_prec,plusw1
  8899  01459C  0EFF               	movlw	-1
  8900  01459E  0060  F07B  FFE3   	movff	_prec+1,plusw1
  8901  0145A4                     l1961:
  8902                           
  8903                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
  8904                           ;stkvar	_w @ sp[(-20)+16]
  8905  0145A4  0EFC               	movlw	-4
  8906  0145A6  0060  F06F  FFE3   	movff	_width,plusw1
  8907  0145AC  0EFD               	movlw	-3
  8908  0145AE  0060  F073  FFE3   	movff	_width+1,plusw1
  8909                           
  8910                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  8911  0145B4  A81F               	btfss	_flags^0,4,c
  8912  0145B6  D00B               	goto	l9967
  8913                           
  8914                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  8915                           ;stkvar	_w @ sp[(-20)+16]
  8916  0145B8  50E1               	movf	fsr1l,w,c
  8917  0145BA  0FFC               	addlw	-4
  8918  0145BC  6ED9               	movwf	fsr2l,c
  8919  0145BE  50E2               	movf	fsr1h,w,c
  8920  0145C0  6EDA               	movwf	fsr2h,c
  8921  0145C2  0EFF               	movlw	255
  8922  0145C4  22DA               	addwfc	fsr2h,f,c
  8923  0145C6  0EFE               	movlw	254
  8924  0145C8  26DE               	addwf	postinc2,f,c
  8925  0145CA  0EFF               	movlw	255
  8926  0145CC  22DD               	addwfc	postdec2,f,c
  8927  0145CE                     l9967:
  8928                           
  8929                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
  8930                           ;stkvar	_d @ sp[(-20)+-10]
  8931  0145CE  0EE2               	movlw	226
  8932  0145D0  24E1               	addwf	fsr1l,w,c
  8933  0145D2  6ED9               	movwf	fsr2l,c
  8934  0145D4  0EFF               	movlw	255
  8935  0145D6  20E2               	addwfc	fsr1h,w,c
  8936  0145D8  6EDA               	movwf	fsr2h,c
  8937                           
  8938                           ;stkvar	_n @ sp[(-20)+4]
  8939  0145DA  0E08               	movlw	8
  8940  0145DC  6E32               	movwf	btemp^0,c
  8941  0145DE  0EF0               	movlw	-16
  8942  0145E0                     us1028999:
  8943  0145E0  006F FF7B FFE3     	movff	postinc2,plusw1
  8944  0145E6  28E8               	incf	wreg,w,c
  8945  0145E8  2E32               	decfsz	btemp^0,f,c
  8946  0145EA  D7FA               	bra	us1028999
  8947                           
  8948                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  8949  0145EC  0E4F               	movlw	79
  8950  0145EE  6E3C               	movwf	(btemp+10)^0,c
  8951  0145F0  0E00               	movlw	0
  8952  0145F2  6E3D               	movwf	(btemp+11)^0,c
  8953                           
  8954                           ;stkvar	_i @ sp[(-20)+14]
  8955  0145F4  0EFA               	movlw	-6
  8956  0145F6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8957  0145FC  0EFB               	movlw	-5
  8958  0145FE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8959                           
  8960                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  8961  014604  0102               	movlb	2	; () banked
  8962  014606  6BFB               	clrf	(_dbuf+79)& (0+255),b
  8963                           
  8964                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8965  014608  D0EE               	goto	l10005
  8966  01460A                     l9973:
  8967                           
  8968                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
  8969                           ;stkvar	_i @ sp[(-20)+14]
  8970  01460A  50E1               	movf	fsr1l,w,c
  8971  01460C  0FFA               	addlw	-6
  8972  01460E  6ED9               	movwf	fsr2l,c
  8973  014610  50E2               	movf	fsr1h,w,c
  8974  014612  6EDA               	movwf	fsr2h,c
  8975  014614  0EFF               	movlw	255
  8976  014616  22DA               	addwfc	fsr2h,f,c
  8977  014618  06DE               	decf	postinc2,f,c
  8978  01461A  0E00               	movlw	0
  8979  01461C  5ADD               	subwfb	postdec2,f,c
  8980                           
  8981                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  8982                           ;stkvar	_n @ sp[(-20)+4]
  8983  01461E  0EF0               	movlw	-16
  8984  014620  006F FF8C  F03C    	movff	plusw1,btemp+10
  8985  014626  0EF1               	movlw	-15
  8986  014628  006F FF8C  F03D    	movff	plusw1,btemp+11
  8987  01462E  0E0F               	movlw	15
  8988  014630  163C               	andwf	(btemp+10)^0,f,c
  8989  014632  0E00               	movlw	0
  8990  014634  163D               	andwf	(btemp+11)^0,f,c
  8991                           
  8992                           ;stkvar	_c @ sp[(-20)+12]
  8993  014636  0EF8               	movlw	-8
  8994  014638  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8995  01463E  0EF9               	movlw	-7
  8996  014640  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8997                           
  8998                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  8999                           ;stkvar	_c @ sp[(-20)+12]
  9000  014646  0EF9               	movlw	-7
  9001  014648  BEE3               	btfsc	plusw1,7,c
  9002  01464A  D00F               	goto	l9981
  9003  01464C  0EF9               	movlw	-7
  9004  01464E  50E3               	movf	plusw1,w,c
  9005  014650  E108               	bnz	u10290
  9006  014652  0EF8               	movlw	-8
  9007  014654  006F FF8C  F032    	movff	plusw1,btemp
  9008  01465A  0E0A               	movlw	10
  9009  01465C  5E32               	subwf	btemp^0,f,c
  9010  01465E  A0D8               	btfss	status,0,c
  9011  014660  D004               	goto	l9981
  9012  014662                     u10290:
  9013                           
  9014                           ;stkvar	_c @ sp[(-20)+12]
  9015  014662  0EF8               	movlw	-8
  9016  014664  50E3               	movf	plusw1,w,c
  9017  014666  0F57               	addlw	87
  9018  014668  D003               	goto	L8
  9019  01466A                     l9981:
  9020                           
  9021                           ;stkvar	_c @ sp[(-20)+12]
  9022  01466A  0EF8               	movlw	-8
  9023  01466C  50E3               	movf	plusw1,w,c
  9024  01466E  0F30               	addlw	48
  9025  014670                     L8:
  9026  014670  6E3C               	movwf	(btemp+10)^0,c
  9027  014672  0EF9               	movlw	-7
  9028  014674  006F FF8C  F03D    	movff	plusw1,btemp+11
  9029  01467A  0E00               	movlw	0
  9030  01467C  223D               	addwfc	(btemp+11)^0,f,c
  9031                           
  9032                           ;stkvar	_c @ sp[(-20)+12]
  9033  01467E  0EF8               	movlw	-8
  9034  014680  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9035  014686  0EF9               	movlw	-7
  9036  014688  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9037  01468E  0EBF               	movlw	191
  9038  014690  6E3C               	movwf	(btemp+10)^0,c
  9039  014692  0EFF               	movlw	255
  9040  014694  6E3D               	movwf	(btemp+11)^0,c
  9041                           
  9042                           ;stkvar	_x @ sp[(-20)+-11]
  9043  014696  0EE1               	movlw	-31
  9044  014698  50E3               	movf	plusw1,w,c
  9045  01469A  6E3A               	movwf	(btemp+8)^0,c
  9046  01469C  6A3B               	clrf	(btemp+9)^0,c
  9047  01469E  503C               	movf	(btemp+10)^0,w,c
  9048  0146A0  263A               	addwf	(btemp+8)^0,f,c
  9049  0146A2  503D               	movf	(btemp+11)^0,w,c
  9050  0146A4  223B               	addwfc	(btemp+9)^0,f,c
  9051  0146A6  503B               	movf	(btemp+9)^0,w,c
  9052  0146A8  E106               	bnz	u10300
  9053  0146AA  0E1A               	movlw	26
  9054  0146AC  5C3A               	subwf	(btemp+8)^0,w,c
  9055  0146AE  B0D8               	btfsc	status,0,c
  9056  0146B0  D002               	goto	u10300
  9057  0146B2  0E01               	movlw	1
  9058  0146B4  D001               	goto	u10310
  9059  0146B6                     u10300:
  9060  0146B6  0E00               	movlw	0
  9061  0146B8                     u10310:
  9062  0146B8  6E3C               	movwf	(btemp+10)^0,c
  9063  0146BA  6A3D               	clrf	(btemp+11)^0,c
  9064                           
  9065                           ;stkvar	_xtoa$4412 @ sp[(-20)+2]
  9066  0146BC  0EEE               	movlw	-18
  9067  0146BE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9068  0146C4  0EEF               	movlw	-17
  9069  0146C6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9070                           
  9071                           ;stkvar	_xtoa$4412 @ sp[(-20)+2]
  9072  0146CC  0EEE               	movlw	-18
  9073  0146CE  006F FF8C  F032    	movff	plusw1,btemp
  9074  0146D4  0EEF               	movlw	-17
  9075  0146D6  50E3               	movf	plusw1,w,c
  9076  0146D8  1032               	iorwf	btemp^0,w,c
  9077  0146DA  B4D8               	btfsc	status,2,c
  9078  0146DC  D041               	goto	l9997
  9079  0146DE  0E9F               	movlw	159
  9080  0146E0  6E3C               	movwf	(btemp+10)^0,c
  9081  0146E2  0EFF               	movlw	255
  9082  0146E4  6E3D               	movwf	(btemp+11)^0,c
  9083                           
  9084                           ;stkvar	_c @ sp[(-20)+12]
  9085  0146E6  0EF8               	movlw	-8
  9086  0146E8  006F FF8C  F03A    	movff	plusw1,btemp+8
  9087  0146EE  0EF9               	movlw	-7
  9088  0146F0  006F FF8C  F03B    	movff	plusw1,btemp+9
  9089  0146F6  0E20               	movlw	32
  9090  0146F8  123A               	iorwf	(btemp+8)^0,f,c
  9091  0146FA  0E00               	movlw	0
  9092  0146FC  123B               	iorwf	(btemp+9)^0,f,c
  9093  0146FE  503C               	movf	(btemp+10)^0,w,c
  9094  014700  263A               	addwf	(btemp+8)^0,f,c
  9095  014702  503D               	movf	(btemp+11)^0,w,c
  9096  014704  223B               	addwfc	(btemp+9)^0,f,c
  9097  014706  503B               	movf	(btemp+9)^0,w,c
  9098  014708  E106               	bnz	u10330
  9099  01470A  0E1A               	movlw	26
  9100  01470C  5C3A               	subwf	(btemp+8)^0,w,c
  9101  01470E  B0D8               	btfsc	status,0,c
  9102  014710  D002               	goto	u10330
  9103  014712  0E01               	movlw	1
  9104  014714  D001               	goto	u10340
  9105  014716                     u10330:
  9106  014716  0E00               	movlw	0
  9107  014718                     u10340:
  9108  014718  6E3C               	movwf	(btemp+10)^0,c
  9109  01471A  6A3D               	clrf	(btemp+11)^0,c
  9110                           
  9111                           ;stkvar	_xtoa$4413 @ sp[(-20)+0]
  9112  01471C  0EEC               	movlw	-20
  9113  01471E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9114  014724  0EED               	movlw	-19
  9115  014726  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9116                           
  9117                           ;stkvar	_xtoa$4413 @ sp[(-20)+0]
  9118  01472C  0EEC               	movlw	-20
  9119  01472E  006F FF8C  F032    	movff	plusw1,btemp
  9120  014734  0EED               	movlw	-19
  9121  014736  50E3               	movf	plusw1,w,c
  9122  014738  1032               	iorwf	btemp^0,w,c
  9123  01473A  B4D8               	btfsc	status,2,c
  9124  01473C  D011               	goto	l9997
  9125                           
  9126                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  9127                           ;stkvar	_c @ sp[(-20)+12]
  9128  01473E  0EF8               	movlw	-8
  9129  014740  006F FF8F FFE6     	movff	plusw1,postinc1
  9130  014746  006F FF8F FFE6     	movff	plusw1,postinc1
  9131  01474C  ECF8  F0BE         	call	_toupper	;wreg free
  9132                           
  9133                           ;stkvar	_c @ sp[(-20)+12]
  9134  014750  0EF8               	movlw	-8
  9135  014752  0060  F0CB  FFE3   	movff	btemp,plusw1
  9136  014758  0EF9               	movlw	-7
  9137  01475A  0060  F0CF  FFE3   	movff	btemp+1,plusw1
  9138  014760                     l9997:
  9139                           
  9140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  9141                           ;stkvar	_c @ sp[(-20)+12]
  9142                           ;stkvar	_i @ sp[(-20)+14]
  9143  014760  0EFA               	movlw	-6
  9144  014762  006F FF8C  F03C    	movff	plusw1,btemp+10
  9145  014768  0EFB               	movlw	-5
  9146  01476A  006F FF8C  F03D    	movff	plusw1,btemp+11
  9147  014770  0EAC               	movlw	low _dbuf
  9148  014772  243C               	addwf	(btemp+10)^0,w,c
  9149  014774  6ED9               	movwf	fsr2l,c
  9150  014776  0E02               	movlw	high _dbuf
  9151  014778  203D               	addwfc	(btemp+11)^0,w,c
  9152  01477A  6EDA               	movwf	fsr2h,c
  9153  01477C  0EF8               	movlw	-8
  9154  01477E  006F FF8F FFDF     	movff	plusw1,indf2
  9155                           
  9156                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
  9157                           ;stkvar	_p @ sp[(-20)+18]
  9158  014784  50E1               	movf	fsr1l,w,c
  9159  014786  0FFE               	addlw	-2
  9160  014788  6ED9               	movwf	fsr2l,c
  9161  01478A  50E2               	movf	fsr1h,w,c
  9162  01478C  6EDA               	movwf	fsr2h,c
  9163  01478E  0EFF               	movlw	255
  9164  014790  22DA               	addwfc	fsr2h,f,c
  9165  014792  06DE               	decf	postinc2,f,c
  9166  014794  0E00               	movlw	0
  9167  014796  5ADD               	subwfb	postdec2,f,c
  9168                           
  9169                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
  9170                           ;stkvar	_w @ sp[(-20)+16]
  9171  014798  50E1               	movf	fsr1l,w,c
  9172  01479A  0FFC               	addlw	-4
  9173  01479C  6ED9               	movwf	fsr2l,c
  9174  01479E  50E2               	movf	fsr1h,w,c
  9175  0147A0  6EDA               	movwf	fsr2h,c
  9176  0147A2  0EFF               	movlw	255
  9177  0147A4  22DA               	addwfc	fsr2h,f,c
  9178  0147A6  06DE               	decf	postinc2,f,c
  9179  0147A8  0E00               	movlw	0
  9180  0147AA  5ADD               	subwfb	postdec2,f,c
  9181                           
  9182                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  9183  0147AC  0E04               	movlw	4
  9184  0147AE  6E3D               	movwf	(btemp+11)^0,c
  9185                           
  9186                           ;stkvar	_n @ sp[(-20)+4]
  9187  0147B0  50E1               	movf	fsr1l,w,c
  9188  0147B2  0FF0               	addlw	-16
  9189  0147B4  6ED9               	movwf	fsr2l,c
  9190  0147B6  50E2               	movf	fsr1h,w,c
  9191  0147B8  6EDA               	movwf	fsr2h,c
  9192  0147BA  0EFF               	movlw	255
  9193  0147BC  22DA               	addwfc	fsr2h,f,c
  9194  0147BE  283D               	incf	(btemp+11)^0,w,c
  9195  0147C0  52DE               	movf	postinc2,f,c
  9196  0147C2  D00F               	goto	u10360
  9197  0147C4                     u10365:
  9198  0147C4  52DE               	movf	postinc2,f,c
  9199  0147C6  52DE               	movf	postinc2,f,c
  9200  0147C8  52DE               	movf	postinc2,f,c
  9201  0147CA  52DE               	movf	postinc2,f,c
  9202  0147CC  52DE               	movf	postinc2,f,c
  9203  0147CE  52DE               	movf	postinc2,f,c
  9204  0147D0  90D8               	bcf	status,0,c
  9205  0147D2  32DD               	rrcf	postdec2,f,c
  9206  0147D4  32DD               	rrcf	postdec2,f,c
  9207  0147D6  32DD               	rrcf	postdec2,f,c
  9208  0147D8  32DD               	rrcf	postdec2,f,c
  9209  0147DA  32DD               	rrcf	postdec2,f,c
  9210  0147DC  32DD               	rrcf	postdec2,f,c
  9211  0147DE  32DD               	rrcf	postdec2,f,c
  9212  0147E0  32DE               	rrcf	postinc2,f,c
  9213  0147E2                     u10360:
  9214  0147E2  2EE8               	decfsz	wreg,f,c
  9215  0147E4  D7EF               	goto	u10365
  9216  0147E6                     l10005:
  9217                           
  9218                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9219                           ;stkvar	_i @ sp[(-20)+14]
  9220  0147E6  0EFB               	movlw	-5
  9221  0147E8  BEE3               	btfsc	plusw1,7,c
  9222  0147EA  D03A               	goto	u10410
  9223  0147EC  0EFB               	movlw	-5
  9224  0147EE  50E3               	movf	plusw1,w,c
  9225  0147F0  E108               	bnz	u10370
  9226  0147F2  0EFA               	movlw	-6
  9227  0147F4  006F FF8C  F032    	movff	plusw1,btemp
  9228  0147FA  0E02               	movlw	2
  9229  0147FC  5E32               	subwf	btemp^0,f,c
  9230  0147FE  A0D8               	btfss	status,0,c
  9231  014800  D02F               	goto	u10410
  9232  014802                     u10370:
  9233                           
  9234                           ;stkvar	_n @ sp[(-20)+4]
  9235  014802  0EF0               	movlw	-16
  9236  014804  50E3               	movf	plusw1,w,c
  9237  014806  E115               	bnz	u10381
  9238  014808  0EF1               	movlw	-15
  9239  01480A  50E3               	movf	plusw1,w,c
  9240  01480C  E112               	bnz	u10381
  9241  01480E  0EF2               	movlw	-14
  9242  014810  50E3               	movf	plusw1,w,c
  9243  014812  E10F               	bnz	u10381
  9244  014814  0EF3               	movlw	-13
  9245  014816  50E3               	movf	plusw1,w,c
  9246  014818  E10C               	bnz	u10381
  9247  01481A  0EF4               	movlw	-12
  9248  01481C  50E3               	movf	plusw1,w,c
  9249  01481E  E109               	bnz	u10381
  9250  014820  0EF5               	movlw	-11
  9251  014822  50E3               	movf	plusw1,w,c
  9252  014824  E106               	bnz	u10381
  9253  014826  0EF6               	movlw	-10
  9254  014828  50E3               	movf	plusw1,w,c
  9255  01482A  E103               	bnz	u10381
  9256  01482C  0EF7               	movlw	-9
  9257  01482E  50E3               	movf	plusw1,w,c
  9258  014830  A4D8               	btfss	status,2,c
  9259  014832                     u10381:
  9260  014832  D6EB               	goto	l9973
  9261                           
  9262                           ;stkvar	_p @ sp[(-20)+18]
  9263  014834  0EFF               	movlw	-1
  9264  014836  BEE3               	btfsc	plusw1,7,c
  9265  014838  D007               	goto	u10390
  9266  01483A  0EFF               	movlw	-1
  9267  01483C  50E3               	movf	plusw1,w,c
  9268  01483E  E103               	bnz	u10391
  9269  014840  0EFE               	movlw	-2
  9270  014842  04E3               	decf	plusw1,w,c
  9271  014844  B0D8               	btfsc	status,0,c
  9272  014846                     u10391:
  9273  014846  D6E1               	goto	l9973
  9274  014848                     u10390:
  9275                           
  9276                           ;stkvar	_w @ sp[(-20)+16]
  9277  014848  0EFD               	movlw	-3
  9278  01484A  BEE3               	btfsc	plusw1,7,c
  9279  01484C  D009               	goto	u10410
  9280  01484E  0EFD               	movlw	-3
  9281  014850  50E3               	movf	plusw1,w,c
  9282  014852  E104               	bnz	u10400
  9283  014854  0EFC               	movlw	-4
  9284  014856  04E3               	decf	plusw1,w,c
  9285  014858  A0D8               	btfss	status,0,c
  9286  01485A  D002               	goto	u10410
  9287  01485C                     u10400:
  9288  01485C  B21F               	btfsc	_flags^0,1,c
  9289  01485E  D6D5               	goto	l9973
  9290  014860                     u10410:
  9291                           
  9292                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  9293  014860  A81F               	btfss	_flags^0,4,c
  9294  014862  D036               	goto	l10021
  9295                           
  9296                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
  9297                           ;stkvar	_i @ sp[(-20)+14]
  9298  014864  50E1               	movf	fsr1l,w,c
  9299  014866  0FFA               	addlw	-6
  9300  014868  6ED9               	movwf	fsr2l,c
  9301  01486A  50E2               	movf	fsr1h,w,c
  9302  01486C  6EDA               	movwf	fsr2h,c
  9303  01486E  0EFF               	movlw	255
  9304  014870  22DA               	addwfc	fsr2h,f,c
  9305  014872  06DE               	decf	postinc2,f,c
  9306  014874  0E00               	movlw	0
  9307  014876  5ADD               	subwfb	postdec2,f,c
  9308                           
  9309                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  9310                           ;stkvar	_x @ sp[(-20)+-11]
  9311                           ;stkvar	_i @ sp[(-20)+14]
  9312  014878  0EFA               	movlw	-6
  9313  01487A  006F FF8C  F03C    	movff	plusw1,btemp+10
  9314  014880  0EFB               	movlw	-5
  9315  014882  006F FF8C  F03D    	movff	plusw1,btemp+11
  9316  014888  0EAC               	movlw	low _dbuf
  9317  01488A  243C               	addwf	(btemp+10)^0,w,c
  9318  01488C  6ED9               	movwf	fsr2l,c
  9319  01488E  0E02               	movlw	high _dbuf
  9320  014890  203D               	addwfc	(btemp+11)^0,w,c
  9321  014892  6EDA               	movwf	fsr2h,c
  9322  014894  0EE1               	movlw	-31
  9323  014896  006F FF8F FFDF     	movff	plusw1,indf2
  9324                           
  9325                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
  9326                           ;stkvar	_i @ sp[(-20)+14]
  9327  01489C  50E1               	movf	fsr1l,w,c
  9328  01489E  0FFA               	addlw	-6
  9329  0148A0  6ED9               	movwf	fsr2l,c
  9330  0148A2  50E2               	movf	fsr1h,w,c
  9331  0148A4  6EDA               	movwf	fsr2h,c
  9332  0148A6  0EFF               	movlw	255
  9333  0148A8  22DA               	addwfc	fsr2h,f,c
  9334  0148AA  06DE               	decf	postinc2,f,c
  9335  0148AC  0E00               	movlw	0
  9336  0148AE  5ADD               	subwfb	postdec2,f,c
  9337                           
  9338                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  9339                           ;stkvar	_i @ sp[(-20)+14]
  9340  0148B0  0EFA               	movlw	-6
  9341  0148B2  006F FF8C  F03C    	movff	plusw1,btemp+10
  9342  0148B8  0EFB               	movlw	-5
  9343  0148BA  006F FF8C  F03D    	movff	plusw1,btemp+11
  9344  0148C0  0EAC               	movlw	low _dbuf
  9345  0148C2  243C               	addwf	(btemp+10)^0,w,c
  9346  0148C4  6ED9               	movwf	fsr2l,c
  9347  0148C6  0E02               	movlw	high _dbuf
  9348  0148C8  203D               	addwfc	(btemp+11)^0,w,c
  9349  0148CA  6EDA               	movwf	fsr2h,c
  9350  0148CC  0E30               	movlw	48
  9351  0148CE  6EDF               	movwf	indf2,c
  9352  0148D0                     l10021:
  9353                           
  9354                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  9355                           ;stkvar	_w @ sp[(-20)+16]
  9356  0148D0  0EFC               	movlw	-4
  9357  0148D2  006F FF8F FFE6     	movff	plusw1,postinc1
  9358  0148D8  006F FF8F FFE6     	movff	plusw1,postinc1
  9359                           
  9360                           ;stkvar	_i @ sp[(-22)+14]
  9361  0148DE  0EAC               	movlw	low _dbuf
  9362  0148E0  6E3C               	movwf	(btemp+10)^0,c
  9363  0148E2  0E02               	movlw	high _dbuf
  9364  0148E4  6E3D               	movwf	(btemp+11)^0,c
  9365  0148E6  0EF8               	movlw	-8
  9366  0148E8  50E3               	movf	plusw1,w,c
  9367  0148EA  263C               	addwf	(btemp+10)^0,f,c
  9368  0148EC  0EF9               	movlw	-7
  9369  0148EE  50E3               	movf	plusw1,w,c
  9370  0148F0  223D               	addwfc	(btemp+11)^0,f,c
  9371  0148F2  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  9372  0148F8  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  9373                           
  9374                           ;stkvar	_fp @ sp[(-24)+-2]
  9375  0148FE  0EE6               	movlw	-26
  9376  014900  006F FF8F FFE6     	movff	plusw1,postinc1
  9377  014906  006F FF8F FFE6     	movff	plusw1,postinc1
  9378  01490C  ECDD  F0B8         	call	_pad	;wreg free
  9379                           
  9380                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
  9381  014910  0EE1               	movlw	225
  9382  014912  26E1               	addwf	fsr1l,f,c
  9383  014914  0EFF               	movlw	255
  9384  014916  22E2               	addwfc	fsr1h,f,c
  9385  014918  0012               	return		;funcret
  9386  01491A                     __end_of_xtoa:
  9387                           	opt callstack 0
  9388                           
  9389 ;; *************** function _toupper *****************
  9390 ;; Defined at:
  9391 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
  9392 ;; Parameters:    Size  Location     Type
  9393 ;;  c               2  [STACK] int 
  9394 ;; Auto vars:     Size  Location     Type
  9395 ;;		None
  9396 ;; Return value:  Size  Location     Type
  9397 ;;                  2  [STACK] int 
  9398 ;; Registers used:
  9399 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
  9400 ;; Tracked objects:
  9401 ;;		On entry : 0/2
  9402 ;;		On exit  : 0/0
  9403 ;;		Unchanged: 0/0
  9404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9409 ;;Total ram usage:        0 bytes
  9410 ;; Hardware stack levels used:    1
  9411 ;; Hardware stack levels required when called:    7
  9412 ;; This function calls:
  9413 ;;		_islower
  9414 ;; This function is called by:
  9415 ;;		_xtoa
  9416 ;; This function uses a reentrant model
  9417 ;;
  9418                           
  9419                           	psect	text38
  9420  017DF0                     __ptext38:
  9421                           	opt callstack 0
  9422  017DF0                     _toupper:
  9423                           	opt callstack 0
  9424                           
  9425                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9426  017DF0  52E6               	movf	postinc1,f,c
  9427  017DF2  52E6               	movf	postinc1,f,c
  9428                           
  9429                           ;stkvar	_c @ sp[(-2)+-2]
  9430                           
  9431                           ;incstack = 0
  9432  017DF4  0EFC               	movlw	-4
  9433  017DF6  50E3               	movf	plusw1,w,c
  9434  017DF8  0F9F               	addlw	159
  9435  017DFA  6E3C               	movwf	(btemp+10)^0,c
  9436  017DFC  0EFD               	movlw	-3
  9437  017DFE  006F FF8C  F03D    	movff	plusw1,btemp+11
  9438  017E04  0EFF               	movlw	255
  9439  017E06  223D               	addwfc	(btemp+11)^0,f,c
  9440  017E08  503D               	movf	(btemp+11)^0,w,c
  9441  017E0A  E106               	bnz	u5480
  9442  017E0C  0E1A               	movlw	26
  9443  017E0E  5C3C               	subwf	(btemp+10)^0,w,c
  9444  017E10  B0D8               	btfsc	status,0,c
  9445  017E12  D002               	goto	u5480
  9446  017E14  0E01               	movlw	1
  9447  017E16  D001               	goto	u5490
  9448  017E18                     u5480:
  9449  017E18  0E00               	movlw	0
  9450  017E1A                     u5490:
  9451  017E1A  6E3C               	movwf	(btemp+10)^0,c
  9452  017E1C  6A3D               	clrf	(btemp+11)^0,c
  9453                           
  9454                           ;stkvar	_toupper$5097 @ sp[(-2)+0]
  9455  017E1E  0EFE               	movlw	-2
  9456  017E20  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9457  017E26  0EFF               	movlw	-1
  9458  017E28  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9459                           
  9460                           ;stkvar	_toupper$5097 @ sp[(-2)+0]
  9461  017E2E  0EFE               	movlw	-2
  9462  017E30  006F FF8C  F032    	movff	plusw1,btemp
  9463  017E36  0EFF               	movlw	-1
  9464  017E38  50E3               	movf	plusw1,w,c
  9465  017E3A  1032               	iorwf	btemp^0,w,c
  9466  017E3C  B4D8               	btfsc	status,2,c
  9467  017E3E  D00D               	goto	l6583
  9468                           
  9469                           ;stkvar	_c @ sp[(-2)+-2]
  9470  017E40  0EFC               	movlw	-4
  9471  017E42  006F FF8C  F032    	movff	plusw1,btemp
  9472  017E48  0EFD               	movlw	-3
  9473  017E4A  006F FF8C  F033    	movff	plusw1,btemp+1
  9474  017E50  0E5F               	movlw	95
  9475  017E52  1632               	andwf	btemp^0,f,c
  9476  017E54  0E00               	movlw	0
  9477  017E56  1633               	andwf	(btemp+1)^0,f,c
  9478  017E58  D008               	goto	l2902
  9479  017E5A                     l6583:
  9480                           
  9481                           ;stkvar	_c @ sp[(-2)+-2]
  9482  017E5A  0EFC               	movlw	-4
  9483  017E5C  006F FF8C  F032    	movff	plusw1,btemp
  9484  017E62  0EFD               	movlw	-3
  9485  017E64  006F FF8C  F033    	movff	plusw1,btemp+1
  9486  017E6A                     l2902:
  9487                           
  9488                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9489  017E6A  52E5               	movf	postdec1,f,c
  9490  017E6C  52E5               	movf	postdec1,f,c
  9491  017E6E  52E5               	movf	postdec1,f,c
  9492  017E70  52E5               	movf	postdec1,f,c
  9493  017E72  0012               	return		;funcret
  9494  017E74                     __end_of_toupper:
  9495                           	opt callstack 0
  9496                           
  9497 ;; *************** function _islower *****************
  9498 ;; Defined at:
  9499 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
  9500 ;; Parameters:    Size  Location     Type
  9501 ;;  c               2  [STACK] int 
  9502 ;; Auto vars:     Size  Location     Type
  9503 ;;		None
  9504 ;; Return value:  Size  Location     Type
  9505 ;;                  2  [STACK] int 
  9506 ;; Registers used:
  9507 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  9508 ;; Tracked objects:
  9509 ;;		On entry : 0/0
  9510 ;;		On exit  : 0/0
  9511 ;;		Unchanged: 0/0
  9512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9517 ;;Total ram usage:        0 bytes
  9518 ;; Hardware stack levels used:    1
  9519 ;; Hardware stack levels required when called:    6
  9520 ;; This function calls:
  9521 ;;		Nothing
  9522 ;; This function is called by:
  9523 ;;		_toupper
  9524 ;; This function uses a reentrant model
  9525 ;;
  9526                           
  9527                           	psect	text39
  9528  018962                     __ptext39:
  9529                           	opt callstack 0
  9530  018962                     _islower:
  9531                           	opt callstack 16
  9532                           
  9533                           ;stkvar	_c @ sp[(0)+-2]
  9534                           
  9535                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9536                           ;incstack = 0
  9537  018962  0EFE               	movlw	-2
  9538  018964  50E3               	movf	plusw1,w,c
  9539  018966  0F9F               	addlw	159
  9540  018968  6E3C               	movwf	(btemp+10)^0,c
  9541  01896A  0EFF               	movlw	-1
  9542  01896C  006F FF8C  F03D    	movff	plusw1,btemp+11
  9543  018972  0EFF               	movlw	255
  9544  018974  223D               	addwfc	(btemp+11)^0,f,c
  9545  018976  503D               	movf	(btemp+11)^0,w,c
  9546  018978  E106               	bnz	u5170
  9547  01897A  0E1A               	movlw	26
  9548  01897C  5C3C               	subwf	(btemp+10)^0,w,c
  9549  01897E  B0D8               	btfsc	status,0,c
  9550  018980  D002               	goto	u5170
  9551  018982  0E01               	movlw	1
  9552  018984  D001               	goto	u5180
  9553  018986                     u5170:
  9554  018986  0E00               	movlw	0
  9555  018988                     u5180:
  9556  018988  6E32               	movwf	btemp^0,c
  9557  01898A  6A33               	clrf	(btemp+1)^0,c
  9558                           
  9559                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9560  01898C  52E5               	movf	postdec1,f,c
  9561  01898E  52E5               	movf	postdec1,f,c
  9562  018990  0012               	return		;funcret
  9563  018992                     __end_of_islower:
  9564                           	opt callstack 0
  9565                           
  9566 ;; *************** function _isalpha *****************
  9567 ;; Defined at:
  9568 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
  9569 ;; Parameters:    Size  Location     Type
  9570 ;;  c               2  [STACK] int 
  9571 ;; Auto vars:     Size  Location     Type
  9572 ;;		None
  9573 ;; Return value:  Size  Location     Type
  9574 ;;                  2  [STACK] int 
  9575 ;; Registers used:
  9576 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  9577 ;; Tracked objects:
  9578 ;;		On entry : 0/0
  9579 ;;		On exit  : 0/0
  9580 ;;		Unchanged: 0/0
  9581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9586 ;;Total ram usage:        0 bytes
  9587 ;; Hardware stack levels used:    1
  9588 ;; Hardware stack levels required when called:    6
  9589 ;; This function calls:
  9590 ;;		Nothing
  9591 ;; This function is called by:
  9592 ;;		_xtoa
  9593 ;; This function uses a reentrant model
  9594 ;;
  9595                           
  9596                           	psect	text40
  9597  0186D6                     __ptext40:
  9598                           	opt callstack 0
  9599  0186D6                     _isalpha:
  9600                           	opt callstack 17
  9601                           
  9602                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9603                           ;incstack = 0
  9604  0186D6  0E9F               	movlw	159
  9605  0186D8  6E3C               	movwf	(btemp+10)^0,c
  9606  0186DA  0EFF               	movlw	255
  9607  0186DC  6E3D               	movwf	(btemp+11)^0,c
  9608                           
  9609                           ;stkvar	_c @ sp[(0)+-2]
  9610  0186DE  0EFE               	movlw	-2
  9611  0186E0  006F FF8C  F03A    	movff	plusw1,btemp+8
  9612  0186E6  0EFF               	movlw	-1
  9613  0186E8  006F FF8C  F03B    	movff	plusw1,btemp+9
  9614  0186EE  0E20               	movlw	32
  9615  0186F0  123A               	iorwf	(btemp+8)^0,f,c
  9616  0186F2  0E00               	movlw	0
  9617  0186F4  123B               	iorwf	(btemp+9)^0,f,c
  9618  0186F6  503C               	movf	(btemp+10)^0,w,c
  9619  0186F8  263A               	addwf	(btemp+8)^0,f,c
  9620  0186FA  503D               	movf	(btemp+11)^0,w,c
  9621  0186FC  223B               	addwfc	(btemp+9)^0,f,c
  9622  0186FE  503B               	movf	(btemp+9)^0,w,c
  9623  018700  E106               	bnz	u5460
  9624  018702  0E1A               	movlw	26
  9625  018704  5C3A               	subwf	(btemp+8)^0,w,c
  9626  018706  B0D8               	btfsc	status,0,c
  9627  018708  D002               	goto	u5460
  9628  01870A  0E01               	movlw	1
  9629  01870C  D001               	goto	u5470
  9630  01870E                     u5460:
  9631  01870E  0E00               	movlw	0
  9632  018710                     u5470:
  9633  018710  6E32               	movwf	btemp^0,c
  9634  018712  6A33               	clrf	(btemp+1)^0,c
  9635                           
  9636                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9637  018714  52E5               	movf	postdec1,f,c
  9638  018716  52E5               	movf	postdec1,f,c
  9639  018718  0012               	return		;funcret
  9640  01871A                     __end_of_isalpha:
  9641                           	opt callstack 0
  9642                           
  9643 ;; *************** function _utoa *****************
  9644 ;; Defined at:
  9645 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9646 ;; Parameters:    Size  Location     Type
  9647 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9648 ;;		 -> f(6), NULL(0), 
  9649 ;;  d               8  [STACK] unsigned long long 
  9650 ;; Auto vars:     Size  Location     Type
  9651 ;;  n               8  [STACK] unsigned long long 
  9652 ;;  i               2  [STACK] int 
  9653 ;;  w               2  [STACK] int 
  9654 ;;  p               2  [STACK] int 
  9655 ;; Return value:  Size  Location     Type
  9656 ;;                  2  [STACK] int 
  9657 ;; Registers used:
  9658 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  9659 ;; Tracked objects:
  9660 ;;		On entry : 0/5
  9661 ;;		On exit  : 0/0
  9662 ;;		Unchanged: 0/0
  9663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9668 ;;Total ram usage:        0 bytes
  9669 ;; Hardware stack levels used:    1
  9670 ;; Hardware stack levels required when called:   11
  9671 ;; This function calls:
  9672 ;;		___lodiv
  9673 ;;		___lomod
  9674 ;;		_pad
  9675 ;; This function is called by:
  9676 ;;		_vfpfcnvrt
  9677 ;; This function uses a reentrant model
  9678 ;;
  9679                           
  9680                           	psect	text41
  9681  014C86                     __ptext41:
  9682                           	opt callstack 0
  9683  014C86                     _utoa:
  9684                           	opt callstack 0
  9685                           
  9686                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  9687  014C86  0E0E               	movlw	14
  9688  014C88  26E1               	addwf	fsr1l,f,c
  9689  014C8A  0E00               	movlw	0
  9690  014C8C  22E2               	addwfc	fsr1h,f,c
  9691                           
  9692                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
  9693                           
  9694                           ;incstack = 0
  9695  014C8E  AE1E               	btfss	(_prec+1)^0,7,c
  9696                           
  9697                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
  9698  014C90  921F               	bcf	_flags^0,1,c
  9699                           
  9700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
  9701  014C92  BE1E               	btfsc	(_prec+1)^0,7,c
  9702  014C94  D005               	goto	u10180
  9703  014C96  501E               	movf	(_prec+1)^0,w,c
  9704  014C98  E110               	bnz	l9921
  9705  014C9A  041D               	decf	_prec^0,w,c
  9706  014C9C  B0D8               	btfsc	status,0,c
  9707  014C9E  D00D               	goto	l9921
  9708  014CA0                     u10180:
  9709  014CA0  0E01               	movlw	1
  9710  014CA2  6E3C               	movwf	(btemp+10)^0,c
  9711  014CA4  0E00               	movlw	0
  9712  014CA6  6E3D               	movwf	(btemp+11)^0,c
  9713                           
  9714                           ;stkvar	_p @ sp[(-14)+12]
  9715  014CA8  0EFE               	movlw	-2
  9716  014CAA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9717  014CB0  0EFF               	movlw	-1
  9718  014CB2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9719  014CB8  D008               	goto	l1946
  9720  014CBA                     l9921:
  9721                           
  9722                           ;stkvar	_p @ sp[(-14)+12]
  9723  014CBA  0EFE               	movlw	-2
  9724  014CBC  0060  F077  FFE3   	movff	_prec,plusw1
  9725  014CC2  0EFF               	movlw	-1
  9726  014CC4  0060  F07B  FFE3   	movff	_prec+1,plusw1
  9727  014CCA                     l1946:
  9728                           
  9729                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
  9730                           ;stkvar	_w @ sp[(-14)+10]
  9731  014CCA  0EFC               	movlw	-4
  9732  014CCC  0060  F06F  FFE3   	movff	_width,plusw1
  9733  014CD2  0EFD               	movlw	-3
  9734  014CD4  0060  F073  FFE3   	movff	_width+1,plusw1
  9735                           
  9736                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
  9737                           ;stkvar	_d @ sp[(-14)+-10]
  9738  014CDA  0EE8               	movlw	232
  9739  014CDC  24E1               	addwf	fsr1l,w,c
  9740  014CDE  6ED9               	movwf	fsr2l,c
  9741  014CE0  0EFF               	movlw	255
  9742  014CE2  20E2               	addwfc	fsr1h,w,c
  9743  014CE4  6EDA               	movwf	fsr2h,c
  9744                           
  9745                           ;stkvar	_n @ sp[(-14)+0]
  9746  014CE6  0E08               	movlw	8
  9747  014CE8  6E32               	movwf	btemp^0,c
  9748  014CEA  0EF2               	movlw	-14
  9749  014CEC                     us1019999:
  9750  014CEC  006F FF7B FFE3     	movff	postinc2,plusw1
  9751  014CF2  28E8               	incf	wreg,w,c
  9752  014CF4  2E32               	decfsz	btemp^0,f,c
  9753  014CF6  D7FA               	bra	us1019999
  9754                           
  9755                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
  9756  014CF8  0E4F               	movlw	79
  9757  014CFA  6E3C               	movwf	(btemp+10)^0,c
  9758  014CFC  0E00               	movlw	0
  9759  014CFE  6E3D               	movwf	(btemp+11)^0,c
  9760                           
  9761                           ;stkvar	_i @ sp[(-14)+8]
  9762  014D00  0EFA               	movlw	-6
  9763  014D02  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9764  014D08  0EFB               	movlw	-5
  9765  014D0A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9766                           
  9767                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
  9768  014D10  0102               	movlb	2	; () banked
  9769  014D12  6BFB               	clrf	(_dbuf+79)& (0+255),b
  9770                           
  9771                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  9772  014D14  D0FB               	goto	l9939
  9773  014D16                     l9929:
  9774                           
  9775                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
  9776                           ;stkvar	_i @ sp[(-14)+8]
  9777  014D16  50E1               	movf	fsr1l,w,c
  9778  014D18  0FFA               	addlw	-6
  9779  014D1A  6ED9               	movwf	fsr2l,c
  9780  014D1C  50E2               	movf	fsr1h,w,c
  9781  014D1E  6EDA               	movwf	fsr2h,c
  9782  014D20  0EFF               	movlw	255
  9783  014D22  22DA               	addwfc	fsr2h,f,c
  9784  014D24  06DE               	decf	postinc2,f,c
  9785  014D26  0E00               	movlw	0
  9786  014D28  5ADD               	subwfb	postdec2,f,c
  9787                           
  9788                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
  9789  014D2A  0E0A               	movlw	10
  9790  014D2C  6EE6               	movwf	postinc1,c
  9791  014D2E  0E00               	movlw	0
  9792  014D30  6EE6               	movwf	postinc1,c
  9793  014D32  0E00               	movlw	0
  9794  014D34  6EE6               	movwf	postinc1,c
  9795  014D36  0E00               	movlw	0
  9796  014D38  6EE6               	movwf	postinc1,c
  9797  014D3A  0E00               	movlw	0
  9798  014D3C  6EE6               	movwf	postinc1,c
  9799  014D3E  0E00               	movlw	0
  9800  014D40  6EE6               	movwf	postinc1,c
  9801  014D42  0E00               	movlw	0
  9802  014D44  6EE6               	movwf	postinc1,c
  9803  014D46  0E00               	movlw	0
  9804  014D48  6EE6               	movwf	postinc1,c
  9805                           
  9806                           ;stkvar	_n @ sp[(-22)+0]
  9807  014D4A  50E1               	movf	fsr1l,w,c
  9808  014D4C  0FEA               	addlw	-22
  9809  014D4E  6ED9               	movwf	fsr2l,c
  9810  014D50  50E2               	movf	fsr1h,w,c
  9811  014D52  6EDA               	movwf	fsr2h,c
  9812  014D54  0EFF               	movlw	255
  9813  014D56  22DA               	addwfc	fsr2h,f,c
  9814  014D58  006F FF7B FFE6     	movff	postinc2,postinc1
  9815  014D5E  006F FF7B FFE6     	movff	postinc2,postinc1
  9816  014D64  006F FF7B FFE6     	movff	postinc2,postinc1
  9817  014D6A  006F FF7B FFE6     	movff	postinc2,postinc1
  9818  014D70  006F FF7B FFE6     	movff	postinc2,postinc1
  9819  014D76  006F FF7B FFE6     	movff	postinc2,postinc1
  9820  014D7C  006F FF7B FFE6     	movff	postinc2,postinc1
  9821  014D82  006F FF7B FFE6     	movff	postinc2,postinc1
  9822  014D88  ECE9  F0B5         	call	___lomod	;wreg free
  9823  014D8C  52E5               	movf	postdec1,f,c
  9824  014D8E  006F FF9C  F049    	movff	indf1,btemp+23
  9825  014D94  52E5               	movf	postdec1,f,c
  9826  014D96  006F FF9C  F048    	movff	indf1,btemp+22
  9827  014D9C  52E5               	movf	postdec1,f,c
  9828  014D9E  006F FF9C  F047    	movff	indf1,btemp+21
  9829  014DA4  52E5               	movf	postdec1,f,c
  9830  014DA6  006F FF9C  F046    	movff	indf1,btemp+20
  9831  014DAC  52E5               	movf	postdec1,f,c
  9832  014DAE  006F FF9C  F045    	movff	indf1,btemp+19
  9833  014DB4  52E5               	movf	postdec1,f,c
  9834  014DB6  006F FF9C  F044    	movff	indf1,btemp+18
  9835  014DBC  52E5               	movf	postdec1,f,c
  9836  014DBE  006F FF9C  F043    	movff	indf1,btemp+17
  9837  014DC4  52E5               	movf	postdec1,f,c
  9838  014DC6  006F FF9C  F042    	movff	indf1,btemp+16
  9839  014DCC  0EF8               	movlw	248
  9840  014DCE  26E1               	addwf	fsr1l,f,c
  9841  014DD0  0EFF               	movlw	255
  9842  014DD2  22E2               	addwfc	fsr1h,f,c
  9843  014DD4  0E30               	movlw	48
  9844  014DD6  2642               	addwf	(btemp+16)^0,f,c
  9845                           
  9846                           ;stkvar	_i @ sp[(-14)+8]
  9847  014DD8  0EFA               	movlw	-6
  9848  014DDA  006F FF8C  F03C    	movff	plusw1,btemp+10
  9849  014DE0  0EFB               	movlw	-5
  9850  014DE2  006F FF8C  F03D    	movff	plusw1,btemp+11
  9851  014DE8  0EAC               	movlw	low _dbuf
  9852  014DEA  243C               	addwf	(btemp+10)^0,w,c
  9853  014DEC  6ED9               	movwf	fsr2l,c
  9854  014DEE  0E02               	movlw	high _dbuf
  9855  014DF0  203D               	addwfc	(btemp+11)^0,w,c
  9856  014DF2  6EDA               	movwf	fsr2h,c
  9857  014DF4  0060  F10B  FFDF   	movff	btemp+16,indf2
  9858                           
  9859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
  9860                           ;stkvar	_p @ sp[(-14)+12]
  9861  014DFA  50E1               	movf	fsr1l,w,c
  9862  014DFC  0FFE               	addlw	-2
  9863  014DFE  6ED9               	movwf	fsr2l,c
  9864  014E00  50E2               	movf	fsr1h,w,c
  9865  014E02  6EDA               	movwf	fsr2h,c
  9866  014E04  0EFF               	movlw	255
  9867  014E06  22DA               	addwfc	fsr2h,f,c
  9868  014E08  06DE               	decf	postinc2,f,c
  9869  014E0A  0E00               	movlw	0
  9870  014E0C  5ADD               	subwfb	postdec2,f,c
  9871                           
  9872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
  9873                           ;stkvar	_w @ sp[(-14)+10]
  9874  014E0E  50E1               	movf	fsr1l,w,c
  9875  014E10  0FFC               	addlw	-4
  9876  014E12  6ED9               	movwf	fsr2l,c
  9877  014E14  50E2               	movf	fsr1h,w,c
  9878  014E16  6EDA               	movwf	fsr2h,c
  9879  014E18  0EFF               	movlw	255
  9880  014E1A  22DA               	addwfc	fsr2h,f,c
  9881  014E1C  06DE               	decf	postinc2,f,c
  9882  014E1E  0E00               	movlw	0
  9883  014E20  5ADD               	subwfb	postdec2,f,c
  9884                           
  9885                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
  9886  014E22  0E0A               	movlw	10
  9887  014E24  6EE6               	movwf	postinc1,c
  9888  014E26  0E00               	movlw	0
  9889  014E28  6EE6               	movwf	postinc1,c
  9890  014E2A  0E00               	movlw	0
  9891  014E2C  6EE6               	movwf	postinc1,c
  9892  014E2E  0E00               	movlw	0
  9893  014E30  6EE6               	movwf	postinc1,c
  9894  014E32  0E00               	movlw	0
  9895  014E34  6EE6               	movwf	postinc1,c
  9896  014E36  0E00               	movlw	0
  9897  014E38  6EE6               	movwf	postinc1,c
  9898  014E3A  0E00               	movlw	0
  9899  014E3C  6EE6               	movwf	postinc1,c
  9900  014E3E  0E00               	movlw	0
  9901  014E40  6EE6               	movwf	postinc1,c
  9902                           
  9903                           ;stkvar	_n @ sp[(-22)+0]
  9904  014E42  50E1               	movf	fsr1l,w,c
  9905  014E44  0FEA               	addlw	-22
  9906  014E46  6ED9               	movwf	fsr2l,c
  9907  014E48  50E2               	movf	fsr1h,w,c
  9908  014E4A  6EDA               	movwf	fsr2h,c
  9909  014E4C  0EFF               	movlw	255
  9910  014E4E  22DA               	addwfc	fsr2h,f,c
  9911  014E50  006F FF7B FFE6     	movff	postinc2,postinc1
  9912  014E56  006F FF7B FFE6     	movff	postinc2,postinc1
  9913  014E5C  006F FF7B FFE6     	movff	postinc2,postinc1
  9914  014E62  006F FF7B FFE6     	movff	postinc2,postinc1
  9915  014E68  006F FF7B FFE6     	movff	postinc2,postinc1
  9916  014E6E  006F FF7B FFE6     	movff	postinc2,postinc1
  9917  014E74  006F FF7B FFE6     	movff	postinc2,postinc1
  9918  014E7A  006F FF7B FFE6     	movff	postinc2,postinc1
  9919  014E80  EC18  F0B3         	call	___lodiv	;wreg free
  9920  014E84  52E5               	movf	postdec1,f,c
  9921  014E86  006F FF9C  F049    	movff	indf1,btemp+23
  9922  014E8C  52E5               	movf	postdec1,f,c
  9923  014E8E  006F FF9C  F048    	movff	indf1,btemp+22
  9924  014E94  52E5               	movf	postdec1,f,c
  9925  014E96  006F FF9C  F047    	movff	indf1,btemp+21
  9926  014E9C  52E5               	movf	postdec1,f,c
  9927  014E9E  006F FF9C  F046    	movff	indf1,btemp+20
  9928  014EA4  52E5               	movf	postdec1,f,c
  9929  014EA6  006F FF9C  F045    	movff	indf1,btemp+19
  9930  014EAC  52E5               	movf	postdec1,f,c
  9931  014EAE  006F FF9C  F044    	movff	indf1,btemp+18
  9932  014EB4  52E5               	movf	postdec1,f,c
  9933  014EB6  006F FF9C  F043    	movff	indf1,btemp+17
  9934  014EBC  52E5               	movf	postdec1,f,c
  9935  014EBE  006F FF9C  F042    	movff	indf1,btemp+16
  9936  014EC4  0EF8               	movlw	248
  9937  014EC6  26E1               	addwf	fsr1l,f,c
  9938  014EC8  0EFF               	movlw	255
  9939  014ECA  22E2               	addwfc	fsr1h,f,c
  9940                           
  9941                           ;stkvar	_n @ sp[(-14)+0]
  9942  014ECC  0EF2               	movlw	-14
  9943  014ECE  0060  F10B  FFE3   	movff	btemp+16,plusw1
  9944  014ED4  0EF3               	movlw	-13
  9945  014ED6  0060  F10F  FFE3   	movff	btemp+17,plusw1
  9946  014EDC  0EF4               	movlw	-12
  9947  014EDE  0060  F113  FFE3   	movff	btemp+18,plusw1
  9948  014EE4  0EF5               	movlw	-11
  9949  014EE6  0060  F117  FFE3   	movff	btemp+19,plusw1
  9950  014EEC  0EF6               	movlw	-10
  9951  014EEE  0060  F11B  FFE3   	movff	btemp+20,plusw1
  9952  014EF4  0EF7               	movlw	-9
  9953  014EF6  0060  F11F  FFE3   	movff	btemp+21,plusw1
  9954  014EFC  0EF8               	movlw	-8
  9955  014EFE  0060  F123  FFE3   	movff	btemp+22,plusw1
  9956  014F04  0EF9               	movlw	-7
  9957  014F06  0060  F127  FFE3   	movff	btemp+23,plusw1
  9958  014F0C                     l9939:
  9959                           
  9960                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  9961                           ;stkvar	_i @ sp[(-14)+8]
  9962  014F0C  0EFA               	movlw	-6
  9963  014F0E  006F FF8C  F032    	movff	plusw1,btemp
  9964  014F14  0EFB               	movlw	-5
  9965  014F16  50E3               	movf	plusw1,w,c
  9966  014F18  1032               	iorwf	btemp^0,w,c
  9967  014F1A  B4D8               	btfsc	status,2,c
  9968  014F1C  D02F               	goto	u10240
  9969                           
  9970                           ;stkvar	_n @ sp[(-14)+0]
  9971  014F1E  0EF2               	movlw	-14
  9972  014F20  50E3               	movf	plusw1,w,c
  9973  014F22  E115               	bnz	u10211
  9974  014F24  0EF3               	movlw	-13
  9975  014F26  50E3               	movf	plusw1,w,c
  9976  014F28  E112               	bnz	u10211
  9977  014F2A  0EF4               	movlw	-12
  9978  014F2C  50E3               	movf	plusw1,w,c
  9979  014F2E  E10F               	bnz	u10211
  9980  014F30  0EF5               	movlw	-11
  9981  014F32  50E3               	movf	plusw1,w,c
  9982  014F34  E10C               	bnz	u10211
  9983  014F36  0EF6               	movlw	-10
  9984  014F38  50E3               	movf	plusw1,w,c
  9985  014F3A  E109               	bnz	u10211
  9986  014F3C  0EF7               	movlw	-9
  9987  014F3E  50E3               	movf	plusw1,w,c
  9988  014F40  E106               	bnz	u10211
  9989  014F42  0EF8               	movlw	-8
  9990  014F44  50E3               	movf	plusw1,w,c
  9991  014F46  E103               	bnz	u10211
  9992  014F48  0EF9               	movlw	-7
  9993  014F4A  50E3               	movf	plusw1,w,c
  9994  014F4C  A4D8               	btfss	status,2,c
  9995  014F4E                     u10211:
  9996  014F4E  D6E3               	goto	l9929
  9997                           
  9998                           ;stkvar	_p @ sp[(-14)+12]
  9999  014F50  0EFF               	movlw	-1
 10000  014F52  BEE3               	btfsc	plusw1,7,c
 10001  014F54  D007               	goto	u10220
 10002  014F56  0EFF               	movlw	-1
 10003  014F58  50E3               	movf	plusw1,w,c
 10004  014F5A  E103               	bnz	u10221
 10005  014F5C  0EFE               	movlw	-2
 10006  014F5E  04E3               	decf	plusw1,w,c
 10007  014F60  B0D8               	btfsc	status,0,c
 10008  014F62                     u10221:
 10009  014F62  D6D9               	goto	l9929
 10010  014F64                     u10220:
 10011                           
 10012                           ;stkvar	_w @ sp[(-14)+10]
 10013  014F64  0EFD               	movlw	-3
 10014  014F66  BEE3               	btfsc	plusw1,7,c
 10015  014F68  D009               	goto	u10240
 10016  014F6A  0EFD               	movlw	-3
 10017  014F6C  50E3               	movf	plusw1,w,c
 10018  014F6E  E104               	bnz	u10230
 10019  014F70  0EFC               	movlw	-4
 10020  014F72  04E3               	decf	plusw1,w,c
 10021  014F74  A0D8               	btfss	status,0,c
 10022  014F76  D002               	goto	u10240
 10023  014F78                     u10230:
 10024  014F78  B21F               	btfsc	_flags^0,1,c
 10025  014F7A  D6CD               	goto	l9929
 10026  014F7C                     u10240:
 10027                           
 10028                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 10029                           ;stkvar	_w @ sp[(-14)+10]
 10030  014F7C  0EFC               	movlw	-4
 10031  014F7E  006F FF8F FFE6     	movff	plusw1,postinc1
 10032  014F84  006F FF8F FFE6     	movff	plusw1,postinc1
 10033                           
 10034                           ;stkvar	_i @ sp[(-16)+8]
 10035  014F8A  0EAC               	movlw	low _dbuf
 10036  014F8C  6E3C               	movwf	(btemp+10)^0,c
 10037  014F8E  0E02               	movlw	high _dbuf
 10038  014F90  6E3D               	movwf	(btemp+11)^0,c
 10039  014F92  0EF8               	movlw	-8
 10040  014F94  50E3               	movf	plusw1,w,c
 10041  014F96  263C               	addwf	(btemp+10)^0,f,c
 10042  014F98  0EF9               	movlw	-7
 10043  014F9A  50E3               	movf	plusw1,w,c
 10044  014F9C  223D               	addwfc	(btemp+11)^0,f,c
 10045  014F9E  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10046  014FA4  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10047                           
 10048                           ;stkvar	_fp @ sp[(-18)+-2]
 10049  014FAA  0EEC               	movlw	-20
 10050  014FAC  006F FF8F FFE6     	movff	plusw1,postinc1
 10051  014FB2  006F FF8F FFE6     	movff	plusw1,postinc1
 10052  014FB8  ECDD  F0B8         	call	_pad	;wreg free
 10053                           
 10054                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 10055  014FBC  0EE8               	movlw	232
 10056  014FBE  26E1               	addwf	fsr1l,f,c
 10057  014FC0  0EFF               	movlw	255
 10058  014FC2  22E2               	addwfc	fsr1h,f,c
 10059  014FC4  0012               	return		;funcret
 10060  014FC6                     __end_of_utoa:
 10061                           	opt callstack 0
 10062                           
 10063 ;; *************** function ___lomod *****************
 10064 ;; Defined at:
 10065 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 10066 ;; Parameters:    Size  Location     Type
 10067 ;;  dividend        8  [STACK] unsigned long long 
 10068 ;;  divisor         8  [STACK] unsigned long long 
 10069 ;; Auto vars:     Size  Location     Type
 10070 ;;  counter         1  [STACK] unsigned char 
 10071 ;; Return value:  Size  Location     Type
 10072 ;;                  8  [STACK] unsigned long long 
 10073 ;; Registers used:
 10074 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 10075 ;; Tracked objects:
 10076 ;;		On entry : 0/2
 10077 ;;		On exit  : 0/0
 10078 ;;		Unchanged: 0/0
 10079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10084 ;;Total ram usage:        0 bytes
 10085 ;; Hardware stack levels used:    1
 10086 ;; Hardware stack levels required when called:    6
 10087 ;; This function calls:
 10088 ;;		Nothing
 10089 ;; This function is called by:
 10090 ;;		_utoa
 10091 ;; This function uses a reentrant model
 10092 ;;
 10093                           
 10094                           	psect	text42
 10095  016BD2                     __ptext42:
 10096                           	opt callstack 0
 10097  016BD2                     ___lomod:
 10098                           	opt callstack 0
 10099                           
 10100                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 10101  016BD2  52E6               	movf	postinc1,f,c
 10102                           
 10103                           ;stkvar	_divisor @ sp[(-1)+-16]
 10104                           
 10105                           ;incstack = 0
 10106  016BD4  0EEF               	movlw	-17
 10107  016BD6  50E3               	movf	plusw1,w,c
 10108  016BD8  E116               	bnz	u6610
 10109  016BDA  0EF0               	movlw	-16
 10110  016BDC  50E3               	movf	plusw1,w,c
 10111  016BDE  E113               	bnz	u6610
 10112  016BE0  0EF1               	movlw	-15
 10113  016BE2  50E3               	movf	plusw1,w,c
 10114  016BE4  E110               	bnz	u6610
 10115  016BE6  0EF2               	movlw	-14
 10116  016BE8  50E3               	movf	plusw1,w,c
 10117  016BEA  E10D               	bnz	u6610
 10118  016BEC  0EF3               	movlw	-13
 10119  016BEE  50E3               	movf	plusw1,w,c
 10120  016BF0  E10A               	bnz	u6610
 10121  016BF2  0EF4               	movlw	-12
 10122  016BF4  50E3               	movf	plusw1,w,c
 10123  016BF6  E107               	bnz	u6610
 10124  016BF8  0EF5               	movlw	-11
 10125  016BFA  50E3               	movf	plusw1,w,c
 10126  016BFC  E104               	bnz	u6610
 10127  016BFE  0EF6               	movlw	-10
 10128  016C00  50E3               	movf	plusw1,w,c
 10129  016C02  B4D8               	btfsc	status,2,c
 10130  016C04  D075               	goto	u6640
 10131  016C06                     u6610:
 10132                           
 10133                           ;stkvar	_counter @ sp[(-1)+0]
 10134  016C06  0EFF               	movlw	-1
 10135  016C08  6AE3               	clrf	plusw1,c
 10136  016C0A  D012               	goto	L9
 10137  016C0C                     l7193:
 10138                           
 10139                           ;stkvar	_divisor @ sp[(-1)+-16]
 10140  016C0C  90D8               	bcf	status,0,c
 10141  016C0E  0EEF               	movlw	-17
 10142  016C10  36E3               	rlcf	plusw1,f,c
 10143  016C12  0EF0               	movlw	-16
 10144  016C14  36E3               	rlcf	plusw1,f,c
 10145  016C16  0EF1               	movlw	-15
 10146  016C18  36E3               	rlcf	plusw1,f,c
 10147  016C1A  0EF2               	movlw	-14
 10148  016C1C  36E3               	rlcf	plusw1,f,c
 10149  016C1E  0EF3               	movlw	-13
 10150  016C20  36E3               	rlcf	plusw1,f,c
 10151  016C22  0EF4               	movlw	-12
 10152  016C24  36E3               	rlcf	plusw1,f,c
 10153  016C26  0EF5               	movlw	-11
 10154  016C28  36E3               	rlcf	plusw1,f,c
 10155  016C2A  0EF6               	movlw	-10
 10156  016C2C  36E3               	rlcf	plusw1,f,c
 10157                           
 10158                           ;stkvar	_counter @ sp[(-1)+0]
 10159  016C2E  0EFF               	movlw	-1
 10160  016C30                     L9:
 10161  016C30  2AE3               	incf	plusw1,f,c
 10162                           
 10163                           ;stkvar	_divisor @ sp[(-1)+-16]
 10164  016C32  0EF6               	movlw	-10
 10165  016C34  AEE3               	btfss	plusw1,7,c
 10166  016C36  D7EA               	goto	l7193
 10167  016C38                     u6620:
 10168                           
 10169                           ;stkvar	_divisor @ sp[(-1)+-16]
 10170                           ;stkvar	_dividend @ sp[(-1)+-8]
 10171  016C38  50E1               	movf	fsr1l,w,c
 10172  016C3A  0FF7               	addlw	-9
 10173  016C3C  6ED9               	movwf	fsr2l,c
 10174  016C3E  50E2               	movf	fsr1h,w,c
 10175  016C40  6EDA               	movwf	fsr2h,c
 10176  016C42  0EFF               	movlw	255
 10177  016C44  22DA               	addwfc	fsr2h,f,c
 10178  016C46  0EEF               	movlw	-17
 10179  016C48  50E3               	movf	plusw1,w,c
 10180  016C4A  5CDE               	subwf	postinc2,w,c
 10181  016C4C  0EF0               	movlw	-16
 10182  016C4E  50E3               	movf	plusw1,w,c
 10183  016C50  58DE               	subwfb	postinc2,w,c
 10184  016C52  0EF1               	movlw	-15
 10185  016C54  50E3               	movf	plusw1,w,c
 10186  016C56  58DE               	subwfb	postinc2,w,c
 10187  016C58  0EF2               	movlw	-14
 10188  016C5A  50E3               	movf	plusw1,w,c
 10189  016C5C  58DE               	subwfb	postinc2,w,c
 10190  016C5E  0EF3               	movlw	-13
 10191  016C60  50E3               	movf	plusw1,w,c
 10192  016C62  58DE               	subwfb	postinc2,w,c
 10193  016C64  0EF4               	movlw	-12
 10194  016C66  50E3               	movf	plusw1,w,c
 10195  016C68  58DE               	subwfb	postinc2,w,c
 10196  016C6A  0EF5               	movlw	-11
 10197  016C6C  50E3               	movf	plusw1,w,c
 10198  016C6E  58DE               	subwfb	postinc2,w,c
 10199  016C70  0EF6               	movlw	-10
 10200  016C72  50E3               	movf	plusw1,w,c
 10201  016C74  58DE               	subwfb	postinc2,w,c
 10202  016C76  A0D8               	btfss	status,0,c
 10203  016C78  D01F               	goto	l7201
 10204                           
 10205                           ;stkvar	_divisor @ sp[(-1)+-16]
 10206                           ;stkvar	_dividend @ sp[(-1)+-8]
 10207  016C7A  50E1               	movf	fsr1l,w,c
 10208  016C7C  0FF7               	addlw	-9
 10209  016C7E  6ED9               	movwf	fsr2l,c
 10210  016C80  50E2               	movf	fsr1h,w,c
 10211  016C82  6EDA               	movwf	fsr2h,c
 10212  016C84  0EFF               	movlw	255
 10213  016C86  22DA               	addwfc	fsr2h,f,c
 10214  016C88  0EEF               	movlw	-17
 10215  016C8A  50E3               	movf	plusw1,w,c
 10216  016C8C  5EDE               	subwf	postinc2,f,c
 10217  016C8E  0EF0               	movlw	-16
 10218  016C90  50E3               	movf	plusw1,w,c
 10219  016C92  5ADE               	subwfb	postinc2,f,c
 10220  016C94  0EF1               	movlw	-15
 10221  016C96  50E3               	movf	plusw1,w,c
 10222  016C98  5ADE               	subwfb	postinc2,f,c
 10223  016C9A  0EF2               	movlw	-14
 10224  016C9C  50E3               	movf	plusw1,w,c
 10225  016C9E  5ADE               	subwfb	postinc2,f,c
 10226  016CA0  0EF3               	movlw	-13
 10227  016CA2  50E3               	movf	plusw1,w,c
 10228  016CA4  5ADE               	subwfb	postinc2,f,c
 10229  016CA6  0EF4               	movlw	-12
 10230  016CA8  50E3               	movf	plusw1,w,c
 10231  016CAA  5ADE               	subwfb	postinc2,f,c
 10232  016CAC  0EF5               	movlw	-11
 10233  016CAE  50E3               	movf	plusw1,w,c
 10234  016CB0  5ADE               	subwfb	postinc2,f,c
 10235  016CB2  0EF6               	movlw	-10
 10236  016CB4  50E3               	movf	plusw1,w,c
 10237  016CB6  5ADE               	subwfb	postinc2,f,c
 10238  016CB8                     l7201:
 10239                           
 10240                           ;stkvar	_divisor @ sp[(-1)+-16]
 10241  016CB8  90D8               	bcf	status,0,c
 10242  016CBA  0EF6               	movlw	-10
 10243  016CBC  32E3               	rrcf	plusw1,f,c
 10244  016CBE  0EF5               	movlw	-11
 10245  016CC0  32E3               	rrcf	plusw1,f,c
 10246  016CC2  0EF4               	movlw	-12
 10247  016CC4  32E3               	rrcf	plusw1,f,c
 10248  016CC6  0EF3               	movlw	-13
 10249  016CC8  32E3               	rrcf	plusw1,f,c
 10250  016CCA  0EF2               	movlw	-14
 10251  016CCC  32E3               	rrcf	plusw1,f,c
 10252  016CCE  0EF1               	movlw	-15
 10253  016CD0  32E3               	rrcf	plusw1,f,c
 10254  016CD2  0EF0               	movlw	-16
 10255  016CD4  32E3               	rrcf	plusw1,f,c
 10256  016CD6  0EEF               	movlw	-17
 10257  016CD8  32E3               	rrcf	plusw1,f,c
 10258                           
 10259                           ;stkvar	_counter @ sp[(-1)+0]
 10260  016CDA  0EFF               	movlw	-1
 10261  016CDC  50E3               	movf	plusw1,w,c
 10262  016CDE  6E32               	movwf	btemp^0,c
 10263  016CE0  0E01               	movlw	1
 10264  016CE2  5E32               	subwf	btemp^0,f,c
 10265  016CE4  0EFF               	movlw	-1
 10266  016CE6  0060  F0CB  FFE3   	movff	btemp,plusw1
 10267  016CEC  A4D8               	btfss	status,2,c
 10268  016CEE  D7A4               	goto	u6620
 10269  016CF0                     u6640:
 10270                           
 10271                           ;stkvar	_dividend @ sp[(-1)+-8]
 10272  016CF0  0EF7               	movlw	247
 10273  016CF2  24E1               	addwf	fsr1l,w,c
 10274  016CF4  6ED9               	movwf	fsr2l,c
 10275  016CF6  0EFF               	movlw	255
 10276  016CF8  20E2               	addwfc	fsr1h,w,c
 10277  016CFA  6EDA               	movwf	fsr2h,c
 10278                           
 10279                           ;stkvar	?___lomod @ sp[(-1)+-8]
 10280  016CFC  0E08               	movlw	8
 10281  016CFE  6E32               	movwf	btemp^0,c
 10282  016D00  0EF7               	movlw	-9
 10283  016D02                     us665999:
 10284  016D02  006F FF7B FFE3     	movff	postinc2,plusw1
 10285  016D08  28E8               	incf	wreg,w,c
 10286  016D0A  2E32               	decfsz	btemp^0,f,c
 10287  016D0C  D7FA               	bra	us665999
 10288                           
 10289                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 10290  016D0E  52E5               	movf	postdec1,f,c
 10291  016D10  0012               	return		;funcret
 10292  016D12                     __end_of___lomod:
 10293                           	opt callstack 0
 10294                           
 10295 ;; *************** function ___lodiv *****************
 10296 ;; Defined at:
 10297 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 10298 ;; Parameters:    Size  Location     Type
 10299 ;;  dividend        8  [STACK] unsigned long long 
 10300 ;;  divisor         8  [STACK] unsigned long long 
 10301 ;; Auto vars:     Size  Location     Type
 10302 ;;  quotient        8  [STACK] unsigned long long 
 10303 ;;  counter         1  [STACK] unsigned char 
 10304 ;; Return value:  Size  Location     Type
 10305 ;;                  8  [STACK] unsigned long long 
 10306 ;; Registers used:
 10307 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 10308 ;; Tracked objects:
 10309 ;;		On entry : 0/2
 10310 ;;		On exit  : 0/0
 10311 ;;		Unchanged: 0/0
 10312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10317 ;;Total ram usage:        0 bytes
 10318 ;; Hardware stack levels used:    1
 10319 ;; Hardware stack levels required when called:    6
 10320 ;; This function calls:
 10321 ;;		Nothing
 10322 ;; This function is called by:
 10323 ;;		_utoa
 10324 ;; This function uses a reentrant model
 10325 ;;
 10326                           
 10327                           	psect	text43
 10328  016630                     __ptext43:
 10329                           	opt callstack 0
 10330  016630                     ___lodiv:
 10331                           	opt callstack 0
 10332                           
 10333                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 10334  016630  0E09               	movlw	9
 10335  016632  26E1               	addwf	fsr1l,f,c
 10336  016634  0E00               	movlw	0
 10337  016636  22E2               	addwfc	fsr1h,f,c
 10338                           
 10339                           ;stkvar	_quotient @ sp[(-9)+0]
 10340                           
 10341                           ;incstack = 0
 10342  016638  0E07               	movlw	7
 10343  01663A  6E32               	movwf	btemp^0,c
 10344  01663C  0EF7               	movlw	-9
 10345  01663E                     u6551:
 10346  01663E  6AE3               	clrf	plusw1,c
 10347  016640  2AE8               	incf	wreg,f,c
 10348  016642  0632               	decf	btemp^0,f,c
 10349  016644  E2FC               	bc	u6551
 10350                           
 10351                           ;stkvar	_divisor @ sp[(-9)+-16]
 10352  016646  0EE7               	movlw	-25
 10353  016648  50E3               	movf	plusw1,w,c
 10354  01664A  E116               	bnz	u6560
 10355  01664C  0EE8               	movlw	-24
 10356  01664E  50E3               	movf	plusw1,w,c
 10357  016650  E113               	bnz	u6560
 10358  016652  0EE9               	movlw	-23
 10359  016654  50E3               	movf	plusw1,w,c
 10360  016656  E110               	bnz	u6560
 10361  016658  0EEA               	movlw	-22
 10362  01665A  50E3               	movf	plusw1,w,c
 10363  01665C  E10D               	bnz	u6560
 10364  01665E  0EEB               	movlw	-21
 10365  016660  50E3               	movf	plusw1,w,c
 10366  016662  E10A               	bnz	u6560
 10367  016664  0EEC               	movlw	-20
 10368  016666  50E3               	movf	plusw1,w,c
 10369  016668  E107               	bnz	u6560
 10370  01666A  0EED               	movlw	-19
 10371  01666C  50E3               	movf	plusw1,w,c
 10372  01666E  E104               	bnz	u6560
 10373  016670  0EEE               	movlw	-18
 10374  016672  50E3               	movf	plusw1,w,c
 10375  016674  B4D8               	btfsc	status,2,c
 10376  016676  D088               	goto	u6590
 10377  016678                     u6560:
 10378                           
 10379                           ;stkvar	_counter @ sp[(-9)+8]
 10380  016678  0EFF               	movlw	-1
 10381  01667A  6AE3               	clrf	plusw1,c
 10382  01667C  D012               	goto	L10
 10383  01667E                     l7169:
 10384                           
 10385                           ;stkvar	_divisor @ sp[(-9)+-16]
 10386  01667E  90D8               	bcf	status,0,c
 10387  016680  0EE7               	movlw	-25
 10388  016682  36E3               	rlcf	plusw1,f,c
 10389  016684  0EE8               	movlw	-24
 10390  016686  36E3               	rlcf	plusw1,f,c
 10391  016688  0EE9               	movlw	-23
 10392  01668A  36E3               	rlcf	plusw1,f,c
 10393  01668C  0EEA               	movlw	-22
 10394  01668E  36E3               	rlcf	plusw1,f,c
 10395  016690  0EEB               	movlw	-21
 10396  016692  36E3               	rlcf	plusw1,f,c
 10397  016694  0EEC               	movlw	-20
 10398  016696  36E3               	rlcf	plusw1,f,c
 10399  016698  0EED               	movlw	-19
 10400  01669A  36E3               	rlcf	plusw1,f,c
 10401  01669C  0EEE               	movlw	-18
 10402  01669E  36E3               	rlcf	plusw1,f,c
 10403                           
 10404                           ;stkvar	_counter @ sp[(-9)+8]
 10405  0166A0  0EFF               	movlw	-1
 10406  0166A2                     L10:
 10407  0166A2  2AE3               	incf	plusw1,f,c
 10408                           
 10409                           ;stkvar	_divisor @ sp[(-9)+-16]
 10410  0166A4  0EEE               	movlw	-18
 10411  0166A6  AEE3               	btfss	plusw1,7,c
 10412  0166A8  D7EA               	goto	l7169
 10413  0166AA                     u6570:
 10414                           
 10415                           ;stkvar	_quotient @ sp[(-9)+0]
 10416  0166AA  90D8               	bcf	status,0,c
 10417  0166AC  0EF7               	movlw	-9
 10418  0166AE  36E3               	rlcf	plusw1,f,c
 10419  0166B0  0EF8               	movlw	-8
 10420  0166B2  36E3               	rlcf	plusw1,f,c
 10421  0166B4  0EF9               	movlw	-7
 10422  0166B6  36E3               	rlcf	plusw1,f,c
 10423  0166B8  0EFA               	movlw	-6
 10424  0166BA  36E3               	rlcf	plusw1,f,c
 10425  0166BC  0EFB               	movlw	-5
 10426  0166BE  36E3               	rlcf	plusw1,f,c
 10427  0166C0  0EFC               	movlw	-4
 10428  0166C2  36E3               	rlcf	plusw1,f,c
 10429  0166C4  0EFD               	movlw	-3
 10430  0166C6  36E3               	rlcf	plusw1,f,c
 10431  0166C8  0EFE               	movlw	-2
 10432  0166CA  36E3               	rlcf	plusw1,f,c
 10433                           
 10434                           ;stkvar	_divisor @ sp[(-9)+-16]
 10435                           ;stkvar	_dividend @ sp[(-9)+-8]
 10436  0166CC  50E1               	movf	fsr1l,w,c
 10437  0166CE  0FEF               	addlw	-17
 10438  0166D0  6ED9               	movwf	fsr2l,c
 10439  0166D2  50E2               	movf	fsr1h,w,c
 10440  0166D4  6EDA               	movwf	fsr2h,c
 10441  0166D6  0EFF               	movlw	255
 10442  0166D8  22DA               	addwfc	fsr2h,f,c
 10443  0166DA  0EE7               	movlw	-25
 10444  0166DC  50E3               	movf	plusw1,w,c
 10445  0166DE  5CDE               	subwf	postinc2,w,c
 10446  0166E0  0EE8               	movlw	-24
 10447  0166E2  50E3               	movf	plusw1,w,c
 10448  0166E4  58DE               	subwfb	postinc2,w,c
 10449  0166E6  0EE9               	movlw	-23
 10450  0166E8  50E3               	movf	plusw1,w,c
 10451  0166EA  58DE               	subwfb	postinc2,w,c
 10452  0166EC  0EEA               	movlw	-22
 10453  0166EE  50E3               	movf	plusw1,w,c
 10454  0166F0  58DE               	subwfb	postinc2,w,c
 10455  0166F2  0EEB               	movlw	-21
 10456  0166F4  50E3               	movf	plusw1,w,c
 10457  0166F6  58DE               	subwfb	postinc2,w,c
 10458  0166F8  0EEC               	movlw	-20
 10459  0166FA  50E3               	movf	plusw1,w,c
 10460  0166FC  58DE               	subwfb	postinc2,w,c
 10461  0166FE  0EED               	movlw	-19
 10462  016700  50E3               	movf	plusw1,w,c
 10463  016702  58DE               	subwfb	postinc2,w,c
 10464  016704  0EEE               	movlw	-18
 10465  016706  50E3               	movf	plusw1,w,c
 10466  016708  58DE               	subwfb	postinc2,w,c
 10467  01670A  A0D8               	btfss	status,0,c
 10468  01670C  D021               	goto	l7181
 10469                           
 10470                           ;stkvar	_divisor @ sp[(-9)+-16]
 10471                           ;stkvar	_dividend @ sp[(-9)+-8]
 10472  01670E  50E1               	movf	fsr1l,w,c
 10473  016710  0FEF               	addlw	-17
 10474  016712  6ED9               	movwf	fsr2l,c
 10475  016714  50E2               	movf	fsr1h,w,c
 10476  016716  6EDA               	movwf	fsr2h,c
 10477  016718  0EFF               	movlw	255
 10478  01671A  22DA               	addwfc	fsr2h,f,c
 10479  01671C  0EE7               	movlw	-25
 10480  01671E  50E3               	movf	plusw1,w,c
 10481  016720  5EDE               	subwf	postinc2,f,c
 10482  016722  0EE8               	movlw	-24
 10483  016724  50E3               	movf	plusw1,w,c
 10484  016726  5ADE               	subwfb	postinc2,f,c
 10485  016728  0EE9               	movlw	-23
 10486  01672A  50E3               	movf	plusw1,w,c
 10487  01672C  5ADE               	subwfb	postinc2,f,c
 10488  01672E  0EEA               	movlw	-22
 10489  016730  50E3               	movf	plusw1,w,c
 10490  016732  5ADE               	subwfb	postinc2,f,c
 10491  016734  0EEB               	movlw	-21
 10492  016736  50E3               	movf	plusw1,w,c
 10493  016738  5ADE               	subwfb	postinc2,f,c
 10494  01673A  0EEC               	movlw	-20
 10495  01673C  50E3               	movf	plusw1,w,c
 10496  01673E  5ADE               	subwfb	postinc2,f,c
 10497  016740  0EED               	movlw	-19
 10498  016742  50E3               	movf	plusw1,w,c
 10499  016744  5ADE               	subwfb	postinc2,f,c
 10500  016746  0EEE               	movlw	-18
 10501  016748  50E3               	movf	plusw1,w,c
 10502  01674A  5ADE               	subwfb	postinc2,f,c
 10503                           
 10504                           ;stkvar	_quotient @ sp[(-9)+0]
 10505  01674C  0EF7               	movlw	-9
 10506  01674E  80E3               	bsf	plusw1,0,c
 10507  016750                     l7181:
 10508                           
 10509                           ;stkvar	_divisor @ sp[(-9)+-16]
 10510  016750  90D8               	bcf	status,0,c
 10511  016752  0EEE               	movlw	-18
 10512  016754  32E3               	rrcf	plusw1,f,c
 10513  016756  0EED               	movlw	-19
 10514  016758  32E3               	rrcf	plusw1,f,c
 10515  01675A  0EEC               	movlw	-20
 10516  01675C  32E3               	rrcf	plusw1,f,c
 10517  01675E  0EEB               	movlw	-21
 10518  016760  32E3               	rrcf	plusw1,f,c
 10519  016762  0EEA               	movlw	-22
 10520  016764  32E3               	rrcf	plusw1,f,c
 10521  016766  0EE9               	movlw	-23
 10522  016768  32E3               	rrcf	plusw1,f,c
 10523  01676A  0EE8               	movlw	-24
 10524  01676C  32E3               	rrcf	plusw1,f,c
 10525  01676E  0EE7               	movlw	-25
 10526  016770  32E3               	rrcf	plusw1,f,c
 10527                           
 10528                           ;stkvar	_counter @ sp[(-9)+8]
 10529  016772  0EFF               	movlw	-1
 10530  016774  50E3               	movf	plusw1,w,c
 10531  016776  6E32               	movwf	btemp^0,c
 10532  016778  0E01               	movlw	1
 10533  01677A  5E32               	subwf	btemp^0,f,c
 10534  01677C  0EFF               	movlw	-1
 10535  01677E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10536  016784  A4D8               	btfss	status,2,c
 10537  016786  D791               	goto	u6570
 10538  016788                     u6590:
 10539                           
 10540                           ;stkvar	_quotient @ sp[(-9)+0]
 10541  016788  0EF7               	movlw	247
 10542  01678A  24E1               	addwf	fsr1l,w,c
 10543  01678C  6ED9               	movwf	fsr2l,c
 10544  01678E  0EFF               	movlw	255
 10545  016790  20E2               	addwfc	fsr1h,w,c
 10546  016792  6EDA               	movwf	fsr2h,c
 10547                           
 10548                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 10549  016794  0E08               	movlw	8
 10550  016796  6E32               	movwf	btemp^0,c
 10551  016798  0EEF               	movlw	-17
 10552  01679A                     us660999:
 10553  01679A  006F FF7B FFE3     	movff	postinc2,plusw1
 10554  0167A0  28E8               	incf	wreg,w,c
 10555  0167A2  2E32               	decfsz	btemp^0,f,c
 10556  0167A4  D7FA               	bra	us660999
 10557                           
 10558                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 10559  0167A6  0EF7               	movlw	247
 10560  0167A8  26E1               	addwf	fsr1l,f,c
 10561  0167AA  0EFF               	movlw	255
 10562  0167AC  22E2               	addwfc	fsr1h,f,c
 10563  0167AE  0012               	return		;funcret
 10564  0167B0                     __end_of___lodiv:
 10565                           	opt callstack 0
 10566                           
 10567 ;; *************** function _strncmp *****************
 10568 ;; Defined at:
 10569 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 10570 ;; Parameters:    Size  Location     Type
 10571 ;;  _l              2  [STACK] PTR const unsigned char 
 10572 ;;		 -> ct(3), STR_32(3), STR_31(3), STR_30(19), 
 10573 ;;		 -> STR_29(19), STR_28(19), STR_27(19), STR_26(19), 
 10574 ;;		 -> STR_25(19), STR_24(24), STR_23(15), STR_22(15), 
 10575 ;;		 -> STR_21(15), STR_20(10), STR_19(10), STR_18(19), 
 10576 ;;		 -> STR_17(19), STR_14(3), STR_13(3), STR_12(3), 
 10577 ;;		 -> STR_11(18), STR_10(14), STR_9(14), STR_8(17), 
 10578 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
 10579 ;;		 -> STR_1(17), 
 10580 ;;  _r              2  [STACK] PTR const unsigned char 
 10581 ;;		 -> STR_67(3), STR_63(3), STR_58(3), STR_53(3), 
 10582 ;;		 -> STR_48(3), STR_44(3), 
 10583 ;;  n               2  [STACK] unsigned int 
 10584 ;; Auto vars:     Size  Location     Type
 10585 ;;  r               2  [STACK] PTR const unsigned char 
 10586 ;;		 -> STR_67(3), STR_63(3), STR_58(3), STR_53(3), 
 10587 ;;		 -> STR_48(3), STR_44(3), 
 10588 ;;  l               2  [STACK] PTR const unsigned char 
 10589 ;;		 -> ct(3), STR_32(3), STR_31(3), STR_30(19), 
 10590 ;;		 -> STR_29(19), STR_28(19), STR_27(19), STR_26(19), 
 10591 ;;		 -> STR_25(19), STR_24(24), STR_23(15), STR_22(15), 
 10592 ;;		 -> STR_21(15), STR_20(10), STR_19(10), STR_18(19), 
 10593 ;;		 -> STR_17(19), STR_14(3), STR_13(3), STR_12(3), 
 10594 ;;		 -> STR_11(18), STR_10(14), STR_9(14), STR_8(17), 
 10595 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
 10596 ;;		 -> STR_1(17), 
 10597 ;; Return value:  Size  Location     Type
 10598 ;;                  2  [STACK] int 
 10599 ;; Registers used:
 10600 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 10601 ;; Tracked objects:
 10602 ;;		On entry : 0/5
 10603 ;;		On exit  : 0/0
 10604 ;;		Unchanged: 0/0
 10605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10610 ;;Total ram usage:        0 bytes
 10611 ;; Hardware stack levels used:    1
 10612 ;; Hardware stack levels required when called:    6
 10613 ;; This function calls:
 10614 ;;		Nothing
 10615 ;; This function is called by:
 10616 ;;		_vfpfcnvrt
 10617 ;; This function uses a reentrant model
 10618 ;;
 10619                           
 10620                           	psect	text44
 10621  015CA4                     __ptext44:
 10622                           	opt callstack 0
 10623  015CA4                     _strncmp:
 10624                           	opt callstack 0
 10625                           
 10626                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10627  015CA4  52E6               	movf	postinc1,f,c
 10628  015CA6  52E6               	movf	postinc1,f,c
 10629  015CA8  52E6               	movf	postinc1,f,c
 10630  015CAA  52E6               	movf	postinc1,f,c
 10631                           
 10632                           ;stkvar	__l @ sp[(-4)+-2]
 10633                           
 10634                           ;incstack = 0
 10635  015CAC  0EFA               	movlw	-6
 10636  015CAE  006F FF8C  F03C    	movff	plusw1,btemp+10
 10637  015CB4  0EFB               	movlw	-5
 10638  015CB6  006F FF8C  F03D    	movff	plusw1,btemp+11
 10639                           
 10640                           ;stkvar	_l @ sp[(-4)+2]
 10641  015CBC  0EFF               	movlw	-1
 10642  015CBE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10643  015CC4  0EFE               	movlw	-2
 10644  015CC6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10645                           
 10646                           ;stkvar	__r @ sp[(-4)+-4]
 10647  015CCC  0EF8               	movlw	-8
 10648  015CCE  006F FF8C  F03C    	movff	plusw1,btemp+10
 10649  015CD4  0EF9               	movlw	-7
 10650  015CD6  006F FF8C  F03D    	movff	plusw1,btemp+11
 10651                           
 10652                           ;stkvar	_r @ sp[(-4)+0]
 10653  015CDC  0EFD               	movlw	-3
 10654  015CDE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10655  015CE4  0EFC               	movlw	-4
 10656  015CE6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10657                           
 10658                           ;stkvar	_n @ sp[(-4)+-6]
 10659  015CEC  0EF6               	movlw	-10
 10660  015CEE  006F FF8C  F032    	movff	plusw1,btemp
 10661  015CF4  0E01               	movlw	1
 10662  015CF6  5E32               	subwf	btemp^0,f,c
 10663  015CF8  0EF6               	movlw	-10
 10664  015CFA  0060  F0CB  FFE3   	movff	btemp,plusw1
 10665  015D00  0EF7               	movlw	-9
 10666  015D02  006F FF8C  F032    	movff	plusw1,btemp
 10667  015D08  0E00               	movlw	0
 10668  015D0A  5A32               	subwfb	btemp^0,f,c
 10669  015D0C  0EF7               	movlw	-9
 10670  015D0E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10671  015D14  0EF6               	movlw	-10
 10672  015D16  28E3               	incf	plusw1,w,c
 10673  015D18  E13F               	bnz	l7825
 10674  015D1A  0EF7               	movlw	-9
 10675  015D1C  28E3               	incf	plusw1,w,c
 10676  015D1E  A4D8               	btfss	status,2,c
 10677  015D20  D03B               	goto	l7825
 10678  015D22  0E00               	movlw	0
 10679  015D24  6E32               	movwf	btemp^0,c
 10680  015D26  0E00               	movlw	0
 10681  015D28  6E33               	movwf	(btemp+1)^0,c
 10682  015D2A  D0C7               	goto	l2874
 10683  015D2C                     l7823:
 10684                           
 10685                           ;stkvar	_l @ sp[(-4)+2]
 10686  015D2C  0EFE               	movlw	-2
 10687  015D2E  50E3               	movf	plusw1,w,c
 10688  015D30  0F01               	addlw	1
 10689  015D32  6E32               	movwf	btemp^0,c
 10690  015D34  0EFE               	movlw	-2
 10691  015D36  0060  F0CB  FFE3   	movff	btemp,plusw1
 10692  015D3C  6A32               	clrf	btemp^0,c
 10693  015D3E  0EFF               	movlw	-1
 10694  015D40  50E3               	movf	plusw1,w,c
 10695  015D42  2032               	addwfc	btemp^0,w,c
 10696  015D44  6E32               	movwf	btemp^0,c
 10697  015D46  0EFF               	movlw	-1
 10698  015D48  0060  F0CB  FFE3   	movff	btemp,plusw1
 10699                           
 10700                           ;stkvar	_r @ sp[(-4)+0]
 10701  015D4E  0EFC               	movlw	-4
 10702  015D50  50E3               	movf	plusw1,w,c
 10703  015D52  0F01               	addlw	1
 10704  015D54  6E32               	movwf	btemp^0,c
 10705  015D56  0EFC               	movlw	-4
 10706  015D58  0060  F0CB  FFE3   	movff	btemp,plusw1
 10707  015D5E  6A32               	clrf	btemp^0,c
 10708  015D60  0EFD               	movlw	-3
 10709  015D62  50E3               	movf	plusw1,w,c
 10710  015D64  2032               	addwfc	btemp^0,w,c
 10711  015D66  6E32               	movwf	btemp^0,c
 10712  015D68  0EFD               	movlw	-3
 10713  015D6A  0060  F0CB  FFE3   	movff	btemp,plusw1
 10714                           
 10715                           ;stkvar	_n @ sp[(-4)+-6]
 10716  015D70  0EF6               	movlw	-10
 10717  015D72  006F FF8C  F032    	movff	plusw1,btemp
 10718  015D78  0E01               	movlw	1
 10719  015D7A  5E32               	subwf	btemp^0,f,c
 10720  015D7C  0EF6               	movlw	-10
 10721  015D7E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10722  015D84  0EF7               	movlw	-9
 10723  015D86  006F FF8C  F032    	movff	plusw1,btemp
 10724  015D8C  0E00               	movlw	0
 10725  015D8E  5A32               	subwfb	btemp^0,f,c
 10726  015D90  0EF7               	movlw	-9
 10727  015D92  0060  F0CB  FFE3   	movff	btemp,plusw1
 10728  015D98                     l7825:
 10729                           
 10730                           ;stkvar	_l @ sp[(-4)+2]
 10731  015D98  0EFE               	movlw	-2
 10732  015D9A  006F FF8F FFF6     	movff	plusw1,tblptrl
 10733  015DA0  0EFF               	movlw	-1
 10734  015DA2  006F FF8F FFF7     	movff	plusw1,tblptrh
 10735  015DA8  0E00               	movlw	low (__mediumconst shr (0+16))
 10736  015DAA  6EF8               	movwf	tblptru,c
 10737  015DAC  0E1F               	movlw	(high __ramtop+-1)
 10738  015DAE  64F7               	cpfsgt	tblptrh,c
 10739  015DB0  D003               	bra	u7827
 10740  015DB2  0008               	tblrd		*
 10741  015DB4  50F5               	movf	tablat,w,c
 10742  015DB6  D007               	bra	u7820
 10743  015DB8                     u7827:
 10744  015DB8  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10745  015DBE  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10746  015DC4  50EF               	movf	indf0,w,c
 10747  015DC6                     u7820:
 10748  015DC6  0900               	iorlw	0
 10749  015DC8  B4D8               	btfsc	status,2,c
 10750  015DCA  D04A               	goto	u7860
 10751                           
 10752                           ;stkvar	_r @ sp[(-4)+0]
 10753  015DCC  50E1               	movf	fsr1l,w,c
 10754  015DCE  0FFC               	addlw	-4
 10755  015DD0  6ED9               	movwf	fsr2l,c
 10756  015DD2  50E2               	movf	fsr1h,w,c
 10757  015DD4  6EDA               	movwf	fsr2h,c
 10758  015DD6  0EFF               	movlw	255
 10759  015DD8  22DA               	addwfc	fsr2h,f,c
 10760  015DDA  006F FF7B FFF6     	movff	postinc2,tblptrl
 10761  015DE0  006F FF77 FFF7     	movff	postdec2,tblptrh
 10762  015DE6                     	if	0	;tblptru may be non-zero
 10763  015DE6                     	endif
 10764  015DE6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10765  015DE6  0E00               	movlw	low (__mediumconst shr (0+16))
 10766  015DE8  6EF8               	movwf	tblptru,c
 10767  015DEA                     	endif
 10768  015DEA  0008               	tblrd		*
 10769  015DEC  50F5               	movf	tablat,w,c
 10770  015DEE  0900               	iorlw	0
 10771  015DF0  B4D8               	btfsc	status,2,c
 10772  015DF2  D036               	goto	u7860
 10773                           
 10774                           ;stkvar	_n @ sp[(-4)+-6]
 10775  015DF4  0EF6               	movlw	-10
 10776  015DF6  006F FF8C  F032    	movff	plusw1,btemp
 10777  015DFC  0EF7               	movlw	-9
 10778  015DFE  50E3               	movf	plusw1,w,c
 10779  015E00  1032               	iorwf	btemp^0,w,c
 10780  015E02  B4D8               	btfsc	status,2,c
 10781  015E04  D02D               	goto	u7860
 10782                           
 10783                           ;stkvar	_r @ sp[(-4)+0]
 10784  015E06  50E1               	movf	fsr1l,w,c
 10785  015E08  0FFC               	addlw	-4
 10786  015E0A  6ED9               	movwf	fsr2l,c
 10787  015E0C  50E2               	movf	fsr1h,w,c
 10788  015E0E  6EDA               	movwf	fsr2h,c
 10789  015E10  0EFF               	movlw	255
 10790  015E12  22DA               	addwfc	fsr2h,f,c
 10791  015E14  006F FF7B FFF6     	movff	postinc2,tblptrl
 10792  015E1A  006F FF77 FFF7     	movff	postdec2,tblptrh
 10793  015E20                     	if	0	;tblptru may be non-zero
 10794  015E20                     	endif
 10795  015E20                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10796  015E20  0E00               	movlw	low (__mediumconst shr (0+16))
 10797  015E22  6EF8               	movwf	tblptru,c
 10798  015E24                     	endif
 10799  015E24  0008               	tblrd		*
 10800  015E26  006F FFD4  F03D    	movff	tablat,btemp+11
 10801                           
 10802                           ;stkvar	_l @ sp[(-4)+2]
 10803  015E2C  0EFE               	movlw	-2
 10804  015E2E  006F FF8F FFF6     	movff	plusw1,tblptrl
 10805  015E34  0EFF               	movlw	-1
 10806  015E36  006F FF8F FFF7     	movff	plusw1,tblptrh
 10807  015E3C  0E00               	movlw	low (__mediumconst shr (0+16))
 10808  015E3E  6EF8               	movwf	tblptru,c
 10809  015E40  0E1F               	movlw	(high __ramtop+-1)
 10810  015E42  64F7               	cpfsgt	tblptrh,c
 10811  015E44  D003               	bra	u7867
 10812  015E46  0008               	tblrd		*
 10813  015E48  50F5               	movf	tablat,w,c
 10814  015E4A  D007               	bra	u7865
 10815  015E4C                     u7867:
 10816  015E4C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10817  015E52  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10818  015E58  50EF               	movf	indf0,w,c
 10819  015E5A                     u7865:
 10820  015E5A  183D               	xorwf	(btemp+11)^0,w,c
 10821  015E5C  B4D8               	btfsc	status,2,c
 10822  015E5E  D766               	goto	l7823
 10823  015E60                     u7860:
 10824                           
 10825                           ;stkvar	_l @ sp[(-4)+2]
 10826  015E60  0EFE               	movlw	-2
 10827  015E62  006F FF8F FFF6     	movff	plusw1,tblptrl
 10828  015E68  0EFF               	movlw	-1
 10829  015E6A  006F FF8F FFF7     	movff	plusw1,tblptrh
 10830  015E70  0E00               	movlw	low (__mediumconst shr (0+16))
 10831  015E72  6EF8               	movwf	tblptru,c
 10832  015E74  0E1F               	movlw	(high __ramtop+-1)
 10833  015E76  64F7               	cpfsgt	tblptrh,c
 10834  015E78  D003               	bra	u7877
 10835  015E7A  0008               	tblrd		*
 10836  015E7C  50F5               	movf	tablat,w,c
 10837  015E7E  D007               	bra	u7870
 10838  015E80                     u7877:
 10839  015E80  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10840  015E86  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10841  015E8C  50EF               	movf	indf0,w,c
 10842  015E8E                     u7870:
 10843  015E8E  6E32               	movwf	btemp^0,c
 10844  015E90  6A33               	clrf	(btemp+1)^0,c
 10845                           
 10846                           ;stkvar	_r @ sp[(-4)+0]
 10847  015E92  50E1               	movf	fsr1l,w,c
 10848  015E94  0FFC               	addlw	-4
 10849  015E96  6ED9               	movwf	fsr2l,c
 10850  015E98  50E2               	movf	fsr1h,w,c
 10851  015E9A  6EDA               	movwf	fsr2h,c
 10852  015E9C  0EFF               	movlw	255
 10853  015E9E  22DA               	addwfc	fsr2h,f,c
 10854  015EA0  006F FF7B FFF6     	movff	postinc2,tblptrl
 10855  015EA6  006F FF77 FFF7     	movff	postdec2,tblptrh
 10856  015EAC                     	if	0	;tblptru may be non-zero
 10857  015EAC                     	endif
 10858  015EAC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10859  015EAC  0E00               	movlw	low (__mediumconst shr (0+16))
 10860  015EAE  6EF8               	movwf	tblptru,c
 10861  015EB0                     	endif
 10862  015EB0  0008               	tblrd		*
 10863  015EB2  50F5               	movf	tablat,w,c
 10864  015EB4  5E32               	subwf	btemp^0,f,c
 10865  015EB6  0E00               	movlw	0
 10866  015EB8  5A33               	subwfb	(btemp+1)^0,f,c
 10867  015EBA                     l2874:
 10868                           
 10869                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 10870  015EBA  0EF6               	movlw	246
 10871  015EBC  26E1               	addwf	fsr1l,f,c
 10872  015EBE  0EFF               	movlw	255
 10873  015EC0  22E2               	addwfc	fsr1h,f,c
 10874  015EC2  0012               	return		;funcret
 10875  015EC4                     __end_of_strncmp:
 10876                           	opt callstack 0
 10877                           
 10878 ;; *************** function _stoa *****************
 10879 ;; Defined at:
 10880 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10881 ;; Parameters:    Size  Location     Type
 10882 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10883 ;;		 -> f(6), NULL(0), 
 10884 ;;  s               2  [STACK] PTR unsigned char 
 10885 ;;		 -> ?_printf(2), ?_sprintf(2), STR_16(9), STR_15(12), 
 10886 ;;		 -> D.lcd(216), D(218), T(144), STR_7(5), 
 10887 ;;		 -> STR_3(5), V(227), 
 10888 ;; Auto vars:     Size  Location     Type
 10889 ;;  nuls            7  [STACK] unsigned char [7]
 10890 ;;  l               2  [STACK] int 
 10891 ;;  p               2  [STACK] int 
 10892 ;;  cp              2  [STACK] PTR unsigned char 
 10893 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_16(9), 
 10894 ;;		 -> STR_15(12), D.lcd(216), D(218), T(144), 
 10895 ;;		 -> STR_7(5), STR_3(5), V(227), 
 10896 ;;  w               2  [STACK] int 
 10897 ;;  i               2  [STACK] int 
 10898 ;; Return value:  Size  Location     Type
 10899 ;;                  2  [STACK] int 
 10900 ;; Registers used:
 10901 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 10902 ;; Tracked objects:
 10903 ;;		On entry : 0/5
 10904 ;;		On exit  : 0/0
 10905 ;;		Unchanged: 0/0
 10906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10911 ;;Total ram usage:        0 bytes
 10912 ;; Hardware stack levels used:    1
 10913 ;; Hardware stack levels required when called:    9
 10914 ;; This function calls:
 10915 ;;		_fputc
 10916 ;;		_strlen
 10917 ;; This function is called by:
 10918 ;;		_vfpfcnvrt
 10919 ;; This function uses a reentrant model
 10920 ;;
 10921                           
 10922                           	psect	text45
 10923  0152B2                     __ptext45:
 10924                           	opt callstack 0
 10925  0152B2                     _stoa:
 10926                           	opt callstack 0
 10927                           
 10928                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10929  0152B2  0E11               	movlw	17
 10930  0152B4  26E1               	addwf	fsr1l,f,c
 10931  0152B6  0E00               	movlw	0
 10932  0152B8  22E2               	addwfc	fsr1h,f,c
 10933                           
 10934                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 10935                           
 10936                           ;incstack = 0
 10937  0152BA  EE20  F0CE         	lfsr	2,stoa@F1166
 10938                           
 10939                           ;stkvar	_nuls @ sp[(-17)+0]
 10940  0152BE  0E07               	movlw	7
 10941  0152C0  6E32               	movwf	btemp^0,c
 10942  0152C2  0EEF               	movlw	-17
 10943  0152C4                     us1007999:
 10944  0152C4  006F FF7B FFE3     	movff	postinc2,plusw1
 10945  0152CA  28E8               	incf	wreg,w,c
 10946  0152CC  2E32               	decfsz	btemp^0,f,c
 10947  0152CE  D7FA               	bra	us1007999
 10948                           
 10949                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 10950                           ;stkvar	_s @ sp[(-17)+-4]
 10951  0152D0  0EEB               	movlw	-21
 10952  0152D2  006F FF8C  F03C    	movff	plusw1,btemp+10
 10953  0152D8  0EEC               	movlw	-20
 10954  0152DA  006F FF8C  F03D    	movff	plusw1,btemp+11
 10955                           
 10956                           ;stkvar	_cp @ sp[(-17)+11]
 10957  0152E0  0EFB               	movlw	-5
 10958  0152E2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10959  0152E8  0EFA               	movlw	-6
 10960  0152EA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10961                           
 10962                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 10963                           ;stkvar	_cp @ sp[(-17)+11]
 10964  0152F0  0EFA               	movlw	-6
 10965  0152F2  006F FF8C  F032    	movff	plusw1,btemp
 10966  0152F8  0EFB               	movlw	-5
 10967  0152FA  50E3               	movf	plusw1,w,c
 10968  0152FC  1032               	iorwf	btemp^0,w,c
 10969  0152FE  A4D8               	btfss	status,2,c
 10970  015300  D00E               	goto	l9869
 10971                           
 10972                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 10973                           ;stkvar	_nuls @ sp[(-17)+0]
 10974  015302  0EEF               	movlw	239
 10975  015304  24E1               	addwf	fsr1l,w,c
 10976  015306  6E3C               	movwf	(btemp+10)^0,c
 10977  015308  0EFF               	movlw	255
 10978  01530A  20E2               	addwfc	fsr1h,w,c
 10979  01530C  6E3D               	movwf	(btemp+11)^0,c
 10980                           
 10981                           ;stkvar	_cp @ sp[(-17)+11]
 10982  01530E  0EFB               	movlw	-5
 10983  015310  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10984  015316  0EFA               	movlw	-6
 10985  015318  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10986  01531E                     l9869:
 10987                           
 10988                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 10989                           ;stkvar	_cp @ sp[(-17)+11]
 10990  01531E  0EFA               	movlw	-6
 10991  015320  006F FF8F FFE6     	movff	plusw1,postinc1
 10992  015326  006F FF8F FFE6     	movff	plusw1,postinc1
 10993  01532C  EC85  F0BD         	call	_strlen	;wreg free
 10994                           
 10995                           ;stkvar	_l @ sp[(-17)+7]
 10996  015330  0EF6               	movlw	-10
 10997  015332  0060  F0CB  FFE3   	movff	btemp,plusw1
 10998  015338  0EF7               	movlw	-9
 10999  01533A  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11000                           
 11001                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 11002                           ;stkvar	_p @ sp[(-17)+9]
 11003  015340  0EF8               	movlw	-8
 11004  015342  0060  F077  FFE3   	movff	_prec,plusw1
 11005  015348  0EF9               	movlw	-7
 11006  01534A  0060  F07B  FFE3   	movff	_prec+1,plusw1
 11007                           
 11008                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 11009                           ;stkvar	_p @ sp[(-17)+9]
 11010  015350  0EF9               	movlw	-7
 11011  015352  BEE3               	btfsc	plusw1,7,c
 11012  015354  D023               	goto	l1925
 11013                           
 11014                           ;stkvar	_l @ sp[(-17)+7]
 11015                           ;stkvar	_p @ sp[(-17)+9]
 11016  015356  50E1               	movf	fsr1l,w,c
 11017  015358  0FF8               	addlw	-8
 11018  01535A  6ED9               	movwf	fsr2l,c
 11019  01535C  50E2               	movf	fsr1h,w,c
 11020  01535E  6EDA               	movwf	fsr2h,c
 11021  015360  0EFF               	movlw	255
 11022  015362  22DA               	addwfc	fsr2h,f,c
 11023  015364  0EF6               	movlw	-10
 11024  015366  50E3               	movf	plusw1,w,c
 11025  015368  5CDE               	subwf	postinc2,w,c
 11026  01536A  50DE               	movf	postinc2,w,c
 11027  01536C  0A80               	xorlw	128
 11028  01536E  6E32               	movwf	btemp^0,c
 11029  015370  0EF7               	movlw	-9
 11030  015372  50E3               	movf	plusw1,w,c
 11031  015374  0A80               	xorlw	128
 11032  015376  5832               	subwfb	btemp^0,w,c
 11033  015378  B0D8               	btfsc	status,0,c
 11034  01537A  D010               	goto	l1925
 11035                           
 11036                           ;stkvar	_p @ sp[(-17)+9]
 11037                           ;stkvar	_l @ sp[(-17)+7]
 11038  01537C  0EF8               	movlw	-8
 11039  01537E  006F FF8C  F032    	movff	plusw1,btemp
 11040  015384  0EF6               	movlw	-10
 11041  015386  0060  F0CB  FFE3   	movff	btemp,plusw1
 11042  01538C  0EF9               	movlw	-7
 11043  01538E  006F FF8C  F032    	movff	plusw1,btemp
 11044  015394  0EF7               	movlw	-9
 11045  015396  0060  F0CB  FFE3   	movff	btemp,plusw1
 11046  01539C                     l1925:
 11047                           
 11048                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 11049                           ;stkvar	_l @ sp[(-17)+7]
 11050                           ;stkvar	_p @ sp[(-17)+9]
 11051  01539C  0EF6               	movlw	-10
 11052  01539E  006F FF8C  F032    	movff	plusw1,btemp
 11053  0153A4  0EF8               	movlw	-8
 11054  0153A6  0060  F0CB  FFE3   	movff	btemp,plusw1
 11055  0153AC  0EF7               	movlw	-9
 11056  0153AE  006F FF8C  F032    	movff	plusw1,btemp
 11057  0153B4  0EF9               	movlw	-7
 11058  0153B6  0060  F0CB  FFE3   	movff	btemp,plusw1
 11059                           
 11060                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 11061                           ;stkvar	_w @ sp[(-17)+13]
 11062  0153BC  0EFC               	movlw	-4
 11063  0153BE  0060  F06F  FFE3   	movff	_width,plusw1
 11064  0153C4  0EFD               	movlw	-3
 11065  0153C6  0060  F073  FFE3   	movff	_width+1,plusw1
 11066                           
 11067                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 11068  0153CC  A01F               	btfss	_flags^0,0,c
 11069  0153CE  D01F               	goto	l9889
 11070  0153D0  D031               	goto	u10120
 11071  0153D2                     l9885:
 11072                           
 11073                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 11074                           ;stkvar	_fp @ sp[(-17)+-2]
 11075  0153D2  0EED               	movlw	-19
 11076  0153D4  006F FF8F FFE6     	movff	plusw1,postinc1
 11077  0153DA  006F FF8F FFE6     	movff	plusw1,postinc1
 11078  0153E0  0E20               	movlw	32
 11079  0153E2  6EE6               	movwf	postinc1,c
 11080  0153E4  0E00               	movlw	0
 11081  0153E6  6EE6               	movwf	postinc1,c
 11082  0153E8  ECBF  F0B7         	call	_fputc	;wreg free
 11083                           
 11084                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 11085                           ;stkvar	_l @ sp[(-17)+7]
 11086  0153EC  0EF6               	movlw	-10
 11087  0153EE  50E3               	movf	plusw1,w,c
 11088  0153F0  0F01               	addlw	1
 11089  0153F2  6E32               	movwf	btemp^0,c
 11090  0153F4  0EF6               	movlw	-10
 11091  0153F6  0060  F0CB  FFE3   	movff	btemp,plusw1
 11092  0153FC  6A32               	clrf	btemp^0,c
 11093  0153FE  0EF7               	movlw	-9
 11094  015400  50E3               	movf	plusw1,w,c
 11095  015402  2032               	addwfc	btemp^0,w,c
 11096  015404  6E32               	movwf	btemp^0,c
 11097  015406  0EF7               	movlw	-9
 11098  015408  0060  F0CB  FFE3   	movff	btemp,plusw1
 11099  01540E                     l9889:
 11100                           
 11101                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 11102                           ;stkvar	_w @ sp[(-17)+13]
 11103                           ;stkvar	_l @ sp[(-17)+7]
 11104  01540E  50E1               	movf	fsr1l,w,c
 11105  015410  0FF6               	addlw	-10
 11106  015412  6ED9               	movwf	fsr2l,c
 11107  015414  50E2               	movf	fsr1h,w,c
 11108  015416  6EDA               	movwf	fsr2h,c
 11109  015418  0EFF               	movlw	255
 11110  01541A  22DA               	addwfc	fsr2h,f,c
 11111  01541C  0EFC               	movlw	-4
 11112  01541E  50E3               	movf	plusw1,w,c
 11113  015420  5CDE               	subwf	postinc2,w,c
 11114  015422  50DE               	movf	postinc2,w,c
 11115  015424  0A80               	xorlw	128
 11116  015426  6E32               	movwf	btemp^0,c
 11117  015428  0EFD               	movlw	-3
 11118  01542A  50E3               	movf	plusw1,w,c
 11119  01542C  0A80               	xorlw	128
 11120  01542E  5832               	subwfb	btemp^0,w,c
 11121  015430  A0D8               	btfss	status,0,c
 11122  015432  D7CF               	goto	l9885
 11123  015434                     u10120:
 11124                           
 11125                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 11126                           ;stkvar	_i @ sp[(-17)+15]
 11127  015434  0EFE               	movlw	-2
 11128  015436  6AE3               	clrf	plusw1,c
 11129  015438  0EFF               	movlw	-1
 11130  01543A  6AE3               	clrf	plusw1,c
 11131                           
 11132                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 11133  01543C  D045               	goto	l9899
 11134  01543E                     l9893:
 11135                           
 11136                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 11137                           ;stkvar	_fp @ sp[(-17)+-2]
 11138  01543E  0EED               	movlw	-19
 11139  015440  006F FF8F FFE6     	movff	plusw1,postinc1
 11140  015446  006F FF8F FFE6     	movff	plusw1,postinc1
 11141                           
 11142                           ;stkvar	_cp @ sp[(-19)+11]
 11143  01544C  0EF8               	movlw	-8
 11144  01544E  006F FF8F FFF6     	movff	plusw1,tblptrl
 11145  015454  0EF9               	movlw	-7
 11146  015456  006F FF8F FFF7     	movff	plusw1,tblptrh
 11147  01545C  0E00               	movlw	low (__mediumconst shr (0+16))
 11148  01545E  6EF8               	movwf	tblptru,c
 11149  015460  0E1F               	movlw	(high __ramtop+-1)
 11150  015462  64F7               	cpfsgt	tblptrh,c
 11151  015464  D003               	bra	u10137
 11152  015466  0008               	tblrd		*
 11153  015468  50F5               	movf	tablat,w,c
 11154  01546A  D007               	bra	u10130
 11155  01546C                     u10137:
 11156  01546C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 11157  015472  006F FFDF FFEA     	movff	tblptrh,fsr0h
 11158  015478  50EF               	movf	indf0,w,c
 11159  01547A                     u10130:
 11160  01547A  6EE6               	movwf	postinc1,c
 11161  01547C  0E00               	movlw	0
 11162  01547E  6EE6               	movwf	postinc1,c
 11163  015480  ECBF  F0B7         	call	_fputc	;wreg free
 11164                           
 11165                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 11166                           ;stkvar	_cp @ sp[(-17)+11]
 11167  015484  0EFA               	movlw	-6
 11168  015486  50E3               	movf	plusw1,w,c
 11169  015488  0F01               	addlw	1
 11170  01548A  6E32               	movwf	btemp^0,c
 11171  01548C  0EFA               	movlw	-6
 11172  01548E  0060  F0CB  FFE3   	movff	btemp,plusw1
 11173  015494  6A32               	clrf	btemp^0,c
 11174  015496  0EFB               	movlw	-5
 11175  015498  50E3               	movf	plusw1,w,c
 11176  01549A  2032               	addwfc	btemp^0,w,c
 11177  01549C  6E32               	movwf	btemp^0,c
 11178  01549E  0EFB               	movlw	-5
 11179  0154A0  0060  F0CB  FFE3   	movff	btemp,plusw1
 11180                           
 11181                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 11182                           ;stkvar	_i @ sp[(-17)+15]
 11183  0154A6  0EFE               	movlw	-2
 11184  0154A8  50E3               	movf	plusw1,w,c
 11185  0154AA  0F01               	addlw	1
 11186  0154AC  6E32               	movwf	btemp^0,c
 11187  0154AE  0EFE               	movlw	-2
 11188  0154B0  0060  F0CB  FFE3   	movff	btemp,plusw1
 11189  0154B6  6A32               	clrf	btemp^0,c
 11190  0154B8  0EFF               	movlw	-1
 11191  0154BA  50E3               	movf	plusw1,w,c
 11192  0154BC  2032               	addwfc	btemp^0,w,c
 11193  0154BE  6E32               	movwf	btemp^0,c
 11194  0154C0  0EFF               	movlw	-1
 11195  0154C2  0060  F0CB  FFE3   	movff	btemp,plusw1
 11196  0154C8                     l9899:
 11197                           
 11198                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 11199                           ;stkvar	_p @ sp[(-17)+9]
 11200                           ;stkvar	_i @ sp[(-17)+15]
 11201  0154C8  50E1               	movf	fsr1l,w,c
 11202  0154CA  0FFE               	addlw	-2
 11203  0154CC  6ED9               	movwf	fsr2l,c
 11204  0154CE  50E2               	movf	fsr1h,w,c
 11205  0154D0  6EDA               	movwf	fsr2h,c
 11206  0154D2  0EFF               	movlw	255
 11207  0154D4  22DA               	addwfc	fsr2h,f,c
 11208  0154D6  0EF8               	movlw	-8
 11209  0154D8  50E3               	movf	plusw1,w,c
 11210  0154DA  5CDE               	subwf	postinc2,w,c
 11211  0154DC  50DE               	movf	postinc2,w,c
 11212  0154DE  0A80               	xorlw	128
 11213  0154E0  6E32               	movwf	btemp^0,c
 11214  0154E2  0EF9               	movlw	-7
 11215  0154E4  50E3               	movf	plusw1,w,c
 11216  0154E6  0A80               	xorlw	128
 11217  0154E8  5832               	subwfb	btemp^0,w,c
 11218  0154EA  A0D8               	btfss	status,0,c
 11219  0154EC  D7A8               	goto	l9893
 11220                           
 11221                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 11222  0154EE  B01F               	btfsc	_flags^0,0,c
 11223  0154F0  D01F               	goto	l9907
 11224  0154F2  D031               	goto	u10160
 11225  0154F4                     l9903:
 11226                           
 11227                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 11228                           ;stkvar	_fp @ sp[(-17)+-2]
 11229  0154F4  0EED               	movlw	-19
 11230  0154F6  006F FF8F FFE6     	movff	plusw1,postinc1
 11231  0154FC  006F FF8F FFE6     	movff	plusw1,postinc1
 11232  015502  0E20               	movlw	32
 11233  015504  6EE6               	movwf	postinc1,c
 11234  015506  0E00               	movlw	0
 11235  015508  6EE6               	movwf	postinc1,c
 11236  01550A  ECBF  F0B7         	call	_fputc	;wreg free
 11237                           
 11238                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 11239                           ;stkvar	_l @ sp[(-17)+7]
 11240  01550E  0EF6               	movlw	-10
 11241  015510  50E3               	movf	plusw1,w,c
 11242  015512  0F01               	addlw	1
 11243  015514  6E32               	movwf	btemp^0,c
 11244  015516  0EF6               	movlw	-10
 11245  015518  0060  F0CB  FFE3   	movff	btemp,plusw1
 11246  01551E  6A32               	clrf	btemp^0,c
 11247  015520  0EF7               	movlw	-9
 11248  015522  50E3               	movf	plusw1,w,c
 11249  015524  2032               	addwfc	btemp^0,w,c
 11250  015526  6E32               	movwf	btemp^0,c
 11251  015528  0EF7               	movlw	-9
 11252  01552A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11253  015530                     l9907:
 11254                           
 11255                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 11256                           ;stkvar	_w @ sp[(-17)+13]
 11257                           ;stkvar	_l @ sp[(-17)+7]
 11258  015530  50E1               	movf	fsr1l,w,c
 11259  015532  0FF6               	addlw	-10
 11260  015534  6ED9               	movwf	fsr2l,c
 11261  015536  50E2               	movf	fsr1h,w,c
 11262  015538  6EDA               	movwf	fsr2h,c
 11263  01553A  0EFF               	movlw	255
 11264  01553C  22DA               	addwfc	fsr2h,f,c
 11265  01553E  0EFC               	movlw	-4
 11266  015540  50E3               	movf	plusw1,w,c
 11267  015542  5CDE               	subwf	postinc2,w,c
 11268  015544  50DE               	movf	postinc2,w,c
 11269  015546  0A80               	xorlw	128
 11270  015548  6E32               	movwf	btemp^0,c
 11271  01554A  0EFD               	movlw	-3
 11272  01554C  50E3               	movf	plusw1,w,c
 11273  01554E  0A80               	xorlw	128
 11274  015550  5832               	subwfb	btemp^0,w,c
 11275  015552  A0D8               	btfss	status,0,c
 11276  015554  D7CF               	goto	l9903
 11277  015556                     u10160:
 11278                           
 11279                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 11280                           ;stkvar	_l @ sp[(-17)+7]
 11281  015556  0EF6               	movlw	-10
 11282  015558  006F FF8C  F032    	movff	plusw1,btemp
 11283  01555E  0EF7               	movlw	-9
 11284  015560  006F FF8C  F033    	movff	plusw1,btemp+1
 11285                           
 11286                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 11287  015566  0EEB               	movlw	235
 11288  015568  26E1               	addwf	fsr1l,f,c
 11289  01556A  0EFF               	movlw	255
 11290  01556C  22E2               	addwfc	fsr1h,f,c
 11291  01556E  0012               	return		;funcret
 11292  015570                     __end_of_stoa:
 11293                           	opt callstack 0
 11294                           
 11295 ;; *************** function _efgtoa *****************
 11296 ;; Defined at:
 11297 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11298 ;; Parameters:    Size  Location     Type
 11299 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11300 ;;		 -> f(6), NULL(0), 
 11301 ;;  f               4  [STACK] PTR struct _IO_FILE
 11302 ;;  c               1  [STACK] unsigned char 
 11303 ;; Auto vars:     Size  Location     Type
 11304 ;;  u               4  [STACK] unsigned char 
 11305 ;;  g               4  [STACK] unsigned char 
 11306 ;;  l               4  [STACK] unsigned char 
 11307 ;;  h               4  [STACK] unsigned char 
 11308 ;;  ou              4  [STACK] unsigned char 
 11309 ;;  n               2  [STACK] int 
 11310 ;;  e               2  [STACK] int 
 11311 ;;  i               2  [STACK] int 
 11312 ;;  w               2  [STACK] int 
 11313 ;;  p               2  [STACK] int 
 11314 ;;  sign            2  [STACK] int 
 11315 ;;  d               2  [STACK] int 
 11316 ;;  ne              2  [STACK] int 
 11317 ;;  m               2  [STACK] int 
 11318 ;;  pp              2  [STACK] int 
 11319 ;;  t               2  [STACK] int 
 11320 ;;  mode            1  [STACK] unsigned char 
 11321 ;;  nmode           1  [STACK] unsigned char 
 11322 ;; Return value:  Size  Location     Type
 11323 ;;                  2  [STACK] int 
 11324 ;; Registers used:
 11325 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 11326 ;; Tracked objects:
 11327 ;;		On entry : 0/5
 11328 ;;		On exit  : 0/0
 11329 ;;		Unchanged: 0/0
 11330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11335 ;;Total ram usage:        0 bytes
 11336 ;; Hardware stack levels used:    1
 11337 ;; Hardware stack levels required when called:   11
 11338 ;; This function calls:
 11339 ;;		___awdiv
 11340 ;;		___awmod
 11341 ;;		___fladd
 11342 ;;		___fldiv
 11343 ;;		___fleq
 11344 ;;		___flge
 11345 ;;		___flmul
 11346 ;;		___flneg
 11347 ;;		___flsub
 11348 ;;		___fltol
 11349 ;;		___fpclassifyf
 11350 ;;		_floorf
 11351 ;;		_isupper
 11352 ;;		_pad
 11353 ;;		_strcpy
 11354 ;;		_tolower
 11355 ;; This function is called by:
 11356 ;;		_vfpfcnvrt
 11357 ;; This function uses a reentrant model
 11358 ;;
 11359                           
 11360                           	psect	text46
 11361  010000                     __ptext46:
 11362                           	opt callstack 0
 11363  010000                     _efgtoa:
 11364                           	opt callstack 0
 11365                           
 11366                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11367  010000  0E38               	movlw	56
 11368  010002  26E1               	addwf	fsr1l,f,c
 11369  010004  0E00               	movlw	0
 11370  010006  22E2               	addwfc	fsr1h,f,c
 11371                           
 11372                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 11373                           ;stkvar	_sign @ sp[(-56)+42]
 11374                           
 11375                           ;incstack = 0
 11376  010008  0EF2               	movlw	-14
 11377  01000A  6AE3               	clrf	plusw1,c
 11378  01000C  0EF3               	movlw	-13
 11379  01000E  6AE3               	clrf	plusw1,c
 11380                           
 11381                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 11382                           ;stkvar	_f @ sp[(-56)+-6]
 11383  010010  0EC2               	movlw	-62
 11384  010012  006F FF8C  F03A    	movff	plusw1,btemp+8
 11385  010018  0EC3               	movlw	-61
 11386  01001A  006F FF8C  F03B    	movff	plusw1,btemp+9
 11387  010020  0EC4               	movlw	-60
 11388  010022  006F FF8C  F03C    	movff	plusw1,btemp+10
 11389  010028  0EC5               	movlw	-59
 11390  01002A  006F FF8C  F03D    	movff	plusw1,btemp+11
 11391                           
 11392                           ;stkvar	_g @ sp[(-56)+16]
 11393  010030  0ED8               	movlw	-40
 11394  010032  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11395  010038  0ED9               	movlw	-39
 11396  01003A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11397  010040  0EDA               	movlw	-38
 11398  010042  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11399  010048  0EDB               	movlw	-37
 11400  01004A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11401                           
 11402                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 11403                           ;stkvar	_g @ sp[(-56)+16]
 11404  010050  0EDB               	movlw	-37
 11405  010052  AEE3               	btfss	plusw1,7,c
 11406  010054  D02B               	goto	l9567
 11407                           
 11408                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 11409  010056  0E01               	movlw	1
 11410  010058  6E3C               	movwf	(btemp+10)^0,c
 11411  01005A  0E00               	movlw	0
 11412  01005C  6E3D               	movwf	(btemp+11)^0,c
 11413                           
 11414                           ;stkvar	_sign @ sp[(-56)+42]
 11415  01005E  0EF2               	movlw	-14
 11416  010060  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11417  010066  0EF3               	movlw	-13
 11418  010068  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11419                           
 11420                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 11421                           ;stkvar	_g @ sp[(-56)+16]
 11422  01006E  0ED8               	movlw	-40
 11423  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 11424  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 11425  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 11426  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 11427  010088  EC98  F0C2         	call	___flneg	;wreg free
 11428                           
 11429                           ;stkvar	_g @ sp[(-56)+16]
 11430  01008C  0ED8               	movlw	-40
 11431  01008E  0060  F0CB  FFE3   	movff	btemp,plusw1
 11432  010094  0ED9               	movlw	-39
 11433  010096  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11434  01009C  0EDA               	movlw	-38
 11435  01009E  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11436  0100A4  0EDB               	movlw	-37
 11437  0100A6  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11438  0100AC                     l9567:
 11439                           
 11440                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 11441                           ;stkvar	_n @ sp[(-56)+32]
 11442  0100AC  0EE8               	movlw	-24
 11443  0100AE  6AE3               	clrf	plusw1,c
 11444  0100B0  0EE9               	movlw	-23
 11445  0100B2  6AE3               	clrf	plusw1,c
 11446                           
 11447                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 11448                           ;stkvar	_w @ sp[(-56)+38]
 11449  0100B4  0EEE               	movlw	-18
 11450  0100B6  0060  F06F  FFE3   	movff	_width,plusw1
 11451  0100BC  0EEF               	movlw	-17
 11452  0100BE  0060  F073  FFE3   	movff	_width+1,plusw1
 11453                           
 11454                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 11455                           ;stkvar	_sign @ sp[(-56)+42]
 11456  0100C4  0EF2               	movlw	-14
 11457  0100C6  006F FF8C  F032    	movff	plusw1,btemp
 11458  0100CC  0EF3               	movlw	-13
 11459  0100CE  50E3               	movf	plusw1,w,c
 11460  0100D0  1032               	iorwf	btemp^0,w,c
 11461  0100D2  A4D8               	btfss	status,2,c
 11462  0100D4  D002               	goto	u9570
 11463  0100D6  A41F               	btfss	_flags^0,2,c
 11464  0100D8  D036               	goto	l9587
 11465  0100DA                     u9570:
 11466                           
 11467                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 11468                           ;stkvar	_sign @ sp[(-56)+42]
 11469  0100DA  0EF2               	movlw	-14
 11470  0100DC  006F FF8C  F032    	movff	plusw1,btemp
 11471  0100E2  0EF3               	movlw	-13
 11472  0100E4  50E3               	movf	plusw1,w,c
 11473  0100E6  1032               	iorwf	btemp^0,w,c
 11474  0100E8  A4D8               	btfss	status,2,c
 11475  0100EA  D002               	goto	l9579
 11476  0100EC  0E2B               	movlw	43
 11477  0100EE  D001               	goto	L11
 11478  0100F0                     l9579:
 11479  0100F0  0E2D               	movlw	45
 11480  0100F2                     L11:
 11481  0100F2  6E3C               	movwf	(btemp+10)^0,c
 11482  0100F4  0E00               	movlw	0
 11483  0100F6  6E3D               	movwf	(btemp+11)^0,c
 11484                           
 11485                           ;stkvar	_efgtoa$4374 @ sp[(-56)+10]
 11486  0100F8  0ED2               	movlw	-46
 11487  0100FA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11488  010100  0ED3               	movlw	-45
 11489  010102  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11490                           
 11491                           ;stkvar	_efgtoa$4374 @ sp[(-56)+10]
 11492  010108  0ED2               	movlw	-46
 11493  01010A  006F FF8C  F2AC    	movff	plusw1,_dbuf
 11494                           
 11495                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 11496                           ;stkvar	_n @ sp[(-56)+32]
 11497  010110  0EE8               	movlw	-24
 11498  010112  50E3               	movf	plusw1,w,c
 11499  010114  0F01               	addlw	1
 11500  010116  6E32               	movwf	btemp^0,c
 11501  010118  0EE8               	movlw	-24
 11502  01011A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11503  010120  6A32               	clrf	btemp^0,c
 11504  010122  0EE9               	movlw	-23
 11505  010124  50E3               	movf	plusw1,w,c
 11506  010126  2032               	addwfc	btemp^0,w,c
 11507  010128  6E32               	movwf	btemp^0,c
 11508  01012A  0EE9               	movlw	-23
 11509  01012C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11510                           
 11511                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 11512                           ;stkvar	_w @ sp[(-56)+38]
 11513  010132  50E1               	movf	fsr1l,w,c
 11514  010134  0FEE               	addlw	-18
 11515  010136  6ED9               	movwf	fsr2l,c
 11516  010138  50E2               	movf	fsr1h,w,c
 11517  01013A  6EDA               	movwf	fsr2h,c
 11518  01013C  0EFF               	movlw	255
 11519  01013E  22DA               	addwfc	fsr2h,f,c
 11520  010140  06DE               	decf	postinc2,f,c
 11521  010142  0E00               	movlw	0
 11522  010144  5ADD               	subwfb	postdec2,f,c
 11523  010146                     l9587:
 11524                           
 11525                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 11526                           ;stkvar	_g @ sp[(-56)+16]
 11527  010146  0ED8               	movlw	-40
 11528  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 11529  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 11530  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 11531  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 11532  010160  EC4D  F0B2         	call	___fpclassifyf	;wreg free
 11533  010164  0432               	decf	btemp^0,w,c
 11534  010166  1033               	iorwf	(btemp+1)^0,w,c
 11535  010168  A4D8               	btfss	status,2,c
 11536  01016A  D076               	goto	l9605
 11537  01016C  0EBF               	movlw	191
 11538  01016E  6E3C               	movwf	(btemp+10)^0,c
 11539  010170  0EFF               	movlw	255
 11540  010172  6E3D               	movwf	(btemp+11)^0,c
 11541                           
 11542                           ;stkvar	_c @ sp[(-56)+-7]
 11543  010174  0EC1               	movlw	-63
 11544  010176  50E3               	movf	plusw1,w,c
 11545  010178  6E3A               	movwf	(btemp+8)^0,c
 11546  01017A  6A3B               	clrf	(btemp+9)^0,c
 11547  01017C  503C               	movf	(btemp+10)^0,w,c
 11548  01017E  263A               	addwf	(btemp+8)^0,f,c
 11549  010180  503D               	movf	(btemp+11)^0,w,c
 11550  010182  223B               	addwfc	(btemp+9)^0,f,c
 11551  010184  503B               	movf	(btemp+9)^0,w,c
 11552  010186  E106               	bnz	u9600
 11553  010188  0E1A               	movlw	26
 11554  01018A  5C3A               	subwf	(btemp+8)^0,w,c
 11555  01018C  B0D8               	btfsc	status,0,c
 11556  01018E  D002               	goto	u9600
 11557  010190  0E01               	movlw	1
 11558  010192  D001               	goto	u9610
 11559  010194                     u9600:
 11560  010194  0E00               	movlw	0
 11561  010196                     u9610:
 11562  010196  6E3C               	movwf	(btemp+10)^0,c
 11563  010198  6A3D               	clrf	(btemp+11)^0,c
 11564                           
 11565                           ;stkvar	_efgtoa$4375 @ sp[(-56)+8]
 11566  01019A  0ED0               	movlw	-48
 11567  01019C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11568  0101A2  0ED1               	movlw	-47
 11569  0101A4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11570                           
 11571                           ;stkvar	_efgtoa$4375 @ sp[(-56)+8]
 11572  0101AA  0ED0               	movlw	-48
 11573  0101AC  006F FF8C  F032    	movff	plusw1,btemp
 11574  0101B2  0ED1               	movlw	-47
 11575  0101B4  50E3               	movf	plusw1,w,c
 11576  0101B6  1032               	iorwf	btemp^0,w,c
 11577  0101B8  B4D8               	btfsc	status,2,c
 11578  0101BA  D017               	goto	l9597
 11579                           
 11580                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 11581  0101BC  0ED6               	movlw	low STR_34
 11582  0101BE  6EE6               	movwf	postinc1,c
 11583  0101C0  0EFF               	movlw	high STR_34
 11584  0101C2  6EE6               	movwf	postinc1,c
 11585                           
 11586                           ;stkvar	_n @ sp[(-58)+32]
 11587  0101C4  0EAC               	movlw	low _dbuf
 11588  0101C6  6E3C               	movwf	(btemp+10)^0,c
 11589  0101C8  0E02               	movlw	high _dbuf
 11590  0101CA  6E3D               	movwf	(btemp+11)^0,c
 11591  0101CC  0EE6               	movlw	-26
 11592  0101CE  50E3               	movf	plusw1,w,c
 11593  0101D0  263C               	addwf	(btemp+10)^0,f,c
 11594  0101D2  0EE7               	movlw	-25
 11595  0101D4  50E3               	movf	plusw1,w,c
 11596  0101D6  223D               	addwfc	(btemp+11)^0,f,c
 11597  0101D8  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 11598  0101DE  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 11599  0101E4  EC5A  F0BB         	call	_strcpy	;wreg free
 11600                           
 11601                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 11602  0101E8  D016               	goto	l9599
 11603  0101EA                     l9597:
 11604                           
 11605                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 11606  0101EA  0EDE               	movlw	low STR_35
 11607  0101EC  6EE6               	movwf	postinc1,c
 11608  0101EE  0EFF               	movlw	high STR_35
 11609  0101F0  6EE6               	movwf	postinc1,c
 11610                           
 11611                           ;stkvar	_n @ sp[(-58)+32]
 11612  0101F2  0EAC               	movlw	low _dbuf
 11613  0101F4  6E3C               	movwf	(btemp+10)^0,c
 11614  0101F6  0E02               	movlw	high _dbuf
 11615  0101F8  6E3D               	movwf	(btemp+11)^0,c
 11616  0101FA  0EE6               	movlw	-26
 11617  0101FC  50E3               	movf	plusw1,w,c
 11618  0101FE  263C               	addwf	(btemp+10)^0,f,c
 11619  010200  0EE7               	movlw	-25
 11620  010202  50E3               	movf	plusw1,w,c
 11621  010204  223D               	addwfc	(btemp+11)^0,f,c
 11622  010206  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 11623  01020C  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 11624  010212  EC5A  F0BB         	call	_strcpy	;wreg free
 11625  010216                     l9599:
 11626                           
 11627                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 11628                           ;stkvar	_w @ sp[(-56)+38]
 11629  010216  50E1               	movf	fsr1l,w,c
 11630  010218  0FEE               	addlw	-18
 11631  01021A  6ED9               	movwf	fsr2l,c
 11632  01021C  50E2               	movf	fsr1h,w,c
 11633  01021E  6EDA               	movwf	fsr2h,c
 11634  010220  0EFF               	movlw	255
 11635  010222  22DA               	addwfc	fsr2h,f,c
 11636  010224  0EFD               	movlw	253
 11637  010226  26DE               	addwf	postinc2,f,c
 11638  010228  0EFF               	movlw	255
 11639  01022A  22DD               	addwfc	postdec2,f,c
 11640  01022C                     l9601:
 11641                           
 11642                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 11643                           ;stkvar	_w @ sp[(-56)+38]
 11644  01022C  0EEE               	movlw	-18
 11645  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 11646  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 11647  01023A  0EAC               	movlw	low _dbuf
 11648  01023C  6EE6               	movwf	postinc1,c
 11649  01023E  0E02               	movlw	high _dbuf
 11650  010240  6EE6               	movwf	postinc1,c
 11651                           
 11652                           ;stkvar	_fp @ sp[(-60)+-2]
 11653  010242  0EC2               	movlw	-62
 11654  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 11655  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 11656  010250  ECDD  F0B8         	call	_pad	;wreg free
 11657  010254  EF1D  F089         	goto	l1843
 11658  010258                     l9605:
 11659                           
 11660                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 11661                           ;stkvar	_g @ sp[(-56)+16]
 11662  010258  0ED8               	movlw	-40
 11663  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 11664  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 11665  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 11666  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 11667  010272  EC4D  F0B2         	call	___fpclassifyf	;wreg free
 11668  010276  5032               	movf	btemp^0,w,c
 11669  010278  1033               	iorwf	(btemp+1)^0,w,c
 11670  01027A  A4D8               	btfss	status,2,c
 11671  01027C  D056               	goto	l9623
 11672  01027E  0EBF               	movlw	191
 11673  010280  6E3C               	movwf	(btemp+10)^0,c
 11674  010282  0EFF               	movlw	255
 11675  010284  6E3D               	movwf	(btemp+11)^0,c
 11676                           
 11677                           ;stkvar	_c @ sp[(-56)+-7]
 11678  010286  0EC1               	movlw	-63
 11679  010288  50E3               	movf	plusw1,w,c
 11680  01028A  6E3A               	movwf	(btemp+8)^0,c
 11681  01028C  6A3B               	clrf	(btemp+9)^0,c
 11682  01028E  503C               	movf	(btemp+10)^0,w,c
 11683  010290  263A               	addwf	(btemp+8)^0,f,c
 11684  010292  503D               	movf	(btemp+11)^0,w,c
 11685  010294  223B               	addwfc	(btemp+9)^0,f,c
 11686  010296  503B               	movf	(btemp+9)^0,w,c
 11687  010298  E106               	bnz	u9640
 11688  01029A  0E1A               	movlw	26
 11689  01029C  5C3A               	subwf	(btemp+8)^0,w,c
 11690  01029E  B0D8               	btfsc	status,0,c
 11691  0102A0  D002               	goto	u9640
 11692  0102A2  0E01               	movlw	1
 11693  0102A4  D001               	goto	u9650
 11694  0102A6                     u9640:
 11695  0102A6  0E00               	movlw	0
 11696  0102A8                     u9650:
 11697  0102A8  6E3C               	movwf	(btemp+10)^0,c
 11698  0102AA  6A3D               	clrf	(btemp+11)^0,c
 11699                           
 11700                           ;stkvar	_efgtoa$4379 @ sp[(-56)+6]
 11701  0102AC  0ECE               	movlw	-50
 11702  0102AE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11703  0102B4  0ECF               	movlw	-49
 11704  0102B6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11705                           
 11706                           ;stkvar	_efgtoa$4379 @ sp[(-56)+6]
 11707  0102BC  0ECE               	movlw	-50
 11708  0102BE  006F FF8C  F032    	movff	plusw1,btemp
 11709  0102C4  0ECF               	movlw	-49
 11710  0102C6  50E3               	movf	plusw1,w,c
 11711  0102C8  1032               	iorwf	btemp^0,w,c
 11712  0102CA  B4D8               	btfsc	status,2,c
 11713  0102CC  D017               	goto	l9615
 11714                           
 11715                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 11716  0102CE  0EDA               	movlw	low STR_38
 11717  0102D0  6EE6               	movwf	postinc1,c
 11718  0102D2  0EFF               	movlw	high STR_38
 11719  0102D4  6EE6               	movwf	postinc1,c
 11720                           
 11721                           ;stkvar	_n @ sp[(-58)+32]
 11722  0102D6  0EAC               	movlw	low _dbuf
 11723  0102D8  6E3C               	movwf	(btemp+10)^0,c
 11724  0102DA  0E02               	movlw	high _dbuf
 11725  0102DC  6E3D               	movwf	(btemp+11)^0,c
 11726  0102DE  0EE6               	movlw	-26
 11727  0102E0  50E3               	movf	plusw1,w,c
 11728  0102E2  263C               	addwf	(btemp+10)^0,f,c
 11729  0102E4  0EE7               	movlw	-25
 11730  0102E6  50E3               	movf	plusw1,w,c
 11731  0102E8  223D               	addwfc	(btemp+11)^0,f,c
 11732  0102EA  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 11733  0102F0  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 11734  0102F6  EC5A  F0BB         	call	_strcpy	;wreg free
 11735                           
 11736                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 11737  0102FA  D78D               	goto	l9599
 11738  0102FC                     l9615:
 11739                           
 11740                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 11741  0102FC  0EE2               	movlw	low STR_39
 11742  0102FE  6EE6               	movwf	postinc1,c
 11743  010300  0EFF               	movlw	high STR_39
 11744  010302  6EE6               	movwf	postinc1,c
 11745                           
 11746                           ;stkvar	_n @ sp[(-58)+32]
 11747  010304  0EAC               	movlw	low _dbuf
 11748  010306  6E3C               	movwf	(btemp+10)^0,c
 11749  010308  0E02               	movlw	high _dbuf
 11750  01030A  6E3D               	movwf	(btemp+11)^0,c
 11751  01030C  0EE6               	movlw	-26
 11752  01030E  50E3               	movf	plusw1,w,c
 11753  010310  263C               	addwf	(btemp+10)^0,f,c
 11754  010312  0EE7               	movlw	-25
 11755  010314  50E3               	movf	plusw1,w,c
 11756  010316  223D               	addwfc	(btemp+11)^0,f,c
 11757  010318  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 11758  01031E  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 11759  010324  EC5A  F0BB         	call	_strcpy	;wreg free
 11760  010328  D776               	goto	l9599
 11761  01032A                     l9623:
 11762                           
 11763                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 11764  01032A  0E00               	movlw	0
 11765  01032C  6E3A               	movwf	(btemp+8)^0,c
 11766  01032E  0E00               	movlw	0
 11767  010330  6E3B               	movwf	(btemp+9)^0,c
 11768  010332  0E80               	movlw	128
 11769  010334  6E3C               	movwf	(btemp+10)^0,c
 11770  010336  0E3F               	movlw	63
 11771  010338  6E3D               	movwf	(btemp+11)^0,c
 11772                           
 11773                           ;stkvar	_u @ sp[(-56)+12]
 11774  01033A  0ED4               	movlw	-44
 11775  01033C  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11776  010342  0ED5               	movlw	-43
 11777  010344  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11778  01034A  0ED6               	movlw	-42
 11779  01034C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11780  010352  0ED7               	movlw	-41
 11781  010354  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11782                           
 11783                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 11784                           ;stkvar	_e @ sp[(-56)+34]
 11785  01035A  0EEA               	movlw	-22
 11786  01035C  6AE3               	clrf	plusw1,c
 11787  01035E  0EEB               	movlw	-21
 11788  010360  6AE3               	clrf	plusw1,c
 11789                           
 11790                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 11791  010362  0E00               	movlw	0
 11792  010364  6EE6               	movwf	postinc1,c
 11793  010366  0E00               	movlw	0
 11794  010368  6EE6               	movwf	postinc1,c
 11795  01036A  0E00               	movlw	0
 11796  01036C  6EE6               	movwf	postinc1,c
 11797  01036E  0E00               	movlw	0
 11798  010370  6EE6               	movwf	postinc1,c
 11799                           
 11800                           ;stkvar	_g @ sp[(-60)+16]
 11801  010372  0ED4               	movlw	-44
 11802  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 11803  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 11804  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 11805  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 11806  01038C  EC27  F0BC         	call	___fleq	;wreg free
 11807  010390  A032               	btfss	btemp& (0+255),0,c
 11808  010392  D039               	goto	l9635
 11809  010394  D0BC               	goto	u9690
 11810  010396                     l9631:
 11811                           
 11812                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 11813  010396  0E00               	movlw	0
 11814  010398  6EE6               	movwf	postinc1,c
 11815  01039A  0E00               	movlw	0
 11816  01039C  6EE6               	movwf	postinc1,c
 11817  01039E  0E20               	movlw	32
 11818  0103A0  6EE6               	movwf	postinc1,c
 11819  0103A2  0E41               	movlw	65
 11820  0103A4  6EE6               	movwf	postinc1,c
 11821                           
 11822                           ;stkvar	_u @ sp[(-60)+12]
 11823  0103A6  0ED0               	movlw	-48
 11824  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11825  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 11826  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 11827  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 11828  0103C0  ECF8  F090         	call	___flmul	;wreg free
 11829                           
 11830                           ;stkvar	_u @ sp[(-56)+12]
 11831  0103C4  0ED4               	movlw	-44
 11832  0103C6  0060  F0CB  FFE3   	movff	btemp,plusw1
 11833  0103CC  0ED5               	movlw	-43
 11834  0103CE  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11835  0103D4  0ED6               	movlw	-42
 11836  0103D6  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11837  0103DC  0ED7               	movlw	-41
 11838  0103DE  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11839                           
 11840                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 11841                           ;stkvar	_e @ sp[(-56)+34]
 11842  0103E4  0EEA               	movlw	-22
 11843  0103E6  50E3               	movf	plusw1,w,c
 11844  0103E8  0F01               	addlw	1
 11845  0103EA  6E32               	movwf	btemp^0,c
 11846  0103EC  0EEA               	movlw	-22
 11847  0103EE  0060  F0CB  FFE3   	movff	btemp,plusw1
 11848  0103F4  6A32               	clrf	btemp^0,c
 11849  0103F6  0EEB               	movlw	-21
 11850  0103F8  50E3               	movf	plusw1,w,c
 11851  0103FA  2032               	addwfc	btemp^0,w,c
 11852  0103FC  6E32               	movwf	btemp^0,c
 11853  0103FE  0EEB               	movlw	-21
 11854  010400  0060  F0CB  FFE3   	movff	btemp,plusw1
 11855  010406                     l9635:
 11856                           
 11857                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 11858  010406  0E00               	movlw	0
 11859  010408  6EE6               	movwf	postinc1,c
 11860  01040A  0E00               	movlw	0
 11861  01040C  6EE6               	movwf	postinc1,c
 11862  01040E  0E20               	movlw	32
 11863  010410  6EE6               	movwf	postinc1,c
 11864  010412  0E41               	movlw	65
 11865  010414  6EE6               	movwf	postinc1,c
 11866                           
 11867                           ;stkvar	_u @ sp[(-60)+12]
 11868  010416  0ED0               	movlw	-48
 11869  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 11870  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 11871  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 11872  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 11873  010430  ECF8  F090         	call	___flmul	;wreg free
 11874  010434  0060  F0CB  FFE6   	movff	btemp,postinc1
 11875  01043A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11876  010440  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11877  010446  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11878                           
 11879                           ;stkvar	_g @ sp[(-60)+16]
 11880  01044C  0ED4               	movlw	-44
 11881  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 11882  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 11883  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 11884  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 11885  010466  EC91  F0B4         	call	___flge	;wreg free
 11886  01046A  A032               	btfss	btemp& (0+255),0,c
 11887  01046C  D032               	goto	l9641
 11888  01046E  D793               	goto	l9631
 11889  010470                     l9637:
 11890                           
 11891                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 11892  010470  0E00               	movlw	0
 11893  010472  6EE6               	movwf	postinc1,c
 11894  010474  0E00               	movlw	0
 11895  010476  6EE6               	movwf	postinc1,c
 11896  010478  0E20               	movlw	32
 11897  01047A  6EE6               	movwf	postinc1,c
 11898  01047C  0E41               	movlw	65
 11899  01047E  6EE6               	movwf	postinc1,c
 11900                           
 11901                           ;stkvar	_u @ sp[(-60)+12]
 11902  010480  0ED0               	movlw	-48
 11903  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 11904  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 11905  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 11906  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 11907  01049A  ECAE  F09B         	call	___fldiv	;wreg free
 11908                           
 11909                           ;stkvar	_u @ sp[(-56)+12]
 11910  01049E  0ED4               	movlw	-44
 11911  0104A0  0060  F0CB  FFE3   	movff	btemp,plusw1
 11912  0104A6  0ED5               	movlw	-43
 11913  0104A8  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11914  0104AE  0ED6               	movlw	-42
 11915  0104B0  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11916  0104B6  0ED7               	movlw	-41
 11917  0104B8  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11918                           
 11919                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 11920                           ;stkvar	_e @ sp[(-56)+34]
 11921  0104BE  50E1               	movf	fsr1l,w,c
 11922  0104C0  0FEA               	addlw	-22
 11923  0104C2  6ED9               	movwf	fsr2l,c
 11924  0104C4  50E2               	movf	fsr1h,w,c
 11925  0104C6  6EDA               	movwf	fsr2h,c
 11926  0104C8  0EFF               	movlw	255
 11927  0104CA  22DA               	addwfc	fsr2h,f,c
 11928  0104CC  06DE               	decf	postinc2,f,c
 11929  0104CE  0E00               	movlw	0
 11930  0104D0  5ADD               	subwfb	postdec2,f,c
 11931  0104D2                     l9641:
 11932                           
 11933                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 11934                           ;stkvar	_u @ sp[(-56)+12]
 11935  0104D2  0ED4               	movlw	-44
 11936  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 11937  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 11938  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 11939  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 11940                           
 11941                           ;stkvar	_g @ sp[(-60)+16]
 11942  0104EC  0ED4               	movlw	-44
 11943  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 11944  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 11945  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 11946  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 11947  010506  EC91  F0B4         	call	___flge	;wreg free
 11948  01050A  A032               	btfss	btemp& (0+255),0,c
 11949  01050C  D7B1               	goto	l9637
 11950  01050E                     u9690:
 11951                           
 11952                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 11953                           ;stkvar	_c @ sp[(-56)+-7]
 11954  01050E  0EC1               	movlw	-63
 11955  010510  50E3               	movf	plusw1,w,c
 11956  010512  6EE6               	movwf	postinc1,c
 11957  010514  0E00               	movlw	0
 11958  010516  6EE6               	movwf	postinc1,c
 11959  010518  EC3A  F0BF         	call	_tolower	;wreg free
 11960                           
 11961                           ;stkvar	_mode @ sp[(-56)+54]
 11962  01051C  0EFE               	movlw	-2
 11963  01051E  0060  F0CB  FFE3   	movff	btemp,plusw1
 11964                           
 11965                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 11966                           ;stkvar	_mode @ sp[(-56)+54]
 11967                           ;stkvar	_nmode @ sp[(-56)+55]
 11968  010524  0EFE               	movlw	-2
 11969  010526  006F FF8C  F032    	movff	plusw1,btemp
 11970  01052C  0EFF               	movlw	-1
 11971  01052E  0060  F0CB  FFE3   	movff	btemp,plusw1
 11972                           
 11973                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 11974                           ;stkvar	_mode @ sp[(-56)+54]
 11975  010534  0EFE               	movlw	-2
 11976  010536  006F FF8C  F032    	movff	plusw1,btemp
 11977  01053C  0E67               	movlw	103
 11978  01053E  1832               	xorwf	btemp^0,w,c
 11979  010540  A4D8               	btfss	status,2,c
 11980  010542  D025               	goto	l9659
 11981                           
 11982                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 11983  010544  501D               	movf	_prec^0,w,c
 11984  010546  101E               	iorwf	(_prec+1)^0,w,c
 11985  010548  A4D8               	btfss	status,2,c
 11986  01054A  D004               	goto	l9653
 11987                           
 11988                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 11989  01054C  0E00               	movlw	0
 11990  01054E  6E1E               	movwf	(_prec+1)^0,c
 11991  010550  0E01               	movlw	1
 11992  010552  6E1D               	movwf	_prec^0,c
 11993  010554                     l9653:
 11994                           
 11995                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 11996  010554  BE1E               	btfsc	(_prec+1)^0,7,c
 11997  010556  D005               	goto	u9720
 11998  010558  501E               	movf	(_prec+1)^0,w,c
 11999  01055A  E110               	bnz	l9657
 12000  01055C  041D               	decf	_prec^0,w,c
 12001  01055E  B0D8               	btfsc	status,0,c
 12002  010560  D00D               	goto	l9657
 12003  010562                     u9720:
 12004  010562  0E06               	movlw	6
 12005  010564  6E3C               	movwf	(btemp+10)^0,c
 12006  010566  0E00               	movlw	0
 12007  010568  6E3D               	movwf	(btemp+11)^0,c
 12008                           
 12009                           ;stkvar	_p @ sp[(-56)+40]
 12010  01056A  0EF0               	movlw	-16
 12011  01056C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12012  010572  0EF1               	movlw	-15
 12013  010574  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12014  01057A  D00C               	goto	l9665
 12015  01057C                     l9657:
 12016                           
 12017                           ;stkvar	_p @ sp[(-56)+40]
 12018  01057C  0EF0               	movlw	-16
 12019  01057E  0060  F077  FFE3   	movff	_prec,plusw1
 12020  010584  0EF1               	movlw	-15
 12021  010586  0060  F07B  FFE3   	movff	_prec+1,plusw1
 12022  01058C  D003               	goto	l9665
 12023  01058E                     l9659:
 12024                           
 12025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 12026  01058E  AE1E               	btfss	(_prec+1)^0,7,c
 12027  010590  D7F5               	goto	l9657
 12028  010592  D7E7               	goto	u9720
 12029  010594                     l9665:
 12030                           
 12031                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 12032                           ;stkvar	_mode @ sp[(-56)+54]
 12033  010594  0EFE               	movlw	-2
 12034  010596  006F FF8C  F032    	movff	plusw1,btemp
 12035  01059C  0E67               	movlw	103
 12036  01059E  1832               	xorwf	btemp^0,w,c
 12037  0105A0  A4D8               	btfss	status,2,c
 12038  0105A2  D02F               	goto	l9675
 12039                           
 12040                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 12041                           ;stkvar	_e @ sp[(-56)+34]
 12042  0105A4  0EEB               	movlw	-21
 12043  0105A6  AEE3               	btfss	plusw1,7,c
 12044  0105A8  D00E               	goto	u9750
 12045  0105AA  0EEA               	movlw	-22
 12046  0105AC  006F FF8C  F032    	movff	plusw1,btemp
 12047  0105B2  0EFC               	movlw	252
 12048  0105B4  5E32               	subwf	btemp^0,f,c
 12049  0105B6  0EEB               	movlw	-21
 12050  0105B8  006F FF8C  F032    	movff	plusw1,btemp
 12051  0105BE  0EFF               	movlw	255
 12052  0105C0  5A32               	subwfb	btemp^0,f,c
 12053  0105C2  A0D8               	btfss	status,0,c
 12054  0105C4  D018               	goto	l9673
 12055  0105C6                     u9750:
 12056                           
 12057                           ;stkvar	_e @ sp[(-56)+34]
 12058                           ;stkvar	_p @ sp[(-56)+40]
 12059  0105C6  0EF0               	movlw	-16
 12060  0105C8  50E3               	movf	plusw1,w,c
 12061  0105CA  0FFF               	addlw	255
 12062  0105CC  6E3C               	movwf	(btemp+10)^0,c
 12063  0105CE  0EF1               	movlw	-15
 12064  0105D0  006F FF8C  F03D    	movff	plusw1,btemp+11
 12065  0105D6  0EFF               	movlw	255
 12066  0105D8  223D               	addwfc	(btemp+11)^0,f,c
 12067  0105DA  0EEA               	movlw	-22
 12068  0105DC  50E3               	movf	plusw1,w,c
 12069  0105DE  5C3C               	subwf	(btemp+10)^0,w,c
 12070  0105E0  503D               	movf	(btemp+11)^0,w,c
 12071  0105E2  0A80               	xorlw	128
 12072  0105E4  6E32               	movwf	btemp^0,c
 12073  0105E6  0EEB               	movlw	-21
 12074  0105E8  50E3               	movf	plusw1,w,c
 12075  0105EA  0A80               	xorlw	128
 12076  0105EC  5832               	subwfb	btemp^0,w,c
 12077  0105EE  A0D8               	btfss	status,0,c
 12078  0105F0  D002               	goto	l9673
 12079                           
 12080                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 12081  0105F2  0E66               	movlw	102
 12082  0105F4  D001               	goto	L12
 12083  0105F6                     l9673:
 12084                           
 12085                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 12086  0105F6  0E65               	movlw	101
 12087  0105F8                     L12:
 12088  0105F8  6E3D               	movwf	(btemp+11)^0,c
 12089                           
 12090                           ;stkvar	_nmode @ sp[(-56)+55]
 12091  0105FA  0EFF               	movlw	-1
 12092  0105FC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12093  010602                     l9675:
 12094                           
 12095                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 12096                           ;stkvar	_p @ sp[(-56)+40]
 12097                           ;stkvar	_m @ sp[(-56)+48]
 12098  010602  0EF0               	movlw	-16
 12099  010604  006F FF8C  F032    	movff	plusw1,btemp
 12100  01060A  0EF8               	movlw	-8
 12101  01060C  0060  F0CB  FFE3   	movff	btemp,plusw1
 12102  010612  0EF1               	movlw	-15
 12103  010614  006F FF8C  F032    	movff	plusw1,btemp
 12104  01061A  0EF9               	movlw	-7
 12105  01061C  0060  F0CB  FFE3   	movff	btemp,plusw1
 12106                           
 12107                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 12108                           ;stkvar	_mode @ sp[(-56)+54]
 12109  010622  0EFE               	movlw	-2
 12110  010624  006F FF8C  F032    	movff	plusw1,btemp
 12111  01062A  0E67               	movlw	103
 12112  01062C  1832               	xorwf	btemp^0,w,c
 12113  01062E  A4D8               	btfss	status,2,c
 12114  010630  D00B               	goto	u9790
 12115                           
 12116                           ;stkvar	_nmode @ sp[(-56)+55]
 12117  010632  0EFF               	movlw	-1
 12118  010634  006F FF8C  F032    	movff	plusw1,btemp
 12119  01063A  0E66               	movlw	102
 12120  01063C  1832               	xorwf	btemp^0,w,c
 12121  01063E  A4D8               	btfss	status,2,c
 12122  010640  D014               	goto	l1872
 12123                           
 12124                           ;stkvar	_e @ sp[(-56)+34]
 12125  010642  0EEB               	movlw	-21
 12126  010644  AEE3               	btfss	plusw1,7,c
 12127  010646  D011               	goto	l1872
 12128  010648                     u9790:
 12129                           
 12130                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 12131                           ;stkvar	_m @ sp[(-56)+48]
 12132  010648  0EF8               	movlw	-8
 12133  01064A  50E3               	movf	plusw1,w,c
 12134  01064C  0F01               	addlw	1
 12135  01064E  6E32               	movwf	btemp^0,c
 12136  010650  0EF8               	movlw	-8
 12137  010652  0060  F0CB  FFE3   	movff	btemp,plusw1
 12138  010658  6A32               	clrf	btemp^0,c
 12139  01065A  0EF9               	movlw	-7
 12140  01065C  50E3               	movf	plusw1,w,c
 12141  01065E  2032               	addwfc	btemp^0,w,c
 12142  010660  6E32               	movwf	btemp^0,c
 12143  010662  0EF9               	movlw	-7
 12144  010664  0060  F0CB  FFE3   	movff	btemp,plusw1
 12145  01066A                     l1872:
 12146                           
 12147                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 12148                           ;stkvar	_nmode @ sp[(-56)+55]
 12149  01066A  0EFF               	movlw	-1
 12150  01066C  006F FF8C  F032    	movff	plusw1,btemp
 12151  010672  0E66               	movlw	102
 12152  010674  1832               	xorwf	btemp^0,w,c
 12153  010676  A4D8               	btfss	status,2,c
 12154  010678  D03B               	goto	l9695
 12155                           
 12156                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 12157                           ;stkvar	_e @ sp[(-56)+34]
 12158  01067A  0EEB               	movlw	-21
 12159  01067C  AEE3               	btfss	plusw1,7,c
 12160  01067E  D01C               	goto	l9691
 12161                           
 12162                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 12163  010680  0E00               	movlw	0
 12164  010682  6E3A               	movwf	(btemp+8)^0,c
 12165  010684  0E00               	movlw	0
 12166  010686  6E3B               	movwf	(btemp+9)^0,c
 12167  010688  0E80               	movlw	128
 12168  01068A  6E3C               	movwf	(btemp+10)^0,c
 12169  01068C  0E3F               	movlw	63
 12170  01068E  6E3D               	movwf	(btemp+11)^0,c
 12171                           
 12172                           ;stkvar	_u @ sp[(-56)+12]
 12173  010690  0ED4               	movlw	-44
 12174  010692  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12175  010698  0ED5               	movlw	-43
 12176  01069A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12177  0106A0  0ED6               	movlw	-42
 12178  0106A2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12179  0106A8  0ED7               	movlw	-41
 12180  0106AA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12181                           
 12182                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 12183                           ;stkvar	_e @ sp[(-56)+34]
 12184  0106B0  0EEA               	movlw	-22
 12185  0106B2  6AE3               	clrf	plusw1,c
 12186  0106B4  0EEB               	movlw	-21
 12187  0106B6  6AE3               	clrf	plusw1,c
 12188  0106B8                     l9691:
 12189                           
 12190                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 12191                           ;stkvar	_mode @ sp[(-56)+54]
 12192  0106B8  0EFE               	movlw	-2
 12193  0106BA  006F FF8C  F032    	movff	plusw1,btemp
 12194  0106C0  0E67               	movlw	103
 12195  0106C2  1832               	xorwf	btemp^0,w,c
 12196  0106C4  B4D8               	btfsc	status,2,c
 12197  0106C6  D014               	goto	l9695
 12198                           
 12199                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 12200                           ;stkvar	_e @ sp[(-56)+34]
 12201                           ;stkvar	_m @ sp[(-56)+48]
 12202  0106C8  0EF8               	movlw	-8
 12203  0106CA  50E3               	movf	plusw1,w,c
 12204  0106CC  6E32               	movwf	btemp^0,c
 12205  0106CE  0EEA               	movlw	-22
 12206  0106D0  50E3               	movf	plusw1,w,c
 12207  0106D2  2632               	addwf	btemp^0,f,c
 12208  0106D4  0EF8               	movlw	-8
 12209  0106D6  0060  F0CB  FFE3   	movff	btemp,plusw1
 12210  0106DC  0EF9               	movlw	-7
 12211  0106DE  50E3               	movf	plusw1,w,c
 12212  0106E0  6E32               	movwf	btemp^0,c
 12213  0106E2  0EEB               	movlw	-21
 12214  0106E4  50E3               	movf	plusw1,w,c
 12215  0106E6  2232               	addwfc	btemp^0,f,c
 12216  0106E8  0EF9               	movlw	-7
 12217  0106EA  0060  F0CB  FFE3   	movff	btemp,plusw1
 12218  0106F0                     l9695:
 12219                           
 12220                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 12221                           ;stkvar	_i @ sp[(-56)+36]
 12222  0106F0  0EEC               	movlw	-20
 12223  0106F2  6AE3               	clrf	plusw1,c
 12224  0106F4  0EED               	movlw	-19
 12225  0106F6  6AE3               	clrf	plusw1,c
 12226                           
 12227                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 12228                           ;stkvar	_g @ sp[(-56)+16]
 12229  0106F8  0ED8               	movlw	-40
 12230  0106FA  006F FF8C  F03A    	movff	plusw1,btemp+8
 12231  010700  0ED9               	movlw	-39
 12232  010702  006F FF8C  F03B    	movff	plusw1,btemp+9
 12233  010708  0EDA               	movlw	-38
 12234  01070A  006F FF8C  F03C    	movff	plusw1,btemp+10
 12235  010710  0EDB               	movlw	-37
 12236  010712  006F FF8C  F03D    	movff	plusw1,btemp+11
 12237                           
 12238                           ;stkvar	_h @ sp[(-56)+24]
 12239  010718  0EE0               	movlw	-32
 12240  01071A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12241  010720  0EE1               	movlw	-31
 12242  010722  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12243  010728  0EE2               	movlw	-30
 12244  01072A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12245  010730  0EE3               	movlw	-29
 12246  010732  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12247                           
 12248                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 12249                           ;stkvar	_u @ sp[(-56)+12]
 12250  010738  0ED4               	movlw	-44
 12251  01073A  006F FF8C  F03A    	movff	plusw1,btemp+8
 12252  010740  0ED5               	movlw	-43
 12253  010742  006F FF8C  F03B    	movff	plusw1,btemp+9
 12254  010748  0ED6               	movlw	-42
 12255  01074A  006F FF8C  F03C    	movff	plusw1,btemp+10
 12256  010750  0ED7               	movlw	-41
 12257  010752  006F FF8C  F03D    	movff	plusw1,btemp+11
 12258                           
 12259                           ;stkvar	_ou @ sp[(-56)+28]
 12260  010758  0EE4               	movlw	-28
 12261  01075A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12262  010760  0EE5               	movlw	-27
 12263  010762  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12264  010768  0EE6               	movlw	-26
 12265  01076A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12266  010770  0EE7               	movlw	-25
 12267  010772  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12268                           
 12269                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 12270  010778  D0D6               	goto	l9711
 12271  01077A                     l9701:
 12272                           
 12273                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 12274                           ;stkvar	_u @ sp[(-56)+12]
 12275  01077A  0ED4               	movlw	-44
 12276  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 12277  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 12278  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 12279  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 12280                           
 12281                           ;stkvar	_h @ sp[(-60)+24]
 12282  010794  0EDC               	movlw	-36
 12283  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 12284  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 12285  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 12286  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 12287  0107AE  ECAE  F09B         	call	___fldiv	;wreg free
 12288  0107B2  0060  F0CB  FFE6   	movff	btemp,postinc1
 12289  0107B8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 12290  0107BE  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 12291  0107C4  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 12292  0107CA  EC8D  F0A4         	call	_floorf	;wreg free
 12293                           
 12294                           ;stkvar	_l @ sp[(-56)+20]
 12295  0107CE  0EDC               	movlw	-36
 12296  0107D0  0060  F0CB  FFE3   	movff	btemp,plusw1
 12297  0107D6  0EDD               	movlw	-35
 12298  0107D8  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12299  0107DE  0EDE               	movlw	-34
 12300  0107E0  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12301  0107E6  0EDF               	movlw	-33
 12302  0107E8  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12303                           
 12304                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 12305                           ;stkvar	_l @ sp[(-56)+20]
 12306  0107EE  0EDC               	movlw	-36
 12307  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 12308  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 12309  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 12310  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 12311  010808  ECD8  F0B3         	call	___fltol	;wreg free
 12312  01080C  0060  F0C8  F03C   	movff	btemp,btemp+10
 12313  010812  0060  F0CC  F03D   	movff	btemp+1,btemp+11
 12314                           
 12315                           ;stkvar	_d @ sp[(-56)+44]
 12316  010818  0EF4               	movlw	-12
 12317  01081A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12318  010820  0EF5               	movlw	-11
 12319  010822  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12320                           
 12321                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 12322                           ;stkvar	_u @ sp[(-56)+12]
 12323  010828  0ED4               	movlw	-44
 12324  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 12325  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 12326  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 12327  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 12328                           
 12329                           ;stkvar	_l @ sp[(-60)+20]
 12330  010842  0ED8               	movlw	-40
 12331  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 12332  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 12333  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 12334  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 12335  01085C  ECF8  F090         	call	___flmul	;wreg free
 12336  010860  0060  F0CB  FFE6   	movff	btemp,postinc1
 12337  010866  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 12338  01086C  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 12339  010872  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 12340                           
 12341                           ;stkvar	_h @ sp[(-60)+24]
 12342  010878  0EDC               	movlw	-36
 12343  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 12344  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 12345  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 12346  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 12347  010892  ECBC  F0C2         	call	___flsub	;wreg free
 12348                           
 12349                           ;stkvar	_h @ sp[(-56)+24]
 12350  010896  0EE0               	movlw	-32
 12351  010898  0060  F0CB  FFE3   	movff	btemp,plusw1
 12352  01089E  0EE1               	movlw	-31
 12353  0108A0  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12354  0108A6  0EE2               	movlw	-30
 12355  0108A8  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12356  0108AE  0EE3               	movlw	-29
 12357  0108B0  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12358                           
 12359                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 12360  0108B6  0E00               	movlw	0
 12361  0108B8  6EE6               	movwf	postinc1,c
 12362  0108BA  0E00               	movlw	0
 12363  0108BC  6EE6               	movwf	postinc1,c
 12364  0108BE  0E20               	movlw	32
 12365  0108C0  6EE6               	movwf	postinc1,c
 12366  0108C2  0E41               	movlw	65
 12367  0108C4  6EE6               	movwf	postinc1,c
 12368                           
 12369                           ;stkvar	_u @ sp[(-60)+12]
 12370  0108C6  0ED0               	movlw	-48
 12371  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12372  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 12373  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 12374  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 12375  0108E0  ECAE  F09B         	call	___fldiv	;wreg free
 12376                           
 12377                           ;stkvar	_u @ sp[(-56)+12]
 12378  0108E4  0ED4               	movlw	-44
 12379  0108E6  0060  F0CB  FFE3   	movff	btemp,plusw1
 12380  0108EC  0ED5               	movlw	-43
 12381  0108EE  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12382  0108F4  0ED6               	movlw	-42
 12383  0108F6  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12384  0108FC  0ED7               	movlw	-41
 12385  0108FE  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12386                           
 12387                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 12388                           ;stkvar	_i @ sp[(-56)+36]
 12389  010904  0EEC               	movlw	-20
 12390  010906  50E3               	movf	plusw1,w,c
 12391  010908  0F01               	addlw	1
 12392  01090A  6E32               	movwf	btemp^0,c
 12393  01090C  0EEC               	movlw	-20
 12394  01090E  0060  F0CB  FFE3   	movff	btemp,plusw1
 12395  010914  6A32               	clrf	btemp^0,c
 12396  010916  0EED               	movlw	-19
 12397  010918  50E3               	movf	plusw1,w,c
 12398  01091A  2032               	addwfc	btemp^0,w,c
 12399  01091C  6E32               	movwf	btemp^0,c
 12400  01091E  0EED               	movlw	-19
 12401  010920  0060  F0CB  FFE3   	movff	btemp,plusw1
 12402  010926                     l9711:
 12403                           
 12404                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 12405                           ;stkvar	_m @ sp[(-56)+48]
 12406                           ;stkvar	_i @ sp[(-56)+36]
 12407  010926  50E1               	movf	fsr1l,w,c
 12408  010928  0FEC               	addlw	-20
 12409  01092A  6ED9               	movwf	fsr2l,c
 12410  01092C  50E2               	movf	fsr1h,w,c
 12411  01092E  6EDA               	movwf	fsr2h,c
 12412  010930  0EFF               	movlw	255
 12413  010932  22DA               	addwfc	fsr2h,f,c
 12414  010934  0EF8               	movlw	-8
 12415  010936  50E3               	movf	plusw1,w,c
 12416  010938  5CDE               	subwf	postinc2,w,c
 12417  01093A  50DE               	movf	postinc2,w,c
 12418  01093C  0A80               	xorlw	128
 12419  01093E  6E32               	movwf	btemp^0,c
 12420  010940  0EF9               	movlw	-7
 12421  010942  50E3               	movf	plusw1,w,c
 12422  010944  0A80               	xorlw	128
 12423  010946  5832               	subwfb	btemp^0,w,c
 12424  010948  A0D8               	btfss	status,0,c
 12425  01094A  D717               	goto	l9701
 12426                           
 12427                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 12428  01094C  0E00               	movlw	0
 12429  01094E  6EE6               	movwf	postinc1,c
 12430  010950  0E00               	movlw	0
 12431  010952  6EE6               	movwf	postinc1,c
 12432  010954  0EA0               	movlw	160
 12433  010956  6EE6               	movwf	postinc1,c
 12434  010958  0E40               	movlw	64
 12435  01095A  6EE6               	movwf	postinc1,c
 12436                           
 12437                           ;stkvar	_u @ sp[(-60)+12]
 12438  01095C  0ED0               	movlw	-48
 12439  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 12440  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 12441  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 12442  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 12443  010976  ECF8  F090         	call	___flmul	;wreg free
 12444                           
 12445                           ;stkvar	_l @ sp[(-56)+20]
 12446  01097A  0EDC               	movlw	-36
 12447  01097C  0060  F0CB  FFE3   	movff	btemp,plusw1
 12448  010982  0EDD               	movlw	-35
 12449  010984  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12450  01098A  0EDE               	movlw	-34
 12451  01098C  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12452  010992  0EDF               	movlw	-33
 12453  010994  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12454                           
 12455                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 12456                           ;stkvar	_l @ sp[(-56)+20]
 12457  01099A  0EDC               	movlw	-36
 12458  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 12459  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 12460  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 12461  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 12462                           
 12463                           ;stkvar	_h @ sp[(-60)+24]
 12464  0109B4  0EDC               	movlw	-36
 12465  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 12466  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 12467  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 12468  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12469  0109CE  EC91  F0B4         	call	___flge	;wreg free
 12470  0109D2  A032               	btfss	btemp& (0+255),0,c
 12471  0109D4  D021               	goto	u9860
 12472                           
 12473                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 12474                           ;stkvar	_l @ sp[(-56)+20]
 12475                           
 12476                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 12477                           
 12478                           ;stkvar	_l @ sp[(-56)+20]
 12479                           
 12480                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 12481  0109D6  0EDC               	movlw	-36
 12482  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 12483  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 12484  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 12485  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 12486                           
 12487                           ;stkvar	_h @ sp[(-60)+24]
 12488  0109F0  0EDC               	movlw	-36
 12489  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 12490  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 12491  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 12492  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 12493  010A0A  EC27  F0BC         	call	___fleq	;wreg free
 12494  010A0E  A032               	btfss	btemp& (0+255),0,c
 12495  010A10  D01B               	goto	l9725
 12496                           
 12497                           ;stkvar	_d @ sp[(-56)+44]
 12498  010A12  0EF4               	movlw	-12
 12499  010A14  B0E3               	btfsc	plusw1,0,c
 12500  010A16  D018               	goto	l9725
 12501  010A18                     u9860:
 12502                           
 12503                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 12504  010A18  0E00               	movlw	0
 12505  010A1A  6E3A               	movwf	(btemp+8)^0,c
 12506  010A1C  0E00               	movlw	0
 12507  010A1E  6E3B               	movwf	(btemp+9)^0,c
 12508  010A20  0E00               	movlw	0
 12509  010A22  6E3C               	movwf	(btemp+10)^0,c
 12510  010A24  0E00               	movlw	0
 12511  010A26  6E3D               	movwf	(btemp+11)^0,c
 12512                           
 12513                           ;stkvar	_l @ sp[(-56)+20]
 12514  010A28  0EDC               	movlw	-36
 12515  010A2A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12516  010A30  0EDD               	movlw	-35
 12517  010A32  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12518  010A38  0EDE               	movlw	-34
 12519  010A3A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12520  010A40  0EDF               	movlw	-33
 12521  010A42  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12522  010A48                     l9725:
 12523                           
 12524                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 12525                           ;stkvar	_l @ sp[(-56)+20]
 12526  010A48  0EDC               	movlw	-36
 12527  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 12528  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 12529  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 12530  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 12531                           
 12532                           ;stkvar	_g @ sp[(-60)+16]
 12533  010A62  0ED4               	movlw	-44
 12534  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 12535  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 12536  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 12537  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 12538  010A7C  EC0D  F095         	call	___fladd	;wreg free
 12539                           
 12540                           ;stkvar	_h @ sp[(-56)+24]
 12541  010A80  0EE0               	movlw	-32
 12542  010A82  0060  F0CB  FFE3   	movff	btemp,plusw1
 12543  010A88  0EE1               	movlw	-31
 12544  010A8A  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12545  010A90  0EE2               	movlw	-30
 12546  010A92  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12547  010A98  0EE3               	movlw	-29
 12548  010A9A  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12549                           
 12550                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 12551                           ;stkvar	_ou @ sp[(-56)+28]
 12552  010AA0  0EE4               	movlw	-28
 12553  010AA2  006F FF8C  F03A    	movff	plusw1,btemp+8
 12554  010AA8  0EE5               	movlw	-27
 12555  010AAA  006F FF8C  F03B    	movff	plusw1,btemp+9
 12556  010AB0  0EE6               	movlw	-26
 12557  010AB2  006F FF8C  F03C    	movff	plusw1,btemp+10
 12558  010AB8  0EE7               	movlw	-25
 12559  010ABA  006F FF8C  F03D    	movff	plusw1,btemp+11
 12560                           
 12561                           ;stkvar	_u @ sp[(-56)+12]
 12562  010AC0  0ED4               	movlw	-44
 12563  010AC2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12564  010AC8  0ED5               	movlw	-43
 12565  010ACA  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12566  010AD0  0ED6               	movlw	-42
 12567  010AD2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12568  010AD8  0ED7               	movlw	-41
 12569  010ADA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12570                           
 12571                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 12572                           ;stkvar	_nmode @ sp[(-56)+55]
 12573  010AE0  0EFF               	movlw	-1
 12574  010AE2  006F FF8C  F032    	movff	plusw1,btemp
 12575  010AE8  0E65               	movlw	101
 12576  010AEA  1832               	xorwf	btemp^0,w,c
 12577  010AEC  B4D8               	btfsc	status,2,c
 12578  010AEE  D011               	goto	l9733
 12579                           
 12580                           ;stkvar	_e @ sp[(-56)+34]
 12581                           ;stkvar	_ne @ sp[(-56)+46]
 12582  010AF0  0EEA               	movlw	-22
 12583  010AF2  006F FF8C  F032    	movff	plusw1,btemp
 12584  010AF8  0EF6               	movlw	-10
 12585  010AFA  0060  F0CB  FFE3   	movff	btemp,plusw1
 12586  010B00  0EEB               	movlw	-21
 12587  010B02  006F FF8C  F032    	movff	plusw1,btemp
 12588  010B08  0EF7               	movlw	-9
 12589  010B0A  0060  F0CB  FFE3   	movff	btemp,plusw1
 12590  010B10  D004               	goto	l1887
 12591  010B12                     l9733:
 12592                           
 12593                           ;stkvar	_ne @ sp[(-56)+46]
 12594  010B12  0EF6               	movlw	-10
 12595  010B14  6AE3               	clrf	plusw1,c
 12596  010B16  0EF7               	movlw	-9
 12597  010B18  6AE3               	clrf	plusw1,c
 12598  010B1A                     l1887:
 12599                           
 12600                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 12601                           ;stkvar	_pp @ sp[(-56)+50]
 12602  010B1A  0EFA               	movlw	-6
 12603  010B1C  6AE3               	clrf	plusw1,c
 12604  010B1E  0EFB               	movlw	-5
 12605  010B20  6AE3               	clrf	plusw1,c
 12606                           
 12607                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 12608                           ;stkvar	_t @ sp[(-56)+52]
 12609  010B22  0EFC               	movlw	-4
 12610  010B24  6AE3               	clrf	plusw1,c
 12611  010B26  0EFD               	movlw	-3
 12612  010B28  6AE3               	clrf	plusw1,c
 12613                           
 12614                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 12615                           ;stkvar	_i @ sp[(-56)+36]
 12616  010B2A  0EEC               	movlw	-20
 12617  010B2C  6AE3               	clrf	plusw1,c
 12618  010B2E  0EED               	movlw	-19
 12619  010B30  6AE3               	clrf	plusw1,c
 12620                           
 12621                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 12622  010B32  D1B7               	goto	l9785
 12623  010B34                     l9735:
 12624                           
 12625                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 12626                           ;stkvar	_u @ sp[(-56)+12]
 12627  010B34  0ED4               	movlw	-44
 12628  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 12629  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 12630  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 12631  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 12632                           
 12633                           ;stkvar	_h @ sp[(-60)+24]
 12634  010B4E  0EDC               	movlw	-36
 12635  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 12636  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 12637  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 12638  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 12639  010B68  ECAE  F09B         	call	___fldiv	;wreg free
 12640  010B6C  0060  F0CB  FFE6   	movff	btemp,postinc1
 12641  010B72  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 12642  010B78  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 12643  010B7E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 12644  010B84  EC8D  F0A4         	call	_floorf	;wreg free
 12645                           
 12646                           ;stkvar	_l @ sp[(-56)+20]
 12647  010B88  0EDC               	movlw	-36
 12648  010B8A  0060  F0CB  FFE3   	movff	btemp,plusw1
 12649  010B90  0EDD               	movlw	-35
 12650  010B92  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12651  010B98  0EDE               	movlw	-34
 12652  010B9A  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12653  010BA0  0EDF               	movlw	-33
 12654  010BA2  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12655                           
 12656                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 12657                           ;stkvar	_l @ sp[(-56)+20]
 12658  010BA8  0EDC               	movlw	-36
 12659  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 12660  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 12661  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 12662  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 12663  010BC2  ECD8  F0B3         	call	___fltol	;wreg free
 12664  010BC6  0060  F0C8  F03C   	movff	btemp,btemp+10
 12665  010BCC  0060  F0CC  F03D   	movff	btemp+1,btemp+11
 12666                           
 12667                           ;stkvar	_d @ sp[(-56)+44]
 12668  010BD2  0EF4               	movlw	-12
 12669  010BD4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12670  010BDA  0EF5               	movlw	-11
 12671  010BDC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12672                           
 12673                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 12674  010BE2  B81F               	btfsc	_flags^0,4,c
 12675  010BE4  D026               	goto	l9749
 12676                           
 12677                           ;stkvar	_d @ sp[(-56)+44]
 12678  010BE6  0EF4               	movlw	-12
 12679  010BE8  006F FF8C  F032    	movff	plusw1,btemp
 12680  010BEE  0EF5               	movlw	-11
 12681  010BF0  50E3               	movf	plusw1,w,c
 12682  010BF2  1032               	iorwf	btemp^0,w,c
 12683  010BF4  A4D8               	btfss	status,2,c
 12684  010BF6  D01D               	goto	l9749
 12685                           
 12686                           ;stkvar	_mode @ sp[(-56)+54]
 12687  010BF8  0EFE               	movlw	-2
 12688  010BFA  006F FF8C  F032    	movff	plusw1,btemp
 12689  010C00  0E67               	movlw	103
 12690  010C02  1832               	xorwf	btemp^0,w,c
 12691  010C04  A4D8               	btfss	status,2,c
 12692  010C06  D015               	goto	l9749
 12693                           
 12694                           ;stkvar	_ne @ sp[(-56)+46]
 12695  010C08  0EF7               	movlw	-9
 12696  010C0A  AEE3               	btfss	plusw1,7,c
 12697  010C0C  D012               	goto	l9749
 12698                           
 12699                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 12700                           ;stkvar	_t @ sp[(-56)+52]
 12701  010C0E  0EFC               	movlw	-4
 12702  010C10  50E3               	movf	plusw1,w,c
 12703  010C12  0F01               	addlw	1
 12704  010C14  6E32               	movwf	btemp^0,c
 12705  010C16  0EFC               	movlw	-4
 12706  010C18  0060  F0CB  FFE3   	movff	btemp,plusw1
 12707  010C1E  6A32               	clrf	btemp^0,c
 12708  010C20  0EFD               	movlw	-3
 12709  010C22  50E3               	movf	plusw1,w,c
 12710  010C24  2032               	addwfc	btemp^0,w,c
 12711  010C26  6E32               	movwf	btemp^0,c
 12712  010C28  0EFD               	movlw	-3
 12713  010C2A  0060  F0CB  FFE3   	movff	btemp,plusw1
 12714                           
 12715                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 12716  010C30  D0AF               	goto	l9777
 12717  010C32                     l9749:
 12718                           
 12719                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 12720                           ;stkvar	_pp @ sp[(-56)+50]
 12721  010C32  0EFA               	movlw	-6
 12722  010C34  006F FF8C  F032    	movff	plusw1,btemp
 12723  010C3A  0EFB               	movlw	-5
 12724  010C3C  50E3               	movf	plusw1,w,c
 12725  010C3E  1032               	iorwf	btemp^0,w,c
 12726  010C40  A4D8               	btfss	status,2,c
 12727  010C42  D070               	goto	l9769
 12728                           
 12729                           ;stkvar	_ne @ sp[(-56)+46]
 12730  010C44  0EF7               	movlw	-9
 12731  010C46  AEE3               	btfss	plusw1,7,c
 12732  010C48  D06D               	goto	l9769
 12733                           
 12734                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 12735                           ;stkvar	_n @ sp[(-56)+32]
 12736  010C4A  0EE8               	movlw	-24
 12737  010C4C  006F FF8C  F03C    	movff	plusw1,btemp+10
 12738  010C52  0EE9               	movlw	-23
 12739  010C54  006F FF8C  F03D    	movff	plusw1,btemp+11
 12740  010C5A  0EAC               	movlw	low _dbuf
 12741  010C5C  243C               	addwf	(btemp+10)^0,w,c
 12742  010C5E  6ED9               	movwf	fsr2l,c
 12743  010C60  0E02               	movlw	high _dbuf
 12744  010C62  203D               	addwfc	(btemp+11)^0,w,c
 12745  010C64  6EDA               	movwf	fsr2h,c
 12746  010C66  0E2E               	movlw	46
 12747  010C68  6EDF               	movwf	indf2,c
 12748                           
 12749                           ;stkvar	_n @ sp[(-56)+32]
 12750  010C6A  0EE8               	movlw	-24
 12751  010C6C  50E3               	movf	plusw1,w,c
 12752  010C6E  0F01               	addlw	1
 12753  010C70  6E32               	movwf	btemp^0,c
 12754  010C72  0EE8               	movlw	-24
 12755  010C74  0060  F0CB  FFE3   	movff	btemp,plusw1
 12756  010C7A  6A32               	clrf	btemp^0,c
 12757  010C7C  0EE9               	movlw	-23
 12758  010C7E  50E3               	movf	plusw1,w,c
 12759  010C80  2032               	addwfc	btemp^0,w,c
 12760  010C82  6E32               	movwf	btemp^0,c
 12761  010C84  0EE9               	movlw	-23
 12762  010C86  0060  F0CB  FFE3   	movff	btemp,plusw1
 12763                           
 12764                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 12765                           ;stkvar	_w @ sp[(-56)+38]
 12766  010C8C  50E1               	movf	fsr1l,w,c
 12767  010C8E  0FEE               	addlw	-18
 12768  010C90  6ED9               	movwf	fsr2l,c
 12769  010C92  50E2               	movf	fsr1h,w,c
 12770  010C94  6EDA               	movwf	fsr2h,c
 12771  010C96  0EFF               	movlw	255
 12772  010C98  22DA               	addwfc	fsr2h,f,c
 12773  010C9A  06DE               	decf	postinc2,f,c
 12774  010C9C  0E00               	movlw	0
 12775  010C9E  5ADD               	subwfb	postdec2,f,c
 12776                           
 12777                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 12778  010CA0  0E01               	movlw	1
 12779  010CA2  6E3C               	movwf	(btemp+10)^0,c
 12780  010CA4  0E00               	movlw	0
 12781  010CA6  6E3D               	movwf	(btemp+11)^0,c
 12782                           
 12783                           ;stkvar	_pp @ sp[(-56)+50]
 12784  010CA8  0EFA               	movlw	-6
 12785  010CAA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12786  010CB0  0EFB               	movlw	-5
 12787  010CB2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12788  010CB8  D035               	goto	l9769
 12789  010CBA                     l9761:
 12790                           
 12791                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 12792                           ;stkvar	_n @ sp[(-56)+32]
 12793  010CBA  0EE8               	movlw	-24
 12794  010CBC  006F FF8C  F03C    	movff	plusw1,btemp+10
 12795  010CC2  0EE9               	movlw	-23
 12796  010CC4  006F FF8C  F03D    	movff	plusw1,btemp+11
 12797  010CCA  0EAC               	movlw	low _dbuf
 12798  010CCC  243C               	addwf	(btemp+10)^0,w,c
 12799  010CCE  6ED9               	movwf	fsr2l,c
 12800  010CD0  0E02               	movlw	high _dbuf
 12801  010CD2  203D               	addwfc	(btemp+11)^0,w,c
 12802  010CD4  6EDA               	movwf	fsr2h,c
 12803  010CD6  0E30               	movlw	48
 12804  010CD8  6EDF               	movwf	indf2,c
 12805                           
 12806                           ;stkvar	_n @ sp[(-56)+32]
 12807  010CDA  0EE8               	movlw	-24
 12808  010CDC  50E3               	movf	plusw1,w,c
 12809  010CDE  0F01               	addlw	1
 12810  010CE0  6E32               	movwf	btemp^0,c
 12811  010CE2  0EE8               	movlw	-24
 12812  010CE4  0060  F0CB  FFE3   	movff	btemp,plusw1
 12813  010CEA  6A32               	clrf	btemp^0,c
 12814  010CEC  0EE9               	movlw	-23
 12815  010CEE  50E3               	movf	plusw1,w,c
 12816  010CF0  2032               	addwfc	btemp^0,w,c
 12817  010CF2  6E32               	movwf	btemp^0,c
 12818  010CF4  0EE9               	movlw	-23
 12819  010CF6  0060  F0CB  FFE3   	movff	btemp,plusw1
 12820                           
 12821                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 12822                           ;stkvar	_w @ sp[(-56)+38]
 12823  010CFC  50E1               	movf	fsr1l,w,c
 12824  010CFE  0FEE               	addlw	-18
 12825  010D00  6ED9               	movwf	fsr2l,c
 12826  010D02  50E2               	movf	fsr1h,w,c
 12827  010D04  6EDA               	movwf	fsr2h,c
 12828  010D06  0EFF               	movlw	255
 12829  010D08  22DA               	addwfc	fsr2h,f,c
 12830  010D0A  06DE               	decf	postinc2,f,c
 12831  010D0C  0E00               	movlw	0
 12832  010D0E  5ADD               	subwfb	postdec2,f,c
 12833                           
 12834                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 12835                           ;stkvar	_t @ sp[(-56)+52]
 12836  010D10  50E1               	movf	fsr1l,w,c
 12837  010D12  0FFC               	addlw	-4
 12838  010D14  6ED9               	movwf	fsr2l,c
 12839  010D16  50E2               	movf	fsr1h,w,c
 12840  010D18  6EDA               	movwf	fsr2h,c
 12841  010D1A  0EFF               	movlw	255
 12842  010D1C  22DA               	addwfc	fsr2h,f,c
 12843  010D1E  06DE               	decf	postinc2,f,c
 12844  010D20  0E00               	movlw	0
 12845  010D22  5ADD               	subwfb	postdec2,f,c
 12846  010D24                     l9769:
 12847                           
 12848                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 12849                           ;stkvar	_t @ sp[(-56)+52]
 12850  010D24  0EFC               	movlw	-4
 12851  010D26  006F FF8C  F032    	movff	plusw1,btemp
 12852  010D2C  0EFD               	movlw	-3
 12853  010D2E  50E3               	movf	plusw1,w,c
 12854  010D30  1032               	iorwf	btemp^0,w,c
 12855  010D32  A4D8               	btfss	status,2,c
 12856  010D34  D7C2               	goto	l9761
 12857                           
 12858                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 12859                           ;stkvar	_n @ sp[(-56)+32]
 12860  010D36  0EE8               	movlw	-24
 12861  010D38  006F FF8C  F03C    	movff	plusw1,btemp+10
 12862  010D3E  0EE9               	movlw	-23
 12863  010D40  006F FF8C  F03D    	movff	plusw1,btemp+11
 12864  010D46  0EAC               	movlw	low _dbuf
 12865  010D48  243C               	addwf	(btemp+10)^0,w,c
 12866  010D4A  6ED9               	movwf	fsr2l,c
 12867  010D4C  0E02               	movlw	high _dbuf
 12868  010D4E  203D               	addwfc	(btemp+11)^0,w,c
 12869  010D50  6EDA               	movwf	fsr2h,c
 12870                           
 12871                           ;stkvar	_d @ sp[(-56)+44]
 12872  010D52  0EF4               	movlw	-12
 12873  010D54  50E3               	movf	plusw1,w,c
 12874  010D56  0F30               	addlw	48
 12875  010D58  6EDF               	movwf	indf2,c
 12876                           
 12877                           ;stkvar	_n @ sp[(-56)+32]
 12878  010D5A  0EE8               	movlw	-24
 12879  010D5C  50E3               	movf	plusw1,w,c
 12880  010D5E  0F01               	addlw	1
 12881  010D60  6E32               	movwf	btemp^0,c
 12882  010D62  0EE8               	movlw	-24
 12883  010D64  0060  F0CB  FFE3   	movff	btemp,plusw1
 12884  010D6A  6A32               	clrf	btemp^0,c
 12885  010D6C  0EE9               	movlw	-23
 12886  010D6E  50E3               	movf	plusw1,w,c
 12887  010D70  2032               	addwfc	btemp^0,w,c
 12888  010D72  6E32               	movwf	btemp^0,c
 12889  010D74  0EE9               	movlw	-23
 12890  010D76  0060  F0CB  FFE3   	movff	btemp,plusw1
 12891                           
 12892                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 12893                           ;stkvar	_w @ sp[(-56)+38]
 12894  010D7C  50E1               	movf	fsr1l,w,c
 12895  010D7E  0FEE               	addlw	-18
 12896  010D80  6ED9               	movwf	fsr2l,c
 12897  010D82  50E2               	movf	fsr1h,w,c
 12898  010D84  6EDA               	movwf	fsr2h,c
 12899  010D86  0EFF               	movlw	255
 12900  010D88  22DA               	addwfc	fsr2h,f,c
 12901  010D8A  06DE               	decf	postinc2,f,c
 12902  010D8C  0E00               	movlw	0
 12903  010D8E  5ADD               	subwfb	postdec2,f,c
 12904  010D90                     l9777:
 12905                           
 12906                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 12907                           ;stkvar	_u @ sp[(-56)+12]
 12908  010D90  0ED4               	movlw	-44
 12909  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 12910  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 12911  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 12912  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 12913                           
 12914                           ;stkvar	_l @ sp[(-60)+20]
 12915  010DAA  0ED8               	movlw	-40
 12916  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 12917  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 12918  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 12919  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 12920  010DC4  ECF8  F090         	call	___flmul	;wreg free
 12921  010DC8  0060  F0CB  FFE6   	movff	btemp,postinc1
 12922  010DCE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 12923  010DD4  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 12924  010DDA  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 12925                           
 12926                           ;stkvar	_h @ sp[(-60)+24]
 12927  010DE0  0EDC               	movlw	-36
 12928  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 12929  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 12930  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 12931  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 12932  010DFA  ECBC  F0C2         	call	___flsub	;wreg free
 12933                           
 12934                           ;stkvar	_h @ sp[(-56)+24]
 12935  010DFE  0EE0               	movlw	-32
 12936  010E00  0060  F0CB  FFE3   	movff	btemp,plusw1
 12937  010E06  0EE1               	movlw	-31
 12938  010E08  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12939  010E0E  0EE2               	movlw	-30
 12940  010E10  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12941  010E16  0EE3               	movlw	-29
 12942  010E18  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12943                           
 12944                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 12945  010E1E  0E00               	movlw	0
 12946  010E20  6EE6               	movwf	postinc1,c
 12947  010E22  0E00               	movlw	0
 12948  010E24  6EE6               	movwf	postinc1,c
 12949  010E26  0E20               	movlw	32
 12950  010E28  6EE6               	movwf	postinc1,c
 12951  010E2A  0E41               	movlw	65
 12952  010E2C  6EE6               	movwf	postinc1,c
 12953                           
 12954                           ;stkvar	_u @ sp[(-60)+12]
 12955  010E2E  0ED0               	movlw	-48
 12956  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 12957  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 12958  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 12959  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 12960  010E48  ECAE  F09B         	call	___fldiv	;wreg free
 12961                           
 12962                           ;stkvar	_u @ sp[(-56)+12]
 12963  010E4C  0ED4               	movlw	-44
 12964  010E4E  0060  F0CB  FFE3   	movff	btemp,plusw1
 12965  010E54  0ED5               	movlw	-43
 12966  010E56  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12967  010E5C  0ED6               	movlw	-42
 12968  010E5E  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 12969  010E64  0ED7               	movlw	-41
 12970  010E66  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 12971                           
 12972                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 12973                           ;stkvar	_ne @ sp[(-56)+46]
 12974  010E6C  50E1               	movf	fsr1l,w,c
 12975  010E6E  0FF6               	addlw	-10
 12976  010E70  6ED9               	movwf	fsr2l,c
 12977  010E72  50E2               	movf	fsr1h,w,c
 12978  010E74  6EDA               	movwf	fsr2h,c
 12979  010E76  0EFF               	movlw	255
 12980  010E78  22DA               	addwfc	fsr2h,f,c
 12981  010E7A  06DE               	decf	postinc2,f,c
 12982  010E7C  0E00               	movlw	0
 12983  010E7E  5ADD               	subwfb	postdec2,f,c
 12984                           
 12985                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 12986                           ;stkvar	_i @ sp[(-56)+36]
 12987  010E80  0EEC               	movlw	-20
 12988  010E82  50E3               	movf	plusw1,w,c
 12989  010E84  0F01               	addlw	1
 12990  010E86  6E32               	movwf	btemp^0,c
 12991  010E88  0EEC               	movlw	-20
 12992  010E8A  0060  F0CB  FFE3   	movff	btemp,plusw1
 12993  010E90  6A32               	clrf	btemp^0,c
 12994  010E92  0EED               	movlw	-19
 12995  010E94  50E3               	movf	plusw1,w,c
 12996  010E96  2032               	addwfc	btemp^0,w,c
 12997  010E98  6E32               	movwf	btemp^0,c
 12998  010E9A  0EED               	movlw	-19
 12999  010E9C  0060  F0CB  FFE3   	movff	btemp,plusw1
 13000  010EA2                     l9785:
 13001                           
 13002                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 13003                           ;stkvar	_m @ sp[(-56)+48]
 13004                           ;stkvar	_i @ sp[(-56)+36]
 13005  010EA2  50E1               	movf	fsr1l,w,c
 13006  010EA4  0FEC               	addlw	-20
 13007  010EA6  6ED9               	movwf	fsr2l,c
 13008  010EA8  50E2               	movf	fsr1h,w,c
 13009  010EAA  6EDA               	movwf	fsr2h,c
 13010  010EAC  0EFF               	movlw	255
 13011  010EAE  22DA               	addwfc	fsr2h,f,c
 13012  010EB0  0EF8               	movlw	-8
 13013  010EB2  50E3               	movf	plusw1,w,c
 13014  010EB4  5CDE               	subwf	postinc2,w,c
 13015  010EB6  50DE               	movf	postinc2,w,c
 13016  010EB8  0A80               	xorlw	128
 13017  010EBA  6E32               	movwf	btemp^0,c
 13018  010EBC  0EF9               	movlw	-7
 13019  010EBE  50E3               	movf	plusw1,w,c
 13020  010EC0  0A80               	xorlw	128
 13021  010EC2  5832               	subwfb	btemp^0,w,c
 13022  010EC4  B0D8               	btfsc	status,0,c
 13023  010EC6  D00E               	goto	u9960
 13024                           
 13025                           ;stkvar	_n @ sp[(-56)+32]
 13026  010EC8  0EE9               	movlw	-23
 13027  010ECA  BEE3               	btfsc	plusw1,7,c
 13028  010ECC  D633               	goto	l9735
 13029  010ECE  0EE9               	movlw	-23
 13030  010ED0  50E3               	movf	plusw1,w,c
 13031  010ED2  E108               	bnz	u9960
 13032  010ED4  0EE8               	movlw	-24
 13033  010ED6  006F FF8C  F032    	movff	plusw1,btemp
 13034  010EDC  0E4B               	movlw	75
 13035  010EDE  5E32               	subwf	btemp^0,f,c
 13036  010EE0  A0D8               	btfss	status,0,c
 13037  010EE2  D628               	goto	l9735
 13038  010EE4                     u9960:
 13039                           
 13040                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 13041                           ;stkvar	_pp @ sp[(-56)+50]
 13042  010EE4  0EFA               	movlw	-6
 13043  010EE6  006F FF8C  F032    	movff	plusw1,btemp
 13044  010EEC  0EFB               	movlw	-5
 13045  010EEE  50E3               	movf	plusw1,w,c
 13046  010EF0  1032               	iorwf	btemp^0,w,c
 13047  010EF2  B4D8               	btfsc	status,2,c
 13048  010EF4  A81F               	btfss	_flags^0,4,c
 13049  010EF6  D021               	goto	l9797
 13050                           
 13051                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 13052                           ;stkvar	_n @ sp[(-56)+32]
 13053  010EF8  0EE8               	movlw	-24
 13054  010EFA  006F FF8C  F03C    	movff	plusw1,btemp+10
 13055  010F00  0EE9               	movlw	-23
 13056  010F02  006F FF8C  F03D    	movff	plusw1,btemp+11
 13057  010F08  0EAC               	movlw	low _dbuf
 13058  010F0A  243C               	addwf	(btemp+10)^0,w,c
 13059  010F0C  6ED9               	movwf	fsr2l,c
 13060  010F0E  0E02               	movlw	high _dbuf
 13061  010F10  203D               	addwfc	(btemp+11)^0,w,c
 13062  010F12  6EDA               	movwf	fsr2h,c
 13063  010F14  0E2E               	movlw	46
 13064  010F16  6EDF               	movwf	indf2,c
 13065                           
 13066                           ;stkvar	_n @ sp[(-56)+32]
 13067  010F18  0EE8               	movlw	-24
 13068  010F1A  50E3               	movf	plusw1,w,c
 13069  010F1C  0F01               	addlw	1
 13070  010F1E  6E32               	movwf	btemp^0,c
 13071  010F20  0EE8               	movlw	-24
 13072  010F22  0060  F0CB  FFE3   	movff	btemp,plusw1
 13073  010F28  6A32               	clrf	btemp^0,c
 13074  010F2A  0EE9               	movlw	-23
 13075  010F2C  50E3               	movf	plusw1,w,c
 13076  010F2E  2032               	addwfc	btemp^0,w,c
 13077  010F30  6E32               	movwf	btemp^0,c
 13078  010F32  0EE9               	movlw	-23
 13079  010F34  0060  F0CB  FFE3   	movff	btemp,plusw1
 13080  010F3A                     l9797:
 13081                           
 13082                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 13083                           ;stkvar	_n @ sp[(-56)+32]
 13084  010F3A  0EE8               	movlw	-24
 13085  010F3C  006F FF8C  F03C    	movff	plusw1,btemp+10
 13086  010F42  0EE9               	movlw	-23
 13087  010F44  006F FF8C  F03D    	movff	plusw1,btemp+11
 13088  010F4A  0EAC               	movlw	low _dbuf
 13089  010F4C  243C               	addwf	(btemp+10)^0,w,c
 13090  010F4E  6ED9               	movwf	fsr2l,c
 13091  010F50  0E02               	movlw	high _dbuf
 13092  010F52  203D               	addwfc	(btemp+11)^0,w,c
 13093  010F54  6EDA               	movwf	fsr2h,c
 13094  010F56  0E00               	movlw	0
 13095  010F58  6EDF               	movwf	indf2,c
 13096                           
 13097                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 13098                           ;stkvar	_nmode @ sp[(-56)+55]
 13099  010F5A  0EFF               	movlw	-1
 13100  010F5C  006F FF8C  F032    	movff	plusw1,btemp
 13101  010F62  0E65               	movlw	101
 13102  010F64  1832               	xorwf	btemp^0,w,c
 13103  010F66  A4D8               	btfss	status,2,c
 13104  010F68  EF16  F081         	goto	l9601
 13105                           
 13106                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 13107  010F6C  0E4F               	movlw	79
 13108  010F6E  6E3C               	movwf	(btemp+10)^0,c
 13109  010F70  0E00               	movlw	0
 13110  010F72  6E3D               	movwf	(btemp+11)^0,c
 13111                           
 13112                           ;stkvar	_i @ sp[(-56)+36]
 13113  010F74  0EEC               	movlw	-20
 13114  010F76  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13115  010F7C  0EED               	movlw	-19
 13116  010F7E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13117                           
 13118                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 13119                           ;stkvar	_i @ sp[(-56)+36]
 13120  010F84  0EEC               	movlw	-20
 13121  010F86  006F FF8C  F03C    	movff	plusw1,btemp+10
 13122  010F8C  0EED               	movlw	-19
 13123  010F8E  006F FF8C  F03D    	movff	plusw1,btemp+11
 13124  010F94  0EAC               	movlw	low _dbuf
 13125  010F96  243C               	addwf	(btemp+10)^0,w,c
 13126  010F98  6ED9               	movwf	fsr2l,c
 13127  010F9A  0E02               	movlw	high _dbuf
 13128  010F9C  203D               	addwfc	(btemp+11)^0,w,c
 13129  010F9E  6EDA               	movwf	fsr2h,c
 13130  010FA0  0E00               	movlw	0
 13131  010FA2  6EDF               	movwf	indf2,c
 13132                           
 13133                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 13134                           ;stkvar	_sign @ sp[(-56)+42]
 13135  010FA4  0EF2               	movlw	-14
 13136  010FA6  6AE3               	clrf	plusw1,c
 13137  010FA8  0EF3               	movlw	-13
 13138  010FAA  6AE3               	clrf	plusw1,c
 13139                           
 13140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 13141                           ;stkvar	_e @ sp[(-56)+34]
 13142  010FAC  0EEB               	movlw	-21
 13143  010FAE  AEE3               	btfss	plusw1,7,c
 13144  010FB0  D012               	goto	l9811
 13145                           
 13146                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 13147  010FB2  0E01               	movlw	1
 13148  010FB4  6E3C               	movwf	(btemp+10)^0,c
 13149  010FB6  0E00               	movlw	0
 13150  010FB8  6E3D               	movwf	(btemp+11)^0,c
 13151                           
 13152                           ;stkvar	_sign @ sp[(-56)+42]
 13153  010FBA  0EF2               	movlw	-14
 13154  010FBC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13155  010FC2  0EF3               	movlw	-13
 13156  010FC4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13157                           
 13158                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 13159                           ;stkvar	_e @ sp[(-56)+34]
 13160                           ;stkvar	_e @ sp[(-56)+34]
 13161  010FCA  0EEA               	movlw	-22
 13162  010FCC  6CE3               	negf	plusw1,c
 13163  010FCE  0EEB               	movlw	-21
 13164  010FD0  1EE3               	comf	plusw1,f,c
 13165  010FD2  B0D8               	btfsc	status,0,c
 13166  010FD4  2AE3               	incf	plusw1,f,c
 13167  010FD6                     l9811:
 13168                           
 13169                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 13170  010FD6  0E02               	movlw	2
 13171  010FD8  6E3C               	movwf	(btemp+10)^0,c
 13172  010FDA  0E00               	movlw	0
 13173  010FDC  6E3D               	movwf	(btemp+11)^0,c
 13174                           
 13175                           ;stkvar	_p @ sp[(-56)+40]
 13176  010FDE  0EF0               	movlw	-16
 13177  010FE0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13178  010FE6  0EF1               	movlw	-15
 13179  010FE8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13180                           
 13181                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 13182  010FEE  D051               	goto	l9823
 13183  010FF0                     l9813:
 13184                           
 13185                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 13186                           ;stkvar	_i @ sp[(-56)+36]
 13187  010FF0  50E1               	movf	fsr1l,w,c
 13188  010FF2  0FEC               	addlw	-20
 13189  010FF4  6ED9               	movwf	fsr2l,c
 13190  010FF6  50E2               	movf	fsr1h,w,c
 13191  010FF8  6EDA               	movwf	fsr2h,c
 13192  010FFA  0EFF               	movlw	255
 13193  010FFC  22DA               	addwfc	fsr2h,f,c
 13194  010FFE  06DE               	decf	postinc2,f,c
 13195  011000  0E00               	movlw	0
 13196  011002  5ADD               	subwfb	postdec2,f,c
 13197                           
 13198                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 13199                           ;stkvar	_i @ sp[(-56)+36]
 13200  011004  0EEC               	movlw	-20
 13201  011006  006F FF8C  F03C    	movff	plusw1,btemp+10
 13202  01100C  0EED               	movlw	-19
 13203  01100E  006F FF8C  F03D    	movff	plusw1,btemp+11
 13204  011014  0EAC               	movlw	low _dbuf
 13205  011016  243C               	addwf	(btemp+10)^0,w,c
 13206  011018  6ED9               	movwf	fsr2l,c
 13207  01101A  0E02               	movlw	high _dbuf
 13208  01101C  203D               	addwfc	(btemp+11)^0,w,c
 13209  01101E  6EDA               	movwf	fsr2h,c
 13210  011020  0E0A               	movlw	10
 13211  011022  6EE6               	movwf	postinc1,c
 13212  011024  0E00               	movlw	0
 13213  011026  6EE6               	movwf	postinc1,c
 13214                           
 13215                           ;stkvar	_e @ sp[(-58)+34]
 13216  011028  0EE8               	movlw	-24
 13217  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 13218  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 13219  011036  EC51  F0B8         	call	___awmod	;wreg free
 13220  01103A  5032               	movf	btemp^0,w,c
 13221  01103C  0F30               	addlw	48
 13222  01103E  6EDF               	movwf	indf2,c
 13223                           
 13224                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 13225  011040  0E0A               	movlw	10
 13226  011042  6EE6               	movwf	postinc1,c
 13227  011044  0E00               	movlw	0
 13228  011046  6EE6               	movwf	postinc1,c
 13229                           
 13230                           ;stkvar	_e @ sp[(-58)+34]
 13231  011048  0EE8               	movlw	-24
 13232  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 13233  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 13234  011056  EC42  F0B5         	call	___awdiv	;wreg free
 13235                           
 13236                           ;stkvar	_e @ sp[(-56)+34]
 13237  01105A  0EEA               	movlw	-22
 13238  01105C  0060  F0CB  FFE3   	movff	btemp,plusw1
 13239  011062  0EEB               	movlw	-21
 13240  011064  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 13241                           
 13242                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 13243                           ;stkvar	_p @ sp[(-56)+40]
 13244  01106A  50E1               	movf	fsr1l,w,c
 13245  01106C  0FF0               	addlw	-16
 13246  01106E  6ED9               	movwf	fsr2l,c
 13247  011070  50E2               	movf	fsr1h,w,c
 13248  011072  6EDA               	movwf	fsr2h,c
 13249  011074  0EFF               	movlw	255
 13250  011076  22DA               	addwfc	fsr2h,f,c
 13251  011078  06DE               	decf	postinc2,f,c
 13252  01107A  0E00               	movlw	0
 13253  01107C  5ADD               	subwfb	postdec2,f,c
 13254                           
 13255                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 13256                           ;stkvar	_w @ sp[(-56)+38]
 13257  01107E  50E1               	movf	fsr1l,w,c
 13258  011080  0FEE               	addlw	-18
 13259  011082  6ED9               	movwf	fsr2l,c
 13260  011084  50E2               	movf	fsr1h,w,c
 13261  011086  6EDA               	movwf	fsr2h,c
 13262  011088  0EFF               	movlw	255
 13263  01108A  22DA               	addwfc	fsr2h,f,c
 13264  01108C  06DE               	decf	postinc2,f,c
 13265  01108E  0E00               	movlw	0
 13266  011090  5ADD               	subwfb	postdec2,f,c
 13267  011092                     l9823:
 13268                           
 13269                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 13270                           ;stkvar	_e @ sp[(-56)+34]
 13271  011092  0EEA               	movlw	-22
 13272  011094  006F FF8C  F032    	movff	plusw1,btemp
 13273  01109A  0EEB               	movlw	-21
 13274  01109C  50E3               	movf	plusw1,w,c
 13275  01109E  1032               	iorwf	btemp^0,w,c
 13276  0110A0  A4D8               	btfss	status,2,c
 13277  0110A2  D7A6               	goto	l9813
 13278                           
 13279                           ;stkvar	_p @ sp[(-56)+40]
 13280  0110A4  0EF1               	movlw	-15
 13281  0110A6  BEE3               	btfsc	plusw1,7,c
 13282  0110A8  D007               	goto	u10020
 13283  0110AA  0EF1               	movlw	-15
 13284  0110AC  50E3               	movf	plusw1,w,c
 13285  0110AE  E1A0               	bnz	l9813
 13286  0110B0  0EF0               	movlw	-16
 13287  0110B2  04E3               	decf	plusw1,w,c
 13288  0110B4  B0D8               	btfsc	status,0,c
 13289  0110B6  D79C               	goto	l9813
 13290  0110B8                     u10020:
 13291                           
 13292                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 13293                           ;stkvar	_i @ sp[(-56)+36]
 13294  0110B8  50E1               	movf	fsr1l,w,c
 13295  0110BA  0FEC               	addlw	-20
 13296  0110BC  6ED9               	movwf	fsr2l,c
 13297  0110BE  50E2               	movf	fsr1h,w,c
 13298  0110C0  6EDA               	movwf	fsr2h,c
 13299  0110C2  0EFF               	movlw	255
 13300  0110C4  22DA               	addwfc	fsr2h,f,c
 13301  0110C6  06DE               	decf	postinc2,f,c
 13302  0110C8  0E00               	movlw	0
 13303  0110CA  5ADD               	subwfb	postdec2,f,c
 13304                           
 13305                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 13306                           ;stkvar	_sign @ sp[(-56)+42]
 13307  0110CC  0EF2               	movlw	-14
 13308  0110CE  006F FF8C  F032    	movff	plusw1,btemp
 13309  0110D4  0EF3               	movlw	-13
 13310  0110D6  50E3               	movf	plusw1,w,c
 13311  0110D8  1032               	iorwf	btemp^0,w,c
 13312  0110DA  A4D8               	btfss	status,2,c
 13313  0110DC  D002               	goto	l9833
 13314  0110DE  0E2B               	movlw	43
 13315  0110E0  D001               	goto	L13
 13316  0110E2                     l9833:
 13317  0110E2  0E2D               	movlw	45
 13318  0110E4                     L13:
 13319  0110E4  6E3C               	movwf	(btemp+10)^0,c
 13320  0110E6  0E00               	movlw	0
 13321  0110E8  6E3D               	movwf	(btemp+11)^0,c
 13322                           
 13323                           ;stkvar	_efgtoa$4383 @ sp[(-56)+4]
 13324  0110EA  0ECC               	movlw	-52
 13325  0110EC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13326  0110F2  0ECD               	movlw	-51
 13327  0110F4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13328                           
 13329                           ;stkvar	_efgtoa$4383 @ sp[(-56)+4]
 13330                           ;stkvar	_i @ sp[(-56)+36]
 13331  0110FA  0EEC               	movlw	-20
 13332  0110FC  006F FF8C  F03C    	movff	plusw1,btemp+10
 13333  011102  0EED               	movlw	-19
 13334  011104  006F FF8C  F03D    	movff	plusw1,btemp+11
 13335  01110A  0EAC               	movlw	low _dbuf
 13336  01110C  243C               	addwf	(btemp+10)^0,w,c
 13337  01110E  6ED9               	movwf	fsr2l,c
 13338  011110  0E02               	movlw	high _dbuf
 13339  011112  203D               	addwfc	(btemp+11)^0,w,c
 13340  011114  6EDA               	movwf	fsr2h,c
 13341  011116  0ECC               	movlw	-52
 13342  011118  006F FF8F FFDF     	movff	plusw1,indf2
 13343                           
 13344                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 13345                           ;stkvar	_w @ sp[(-56)+38]
 13346  01111E  50E1               	movf	fsr1l,w,c
 13347  011120  0FEE               	addlw	-18
 13348  011122  6ED9               	movwf	fsr2l,c
 13349  011124  50E2               	movf	fsr1h,w,c
 13350  011126  6EDA               	movwf	fsr2h,c
 13351  011128  0EFF               	movlw	255
 13352  01112A  22DA               	addwfc	fsr2h,f,c
 13353  01112C  06DE               	decf	postinc2,f,c
 13354  01112E  0E00               	movlw	0
 13355  011130  5ADD               	subwfb	postdec2,f,c
 13356                           
 13357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 13358                           ;stkvar	_i @ sp[(-56)+36]
 13359  011132  50E1               	movf	fsr1l,w,c
 13360  011134  0FEC               	addlw	-20
 13361  011136  6ED9               	movwf	fsr2l,c
 13362  011138  50E2               	movf	fsr1h,w,c
 13363  01113A  6EDA               	movwf	fsr2h,c
 13364  01113C  0EFF               	movlw	255
 13365  01113E  22DA               	addwfc	fsr2h,f,c
 13366  011140  06DE               	decf	postinc2,f,c
 13367  011142  0E00               	movlw	0
 13368  011144  5ADD               	subwfb	postdec2,f,c
 13369  011146  0EBF               	movlw	191
 13370  011148  6E3C               	movwf	(btemp+10)^0,c
 13371  01114A  0EFF               	movlw	255
 13372  01114C  6E3D               	movwf	(btemp+11)^0,c
 13373                           
 13374                           ;stkvar	_c @ sp[(-56)+-7]
 13375  01114E  0EC1               	movlw	-63
 13376  011150  50E3               	movf	plusw1,w,c
 13377  011152  6E3A               	movwf	(btemp+8)^0,c
 13378  011154  6A3B               	clrf	(btemp+9)^0,c
 13379  011156  503C               	movf	(btemp+10)^0,w,c
 13380  011158  263A               	addwf	(btemp+8)^0,f,c
 13381  01115A  503D               	movf	(btemp+11)^0,w,c
 13382  01115C  223B               	addwfc	(btemp+9)^0,f,c
 13383  01115E  503B               	movf	(btemp+9)^0,w,c
 13384  011160  E106               	bnz	u10040
 13385  011162  0E1A               	movlw	26
 13386  011164  5C3A               	subwf	(btemp+8)^0,w,c
 13387  011166  B0D8               	btfsc	status,0,c
 13388  011168  D002               	goto	u10040
 13389  01116A  0E01               	movlw	1
 13390  01116C  D001               	goto	u10050
 13391  01116E                     u10040:
 13392  01116E  0E00               	movlw	0
 13393  011170                     u10050:
 13394  011170  6E3C               	movwf	(btemp+10)^0,c
 13395  011172  6A3D               	clrf	(btemp+11)^0,c
 13396                           
 13397                           ;stkvar	_efgtoa$4385 @ sp[(-56)+0]
 13398  011174  0EC8               	movlw	-56
 13399  011176  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13400  01117C  0EC9               	movlw	-55
 13401  01117E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13402                           
 13403                           ;stkvar	_efgtoa$4385 @ sp[(-56)+0]
 13404  011184  0EC8               	movlw	-56
 13405  011186  006F FF8C  F032    	movff	plusw1,btemp
 13406  01118C  0EC9               	movlw	-55
 13407  01118E  50E3               	movf	plusw1,w,c
 13408  011190  1032               	iorwf	btemp^0,w,c
 13409  011192  A4D8               	btfss	status,2,c
 13410  011194  D002               	goto	l9849
 13411  011196  0E65               	movlw	101
 13412  011198  D001               	goto	L14
 13413  01119A                     l9849:
 13414  01119A  0E45               	movlw	69
 13415  01119C                     L14:
 13416  01119C  6E3C               	movwf	(btemp+10)^0,c
 13417  01119E  0E00               	movlw	0
 13418  0111A0  6E3D               	movwf	(btemp+11)^0,c
 13419                           
 13420                           ;stkvar	_efgtoa$4384 @ sp[(-56)+2]
 13421  0111A2  0ECA               	movlw	-54
 13422  0111A4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13423  0111AA  0ECB               	movlw	-53
 13424  0111AC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13425                           
 13426                           ;stkvar	_efgtoa$4384 @ sp[(-56)+2]
 13427                           ;stkvar	_i @ sp[(-56)+36]
 13428  0111B2  0EEC               	movlw	-20
 13429  0111B4  006F FF8C  F03C    	movff	plusw1,btemp+10
 13430  0111BA  0EED               	movlw	-19
 13431  0111BC  006F FF8C  F03D    	movff	plusw1,btemp+11
 13432  0111C2  0EAC               	movlw	low _dbuf
 13433  0111C4  243C               	addwf	(btemp+10)^0,w,c
 13434  0111C6  6ED9               	movwf	fsr2l,c
 13435  0111C8  0E02               	movlw	high _dbuf
 13436  0111CA  203D               	addwfc	(btemp+11)^0,w,c
 13437  0111CC  6EDA               	movwf	fsr2h,c
 13438  0111CE  0ECA               	movlw	-54
 13439  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 13440                           
 13441                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 13442                           ;stkvar	_w @ sp[(-56)+38]
 13443  0111D6  50E1               	movf	fsr1l,w,c
 13444  0111D8  0FEE               	addlw	-18
 13445  0111DA  6ED9               	movwf	fsr2l,c
 13446  0111DC  50E2               	movf	fsr1h,w,c
 13447  0111DE  6EDA               	movwf	fsr2h,c
 13448  0111E0  0EFF               	movlw	255
 13449  0111E2  22DA               	addwfc	fsr2h,f,c
 13450  0111E4  06DE               	decf	postinc2,f,c
 13451  0111E6  0E00               	movlw	0
 13452  0111E8  5ADD               	subwfb	postdec2,f,c
 13453                           
 13454                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 13455                           ;stkvar	_i @ sp[(-56)+36]
 13456  0111EA  0EEC               	movlw	-20
 13457  0111EC  006F FF8C  F03C    	movff	plusw1,btemp+10
 13458  0111F2  0EED               	movlw	-19
 13459  0111F4  006F FF8C  F03D    	movff	plusw1,btemp+11
 13460  0111FA  0EAC               	movlw	low _dbuf
 13461  0111FC  243C               	addwf	(btemp+10)^0,w,c
 13462  0111FE  6E3A               	movwf	(btemp+8)^0,c
 13463  011200  0E02               	movlw	high _dbuf
 13464  011202  203D               	addwfc	(btemp+11)^0,w,c
 13465  011204  6E3B               	movwf	(btemp+9)^0,c
 13466  011206  0060  F0EB  FFE6   	movff	btemp+8,postinc1
 13467  01120C  0060  F0EF  FFE6   	movff	btemp+9,postinc1
 13468                           
 13469                           ;stkvar	_n @ sp[(-58)+32]
 13470  011212  0EAC               	movlw	low _dbuf
 13471  011214  6E3C               	movwf	(btemp+10)^0,c
 13472  011216  0E02               	movlw	high _dbuf
 13473  011218  6E3D               	movwf	(btemp+11)^0,c
 13474  01121A  0EE6               	movlw	-26
 13475  01121C  50E3               	movf	plusw1,w,c
 13476  01121E  263C               	addwf	(btemp+10)^0,f,c
 13477  011220  0EE7               	movlw	-25
 13478  011222  50E3               	movf	plusw1,w,c
 13479  011224  223D               	addwfc	(btemp+11)^0,f,c
 13480  011226  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 13481  01122C  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 13482  011232  EC5A  F0BB         	call	_strcpy	;wreg free
 13483  011236  EF16  F081         	goto	l9601
 13484  01123A                     l1843:
 13485                           
 13486                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 13487  01123A  0EC1               	movlw	193
 13488  01123C  26E1               	addwf	fsr1l,f,c
 13489  01123E  0EFF               	movlw	255
 13490  011240  22E2               	addwfc	fsr1h,f,c
 13491  011242  0012               	return		;funcret
 13492  011244                     __end_of_efgtoa:
 13493                           	opt callstack 0
 13494                           
 13495 ;; *************** function _tolower *****************
 13496 ;; Defined at:
 13497 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 13498 ;; Parameters:    Size  Location     Type
 13499 ;;  c               2  [STACK] int 
 13500 ;; Auto vars:     Size  Location     Type
 13501 ;;		None
 13502 ;; Return value:  Size  Location     Type
 13503 ;;                  2  [STACK] int 
 13504 ;; Registers used:
 13505 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 13506 ;; Tracked objects:
 13507 ;;		On entry : 0/5
 13508 ;;		On exit  : 0/0
 13509 ;;		Unchanged: 0/0
 13510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13515 ;;Total ram usage:        0 bytes
 13516 ;; Hardware stack levels used:    1
 13517 ;; Hardware stack levels required when called:    7
 13518 ;; This function calls:
 13519 ;;		_isupper
 13520 ;; This function is called by:
 13521 ;;		_efgtoa
 13522 ;;		_vfpfcnvrt
 13523 ;; This function uses a reentrant model
 13524 ;;
 13525                           
 13526                           	psect	text47
 13527  017E74                     __ptext47:
 13528                           	opt callstack 0
 13529  017E74                     _tolower:
 13530                           	opt callstack 0
 13531                           
 13532                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13533  017E74  52E6               	movf	postinc1,f,c
 13534  017E76  52E6               	movf	postinc1,f,c
 13535                           
 13536                           ;stkvar	_c @ sp[(-2)+-2]
 13537                           
 13538                           ;incstack = 0
 13539  017E78  0EFC               	movlw	-4
 13540  017E7A  50E3               	movf	plusw1,w,c
 13541  017E7C  0FBF               	addlw	191
 13542  017E7E  6E3C               	movwf	(btemp+10)^0,c
 13543  017E80  0EFD               	movlw	-3
 13544  017E82  006F FF8C  F03D    	movff	plusw1,btemp+11
 13545  017E88  0EFF               	movlw	255
 13546  017E8A  223D               	addwfc	(btemp+11)^0,f,c
 13547  017E8C  503D               	movf	(btemp+11)^0,w,c
 13548  017E8E  E106               	bnz	u5330
 13549  017E90  0E1A               	movlw	26
 13550  017E92  5C3C               	subwf	(btemp+10)^0,w,c
 13551  017E94  B0D8               	btfsc	status,0,c
 13552  017E96  D002               	goto	u5330
 13553  017E98  0E01               	movlw	1
 13554  017E9A  D001               	goto	u5340
 13555  017E9C                     u5330:
 13556  017E9C  0E00               	movlw	0
 13557  017E9E                     u5340:
 13558  017E9E  6E3C               	movwf	(btemp+10)^0,c
 13559  017EA0  6A3D               	clrf	(btemp+11)^0,c
 13560                           
 13561                           ;stkvar	_tolower$5082 @ sp[(-2)+0]
 13562  017EA2  0EFE               	movlw	-2
 13563  017EA4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13564  017EAA  0EFF               	movlw	-1
 13565  017EAC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13566                           
 13567                           ;stkvar	_tolower$5082 @ sp[(-2)+0]
 13568  017EB2  0EFE               	movlw	-2
 13569  017EB4  006F FF8C  F032    	movff	plusw1,btemp
 13570  017EBA  0EFF               	movlw	-1
 13571  017EBC  50E3               	movf	plusw1,w,c
 13572  017EBE  1032               	iorwf	btemp^0,w,c
 13573  017EC0  B4D8               	btfsc	status,2,c
 13574  017EC2  D00D               	goto	l6527
 13575                           
 13576                           ;stkvar	_c @ sp[(-2)+-2]
 13577  017EC4  0EFC               	movlw	-4
 13578  017EC6  006F FF8C  F032    	movff	plusw1,btemp
 13579  017ECC  0EFD               	movlw	-3
 13580  017ECE  006F FF8C  F033    	movff	plusw1,btemp+1
 13581  017ED4  0E20               	movlw	32
 13582  017ED6  1232               	iorwf	btemp^0,f,c
 13583  017ED8  0E00               	movlw	0
 13584  017EDA  1233               	iorwf	(btemp+1)^0,f,c
 13585  017EDC  D008               	goto	l2889
 13586  017EDE                     l6527:
 13587                           
 13588                           ;stkvar	_c @ sp[(-2)+-2]
 13589  017EDE  0EFC               	movlw	-4
 13590  017EE0  006F FF8C  F032    	movff	plusw1,btemp
 13591  017EE6  0EFD               	movlw	-3
 13592  017EE8  006F FF8C  F033    	movff	plusw1,btemp+1
 13593  017EEE                     l2889:
 13594                           
 13595                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13596  017EEE  52E5               	movf	postdec1,f,c
 13597  017EF0  52E5               	movf	postdec1,f,c
 13598  017EF2  52E5               	movf	postdec1,f,c
 13599  017EF4  52E5               	movf	postdec1,f,c
 13600  017EF6  0012               	return		;funcret
 13601  017EF8                     __end_of_tolower:
 13602                           	opt callstack 0
 13603                           
 13604 ;; *************** function _isupper *****************
 13605 ;; Defined at:
 13606 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 13607 ;; Parameters:    Size  Location     Type
 13608 ;;  c               2  [STACK] int 
 13609 ;; Auto vars:     Size  Location     Type
 13610 ;;		None
 13611 ;; Return value:  Size  Location     Type
 13612 ;;                  2  [STACK] int 
 13613 ;; Registers used:
 13614 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 13615 ;; Tracked objects:
 13616 ;;		On entry : 0/0
 13617 ;;		On exit  : 0/0
 13618 ;;		Unchanged: 0/0
 13619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13624 ;;Total ram usage:        0 bytes
 13625 ;; Hardware stack levels used:    1
 13626 ;; Hardware stack levels required when called:    6
 13627 ;; This function calls:
 13628 ;;		Nothing
 13629 ;; This function is called by:
 13630 ;;		_efgtoa
 13631 ;;		_xtoa
 13632 ;;		_vfpfcnvrt
 13633 ;;		_tolower
 13634 ;; This function uses a reentrant model
 13635 ;;
 13636                           
 13637                           	psect	text48
 13638  018992                     __ptext48:
 13639                           	opt callstack 0
 13640  018992                     _isupper:
 13641                           	opt callstack 17
 13642                           
 13643                           ;stkvar	_c @ sp[(0)+-2]
 13644                           
 13645                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13646                           ;incstack = 0
 13647  018992  0EFE               	movlw	-2
 13648  018994  50E3               	movf	plusw1,w,c
 13649  018996  0FBF               	addlw	191
 13650  018998  6E3C               	movwf	(btemp+10)^0,c
 13651  01899A  0EFF               	movlw	-1
 13652  01899C  006F FF8C  F03D    	movff	plusw1,btemp+11
 13653  0189A2  0EFF               	movlw	255
 13654  0189A4  223D               	addwfc	(btemp+11)^0,f,c
 13655  0189A6  503D               	movf	(btemp+11)^0,w,c
 13656  0189A8  E106               	bnz	u4730
 13657  0189AA  0E1A               	movlw	26
 13658  0189AC  5C3C               	subwf	(btemp+10)^0,w,c
 13659  0189AE  B0D8               	btfsc	status,0,c
 13660  0189B0  D002               	goto	u4730
 13661  0189B2  0E01               	movlw	1
 13662  0189B4  D001               	goto	u4740
 13663  0189B6                     u4730:
 13664  0189B6  0E00               	movlw	0
 13665  0189B8                     u4740:
 13666  0189B8  6E32               	movwf	btemp^0,c
 13667  0189BA  6A33               	clrf	(btemp+1)^0,c
 13668                           
 13669                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13670  0189BC  52E5               	movf	postdec1,f,c
 13671  0189BE  52E5               	movf	postdec1,f,c
 13672  0189C0  0012               	return		;funcret
 13673  0189C2                     __end_of_isupper:
 13674                           	opt callstack 0
 13675                           
 13676 ;; *************** function _strcpy *****************
 13677 ;; Defined at:
 13678 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 13679 ;; Parameters:    Size  Location     Type
 13680 ;;  dest            2  [STACK] PTR unsigned char 
 13681 ;;		 -> dbuf(80), 
 13682 ;;  src             2  [STACK] PTR const unsigned char 
 13683 ;;		 -> STR_39(4), STR_38(4), STR_35(4), STR_34(4), 
 13684 ;;		 -> dbuf(80), 
 13685 ;; Auto vars:     Size  Location     Type
 13686 ;;  d               2  [STACK] PTR unsigned char 
 13687 ;;		 -> dbuf(80), 
 13688 ;;  s               2  [STACK] PTR const unsigned char 
 13689 ;;		 -> STR_39(4), STR_38(4), STR_35(4), STR_34(4), 
 13690 ;;		 -> dbuf(80), 
 13691 ;; Return value:  Size  Location     Type
 13692 ;;                  2  [STACK] PTR unsigned char 
 13693 ;; Registers used:
 13694 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 13695 ;; Tracked objects:
 13696 ;;		On entry : 0/5
 13697 ;;		On exit  : 0/0
 13698 ;;		Unchanged: 0/0
 13699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13704 ;;Total ram usage:        0 bytes
 13705 ;; Hardware stack levels used:    1
 13706 ;; Hardware stack levels required when called:    6
 13707 ;; This function calls:
 13708 ;;		Nothing
 13709 ;; This function is called by:
 13710 ;;		_efgtoa
 13711 ;; This function uses a reentrant model
 13712 ;;
 13713                           
 13714                           	psect	text49
 13715  0176B4                     __ptext49:
 13716                           	opt callstack 0
 13717  0176B4                     _strcpy:
 13718                           	opt callstack 0
 13719                           
 13720                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13721  0176B4  52E6               	movf	postinc1,f,c
 13722  0176B6  52E6               	movf	postinc1,f,c
 13723  0176B8  52E6               	movf	postinc1,f,c
 13724  0176BA  52E6               	movf	postinc1,f,c
 13725                           
 13726                           ;stkvar	_src @ sp[(-4)+-4]
 13727                           
 13728                           ;incstack = 0
 13729  0176BC  0EF8               	movlw	-8
 13730  0176BE  006F FF8C  F03C    	movff	plusw1,btemp+10
 13731  0176C4  0EF9               	movlw	-7
 13732  0176C6  006F FF8C  F03D    	movff	plusw1,btemp+11
 13733                           
 13734                           ;stkvar	_s @ sp[(-4)+2]
 13735  0176CC  0EFF               	movlw	-1
 13736  0176CE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13737  0176D4  0EFE               	movlw	-2
 13738  0176D6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13739                           
 13740                           ;stkvar	_dest @ sp[(-4)+-2]
 13741  0176DC  0EFA               	movlw	-6
 13742  0176DE  006F FF8C  F03C    	movff	plusw1,btemp+10
 13743  0176E4  0EFB               	movlw	-5
 13744  0176E6  006F FF8C  F03D    	movff	plusw1,btemp+11
 13745                           
 13746                           ;stkvar	_d @ sp[(-4)+0]
 13747  0176EC  0EFD               	movlw	-3
 13748  0176EE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13749  0176F4  0EFC               	movlw	-4
 13750  0176F6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13751  0176FC                     l9475:
 13752                           
 13753                           ;stkvar	_s @ sp[(-4)+2]
 13754  0176FC  50E1               	movf	fsr1l,w,c
 13755  0176FE  0FFE               	addlw	-2
 13756  017700  6ED9               	movwf	fsr2l,c
 13757  017702  50E2               	movf	fsr1h,w,c
 13758  017704  6EDA               	movwf	fsr2h,c
 13759  017706  0EFF               	movlw	255
 13760  017708  22DA               	addwfc	fsr2h,f,c
 13761  01770A  006F FF7C  F03C    	movff	indf2,btemp+10
 13762  017710  0E01               	movlw	1
 13763  017712  26DE               	addwf	postinc2,f,c
 13764  017714  006F FF7C  F03D    	movff	indf2,btemp+11
 13765  01771A  0E00               	movlw	0
 13766  01771C  22DD               	addwfc	postdec2,f,c
 13767  01771E  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
 13768  017724  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
 13769  01772A  0E00               	movlw	low (__mediumconst shr (0+16))
 13770  01772C  6EF8               	movwf	tblptru,c
 13771                           
 13772                           ;stkvar	_d @ sp[(-4)+0]
 13773  01772E  50E1               	movf	fsr1l,w,c
 13774  017730  0FFC               	addlw	-4
 13775  017732  6ED9               	movwf	fsr2l,c
 13776  017734  50E2               	movf	fsr1h,w,c
 13777  017736  6EDA               	movwf	fsr2h,c
 13778  017738  0EFF               	movlw	255
 13779  01773A  22DA               	addwfc	fsr2h,f,c
 13780  01773C  006F FF7C  F03C    	movff	indf2,btemp+10
 13781  017742  0E01               	movlw	1
 13782  017744  26DE               	addwf	postinc2,f,c
 13783  017746  006F FF7C  F03D    	movff	indf2,btemp+11
 13784  01774C  0E00               	movlw	0
 13785  01774E  22DD               	addwfc	postdec2,f,c
 13786  017750  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
 13787  017756  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
 13788  01775C  0E1F               	movlw	(high __ramtop+-1)
 13789  01775E  64F7               	cpfsgt	tblptrh,c
 13790  017760  D003               	bra	u9357
 13791  017762  0008               	tblrd		*
 13792  017764  50F5               	movf	tablat,w,c
 13793  017766  D007               	bra	u9350
 13794  017768                     u9357:
 13795  017768  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13796  01776E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13797  017774  50EF               	movf	indf0,w,c
 13798  017776                     u9350:
 13799  017776  6EDF               	movwf	indf2,c
 13800  017778  50DF               	movf	indf2,w,c
 13801  01777A  A4D8               	btfss	status,2,c
 13802  01777C  D7BF               	goto	l9475
 13803                           
 13804                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 13805  01777E  0EF8               	movlw	248
 13806  017780  26E1               	addwf	fsr1l,f,c
 13807  017782  0EFF               	movlw	255
 13808  017784  22E2               	addwfc	fsr1h,f,c
 13809  017786  0012               	return		;funcret
 13810  017788                     __end_of_strcpy:
 13811                           	opt callstack 0
 13812                           
 13813 ;; *************** function _floorf *****************
 13814 ;; Defined at:
 13815 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 13816 ;; Parameters:    Size  Location     Type
 13817 ;;  x               4  [STACK] float 
 13818 ;; Auto vars:     Size  Location     Type
 13819 ;;  u               4  [STACK] struct .
 13820 ;;  m               4  [STACK] unsigned long 
 13821 ;;  e               2  [STACK] int 
 13822 ;; Return value:  Size  Location     Type
 13823 ;;                  4  [STACK] float 
 13824 ;; Registers used:
 13825 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 13826 ;; Tracked objects:
 13827 ;;		On entry : 0/5
 13828 ;;		On exit  : 0/0
 13829 ;;		Unchanged: 0/0
 13830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13835 ;;Total ram usage:        0 bytes
 13836 ;; Hardware stack levels used:    1
 13837 ;; Hardware stack levels required when called:    6
 13838 ;; This function calls:
 13839 ;;		Nothing
 13840 ;; This function is called by:
 13841 ;;		_efgtoa
 13842 ;; This function uses a reentrant model
 13843 ;;
 13844                           
 13845                           	psect	text50
 13846  01491A                     __ptext50:
 13847                           	opt callstack 0
 13848  01491A                     _floorf:
 13849                           	opt callstack 0
 13850                           
 13851                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 13852  01491A  0E0A               	movlw	10
 13853  01491C  26E1               	addwf	fsr1l,f,c
 13854  01491E  0E00               	movlw	0
 13855  014920  22E2               	addwfc	fsr1h,f,c
 13856                           
 13857                           ;incstack = 0
 13858  014922  0060  F210  F03A   	movff	floorf@F524,btemp+8
 13859  014928  0060  F214  F03B   	movff	floorf@F524+1,btemp+9
 13860  01492E  0060  F218  F03C   	movff	floorf@F524+2,btemp+10
 13861  014934  0060  F21C  F03D   	movff	floorf@F524+3,btemp+11
 13862                           
 13863                           ;stkvar	_u @ sp[(-10)+0]
 13864  01493A  0EF6               	movlw	-10
 13865  01493C  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13866  014942  0EF7               	movlw	-9
 13867  014944  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13868  01494A  0EF8               	movlw	-8
 13869  01494C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13870  014952  0EF9               	movlw	-7
 13871  014954  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13872                           
 13873                           ;stkvar	_x @ sp[(-10)+-4]
 13874  01495A  0EF2               	movlw	-14
 13875  01495C  006F FF8C  F03A    	movff	plusw1,btemp+8
 13876  014962  0EF3               	movlw	-13
 13877  014964  006F FF8C  F03B    	movff	plusw1,btemp+9
 13878  01496A  0EF4               	movlw	-12
 13879  01496C  006F FF8C  F03C    	movff	plusw1,btemp+10
 13880  014972  0EF5               	movlw	-11
 13881  014974  006F FF8C  F03D    	movff	plusw1,btemp+11
 13882                           
 13883                           ;stkvar	_u @ sp[(-10)+0]
 13884  01497A  0EF6               	movlw	-10
 13885  01497C  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13886  014982  0EF7               	movlw	-9
 13887  014984  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13888  01498A  0EF8               	movlw	-8
 13889  01498C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13890  014992  0EF9               	movlw	-7
 13891  014994  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13892  01499A  0E81               	movlw	129
 13893  01499C  6E3C               	movwf	(btemp+10)^0,c
 13894  01499E  0EFF               	movlw	255
 13895  0149A0  6E3D               	movwf	(btemp+11)^0,c
 13896                           
 13897                           ;stkvar	_u @ sp[(-10)+0]
 13898  0149A2  0EF6               	movlw	-10
 13899  0149A4  006F FF8C  F036    	movff	plusw1,btemp+4
 13900  0149AA  0EF7               	movlw	-9
 13901  0149AC  006F FF8C  F037    	movff	plusw1,btemp+5
 13902  0149B2  0EF8               	movlw	-8
 13903  0149B4  006F FF8C  F038    	movff	plusw1,btemp+6
 13904  0149BA  0EF9               	movlw	-7
 13905  0149BC  006F FF8C  F039    	movff	plusw1,btemp+7
 13906  0149C2  0E18               	movlw	24
 13907  0149C4  D005               	goto	u5360
 13908  0149C6                     u5365:
 13909  0149C6  90D8               	bcf	status,0,c
 13910  0149C8  3239               	rrcf	(btemp+7)^0,f,c
 13911  0149CA  3238               	rrcf	(btemp+6)^0,f,c
 13912  0149CC  3237               	rrcf	(btemp+5)^0,f,c
 13913  0149CE  3236               	rrcf	(btemp+4)^0,f,c
 13914  0149D0                     u5360:
 13915  0149D0  2EE8               	decfsz	wreg,f,c
 13916  0149D2  D7F9               	goto	u5365
 13917  0149D4  0060  F0D8  F03A   	movff	btemp+4,btemp+8
 13918  0149DA  0060  F0DC  F03B   	movff	btemp+5,btemp+9
 13919  0149E0  0EFF               	movlw	255
 13920  0149E2  163A               	andwf	(btemp+8)^0,f,c
 13921  0149E4  0E00               	movlw	0
 13922  0149E6  163B               	andwf	(btemp+9)^0,f,c
 13923  0149E8  503C               	movf	(btemp+10)^0,w,c
 13924  0149EA  263A               	addwf	(btemp+8)^0,f,c
 13925  0149EC  503D               	movf	(btemp+11)^0,w,c
 13926  0149EE  223B               	addwfc	(btemp+9)^0,f,c
 13927                           
 13928                           ;stkvar	_e @ sp[(-10)+8]
 13929  0149F0  0EFE               	movlw	-2
 13930  0149F2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13931  0149F8  0EFF               	movlw	-1
 13932  0149FA  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13933                           
 13934                           ;stkvar	_e @ sp[(-10)+8]
 13935  014A00  0EFF               	movlw	-1
 13936  014A02  BEE3               	btfsc	plusw1,7,c
 13937  014A04  D019               	goto	l6541
 13938  014A06  0EFF               	movlw	-1
 13939  014A08  50E3               	movf	plusw1,w,c
 13940  014A0A  E108               	bnz	u5370
 13941  014A0C  0EFE               	movlw	-2
 13942  014A0E  006F FF8C  F032    	movff	plusw1,btemp
 13943  014A14  0E17               	movlw	23
 13944  014A16  5E32               	subwf	btemp^0,f,c
 13945  014A18  A0D8               	btfss	status,0,c
 13946  014A1A  D00E               	goto	l6541
 13947  014A1C                     u5370:
 13948                           
 13949                           ;stkvar	_x @ sp[(-10)+-4]
 13950  014A1C  0EF2               	movlw	-14
 13951  014A1E  006F FF8C  F032    	movff	plusw1,btemp
 13952  014A24  0EF3               	movlw	-13
 13953  014A26  006F FF8C  F033    	movff	plusw1,btemp+1
 13954  014A2C  0EF4               	movlw	-12
 13955  014A2E  006F FF8C  F034    	movff	plusw1,btemp+2
 13956  014A34  0EF5               	movlw	-11
 13957  014A36  D11F               	goto	L15
 13958  014A38                     l6541:
 13959                           
 13960                           ;stkvar	_e @ sp[(-10)+8]
 13961  014A38  0EFF               	movlw	-1
 13962  014A3A  BEE3               	btfsc	plusw1,7,c
 13963  014A3C  D0B4               	goto	l6557
 13964                           
 13965                           ;stkvar	_e @ sp[(-10)+8]
 13966  014A3E  0EFE               	movlw	-2
 13967  014A40  006F FF8C  F03D    	movff	plusw1,btemp+11
 13968  014A46  0EFF               	movlw	255
 13969  014A48  6E36               	movwf	(btemp+4)^0,c
 13970  014A4A  0EFF               	movlw	255
 13971  014A4C  6E37               	movwf	(btemp+5)^0,c
 13972  014A4E  0E7F               	movlw	127
 13973  014A50  6E38               	movwf	(btemp+6)^0,c
 13974  014A52  0E00               	movlw	0
 13975  014A54  6E39               	movwf	(btemp+7)^0,c
 13976  014A56                     u5395:
 13977  014A56  663D               	tstfsz	(btemp+11)^0,c
 13978  014A58  D001               	goto	u5396
 13979  014A5A  D007               	goto	u5397
 13980  014A5C                     u5396:
 13981  014A5C  3439               	rlcf	(btemp+7)^0,w,c
 13982  014A5E  3239               	rrcf	(btemp+7)^0,f,c
 13983  014A60  3238               	rrcf	(btemp+6)^0,f,c
 13984  014A62  3237               	rrcf	(btemp+5)^0,f,c
 13985  014A64  3236               	rrcf	(btemp+4)^0,f,c
 13986  014A66  2E3D               	decfsz	(btemp+11)^0,f,c
 13987  014A68  D7F6               	goto	u5395
 13988  014A6A                     u5397:
 13989                           
 13990                           ;stkvar	_m @ sp[(-10)+4]
 13991  014A6A  0EFA               	movlw	-6
 13992  014A6C  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 13993  014A72  0EFB               	movlw	-5
 13994  014A74  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 13995  014A7A  0EFC               	movlw	-4
 13996  014A7C  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 13997  014A82  0EFD               	movlw	-3
 13998  014A84  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 13999                           
 14000                           ;stkvar	_m @ sp[(-10)+4]
 14001                           ;stkvar	_u @ sp[(-10)+0]
 14002  014A8A  0EF6               	movlw	-10
 14003  014A8C  006F FF8C  F03A    	movff	plusw1,btemp+8
 14004  014A92  0EF7               	movlw	-9
 14005  014A94  006F FF8C  F03B    	movff	plusw1,btemp+9
 14006  014A9A  0EF8               	movlw	-8
 14007  014A9C  006F FF8C  F03C    	movff	plusw1,btemp+10
 14008  014AA2  0EF9               	movlw	-7
 14009  014AA4  006F FF8C  F03D    	movff	plusw1,btemp+11
 14010  014AAA  0EFA               	movlw	-6
 14011  014AAC  50E3               	movf	plusw1,w,c
 14012  014AAE  163A               	andwf	(btemp+8)^0,f,c
 14013  014AB0  0EFB               	movlw	-5
 14014  014AB2  50E3               	movf	plusw1,w,c
 14015  014AB4  163B               	andwf	(btemp+9)^0,f,c
 14016  014AB6  0EFC               	movlw	-4
 14017  014AB8  50E3               	movf	plusw1,w,c
 14018  014ABA  163C               	andwf	(btemp+10)^0,f,c
 14019  014ABC  0EFD               	movlw	-3
 14020  014ABE  50E3               	movf	plusw1,w,c
 14021  014AC0  163D               	andwf	(btemp+11)^0,f,c
 14022  014AC2  503A               	movf	(btemp+8)^0,w,c
 14023  014AC4  103B               	iorwf	(btemp+9)^0,w,c
 14024  014AC6  103C               	iorwf	(btemp+10)^0,w,c
 14025  014AC8  103D               	iorwf	(btemp+11)^0,w,c
 14026  014ACA  B4D8               	btfsc	status,2,c
 14027  014ACC  D7A7               	goto	u5370
 14028                           
 14029                           ;stkvar	_u @ sp[(-10)+0]
 14030  014ACE  0EF6               	movlw	-10
 14031  014AD0  006F FF8C  F03A    	movff	plusw1,btemp+8
 14032  014AD6  0EF7               	movlw	-9
 14033  014AD8  006F FF8C  F03B    	movff	plusw1,btemp+9
 14034  014ADE  0EF8               	movlw	-8
 14035  014AE0  006F FF8C  F03C    	movff	plusw1,btemp+10
 14036  014AE6  0EF9               	movlw	-7
 14037  014AE8  006F FF8C  F03D    	movff	plusw1,btemp+11
 14038  014AEE  0E20               	movlw	32
 14039  014AF0  D005               	goto	u5410
 14040  014AF2                     u5415:
 14041  014AF2  90D8               	bcf	status,0,c
 14042  014AF4  323D               	rrcf	(btemp+11)^0,f,c
 14043  014AF6  323C               	rrcf	(btemp+10)^0,f,c
 14044  014AF8  323B               	rrcf	(btemp+9)^0,f,c
 14045  014AFA  323A               	rrcf	(btemp+8)^0,f,c
 14046  014AFC                     u5410:
 14047  014AFC  2EE8               	decfsz	wreg,f,c
 14048  014AFE  D7F9               	goto	u5415
 14049  014B00  503A               	movf	(btemp+8)^0,w,c
 14050  014B02  B4D8               	btfsc	status,2,c
 14051  014B04  D028               	goto	l6555
 14052                           
 14053                           ;stkvar	_m @ sp[(-10)+4]
 14054                           ;stkvar	_u @ sp[(-10)+0]
 14055  014B06  0EF6               	movlw	-10
 14056  014B08  50E3               	movf	plusw1,w,c
 14057  014B0A  6E32               	movwf	btemp^0,c
 14058  014B0C  0EFA               	movlw	-6
 14059  014B0E  50E3               	movf	plusw1,w,c
 14060  014B10  2632               	addwf	btemp^0,f,c
 14061  014B12  0EF6               	movlw	-10
 14062  014B14  0060  F0CB  FFE3   	movff	btemp,plusw1
 14063  014B1A  0EF7               	movlw	-9
 14064  014B1C  50E3               	movf	plusw1,w,c
 14065  014B1E  6E32               	movwf	btemp^0,c
 14066  014B20  0EFB               	movlw	-5
 14067  014B22  50E3               	movf	plusw1,w,c
 14068  014B24  2232               	addwfc	btemp^0,f,c
 14069  014B26  0EF7               	movlw	-9
 14070  014B28  0060  F0CB  FFE3   	movff	btemp,plusw1
 14071  014B2E  0EF8               	movlw	-8
 14072  014B30  50E3               	movf	plusw1,w,c
 14073  014B32  6E32               	movwf	btemp^0,c
 14074  014B34  0EFC               	movlw	-4
 14075  014B36  50E3               	movf	plusw1,w,c
 14076  014B38  2232               	addwfc	btemp^0,f,c
 14077  014B3A  0EF8               	movlw	-8
 14078  014B3C  0060  F0CB  FFE3   	movff	btemp,plusw1
 14079  014B42  0EF9               	movlw	-7
 14080  014B44  50E3               	movf	plusw1,w,c
 14081  014B46  6E32               	movwf	btemp^0,c
 14082  014B48  0EFD               	movlw	-3
 14083  014B4A  50E3               	movf	plusw1,w,c
 14084  014B4C  2232               	addwfc	btemp^0,f,c
 14085  014B4E  0EF9               	movlw	-7
 14086  014B50  0060  F0CB  FFE3   	movff	btemp,plusw1
 14087  014B56                     l6555:
 14088                           
 14089                           ;stkvar	_m @ sp[(-10)+4]
 14090  014B56  0EFA               	movlw	-6
 14091  014B58  006F FF8C  F03A    	movff	plusw1,btemp+8
 14092  014B5E  0EFB               	movlw	-5
 14093  014B60  006F FF8C  F03B    	movff	plusw1,btemp+9
 14094  014B66  0EFC               	movlw	-4
 14095  014B68  006F FF8C  F03C    	movff	plusw1,btemp+10
 14096  014B6E  0EFD               	movlw	-3
 14097  014B70  006F FF8C  F03D    	movff	plusw1,btemp+11
 14098  014B76  1C3A               	comf	(btemp+8)^0,w,c
 14099  014B78  6E36               	movwf	(btemp+4)^0,c
 14100  014B7A  1C3B               	comf	(btemp+9)^0,w,c
 14101  014B7C  6E37               	movwf	(btemp+5)^0,c
 14102  014B7E  1C3C               	comf	(btemp+10)^0,w,c
 14103  014B80  6E38               	movwf	(btemp+6)^0,c
 14104  014B82  1C3D               	comf	(btemp+11)^0,w,c
 14105  014B84  6E39               	movwf	(btemp+7)^0,c
 14106                           
 14107                           ;stkvar	_u @ sp[(-10)+0]
 14108  014B86  50E1               	movf	fsr1l,w,c
 14109  014B88  0FF6               	addlw	-10
 14110  014B8A  6ED9               	movwf	fsr2l,c
 14111  014B8C  50E2               	movf	fsr1h,w,c
 14112  014B8E  6EDA               	movwf	fsr2h,c
 14113  014B90  0EFF               	movlw	255
 14114  014B92  22DA               	addwfc	fsr2h,f,c
 14115  014B94  5036               	movf	(btemp+4)^0,w,c
 14116  014B96  16DE               	andwf	postinc2,f,c
 14117  014B98  5037               	movf	(btemp+5)^0,w,c
 14118  014B9A  16DE               	andwf	postinc2,f,c
 14119  014B9C  5038               	movf	(btemp+6)^0,w,c
 14120  014B9E  16DE               	andwf	postinc2,f,c
 14121  014BA0  5039               	movf	(btemp+7)^0,w,c
 14122  014BA2  16DE               	andwf	postinc2,f,c
 14123  014BA4  D05B               	goto	l6565
 14124  014BA6                     l6557:
 14125                           
 14126                           ;stkvar	_u @ sp[(-10)+0]
 14127  014BA6  0EF6               	movlw	-10
 14128  014BA8  006F FF8C  F03A    	movff	plusw1,btemp+8
 14129  014BAE  0EF7               	movlw	-9
 14130  014BB0  006F FF8C  F03B    	movff	plusw1,btemp+9
 14131  014BB6  0EF8               	movlw	-8
 14132  014BB8  006F FF8C  F03C    	movff	plusw1,btemp+10
 14133  014BBE  0EF9               	movlw	-7
 14134  014BC0  006F FF8C  F03D    	movff	plusw1,btemp+11
 14135  014BC6  0E20               	movlw	32
 14136  014BC8  D005               	goto	u5430
 14137  014BCA                     u5435:
 14138  014BCA  90D8               	bcf	status,0,c
 14139  014BCC  323D               	rrcf	(btemp+11)^0,f,c
 14140  014BCE  323C               	rrcf	(btemp+10)^0,f,c
 14141  014BD0  323B               	rrcf	(btemp+9)^0,f,c
 14142  014BD2  323A               	rrcf	(btemp+8)^0,f,c
 14143  014BD4                     u5430:
 14144  014BD4  2EE8               	decfsz	wreg,f,c
 14145  014BD6  D7F9               	goto	u5435
 14146  014BD8  663A               	tstfsz	(btemp+8)^0,c
 14147  014BDA  D009               	goto	l6561
 14148                           
 14149                           ;stkvar	_u @ sp[(-10)+0]
 14150  014BDC  0EF6               	movlw	-10
 14151  014BDE  6AE3               	clrf	plusw1,c
 14152  014BE0  0EF7               	movlw	-9
 14153  014BE2  6AE3               	clrf	plusw1,c
 14154  014BE4  0EF8               	movlw	-8
 14155  014BE6  6AE3               	clrf	plusw1,c
 14156  014BE8  0EF9               	movlw	-7
 14157  014BEA  6AE3               	clrf	plusw1,c
 14158  014BEC  D037               	goto	l6565
 14159  014BEE                     l6561:
 14160                           
 14161                           ;stkvar	_u @ sp[(-10)+0]
 14162  014BEE  0EF6               	movlw	-10
 14163  014BF0  006F FF8C  F03A    	movff	plusw1,btemp+8
 14164  014BF6  0EF7               	movlw	-9
 14165  014BF8  006F FF8C  F03B    	movff	plusw1,btemp+9
 14166  014BFE  0EF8               	movlw	-8
 14167  014C00  006F FF8C  F03C    	movff	plusw1,btemp+10
 14168  014C06  0EF9               	movlw	-7
 14169  014C08  006F FF8C  F03D    	movff	plusw1,btemp+11
 14170  014C0E  90D8               	bcf	status,0,c
 14171  014C10  343A               	rlcf	(btemp+8)^0,w,c
 14172  014C12  6E36               	movwf	(btemp+4)^0,c
 14173  014C14  343B               	rlcf	(btemp+9)^0,w,c
 14174  014C16  6E37               	movwf	(btemp+5)^0,c
 14175  014C18  343C               	rlcf	(btemp+10)^0,w,c
 14176  014C1A  6E38               	movwf	(btemp+6)^0,c
 14177  014C1C  343D               	rlcf	(btemp+11)^0,w,c
 14178  014C1E  6E39               	movwf	(btemp+7)^0,c
 14179  014C20  5036               	movf	(btemp+4)^0,w,c
 14180  014C22  1037               	iorwf	(btemp+5)^0,w,c
 14181  014C24  1038               	iorwf	(btemp+6)^0,w,c
 14182  014C26  1039               	iorwf	(btemp+7)^0,w,c
 14183  014C28  B4D8               	btfsc	status,2,c
 14184  014C2A  D018               	goto	l6565
 14185  014C2C  0E00               	movlw	0
 14186  014C2E  6E3A               	movwf	(btemp+8)^0,c
 14187  014C30  0E00               	movlw	0
 14188  014C32  6E3B               	movwf	(btemp+9)^0,c
 14189  014C34  0E80               	movlw	128
 14190  014C36  6E3C               	movwf	(btemp+10)^0,c
 14191  014C38  0EBF               	movlw	191
 14192  014C3A  6E3D               	movwf	(btemp+11)^0,c
 14193                           
 14194                           ;stkvar	_u @ sp[(-10)+0]
 14195  014C3C  0EF6               	movlw	-10
 14196  014C3E  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14197  014C44  0EF7               	movlw	-9
 14198  014C46  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14199  014C4C  0EF8               	movlw	-8
 14200  014C4E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14201  014C54  0EF9               	movlw	-7
 14202  014C56  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14203  014C5C                     l6565:
 14204                           
 14205                           ;stkvar	_u @ sp[(-10)+0]
 14206  014C5C  0EF6               	movlw	-10
 14207  014C5E  006F FF8C  F032    	movff	plusw1,btemp
 14208  014C64  0EF7               	movlw	-9
 14209  014C66  006F FF8C  F033    	movff	plusw1,btemp+1
 14210  014C6C  0EF8               	movlw	-8
 14211  014C6E  006F FF8C  F034    	movff	plusw1,btemp+2
 14212  014C74  0EF9               	movlw	-7
 14213  014C76                     L15:
 14214  014C76  006F FF8C  F035    	movff	plusw1,btemp+3
 14215                           
 14216                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14217  014C7C  0EF2               	movlw	242
 14218  014C7E  26E1               	addwf	fsr1l,f,c
 14219  014C80  0EFF               	movlw	255
 14220  014C82  22E2               	addwfc	fsr1h,f,c
 14221  014C84  0012               	return		;funcret
 14222  014C86                     __end_of_floorf:
 14223                           	opt callstack 0
 14224                           
 14225 ;; *************** function ___fpclassifyf *****************
 14226 ;; Defined at:
 14227 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 14228 ;; Parameters:    Size  Location     Type
 14229 ;;  x               4  [STACK] float 
 14230 ;; Auto vars:     Size  Location     Type
 14231 ;;  u               4  [STACK] struct .
 14232 ;;  e               2  [STACK] int 
 14233 ;; Return value:  Size  Location     Type
 14234 ;;                  2  [STACK] int 
 14235 ;; Registers used:
 14236 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 14237 ;; Tracked objects:
 14238 ;;		On entry : 0/5
 14239 ;;		On exit  : 0/0
 14240 ;;		Unchanged: 0/0
 14241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14246 ;;Total ram usage:        0 bytes
 14247 ;; Hardware stack levels used:    1
 14248 ;; Hardware stack levels required when called:    6
 14249 ;; This function calls:
 14250 ;;		Nothing
 14251 ;; This function is called by:
 14252 ;;		_efgtoa
 14253 ;; This function uses a reentrant model
 14254 ;;
 14255                           
 14256                           	psect	text51
 14257  01649A                     __ptext51:
 14258                           	opt callstack 0
 14259  01649A                     ___fpclassifyf:
 14260                           	opt callstack 0
 14261                           
 14262                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14263  01649A  0E06               	movlw	6
 14264  01649C  26E1               	addwf	fsr1l,f,c
 14265  01649E  0E00               	movlw	0
 14266  0164A0  22E2               	addwfc	fsr1h,f,c
 14267                           
 14268                           ;incstack = 0
 14269  0164A2  0060  F220  F03A   	movff	___fpclassifyf@F463,btemp+8
 14270  0164A8  0060  F224  F03B   	movff	___fpclassifyf@F463+1,btemp+9
 14271  0164AE  0060  F228  F03C   	movff	___fpclassifyf@F463+2,btemp+10
 14272  0164B4  0060  F22C  F03D   	movff	___fpclassifyf@F463+3,btemp+11
 14273                           
 14274                           ;stkvar	_u @ sp[(-6)+0]
 14275  0164BA  0EFA               	movlw	-6
 14276  0164BC  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14277  0164C2  0EFB               	movlw	-5
 14278  0164C4  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14279  0164CA  0EFC               	movlw	-4
 14280  0164CC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14281  0164D2  0EFD               	movlw	-3
 14282  0164D4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14283                           
 14284                           ;stkvar	_x @ sp[(-6)+-4]
 14285  0164DA  0EF6               	movlw	-10
 14286  0164DC  006F FF8C  F03A    	movff	plusw1,btemp+8
 14287  0164E2  0EF7               	movlw	-9
 14288  0164E4  006F FF8C  F03B    	movff	plusw1,btemp+9
 14289  0164EA  0EF8               	movlw	-8
 14290  0164EC  006F FF8C  F03C    	movff	plusw1,btemp+10
 14291  0164F2  0EF9               	movlw	-7
 14292  0164F4  006F FF8C  F03D    	movff	plusw1,btemp+11
 14293                           
 14294                           ;stkvar	_u @ sp[(-6)+0]
 14295  0164FA  0EFA               	movlw	-6
 14296  0164FC  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14297  016502  0EFB               	movlw	-5
 14298  016504  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14299  01650A  0EFC               	movlw	-4
 14300  01650C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14301  016512  0EFD               	movlw	-3
 14302  016514  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14303                           
 14304                           ;stkvar	_u @ sp[(-6)+0]
 14305  01651A  0EFA               	movlw	-6
 14306  01651C  006F FF8C  F03A    	movff	plusw1,btemp+8
 14307  016522  0EFB               	movlw	-5
 14308  016524  006F FF8C  F03B    	movff	plusw1,btemp+9
 14309  01652A  0EFC               	movlw	-4
 14310  01652C  006F FF8C  F03C    	movff	plusw1,btemp+10
 14311  016532  0EFD               	movlw	-3
 14312  016534  006F FF8C  F03D    	movff	plusw1,btemp+11
 14313  01653A  0E18               	movlw	24
 14314  01653C  D005               	goto	u5240
 14315  01653E                     u5245:
 14316  01653E  90D8               	bcf	status,0,c
 14317  016540  323D               	rrcf	(btemp+11)^0,f,c
 14318  016542  323C               	rrcf	(btemp+10)^0,f,c
 14319  016544  323B               	rrcf	(btemp+9)^0,f,c
 14320  016546  323A               	rrcf	(btemp+8)^0,f,c
 14321  016548                     u5240:
 14322  016548  2EE8               	decfsz	wreg,f,c
 14323  01654A  D7F9               	goto	u5245
 14324  01654C  0060  F0E8  F038   	movff	btemp+8,btemp+6
 14325  016552  0060  F0EC  F039   	movff	btemp+9,btemp+7
 14326  016558  0EFF               	movlw	255
 14327  01655A  1638               	andwf	(btemp+6)^0,f,c
 14328  01655C  0E00               	movlw	0
 14329  01655E  1639               	andwf	(btemp+7)^0,f,c
 14330                           
 14331                           ;stkvar	_e @ sp[(-6)+4]
 14332  016560  0EFE               	movlw	-2
 14333  016562  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 14334  016568  0EFF               	movlw	-1
 14335  01656A  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 14336                           
 14337                           ;stkvar	_e @ sp[(-6)+4]
 14338  016570  0EFE               	movlw	-2
 14339  016572  006F FF8C  F032    	movff	plusw1,btemp
 14340  016578  0EFF               	movlw	-1
 14341  01657A  50E3               	movf	plusw1,w,c
 14342  01657C  1032               	iorwf	btemp^0,w,c
 14343  01657E  A4D8               	btfss	status,2,c
 14344  016580  D023               	goto	l6503
 14345                           
 14346                           ;stkvar	_u @ sp[(-6)+0]
 14347  016582  0EFA               	movlw	-6
 14348  016584  006F FF8C  F03A    	movff	plusw1,btemp+8
 14349  01658A  0EFB               	movlw	-5
 14350  01658C  006F FF8C  F03B    	movff	plusw1,btemp+9
 14351  016592  0EFC               	movlw	-4
 14352  016594  006F FF8C  F03C    	movff	plusw1,btemp+10
 14353  01659A  0EFD               	movlw	-3
 14354  01659C  006F FF8C  F03D    	movff	plusw1,btemp+11
 14355  0165A2  90D8               	bcf	status,0,c
 14356  0165A4  343A               	rlcf	(btemp+8)^0,w,c
 14357  0165A6  6E36               	movwf	(btemp+4)^0,c
 14358  0165A8  343B               	rlcf	(btemp+9)^0,w,c
 14359  0165AA  6E37               	movwf	(btemp+5)^0,c
 14360  0165AC  343C               	rlcf	(btemp+10)^0,w,c
 14361  0165AE  6E38               	movwf	(btemp+6)^0,c
 14362  0165B0  343D               	rlcf	(btemp+11)^0,w,c
 14363  0165B2  6E39               	movwf	(btemp+7)^0,c
 14364  0165B4  5036               	movf	(btemp+4)^0,w,c
 14365  0165B6  1037               	iorwf	(btemp+5)^0,w,c
 14366  0165B8  1038               	iorwf	(btemp+6)^0,w,c
 14367  0165BA  1039               	iorwf	(btemp+7)^0,w,c
 14368  0165BC  A4D8               	btfss	status,2,c
 14369  0165BE  D002               	goto	l6499
 14370  0165C0  0E02               	movlw	2
 14371  0165C2  D02E               	goto	L16
 14372  0165C4                     l6499:
 14373  0165C4  0E03               	movlw	3
 14374  0165C6  D02C               	goto	L16
 14375  0165C8                     l6503:
 14376                           
 14377                           ;stkvar	_e @ sp[(-6)+4]
 14378  0165C8  0EFE               	movlw	-2
 14379  0165CA  28E3               	incf	plusw1,w,c
 14380  0165CC  E128               	bnz	l6509
 14381  0165CE  0EFF               	movlw	-1
 14382  0165D0  50E3               	movf	plusw1,w,c
 14383  0165D2  A4D8               	btfss	status,2,c
 14384  0165D4  D024               	goto	l6509
 14385                           
 14386                           ;stkvar	_u @ sp[(-6)+0]
 14387  0165D6  0EFA               	movlw	-6
 14388  0165D8  006F FF8C  F03A    	movff	plusw1,btemp+8
 14389  0165DE  0EFB               	movlw	-5
 14390  0165E0  006F FF8C  F03B    	movff	plusw1,btemp+9
 14391  0165E6  0EFC               	movlw	-4
 14392  0165E8  006F FF8C  F03C    	movff	plusw1,btemp+10
 14393  0165EE  0EFD               	movlw	-3
 14394  0165F0  006F FF8C  F03D    	movff	plusw1,btemp+11
 14395  0165F6  0E09               	movlw	9
 14396  0165F8                     u5285:
 14397  0165F8  90D8               	bcf	status,0,c
 14398  0165FA  363A               	rlcf	(btemp+8)^0,f,c
 14399  0165FC  363B               	rlcf	(btemp+9)^0,f,c
 14400  0165FE  363C               	rlcf	(btemp+10)^0,f,c
 14401  016600  363D               	rlcf	(btemp+11)^0,f,c
 14402  016602  2EE8               	decfsz	wreg,f,c
 14403  016604  D7F9               	goto	u5285
 14404  016606  503A               	movf	(btemp+8)^0,w,c
 14405  016608  103B               	iorwf	(btemp+9)^0,w,c
 14406  01660A  103C               	iorwf	(btemp+10)^0,w,c
 14407  01660C  103D               	iorwf	(btemp+11)^0,w,c
 14408  01660E  A4D8               	btfss	status,2,c
 14409  016610  D002               	goto	u5290
 14410  016612  0E01               	movlw	1
 14411  016614  D001               	goto	u5300
 14412  016616                     u5290:
 14413  016616  0E00               	movlw	0
 14414  016618                     u5300:
 14415  016618  6E32               	movwf	btemp^0,c
 14416  01661A  6A33               	clrf	(btemp+1)^0,c
 14417  01661C  D004               	goto	l2725
 14418  01661E                     l6509:
 14419  01661E  0E04               	movlw	4
 14420  016620                     L16:
 14421  016620  6E32               	movwf	btemp^0,c
 14422  016622  0E00               	movlw	0
 14423  016624  6E33               	movwf	(btemp+1)^0,c
 14424  016626                     l2725:
 14425                           
 14426                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 14427  016626  0EF6               	movlw	246
 14428  016628  26E1               	addwf	fsr1l,f,c
 14429  01662A  0EFF               	movlw	255
 14430  01662C  22E2               	addwfc	fsr1h,f,c
 14431  01662E  0012               	return		;funcret
 14432  016630                     __end_of___fpclassifyf:
 14433                           	opt callstack 0
 14434                           
 14435 ;; *************** function ___fltol *****************
 14436 ;; Defined at:
 14437 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 14438 ;; Parameters:    Size  Location     Type
 14439 ;;  f1              4  [STACK] int 
 14440 ;; Auto vars:     Size  Location     Type
 14441 ;;  exp1            1  [STACK] unsigned char 
 14442 ;;  sign1           1  [STACK] unsigned char 
 14443 ;; Return value:  Size  Location     Type
 14444 ;;                  4  [STACK] long 
 14445 ;; Registers used:
 14446 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 14447 ;; Tracked objects:
 14448 ;;		On entry : 0/5
 14449 ;;		On exit  : 0/0
 14450 ;;		Unchanged: 0/0
 14451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14456 ;;Total ram usage:        0 bytes
 14457 ;; Hardware stack levels used:    1
 14458 ;; Hardware stack levels required when called:    6
 14459 ;; This function calls:
 14460 ;;		Nothing
 14461 ;; This function is called by:
 14462 ;;		_efgtoa
 14463 ;; This function uses a reentrant model
 14464 ;;
 14465                           
 14466                           	psect	text52
 14467  0167B0                     __ptext52:
 14468                           	opt callstack 0
 14469  0167B0                     ___fltol:
 14470                           	opt callstack 0
 14471                           
 14472                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14473  0167B0  52E6               	movf	postinc1,f,c
 14474  0167B2  52E6               	movf	postinc1,f,c
 14475                           
 14476                           ;stkvar	_f1 @ sp[(-2)+-4]
 14477                           
 14478                           ;incstack = 0
 14479  0167B4  0EFA               	movlw	-6
 14480  0167B6  006F FF8C  F03A    	movff	plusw1,btemp+8
 14481  0167BC  0EFB               	movlw	-5
 14482  0167BE  006F FF8C  F03B    	movff	plusw1,btemp+9
 14483  0167C4  0EFC               	movlw	-4
 14484  0167C6  006F FF8C  F03C    	movff	plusw1,btemp+10
 14485  0167CC  0EFD               	movlw	-3
 14486  0167CE  006F FF8C  F03D    	movff	plusw1,btemp+11
 14487  0167D4  0E18               	movlw	24
 14488  0167D6  D005               	goto	u6450
 14489  0167D8                     u6455:
 14490  0167D8  90D8               	bcf	status,0,c
 14491  0167DA  323D               	rrcf	(btemp+11)^0,f,c
 14492  0167DC  323C               	rrcf	(btemp+10)^0,f,c
 14493  0167DE  323B               	rrcf	(btemp+9)^0,f,c
 14494  0167E0  323A               	rrcf	(btemp+8)^0,f,c
 14495  0167E2                     u6450:
 14496  0167E2  2EE8               	decfsz	wreg,f,c
 14497  0167E4  D7F9               	goto	u6455
 14498                           
 14499                           ;stkvar	_exp1 @ sp[(-2)+0]
 14500  0167E6  0EFE               	movlw	-2
 14501  0167E8  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14502  0167EE  0EFE               	movlw	-2
 14503  0167F0  50E3               	movf	plusw1,w,c
 14504  0167F2  A4D8               	btfss	status,2,c
 14505  0167F4  D006               	goto	l7129
 14506  0167F6                     u6460:
 14507  0167F6  0E00               	movlw	0
 14508  0167F8  6E32               	movwf	btemp^0,c
 14509  0167FA  6A33               	clrf	(btemp+1)^0,c
 14510  0167FC  6A34               	clrf	(btemp+2)^0,c
 14511  0167FE  6A35               	clrf	(btemp+3)^0,c
 14512  016800  D08B               	goto	l2341
 14513  016802                     l7129:
 14514                           
 14515                           ;stkvar	_f1 @ sp[(-2)+-4]
 14516  016802  0EFA               	movlw	-6
 14517  016804  006F FF8C  F03A    	movff	plusw1,btemp+8
 14518  01680A  0EFB               	movlw	-5
 14519  01680C  006F FF8C  F03B    	movff	plusw1,btemp+9
 14520  016812  0EFC               	movlw	-4
 14521  016814  006F FF8C  F03C    	movff	plusw1,btemp+10
 14522  01681A  0EFD               	movlw	-3
 14523  01681C  006F FF8C  F03D    	movff	plusw1,btemp+11
 14524  016822  0E20               	movlw	32
 14525  016824  D005               	goto	u6470
 14526  016826                     u6475:
 14527  016826  90D8               	bcf	status,0,c
 14528  016828  323D               	rrcf	(btemp+11)^0,f,c
 14529  01682A  323C               	rrcf	(btemp+10)^0,f,c
 14530  01682C  323B               	rrcf	(btemp+9)^0,f,c
 14531  01682E  323A               	rrcf	(btemp+8)^0,f,c
 14532  016830                     u6470:
 14533  016830  2EE8               	decfsz	wreg,f,c
 14534  016832  D7F9               	goto	u6475
 14535                           
 14536                           ;stkvar	_sign1 @ sp[(-2)+1]
 14537  016834  0EFF               	movlw	-1
 14538  016836  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14539                           
 14540                           ;stkvar	_f1 @ sp[(-2)+-4]
 14541  01683C  0EFC               	movlw	-4
 14542  01683E  8EE3               	bsf	plusw1,7,c
 14543                           
 14544                           ;stkvar	_f1 @ sp[(-2)+-4]
 14545  016840  50E1               	movf	fsr1l,w,c
 14546  016842  0FFA               	addlw	-6
 14547  016844  6ED9               	movwf	fsr2l,c
 14548  016846  50E2               	movf	fsr1h,w,c
 14549  016848  6EDA               	movwf	fsr2h,c
 14550  01684A  0EFF               	movlw	255
 14551  01684C  22DA               	addwfc	fsr2h,f,c
 14552  01684E  0EFF               	movlw	255
 14553  016850  16DE               	andwf	postinc2,f,c
 14554  016852  0EFF               	movlw	255
 14555  016854  16DE               	andwf	postinc2,f,c
 14556  016856  0EFF               	movlw	255
 14557  016858  16DE               	andwf	postinc2,f,c
 14558  01685A  0E00               	movlw	0
 14559  01685C  16DE               	andwf	postinc2,f,c
 14560                           
 14561                           ;stkvar	_exp1 @ sp[(-2)+0]
 14562  01685E  0EFE               	movlw	-2
 14563  016860  006F FF8C  F032    	movff	plusw1,btemp
 14564  016866  0E96               	movlw	150
 14565  016868  5E32               	subwf	btemp^0,f,c
 14566  01686A  0EFE               	movlw	-2
 14567  01686C  0060  F0CB  FFE3   	movff	btemp,plusw1
 14568                           
 14569                           ;stkvar	_exp1 @ sp[(-2)+0]
 14570  016872  0EFE               	movlw	-2
 14571  016874  AEE3               	btfss	plusw1,7,c
 14572  016876  D014               	goto	l7147
 14573                           
 14574                           ;stkvar	_exp1 @ sp[(-2)+0]
 14575  016878  0EFE               	movlw	-2
 14576  01687A  50E3               	movf	plusw1,w,c
 14577  01687C  0A80               	xorlw	128
 14578  01687E  0F97               	addlw	151
 14579  016880  A0D8               	btfss	status,0,c
 14580  016882  D7B9               	goto	u6460
 14581  016884                     l7145:
 14582                           
 14583                           ;stkvar	_f1 @ sp[(-2)+-4]
 14584  016884  90D8               	bcf	status,0,c
 14585  016886  0EFD               	movlw	-3
 14586  016888  32E3               	rrcf	plusw1,f,c
 14587  01688A  0EFC               	movlw	-4
 14588  01688C  32E3               	rrcf	plusw1,f,c
 14589  01688E  0EFB               	movlw	-5
 14590  016890  32E3               	rrcf	plusw1,f,c
 14591  016892  0EFA               	movlw	-6
 14592  016894  32E3               	rrcf	plusw1,f,c
 14593                           
 14594                           ;stkvar	_exp1 @ sp[(-2)+0]
 14595  016896  0EFE               	movlw	-2
 14596  016898  2AE3               	incf	plusw1,f,c
 14597  01689A  B4D8               	btfsc	status,2,c
 14598  01689C  D018               	goto	u6520
 14599  01689E  D7F2               	goto	l7145
 14600  0168A0                     l7147:
 14601                           
 14602                           ;stkvar	_exp1 @ sp[(-2)+0]
 14603  0168A0  0EFE               	movlw	-2
 14604  0168A2  006F FF8C  F032    	movff	plusw1,btemp
 14605  0168A8  0E1F               	movlw	31
 14606  0168AA  6432               	cpfsgt	btemp^0,c
 14607  0168AC  D00C               	goto	l7155
 14608  0168AE  D7A3               	goto	u6460
 14609  0168B0                     l7153:
 14610                           
 14611                           ;stkvar	_f1 @ sp[(-2)+-4]
 14612  0168B0  90D8               	bcf	status,0,c
 14613  0168B2  0EFA               	movlw	-6
 14614  0168B4  36E3               	rlcf	plusw1,f,c
 14615  0168B6  0EFB               	movlw	-5
 14616  0168B8  36E3               	rlcf	plusw1,f,c
 14617  0168BA  0EFC               	movlw	-4
 14618  0168BC  36E3               	rlcf	plusw1,f,c
 14619  0168BE  0EFD               	movlw	-3
 14620  0168C0  36E3               	rlcf	plusw1,f,c
 14621                           
 14622                           ;stkvar	_exp1 @ sp[(-2)+0]
 14623  0168C2  0EFE               	movlw	-2
 14624  0168C4  06E3               	decf	plusw1,f,c
 14625  0168C6                     l7155:
 14626                           
 14627                           ;stkvar	_exp1 @ sp[(-2)+0]
 14628  0168C6  0EFE               	movlw	-2
 14629  0168C8  50E3               	movf	plusw1,w,c
 14630  0168CA  A4D8               	btfss	status,2,c
 14631  0168CC  D7F1               	goto	l7153
 14632  0168CE                     u6520:
 14633                           
 14634                           ;stkvar	_sign1 @ sp[(-2)+1]
 14635  0168CE  0EFF               	movlw	-1
 14636  0168D0  50E3               	movf	plusw1,w,c
 14637  0168D2  B4D8               	btfsc	status,2,c
 14638  0168D4  D011               	goto	u6540
 14639                           
 14640                           ;stkvar	_f1 @ sp[(-2)+-4]
 14641                           ;stkvar	_f1 @ sp[(-2)+-4]
 14642  0168D6  0EFA               	movlw	-6
 14643  0168D8  6CE3               	negf	plusw1,c
 14644  0168DA  0EFB               	movlw	-5
 14645  0168DC  1EE3               	comf	plusw1,f,c
 14646  0168DE  0EFC               	movlw	-4
 14647  0168E0  1EE3               	comf	plusw1,f,c
 14648  0168E2  0EFD               	movlw	-3
 14649  0168E4  1EE3               	comf	plusw1,f,c
 14650  0168E6  E308               	bnc	u6540
 14651  0168E8  0EFB               	movlw	-5
 14652  0168EA  2AE3               	incf	plusw1,f,c
 14653  0168EC  E305               	bnc	u6540
 14654  0168EE  0EFC               	movlw	-4
 14655  0168F0  2AE3               	incf	plusw1,f,c
 14656  0168F2  E302               	bnc	u6540
 14657  0168F4  0EFD               	movlw	-3
 14658  0168F6  2AE3               	incf	plusw1,f,c
 14659  0168F8                     u6540:
 14660                           
 14661                           ;stkvar	_f1 @ sp[(-2)+-4]
 14662  0168F8  0EFA               	movlw	-6
 14663  0168FA  006F FF8C  F032    	movff	plusw1,btemp
 14664  016900  0EFB               	movlw	-5
 14665  016902  006F FF8C  F033    	movff	plusw1,btemp+1
 14666  016908  0EFC               	movlw	-4
 14667  01690A  006F FF8C  F034    	movff	plusw1,btemp+2
 14668  016910  0EFD               	movlw	-3
 14669  016912  006F FF8C  F035    	movff	plusw1,btemp+3
 14670  016918                     l2341:
 14671                           
 14672                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14673  016918  0EFA               	movlw	250
 14674  01691A  26E1               	addwf	fsr1l,f,c
 14675  01691C  0EFF               	movlw	255
 14676  01691E  22E2               	addwfc	fsr1h,f,c
 14677  016920  0012               	return		;funcret
 14678  016922                     __end_of___fltol:
 14679                           	opt callstack 0
 14680                           
 14681 ;; *************** function ___flsub *****************
 14682 ;; Defined at:
 14683 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 14684 ;; Parameters:    Size  Location     Type
 14685 ;;  b               4  [STACK] long 
 14686 ;;  a               4  [STACK] long 
 14687 ;; Auto vars:     Size  Location     Type
 14688 ;;		None
 14689 ;; Return value:  Size  Location     Type
 14690 ;;                  4  [STACK] long 
 14691 ;; Registers used:
 14692 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 14693 ;; Tracked objects:
 14694 ;;		On entry : 0/39
 14695 ;;		On exit  : 0/0
 14696 ;;		Unchanged: 0/0
 14697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14702 ;;Total ram usage:        0 bytes
 14703 ;; Hardware stack levels used:    1
 14704 ;; Hardware stack levels required when called:    7
 14705 ;; This function calls:
 14706 ;;		___fladd
 14707 ;; This function is called by:
 14708 ;;		_conv_raw_result
 14709 ;;		_lp_filter
 14710 ;;		_efgtoa
 14711 ;; This function uses a reentrant model
 14712 ;;
 14713                           
 14714                           	psect	text53
 14715  018578                     __ptext53:
 14716                           	opt callstack 0
 14717  018578                     ___flsub:
 14718                           	opt callstack 16
 14719                           
 14720                           ;stkvar	_a @ sp[(0)+-8]
 14721                           
 14722                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14723                           ;incstack = 0
 14724  018578  0EFB               	movlw	-5
 14725  01857A  7EE3               	btg	plusw1,7,c
 14726                           
 14727                           ;stkvar	_a @ sp[(0)+-8]
 14728  01857C  0EF8               	movlw	-8
 14729  01857E  006F FF8F FFE6     	movff	plusw1,postinc1
 14730  018584  006F FF8F FFE6     	movff	plusw1,postinc1
 14731  01858A  006F FF8F FFE6     	movff	plusw1,postinc1
 14732  018590  006F FF8F FFE6     	movff	plusw1,postinc1
 14733                           
 14734                           ;stkvar	_b @ sp[(-4)+-4]
 14735  018596  0EF8               	movlw	-8
 14736  018598  006F FF8F FFE6     	movff	plusw1,postinc1
 14737  01859E  006F FF8F FFE6     	movff	plusw1,postinc1
 14738  0185A4  006F FF8F FFE6     	movff	plusw1,postinc1
 14739  0185AA  006F FF8F FFE6     	movff	plusw1,postinc1
 14740  0185B0  EC0D  F095         	call	___fladd	;wreg free
 14741                           
 14742                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 14743  0185B4  0EF8               	movlw	248
 14744  0185B6  26E1               	addwf	fsr1l,f,c
 14745  0185B8  0EFF               	movlw	255
 14746  0185BA  22E2               	addwfc	fsr1h,f,c
 14747  0185BC  0012               	return		;funcret
 14748  0185BE                     __end_of___flsub:
 14749                           	opt callstack 0
 14750                           
 14751 ;; *************** function ___fladd *****************
 14752 ;; Defined at:
 14753 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 14754 ;; Parameters:    Size  Location     Type
 14755 ;;  b               4  [STACK] long 
 14756 ;;  a               4  [STACK] long 
 14757 ;; Auto vars:     Size  Location     Type
 14758 ;;  grs             1  [STACK] unsigned char 
 14759 ;;  bexp            1  [STACK] unsigned char 
 14760 ;;  aexp            1  [STACK] unsigned char 
 14761 ;;  signs           1  [STACK] unsigned char 
 14762 ;; Return value:  Size  Location     Type
 14763 ;;                  4  [STACK] unsigned char 
 14764 ;; Registers used:
 14765 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 14766 ;; Tracked objects:
 14767 ;;		On entry : 0/39
 14768 ;;		On exit  : 0/0
 14769 ;;		Unchanged: 0/0
 14770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14775 ;;Total ram usage:        0 bytes
 14776 ;; Hardware stack levels used:    1
 14777 ;; Hardware stack levels required when called:    6
 14778 ;; This function calls:
 14779 ;;		Nothing
 14780 ;; This function is called by:
 14781 ;;		_lp_filter
 14782 ;;		_efgtoa
 14783 ;;		___flsub
 14784 ;; This function uses a reentrant model
 14785 ;;
 14786                           
 14787                           	psect	text54
 14788  012A1A                     __ptext54:
 14789                           	opt callstack 0
 14790  012A1A                     ___fladd:
 14791                           	opt callstack 0
 14792                           
 14793                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14794  012A1A  52E6               	movf	postinc1,f,c
 14795  012A1C  52E6               	movf	postinc1,f,c
 14796  012A1E  52E6               	movf	postinc1,f,c
 14797  012A20  52E6               	movf	postinc1,f,c
 14798                           
 14799                           ;stkvar	_b @ sp[(-4)+-4]
 14800                           
 14801                           ;incstack = 0
 14802  012A22  0EFB               	movlw	251
 14803  012A24  24E1               	addwf	fsr1l,w,c
 14804  012A26  6ED9               	movwf	fsr2l,c
 14805  012A28  0EFF               	movlw	255
 14806  012A2A  20E2               	addwfc	fsr1h,w,c
 14807  012A2C  6EDA               	movwf	fsr2h,c
 14808  012A2E  50DF               	movf	indf2,w,c
 14809  012A30  6E3D               	movwf	(btemp+11)^0,c
 14810  012A32  0E80               	movlw	128
 14811  012A34  163D               	andwf	(btemp+11)^0,f,c
 14812                           
 14813                           ;stkvar	_signs @ sp[(-4)+3]
 14814  012A36  0EFF               	movlw	-1
 14815  012A38  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14816                           
 14817                           ;stkvar	_b @ sp[(-4)+-4]
 14818  012A3E  0EFB               	movlw	251
 14819  012A40  24E1               	addwf	fsr1l,w,c
 14820  012A42  6ED9               	movwf	fsr2l,c
 14821  012A44  0EFF               	movlw	255
 14822  012A46  20E2               	addwfc	fsr1h,w,c
 14823  012A48  6EDA               	movwf	fsr2h,c
 14824  012A4A  50DF               	movf	indf2,w,c
 14825  012A4C  6E3D               	movwf	(btemp+11)^0,c
 14826  012A4E  90D8               	bcf	status,0,c
 14827  012A50  343D               	rlcf	(btemp+11)^0,w,c
 14828  012A52  6E3C               	movwf	(btemp+10)^0,c
 14829                           
 14830                           ;stkvar	_bexp @ sp[(-4)+1]
 14831  012A54  0EFD               	movlw	-3
 14832  012A56  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14833                           
 14834                           ;stkvar	_b @ sp[(-4)+-4]
 14835  012A5C  0EFA               	movlw	250
 14836  012A5E  24E1               	addwf	fsr1l,w,c
 14837  012A60  6ED9               	movwf	fsr2l,c
 14838  012A62  0EFF               	movlw	255
 14839  012A64  20E2               	addwfc	fsr1h,w,c
 14840  012A66  6EDA               	movwf	fsr2h,c
 14841  012A68  AEDF               	btfss	indf2,7,c
 14842  012A6A  D002               	goto	l6243
 14843                           
 14844                           ;stkvar	_bexp @ sp[(-4)+1]
 14845  012A6C  0EFD               	movlw	-3
 14846  012A6E  80E3               	bsf	plusw1,0,c
 14847  012A70                     l6243:
 14848                           
 14849                           ;stkvar	_bexp @ sp[(-4)+1]
 14850  012A70  0EFD               	movlw	-3
 14851  012A72  50E3               	movf	plusw1,w,c
 14852  012A74  B4D8               	btfsc	status,2,c
 14853  012A76  D027               	goto	l6253
 14854                           
 14855                           ;stkvar	_bexp @ sp[(-4)+1]
 14856  012A78  0EFD               	movlw	-3
 14857  012A7A  28E3               	incf	plusw1,w,c
 14858  012A7C  A4D8               	btfss	status,2,c
 14859  012A7E  D018               	goto	l6249
 14860  012A80  0E00               	movlw	0
 14861  012A82  6E3A               	movwf	(btemp+8)^0,c
 14862  012A84  0E00               	movlw	0
 14863  012A86  6E3B               	movwf	(btemp+9)^0,c
 14864  012A88  0E00               	movlw	0
 14865  012A8A  6E3C               	movwf	(btemp+10)^0,c
 14866  012A8C  0E00               	movlw	0
 14867  012A8E  6E3D               	movwf	(btemp+11)^0,c
 14868                           
 14869                           ;stkvar	_b @ sp[(-4)+-4]
 14870  012A90  0EF8               	movlw	-8
 14871  012A92  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14872  012A98  0EF9               	movlw	-7
 14873  012A9A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14874  012AA0  0EFA               	movlw	-6
 14875  012AA2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14876  012AA8  0EFB               	movlw	-5
 14877  012AAA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14878  012AB0                     l6249:
 14879                           
 14880                           ;stkvar	_b @ sp[(-4)+-4]
 14881  012AB0  0EFA               	movlw	-6
 14882  012AB2  8EE3               	bsf	plusw1,7,c
 14883                           
 14884                           ;stkvar	_b @ sp[(-4)+-4]
 14885  012AB4  0EFB               	movlw	251
 14886  012AB6  24E1               	addwf	fsr1l,w,c
 14887  012AB8  6ED9               	movwf	fsr2l,c
 14888  012ABA  0EFF               	movlw	255
 14889  012ABC  20E2               	addwfc	fsr1h,w,c
 14890  012ABE  6EDA               	movwf	fsr2h,c
 14891  012AC0  0E00               	movlw	0
 14892  012AC2  6EDF               	movwf	indf2,c
 14893  012AC4  D018               	goto	l6255
 14894  012AC6                     l6253:
 14895  012AC6  0E00               	movlw	0
 14896  012AC8  6E3A               	movwf	(btemp+8)^0,c
 14897  012ACA  0E00               	movlw	0
 14898  012ACC  6E3B               	movwf	(btemp+9)^0,c
 14899  012ACE  0E00               	movlw	0
 14900  012AD0  6E3C               	movwf	(btemp+10)^0,c
 14901  012AD2  0E00               	movlw	0
 14902  012AD4  6E3D               	movwf	(btemp+11)^0,c
 14903                           
 14904                           ;stkvar	_b @ sp[(-4)+-4]
 14905  012AD6  0EF8               	movlw	-8
 14906  012AD8  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14907  012ADE  0EF9               	movlw	-7
 14908  012AE0  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14909  012AE6  0EFA               	movlw	-6
 14910  012AE8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14911  012AEE  0EFB               	movlw	-5
 14912  012AF0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14913  012AF6                     l6255:
 14914                           
 14915                           ;stkvar	_a @ sp[(-4)+-8]
 14916  012AF6  0EF7               	movlw	247
 14917  012AF8  24E1               	addwf	fsr1l,w,c
 14918  012AFA  6ED9               	movwf	fsr2l,c
 14919  012AFC  0EFF               	movlw	255
 14920  012AFE  20E2               	addwfc	fsr1h,w,c
 14921  012B00  6EDA               	movwf	fsr2h,c
 14922  012B02  50DF               	movf	indf2,w,c
 14923  012B04  6E3D               	movwf	(btemp+11)^0,c
 14924  012B06  0E80               	movlw	128
 14925  012B08  163D               	andwf	(btemp+11)^0,f,c
 14926                           
 14927                           ;stkvar	_aexp @ sp[(-4)+2]
 14928  012B0A  0EFE               	movlw	-2
 14929  012B0C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14930                           
 14931                           ;stkvar	_signs @ sp[(-4)+3]
 14932                           ;stkvar	_aexp @ sp[(-4)+2]
 14933  012B12  50E1               	movf	fsr1l,w,c
 14934  012B14  0FFE               	addlw	-2
 14935  012B16  6ED9               	movwf	fsr2l,c
 14936  012B18  50E2               	movf	fsr1h,w,c
 14937  012B1A  6EDA               	movwf	fsr2h,c
 14938  012B1C  0EFF               	movlw	255
 14939  012B1E  22DA               	addwfc	fsr2h,f,c
 14940  012B20  0EFF               	movlw	-1
 14941  012B22  50E3               	movf	plusw1,w,c
 14942  012B24  18DE               	xorwf	postinc2,w,c
 14943  012B26  B4D8               	btfsc	status,2,c
 14944  012B28  D002               	goto	l6261
 14945                           
 14946                           ;stkvar	_signs @ sp[(-4)+3]
 14947  012B2A  0EFF               	movlw	-1
 14948  012B2C  8CE3               	bsf	plusw1,6,c
 14949  012B2E                     l6261:
 14950                           
 14951                           ;stkvar	_a @ sp[(-4)+-8]
 14952  012B2E  0EF7               	movlw	247
 14953  012B30  24E1               	addwf	fsr1l,w,c
 14954  012B32  6ED9               	movwf	fsr2l,c
 14955  012B34  0EFF               	movlw	255
 14956  012B36  20E2               	addwfc	fsr1h,w,c
 14957  012B38  6EDA               	movwf	fsr2h,c
 14958  012B3A  50DF               	movf	indf2,w,c
 14959  012B3C  6E3D               	movwf	(btemp+11)^0,c
 14960  012B3E  90D8               	bcf	status,0,c
 14961  012B40  343D               	rlcf	(btemp+11)^0,w,c
 14962  012B42  6E3C               	movwf	(btemp+10)^0,c
 14963                           
 14964                           ;stkvar	_aexp @ sp[(-4)+2]
 14965  012B44  0EFE               	movlw	-2
 14966  012B46  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14967                           
 14968                           ;stkvar	_a @ sp[(-4)+-8]
 14969  012B4C  0EF6               	movlw	246
 14970  012B4E  24E1               	addwf	fsr1l,w,c
 14971  012B50  6ED9               	movwf	fsr2l,c
 14972  012B52  0EFF               	movlw	255
 14973  012B54  20E2               	addwfc	fsr1h,w,c
 14974  012B56  6EDA               	movwf	fsr2h,c
 14975  012B58  AEDF               	btfss	indf2,7,c
 14976  012B5A  D002               	goto	l6267
 14977                           
 14978                           ;stkvar	_aexp @ sp[(-4)+2]
 14979  012B5C  0EFE               	movlw	-2
 14980  012B5E  80E3               	bsf	plusw1,0,c
 14981  012B60                     l6267:
 14982                           
 14983                           ;stkvar	_aexp @ sp[(-4)+2]
 14984  012B60  0EFE               	movlw	-2
 14985  012B62  50E3               	movf	plusw1,w,c
 14986  012B64  B4D8               	btfsc	status,2,c
 14987  012B66  D027               	goto	l6277
 14988                           
 14989                           ;stkvar	_aexp @ sp[(-4)+2]
 14990  012B68  0EFE               	movlw	-2
 14991  012B6A  28E3               	incf	plusw1,w,c
 14992  012B6C  A4D8               	btfss	status,2,c
 14993  012B6E  D018               	goto	l6273
 14994  012B70  0E00               	movlw	0
 14995  012B72  6E3A               	movwf	(btemp+8)^0,c
 14996  012B74  0E00               	movlw	0
 14997  012B76  6E3B               	movwf	(btemp+9)^0,c
 14998  012B78  0E00               	movlw	0
 14999  012B7A  6E3C               	movwf	(btemp+10)^0,c
 15000  012B7C  0E00               	movlw	0
 15001  012B7E  6E3D               	movwf	(btemp+11)^0,c
 15002                           
 15003                           ;stkvar	_a @ sp[(-4)+-8]
 15004  012B80  0EF4               	movlw	-12
 15005  012B82  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15006  012B88  0EF5               	movlw	-11
 15007  012B8A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15008  012B90  0EF6               	movlw	-10
 15009  012B92  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15010  012B98  0EF7               	movlw	-9
 15011  012B9A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15012  012BA0                     l6273:
 15013                           
 15014                           ;stkvar	_a @ sp[(-4)+-8]
 15015  012BA0  0EF6               	movlw	-10
 15016  012BA2  8EE3               	bsf	plusw1,7,c
 15017                           
 15018                           ;stkvar	_a @ sp[(-4)+-8]
 15019  012BA4  0EF7               	movlw	247
 15020  012BA6  24E1               	addwf	fsr1l,w,c
 15021  012BA8  6ED9               	movwf	fsr2l,c
 15022  012BAA  0EFF               	movlw	255
 15023  012BAC  20E2               	addwfc	fsr1h,w,c
 15024  012BAE  6EDA               	movwf	fsr2h,c
 15025  012BB0  0E00               	movlw	0
 15026  012BB2  6EDF               	movwf	indf2,c
 15027  012BB4  D018               	goto	l6279
 15028  012BB6                     l6277:
 15029  012BB6  0E00               	movlw	0
 15030  012BB8  6E3A               	movwf	(btemp+8)^0,c
 15031  012BBA  0E00               	movlw	0
 15032  012BBC  6E3B               	movwf	(btemp+9)^0,c
 15033  012BBE  0E00               	movlw	0
 15034  012BC0  6E3C               	movwf	(btemp+10)^0,c
 15035  012BC2  0E00               	movlw	0
 15036  012BC4  6E3D               	movwf	(btemp+11)^0,c
 15037                           
 15038                           ;stkvar	_a @ sp[(-4)+-8]
 15039  012BC6  0EF4               	movlw	-12
 15040  012BC8  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15041  012BCE  0EF5               	movlw	-11
 15042  012BD0  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15043  012BD6  0EF6               	movlw	-10
 15044  012BD8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15045  012BDE  0EF7               	movlw	-9
 15046  012BE0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15047  012BE6                     l6279:
 15048                           
 15049                           ;stkvar	_bexp @ sp[(-4)+1]
 15050                           ;stkvar	_aexp @ sp[(-4)+2]
 15051  012BE6  50E1               	movf	fsr1l,w,c
 15052  012BE8  0FFE               	addlw	-2
 15053  012BEA  6ED9               	movwf	fsr2l,c
 15054  012BEC  50E2               	movf	fsr1h,w,c
 15055  012BEE  6EDA               	movwf	fsr2h,c
 15056  012BF0  0EFF               	movlw	255
 15057  012BF2  22DA               	addwfc	fsr2h,f,c
 15058  012BF4  0EFD               	movlw	-3
 15059  012BF6  50E3               	movf	plusw1,w,c
 15060  012BF8  5CDE               	subwf	postinc2,w,c
 15061  012BFA  B0D8               	btfsc	status,0,c
 15062  012BFC  D0A4               	goto	l6315
 15063                           
 15064                           ;stkvar	_signs @ sp[(-4)+3]
 15065  012BFE  0EFF               	movlw	-1
 15066  012C00  ACE3               	btfss	plusw1,6,c
 15067  012C02  D002               	goto	l6285
 15068                           
 15069                           ;stkvar	_signs @ sp[(-4)+3]
 15070  012C04  0EFF               	movlw	-1
 15071  012C06  7EE3               	btg	plusw1,7,c
 15072  012C08                     l6285:
 15073                           
 15074                           ;stkvar	_bexp @ sp[(-4)+1]
 15075                           ;stkvar	_grs @ sp[(-4)+0]
 15076  012C08  0EFD               	movlw	-3
 15077  012C0A  006F FF8C  F032    	movff	plusw1,btemp
 15078  012C10  0EFC               	movlw	-4
 15079  012C12  0060  F0CB  FFE3   	movff	btemp,plusw1
 15080                           
 15081                           ;stkvar	_aexp @ sp[(-4)+2]
 15082                           ;stkvar	_bexp @ sp[(-4)+1]
 15083  012C18  0EFE               	movlw	-2
 15084  012C1A  006F FF8C  F032    	movff	plusw1,btemp
 15085  012C20  0EFD               	movlw	-3
 15086  012C22  0060  F0CB  FFE3   	movff	btemp,plusw1
 15087                           
 15088                           ;stkvar	_grs @ sp[(-4)+0]
 15089                           ;stkvar	_aexp @ sp[(-4)+2]
 15090  012C28  0EFC               	movlw	-4
 15091  012C2A  006F FF8C  F032    	movff	plusw1,btemp
 15092  012C30  0EFE               	movlw	-2
 15093  012C32  0060  F0CB  FFE3   	movff	btemp,plusw1
 15094                           
 15095                           ;stkvar	_b @ sp[(-4)+-4]
 15096                           ;stkvar	_grs @ sp[(-4)+0]
 15097  012C38  0EF8               	movlw	-8
 15098  012C3A  006F FF8C  F032    	movff	plusw1,btemp
 15099  012C40  0EFC               	movlw	-4
 15100  012C42  0060  F0CB  FFE3   	movff	btemp,plusw1
 15101                           
 15102                           ;stkvar	_a @ sp[(-4)+-8]
 15103                           ;stkvar	_b @ sp[(-4)+-4]
 15104  012C48  0EF4               	movlw	-12
 15105  012C4A  006F FF8C  F032    	movff	plusw1,btemp
 15106  012C50  0EF8               	movlw	-8
 15107  012C52  0060  F0CB  FFE3   	movff	btemp,plusw1
 15108                           
 15109                           ;stkvar	_grs @ sp[(-4)+0]
 15110                           ;stkvar	_a @ sp[(-4)+-8]
 15111  012C58  0EFC               	movlw	-4
 15112  012C5A  006F FF8C  F032    	movff	plusw1,btemp
 15113  012C60  0EF4               	movlw	-12
 15114  012C62  0060  F0CB  FFE3   	movff	btemp,plusw1
 15115                           
 15116                           ;stkvar	_b @ sp[(-4)+-4]
 15117  012C68  0EF9               	movlw	249
 15118  012C6A  24E1               	addwf	fsr1l,w,c
 15119  012C6C  6ED9               	movwf	fsr2l,c
 15120  012C6E  0EFF               	movlw	255
 15121  012C70  20E2               	addwfc	fsr1h,w,c
 15122  012C72  6EDA               	movwf	fsr2h,c
 15123  012C74  50DF               	movf	indf2,w,c
 15124  012C76  6E3D               	movwf	(btemp+11)^0,c
 15125                           
 15126                           ;stkvar	_grs @ sp[(-4)+0]
 15127  012C78  0EFC               	movlw	-4
 15128  012C7A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15129                           
 15130                           ;stkvar	_a @ sp[(-4)+-8]
 15131  012C80  0EF5               	movlw	245
 15132  012C82  24E1               	addwf	fsr1l,w,c
 15133  012C84  6ED9               	movwf	fsr2l,c
 15134  012C86  0EFF               	movlw	255
 15135  012C88  20E2               	addwfc	fsr1h,w,c
 15136  012C8A  6EDA               	movwf	fsr2h,c
 15137                           
 15138                           ;stkvar	_b @ sp[(-4)+-4]
 15139  012C8C  0EF9               	movlw	249
 15140  012C8E  24E1               	addwf	fsr1l,w,c
 15141  012C90  6EE9               	movwf	fsr0l,c
 15142  012C92  0EFF               	movlw	255
 15143  012C94  20E2               	addwfc	fsr1h,w,c
 15144  012C96  6EEA               	movwf	fsr0h,c
 15145  012C98  006F FF7F FFEF     	movff	indf2,indf0
 15146                           
 15147                           ;stkvar	_grs @ sp[(-4)+0]
 15148                           ;stkvar	_a @ sp[(-4)+-8]
 15149  012C9E  0EF5               	movlw	245
 15150  012CA0  24E1               	addwf	fsr1l,w,c
 15151  012CA2  6ED9               	movwf	fsr2l,c
 15152  012CA4  0EFF               	movlw	255
 15153  012CA6  20E2               	addwfc	fsr1h,w,c
 15154  012CA8  6EDA               	movwf	fsr2h,c
 15155  012CAA  0EFC               	movlw	-4
 15156  012CAC  006F FF8F FFDF     	movff	plusw1,indf2
 15157                           
 15158                           ;stkvar	_b @ sp[(-4)+-4]
 15159  012CB2  0EFA               	movlw	250
 15160  012CB4  24E1               	addwf	fsr1l,w,c
 15161  012CB6  6ED9               	movwf	fsr2l,c
 15162  012CB8  0EFF               	movlw	255
 15163  012CBA  20E2               	addwfc	fsr1h,w,c
 15164  012CBC  6EDA               	movwf	fsr2h,c
 15165  012CBE  50DF               	movf	indf2,w,c
 15166  012CC0  6E3D               	movwf	(btemp+11)^0,c
 15167                           
 15168                           ;stkvar	_grs @ sp[(-4)+0]
 15169  012CC2  0EFC               	movlw	-4
 15170  012CC4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15171                           
 15172                           ;stkvar	_a @ sp[(-4)+-8]
 15173  012CCA  0EF6               	movlw	246
 15174  012CCC  24E1               	addwf	fsr1l,w,c
 15175  012CCE  6ED9               	movwf	fsr2l,c
 15176  012CD0  0EFF               	movlw	255
 15177  012CD2  20E2               	addwfc	fsr1h,w,c
 15178  012CD4  6EDA               	movwf	fsr2h,c
 15179                           
 15180                           ;stkvar	_b @ sp[(-4)+-4]
 15181  012CD6  0EFA               	movlw	250
 15182  012CD8  24E1               	addwf	fsr1l,w,c
 15183  012CDA  6EE9               	movwf	fsr0l,c
 15184  012CDC  0EFF               	movlw	255
 15185  012CDE  20E2               	addwfc	fsr1h,w,c
 15186  012CE0  6EEA               	movwf	fsr0h,c
 15187  012CE2  006F FF7F FFEF     	movff	indf2,indf0
 15188                           
 15189                           ;stkvar	_grs @ sp[(-4)+0]
 15190                           ;stkvar	_a @ sp[(-4)+-8]
 15191  012CE8  0EF6               	movlw	246
 15192  012CEA  24E1               	addwf	fsr1l,w,c
 15193  012CEC  6ED9               	movwf	fsr2l,c
 15194  012CEE  0EFF               	movlw	255
 15195  012CF0  20E2               	addwfc	fsr1h,w,c
 15196  012CF2  6EDA               	movwf	fsr2h,c
 15197  012CF4  0EFC               	movlw	-4
 15198  012CF6  006F FF8F FFDF     	movff	plusw1,indf2
 15199                           
 15200                           ;stkvar	_b @ sp[(-4)+-4]
 15201  012CFC  0EFB               	movlw	251
 15202  012CFE  24E1               	addwf	fsr1l,w,c
 15203  012D00  6ED9               	movwf	fsr2l,c
 15204  012D02  0EFF               	movlw	255
 15205  012D04  20E2               	addwfc	fsr1h,w,c
 15206  012D06  6EDA               	movwf	fsr2h,c
 15207  012D08  50DF               	movf	indf2,w,c
 15208  012D0A  6E3D               	movwf	(btemp+11)^0,c
 15209                           
 15210                           ;stkvar	_grs @ sp[(-4)+0]
 15211  012D0C  0EFC               	movlw	-4
 15212  012D0E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15213                           
 15214                           ;stkvar	_a @ sp[(-4)+-8]
 15215  012D14  0EF7               	movlw	247
 15216  012D16  24E1               	addwf	fsr1l,w,c
 15217  012D18  6ED9               	movwf	fsr2l,c
 15218  012D1A  0EFF               	movlw	255
 15219  012D1C  20E2               	addwfc	fsr1h,w,c
 15220  012D1E  6EDA               	movwf	fsr2h,c
 15221                           
 15222                           ;stkvar	_b @ sp[(-4)+-4]
 15223  012D20  0EFB               	movlw	251
 15224  012D22  24E1               	addwf	fsr1l,w,c
 15225  012D24  6EE9               	movwf	fsr0l,c
 15226  012D26  0EFF               	movlw	255
 15227  012D28  20E2               	addwfc	fsr1h,w,c
 15228  012D2A  6EEA               	movwf	fsr0h,c
 15229  012D2C  006F FF7F FFEF     	movff	indf2,indf0
 15230                           
 15231                           ;stkvar	_grs @ sp[(-4)+0]
 15232                           ;stkvar	_a @ sp[(-4)+-8]
 15233  012D32  0EF7               	movlw	247
 15234  012D34  24E1               	addwf	fsr1l,w,c
 15235  012D36  6ED9               	movwf	fsr2l,c
 15236  012D38  0EFF               	movlw	255
 15237  012D3A  20E2               	addwfc	fsr1h,w,c
 15238  012D3C  6EDA               	movwf	fsr2h,c
 15239  012D3E  0EFC               	movlw	-4
 15240  012D40  006F FF8F FFDF     	movff	plusw1,indf2
 15241  012D46                     l6315:
 15242                           
 15243                           ;stkvar	_grs @ sp[(-4)+0]
 15244  012D46  0EFC               	movlw	-4
 15245  012D48  6AE3               	clrf	plusw1,c
 15246                           
 15247                           ;stkvar	_aexp @ sp[(-4)+2]
 15248  012D4A  0EFE               	movlw	-2
 15249  012D4C  50E3               	movf	plusw1,w,c
 15250  012D4E  6E3C               	movwf	(btemp+10)^0,c
 15251  012D50  6A3D               	clrf	(btemp+11)^0,c
 15252                           
 15253                           ;stkvar	_bexp @ sp[(-4)+1]
 15254  012D52  0EFD               	movlw	-3
 15255  012D54  50E3               	movf	plusw1,w,c
 15256  012D56  5E3C               	subwf	(btemp+10)^0,f,c
 15257  012D58  0E00               	movlw	0
 15258  012D5A  5A3D               	subwfb	(btemp+11)^0,f,c
 15259  012D5C  BE3D               	btfsc	(btemp+11)^0,7,c
 15260  012D5E  D062               	goto	l6339
 15261  012D60  503D               	movf	(btemp+11)^0,w,c
 15262  012D62  E104               	bnz	u4840
 15263  012D64  0E1A               	movlw	26
 15264  012D66  5C3C               	subwf	(btemp+10)^0,w,c
 15265  012D68  A0D8               	btfss	status,0,c
 15266  012D6A  D05C               	goto	l6339
 15267  012D6C                     u4840:
 15268                           
 15269                           ;stkvar	_b @ sp[(-4)+-4]
 15270  012D6C  0EF8               	movlw	-8
 15271  012D6E  50E3               	movf	plusw1,w,c
 15272  012D70  E10A               	bnz	u4851
 15273  012D72  0EF9               	movlw	-7
 15274  012D74  50E3               	movf	plusw1,w,c
 15275  012D76  E107               	bnz	u4851
 15276  012D78  0EFA               	movlw	-6
 15277  012D7A  50E3               	movf	plusw1,w,c
 15278  012D7C  E104               	bnz	u4851
 15279  012D7E  0EFB               	movlw	-5
 15280  012D80  50E3               	movf	plusw1,w,c
 15281  012D82  B4D8               	btfsc	status,2,c
 15282  012D84  D003               	goto	u4850
 15283  012D86                     u4851:
 15284  012D86  6A3D               	clrf	(btemp+11)^0,c
 15285  012D88  2A3D               	incf	(btemp+11)^0,f,c
 15286  012D8A  D001               	goto	u4868
 15287  012D8C                     u4850:
 15288  012D8C  6A3D               	clrf	(btemp+11)^0,c
 15289  012D8E                     u4868:
 15290                           
 15291                           ;stkvar	_grs @ sp[(-4)+0]
 15292  012D8E  0EFC               	movlw	-4
 15293  012D90  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15294                           
 15295                           ;stkvar	_b @ sp[(-4)+-4]
 15296  012D96  0EF8               	movlw	-8
 15297  012D98  6AE3               	clrf	plusw1,c
 15298  012D9A  0EF9               	movlw	-7
 15299  012D9C  6AE3               	clrf	plusw1,c
 15300  012D9E  0EFA               	movlw	-6
 15301  012DA0  6AE3               	clrf	plusw1,c
 15302  012DA2  0EFB               	movlw	-5
 15303  012DA4  6AE3               	clrf	plusw1,c
 15304                           
 15305                           ;stkvar	_aexp @ sp[(-4)+2]
 15306                           ;stkvar	_bexp @ sp[(-4)+1]
 15307  012DA6  0EFE               	movlw	-2
 15308  012DA8  006F FF8C  F032    	movff	plusw1,btemp
 15309  012DAE  0EFD               	movlw	-3
 15310  012DB0  0060  F0CB  FFE3   	movff	btemp,plusw1
 15311  012DB6  D042               	goto	u4900
 15312  012DB8                     l6325:
 15313                           
 15314                           ;stkvar	_grs @ sp[(-4)+0]
 15315  012DB8  0EFC               	movlw	-4
 15316  012DBA  A0E3               	btfss	plusw1,0,c
 15317  012DBC  D00D               	goto	l6329
 15318                           
 15319                           ;stkvar	_grs @ sp[(-4)+0]
 15320  012DBE  0EFC               	movlw	-4
 15321  012DC0  006F FF8C  F03D    	movff	plusw1,btemp+11
 15322  012DC6  90D8               	bcf	status,0,c
 15323  012DC8  323D               	rrcf	(btemp+11)^0,f,c
 15324  012DCA  0E01               	movlw	1
 15325  012DCC  123D               	iorwf	(btemp+11)^0,f,c
 15326                           
 15327                           ;stkvar	_grs @ sp[(-4)+0]
 15328  012DCE  0EFC               	movlw	-4
 15329  012DD0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15330  012DD6  D009               	goto	l6331
 15331  012DD8                     l6329:
 15332                           
 15333                           ;stkvar	_grs @ sp[(-4)+0]
 15334  012DD8  50E1               	movf	fsr1l,w,c
 15335  012DDA  0FFC               	addlw	-4
 15336  012DDC  6ED9               	movwf	fsr2l,c
 15337  012DDE  50E2               	movf	fsr1h,w,c
 15338  012DE0  6EDA               	movwf	fsr2h,c
 15339  012DE2  0EFF               	movlw	255
 15340  012DE4  22DA               	addwfc	fsr2h,f,c
 15341  012DE6  90D8               	bcf	status,0,c
 15342  012DE8  32DF               	rrcf	indf2,f,c
 15343  012DEA                     l6331:
 15344                           
 15345                           ;stkvar	_b @ sp[(-4)+-4]
 15346  012DEA  0EF8               	movlw	-8
 15347  012DEC  A0E3               	btfss	plusw1,0,c
 15348  012DEE  D002               	goto	l6335
 15349                           
 15350                           ;stkvar	_grs @ sp[(-4)+0]
 15351  012DF0  0EFC               	movlw	-4
 15352  012DF2  8EE3               	bsf	plusw1,7,c
 15353  012DF4                     l6335:
 15354  012DF4  0E01               	movlw	1
 15355  012DF6  6E3D               	movwf	(btemp+11)^0,c
 15356                           
 15357                           ;stkvar	_b @ sp[(-4)+-4]
 15358  012DF8  50E1               	movf	fsr1l,w,c
 15359  012DFA  0FF8               	addlw	-8
 15360  012DFC  6ED9               	movwf	fsr2l,c
 15361  012DFE  50E2               	movf	fsr1h,w,c
 15362  012E00  6EDA               	movwf	fsr2h,c
 15363  012E02  0EFF               	movlw	255
 15364  012E04  22DA               	addwfc	fsr2h,f,c
 15365  012E06  283D               	incf	(btemp+11)^0,w,c
 15366  012E08  52DE               	movf	postinc2,f,c
 15367  012E0A  D008               	goto	u4890
 15368  012E0C                     u4895:
 15369  012E0C  52DE               	movf	postinc2,f,c
 15370  012E0E  90D8               	bcf	status,0,c
 15371  012E10  BEDC               	btfsc	preinc2,7,c
 15372  012E12  80D8               	bsf	status,0,c
 15373  012E14  32DD               	rrcf	postdec2,f,c
 15374  012E16  32DD               	rrcf	postdec2,f,c
 15375  012E18  32DD               	rrcf	postdec2,f,c
 15376  012E1A  32DE               	rrcf	postinc2,f,c
 15377  012E1C                     u4890:
 15378  012E1C  2EE8               	decfsz	wreg,f,c
 15379  012E1E  D7F6               	goto	u4895
 15380                           
 15381                           ;stkvar	_bexp @ sp[(-4)+1]
 15382  012E20  0EFD               	movlw	-3
 15383  012E22  2AE3               	incf	plusw1,f,c
 15384  012E24                     l6339:
 15385                           
 15386                           ;stkvar	_aexp @ sp[(-4)+2]
 15387                           ;stkvar	_bexp @ sp[(-4)+1]
 15388  012E24  50E1               	movf	fsr1l,w,c
 15389  012E26  0FFD               	addlw	-3
 15390  012E28  6ED9               	movwf	fsr2l,c
 15391  012E2A  50E2               	movf	fsr1h,w,c
 15392  012E2C  6EDA               	movwf	fsr2h,c
 15393  012E2E  0EFF               	movlw	255
 15394  012E30  22DA               	addwfc	fsr2h,f,c
 15395  012E32  0EFE               	movlw	-2
 15396  012E34  50E3               	movf	plusw1,w,c
 15397  012E36  5CDE               	subwf	postinc2,w,c
 15398  012E38  A0D8               	btfss	status,0,c
 15399  012E3A  D7BE               	goto	l6325
 15400  012E3C                     u4900:
 15401                           
 15402                           ;stkvar	_signs @ sp[(-4)+3]
 15403  012E3C  0EFF               	movlw	-1
 15404  012E3E  BCE3               	btfsc	plusw1,6,c
 15405  012E40  D066               	goto	l6367
 15406                           
 15407                           ;stkvar	_bexp @ sp[(-4)+1]
 15408  012E42  0EFD               	movlw	-3
 15409  012E44  50E3               	movf	plusw1,w,c
 15410  012E46  B4D8               	btfsc	status,2,c
 15411  012E48  D0F2               	goto	u5000
 15412                           
 15413                           ;stkvar	_a @ sp[(-4)+-8]
 15414                           ;stkvar	_b @ sp[(-4)+-4]
 15415  012E4A  0EF8               	movlw	-8
 15416  012E4C  50E3               	movf	plusw1,w,c
 15417  012E4E  6E32               	movwf	btemp^0,c
 15418  012E50  0EF4               	movlw	-12
 15419  012E52  50E3               	movf	plusw1,w,c
 15420  012E54  2632               	addwf	btemp^0,f,c
 15421  012E56  0EF8               	movlw	-8
 15422  012E58  0060  F0CB  FFE3   	movff	btemp,plusw1
 15423  012E5E  0EF9               	movlw	-7
 15424  012E60  50E3               	movf	plusw1,w,c
 15425  012E62  6E32               	movwf	btemp^0,c
 15426  012E64  0EF5               	movlw	-11
 15427  012E66  50E3               	movf	plusw1,w,c
 15428  012E68  2232               	addwfc	btemp^0,f,c
 15429  012E6A  0EF9               	movlw	-7
 15430  012E6C  0060  F0CB  FFE3   	movff	btemp,plusw1
 15431  012E72  0EFA               	movlw	-6
 15432  012E74  50E3               	movf	plusw1,w,c
 15433  012E76  6E32               	movwf	btemp^0,c
 15434  012E78  0EF6               	movlw	-10
 15435  012E7A  50E3               	movf	plusw1,w,c
 15436  012E7C  2232               	addwfc	btemp^0,f,c
 15437  012E7E  0EFA               	movlw	-6
 15438  012E80  0060  F0CB  FFE3   	movff	btemp,plusw1
 15439  012E86  0EFB               	movlw	-5
 15440  012E88  50E3               	movf	plusw1,w,c
 15441  012E8A  6E32               	movwf	btemp^0,c
 15442  012E8C  0EF7               	movlw	-9
 15443  012E8E  50E3               	movf	plusw1,w,c
 15444  012E90  2232               	addwfc	btemp^0,f,c
 15445  012E92  0EFB               	movlw	-5
 15446  012E94  0060  F0CB  FFE3   	movff	btemp,plusw1
 15447                           
 15448                           ;stkvar	_b @ sp[(-4)+-4]
 15449  012E9A  0EFB               	movlw	-5
 15450  012E9C  A0E3               	btfss	plusw1,0,c
 15451  012E9E  D101               	goto	u5040
 15452                           
 15453                           ;stkvar	_grs @ sp[(-4)+0]
 15454  012EA0  0EFC               	movlw	-4
 15455  012EA2  A0E3               	btfss	plusw1,0,c
 15456  012EA4  D00D               	goto	l6357
 15457                           
 15458                           ;stkvar	_grs @ sp[(-4)+0]
 15459  012EA6  0EFC               	movlw	-4
 15460  012EA8  006F FF8C  F03D    	movff	plusw1,btemp+11
 15461  012EAE  90D8               	bcf	status,0,c
 15462  012EB0  323D               	rrcf	(btemp+11)^0,f,c
 15463  012EB2  0E01               	movlw	1
 15464  012EB4  123D               	iorwf	(btemp+11)^0,f,c
 15465                           
 15466                           ;stkvar	_grs @ sp[(-4)+0]
 15467  012EB6  0EFC               	movlw	-4
 15468  012EB8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15469  012EBE  D009               	goto	l6359
 15470  012EC0                     l6357:
 15471                           
 15472                           ;stkvar	_grs @ sp[(-4)+0]
 15473  012EC0  50E1               	movf	fsr1l,w,c
 15474  012EC2  0FFC               	addlw	-4
 15475  012EC4  6ED9               	movwf	fsr2l,c
 15476  012EC6  50E2               	movf	fsr1h,w,c
 15477  012EC8  6EDA               	movwf	fsr2h,c
 15478  012ECA  0EFF               	movlw	255
 15479  012ECC  22DA               	addwfc	fsr2h,f,c
 15480  012ECE  90D8               	bcf	status,0,c
 15481  012ED0  32DF               	rrcf	indf2,f,c
 15482  012ED2                     l6359:
 15483                           
 15484                           ;stkvar	_b @ sp[(-4)+-4]
 15485  012ED2  0EF8               	movlw	-8
 15486  012ED4  A0E3               	btfss	plusw1,0,c
 15487  012ED6  D002               	goto	l6363
 15488                           
 15489                           ;stkvar	_grs @ sp[(-4)+0]
 15490  012ED8  0EFC               	movlw	-4
 15491  012EDA  8EE3               	bsf	plusw1,7,c
 15492  012EDC                     l6363:
 15493  012EDC  0E01               	movlw	1
 15494  012EDE  6E3D               	movwf	(btemp+11)^0,c
 15495                           
 15496                           ;stkvar	_b @ sp[(-4)+-4]
 15497  012EE0  50E1               	movf	fsr1l,w,c
 15498  012EE2  0FF8               	addlw	-8
 15499  012EE4  6ED9               	movwf	fsr2l,c
 15500  012EE6  50E2               	movf	fsr1h,w,c
 15501  012EE8  6EDA               	movwf	fsr2h,c
 15502  012EEA  0EFF               	movlw	255
 15503  012EEC  22DA               	addwfc	fsr2h,f,c
 15504  012EEE  283D               	incf	(btemp+11)^0,w,c
 15505  012EF0  52DE               	movf	postinc2,f,c
 15506  012EF2  D008               	goto	u4960
 15507  012EF4                     u4965:
 15508  012EF4  52DE               	movf	postinc2,f,c
 15509  012EF6  90D8               	bcf	status,0,c
 15510  012EF8  BEDC               	btfsc	preinc2,7,c
 15511  012EFA  80D8               	bsf	status,0,c
 15512  012EFC  32DD               	rrcf	postdec2,f,c
 15513  012EFE  32DD               	rrcf	postdec2,f,c
 15514  012F00  32DD               	rrcf	postdec2,f,c
 15515  012F02  32DE               	rrcf	postinc2,f,c
 15516  012F04                     u4960:
 15517  012F04  2EE8               	decfsz	wreg,f,c
 15518  012F06  D7F6               	goto	u4965
 15519                           
 15520                           ;stkvar	_bexp @ sp[(-4)+1]
 15521  012F08  0EFD               	movlw	-3
 15522  012F0A  2AE3               	incf	plusw1,f,c
 15523  012F0C  D0CA               	goto	u5040
 15524  012F0E                     l6367:
 15525                           
 15526                           ;stkvar	_a @ sp[(-4)+-8]
 15527                           ;stkvar	_b @ sp[(-4)+-4]
 15528  012F0E  50E1               	movf	fsr1l,w,c
 15529  012F10  0FF8               	addlw	-8
 15530  012F12  6ED9               	movwf	fsr2l,c
 15531  012F14  50E2               	movf	fsr1h,w,c
 15532  012F16  6EDA               	movwf	fsr2h,c
 15533  012F18  0EFF               	movlw	255
 15534  012F1A  22DA               	addwfc	fsr2h,f,c
 15535  012F1C  0EF4               	movlw	-12
 15536  012F1E  50E3               	movf	plusw1,w,c
 15537  012F20  5CDE               	subwf	postinc2,w,c
 15538  012F22  0EF5               	movlw	-11
 15539  012F24  50E3               	movf	plusw1,w,c
 15540  012F26  58DE               	subwfb	postinc2,w,c
 15541  012F28  0EF6               	movlw	-10
 15542  012F2A  50E3               	movf	plusw1,w,c
 15543  012F2C  58DE               	subwfb	postinc2,w,c
 15544  012F2E  50DE               	movf	postinc2,w,c
 15545  012F30  0A80               	xorlw	128
 15546  012F32  6E32               	movwf	btemp^0,c
 15547  012F34  0EF7               	movlw	-9
 15548  012F36  50E3               	movf	plusw1,w,c
 15549  012F38  0A80               	xorlw	128
 15550  012F3A  5832               	subwfb	btemp^0,w,c
 15551  012F3C  B0D8               	btfsc	status,0,c
 15552  012F3E  D053               	goto	l6379
 15553                           
 15554                           ;stkvar	_b @ sp[(-4)+-4]
 15555                           ;stkvar	_a @ sp[(-4)+-8]
 15556  012F40  0EF4               	movlw	-12
 15557  012F42  006F FF8C  F03A    	movff	plusw1,btemp+8
 15558  012F48  0EF5               	movlw	-11
 15559  012F4A  006F FF8C  F03B    	movff	plusw1,btemp+9
 15560  012F50  0EF6               	movlw	-10
 15561  012F52  006F FF8C  F03C    	movff	plusw1,btemp+10
 15562  012F58  0EF7               	movlw	-9
 15563  012F5A  006F FF8C  F03D    	movff	plusw1,btemp+11
 15564  012F60  0EF8               	movlw	-8
 15565  012F62  50E3               	movf	plusw1,w,c
 15566  012F64  5E3A               	subwf	(btemp+8)^0,f,c
 15567  012F66  0EF9               	movlw	-7
 15568  012F68  50E3               	movf	plusw1,w,c
 15569  012F6A  5A3B               	subwfb	(btemp+9)^0,f,c
 15570  012F6C  0EFA               	movlw	-6
 15571  012F6E  50E3               	movf	plusw1,w,c
 15572  012F70  5A3C               	subwfb	(btemp+10)^0,f,c
 15573  012F72  0EFB               	movlw	-5
 15574  012F74  50E3               	movf	plusw1,w,c
 15575  012F76  5A3D               	subwfb	(btemp+11)^0,f,c
 15576  012F78  0EFF               	movlw	255
 15577  012F7A  243A               	addwf	(btemp+8)^0,w,c
 15578  012F7C  6E36               	movwf	(btemp+4)^0,c
 15579  012F7E  0EFF               	movlw	255
 15580  012F80  203B               	addwfc	(btemp+9)^0,w,c
 15581  012F82  6E37               	movwf	(btemp+5)^0,c
 15582  012F84  0EFF               	movlw	255
 15583  012F86  203C               	addwfc	(btemp+10)^0,w,c
 15584  012F88  6E38               	movwf	(btemp+6)^0,c
 15585  012F8A  0EFF               	movlw	255
 15586  012F8C  203D               	addwfc	(btemp+11)^0,w,c
 15587  012F8E  6E39               	movwf	(btemp+7)^0,c
 15588                           
 15589                           ;stkvar	_b @ sp[(-4)+-4]
 15590  012F90  0EF8               	movlw	-8
 15591  012F92  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 15592  012F98  0EF9               	movlw	-7
 15593  012F9A  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 15594  012FA0  0EFA               	movlw	-6
 15595  012FA2  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 15596  012FA8  0EFB               	movlw	-5
 15597  012FAA  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 15598                           
 15599                           ;stkvar	_signs @ sp[(-4)+3]
 15600  012FB0  0EFF               	movlw	-1
 15601  012FB2  7EE3               	btg	plusw1,7,c
 15602                           
 15603                           ;stkvar	_grs @ sp[(-4)+0]
 15604  012FB4  0EFC               	movlw	-4
 15605  012FB6  50E3               	movf	plusw1,w,c
 15606  012FB8  0800               	sublw	0
 15607  012FBA  6E3D               	movwf	(btemp+11)^0,c
 15608                           
 15609                           ;stkvar	_grs @ sp[(-4)+0]
 15610  012FBC  0EFC               	movlw	-4
 15611  012FBE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15612                           
 15613                           ;stkvar	_grs @ sp[(-4)+0]
 15614  012FC4  0EFC               	movlw	-4
 15615  012FC6  50E3               	movf	plusw1,w,c
 15616  012FC8  A4D8               	btfss	status,2,c
 15617  012FCA  D020               	goto	l6381
 15618                           
 15619                           ;stkvar	_b @ sp[(-4)+-4]
 15620  012FCC  50E1               	movf	fsr1l,w,c
 15621  012FCE  0FF8               	addlw	-8
 15622  012FD0  6ED9               	movwf	fsr2l,c
 15623  012FD2  50E2               	movf	fsr1h,w,c
 15624  012FD4  6EDA               	movwf	fsr2h,c
 15625  012FD6  0EFF               	movlw	255
 15626  012FD8  22DA               	addwfc	fsr2h,f,c
 15627  012FDA  2ADE               	incf	postinc2,f,c
 15628  012FDC  0E00               	movlw	0
 15629  012FDE  22DE               	addwfc	postinc2,f,c
 15630  012FE0  22DE               	addwfc	postinc2,f,c
 15631  012FE2  22DE               	addwfc	postinc2,f,c
 15632  012FE4  D013               	goto	l6381
 15633  012FE6                     l6379:
 15634                           
 15635                           ;stkvar	_a @ sp[(-4)+-8]
 15636                           ;stkvar	_b @ sp[(-4)+-4]
 15637  012FE6  50E1               	movf	fsr1l,w,c
 15638  012FE8  0FF8               	addlw	-8
 15639  012FEA  6ED9               	movwf	fsr2l,c
 15640  012FEC  50E2               	movf	fsr1h,w,c
 15641  012FEE  6EDA               	movwf	fsr2h,c
 15642  012FF0  0EFF               	movlw	255
 15643  012FF2  22DA               	addwfc	fsr2h,f,c
 15644  012FF4  0EF4               	movlw	-12
 15645  012FF6  50E3               	movf	plusw1,w,c
 15646  012FF8  5EDE               	subwf	postinc2,f,c
 15647  012FFA  0EF5               	movlw	-11
 15648  012FFC  50E3               	movf	plusw1,w,c
 15649  012FFE  5ADE               	subwfb	postinc2,f,c
 15650  013000  0EF6               	movlw	-10
 15651  013002  50E3               	movf	plusw1,w,c
 15652  013004  5ADE               	subwfb	postinc2,f,c
 15653  013006  0EF7               	movlw	-9
 15654  013008  50E3               	movf	plusw1,w,c
 15655  01300A  5ADE               	subwfb	postinc2,f,c
 15656  01300C                     l6381:
 15657                           
 15658                           ;stkvar	_b @ sp[(-4)+-4]
 15659  01300C  0EF8               	movlw	-8
 15660  01300E  50E3               	movf	plusw1,w,c
 15661  013010  E145               	bnz	l6403
 15662  013012  0EF9               	movlw	-7
 15663  013014  50E3               	movf	plusw1,w,c
 15664  013016  E142               	bnz	l6403
 15665  013018  0EFA               	movlw	-6
 15666  01301A  50E3               	movf	plusw1,w,c
 15667  01301C  E13F               	bnz	l6403
 15668  01301E  0EFB               	movlw	-5
 15669  013020  50E3               	movf	plusw1,w,c
 15670  013022  A4D8               	btfss	status,2,c
 15671  013024  D03B               	goto	l6403
 15672                           
 15673                           ;stkvar	_grs @ sp[(-4)+0]
 15674  013026  0EFC               	movlw	-4
 15675  013028  50E3               	movf	plusw1,w,c
 15676  01302A  A4D8               	btfss	status,2,c
 15677  01302C  D037               	goto	l6403
 15678  01302E                     u5000:
 15679  01302E  0E00               	movlw	0
 15680  013030  6E32               	movwf	btemp^0,c
 15681  013032  0E00               	movlw	0
 15682  013034  6E33               	movwf	(btemp+1)^0,c
 15683  013036  0E00               	movlw	0
 15684  013038  6E34               	movwf	(btemp+2)^0,c
 15685  01303A  0E00               	movlw	0
 15686  01303C  6E35               	movwf	(btemp+3)^0,c
 15687  01303E  D0C6               	goto	l2581
 15688  013040                     l6389:
 15689                           
 15690                           ;stkvar	_b @ sp[(-4)+-4]
 15691  013040  90D8               	bcf	status,0,c
 15692  013042  0EF8               	movlw	-8
 15693  013044  36E3               	rlcf	plusw1,f,c
 15694  013046  0EF9               	movlw	-7
 15695  013048  36E3               	rlcf	plusw1,f,c
 15696  01304A  0EFA               	movlw	-6
 15697  01304C  36E3               	rlcf	plusw1,f,c
 15698  01304E  0EFB               	movlw	-5
 15699  013050  36E3               	rlcf	plusw1,f,c
 15700                           
 15701                           ;stkvar	_grs @ sp[(-4)+0]
 15702  013052  0EFC               	movlw	-4
 15703  013054  AEE3               	btfss	plusw1,7,c
 15704  013056  D002               	goto	l2593
 15705                           
 15706                           ;stkvar	_b @ sp[(-4)+-4]
 15707  013058  0EF8               	movlw	-8
 15708  01305A  80E3               	bsf	plusw1,0,c
 15709  01305C                     l2593:
 15710                           
 15711                           ;stkvar	_grs @ sp[(-4)+0]
 15712  01305C  0EFC               	movlw	-4
 15713  01305E  A0E3               	btfss	plusw1,0,c
 15714  013060  D00E               	goto	l6397
 15715                           
 15716                           ;stkvar	_grs @ sp[(-4)+0]
 15717  013062  0EFC               	movlw	-4
 15718  013064  006F FF8C  F03D    	movff	plusw1,btemp+11
 15719  01306A  90D8               	bcf	status,0,c
 15720  01306C  343D               	rlcf	(btemp+11)^0,w,c
 15721  01306E  6E3C               	movwf	(btemp+10)^0,c
 15722  013070  0E01               	movlw	1
 15723  013072  123C               	iorwf	(btemp+10)^0,f,c
 15724                           
 15725                           ;stkvar	_grs @ sp[(-4)+0]
 15726  013074  0EFC               	movlw	-4
 15727  013076  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15728  01307C  D009               	goto	l6399
 15729  01307E                     l6397:
 15730                           
 15731                           ;stkvar	_grs @ sp[(-4)+0]
 15732  01307E  50E1               	movf	fsr1l,w,c
 15733  013080  0FFC               	addlw	-4
 15734  013082  6ED9               	movwf	fsr2l,c
 15735  013084  50E2               	movf	fsr1h,w,c
 15736  013086  6EDA               	movwf	fsr2h,c
 15737  013088  0EFF               	movlw	255
 15738  01308A  22DA               	addwfc	fsr2h,f,c
 15739  01308C  90D8               	bcf	status,0,c
 15740  01308E  36DF               	rlcf	indf2,f,c
 15741  013090                     l6399:
 15742                           
 15743                           ;stkvar	_bexp @ sp[(-4)+1]
 15744  013090  0EFD               	movlw	-3
 15745  013092  50E3               	movf	plusw1,w,c
 15746  013094  B4D8               	btfsc	status,2,c
 15747  013096  D002               	goto	l6403
 15748                           
 15749                           ;stkvar	_bexp @ sp[(-4)+1]
 15750  013098  0EFD               	movlw	-3
 15751  01309A  06E3               	decf	plusw1,f,c
 15752  01309C                     l6403:
 15753                           
 15754                           ;stkvar	_b @ sp[(-4)+-4]
 15755  01309C  0EFA               	movlw	-6
 15756  01309E  AEE3               	btfss	plusw1,7,c
 15757  0130A0  D7CF               	goto	l6389
 15758  0130A2                     u5040:
 15759                           
 15760                           ;stkvar	_aexp @ sp[(-4)+2]
 15761  0130A2  0EFE               	movlw	-2
 15762  0130A4  6AE3               	clrf	plusw1,c
 15763                           
 15764                           ;stkvar	_grs @ sp[(-4)+0]
 15765  0130A6  0EFC               	movlw	-4
 15766  0130A8  AEE3               	btfss	plusw1,7,c
 15767  0130AA  D00F               	goto	l6417
 15768                           
 15769                           ;stkvar	_grs @ sp[(-4)+0]
 15770  0130AC  0EFC               	movlw	-4
 15771  0130AE  006F FF8C  F03D    	movff	plusw1,btemp+11
 15772  0130B4  0E7F               	movlw	127
 15773  0130B6  163D               	andwf	(btemp+11)^0,f,c
 15774  0130B8  B4D8               	btfsc	status,2,c
 15775  0130BA  D004               	goto	l6413
 15776  0130BC                     u5060:
 15777                           
 15778                           ;stkvar	_aexp @ sp[(-4)+2]
 15779  0130BC  0EFE               	movlw	-2
 15780  0130BE  6AE3               	clrf	plusw1,c
 15781  0130C0  2AE3               	incf	plusw1,f,c
 15782  0130C2  D003               	goto	l6417
 15783  0130C4                     l6413:
 15784                           
 15785                           ;stkvar	_b @ sp[(-4)+-4]
 15786  0130C4  0EF8               	movlw	-8
 15787  0130C6  B0E3               	btfsc	plusw1,0,c
 15788  0130C8  D7F9               	goto	u5060
 15789  0130CA                     l6417:
 15790                           
 15791                           ;stkvar	_aexp @ sp[(-4)+2]
 15792  0130CA  0EFE               	movlw	-2
 15793  0130CC  50E3               	movf	plusw1,w,c
 15794  0130CE  B4D8               	btfsc	status,2,c
 15795  0130D0  D02B               	goto	l6429
 15796                           
 15797                           ;stkvar	_b @ sp[(-4)+-4]
 15798  0130D2  50E1               	movf	fsr1l,w,c
 15799  0130D4  0FF8               	addlw	-8
 15800  0130D6  6ED9               	movwf	fsr2l,c
 15801  0130D8  50E2               	movf	fsr1h,w,c
 15802  0130DA  6EDA               	movwf	fsr2h,c
 15803  0130DC  0EFF               	movlw	255
 15804  0130DE  22DA               	addwfc	fsr2h,f,c
 15805  0130E0  2ADE               	incf	postinc2,f,c
 15806  0130E2  0E00               	movlw	0
 15807  0130E4  22DE               	addwfc	postinc2,f,c
 15808  0130E6  22DE               	addwfc	postinc2,f,c
 15809  0130E8  22DE               	addwfc	postinc2,f,c
 15810                           
 15811                           ;stkvar	_b @ sp[(-4)+-4]
 15812  0130EA  0EFB               	movlw	-5
 15813  0130EC  A0E3               	btfss	plusw1,0,c
 15814  0130EE  D01C               	goto	l6429
 15815  0130F0  0E01               	movlw	1
 15816  0130F2  6E3D               	movwf	(btemp+11)^0,c
 15817                           
 15818                           ;stkvar	_b @ sp[(-4)+-4]
 15819  0130F4  50E1               	movf	fsr1l,w,c
 15820  0130F6  0FF8               	addlw	-8
 15821  0130F8  6ED9               	movwf	fsr2l,c
 15822  0130FA  50E2               	movf	fsr1h,w,c
 15823  0130FC  6EDA               	movwf	fsr2h,c
 15824  0130FE  0EFF               	movlw	255
 15825  013100  22DA               	addwfc	fsr2h,f,c
 15826  013102  283D               	incf	(btemp+11)^0,w,c
 15827  013104  52DE               	movf	postinc2,f,c
 15828  013106  D008               	goto	u5100
 15829  013108                     u5105:
 15830  013108  52DE               	movf	postinc2,f,c
 15831  01310A  90D8               	bcf	status,0,c
 15832  01310C  BEDC               	btfsc	preinc2,7,c
 15833  01310E  80D8               	bsf	status,0,c
 15834  013110  32DD               	rrcf	postdec2,f,c
 15835  013112  32DD               	rrcf	postdec2,f,c
 15836  013114  32DD               	rrcf	postdec2,f,c
 15837  013116  32DE               	rrcf	postinc2,f,c
 15838  013118                     u5100:
 15839  013118  2EE8               	decfsz	wreg,f,c
 15840  01311A  D7F6               	goto	u5105
 15841                           
 15842                           ;stkvar	_bexp @ sp[(-4)+1]
 15843  01311C  0EFD               	movlw	-3
 15844  01311E  28E3               	incf	plusw1,w,c
 15845  013120  B4D8               	btfsc	status,2,c
 15846  013122  D002               	goto	l6429
 15847                           
 15848                           ;stkvar	_bexp @ sp[(-4)+1]
 15849  013124  0EFD               	movlw	-3
 15850  013126  2AE3               	incf	plusw1,f,c
 15851  013128                     l6429:
 15852                           
 15853                           ;stkvar	_bexp @ sp[(-4)+1]
 15854  013128  0EFD               	movlw	-3
 15855  01312A  28E3               	incf	plusw1,w,c
 15856  01312C  B4D8               	btfsc	status,2,c
 15857  01312E  D004               	goto	u5130
 15858                           
 15859                           ;stkvar	_bexp @ sp[(-4)+1]
 15860  013130  0EFD               	movlw	-3
 15861  013132  50E3               	movf	plusw1,w,c
 15862  013134  A4D8               	btfss	status,2,c
 15863  013136  D00E               	goto	l6439
 15864  013138                     u5130:
 15865                           
 15866                           ;stkvar	_b @ sp[(-4)+-4]
 15867  013138  0EF8               	movlw	-8
 15868  01313A  6AE3               	clrf	plusw1,c
 15869  01313C  0EF9               	movlw	-7
 15870  01313E  6AE3               	clrf	plusw1,c
 15871  013140  0EFA               	movlw	-6
 15872  013142  6AE3               	clrf	plusw1,c
 15873  013144  0EFB               	movlw	-5
 15874  013146  6AE3               	clrf	plusw1,c
 15875                           
 15876                           ;stkvar	_bexp @ sp[(-4)+1]
 15877  013148  0EFD               	movlw	-3
 15878  01314A  50E3               	movf	plusw1,w,c
 15879  01314C  A4D8               	btfss	status,2,c
 15880  01314E  D002               	goto	l6439
 15881                           
 15882                           ;stkvar	_signs @ sp[(-4)+3]
 15883  013150  0EFF               	movlw	-1
 15884  013152  6AE3               	clrf	plusw1,c
 15885  013154                     l6439:
 15886                           
 15887                           ;stkvar	_bexp @ sp[(-4)+1]
 15888  013154  0EFD               	movlw	-3
 15889  013156  A0E3               	btfss	plusw1,0,c
 15890  013158  D009               	goto	l6443
 15891                           
 15892                           ;stkvar	_b @ sp[(-4)+-4]
 15893  01315A  0EFA               	movlw	250
 15894  01315C  24E1               	addwf	fsr1l,w,c
 15895  01315E  6ED9               	movwf	fsr2l,c
 15896  013160  0EFF               	movlw	255
 15897  013162  20E2               	addwfc	fsr1h,w,c
 15898  013164  6EDA               	movwf	fsr2h,c
 15899  013166  0E00               	movlw	0
 15900  013168  8EDB               	bsf	plusw2,7,c
 15901  01316A  D008               	goto	l6445
 15902  01316C                     l6443:
 15903                           
 15904                           ;stkvar	_b @ sp[(-4)+-4]
 15905  01316C  0EFA               	movlw	250
 15906  01316E  24E1               	addwf	fsr1l,w,c
 15907  013170  6ED9               	movwf	fsr2l,c
 15908  013172  0EFF               	movlw	255
 15909  013174  20E2               	addwfc	fsr1h,w,c
 15910  013176  6EDA               	movwf	fsr2h,c
 15911  013178  0E7F               	movlw	127
 15912  01317A  16DF               	andwf	indf2,f,c
 15913  01317C                     l6445:
 15914                           
 15915                           ;stkvar	_b @ sp[(-4)+-4]
 15916  01317C  0EFB               	movlw	251
 15917  01317E  24E1               	addwf	fsr1l,w,c
 15918  013180  6ED9               	movwf	fsr2l,c
 15919  013182  0EFF               	movlw	255
 15920  013184  20E2               	addwfc	fsr1h,w,c
 15921  013186  6EDA               	movwf	fsr2h,c
 15922                           
 15923                           ;stkvar	_bexp @ sp[(-4)+1]
 15924  013188  0EFD               	movlw	-3
 15925  01318A  006F FF8C  F03D    	movff	plusw1,btemp+11
 15926  013190  90D8               	bcf	status,0,c
 15927  013192  303D               	rrcf	(btemp+11)^0,w,c
 15928  013194  6EDF               	movwf	indf2,c
 15929                           
 15930                           ;stkvar	_signs @ sp[(-4)+3]
 15931  013196  0EFF               	movlw	-1
 15932  013198  AEE3               	btfss	plusw1,7,c
 15933  01319A  D008               	goto	l6451
 15934                           
 15935                           ;stkvar	_b @ sp[(-4)+-4]
 15936  01319C  0EFB               	movlw	251
 15937  01319E  24E1               	addwf	fsr1l,w,c
 15938  0131A0  6ED9               	movwf	fsr2l,c
 15939  0131A2  0EFF               	movlw	255
 15940  0131A4  20E2               	addwfc	fsr1h,w,c
 15941  0131A6  6EDA               	movwf	fsr2h,c
 15942  0131A8  0E00               	movlw	0
 15943  0131AA  8EDB               	bsf	plusw2,7,c
 15944  0131AC                     l6451:
 15945                           
 15946                           ;stkvar	_b @ sp[(-4)+-4]
 15947  0131AC  0EF8               	movlw	-8
 15948  0131AE  006F FF8C  F032    	movff	plusw1,btemp
 15949  0131B4  0EF9               	movlw	-7
 15950  0131B6  006F FF8C  F033    	movff	plusw1,btemp+1
 15951  0131BC  0EFA               	movlw	-6
 15952  0131BE  006F FF8C  F034    	movff	plusw1,btemp+2
 15953  0131C4  0EFB               	movlw	-5
 15954  0131C6  006F FF8C  F035    	movff	plusw1,btemp+3
 15955  0131CC                     l2581:
 15956                           
 15957                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 15958  0131CC  0EF4               	movlw	244
 15959  0131CE  26E1               	addwf	fsr1l,f,c
 15960  0131D0  0EFF               	movlw	255
 15961  0131D2  22E2               	addwfc	fsr1h,f,c
 15962  0131D4  0012               	return		;funcret
 15963  0131D6                     __end_of___fladd:
 15964                           	opt callstack 0
 15965                           
 15966 ;; *************** function ___flneg *****************
 15967 ;; Defined at:
 15968 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 15969 ;; Parameters:    Size  Location     Type
 15970 ;;  f1              4  [STACK] unsigned char 
 15971 ;; Auto vars:     Size  Location     Type
 15972 ;;		None
 15973 ;; Return value:  Size  Location     Type
 15974 ;;                  4  [STACK] unsigned char 
 15975 ;; Registers used:
 15976 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 15977 ;; Tracked objects:
 15978 ;;		On entry : 0/5
 15979 ;;		On exit  : 0/0
 15980 ;;		Unchanged: 0/0
 15981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15986 ;;Total ram usage:        0 bytes
 15987 ;; Hardware stack levels used:    1
 15988 ;; Hardware stack levels required when called:    6
 15989 ;; This function calls:
 15990 ;;		Nothing
 15991 ;; This function is called by:
 15992 ;;		_efgtoa
 15993 ;; This function uses a reentrant model
 15994 ;;
 15995                           
 15996                           	psect	text55
 15997  018530                     __ptext55:
 15998                           	opt callstack 0
 15999  018530                     ___flneg:
 16000                           	opt callstack 17
 16001                           
 16002                           ;stkvar	_f1 @ sp[(0)+-4]
 16003                           
 16004                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16005                           ;incstack = 0
 16006  018530  0EFC               	movlw	-4
 16007  018532  50E3               	movf	plusw1,w,c
 16008  018534  E10A               	bnz	u6440
 16009  018536  0EFD               	movlw	-3
 16010  018538  50E3               	movf	plusw1,w,c
 16011  01853A  E107               	bnz	u6440
 16012  01853C  0EFE               	movlw	-2
 16013  01853E  50E3               	movf	plusw1,w,c
 16014  018540  E104               	bnz	u6440
 16015  018542  0EFF               	movlw	-1
 16016  018544  50E3               	movf	plusw1,w,c
 16017  018546  B4D8               	btfsc	status,2,c
 16018  018548  D002               	goto	l7119
 16019  01854A                     u6440:
 16020                           
 16021                           ;stkvar	_f1 @ sp[(0)+-4]
 16022  01854A  0EFF               	movlw	-1
 16023  01854C  7EE3               	btg	plusw1,7,c
 16024  01854E                     l7119:
 16025                           
 16026                           ;stkvar	_f1 @ sp[(0)+-4]
 16027  01854E  0EFC               	movlw	-4
 16028  018550  006F FF8C  F032    	movff	plusw1,btemp
 16029  018556  0EFD               	movlw	-3
 16030  018558  006F FF8C  F033    	movff	plusw1,btemp+1
 16031  01855E  0EFE               	movlw	-2
 16032  018560  006F FF8C  F034    	movff	plusw1,btemp+2
 16033  018566  0EFF               	movlw	-1
 16034  018568  006F FF8C  F035    	movff	plusw1,btemp+3
 16035                           
 16036                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16037  01856E  52E5               	movf	postdec1,f,c
 16038  018570  52E5               	movf	postdec1,f,c
 16039  018572  52E5               	movf	postdec1,f,c
 16040  018574  52E5               	movf	postdec1,f,c
 16041  018576  0012               	return		;funcret
 16042  018578                     __end_of___flneg:
 16043                           	opt callstack 0
 16044                           
 16045 ;; *************** function ___flmul *****************
 16046 ;; Defined at:
 16047 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 16048 ;; Parameters:    Size  Location     Type
 16049 ;;  b               4  [STACK] unsigned char 
 16050 ;;  a               4  [STACK] unsigned char 
 16051 ;; Auto vars:     Size  Location     Type
 16052 ;;  prod            4  [STACK] struct .
 16053 ;;  grs             4  [STACK] unsigned long 
 16054 ;;  temp            2  [STACK] struct .
 16055 ;;  bexp            1  [STACK] unsigned char 
 16056 ;;  aexp            1  [STACK] unsigned char 
 16057 ;;  sign            1  [STACK] unsigned char 
 16058 ;; Return value:  Size  Location     Type
 16059 ;;                  4  [STACK] unsigned char 
 16060 ;; Registers used:
 16061 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 16062 ;; Tracked objects:
 16063 ;;		On entry : 0/39
 16064 ;;		On exit  : 0/0
 16065 ;;		Unchanged: 0/0
 16066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16071 ;;Total ram usage:        0 bytes
 16072 ;; Hardware stack levels used:    1
 16073 ;; Hardware stack levels required when called:    6
 16074 ;; This function calls:
 16075 ;;		Nothing
 16076 ;; This function is called by:
 16077 ;;		_conv_raw_result
 16078 ;;		_lp_filter
 16079 ;;		_efgtoa
 16080 ;; This function uses a reentrant model
 16081 ;;
 16082                           
 16083                           	psect	text56
 16084  0121F0                     __ptext56:
 16085                           	opt callstack 0
 16086  0121F0                     ___flmul:
 16087                           	opt callstack 0
 16088                           
 16089                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 16090  0121F0  0E0D               	movlw	13
 16091  0121F2  26E1               	addwf	fsr1l,f,c
 16092  0121F4  0E00               	movlw	0
 16093  0121F6  22E2               	addwfc	fsr1h,f,c
 16094                           
 16095                           ;stkvar	_b @ sp[(-13)+-4]
 16096                           
 16097                           ;incstack = 0
 16098  0121F8  0EF2               	movlw	242
 16099  0121FA  24E1               	addwf	fsr1l,w,c
 16100  0121FC  6ED9               	movwf	fsr2l,c
 16101  0121FE  0EFF               	movlw	255
 16102  012200  20E2               	addwfc	fsr1h,w,c
 16103  012202  6EDA               	movwf	fsr2h,c
 16104  012204  50DF               	movf	indf2,w,c
 16105  012206  6E3D               	movwf	(btemp+11)^0,c
 16106  012208  0E80               	movlw	128
 16107  01220A  163D               	andwf	(btemp+11)^0,f,c
 16108                           
 16109                           ;stkvar	_sign @ sp[(-13)+12]
 16110  01220C  0EFF               	movlw	-1
 16111  01220E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16112                           
 16113                           ;stkvar	_b @ sp[(-13)+-4]
 16114  012214  0EF2               	movlw	242
 16115  012216  24E1               	addwf	fsr1l,w,c
 16116  012218  6ED9               	movwf	fsr2l,c
 16117  01221A  0EFF               	movlw	255
 16118  01221C  20E2               	addwfc	fsr1h,w,c
 16119  01221E  6EDA               	movwf	fsr2h,c
 16120  012220  50DF               	movf	indf2,w,c
 16121  012222  6E3D               	movwf	(btemp+11)^0,c
 16122  012224  90D8               	bcf	status,0,c
 16123  012226  343D               	rlcf	(btemp+11)^0,w,c
 16124  012228  6E3C               	movwf	(btemp+10)^0,c
 16125                           
 16126                           ;stkvar	_bexp @ sp[(-13)+10]
 16127  01222A  0EFD               	movlw	-3
 16128  01222C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16129                           
 16130                           ;stkvar	_b @ sp[(-13)+-4]
 16131  012232  0EF1               	movlw	241
 16132  012234  24E1               	addwf	fsr1l,w,c
 16133  012236  6ED9               	movwf	fsr2l,c
 16134  012238  0EFF               	movlw	255
 16135  01223A  20E2               	addwfc	fsr1h,w,c
 16136  01223C  6EDA               	movwf	fsr2h,c
 16137  01223E  AEDF               	btfss	indf2,7,c
 16138  012240  D002               	goto	l6835
 16139                           
 16140                           ;stkvar	_bexp @ sp[(-13)+10]
 16141  012242  0EFD               	movlw	-3
 16142  012244  80E3               	bsf	plusw1,0,c
 16143  012246                     l6835:
 16144                           
 16145                           ;stkvar	_bexp @ sp[(-13)+10]
 16146  012246  0EFD               	movlw	-3
 16147  012248  50E3               	movf	plusw1,w,c
 16148  01224A  B4D8               	btfsc	status,2,c
 16149  01224C  D01F               	goto	l6843
 16150                           
 16151                           ;stkvar	_bexp @ sp[(-13)+10]
 16152  01224E  0EFD               	movlw	-3
 16153  012250  28E3               	incf	plusw1,w,c
 16154  012252  A4D8               	btfss	status,2,c
 16155  012254  D018               	goto	l6841
 16156  012256  0E00               	movlw	0
 16157  012258  6E3A               	movwf	(btemp+8)^0,c
 16158  01225A  0E00               	movlw	0
 16159  01225C  6E3B               	movwf	(btemp+9)^0,c
 16160  01225E  0E00               	movlw	0
 16161  012260  6E3C               	movwf	(btemp+10)^0,c
 16162  012262  0E00               	movlw	0
 16163  012264  6E3D               	movwf	(btemp+11)^0,c
 16164                           
 16165                           ;stkvar	_b @ sp[(-13)+-4]
 16166  012266  0EEF               	movlw	-17
 16167  012268  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16168  01226E  0EF0               	movlw	-16
 16169  012270  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16170  012276  0EF1               	movlw	-15
 16171  012278  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16172  01227E  0EF2               	movlw	-14
 16173  012280  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16174  012286                     l6841:
 16175                           
 16176                           ;stkvar	_b @ sp[(-13)+-4]
 16177  012286  0EF1               	movlw	-15
 16178  012288  8EE3               	bsf	plusw1,7,c
 16179  01228A  D018               	goto	l6845
 16180  01228C                     l6843:
 16181  01228C  0E00               	movlw	0
 16182  01228E  6E3A               	movwf	(btemp+8)^0,c
 16183  012290  0E00               	movlw	0
 16184  012292  6E3B               	movwf	(btemp+9)^0,c
 16185  012294  0E00               	movlw	0
 16186  012296  6E3C               	movwf	(btemp+10)^0,c
 16187  012298  0E00               	movlw	0
 16188  01229A  6E3D               	movwf	(btemp+11)^0,c
 16189                           
 16190                           ;stkvar	_b @ sp[(-13)+-4]
 16191  01229C  0EEF               	movlw	-17
 16192  01229E  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16193  0122A4  0EF0               	movlw	-16
 16194  0122A6  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16195  0122AC  0EF1               	movlw	-15
 16196  0122AE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16197  0122B4  0EF2               	movlw	-14
 16198  0122B6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16199  0122BC                     l6845:
 16200                           
 16201                           ;stkvar	_a @ sp[(-13)+-8]
 16202  0122BC  0EEE               	movlw	238
 16203  0122BE  24E1               	addwf	fsr1l,w,c
 16204  0122C0  6ED9               	movwf	fsr2l,c
 16205  0122C2  0EFF               	movlw	255
 16206  0122C4  20E2               	addwfc	fsr1h,w,c
 16207  0122C6  6EDA               	movwf	fsr2h,c
 16208  0122C8  50DF               	movf	indf2,w,c
 16209  0122CA  6E3D               	movwf	(btemp+11)^0,c
 16210  0122CC  0E80               	movlw	128
 16211  0122CE  163D               	andwf	(btemp+11)^0,f,c
 16212                           
 16213                           ;stkvar	_sign @ sp[(-13)+12]
 16214  0122D0  50E1               	movf	fsr1l,w,c
 16215  0122D2  0FFF               	addlw	-1
 16216  0122D4  6ED9               	movwf	fsr2l,c
 16217  0122D6  50E2               	movf	fsr1h,w,c
 16218  0122D8  6EDA               	movwf	fsr2h,c
 16219  0122DA  0EFF               	movlw	255
 16220  0122DC  22DA               	addwfc	fsr2h,f,c
 16221  0122DE  503D               	movf	(btemp+11)^0,w,c
 16222  0122E0  1ADF               	xorwf	indf2,f,c
 16223                           
 16224                           ;stkvar	_a @ sp[(-13)+-8]
 16225  0122E2  0EEE               	movlw	238
 16226  0122E4  24E1               	addwf	fsr1l,w,c
 16227  0122E6  6ED9               	movwf	fsr2l,c
 16228  0122E8  0EFF               	movlw	255
 16229  0122EA  20E2               	addwfc	fsr1h,w,c
 16230  0122EC  6EDA               	movwf	fsr2h,c
 16231  0122EE  50DF               	movf	indf2,w,c
 16232  0122F0  6E3D               	movwf	(btemp+11)^0,c
 16233  0122F2  90D8               	bcf	status,0,c
 16234  0122F4  343D               	rlcf	(btemp+11)^0,w,c
 16235  0122F6  6E3C               	movwf	(btemp+10)^0,c
 16236                           
 16237                           ;stkvar	_aexp @ sp[(-13)+11]
 16238  0122F8  0EFE               	movlw	-2
 16239  0122FA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16240                           
 16241                           ;stkvar	_a @ sp[(-13)+-8]
 16242  012300  0EED               	movlw	237
 16243  012302  24E1               	addwf	fsr1l,w,c
 16244  012304  6ED9               	movwf	fsr2l,c
 16245  012306  0EFF               	movlw	255
 16246  012308  20E2               	addwfc	fsr1h,w,c
 16247  01230A  6EDA               	movwf	fsr2h,c
 16248  01230C  AEDF               	btfss	indf2,7,c
 16249  01230E  D002               	goto	l6853
 16250                           
 16251                           ;stkvar	_aexp @ sp[(-13)+11]
 16252  012310  0EFE               	movlw	-2
 16253  012312  80E3               	bsf	plusw1,0,c
 16254  012314                     l6853:
 16255                           
 16256                           ;stkvar	_aexp @ sp[(-13)+11]
 16257  012314  0EFE               	movlw	-2
 16258  012316  50E3               	movf	plusw1,w,c
 16259  012318  B4D8               	btfsc	status,2,c
 16260  01231A  D01F               	goto	l6861
 16261                           
 16262                           ;stkvar	_aexp @ sp[(-13)+11]
 16263  01231C  0EFE               	movlw	-2
 16264  01231E  28E3               	incf	plusw1,w,c
 16265  012320  A4D8               	btfss	status,2,c
 16266  012322  D018               	goto	l6859
 16267  012324  0E00               	movlw	0
 16268  012326  6E3A               	movwf	(btemp+8)^0,c
 16269  012328  0E00               	movlw	0
 16270  01232A  6E3B               	movwf	(btemp+9)^0,c
 16271  01232C  0E00               	movlw	0
 16272  01232E  6E3C               	movwf	(btemp+10)^0,c
 16273  012330  0E00               	movlw	0
 16274  012332  6E3D               	movwf	(btemp+11)^0,c
 16275                           
 16276                           ;stkvar	_a @ sp[(-13)+-8]
 16277  012334  0EEB               	movlw	-21
 16278  012336  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16279  01233C  0EEC               	movlw	-20
 16280  01233E  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16281  012344  0EED               	movlw	-19
 16282  012346  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16283  01234C  0EEE               	movlw	-18
 16284  01234E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16285  012354                     l6859:
 16286                           
 16287                           ;stkvar	_a @ sp[(-13)+-8]
 16288  012354  0EED               	movlw	-19
 16289  012356  8EE3               	bsf	plusw1,7,c
 16290  012358  D018               	goto	l6863
 16291  01235A                     l6861:
 16292  01235A  0E00               	movlw	0
 16293  01235C  6E3A               	movwf	(btemp+8)^0,c
 16294  01235E  0E00               	movlw	0
 16295  012360  6E3B               	movwf	(btemp+9)^0,c
 16296  012362  0E00               	movlw	0
 16297  012364  6E3C               	movwf	(btemp+10)^0,c
 16298  012366  0E00               	movlw	0
 16299  012368  6E3D               	movwf	(btemp+11)^0,c
 16300                           
 16301                           ;stkvar	_a @ sp[(-13)+-8]
 16302  01236A  0EEB               	movlw	-21
 16303  01236C  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16304  012372  0EEC               	movlw	-20
 16305  012374  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16306  01237A  0EED               	movlw	-19
 16307  01237C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16308  012382  0EEE               	movlw	-18
 16309  012384  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16310  01238A                     l6863:
 16311                           
 16312                           ;stkvar	_aexp @ sp[(-13)+11]
 16313  01238A  0EFE               	movlw	-2
 16314  01238C  50E3               	movf	plusw1,w,c
 16315  01238E  B4D8               	btfsc	status,2,c
 16316  012390  D004               	goto	u6070
 16317                           
 16318                           ;stkvar	_bexp @ sp[(-13)+10]
 16319  012392  0EFD               	movlw	-3
 16320  012394  50E3               	movf	plusw1,w,c
 16321  012396  A4D8               	btfss	status,2,c
 16322  012398  D009               	goto	l6871
 16323  01239A                     u6070:
 16324  01239A  0E00               	movlw	0
 16325  01239C  6E32               	movwf	btemp^0,c
 16326  01239E  0E00               	movlw	0
 16327  0123A0  6E33               	movwf	(btemp+1)^0,c
 16328  0123A2  0E00               	movlw	0
 16329  0123A4  6E34               	movwf	(btemp+2)^0,c
 16330  0123A6  0E00               	movlw	0
 16331  0123A8  6E35               	movwf	(btemp+3)^0,c
 16332  0123AA  D332               	goto	l2662
 16333  0123AC                     l6871:
 16334                           
 16335                           ;stkvar	_b @ sp[(-13)+-4]
 16336  0123AC  0EEF               	movlw	-17
 16337  0123AE  006F FF8C  F03D    	movff	plusw1,btemp+11
 16338                           
 16339                           ;stkvar	_a @ sp[(-13)+-8]
 16340  0123B4  0EED               	movlw	237
 16341  0123B6  24E1               	addwf	fsr1l,w,c
 16342  0123B8  6ED9               	movwf	fsr2l,c
 16343  0123BA  0EFF               	movlw	255
 16344  0123BC  20E2               	addwfc	fsr1h,w,c
 16345  0123BE  6EDA               	movwf	fsr2h,c
 16346  0123C0  50DF               	movf	indf2,w,c
 16347  0123C2  023D               	mulwf	(btemp+11)^0,c
 16348                           
 16349                           ;stkvar	_temp @ sp[(-13)+8]
 16350  0123C4  0EFB               	movlw	-5
 16351  0123C6  006F FFCF FFE3     	movff	prodl,plusw1
 16352  0123CC  0EFC               	movlw	-4
 16353  0123CE  006F FFD3 FFE3     	movff	prodh,plusw1
 16354                           
 16355                           ;stkvar	_temp @ sp[(-13)+8]
 16356  0123D4  0EFB               	movlw	-5
 16357  0123D6  006F FF8C  F03D    	movff	plusw1,btemp+11
 16358  0123DC  0060  F0F4  F036   	movff	btemp+11,btemp+4
 16359  0123E2  6A37               	clrf	(btemp+5)^0,c
 16360  0123E4  6A38               	clrf	(btemp+6)^0,c
 16361  0123E6  6A39               	clrf	(btemp+7)^0,c
 16362                           
 16363                           ;stkvar	_grs @ sp[(-13)+4]
 16364  0123E8  0EF7               	movlw	-9
 16365  0123EA  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 16366  0123F0  0EF8               	movlw	-8
 16367  0123F2  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 16368  0123F8  0EF9               	movlw	-7
 16369  0123FA  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 16370  012400  0EFA               	movlw	-6
 16371  012402  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 16372                           
 16373                           ;stkvar	_temp @ sp[(-13)+8]
 16374  012408  0EFC               	movlw	252
 16375  01240A  24E1               	addwf	fsr1l,w,c
 16376  01240C  6ED9               	movwf	fsr2l,c
 16377  01240E  0EFF               	movlw	255
 16378  012410  20E2               	addwfc	fsr1h,w,c
 16379  012412  6EDA               	movwf	fsr2h,c
 16380  012414  50DF               	movf	indf2,w,c
 16381  012416  6E3D               	movwf	(btemp+11)^0,c
 16382  012418  0060  F0F4  F036   	movff	btemp+11,btemp+4
 16383  01241E  6A37               	clrf	(btemp+5)^0,c
 16384  012420  6A38               	clrf	(btemp+6)^0,c
 16385  012422  6A39               	clrf	(btemp+7)^0,c
 16386                           
 16387                           ;stkvar	_prod @ sp[(-13)+0]
 16388  012424  0EF3               	movlw	-13
 16389  012426  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 16390  01242C  0EF4               	movlw	-12
 16391  01242E  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 16392  012434  0EF5               	movlw	-11
 16393  012436  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 16394  01243C  0EF6               	movlw	-10
 16395  01243E  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 16396                           
 16397                           ;stkvar	_b @ sp[(-13)+-4]
 16398  012444  0EF0               	movlw	240
 16399  012446  24E1               	addwf	fsr1l,w,c
 16400  012448  6ED9               	movwf	fsr2l,c
 16401  01244A  0EFF               	movlw	255
 16402  01244C  20E2               	addwfc	fsr1h,w,c
 16403  01244E  6EDA               	movwf	fsr2h,c
 16404  012450  50DF               	movf	indf2,w,c
 16405  012452  6E3D               	movwf	(btemp+11)^0,c
 16406                           
 16407                           ;stkvar	_a @ sp[(-13)+-8]
 16408  012454  0EEC               	movlw	236
 16409  012456  24E1               	addwf	fsr1l,w,c
 16410  012458  6ED9               	movwf	fsr2l,c
 16411  01245A  0EFF               	movlw	255
 16412  01245C  20E2               	addwfc	fsr1h,w,c
 16413  01245E  6EDA               	movwf	fsr2h,c
 16414  012460  50DF               	movf	indf2,w,c
 16415  012462  023D               	mulwf	(btemp+11)^0,c
 16416                           
 16417                           ;stkvar	_temp @ sp[(-13)+8]
 16418  012464  0EFB               	movlw	-5
 16419  012466  006F FFCF FFE3     	movff	prodl,plusw1
 16420  01246C  0EFC               	movlw	-4
 16421  01246E  006F FFD3 FFE3     	movff	prodh,plusw1
 16422                           
 16423                           ;stkvar	_grs @ sp[(-13)+4]
 16424  012474  50E1               	movf	fsr1l,w,c
 16425  012476  0FF7               	addlw	-9
 16426  012478  6ED9               	movwf	fsr2l,c
 16427  01247A  50E2               	movf	fsr1h,w,c
 16428  01247C  6EDA               	movwf	fsr2h,c
 16429  01247E  0EFF               	movlw	255
 16430  012480  22DA               	addwfc	fsr2h,f,c
 16431                           
 16432                           ;stkvar	_temp @ sp[(-13)+8]
 16433  012482  0EFB               	movlw	-5
 16434  012484  50E3               	movf	plusw1,w,c
 16435  012486  26DE               	addwf	postinc2,f,c
 16436  012488  0E00               	movlw	0
 16437  01248A  22DE               	addwfc	postinc2,f,c
 16438  01248C  22DE               	addwfc	postinc2,f,c
 16439  01248E  22DE               	addwfc	postinc2,f,c
 16440                           
 16441                           ;stkvar	_prod @ sp[(-13)+0]
 16442  012490  50E1               	movf	fsr1l,w,c
 16443  012492  0FF3               	addlw	-13
 16444  012494  6ED9               	movwf	fsr2l,c
 16445  012496  50E2               	movf	fsr1h,w,c
 16446  012498  6EDA               	movwf	fsr2h,c
 16447  01249A  0EFF               	movlw	255
 16448  01249C  22DA               	addwfc	fsr2h,f,c
 16449                           
 16450                           ;stkvar	_temp @ sp[(-13)+8]
 16451  01249E  0EFC               	movlw	252
 16452  0124A0  24E1               	addwf	fsr1l,w,c
 16453  0124A2  6EE9               	movwf	fsr0l,c
 16454  0124A4  0EFF               	movlw	255
 16455  0124A6  20E2               	addwfc	fsr1h,w,c
 16456  0124A8  6EEA               	movwf	fsr0h,c
 16457  0124AA  50EF               	movf	indf0,w,c
 16458  0124AC  26DE               	addwf	postinc2,f,c
 16459  0124AE  0E00               	movlw	0
 16460  0124B0  22DE               	addwfc	postinc2,f,c
 16461  0124B2  22DE               	addwfc	postinc2,f,c
 16462  0124B4  22DE               	addwfc	postinc2,f,c
 16463                           
 16464                           ;stkvar	_b @ sp[(-13)+-4]
 16465  0124B6  0EF1               	movlw	241
 16466  0124B8  24E1               	addwf	fsr1l,w,c
 16467  0124BA  6ED9               	movwf	fsr2l,c
 16468  0124BC  0EFF               	movlw	255
 16469  0124BE  20E2               	addwfc	fsr1h,w,c
 16470  0124C0  6EDA               	movwf	fsr2h,c
 16471  0124C2  50DF               	movf	indf2,w,c
 16472  0124C4  6E3D               	movwf	(btemp+11)^0,c
 16473                           
 16474                           ;stkvar	_a @ sp[(-13)+-8]
 16475  0124C6  0EEB               	movlw	-21
 16476  0124C8  50E3               	movf	plusw1,w,c
 16477  0124CA  023D               	mulwf	(btemp+11)^0,c
 16478                           
 16479                           ;stkvar	_temp @ sp[(-13)+8]
 16480  0124CC  0EFB               	movlw	-5
 16481  0124CE  006F FFCF FFE3     	movff	prodl,plusw1
 16482  0124D4  0EFC               	movlw	-4
 16483  0124D6  006F FFD3 FFE3     	movff	prodh,plusw1
 16484                           
 16485                           ;stkvar	_grs @ sp[(-13)+4]
 16486  0124DC  50E1               	movf	fsr1l,w,c
 16487  0124DE  0FF7               	addlw	-9
 16488  0124E0  6ED9               	movwf	fsr2l,c
 16489  0124E2  50E2               	movf	fsr1h,w,c
 16490  0124E4  6EDA               	movwf	fsr2h,c
 16491  0124E6  0EFF               	movlw	255
 16492  0124E8  22DA               	addwfc	fsr2h,f,c
 16493                           
 16494                           ;stkvar	_temp @ sp[(-13)+8]
 16495  0124EA  0EFB               	movlw	-5
 16496  0124EC  50E3               	movf	plusw1,w,c
 16497  0124EE  26DE               	addwf	postinc2,f,c
 16498  0124F0  0E00               	movlw	0
 16499  0124F2  22DE               	addwfc	postinc2,f,c
 16500  0124F4  22DE               	addwfc	postinc2,f,c
 16501  0124F6  22DE               	addwfc	postinc2,f,c
 16502                           
 16503                           ;stkvar	_prod @ sp[(-13)+0]
 16504  0124F8  50E1               	movf	fsr1l,w,c
 16505  0124FA  0FF3               	addlw	-13
 16506  0124FC  6ED9               	movwf	fsr2l,c
 16507  0124FE  50E2               	movf	fsr1h,w,c
 16508  012500  6EDA               	movwf	fsr2h,c
 16509  012502  0EFF               	movlw	255
 16510  012504  22DA               	addwfc	fsr2h,f,c
 16511                           
 16512                           ;stkvar	_temp @ sp[(-13)+8]
 16513  012506  0EFC               	movlw	252
 16514  012508  24E1               	addwf	fsr1l,w,c
 16515  01250A  6EE9               	movwf	fsr0l,c
 16516  01250C  0EFF               	movlw	255
 16517  01250E  20E2               	addwfc	fsr1h,w,c
 16518  012510  6EEA               	movwf	fsr0h,c
 16519  012512  50EF               	movf	indf0,w,c
 16520  012514  26DE               	addwf	postinc2,f,c
 16521  012516  0E00               	movlw	0
 16522  012518  22DE               	addwfc	postinc2,f,c
 16523  01251A  22DE               	addwfc	postinc2,f,c
 16524  01251C  22DE               	addwfc	postinc2,f,c
 16525                           
 16526                           ;stkvar	_grs @ sp[(-13)+4]
 16527  01251E  50E1               	movf	fsr1l,w,c
 16528  012520  0FF7               	addlw	-9
 16529  012522  6ED9               	movwf	fsr2l,c
 16530  012524  50E2               	movf	fsr1h,w,c
 16531  012526  6EDA               	movwf	fsr2h,c
 16532  012528  0EFF               	movlw	255
 16533  01252A  22DA               	addwfc	fsr2h,f,c
 16534  01252C  0E08               	movlw	8
 16535  01252E                     u6085:
 16536  01252E  90D8               	bcf	status,0,c
 16537  012530  36DE               	rlcf	postinc2,f,c
 16538  012532  36DE               	rlcf	postinc2,f,c
 16539  012534  36DE               	rlcf	postinc2,f,c
 16540  012536  36DD               	rlcf	postdec2,f,c
 16541  012538  52DD               	movf	postdec2,f,c
 16542  01253A  52DD               	movf	postdec2,f,c
 16543  01253C  2EE8               	decfsz	wreg,f,c
 16544  01253E  D7F7               	goto	u6085
 16545                           
 16546                           ;stkvar	_b @ sp[(-13)+-4]
 16547  012540  0EF0               	movlw	240
 16548  012542  24E1               	addwf	fsr1l,w,c
 16549  012544  6ED9               	movwf	fsr2l,c
 16550  012546  0EFF               	movlw	255
 16551  012548  20E2               	addwfc	fsr1h,w,c
 16552  01254A  6EDA               	movwf	fsr2h,c
 16553  01254C  50DF               	movf	indf2,w,c
 16554  01254E  6E3D               	movwf	(btemp+11)^0,c
 16555                           
 16556                           ;stkvar	_a @ sp[(-13)+-8]
 16557  012550  0EEB               	movlw	-21
 16558  012552  50E3               	movf	plusw1,w,c
 16559  012554  023D               	mulwf	(btemp+11)^0,c
 16560                           
 16561                           ;stkvar	_temp @ sp[(-13)+8]
 16562  012556  0EFB               	movlw	-5
 16563  012558  006F FFCF FFE3     	movff	prodl,plusw1
 16564  01255E  0EFC               	movlw	-4
 16565  012560  006F FFD3 FFE3     	movff	prodh,plusw1
 16566                           
 16567                           ;stkvar	_temp @ sp[(-13)+8]
 16568  012566  0EFB               	movlw	-5
 16569  012568  006F FF8C  F03C    	movff	plusw1,btemp+10
 16570  01256E  0EFC               	movlw	-4
 16571  012570  006F FF8C  F03D    	movff	plusw1,btemp+11
 16572                           
 16573                           ;stkvar	_grs @ sp[(-13)+4]
 16574  012576  50E1               	movf	fsr1l,w,c
 16575  012578  0FF7               	addlw	-9
 16576  01257A  6ED9               	movwf	fsr2l,c
 16577  01257C  50E2               	movf	fsr1h,w,c
 16578  01257E  6EDA               	movwf	fsr2h,c
 16579  012580  0EFF               	movlw	255
 16580  012582  22DA               	addwfc	fsr2h,f,c
 16581  012584  503C               	movf	(btemp+10)^0,w,c
 16582  012586  26DE               	addwf	postinc2,f,c
 16583  012588  503D               	movf	(btemp+11)^0,w,c
 16584  01258A  22DE               	addwfc	postinc2,f,c
 16585  01258C  0E00               	movlw	0
 16586  01258E  22DE               	addwfc	postinc2,f,c
 16587  012590  22DE               	addwfc	postinc2,f,c
 16588                           
 16589                           ;stkvar	_b @ sp[(-13)+-4]
 16590  012592  0EEF               	movlw	-17
 16591  012594  006F FF8C  F03D    	movff	plusw1,btemp+11
 16592                           
 16593                           ;stkvar	_a @ sp[(-13)+-8]
 16594  01259A  0EEC               	movlw	236
 16595  01259C  24E1               	addwf	fsr1l,w,c
 16596  01259E  6ED9               	movwf	fsr2l,c
 16597  0125A0  0EFF               	movlw	255
 16598  0125A2  20E2               	addwfc	fsr1h,w,c
 16599  0125A4  6EDA               	movwf	fsr2h,c
 16600  0125A6  50DF               	movf	indf2,w,c
 16601  0125A8  023D               	mulwf	(btemp+11)^0,c
 16602                           
 16603                           ;stkvar	_temp @ sp[(-13)+8]
 16604  0125AA  0EFB               	movlw	-5
 16605  0125AC  006F FFCF FFE3     	movff	prodl,plusw1
 16606  0125B2  0EFC               	movlw	-4
 16607  0125B4  006F FFD3 FFE3     	movff	prodh,plusw1
 16608                           
 16609                           ;stkvar	_temp @ sp[(-13)+8]
 16610  0125BA  0EFB               	movlw	-5
 16611  0125BC  006F FF8C  F03C    	movff	plusw1,btemp+10
 16612  0125C2  0EFC               	movlw	-4
 16613  0125C4  006F FF8C  F03D    	movff	plusw1,btemp+11
 16614                           
 16615                           ;stkvar	_grs @ sp[(-13)+4]
 16616  0125CA  50E1               	movf	fsr1l,w,c
 16617  0125CC  0FF7               	addlw	-9
 16618  0125CE  6ED9               	movwf	fsr2l,c
 16619  0125D0  50E2               	movf	fsr1h,w,c
 16620  0125D2  6EDA               	movwf	fsr2h,c
 16621  0125D4  0EFF               	movlw	255
 16622  0125D6  22DA               	addwfc	fsr2h,f,c
 16623  0125D8  503C               	movf	(btemp+10)^0,w,c
 16624  0125DA  26DE               	addwf	postinc2,f,c
 16625  0125DC  503D               	movf	(btemp+11)^0,w,c
 16626  0125DE  22DE               	addwfc	postinc2,f,c
 16627  0125E0  0E00               	movlw	0
 16628  0125E2  22DE               	addwfc	postinc2,f,c
 16629  0125E4  22DE               	addwfc	postinc2,f,c
 16630                           
 16631                           ;stkvar	_grs @ sp[(-13)+4]
 16632  0125E6  50E1               	movf	fsr1l,w,c
 16633  0125E8  0FF7               	addlw	-9
 16634  0125EA  6ED9               	movwf	fsr2l,c
 16635  0125EC  50E2               	movf	fsr1h,w,c
 16636  0125EE  6EDA               	movwf	fsr2h,c
 16637  0125F0  0EFF               	movlw	255
 16638  0125F2  22DA               	addwfc	fsr2h,f,c
 16639  0125F4  0E08               	movlw	8
 16640  0125F6                     u6095:
 16641  0125F6  90D8               	bcf	status,0,c
 16642  0125F8  36DE               	rlcf	postinc2,f,c
 16643  0125FA  36DE               	rlcf	postinc2,f,c
 16644  0125FC  36DE               	rlcf	postinc2,f,c
 16645  0125FE  36DD               	rlcf	postdec2,f,c
 16646  012600  52DD               	movf	postdec2,f,c
 16647  012602  52DD               	movf	postdec2,f,c
 16648  012604  2EE8               	decfsz	wreg,f,c
 16649  012606  D7F7               	goto	u6095
 16650                           
 16651                           ;stkvar	_b @ sp[(-13)+-4]
 16652  012608  0EEF               	movlw	-17
 16653  01260A  006F FF8C  F03D    	movff	plusw1,btemp+11
 16654                           
 16655                           ;stkvar	_a @ sp[(-13)+-8]
 16656  012610  0EEB               	movlw	-21
 16657  012612  50E3               	movf	plusw1,w,c
 16658  012614  023D               	mulwf	(btemp+11)^0,c
 16659                           
 16660                           ;stkvar	_temp @ sp[(-13)+8]
 16661  012616  0EFB               	movlw	-5
 16662  012618  006F FFCF FFE3     	movff	prodl,plusw1
 16663  01261E  0EFC               	movlw	-4
 16664  012620  006F FFD3 FFE3     	movff	prodh,plusw1
 16665                           
 16666                           ;stkvar	_temp @ sp[(-13)+8]
 16667  012626  0EFB               	movlw	-5
 16668  012628  006F FF8C  F03C    	movff	plusw1,btemp+10
 16669  01262E  0EFC               	movlw	-4
 16670  012630  006F FF8C  F03D    	movff	plusw1,btemp+11
 16671                           
 16672                           ;stkvar	_grs @ sp[(-13)+4]
 16673  012636  50E1               	movf	fsr1l,w,c
 16674  012638  0FF7               	addlw	-9
 16675  01263A  6ED9               	movwf	fsr2l,c
 16676  01263C  50E2               	movf	fsr1h,w,c
 16677  01263E  6EDA               	movwf	fsr2h,c
 16678  012640  0EFF               	movlw	255
 16679  012642  22DA               	addwfc	fsr2h,f,c
 16680  012644  503C               	movf	(btemp+10)^0,w,c
 16681  012646  26DE               	addwf	postinc2,f,c
 16682  012648  503D               	movf	(btemp+11)^0,w,c
 16683  01264A  22DE               	addwfc	postinc2,f,c
 16684  01264C  0E00               	movlw	0
 16685  01264E  22DE               	addwfc	postinc2,f,c
 16686  012650  22DE               	addwfc	postinc2,f,c
 16687                           
 16688                           ;stkvar	_b @ sp[(-13)+-4]
 16689  012652  0EF0               	movlw	240
 16690  012654  24E1               	addwf	fsr1l,w,c
 16691  012656  6ED9               	movwf	fsr2l,c
 16692  012658  0EFF               	movlw	255
 16693  01265A  20E2               	addwfc	fsr1h,w,c
 16694  01265C  6EDA               	movwf	fsr2h,c
 16695  01265E  50DF               	movf	indf2,w,c
 16696  012660  6E3D               	movwf	(btemp+11)^0,c
 16697                           
 16698                           ;stkvar	_a @ sp[(-13)+-8]
 16699  012662  0EED               	movlw	237
 16700  012664  24E1               	addwf	fsr1l,w,c
 16701  012666  6ED9               	movwf	fsr2l,c
 16702  012668  0EFF               	movlw	255
 16703  01266A  20E2               	addwfc	fsr1h,w,c
 16704  01266C  6EDA               	movwf	fsr2h,c
 16705  01266E  50DF               	movf	indf2,w,c
 16706  012670  023D               	mulwf	(btemp+11)^0,c
 16707                           
 16708                           ;stkvar	_temp @ sp[(-13)+8]
 16709  012672  0EFB               	movlw	-5
 16710  012674  006F FFCF FFE3     	movff	prodl,plusw1
 16711  01267A  0EFC               	movlw	-4
 16712  01267C  006F FFD3 FFE3     	movff	prodh,plusw1
 16713                           
 16714                           ;stkvar	_temp @ sp[(-13)+8]
 16715  012682  0EFB               	movlw	-5
 16716  012684  006F FF8C  F03C    	movff	plusw1,btemp+10
 16717  01268A  0EFC               	movlw	-4
 16718  01268C  006F FF8C  F03D    	movff	plusw1,btemp+11
 16719                           
 16720                           ;stkvar	_prod @ sp[(-13)+0]
 16721  012692  50E1               	movf	fsr1l,w,c
 16722  012694  0FF3               	addlw	-13
 16723  012696  6ED9               	movwf	fsr2l,c
 16724  012698  50E2               	movf	fsr1h,w,c
 16725  01269A  6EDA               	movwf	fsr2h,c
 16726  01269C  0EFF               	movlw	255
 16727  01269E  22DA               	addwfc	fsr2h,f,c
 16728  0126A0  503C               	movf	(btemp+10)^0,w,c
 16729  0126A2  26DE               	addwf	postinc2,f,c
 16730  0126A4  503D               	movf	(btemp+11)^0,w,c
 16731  0126A6  22DE               	addwfc	postinc2,f,c
 16732  0126A8  0E00               	movlw	0
 16733  0126AA  22DE               	addwfc	postinc2,f,c
 16734  0126AC  22DE               	addwfc	postinc2,f,c
 16735                           
 16736                           ;stkvar	_b @ sp[(-13)+-4]
 16737  0126AE  0EF1               	movlw	241
 16738  0126B0  24E1               	addwf	fsr1l,w,c
 16739  0126B2  6ED9               	movwf	fsr2l,c
 16740  0126B4  0EFF               	movlw	255
 16741  0126B6  20E2               	addwfc	fsr1h,w,c
 16742  0126B8  6EDA               	movwf	fsr2h,c
 16743  0126BA  50DF               	movf	indf2,w,c
 16744  0126BC  6E3D               	movwf	(btemp+11)^0,c
 16745                           
 16746                           ;stkvar	_a @ sp[(-13)+-8]
 16747  0126BE  0EEC               	movlw	236
 16748  0126C0  24E1               	addwf	fsr1l,w,c
 16749  0126C2  6ED9               	movwf	fsr2l,c
 16750  0126C4  0EFF               	movlw	255
 16751  0126C6  20E2               	addwfc	fsr1h,w,c
 16752  0126C8  6EDA               	movwf	fsr2h,c
 16753  0126CA  50DF               	movf	indf2,w,c
 16754  0126CC  023D               	mulwf	(btemp+11)^0,c
 16755                           
 16756                           ;stkvar	_temp @ sp[(-13)+8]
 16757  0126CE  0EFB               	movlw	-5
 16758  0126D0  006F FFCF FFE3     	movff	prodl,plusw1
 16759  0126D6  0EFC               	movlw	-4
 16760  0126D8  006F FFD3 FFE3     	movff	prodh,plusw1
 16761                           
 16762                           ;stkvar	_temp @ sp[(-13)+8]
 16763  0126DE  0EFB               	movlw	-5
 16764  0126E0  006F FF8C  F03C    	movff	plusw1,btemp+10
 16765  0126E6  0EFC               	movlw	-4
 16766  0126E8  006F FF8C  F03D    	movff	plusw1,btemp+11
 16767                           
 16768                           ;stkvar	_prod @ sp[(-13)+0]
 16769  0126EE  50E1               	movf	fsr1l,w,c
 16770  0126F0  0FF3               	addlw	-13
 16771  0126F2  6ED9               	movwf	fsr2l,c
 16772  0126F4  50E2               	movf	fsr1h,w,c
 16773  0126F6  6EDA               	movwf	fsr2h,c
 16774  0126F8  0EFF               	movlw	255
 16775  0126FA  22DA               	addwfc	fsr2h,f,c
 16776  0126FC  503C               	movf	(btemp+10)^0,w,c
 16777  0126FE  26DE               	addwf	postinc2,f,c
 16778  012700  503D               	movf	(btemp+11)^0,w,c
 16779  012702  22DE               	addwfc	postinc2,f,c
 16780  012704  0E00               	movlw	0
 16781  012706  22DE               	addwfc	postinc2,f,c
 16782  012708  22DE               	addwfc	postinc2,f,c
 16783                           
 16784                           ;stkvar	_b @ sp[(-13)+-4]
 16785  01270A  0EF1               	movlw	241
 16786  01270C  24E1               	addwf	fsr1l,w,c
 16787  01270E  6ED9               	movwf	fsr2l,c
 16788  012710  0EFF               	movlw	255
 16789  012712  20E2               	addwfc	fsr1h,w,c
 16790  012714  6EDA               	movwf	fsr2h,c
 16791  012716  50DF               	movf	indf2,w,c
 16792  012718  6E3D               	movwf	(btemp+11)^0,c
 16793                           
 16794                           ;stkvar	_a @ sp[(-13)+-8]
 16795  01271A  0EED               	movlw	237
 16796  01271C  24E1               	addwf	fsr1l,w,c
 16797  01271E  6ED9               	movwf	fsr2l,c
 16798  012720  0EFF               	movlw	255
 16799  012722  20E2               	addwfc	fsr1h,w,c
 16800  012724  6EDA               	movwf	fsr2h,c
 16801  012726  50DF               	movf	indf2,w,c
 16802  012728  023D               	mulwf	(btemp+11)^0,c
 16803                           
 16804                           ;stkvar	_temp @ sp[(-13)+8]
 16805  01272A  0EFB               	movlw	-5
 16806  01272C  006F FFCF FFE3     	movff	prodl,plusw1
 16807  012732  0EFC               	movlw	-4
 16808  012734  006F FFD3 FFE3     	movff	prodh,plusw1
 16809                           
 16810                           ;stkvar	_temp @ sp[(-13)+8]
 16811  01273A  0EFB               	movlw	-5
 16812  01273C  006F FF8C  F03C    	movff	plusw1,btemp+10
 16813  012742  0EFC               	movlw	-4
 16814  012744  006F FF8C  F03D    	movff	plusw1,btemp+11
 16815  01274A  503C               	movf	(btemp+10)^0,w,c
 16816  01274C  6E36               	movwf	(btemp+4)^0,c
 16817  01274E  503D               	movf	(btemp+11)^0,w,c
 16818  012750  6E37               	movwf	(btemp+5)^0,c
 16819  012752  6A38               	clrf	(btemp+6)^0,c
 16820  012754  6A39               	clrf	(btemp+7)^0,c
 16821  012756  0060  F0E0  F039   	movff	btemp+6,btemp+7
 16822  01275C  0060  F0DC  F038   	movff	btemp+5,btemp+6
 16823  012762  0060  F0D8  F037   	movff	btemp+4,btemp+5
 16824  012768  6A36               	clrf	(btemp+4)^0,c
 16825                           
 16826                           ;stkvar	_prod @ sp[(-13)+0]
 16827  01276A  50E1               	movf	fsr1l,w,c
 16828  01276C  0FF3               	addlw	-13
 16829  01276E  6ED9               	movwf	fsr2l,c
 16830  012770  50E2               	movf	fsr1h,w,c
 16831  012772  6EDA               	movwf	fsr2h,c
 16832  012774  0EFF               	movlw	255
 16833  012776  22DA               	addwfc	fsr2h,f,c
 16834  012778  5036               	movf	(btemp+4)^0,w,c
 16835  01277A  26DE               	addwf	postinc2,f,c
 16836  01277C  5037               	movf	(btemp+5)^0,w,c
 16837  01277E  22DE               	addwfc	postinc2,f,c
 16838  012780  5038               	movf	(btemp+6)^0,w,c
 16839  012782  22DE               	addwfc	postinc2,f,c
 16840  012784  5039               	movf	(btemp+7)^0,w,c
 16841  012786  22DE               	addwfc	postinc2,f,c
 16842                           
 16843                           ;stkvar	_prod @ sp[(-13)+0]
 16844  012788  50E1               	movf	fsr1l,w,c
 16845  01278A  0FF3               	addlw	-13
 16846  01278C  6ED9               	movwf	fsr2l,c
 16847  01278E  50E2               	movf	fsr1h,w,c
 16848  012790  6EDA               	movwf	fsr2h,c
 16849  012792  0EFF               	movlw	255
 16850  012794  22DA               	addwfc	fsr2h,f,c
 16851                           
 16852                           ;stkvar	_grs @ sp[(-13)+4]
 16853  012796  0EFA               	movlw	250
 16854  012798  24E1               	addwf	fsr1l,w,c
 16855  01279A  6EE9               	movwf	fsr0l,c
 16856  01279C  0EFF               	movlw	255
 16857  01279E  20E2               	addwfc	fsr1h,w,c
 16858  0127A0  6EEA               	movwf	fsr0h,c
 16859  0127A2  50EF               	movf	indf0,w,c
 16860  0127A4  26DE               	addwf	postinc2,f,c
 16861  0127A6  0E00               	movlw	0
 16862  0127A8  22DE               	addwfc	postinc2,f,c
 16863  0127AA  22DE               	addwfc	postinc2,f,c
 16864  0127AC  22DE               	addwfc	postinc2,f,c
 16865                           
 16866                           ;stkvar	_grs @ sp[(-13)+4]
 16867  0127AE  50E1               	movf	fsr1l,w,c
 16868  0127B0  0FF7               	addlw	-9
 16869  0127B2  6ED9               	movwf	fsr2l,c
 16870  0127B4  50E2               	movf	fsr1h,w,c
 16871  0127B6  6EDA               	movwf	fsr2h,c
 16872  0127B8  0EFF               	movlw	255
 16873  0127BA  22DA               	addwfc	fsr2h,f,c
 16874  0127BC  0E08               	movlw	8
 16875  0127BE                     u6105:
 16876  0127BE  90D8               	bcf	status,0,c
 16877  0127C0  36DE               	rlcf	postinc2,f,c
 16878  0127C2  36DE               	rlcf	postinc2,f,c
 16879  0127C4  36DE               	rlcf	postinc2,f,c
 16880  0127C6  36DD               	rlcf	postdec2,f,c
 16881  0127C8  52DD               	movf	postdec2,f,c
 16882  0127CA  52DD               	movf	postdec2,f,c
 16883  0127CC  2EE8               	decfsz	wreg,f,c
 16884  0127CE  D7F7               	goto	u6105
 16885  0127D0  0E82               	movlw	130
 16886  0127D2  6E3C               	movwf	(btemp+10)^0,c
 16887  0127D4  0EFF               	movlw	255
 16888  0127D6  6E3D               	movwf	(btemp+11)^0,c
 16889                           
 16890                           ;stkvar	_bexp @ sp[(-13)+10]
 16891  0127D8  0EFD               	movlw	-3
 16892  0127DA  50E3               	movf	plusw1,w,c
 16893  0127DC  6E3A               	movwf	(btemp+8)^0,c
 16894  0127DE  6A3B               	clrf	(btemp+9)^0,c
 16895                           
 16896                           ;stkvar	_aexp @ sp[(-13)+11]
 16897  0127E0  0EFE               	movlw	-2
 16898  0127E2  50E3               	movf	plusw1,w,c
 16899  0127E4  263A               	addwf	(btemp+8)^0,f,c
 16900  0127E6  0E00               	movlw	0
 16901  0127E8  223B               	addwfc	(btemp+9)^0,f,c
 16902  0127EA  503C               	movf	(btemp+10)^0,w,c
 16903  0127EC  263A               	addwf	(btemp+8)^0,f,c
 16904  0127EE  503D               	movf	(btemp+11)^0,w,c
 16905  0127F0  223B               	addwfc	(btemp+9)^0,f,c
 16906                           
 16907                           ;stkvar	_temp @ sp[(-13)+8]
 16908  0127F2  0EFB               	movlw	-5
 16909  0127F4  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16910  0127FA  0EFC               	movlw	-4
 16911  0127FC  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16912  012802  D021               	goto	l6933
 16913  012804                     l6923:
 16914                           
 16915                           ;stkvar	_prod @ sp[(-13)+0]
 16916  012804  90D8               	bcf	status,0,c
 16917  012806  0EF3               	movlw	-13
 16918  012808  36E3               	rlcf	plusw1,f,c
 16919  01280A  0EF4               	movlw	-12
 16920  01280C  36E3               	rlcf	plusw1,f,c
 16921  01280E  0EF5               	movlw	-11
 16922  012810  36E3               	rlcf	plusw1,f,c
 16923  012812  0EF6               	movlw	-10
 16924  012814  36E3               	rlcf	plusw1,f,c
 16925                           
 16926                           ;stkvar	_grs @ sp[(-13)+4]
 16927  012816  0EFA               	movlw	-6
 16928  012818  AEE3               	btfss	plusw1,7,c
 16929  01281A  D002               	goto	l6929
 16930                           
 16931                           ;stkvar	_prod @ sp[(-13)+0]
 16932  01281C  0EF3               	movlw	-13
 16933  01281E  80E3               	bsf	plusw1,0,c
 16934  012820                     l6929:
 16935                           
 16936                           ;stkvar	_grs @ sp[(-13)+4]
 16937  012820  90D8               	bcf	status,0,c
 16938  012822  0EF7               	movlw	-9
 16939  012824  36E3               	rlcf	plusw1,f,c
 16940  012826  0EF8               	movlw	-8
 16941  012828  36E3               	rlcf	plusw1,f,c
 16942  01282A  0EF9               	movlw	-7
 16943  01282C  36E3               	rlcf	plusw1,f,c
 16944  01282E  0EFA               	movlw	-6
 16945  012830  36E3               	rlcf	plusw1,f,c
 16946                           
 16947                           ;stkvar	_temp @ sp[(-13)+8]
 16948  012832  50E1               	movf	fsr1l,w,c
 16949  012834  0FFB               	addlw	-5
 16950  012836  6ED9               	movwf	fsr2l,c
 16951  012838  50E2               	movf	fsr1h,w,c
 16952  01283A  6EDA               	movwf	fsr2h,c
 16953  01283C  0EFF               	movlw	255
 16954  01283E  22DA               	addwfc	fsr2h,f,c
 16955  012840  06DE               	decf	postinc2,f,c
 16956  012842  0E00               	movlw	0
 16957  012844  5ADD               	subwfb	postdec2,f,c
 16958  012846                     l6933:
 16959                           
 16960                           ;stkvar	_prod @ sp[(-13)+0]
 16961  012846  0EF5               	movlw	-11
 16962  012848  AEE3               	btfss	plusw1,7,c
 16963  01284A  D7DC               	goto	l6923
 16964                           
 16965                           ;stkvar	_aexp @ sp[(-13)+11]
 16966  01284C  0EFE               	movlw	-2
 16967  01284E  6AE3               	clrf	plusw1,c
 16968                           
 16969                           ;stkvar	_grs @ sp[(-13)+4]
 16970  012850  0EFA               	movlw	-6
 16971  012852  AEE3               	btfss	plusw1,7,c
 16972  012854  D020               	goto	l6947
 16973                           
 16974                           ;stkvar	_grs @ sp[(-13)+4]
 16975  012856  50E1               	movf	fsr1l,w,c
 16976  012858  0FF7               	addlw	-9
 16977  01285A  6ED9               	movwf	fsr2l,c
 16978  01285C  50E2               	movf	fsr1h,w,c
 16979  01285E  6EDA               	movwf	fsr2h,c
 16980  012860  0EFF               	movlw	255
 16981  012862  22DA               	addwfc	fsr2h,f,c
 16982  012864  0EFF               	movlw	255
 16983  012866  14DE               	andwf	postinc2,w,c
 16984  012868  6E3A               	movwf	(btemp+8)^0,c
 16985  01286A  0EFF               	movlw	255
 16986  01286C  14DE               	andwf	postinc2,w,c
 16987  01286E  6E3B               	movwf	(btemp+9)^0,c
 16988  012870  0EFF               	movlw	255
 16989  012872  14DE               	andwf	postinc2,w,c
 16990  012874  6E3C               	movwf	(btemp+10)^0,c
 16991  012876  0E7F               	movlw	127
 16992  012878  14DE               	andwf	postinc2,w,c
 16993  01287A  6E3D               	movwf	(btemp+11)^0,c
 16994  01287C  503A               	movf	(btemp+8)^0,w,c
 16995  01287E  103B               	iorwf	(btemp+9)^0,w,c
 16996  012880  103C               	iorwf	(btemp+10)^0,w,c
 16997  012882  103D               	iorwf	(btemp+11)^0,w,c
 16998  012884  B4D8               	btfsc	status,2,c
 16999  012886  D004               	goto	l6943
 17000  012888                     u6140:
 17001                           
 17002                           ;stkvar	_aexp @ sp[(-13)+11]
 17003  012888  0EFE               	movlw	-2
 17004  01288A  6AE3               	clrf	plusw1,c
 17005  01288C  2AE3               	incf	plusw1,f,c
 17006  01288E  D003               	goto	l6947
 17007  012890                     l6943:
 17008                           
 17009                           ;stkvar	_prod @ sp[(-13)+0]
 17010  012890  0EF3               	movlw	-13
 17011  012892  B0E3               	btfsc	plusw1,0,c
 17012  012894  D7F9               	goto	u6140
 17013  012896                     l6947:
 17014                           
 17015                           ;stkvar	_aexp @ sp[(-13)+11]
 17016  012896  0EFE               	movlw	-2
 17017  012898  50E3               	movf	plusw1,w,c
 17018  01289A  B4D8               	btfsc	status,2,c
 17019  01289C  D036               	goto	l6957
 17020                           
 17021                           ;stkvar	_prod @ sp[(-13)+0]
 17022  01289E  50E1               	movf	fsr1l,w,c
 17023  0128A0  0FF3               	addlw	-13
 17024  0128A2  6ED9               	movwf	fsr2l,c
 17025  0128A4  50E2               	movf	fsr1h,w,c
 17026  0128A6  6EDA               	movwf	fsr2h,c
 17027  0128A8  0EFF               	movlw	255
 17028  0128AA  22DA               	addwfc	fsr2h,f,c
 17029  0128AC  2ADE               	incf	postinc2,f,c
 17030  0128AE  0E00               	movlw	0
 17031  0128B0  22DE               	addwfc	postinc2,f,c
 17032  0128B2  22DE               	addwfc	postinc2,f,c
 17033  0128B4  22DE               	addwfc	postinc2,f,c
 17034                           
 17035                           ;stkvar	_prod @ sp[(-13)+0]
 17036  0128B6  0EF6               	movlw	-10
 17037  0128B8  A0E3               	btfss	plusw1,0,c
 17038  0128BA  D027               	goto	l6957
 17039  0128BC  0E01               	movlw	1
 17040  0128BE  6E3D               	movwf	(btemp+11)^0,c
 17041                           
 17042                           ;stkvar	_prod @ sp[(-13)+0]
 17043  0128C0  50E1               	movf	fsr1l,w,c
 17044  0128C2  0FF3               	addlw	-13
 17045  0128C4  6ED9               	movwf	fsr2l,c
 17046  0128C6  50E2               	movf	fsr1h,w,c
 17047  0128C8  6EDA               	movwf	fsr2h,c
 17048  0128CA  0EFF               	movlw	255
 17049  0128CC  22DA               	addwfc	fsr2h,f,c
 17050  0128CE  283D               	incf	(btemp+11)^0,w,c
 17051  0128D0  52DE               	movf	postinc2,f,c
 17052  0128D2  D008               	goto	u6180
 17053  0128D4                     u6185:
 17054  0128D4  52DE               	movf	postinc2,f,c
 17055  0128D6  90D8               	bcf	status,0,c
 17056  0128D8  BEDC               	btfsc	preinc2,7,c
 17057  0128DA  80D8               	bsf	status,0,c
 17058  0128DC  32DD               	rrcf	postdec2,f,c
 17059  0128DE  32DD               	rrcf	postdec2,f,c
 17060  0128E0  32DD               	rrcf	postdec2,f,c
 17061  0128E2  32DE               	rrcf	postinc2,f,c
 17062  0128E4                     u6180:
 17063  0128E4  2EE8               	decfsz	wreg,f,c
 17064  0128E6  D7F6               	goto	u6185
 17065                           
 17066                           ;stkvar	_temp @ sp[(-13)+8]
 17067  0128E8  0EFB               	movlw	-5
 17068  0128EA  50E3               	movf	plusw1,w,c
 17069  0128EC  0F01               	addlw	1
 17070  0128EE  6E32               	movwf	btemp^0,c
 17071  0128F0  0EFB               	movlw	-5
 17072  0128F2  0060  F0CB  FFE3   	movff	btemp,plusw1
 17073  0128F8  6A32               	clrf	btemp^0,c
 17074  0128FA  0EFC               	movlw	-4
 17075  0128FC  50E3               	movf	plusw1,w,c
 17076  0128FE  2032               	addwfc	btemp^0,w,c
 17077  012900  6E32               	movwf	btemp^0,c
 17078  012902  0EFC               	movlw	-4
 17079  012904  0060  F0CB  FFE3   	movff	btemp,plusw1
 17080  01290A                     l6957:
 17081                           
 17082                           ;stkvar	_temp @ sp[(-13)+8]
 17083  01290A  0EFC               	movlw	-4
 17084  01290C  BEE3               	btfsc	plusw1,7,c
 17085  01290E  D020               	goto	l6961
 17086  012910  0EFC               	movlw	-4
 17087  012912  50E3               	movf	plusw1,w,c
 17088  012914  E104               	bnz	u6190
 17089  012916  0EFB               	movlw	-5
 17090  012918  28E3               	incf	plusw1,w,c
 17091  01291A  A0D8               	btfss	status,0,c
 17092  01291C  D019               	goto	l6961
 17093  01291E                     u6190:
 17094  01291E  0E00               	movlw	0
 17095  012920  6E3A               	movwf	(btemp+8)^0,c
 17096  012922  0E00               	movlw	0
 17097  012924  6E3B               	movwf	(btemp+9)^0,c
 17098  012926  0E80               	movlw	128
 17099  012928  6E3C               	movwf	(btemp+10)^0,c
 17100  01292A  0E7F               	movlw	127
 17101  01292C  6E3D               	movwf	(btemp+11)^0,c
 17102                           
 17103                           ;stkvar	_prod @ sp[(-13)+0]
 17104  01292E  0EF3               	movlw	-13
 17105  012930  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 17106  012936  0EF4               	movlw	-12
 17107  012938  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 17108  01293E  0EF5               	movlw	-11
 17109  012940  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 17110  012946  0EF6               	movlw	-10
 17111  012948  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17112  01294E  D044               	goto	l6977
 17113  012950                     l6961:
 17114                           
 17115                           ;stkvar	_temp @ sp[(-13)+8]
 17116  012950  0EFC               	movlw	-4
 17117  012952  BEE3               	btfsc	plusw1,7,c
 17118  012954  D007               	goto	u6200
 17119  012956  0EFC               	movlw	-4
 17120  012958  50E3               	movf	plusw1,w,c
 17121  01295A  E10F               	bnz	l6967
 17122  01295C  0EFB               	movlw	-5
 17123  01295E  04E3               	decf	plusw1,w,c
 17124  012960  B0D8               	btfsc	status,0,c
 17125  012962  D00B               	goto	l6967
 17126  012964                     u6200:
 17127                           
 17128                           ;stkvar	_prod @ sp[(-13)+0]
 17129  012964  0EF3               	movlw	-13
 17130  012966  6AE3               	clrf	plusw1,c
 17131  012968  0EF4               	movlw	-12
 17132  01296A  6AE3               	clrf	plusw1,c
 17133  01296C  0EF5               	movlw	-11
 17134  01296E  6AE3               	clrf	plusw1,c
 17135  012970  0EF6               	movlw	-10
 17136  012972  6AE3               	clrf	plusw1,c
 17137                           
 17138                           ;stkvar	_sign @ sp[(-13)+12]
 17139  012974  0EFF               	movlw	-1
 17140  012976  6AE3               	clrf	plusw1,c
 17141  012978  D02F               	goto	l6977
 17142  01297A                     l6967:
 17143                           
 17144                           ;stkvar	_temp @ sp[(-13)+8]
 17145                           ;stkvar	_bexp @ sp[(-13)+10]
 17146  01297A  0EFB               	movlw	-5
 17147  01297C  006F FF8C  F032    	movff	plusw1,btemp
 17148  012982  0EFD               	movlw	-3
 17149  012984  0060  F0CB  FFE3   	movff	btemp,plusw1
 17150                           
 17151                           ;stkvar	_prod @ sp[(-13)+0]
 17152  01298A  50E1               	movf	fsr1l,w,c
 17153  01298C  0FF3               	addlw	-13
 17154  01298E  6ED9               	movwf	fsr2l,c
 17155  012990  50E2               	movf	fsr1h,w,c
 17156  012992  6EDA               	movwf	fsr2h,c
 17157  012994  0EFF               	movlw	255
 17158  012996  22DA               	addwfc	fsr2h,f,c
 17159  012998  0EFF               	movlw	255
 17160  01299A  16DE               	andwf	postinc2,f,c
 17161  01299C  0EFF               	movlw	255
 17162  01299E  16DE               	andwf	postinc2,f,c
 17163  0129A0  0E7F               	movlw	127
 17164  0129A2  16DE               	andwf	postinc2,f,c
 17165  0129A4  0E00               	movlw	0
 17166  0129A6  16DE               	andwf	postinc2,f,c
 17167                           
 17168                           ;stkvar	_bexp @ sp[(-13)+10]
 17169  0129A8  0EFD               	movlw	-3
 17170  0129AA  A0E3               	btfss	plusw1,0,c
 17171  0129AC  D008               	goto	l6975
 17172                           
 17173                           ;stkvar	_prod @ sp[(-13)+0]
 17174  0129AE  0EF5               	movlw	245
 17175  0129B0  24E1               	addwf	fsr1l,w,c
 17176  0129B2  6ED9               	movwf	fsr2l,c
 17177  0129B4  0EFF               	movlw	255
 17178  0129B6  20E2               	addwfc	fsr1h,w,c
 17179  0129B8  6EDA               	movwf	fsr2h,c
 17180  0129BA  0E00               	movlw	0
 17181  0129BC  8EDB               	bsf	plusw2,7,c
 17182  0129BE                     l6975:
 17183                           
 17184                           ;stkvar	_prod @ sp[(-13)+0]
 17185  0129BE  0EF6               	movlw	246
 17186  0129C0  24E1               	addwf	fsr1l,w,c
 17187  0129C2  6ED9               	movwf	fsr2l,c
 17188  0129C4  0EFF               	movlw	255
 17189  0129C6  20E2               	addwfc	fsr1h,w,c
 17190  0129C8  6EDA               	movwf	fsr2h,c
 17191                           
 17192                           ;stkvar	_bexp @ sp[(-13)+10]
 17193  0129CA  0EFD               	movlw	-3
 17194  0129CC  006F FF8C  F03D    	movff	plusw1,btemp+11
 17195  0129D2  90D8               	bcf	status,0,c
 17196  0129D4  303D               	rrcf	(btemp+11)^0,w,c
 17197  0129D6  6EDF               	movwf	indf2,c
 17198  0129D8                     l6977:
 17199                           
 17200                           ;stkvar	_sign @ sp[(-13)+12]
 17201  0129D8  0EFF               	movlw	-1
 17202  0129DA  006F FF8C  F03D    	movff	plusw1,btemp+11
 17203                           
 17204                           ;stkvar	_prod @ sp[(-13)+0]
 17205  0129E0  0EF6               	movlw	246
 17206  0129E2  24E1               	addwf	fsr1l,w,c
 17207  0129E4  6ED9               	movwf	fsr2l,c
 17208  0129E6  0EFF               	movlw	255
 17209  0129E8  20E2               	addwfc	fsr1h,w,c
 17210  0129EA  6EDA               	movwf	fsr2h,c
 17211  0129EC  503D               	movf	(btemp+11)^0,w,c
 17212  0129EE  12DF               	iorwf	indf2,f,c
 17213                           
 17214                           ;stkvar	_prod @ sp[(-13)+0]
 17215  0129F0  0EF3               	movlw	-13
 17216  0129F2  006F FF8C  F032    	movff	plusw1,btemp
 17217  0129F8  0EF4               	movlw	-12
 17218  0129FA  006F FF8C  F033    	movff	plusw1,btemp+1
 17219  012A00  0EF5               	movlw	-11
 17220  012A02  006F FF8C  F034    	movff	plusw1,btemp+2
 17221  012A08  0EF6               	movlw	-10
 17222  012A0A  006F FF8C  F035    	movff	plusw1,btemp+3
 17223  012A10                     l2662:
 17224                           
 17225                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 17226  012A10  0EEB               	movlw	235
 17227  012A12  26E1               	addwf	fsr1l,f,c
 17228  012A14  0EFF               	movlw	255
 17229  012A16  22E2               	addwfc	fsr1h,f,c
 17230  012A18  0012               	return		;funcret
 17231  012A1A                     __end_of___flmul:
 17232                           	opt callstack 0
 17233                           
 17234 ;; *************** function ___flge *****************
 17235 ;; Defined at:
 17236 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 17237 ;; Parameters:    Size  Location     Type
 17238 ;;  ff1             4  [STACK] unsigned char 
 17239 ;;  ff2             4  [STACK] unsigned char 
 17240 ;; Auto vars:     Size  Location     Type
 17241 ;;		None
 17242 ;; Return value:  Size  Location     Type
 17243 ;;		None               void
 17244 ;; Registers used:
 17245 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 17246 ;; Tracked objects:
 17247 ;;		On entry : 0/5
 17248 ;;		On exit  : 0/0
 17249 ;;		Unchanged: 0/0
 17250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17255 ;;Total ram usage:        0 bytes
 17256 ;; Hardware stack levels used:    1
 17257 ;; Hardware stack levels required when called:    6
 17258 ;; This function calls:
 17259 ;;		Nothing
 17260 ;; This function is called by:
 17261 ;;		_efgtoa
 17262 ;; This function uses a reentrant model
 17263 ;;
 17264                           
 17265                           	psect	text57
 17266  016922                     __ptext57:
 17267                           	opt callstack 0
 17268  016922                     ___flge:
 17269                           	opt callstack 17
 17270                           
 17271                           ;stkvar	_ff1 @ sp[(0)+-4]
 17272                           
 17273                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17274                           ;incstack = 0
 17275  016922  50E1               	movf	fsr1l,w,c
 17276  016924  0FFC               	addlw	-4
 17277  016926  6ED9               	movwf	fsr2l,c
 17278  016928  50E2               	movf	fsr1h,w,c
 17279  01692A  6EDA               	movwf	fsr2h,c
 17280  01692C  0EFF               	movlw	255
 17281  01692E  22DA               	addwfc	fsr2h,f,c
 17282  016930  0E00               	movlw	0
 17283  016932  14DE               	andwf	postinc2,w,c
 17284  016934  6E3A               	movwf	(btemp+8)^0,c
 17285  016936  0E00               	movlw	0
 17286  016938  14DE               	andwf	postinc2,w,c
 17287  01693A  6E3B               	movwf	(btemp+9)^0,c
 17288  01693C  0E80               	movlw	128
 17289  01693E  14DE               	andwf	postinc2,w,c
 17290  016940  6E3C               	movwf	(btemp+10)^0,c
 17291  016942  0E7F               	movlw	127
 17292  016944  14DE               	andwf	postinc2,w,c
 17293  016946  6E3D               	movwf	(btemp+11)^0,c
 17294  016948  503A               	movf	(btemp+8)^0,w,c
 17295  01694A  103B               	iorwf	(btemp+9)^0,w,c
 17296  01694C  103C               	iorwf	(btemp+10)^0,w,c
 17297  01694E  103D               	iorwf	(btemp+11)^0,w,c
 17298  016950  A4D8               	btfss	status,2,c
 17299  016952  D008               	goto	l7093
 17300                           
 17301                           ;stkvar	_ff1 @ sp[(0)+-4]
 17302  016954  0EFC               	movlw	-4
 17303  016956  6AE3               	clrf	plusw1,c
 17304  016958  0EFD               	movlw	-3
 17305  01695A  6AE3               	clrf	plusw1,c
 17306  01695C  0EFE               	movlw	-2
 17307  01695E  6AE3               	clrf	plusw1,c
 17308  016960  0EFF               	movlw	-1
 17309  016962  6AE3               	clrf	plusw1,c
 17310  016964                     l7093:
 17311                           
 17312                           ;stkvar	_ff2 @ sp[(0)+-8]
 17313  016964  50E1               	movf	fsr1l,w,c
 17314  016966  0FF8               	addlw	-8
 17315  016968  6ED9               	movwf	fsr2l,c
 17316  01696A  50E2               	movf	fsr1h,w,c
 17317  01696C  6EDA               	movwf	fsr2h,c
 17318  01696E  0EFF               	movlw	255
 17319  016970  22DA               	addwfc	fsr2h,f,c
 17320  016972  0E00               	movlw	0
 17321  016974  14DE               	andwf	postinc2,w,c
 17322  016976  6E3A               	movwf	(btemp+8)^0,c
 17323  016978  0E00               	movlw	0
 17324  01697A  14DE               	andwf	postinc2,w,c
 17325  01697C  6E3B               	movwf	(btemp+9)^0,c
 17326  01697E  0E80               	movlw	128
 17327  016980  14DE               	andwf	postinc2,w,c
 17328  016982  6E3C               	movwf	(btemp+10)^0,c
 17329  016984  0E7F               	movlw	127
 17330  016986  14DE               	andwf	postinc2,w,c
 17331  016988  6E3D               	movwf	(btemp+11)^0,c
 17332  01698A  503A               	movf	(btemp+8)^0,w,c
 17333  01698C  103B               	iorwf	(btemp+9)^0,w,c
 17334  01698E  103C               	iorwf	(btemp+10)^0,w,c
 17335  016990  103D               	iorwf	(btemp+11)^0,w,c
 17336  016992  A4D8               	btfss	status,2,c
 17337  016994  D008               	goto	l2307
 17338                           
 17339                           ;stkvar	_ff2 @ sp[(0)+-8]
 17340  016996  0EF8               	movlw	-8
 17341  016998  6AE3               	clrf	plusw1,c
 17342  01699A  0EF9               	movlw	-7
 17343  01699C  6AE3               	clrf	plusw1,c
 17344  01699E  0EFA               	movlw	-6
 17345  0169A0  6AE3               	clrf	plusw1,c
 17346  0169A2  0EFB               	movlw	-5
 17347  0169A4  6AE3               	clrf	plusw1,c
 17348  0169A6                     l2307:
 17349                           
 17350                           ;stkvar	_ff1 @ sp[(0)+-4]
 17351  0169A6  0EFF               	movlw	-1
 17352  0169A8  AEE3               	btfss	plusw1,7,c
 17353  0169AA  D024               	goto	l7099
 17354                           
 17355                           ;stkvar	_ff1 @ sp[(0)+-4]
 17356  0169AC  0E00               	movlw	0
 17357  0169AE  6E3A               	movwf	(btemp+8)^0,c
 17358  0169B0  0E00               	movlw	0
 17359  0169B2  6E3B               	movwf	(btemp+9)^0,c
 17360  0169B4  0E00               	movlw	0
 17361  0169B6  6E3C               	movwf	(btemp+10)^0,c
 17362  0169B8  0E80               	movlw	128
 17363  0169BA  6E3D               	movwf	(btemp+11)^0,c
 17364  0169BC  0EFC               	movlw	-4
 17365  0169BE  50E3               	movf	plusw1,w,c
 17366  0169C0  5E3A               	subwf	(btemp+8)^0,f,c
 17367  0169C2  0EFD               	movlw	-3
 17368  0169C4  50E3               	movf	plusw1,w,c
 17369  0169C6  5A3B               	subwfb	(btemp+9)^0,f,c
 17370  0169C8  0EFE               	movlw	-2
 17371  0169CA  50E3               	movf	plusw1,w,c
 17372  0169CC  5A3C               	subwfb	(btemp+10)^0,f,c
 17373  0169CE  0EFF               	movlw	-1
 17374  0169D0  50E3               	movf	plusw1,w,c
 17375  0169D2  5A3D               	subwfb	(btemp+11)^0,f,c
 17376                           
 17377                           ;stkvar	_ff1 @ sp[(0)+-4]
 17378  0169D4  0EFC               	movlw	-4
 17379  0169D6  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 17380  0169DC  0EFD               	movlw	-3
 17381  0169DE  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 17382  0169E4  0EFE               	movlw	-2
 17383  0169E6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 17384  0169EC  0EFF               	movlw	-1
 17385  0169EE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17386  0169F4                     l7099:
 17387                           
 17388                           ;stkvar	_ff2 @ sp[(0)+-8]
 17389  0169F4  0EFB               	movlw	-5
 17390  0169F6  AEE3               	btfss	plusw1,7,c
 17391  0169F8  D024               	goto	l7103
 17392                           
 17393                           ;stkvar	_ff2 @ sp[(0)+-8]
 17394  0169FA  0E00               	movlw	0
 17395  0169FC  6E3A               	movwf	(btemp+8)^0,c
 17396  0169FE  0E00               	movlw	0
 17397  016A00  6E3B               	movwf	(btemp+9)^0,c
 17398  016A02  0E00               	movlw	0
 17399  016A04  6E3C               	movwf	(btemp+10)^0,c
 17400  016A06  0E80               	movlw	128
 17401  016A08  6E3D               	movwf	(btemp+11)^0,c
 17402  016A0A  0EF8               	movlw	-8
 17403  016A0C  50E3               	movf	plusw1,w,c
 17404  016A0E  5E3A               	subwf	(btemp+8)^0,f,c
 17405  016A10  0EF9               	movlw	-7
 17406  016A12  50E3               	movf	plusw1,w,c
 17407  016A14  5A3B               	subwfb	(btemp+9)^0,f,c
 17408  016A16  0EFA               	movlw	-6
 17409  016A18  50E3               	movf	plusw1,w,c
 17410  016A1A  5A3C               	subwfb	(btemp+10)^0,f,c
 17411  016A1C  0EFB               	movlw	-5
 17412  016A1E  50E3               	movf	plusw1,w,c
 17413  016A20  5A3D               	subwfb	(btemp+11)^0,f,c
 17414                           
 17415                           ;stkvar	_ff2 @ sp[(0)+-8]
 17416  016A22  0EF8               	movlw	-8
 17417  016A24  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 17418  016A2A  0EF9               	movlw	-7
 17419  016A2C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 17420  016A32  0EFA               	movlw	-6
 17421  016A34  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 17422  016A3A  0EFB               	movlw	-5
 17423  016A3C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17424  016A42                     l7103:
 17425                           
 17426                           ;stkvar	_ff1 @ sp[(0)+-4]
 17427  016A42  0EFF               	movlw	-1
 17428  016A44  7EE3               	btg	plusw1,7,c
 17429                           
 17430                           ;stkvar	_ff2 @ sp[(0)+-8]
 17431  016A46  0EFB               	movlw	-5
 17432  016A48  7EE3               	btg	plusw1,7,c
 17433                           
 17434                           ;stkvar	_ff2 @ sp[(0)+-8]
 17435                           ;stkvar	_ff1 @ sp[(0)+-4]
 17436  016A4A  50E1               	movf	fsr1l,w,c
 17437  016A4C  0FFC               	addlw	-4
 17438  016A4E  6ED9               	movwf	fsr2l,c
 17439  016A50  50E2               	movf	fsr1h,w,c
 17440  016A52  6EDA               	movwf	fsr2h,c
 17441  016A54  0EFF               	movlw	255
 17442  016A56  22DA               	addwfc	fsr2h,f,c
 17443  016A58  0EF8               	movlw	-8
 17444  016A5A  50E3               	movf	plusw1,w,c
 17445  016A5C  5CDE               	subwf	postinc2,w,c
 17446  016A5E  0EF9               	movlw	-7
 17447  016A60  50E3               	movf	plusw1,w,c
 17448  016A62  58DE               	subwfb	postinc2,w,c
 17449  016A64  0EFA               	movlw	-6
 17450  016A66  50E3               	movf	plusw1,w,c
 17451  016A68  58DE               	subwfb	postinc2,w,c
 17452  016A6A  0EFB               	movlw	-5
 17453  016A6C  50E3               	movf	plusw1,w,c
 17454  016A6E  58DE               	subwfb	postinc2,w,c
 17455  016A70  B0D8               	btfsc	status,0,c
 17456  016A72  D002               	goto	l7111
 17457  016A74  9032               	bcf	btemp& (0+255),0,c
 17458  016A76  D001               	goto	l2314
 17459  016A78                     l7111:
 17460  016A78  8032               	bsf	btemp& (0+255),0,c
 17461  016A7A                     l2314:
 17462                           
 17463                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 17464  016A7A  0EF8               	movlw	248
 17465  016A7C  26E1               	addwf	fsr1l,f,c
 17466  016A7E  0EFF               	movlw	255
 17467  016A80  22E2               	addwfc	fsr1h,f,c
 17468  016A82  0012               	return		;funcret
 17469  016A84                     __end_of___flge:
 17470                           	opt callstack 0
 17471                           
 17472 ;; *************** function ___fleq *****************
 17473 ;; Defined at:
 17474 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 17475 ;; Parameters:    Size  Location     Type
 17476 ;;  ff1             4  [STACK] unsigned char 
 17477 ;;  ff2             4  [STACK] unsigned char 
 17478 ;; Auto vars:     Size  Location     Type
 17479 ;;		None
 17480 ;; Return value:  Size  Location     Type
 17481 ;;		None               void
 17482 ;; Registers used:
 17483 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 17484 ;; Tracked objects:
 17485 ;;		On entry : 0/5
 17486 ;;		On exit  : 0/0
 17487 ;;		Unchanged: 0/0
 17488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17493 ;;Total ram usage:        0 bytes
 17494 ;; Hardware stack levels used:    1
 17495 ;; Hardware stack levels required when called:    6
 17496 ;; This function calls:
 17497 ;;		Nothing
 17498 ;; This function is called by:
 17499 ;;		_efgtoa
 17500 ;; This function uses a reentrant model
 17501 ;;
 17502                           
 17503                           	psect	text58
 17504  01784E                     __ptext58:
 17505                           	opt callstack 0
 17506  01784E                     ___fleq:
 17507                           	opt callstack 17
 17508                           
 17509                           ;stkvar	_ff1 @ sp[(0)+-4]
 17510                           
 17511                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17512                           ;incstack = 0
 17513  01784E  50E1               	movf	fsr1l,w,c
 17514  017850  0FFC               	addlw	-4
 17515  017852  6ED9               	movwf	fsr2l,c
 17516  017854  50E2               	movf	fsr1h,w,c
 17517  017856  6EDA               	movwf	fsr2h,c
 17518  017858  0EFF               	movlw	255
 17519  01785A  22DA               	addwfc	fsr2h,f,c
 17520  01785C  0E00               	movlw	0
 17521  01785E  14DE               	andwf	postinc2,w,c
 17522  017860  6E3A               	movwf	(btemp+8)^0,c
 17523  017862  0E00               	movlw	0
 17524  017864  14DE               	andwf	postinc2,w,c
 17525  017866  6E3B               	movwf	(btemp+9)^0,c
 17526  017868  0E80               	movlw	128
 17527  01786A  14DE               	andwf	postinc2,w,c
 17528  01786C  6E3C               	movwf	(btemp+10)^0,c
 17529  01786E  0E7F               	movlw	127
 17530  017870  14DE               	andwf	postinc2,w,c
 17531  017872  6E3D               	movwf	(btemp+11)^0,c
 17532  017874  503A               	movf	(btemp+8)^0,w,c
 17533  017876  103B               	iorwf	(btemp+9)^0,w,c
 17534  017878  103C               	iorwf	(btemp+10)^0,w,c
 17535  01787A  103D               	iorwf	(btemp+11)^0,w,c
 17536  01787C  A4D8               	btfss	status,2,c
 17537  01787E  D008               	goto	l7077
 17538                           
 17539                           ;stkvar	_ff1 @ sp[(0)+-4]
 17540  017880  0EFC               	movlw	-4
 17541  017882  6AE3               	clrf	plusw1,c
 17542  017884  0EFD               	movlw	-3
 17543  017886  6AE3               	clrf	plusw1,c
 17544  017888  0EFE               	movlw	-2
 17545  01788A  6AE3               	clrf	plusw1,c
 17546  01788C  0EFF               	movlw	-1
 17547  01788E  6AE3               	clrf	plusw1,c
 17548  017890                     l7077:
 17549                           
 17550                           ;stkvar	_ff2 @ sp[(0)+-8]
 17551  017890  50E1               	movf	fsr1l,w,c
 17552  017892  0FF8               	addlw	-8
 17553  017894  6ED9               	movwf	fsr2l,c
 17554  017896  50E2               	movf	fsr1h,w,c
 17555  017898  6EDA               	movwf	fsr2h,c
 17556  01789A  0EFF               	movlw	255
 17557  01789C  22DA               	addwfc	fsr2h,f,c
 17558  01789E  0E00               	movlw	0
 17559  0178A0  14DE               	andwf	postinc2,w,c
 17560  0178A2  6E3A               	movwf	(btemp+8)^0,c
 17561  0178A4  0E00               	movlw	0
 17562  0178A6  14DE               	andwf	postinc2,w,c
 17563  0178A8  6E3B               	movwf	(btemp+9)^0,c
 17564  0178AA  0E80               	movlw	128
 17565  0178AC  14DE               	andwf	postinc2,w,c
 17566  0178AE  6E3C               	movwf	(btemp+10)^0,c
 17567  0178B0  0E7F               	movlw	127
 17568  0178B2  14DE               	andwf	postinc2,w,c
 17569  0178B4  6E3D               	movwf	(btemp+11)^0,c
 17570  0178B6  503A               	movf	(btemp+8)^0,w,c
 17571  0178B8  103B               	iorwf	(btemp+9)^0,w,c
 17572  0178BA  103C               	iorwf	(btemp+10)^0,w,c
 17573  0178BC  103D               	iorwf	(btemp+11)^0,w,c
 17574  0178BE  A4D8               	btfss	status,2,c
 17575  0178C0  D008               	goto	l7081
 17576                           
 17577                           ;stkvar	_ff2 @ sp[(0)+-8]
 17578  0178C2  0EF8               	movlw	-8
 17579  0178C4  6AE3               	clrf	plusw1,c
 17580  0178C6  0EF9               	movlw	-7
 17581  0178C8  6AE3               	clrf	plusw1,c
 17582  0178CA  0EFA               	movlw	-6
 17583  0178CC  6AE3               	clrf	plusw1,c
 17584  0178CE  0EFB               	movlw	-5
 17585  0178D0  6AE3               	clrf	plusw1,c
 17586  0178D2                     l7081:
 17587                           
 17588                           ;stkvar	_ff2 @ sp[(0)+-8]
 17589                           ;stkvar	_ff1 @ sp[(0)+-4]
 17590  0178D2  50E1               	movf	fsr1l,w,c
 17591  0178D4  0FFC               	addlw	-4
 17592  0178D6  6ED9               	movwf	fsr2l,c
 17593  0178D8  50E2               	movf	fsr1h,w,c
 17594  0178DA  6EDA               	movwf	fsr2h,c
 17595  0178DC  0EFF               	movlw	255
 17596  0178DE  22DA               	addwfc	fsr2h,f,c
 17597  0178E0  0EF8               	movlw	-8
 17598  0178E2  50E3               	movf	plusw1,w,c
 17599  0178E4  18DE               	xorwf	postinc2,w,c
 17600  0178E6  E10D               	bnz	u6380
 17601  0178E8  0EF9               	movlw	-7
 17602  0178EA  50E3               	movf	plusw1,w,c
 17603  0178EC  18DE               	xorwf	postinc2,w,c
 17604  0178EE  E109               	bnz	u6380
 17605  0178F0  0EFA               	movlw	-6
 17606  0178F2  50E3               	movf	plusw1,w,c
 17607  0178F4  18DE               	xorwf	postinc2,w,c
 17608  0178F6  E105               	bnz	u6380
 17609  0178F8  0EFB               	movlw	-5
 17610  0178FA  50E3               	movf	plusw1,w,c
 17611  0178FC  18DE               	xorwf	postinc2,w,c
 17612  0178FE  B4D8               	btfsc	status,2,c
 17613  017900  D002               	goto	l7085
 17614  017902                     u6380:
 17615  017902  9032               	bcf	btemp& (0+255),0,c
 17616  017904  D001               	goto	l2303
 17617  017906                     l7085:
 17618  017906  8032               	bsf	btemp& (0+255),0,c
 17619  017908                     l2303:
 17620                           
 17621                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 17622  017908  0EF8               	movlw	248
 17623  01790A  26E1               	addwf	fsr1l,f,c
 17624  01790C  0EFF               	movlw	255
 17625  01790E  22E2               	addwfc	fsr1h,f,c
 17626  017910  0012               	return		;funcret
 17627  017912                     __end_of___fleq:
 17628                           	opt callstack 0
 17629                           
 17630 ;; *************** function ___fldiv *****************
 17631 ;; Defined at:
 17632 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 17633 ;; Parameters:    Size  Location     Type
 17634 ;;  b               4  [STACK] unsigned char 
 17635 ;;  a               4  [STACK] unsigned char 
 17636 ;; Auto vars:     Size  Location     Type
 17637 ;;  grs             4  [STACK] unsigned long 
 17638 ;;  rem             4  [STACK] unsigned long 
 17639 ;;  new_exp         2  [STACK] short 
 17640 ;;  aexp            1  [STACK] unsigned char 
 17641 ;;  bexp            1  [STACK] unsigned char 
 17642 ;;  sign            1  [STACK] unsigned char 
 17643 ;; Return value:  Size  Location     Type
 17644 ;;                  4  [STACK] unsigned char 
 17645 ;; Registers used:
 17646 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 17647 ;; Tracked objects:
 17648 ;;		On entry : 0/39
 17649 ;;		On exit  : 0/0
 17650 ;;		Unchanged: 0/0
 17651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17656 ;;Total ram usage:        0 bytes
 17657 ;; Hardware stack levels used:    1
 17658 ;; Hardware stack levels required when called:    6
 17659 ;; This function calls:
 17660 ;;		Nothing
 17661 ;; This function is called by:
 17662 ;;		_conv_raw_result
 17663 ;;		_efgtoa
 17664 ;; This function uses a reentrant model
 17665 ;;
 17666                           
 17667                           	psect	text59
 17668  01375C                     __ptext59:
 17669                           	opt callstack 0
 17670  01375C                     ___fldiv:
 17671                           	opt callstack 0
 17672                           
 17673                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 17674  01375C  0E0D               	movlw	13
 17675  01375E  26E1               	addwf	fsr1l,f,c
 17676  013760  0E00               	movlw	0
 17677  013762  22E2               	addwfc	fsr1h,f,c
 17678                           
 17679                           ;stkvar	_b @ sp[(-13)+-4]
 17680                           
 17681                           ;incstack = 0
 17682  013764  0EF2               	movlw	242
 17683  013766  24E1               	addwf	fsr1l,w,c
 17684  013768  6ED9               	movwf	fsr2l,c
 17685  01376A  0EFF               	movlw	255
 17686  01376C  20E2               	addwfc	fsr1h,w,c
 17687  01376E  6EDA               	movwf	fsr2h,c
 17688  013770  50DF               	movf	indf2,w,c
 17689  013772  6E3D               	movwf	(btemp+11)^0,c
 17690  013774  0E80               	movlw	128
 17691  013776  163D               	andwf	(btemp+11)^0,f,c
 17692                           
 17693                           ;stkvar	_sign @ sp[(-13)+12]
 17694  013778  0EFF               	movlw	-1
 17695  01377A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17696                           
 17697                           ;stkvar	_b @ sp[(-13)+-4]
 17698  013780  0EF2               	movlw	242
 17699  013782  24E1               	addwf	fsr1l,w,c
 17700  013784  6ED9               	movwf	fsr2l,c
 17701  013786  0EFF               	movlw	255
 17702  013788  20E2               	addwfc	fsr1h,w,c
 17703  01378A  6EDA               	movwf	fsr2h,c
 17704  01378C  50DF               	movf	indf2,w,c
 17705  01378E  6E3D               	movwf	(btemp+11)^0,c
 17706  013790  90D8               	bcf	status,0,c
 17707  013792  343D               	rlcf	(btemp+11)^0,w,c
 17708  013794  6E3C               	movwf	(btemp+10)^0,c
 17709                           
 17710                           ;stkvar	_bexp @ sp[(-13)+11]
 17711  013796  0EFE               	movlw	-2
 17712  013798  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 17713                           
 17714                           ;stkvar	_b @ sp[(-13)+-4]
 17715  01379E  0EF1               	movlw	241
 17716  0137A0  24E1               	addwf	fsr1l,w,c
 17717  0137A2  6ED9               	movwf	fsr2l,c
 17718  0137A4  0EFF               	movlw	255
 17719  0137A6  20E2               	addwfc	fsr1h,w,c
 17720  0137A8  6EDA               	movwf	fsr2h,c
 17721  0137AA  AEDF               	btfss	indf2,7,c
 17722  0137AC  D002               	goto	l6679
 17723                           
 17724                           ;stkvar	_bexp @ sp[(-13)+11]
 17725  0137AE  0EFE               	movlw	-2
 17726  0137B0  80E3               	bsf	plusw1,0,c
 17727  0137B2                     l6679:
 17728                           
 17729                           ;stkvar	_bexp @ sp[(-13)+11]
 17730  0137B2  0EFE               	movlw	-2
 17731  0137B4  50E3               	movf	plusw1,w,c
 17732  0137B6  B4D8               	btfsc	status,2,c
 17733  0137B8  D027               	goto	l6689
 17734                           
 17735                           ;stkvar	_bexp @ sp[(-13)+11]
 17736  0137BA  0EFE               	movlw	-2
 17737  0137BC  28E3               	incf	plusw1,w,c
 17738  0137BE  A4D8               	btfss	status,2,c
 17739  0137C0  D018               	goto	l6685
 17740  0137C2  0E00               	movlw	0
 17741  0137C4  6E3A               	movwf	(btemp+8)^0,c
 17742  0137C6  0E00               	movlw	0
 17743  0137C8  6E3B               	movwf	(btemp+9)^0,c
 17744  0137CA  0E00               	movlw	0
 17745  0137CC  6E3C               	movwf	(btemp+10)^0,c
 17746  0137CE  0E00               	movlw	0
 17747  0137D0  6E3D               	movwf	(btemp+11)^0,c
 17748                           
 17749                           ;stkvar	_b @ sp[(-13)+-4]
 17750  0137D2  0EEF               	movlw	-17
 17751  0137D4  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 17752  0137DA  0EF0               	movlw	-16
 17753  0137DC  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 17754  0137E2  0EF1               	movlw	-15
 17755  0137E4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 17756  0137EA  0EF2               	movlw	-14
 17757  0137EC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17758  0137F2                     l6685:
 17759                           
 17760                           ;stkvar	_b @ sp[(-13)+-4]
 17761  0137F2  0EF1               	movlw	-15
 17762  0137F4  8EE3               	bsf	plusw1,7,c
 17763                           
 17764                           ;stkvar	_b @ sp[(-13)+-4]
 17765  0137F6  0EF2               	movlw	242
 17766  0137F8  24E1               	addwf	fsr1l,w,c
 17767  0137FA  6ED9               	movwf	fsr2l,c
 17768  0137FC  0EFF               	movlw	255
 17769  0137FE  20E2               	addwfc	fsr1h,w,c
 17770  013800  6EDA               	movwf	fsr2h,c
 17771  013802  0E00               	movlw	0
 17772  013804  6EDF               	movwf	indf2,c
 17773  013806  D018               	goto	l6691
 17774  013808                     l6689:
 17775  013808  0E00               	movlw	0
 17776  01380A  6E3A               	movwf	(btemp+8)^0,c
 17777  01380C  0E00               	movlw	0
 17778  01380E  6E3B               	movwf	(btemp+9)^0,c
 17779  013810  0E00               	movlw	0
 17780  013812  6E3C               	movwf	(btemp+10)^0,c
 17781  013814  0E00               	movlw	0
 17782  013816  6E3D               	movwf	(btemp+11)^0,c
 17783                           
 17784                           ;stkvar	_b @ sp[(-13)+-4]
 17785  013818  0EEF               	movlw	-17
 17786  01381A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 17787  013820  0EF0               	movlw	-16
 17788  013822  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 17789  013828  0EF1               	movlw	-15
 17790  01382A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 17791  013830  0EF2               	movlw	-14
 17792  013832  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17793  013838                     l6691:
 17794                           
 17795                           ;stkvar	_a @ sp[(-13)+-8]
 17796  013838  0EEE               	movlw	238
 17797  01383A  24E1               	addwf	fsr1l,w,c
 17798  01383C  6ED9               	movwf	fsr2l,c
 17799  01383E  0EFF               	movlw	255
 17800  013840  20E2               	addwfc	fsr1h,w,c
 17801  013842  6EDA               	movwf	fsr2h,c
 17802  013844  50DF               	movf	indf2,w,c
 17803  013846  6E3D               	movwf	(btemp+11)^0,c
 17804  013848  0E80               	movlw	128
 17805  01384A  163D               	andwf	(btemp+11)^0,f,c
 17806                           
 17807                           ;stkvar	_sign @ sp[(-13)+12]
 17808  01384C  50E1               	movf	fsr1l,w,c
 17809  01384E  0FFF               	addlw	-1
 17810  013850  6ED9               	movwf	fsr2l,c
 17811  013852  50E2               	movf	fsr1h,w,c
 17812  013854  6EDA               	movwf	fsr2h,c
 17813  013856  0EFF               	movlw	255
 17814  013858  22DA               	addwfc	fsr2h,f,c
 17815  01385A  503D               	movf	(btemp+11)^0,w,c
 17816  01385C  1ADF               	xorwf	indf2,f,c
 17817                           
 17818                           ;stkvar	_a @ sp[(-13)+-8]
 17819  01385E  0EEE               	movlw	238
 17820  013860  24E1               	addwf	fsr1l,w,c
 17821  013862  6ED9               	movwf	fsr2l,c
 17822  013864  0EFF               	movlw	255
 17823  013866  20E2               	addwfc	fsr1h,w,c
 17824  013868  6EDA               	movwf	fsr2h,c
 17825  01386A  50DF               	movf	indf2,w,c
 17826  01386C  6E3D               	movwf	(btemp+11)^0,c
 17827  01386E  90D8               	bcf	status,0,c
 17828  013870  343D               	rlcf	(btemp+11)^0,w,c
 17829  013872  6E3C               	movwf	(btemp+10)^0,c
 17830                           
 17831                           ;stkvar	_aexp @ sp[(-13)+10]
 17832  013874  0EFD               	movlw	-3
 17833  013876  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 17834                           
 17835                           ;stkvar	_a @ sp[(-13)+-8]
 17836  01387C  0EED               	movlw	237
 17837  01387E  24E1               	addwf	fsr1l,w,c
 17838  013880  6ED9               	movwf	fsr2l,c
 17839  013882  0EFF               	movlw	255
 17840  013884  20E2               	addwfc	fsr1h,w,c
 17841  013886  6EDA               	movwf	fsr2h,c
 17842  013888  AEDF               	btfss	indf2,7,c
 17843  01388A  D002               	goto	l6699
 17844                           
 17845                           ;stkvar	_aexp @ sp[(-13)+10]
 17846  01388C  0EFD               	movlw	-3
 17847  01388E  80E3               	bsf	plusw1,0,c
 17848  013890                     l6699:
 17849                           
 17850                           ;stkvar	_aexp @ sp[(-13)+10]
 17851  013890  0EFD               	movlw	-3
 17852  013892  50E3               	movf	plusw1,w,c
 17853  013894  B4D8               	btfsc	status,2,c
 17854  013896  D027               	goto	l6709
 17855                           
 17856                           ;stkvar	_aexp @ sp[(-13)+10]
 17857  013898  0EFD               	movlw	-3
 17858  01389A  28E3               	incf	plusw1,w,c
 17859  01389C  A4D8               	btfss	status,2,c
 17860  01389E  D018               	goto	l6705
 17861  0138A0  0E00               	movlw	0
 17862  0138A2  6E3A               	movwf	(btemp+8)^0,c
 17863  0138A4  0E00               	movlw	0
 17864  0138A6  6E3B               	movwf	(btemp+9)^0,c
 17865  0138A8  0E00               	movlw	0
 17866  0138AA  6E3C               	movwf	(btemp+10)^0,c
 17867  0138AC  0E00               	movlw	0
 17868  0138AE  6E3D               	movwf	(btemp+11)^0,c
 17869                           
 17870                           ;stkvar	_a @ sp[(-13)+-8]
 17871  0138B0  0EEB               	movlw	-21
 17872  0138B2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 17873  0138B8  0EEC               	movlw	-20
 17874  0138BA  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 17875  0138C0  0EED               	movlw	-19
 17876  0138C2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 17877  0138C8  0EEE               	movlw	-18
 17878  0138CA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17879  0138D0                     l6705:
 17880                           
 17881                           ;stkvar	_a @ sp[(-13)+-8]
 17882  0138D0  0EED               	movlw	-19
 17883  0138D2  8EE3               	bsf	plusw1,7,c
 17884                           
 17885                           ;stkvar	_a @ sp[(-13)+-8]
 17886  0138D4  0EEE               	movlw	238
 17887  0138D6  24E1               	addwf	fsr1l,w,c
 17888  0138D8  6ED9               	movwf	fsr2l,c
 17889  0138DA  0EFF               	movlw	255
 17890  0138DC  20E2               	addwfc	fsr1h,w,c
 17891  0138DE  6EDA               	movwf	fsr2h,c
 17892  0138E0  0E00               	movlw	0
 17893  0138E2  6EDF               	movwf	indf2,c
 17894  0138E4  D018               	goto	l6711
 17895  0138E6                     l6709:
 17896  0138E6  0E00               	movlw	0
 17897  0138E8  6E3A               	movwf	(btemp+8)^0,c
 17898  0138EA  0E00               	movlw	0
 17899  0138EC  6E3B               	movwf	(btemp+9)^0,c
 17900  0138EE  0E00               	movlw	0
 17901  0138F0  6E3C               	movwf	(btemp+10)^0,c
 17902  0138F2  0E00               	movlw	0
 17903  0138F4  6E3D               	movwf	(btemp+11)^0,c
 17904                           
 17905                           ;stkvar	_a @ sp[(-13)+-8]
 17906  0138F6  0EEB               	movlw	-21
 17907  0138F8  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 17908  0138FE  0EEC               	movlw	-20
 17909  013900  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 17910  013906  0EED               	movlw	-19
 17911  013908  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 17912  01390E  0EEE               	movlw	-18
 17913  013910  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17914  013916                     l6711:
 17915                           
 17916                           ;stkvar	_a @ sp[(-13)+-8]
 17917  013916  0EEB               	movlw	-21
 17918  013918  50E3               	movf	plusw1,w,c
 17919  01391A  E139               	bnz	l6723
 17920  01391C  0EEC               	movlw	-20
 17921  01391E  50E3               	movf	plusw1,w,c
 17922  013920  E136               	bnz	l6723
 17923  013922  0EED               	movlw	-19
 17924  013924  50E3               	movf	plusw1,w,c
 17925  013926  E133               	bnz	l6723
 17926  013928  0EEE               	movlw	-18
 17927  01392A  50E3               	movf	plusw1,w,c
 17928  01392C  A4D8               	btfss	status,2,c
 17929  01392E  D02F               	goto	l6723
 17930                           
 17931                           ;stkvar	_b @ sp[(-13)+-4]
 17932  013930  0EEF               	movlw	-17
 17933  013932  6AE3               	clrf	plusw1,c
 17934  013934  0EF0               	movlw	-16
 17935  013936  6AE3               	clrf	plusw1,c
 17936  013938  0EF1               	movlw	-15
 17937  01393A  6AE3               	clrf	plusw1,c
 17938  01393C  0EF2               	movlw	-14
 17939  01393E  6AE3               	clrf	plusw1,c
 17940                           
 17941                           ;stkvar	_b @ sp[(-13)+-4]
 17942  013940  0EF1               	movlw	241
 17943  013942  24E1               	addwf	fsr1l,w,c
 17944  013944  6ED9               	movwf	fsr2l,c
 17945  013946  0EFF               	movlw	255
 17946  013948  20E2               	addwfc	fsr1h,w,c
 17947  01394A  6EDA               	movwf	fsr2h,c
 17948  01394C  0E80               	movlw	128
 17949  01394E  12DE               	iorwf	postinc2,f,c
 17950  013950  0E7F               	movlw	127
 17951  013952  12DD               	iorwf	postdec2,f,c
 17952  013954                     l6717:
 17953                           
 17954                           ;stkvar	_sign @ sp[(-13)+12]
 17955  013954  0EFF               	movlw	-1
 17956  013956  006F FF8C  F03D    	movff	plusw1,btemp+11
 17957                           
 17958                           ;stkvar	_b @ sp[(-13)+-4]
 17959  01395C  0EF2               	movlw	242
 17960  01395E  24E1               	addwf	fsr1l,w,c
 17961  013960  6ED9               	movwf	fsr2l,c
 17962  013962  0EFF               	movlw	255
 17963  013964  20E2               	addwfc	fsr1h,w,c
 17964  013966  6EDA               	movwf	fsr2h,c
 17965  013968  503D               	movf	(btemp+11)^0,w,c
 17966  01396A  12DF               	iorwf	indf2,f,c
 17967                           
 17968                           ;stkvar	_b @ sp[(-13)+-4]
 17969  01396C  0EEF               	movlw	-17
 17970  01396E  006F FF8C  F032    	movff	plusw1,btemp
 17971  013974  0EF0               	movlw	-16
 17972  013976  006F FF8C  F033    	movff	plusw1,btemp+1
 17973  01397C  0EF1               	movlw	-15
 17974  01397E  006F FF8C  F034    	movff	plusw1,btemp+2
 17975  013984  0EF2               	movlw	-14
 17976  013986  006F FF8C  F035    	movff	plusw1,btemp+3
 17977  01398C  D19F               	goto	l2626
 17978  01398E                     l6723:
 17979                           
 17980                           ;stkvar	_bexp @ sp[(-13)+11]
 17981  01398E  0EFE               	movlw	-2
 17982  013990  50E3               	movf	plusw1,w,c
 17983  013992  A4D8               	btfss	status,2,c
 17984  013994  D009               	goto	l6731
 17985  013996  0E00               	movlw	0
 17986  013998  6E32               	movwf	btemp^0,c
 17987  01399A  0E00               	movlw	0
 17988  01399C  6E33               	movwf	(btemp+1)^0,c
 17989  01399E  0E00               	movlw	0
 17990  0139A0  6E34               	movwf	(btemp+2)^0,c
 17991  0139A2  0E00               	movlw	0
 17992  0139A4  6E35               	movwf	(btemp+3)^0,c
 17993  0139A6  D192               	goto	l2626
 17994  0139A8                     l6731:
 17995                           
 17996                           ;stkvar	_bexp @ sp[(-13)+11]
 17997  0139A8  0EFE               	movlw	-2
 17998  0139AA  50E3               	movf	plusw1,w,c
 17999  0139AC  6E3C               	movwf	(btemp+10)^0,c
 18000  0139AE  6A3D               	clrf	(btemp+11)^0,c
 18001                           
 18002                           ;stkvar	_aexp @ sp[(-13)+10]
 18003  0139B0  0EFD               	movlw	-3
 18004  0139B2  50E3               	movf	plusw1,w,c
 18005  0139B4  5E3C               	subwf	(btemp+10)^0,f,c
 18006  0139B6  0E00               	movlw	0
 18007  0139B8  5A3D               	subwfb	(btemp+11)^0,f,c
 18008  0139BA  0E7F               	movlw	127
 18009  0139BC  263C               	addwf	(btemp+10)^0,f,c
 18010  0139BE  0E00               	movlw	0
 18011  0139C0  223D               	addwfc	(btemp+11)^0,f,c
 18012                           
 18013                           ;stkvar	_new_exp @ sp[(-13)+8]
 18014  0139C2  0EFB               	movlw	-5
 18015  0139C4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 18016  0139CA  0EFC               	movlw	-4
 18017  0139CC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 18018                           
 18019                           ;stkvar	_b @ sp[(-13)+-4]
 18020  0139D2  0EEF               	movlw	-17
 18021  0139D4  006F FF8C  F03A    	movff	plusw1,btemp+8
 18022  0139DA  0EF0               	movlw	-16
 18023  0139DC  006F FF8C  F03B    	movff	plusw1,btemp+9
 18024  0139E2  0EF1               	movlw	-15
 18025  0139E4  006F FF8C  F03C    	movff	plusw1,btemp+10
 18026  0139EA  0EF2               	movlw	-14
 18027  0139EC  006F FF8C  F03D    	movff	plusw1,btemp+11
 18028                           
 18029                           ;stkvar	_rem @ sp[(-13)+4]
 18030  0139F2  0EF7               	movlw	-9
 18031  0139F4  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 18032  0139FA  0EF8               	movlw	-8
 18033  0139FC  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 18034  013A02  0EF9               	movlw	-7
 18035  013A04  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 18036  013A0A  0EFA               	movlw	-6
 18037  013A0C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 18038                           
 18039                           ;stkvar	_b @ sp[(-13)+-4]
 18040  013A12  0EEF               	movlw	-17
 18041  013A14  6AE3               	clrf	plusw1,c
 18042  013A16  0EF0               	movlw	-16
 18043  013A18  6AE3               	clrf	plusw1,c
 18044  013A1A  0EF1               	movlw	-15
 18045  013A1C  6AE3               	clrf	plusw1,c
 18046  013A1E  0EF2               	movlw	-14
 18047  013A20  6AE3               	clrf	plusw1,c
 18048                           
 18049                           ;stkvar	_grs @ sp[(-13)+0]
 18050  013A22  0EF3               	movlw	-13
 18051  013A24  6AE3               	clrf	plusw1,c
 18052  013A26  0EF4               	movlw	-12
 18053  013A28  6AE3               	clrf	plusw1,c
 18054  013A2A  0EF5               	movlw	-11
 18055  013A2C  6AE3               	clrf	plusw1,c
 18056  013A2E  0EF6               	movlw	-10
 18057  013A30  6AE3               	clrf	plusw1,c
 18058                           
 18059                           ;stkvar	_aexp @ sp[(-13)+10]
 18060  013A32  0EFD               	movlw	-3
 18061  013A34  6AE3               	clrf	plusw1,c
 18062  013A36  D050               	goto	l6759
 18063  013A38                     l6741:
 18064                           
 18065                           ;stkvar	_aexp @ sp[(-13)+10]
 18066  013A38  0EFD               	movlw	-3
 18067  013A3A  50E3               	movf	plusw1,w,c
 18068  013A3C  B4D8               	btfsc	status,2,c
 18069  013A3E  D020               	goto	l6751
 18070                           
 18071                           ;stkvar	_rem @ sp[(-13)+4]
 18072  013A40  90D8               	bcf	status,0,c
 18073  013A42  0EF7               	movlw	-9
 18074  013A44  36E3               	rlcf	plusw1,f,c
 18075  013A46  0EF8               	movlw	-8
 18076  013A48  36E3               	rlcf	plusw1,f,c
 18077  013A4A  0EF9               	movlw	-7
 18078  013A4C  36E3               	rlcf	plusw1,f,c
 18079  013A4E  0EFA               	movlw	-6
 18080  013A50  36E3               	rlcf	plusw1,f,c
 18081                           
 18082                           ;stkvar	_b @ sp[(-13)+-4]
 18083  013A52  90D8               	bcf	status,0,c
 18084  013A54  0EEF               	movlw	-17
 18085  013A56  36E3               	rlcf	plusw1,f,c
 18086  013A58  0EF0               	movlw	-16
 18087  013A5A  36E3               	rlcf	plusw1,f,c
 18088  013A5C  0EF1               	movlw	-15
 18089  013A5E  36E3               	rlcf	plusw1,f,c
 18090  013A60  0EF2               	movlw	-14
 18091  013A62  36E3               	rlcf	plusw1,f,c
 18092                           
 18093                           ;stkvar	_grs @ sp[(-13)+0]
 18094  013A64  0EF6               	movlw	-10
 18095  013A66  AEE3               	btfss	plusw1,7,c
 18096  013A68  D002               	goto	l6749
 18097                           
 18098                           ;stkvar	_b @ sp[(-13)+-4]
 18099  013A6A  0EEF               	movlw	-17
 18100  013A6C  80E3               	bsf	plusw1,0,c
 18101  013A6E                     l6749:
 18102                           
 18103                           ;stkvar	_grs @ sp[(-13)+0]
 18104  013A6E  90D8               	bcf	status,0,c
 18105  013A70  0EF3               	movlw	-13
 18106  013A72  36E3               	rlcf	plusw1,f,c
 18107  013A74  0EF4               	movlw	-12
 18108  013A76  36E3               	rlcf	plusw1,f,c
 18109  013A78  0EF5               	movlw	-11
 18110  013A7A  36E3               	rlcf	plusw1,f,c
 18111  013A7C  0EF6               	movlw	-10
 18112  013A7E  36E3               	rlcf	plusw1,f,c
 18113  013A80                     l6751:
 18114                           
 18115                           ;stkvar	_a @ sp[(-13)+-8]
 18116                           ;stkvar	_rem @ sp[(-13)+4]
 18117  013A80  50E1               	movf	fsr1l,w,c
 18118  013A82  0FF7               	addlw	-9
 18119  013A84  6ED9               	movwf	fsr2l,c
 18120  013A86  50E2               	movf	fsr1h,w,c
 18121  013A88  6EDA               	movwf	fsr2h,c
 18122  013A8A  0EFF               	movlw	255
 18123  013A8C  22DA               	addwfc	fsr2h,f,c
 18124  013A8E  0EEB               	movlw	-21
 18125  013A90  50E3               	movf	plusw1,w,c
 18126  013A92  5CDE               	subwf	postinc2,w,c
 18127  013A94  0EEC               	movlw	-20
 18128  013A96  50E3               	movf	plusw1,w,c
 18129  013A98  58DE               	subwfb	postinc2,w,c
 18130  013A9A  0EED               	movlw	-19
 18131  013A9C  50E3               	movf	plusw1,w,c
 18132  013A9E  58DE               	subwfb	postinc2,w,c
 18133  013AA0  0EEE               	movlw	-18
 18134  013AA2  50E3               	movf	plusw1,w,c
 18135  013AA4  58DE               	subwfb	postinc2,w,c
 18136  013AA6  A0D8               	btfss	status,0,c
 18137  013AA8  D015               	goto	l6757
 18138                           
 18139                           ;stkvar	_grs @ sp[(-13)+0]
 18140  013AAA  0EF6               	movlw	-10
 18141  013AAC  8CE3               	bsf	plusw1,6,c
 18142                           
 18143                           ;stkvar	_a @ sp[(-13)+-8]
 18144                           ;stkvar	_rem @ sp[(-13)+4]
 18145  013AAE  50E1               	movf	fsr1l,w,c
 18146  013AB0  0FF7               	addlw	-9
 18147  013AB2  6ED9               	movwf	fsr2l,c
 18148  013AB4  50E2               	movf	fsr1h,w,c
 18149  013AB6  6EDA               	movwf	fsr2h,c
 18150  013AB8  0EFF               	movlw	255
 18151  013ABA  22DA               	addwfc	fsr2h,f,c
 18152  013ABC  0EEB               	movlw	-21
 18153  013ABE  50E3               	movf	plusw1,w,c
 18154  013AC0  5EDE               	subwf	postinc2,f,c
 18155  013AC2  0EEC               	movlw	-20
 18156  013AC4  50E3               	movf	plusw1,w,c
 18157  013AC6  5ADE               	subwfb	postinc2,f,c
 18158  013AC8  0EED               	movlw	-19
 18159  013ACA  50E3               	movf	plusw1,w,c
 18160  013ACC  5ADE               	subwfb	postinc2,f,c
 18161  013ACE  0EEE               	movlw	-18
 18162  013AD0  50E3               	movf	plusw1,w,c
 18163  013AD2  5ADE               	subwfb	postinc2,f,c
 18164  013AD4                     l6757:
 18165                           
 18166                           ;stkvar	_aexp @ sp[(-13)+10]
 18167  013AD4  0EFD               	movlw	-3
 18168  013AD6  2AE3               	incf	plusw1,f,c
 18169  013AD8                     l6759:
 18170                           
 18171                           ;stkvar	_aexp @ sp[(-13)+10]
 18172  013AD8  0EFD               	movlw	-3
 18173  013ADA  006F FF8C  F032    	movff	plusw1,btemp
 18174  013AE0  0E19               	movlw	25
 18175  013AE2  6432               	cpfsgt	btemp^0,c
 18176  013AE4  D7A9               	goto	l6741
 18177                           
 18178                           ;stkvar	_rem @ sp[(-13)+4]
 18179  013AE6  0EF7               	movlw	-9
 18180  013AE8  50E3               	movf	plusw1,w,c
 18181  013AEA  E10A               	bnz	u5880
 18182  013AEC  0EF8               	movlw	-8
 18183  013AEE  50E3               	movf	plusw1,w,c
 18184  013AF0  E107               	bnz	u5880
 18185  013AF2  0EF9               	movlw	-7
 18186  013AF4  50E3               	movf	plusw1,w,c
 18187  013AF6  E104               	bnz	u5880
 18188  013AF8  0EFA               	movlw	-6
 18189  013AFA  50E3               	movf	plusw1,w,c
 18190  013AFC  B4D8               	btfsc	status,2,c
 18191  013AFE  D024               	goto	l6775
 18192  013B00                     u5880:
 18193                           
 18194                           ;stkvar	_grs @ sp[(-13)+0]
 18195  013B00  0EF3               	movlw	-13
 18196  013B02  80E3               	bsf	plusw1,0,c
 18197  013B04  D021               	goto	l6775
 18198  013B06                     l6765:
 18199                           
 18200                           ;stkvar	_b @ sp[(-13)+-4]
 18201  013B06  90D8               	bcf	status,0,c
 18202  013B08  0EEF               	movlw	-17
 18203  013B0A  36E3               	rlcf	plusw1,f,c
 18204  013B0C  0EF0               	movlw	-16
 18205  013B0E  36E3               	rlcf	plusw1,f,c
 18206  013B10  0EF1               	movlw	-15
 18207  013B12  36E3               	rlcf	plusw1,f,c
 18208  013B14  0EF2               	movlw	-14
 18209  013B16  36E3               	rlcf	plusw1,f,c
 18210                           
 18211                           ;stkvar	_grs @ sp[(-13)+0]
 18212  013B18  0EF6               	movlw	-10
 18213  013B1A  AEE3               	btfss	plusw1,7,c
 18214  013B1C  D002               	goto	l6771
 18215                           
 18216                           ;stkvar	_b @ sp[(-13)+-4]
 18217  013B1E  0EEF               	movlw	-17
 18218  013B20  80E3               	bsf	plusw1,0,c
 18219  013B22                     l6771:
 18220                           
 18221                           ;stkvar	_grs @ sp[(-13)+0]
 18222  013B22  90D8               	bcf	status,0,c
 18223  013B24  0EF3               	movlw	-13
 18224  013B26  36E3               	rlcf	plusw1,f,c
 18225  013B28  0EF4               	movlw	-12
 18226  013B2A  36E3               	rlcf	plusw1,f,c
 18227  013B2C  0EF5               	movlw	-11
 18228  013B2E  36E3               	rlcf	plusw1,f,c
 18229  013B30  0EF6               	movlw	-10
 18230  013B32  36E3               	rlcf	plusw1,f,c
 18231                           
 18232                           ;stkvar	_new_exp @ sp[(-13)+8]
 18233  013B34  50E1               	movf	fsr1l,w,c
 18234  013B36  0FFB               	addlw	-5
 18235  013B38  6ED9               	movwf	fsr2l,c
 18236  013B3A  50E2               	movf	fsr1h,w,c
 18237  013B3C  6EDA               	movwf	fsr2h,c
 18238  013B3E  0EFF               	movlw	255
 18239  013B40  22DA               	addwfc	fsr2h,f,c
 18240  013B42  06DE               	decf	postinc2,f,c
 18241  013B44  0E00               	movlw	0
 18242  013B46  5ADD               	subwfb	postdec2,f,c
 18243  013B48                     l6775:
 18244                           
 18245                           ;stkvar	_b @ sp[(-13)+-4]
 18246  013B48  0EF1               	movlw	-15
 18247  013B4A  AEE3               	btfss	plusw1,7,c
 18248  013B4C  D7DC               	goto	l6765
 18249                           
 18250                           ;stkvar	_aexp @ sp[(-13)+10]
 18251  013B4E  0EFD               	movlw	-3
 18252  013B50  6AE3               	clrf	plusw1,c
 18253                           
 18254                           ;stkvar	_grs @ sp[(-13)+0]
 18255  013B52  0EF6               	movlw	-10
 18256  013B54  AEE3               	btfss	plusw1,7,c
 18257  013B56  D020               	goto	l6789
 18258                           
 18259                           ;stkvar	_grs @ sp[(-13)+0]
 18260  013B58  50E1               	movf	fsr1l,w,c
 18261  013B5A  0FF3               	addlw	-13
 18262  013B5C  6ED9               	movwf	fsr2l,c
 18263  013B5E  50E2               	movf	fsr1h,w,c
 18264  013B60  6EDA               	movwf	fsr2h,c
 18265  013B62  0EFF               	movlw	255
 18266  013B64  22DA               	addwfc	fsr2h,f,c
 18267  013B66  0EFF               	movlw	255
 18268  013B68  14DE               	andwf	postinc2,w,c
 18269  013B6A  6E3A               	movwf	(btemp+8)^0,c
 18270  013B6C  0EFF               	movlw	255
 18271  013B6E  14DE               	andwf	postinc2,w,c
 18272  013B70  6E3B               	movwf	(btemp+9)^0,c
 18273  013B72  0EFF               	movlw	255
 18274  013B74  14DE               	andwf	postinc2,w,c
 18275  013B76  6E3C               	movwf	(btemp+10)^0,c
 18276  013B78  0E7F               	movlw	127
 18277  013B7A  14DE               	andwf	postinc2,w,c
 18278  013B7C  6E3D               	movwf	(btemp+11)^0,c
 18279  013B7E  503A               	movf	(btemp+8)^0,w,c
 18280  013B80  103B               	iorwf	(btemp+9)^0,w,c
 18281  013B82  103C               	iorwf	(btemp+10)^0,w,c
 18282  013B84  103D               	iorwf	(btemp+11)^0,w,c
 18283  013B86  B4D8               	btfsc	status,2,c
 18284  013B88  D004               	goto	l6785
 18285  013B8A                     u5920:
 18286                           
 18287                           ;stkvar	_aexp @ sp[(-13)+10]
 18288  013B8A  0EFD               	movlw	-3
 18289  013B8C  6AE3               	clrf	plusw1,c
 18290  013B8E  2AE3               	incf	plusw1,f,c
 18291  013B90  D003               	goto	l6789
 18292  013B92                     l6785:
 18293                           
 18294                           ;stkvar	_b @ sp[(-13)+-4]
 18295  013B92  0EEF               	movlw	-17
 18296  013B94  B0E3               	btfsc	plusw1,0,c
 18297  013B96  D7F9               	goto	u5920
 18298  013B98                     l6789:
 18299                           
 18300                           ;stkvar	_aexp @ sp[(-13)+10]
 18301  013B98  0EFD               	movlw	-3
 18302  013B9A  50E3               	movf	plusw1,w,c
 18303  013B9C  B4D8               	btfsc	status,2,c
 18304  013B9E  D036               	goto	l6799
 18305                           
 18306                           ;stkvar	_b @ sp[(-13)+-4]
 18307  013BA0  50E1               	movf	fsr1l,w,c
 18308  013BA2  0FEF               	addlw	-17
 18309  013BA4  6ED9               	movwf	fsr2l,c
 18310  013BA6  50E2               	movf	fsr1h,w,c
 18311  013BA8  6EDA               	movwf	fsr2h,c
 18312  013BAA  0EFF               	movlw	255
 18313  013BAC  22DA               	addwfc	fsr2h,f,c
 18314  013BAE  2ADE               	incf	postinc2,f,c
 18315  013BB0  0E00               	movlw	0
 18316  013BB2  22DE               	addwfc	postinc2,f,c
 18317  013BB4  22DE               	addwfc	postinc2,f,c
 18318  013BB6  22DE               	addwfc	postinc2,f,c
 18319                           
 18320                           ;stkvar	_b @ sp[(-13)+-4]
 18321  013BB8  0EF2               	movlw	-14
 18322  013BBA  A0E3               	btfss	plusw1,0,c
 18323  013BBC  D027               	goto	l6799
 18324  013BBE  0E01               	movlw	1
 18325  013BC0  6E3D               	movwf	(btemp+11)^0,c
 18326                           
 18327                           ;stkvar	_b @ sp[(-13)+-4]
 18328  013BC2  50E1               	movf	fsr1l,w,c
 18329  013BC4  0FEF               	addlw	-17
 18330  013BC6  6ED9               	movwf	fsr2l,c
 18331  013BC8  50E2               	movf	fsr1h,w,c
 18332  013BCA  6EDA               	movwf	fsr2h,c
 18333  013BCC  0EFF               	movlw	255
 18334  013BCE  22DA               	addwfc	fsr2h,f,c
 18335  013BD0  283D               	incf	(btemp+11)^0,w,c
 18336  013BD2  52DE               	movf	postinc2,f,c
 18337  013BD4  D008               	goto	u5960
 18338  013BD6                     u5965:
 18339  013BD6  52DE               	movf	postinc2,f,c
 18340  013BD8  90D8               	bcf	status,0,c
 18341  013BDA  BEDC               	btfsc	preinc2,7,c
 18342  013BDC  80D8               	bsf	status,0,c
 18343  013BDE  32DD               	rrcf	postdec2,f,c
 18344  013BE0  32DD               	rrcf	postdec2,f,c
 18345  013BE2  32DD               	rrcf	postdec2,f,c
 18346  013BE4  32DE               	rrcf	postinc2,f,c
 18347  013BE6                     u5960:
 18348  013BE6  2EE8               	decfsz	wreg,f,c
 18349  013BE8  D7F6               	goto	u5965
 18350                           
 18351                           ;stkvar	_new_exp @ sp[(-13)+8]
 18352  013BEA  0EFB               	movlw	-5
 18353  013BEC  50E3               	movf	plusw1,w,c
 18354  013BEE  0F01               	addlw	1
 18355  013BF0  6E32               	movwf	btemp^0,c
 18356  013BF2  0EFB               	movlw	-5
 18357  013BF4  0060  F0CB  FFE3   	movff	btemp,plusw1
 18358  013BFA  6A32               	clrf	btemp^0,c
 18359  013BFC  0EFC               	movlw	-4
 18360  013BFE  50E3               	movf	plusw1,w,c
 18361  013C00  2032               	addwfc	btemp^0,w,c
 18362  013C02  6E32               	movwf	btemp^0,c
 18363  013C04  0EFC               	movlw	-4
 18364  013C06  0060  F0CB  FFE3   	movff	btemp,plusw1
 18365  013C0C                     l6799:
 18366                           
 18367                           ;stkvar	_new_exp @ sp[(-13)+8]
 18368  013C0C  0EFC               	movlw	-4
 18369  013C0E  BEE3               	btfsc	plusw1,7,c
 18370  013C10  D01B               	goto	l6805
 18371  013C12  0EFC               	movlw	-4
 18372  013C14  50E3               	movf	plusw1,w,c
 18373  013C16  E104               	bnz	u5970
 18374  013C18  0EFB               	movlw	-5
 18375  013C1A  28E3               	incf	plusw1,w,c
 18376  013C1C  A0D8               	btfss	status,0,c
 18377  013C1E  D014               	goto	l6805
 18378  013C20                     u5970:
 18379  013C20  0EFF               	movlw	255
 18380  013C22  6E3C               	movwf	(btemp+10)^0,c
 18381  013C24  0E00               	movlw	0
 18382  013C26  6E3D               	movwf	(btemp+11)^0,c
 18383                           
 18384                           ;stkvar	_new_exp @ sp[(-13)+8]
 18385  013C28  0EFB               	movlw	-5
 18386  013C2A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 18387  013C30  0EFC               	movlw	-4
 18388  013C32  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 18389                           
 18390                           ;stkvar	_b @ sp[(-13)+-4]
 18391  013C38  0EEF               	movlw	-17
 18392  013C3A  6AE3               	clrf	plusw1,c
 18393  013C3C  0EF0               	movlw	-16
 18394  013C3E  6AE3               	clrf	plusw1,c
 18395  013C40  0EF1               	movlw	-15
 18396  013C42  6AE3               	clrf	plusw1,c
 18397  013C44  0EF2               	movlw	-14
 18398  013C46  6AE3               	clrf	plusw1,c
 18399  013C48                     l6805:
 18400                           
 18401                           ;stkvar	_new_exp @ sp[(-13)+8]
 18402  013C48  0EFC               	movlw	-4
 18403  013C4A  BEE3               	btfsc	plusw1,7,c
 18404  013C4C  D007               	goto	u5980
 18405  013C4E  0EFC               	movlw	-4
 18406  013C50  50E3               	movf	plusw1,w,c
 18407  013C52  E112               	bnz	l6811
 18408  013C54  0EFB               	movlw	-5
 18409  013C56  04E3               	decf	plusw1,w,c
 18410  013C58  B0D8               	btfsc	status,0,c
 18411  013C5A  D00E               	goto	l6811
 18412  013C5C                     u5980:
 18413                           
 18414                           ;stkvar	_new_exp @ sp[(-13)+8]
 18415  013C5C  0EFB               	movlw	-5
 18416  013C5E  6AE3               	clrf	plusw1,c
 18417  013C60  0EFC               	movlw	-4
 18418  013C62  6AE3               	clrf	plusw1,c
 18419                           
 18420                           ;stkvar	_b @ sp[(-13)+-4]
 18421  013C64  0EEF               	movlw	-17
 18422  013C66  6AE3               	clrf	plusw1,c
 18423  013C68  0EF0               	movlw	-16
 18424  013C6A  6AE3               	clrf	plusw1,c
 18425  013C6C  0EF1               	movlw	-15
 18426  013C6E  6AE3               	clrf	plusw1,c
 18427  013C70  0EF2               	movlw	-14
 18428  013C72  6AE3               	clrf	plusw1,c
 18429                           
 18430                           ;stkvar	_sign @ sp[(-13)+12]
 18431  013C74  0EFF               	movlw	-1
 18432  013C76  6AE3               	clrf	plusw1,c
 18433  013C78                     l6811:
 18434                           
 18435                           ;stkvar	_new_exp @ sp[(-13)+8]
 18436                           ;stkvar	_bexp @ sp[(-13)+11]
 18437  013C78  0EFB               	movlw	-5
 18438  013C7A  006F FF8C  F032    	movff	plusw1,btemp
 18439  013C80  0EFE               	movlw	-2
 18440  013C82  0060  F0CB  FFE3   	movff	btemp,plusw1
 18441                           
 18442                           ;stkvar	_bexp @ sp[(-13)+11]
 18443  013C88  0EFE               	movlw	-2
 18444  013C8A  A0E3               	btfss	plusw1,0,c
 18445  013C8C  D009               	goto	l6817
 18446                           
 18447                           ;stkvar	_b @ sp[(-13)+-4]
 18448  013C8E  0EF1               	movlw	241
 18449  013C90  24E1               	addwf	fsr1l,w,c
 18450  013C92  6ED9               	movwf	fsr2l,c
 18451  013C94  0EFF               	movlw	255
 18452  013C96  20E2               	addwfc	fsr1h,w,c
 18453  013C98  6EDA               	movwf	fsr2h,c
 18454  013C9A  0E00               	movlw	0
 18455  013C9C  8EDB               	bsf	plusw2,7,c
 18456  013C9E  D008               	goto	l6819
 18457  013CA0                     l6817:
 18458                           
 18459                           ;stkvar	_b @ sp[(-13)+-4]
 18460  013CA0  0EF1               	movlw	241
 18461  013CA2  24E1               	addwf	fsr1l,w,c
 18462  013CA4  6ED9               	movwf	fsr2l,c
 18463  013CA6  0EFF               	movlw	255
 18464  013CA8  20E2               	addwfc	fsr1h,w,c
 18465  013CAA  6EDA               	movwf	fsr2h,c
 18466  013CAC  0E7F               	movlw	127
 18467  013CAE  16DF               	andwf	indf2,f,c
 18468  013CB0                     l6819:
 18469                           
 18470                           ;stkvar	_b @ sp[(-13)+-4]
 18471  013CB0  0EF2               	movlw	242
 18472  013CB2  24E1               	addwf	fsr1l,w,c
 18473  013CB4  6ED9               	movwf	fsr2l,c
 18474  013CB6  0EFF               	movlw	255
 18475  013CB8  20E2               	addwfc	fsr1h,w,c
 18476  013CBA  6EDA               	movwf	fsr2h,c
 18477                           
 18478                           ;stkvar	_bexp @ sp[(-13)+11]
 18479  013CBC  0EFE               	movlw	-2
 18480  013CBE  006F FF8C  F03D    	movff	plusw1,btemp+11
 18481  013CC4  90D8               	bcf	status,0,c
 18482  013CC6  303D               	rrcf	(btemp+11)^0,w,c
 18483  013CC8  6EDF               	movwf	indf2,c
 18484  013CCA  D644               	goto	l6717
 18485  013CCC                     l2626:
 18486                           
 18487                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 18488  013CCC  0EEB               	movlw	235
 18489  013CCE  26E1               	addwf	fsr1l,f,c
 18490  013CD0  0EFF               	movlw	255
 18491  013CD2  22E2               	addwfc	fsr1h,f,c
 18492  013CD4  0012               	return		;funcret
 18493  013CD6                     __end_of___fldiv:
 18494                           	opt callstack 0
 18495                           
 18496 ;; *************** function ___awmod *****************
 18497 ;; Defined at:
 18498 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 18499 ;; Parameters:    Size  Location     Type
 18500 ;;  dividend        2  [STACK] int 
 18501 ;;  divisor         2  [STACK] int 
 18502 ;; Auto vars:     Size  Location     Type
 18503 ;;  sign            1  [STACK] unsigned char 
 18504 ;;  counter         1  [STACK] unsigned char 
 18505 ;; Return value:  Size  Location     Type
 18506 ;;                  2  [STACK] int 
 18507 ;; Registers used:
 18508 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 18509 ;; Tracked objects:
 18510 ;;		On entry : 0/5
 18511 ;;		On exit  : 0/0
 18512 ;;		Unchanged: 0/0
 18513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18518 ;;Total ram usage:        0 bytes
 18519 ;; Hardware stack levels used:    1
 18520 ;; Hardware stack levels required when called:    6
 18521 ;; This function calls:
 18522 ;;		Nothing
 18523 ;; This function is called by:
 18524 ;;		_efgtoa
 18525 ;; This function uses a reentrant model
 18526 ;;
 18527                           
 18528                           	psect	text60
 18529  0170A2                     __ptext60:
 18530                           	opt callstack 0
 18531  0170A2                     ___awmod:
 18532                           	opt callstack 0
 18533                           
 18534                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18535  0170A2  52E6               	movf	postinc1,f,c
 18536  0170A4  52E6               	movf	postinc1,f,c
 18537                           
 18538                           ;stkvar	_sign @ sp[(-2)+0]
 18539                           
 18540                           ;incstack = 0
 18541  0170A6  0EFE               	movlw	-2
 18542  0170A8  6AE3               	clrf	plusw1,c
 18543                           
 18544                           ;stkvar	_dividend @ sp[(-2)+-2]
 18545  0170AA  0EFD               	movlw	-3
 18546  0170AC  AEE3               	btfss	plusw1,7,c
 18547  0170AE  D009               	goto	l7043
 18548                           
 18549                           ;stkvar	_dividend @ sp[(-2)+-2]
 18550                           ;stkvar	_dividend @ sp[(-2)+-2]
 18551  0170B0  0EFC               	movlw	-4
 18552  0170B2  6CE3               	negf	plusw1,c
 18553  0170B4  0EFD               	movlw	-3
 18554  0170B6  1EE3               	comf	plusw1,f,c
 18555  0170B8  B0D8               	btfsc	status,0,c
 18556  0170BA  2AE3               	incf	plusw1,f,c
 18557                           
 18558                           ;stkvar	_sign @ sp[(-2)+0]
 18559  0170BC  0EFE               	movlw	-2
 18560  0170BE  6AE3               	clrf	plusw1,c
 18561  0170C0  2AE3               	incf	plusw1,f,c
 18562  0170C2                     l7043:
 18563                           
 18564                           ;stkvar	_divisor @ sp[(-2)+-4]
 18565  0170C2  0EFB               	movlw	-5
 18566  0170C4  AEE3               	btfss	plusw1,7,c
 18567  0170C6  D006               	goto	l7047
 18568                           
 18569                           ;stkvar	_divisor @ sp[(-2)+-4]
 18570                           ;stkvar	_divisor @ sp[(-2)+-4]
 18571  0170C8  0EFA               	movlw	-6
 18572  0170CA  6CE3               	negf	plusw1,c
 18573  0170CC  0EFB               	movlw	-5
 18574  0170CE  1EE3               	comf	plusw1,f,c
 18575  0170D0  B0D8               	btfsc	status,0,c
 18576  0170D2  2AE3               	incf	plusw1,f,c
 18577  0170D4                     l7047:
 18578                           
 18579                           ;stkvar	_divisor @ sp[(-2)+-4]
 18580  0170D4  0EFA               	movlw	-6
 18581  0170D6  006F FF8C  F032    	movff	plusw1,btemp
 18582  0170DC  0EFB               	movlw	-5
 18583  0170DE  50E3               	movf	plusw1,w,c
 18584  0170E0  1032               	iorwf	btemp^0,w,c
 18585  0170E2  B4D8               	btfsc	status,2,c
 18586  0170E4  D053               	goto	u6340
 18587                           
 18588                           ;stkvar	_counter @ sp[(-2)+1]
 18589  0170E6  0EFF               	movlw	-1
 18590  0170E8  6AE3               	clrf	plusw1,c
 18591  0170EA  D012               	goto	L17
 18592  0170EC                     l7051:
 18593                           
 18594                           ;stkvar	_divisor @ sp[(-2)+-4]
 18595  0170EC  0EFA               	movlw	-6
 18596  0170EE  50E3               	movf	plusw1,w,c
 18597  0170F0  90D8               	bcf	status,0,c
 18598  0170F2  34E8               	rlcf	wreg,w,c
 18599  0170F4  6E32               	movwf	btemp^0,c
 18600  0170F6  0EFA               	movlw	-6
 18601  0170F8  0060  F0CB  FFE3   	movff	btemp,plusw1
 18602  0170FE  0EFB               	movlw	-5
 18603  017100  50E3               	movf	plusw1,w,c
 18604  017102  34E8               	rlcf	wreg,w,c
 18605  017104  6E32               	movwf	btemp^0,c
 18606  017106  0EFB               	movlw	-5
 18607  017108  0060  F0CB  FFE3   	movff	btemp,plusw1
 18608                           
 18609                           ;stkvar	_counter @ sp[(-2)+1]
 18610  01710E  0EFF               	movlw	-1
 18611  017110                     L17:
 18612  017110  2AE3               	incf	plusw1,f,c
 18613                           
 18614                           ;stkvar	_divisor @ sp[(-2)+-4]
 18615  017112  0EFB               	movlw	-5
 18616  017114  AEE3               	btfss	plusw1,7,c
 18617  017116  D7EA               	goto	l7051
 18618  017118                     u6320:
 18619                           
 18620                           ;stkvar	_divisor @ sp[(-2)+-4]
 18621  017118  0EFA               	movlw	-6
 18622  01711A  006F FF8C  F03C    	movff	plusw1,btemp+10
 18623  017120  0EFB               	movlw	-5
 18624  017122  006F FF8C  F03D    	movff	plusw1,btemp+11
 18625                           
 18626                           ;stkvar	_dividend @ sp[(-2)+-2]
 18627  017128  0EFC               	movlw	-4
 18628  01712A  006F FF8C  F03A    	movff	plusw1,btemp+8
 18629  017130  0EFD               	movlw	-3
 18630  017132  006F FF8C  F03B    	movff	plusw1,btemp+9
 18631  017138  503C               	movf	(btemp+10)^0,w,c
 18632  01713A  5C3A               	subwf	(btemp+8)^0,w,c
 18633  01713C  503D               	movf	(btemp+11)^0,w,c
 18634  01713E  583B               	subwfb	(btemp+9)^0,w,c
 18635  017140  A0D8               	btfss	status,0,c
 18636  017142  D014               	goto	l7061
 18637                           
 18638                           ;stkvar	_divisor @ sp[(-2)+-4]
 18639                           ;stkvar	_dividend @ sp[(-2)+-2]
 18640  017144  0EFC               	movlw	-4
 18641  017146  50E3               	movf	plusw1,w,c
 18642  017148  6E32               	movwf	btemp^0,c
 18643  01714A  0EFA               	movlw	-6
 18644  01714C  50E3               	movf	plusw1,w,c
 18645  01714E  5E32               	subwf	btemp^0,f,c
 18646  017150  0EFC               	movlw	-4
 18647  017152  0060  F0CB  FFE3   	movff	btemp,plusw1
 18648  017158  0EFD               	movlw	-3
 18649  01715A  50E3               	movf	plusw1,w,c
 18650  01715C  6E32               	movwf	btemp^0,c
 18651  01715E  0EFB               	movlw	-5
 18652  017160  50E3               	movf	plusw1,w,c
 18653  017162  5A32               	subwfb	btemp^0,f,c
 18654  017164  0EFD               	movlw	-3
 18655  017166  0060  F0CB  FFE3   	movff	btemp,plusw1
 18656  01716C                     l7061:
 18657                           
 18658                           ;stkvar	_divisor @ sp[(-2)+-4]
 18659  01716C  90D8               	bcf	status,0,c
 18660  01716E  0EFB               	movlw	-5
 18661  017170  32E3               	rrcf	plusw1,f,c
 18662  017172  0EFA               	movlw	-6
 18663  017174  32E3               	rrcf	plusw1,f,c
 18664                           
 18665                           ;stkvar	_counter @ sp[(-2)+1]
 18666  017176  0EFF               	movlw	-1
 18667  017178  50E3               	movf	plusw1,w,c
 18668  01717A  6E32               	movwf	btemp^0,c
 18669  01717C  0E01               	movlw	1
 18670  01717E  5E32               	subwf	btemp^0,f,c
 18671  017180  0EFF               	movlw	-1
 18672  017182  0060  F0CB  FFE3   	movff	btemp,plusw1
 18673  017188  A4D8               	btfss	status,2,c
 18674  01718A  D7C6               	goto	u6320
 18675  01718C                     u6340:
 18676                           
 18677                           ;stkvar	_sign @ sp[(-2)+0]
 18678  01718C  0EFE               	movlw	-2
 18679  01718E  50E3               	movf	plusw1,w,c
 18680  017190  B4D8               	btfsc	status,2,c
 18681  017192  D006               	goto	l7069
 18682                           
 18683                           ;stkvar	_dividend @ sp[(-2)+-2]
 18684                           ;stkvar	_dividend @ sp[(-2)+-2]
 18685  017194  0EFC               	movlw	-4
 18686  017196  6CE3               	negf	plusw1,c
 18687  017198  0EFD               	movlw	-3
 18688  01719A  1EE3               	comf	plusw1,f,c
 18689  01719C  B0D8               	btfsc	status,0,c
 18690  01719E  2AE3               	incf	plusw1,f,c
 18691  0171A0                     l7069:
 18692                           
 18693                           ;stkvar	_dividend @ sp[(-2)+-2]
 18694  0171A0  0EFC               	movlw	-4
 18695  0171A2  006F FF8C  F032    	movff	plusw1,btemp
 18696  0171A8  0EFD               	movlw	-3
 18697  0171AA  006F FF8C  F033    	movff	plusw1,btemp+1
 18698                           
 18699                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18700  0171B0  0EFA               	movlw	250
 18701  0171B2  26E1               	addwf	fsr1l,f,c
 18702  0171B4  0EFF               	movlw	255
 18703  0171B6  22E2               	addwfc	fsr1h,f,c
 18704  0171B8  0012               	return		;funcret
 18705  0171BA                     __end_of___awmod:
 18706                           	opt callstack 0
 18707                           
 18708 ;; *************** function ___awdiv *****************
 18709 ;; Defined at:
 18710 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 18711 ;; Parameters:    Size  Location     Type
 18712 ;;  dividend        2  [STACK] int 
 18713 ;;  divisor         2  [STACK] int 
 18714 ;; Auto vars:     Size  Location     Type
 18715 ;;  quotient        2  [STACK] int 
 18716 ;;  sign            1  [STACK] unsigned char 
 18717 ;;  counter         1  [STACK] unsigned char 
 18718 ;; Return value:  Size  Location     Type
 18719 ;;                  2  [STACK] int 
 18720 ;; Registers used:
 18721 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 18722 ;; Tracked objects:
 18723 ;;		On entry : 0/5
 18724 ;;		On exit  : 0/0
 18725 ;;		Unchanged: 0/0
 18726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18731 ;;Total ram usage:        0 bytes
 18732 ;; Hardware stack levels used:    1
 18733 ;; Hardware stack levels required when called:    6
 18734 ;; This function calls:
 18735 ;;		Nothing
 18736 ;; This function is called by:
 18737 ;;		_efgtoa
 18738 ;; This function uses a reentrant model
 18739 ;;
 18740                           
 18741                           	psect	text61
 18742  016A84                     __ptext61:
 18743                           	opt callstack 0
 18744  016A84                     ___awdiv:
 18745                           	opt callstack 0
 18746                           
 18747                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18748  016A84  52E6               	movf	postinc1,f,c
 18749  016A86  52E6               	movf	postinc1,f,c
 18750  016A88  52E6               	movf	postinc1,f,c
 18751  016A8A  52E6               	movf	postinc1,f,c
 18752                           
 18753                           ;stkvar	_sign @ sp[(-4)+2]
 18754                           
 18755                           ;incstack = 0
 18756  016A8C  0EFE               	movlw	-2
 18757  016A8E  6AE3               	clrf	plusw1,c
 18758                           
 18759                           ;stkvar	_divisor @ sp[(-4)+-4]
 18760  016A90  0EF9               	movlw	-7
 18761  016A92  AEE3               	btfss	plusw1,7,c
 18762  016A94  D009               	goto	l6997
 18763                           
 18764                           ;stkvar	_divisor @ sp[(-4)+-4]
 18765                           ;stkvar	_divisor @ sp[(-4)+-4]
 18766  016A96  0EF8               	movlw	-8
 18767  016A98  6CE3               	negf	plusw1,c
 18768  016A9A  0EF9               	movlw	-7
 18769  016A9C  1EE3               	comf	plusw1,f,c
 18770  016A9E  B0D8               	btfsc	status,0,c
 18771  016AA0  2AE3               	incf	plusw1,f,c
 18772                           
 18773                           ;stkvar	_sign @ sp[(-4)+2]
 18774  016AA2  0EFE               	movlw	-2
 18775  016AA4  6AE3               	clrf	plusw1,c
 18776  016AA6  2AE3               	incf	plusw1,f,c
 18777  016AA8                     l6997:
 18778                           
 18779                           ;stkvar	_dividend @ sp[(-4)+-2]
 18780  016AA8  0EFB               	movlw	-5
 18781  016AAA  AEE3               	btfss	plusw1,7,c
 18782  016AAC  D008               	goto	l7003
 18783                           
 18784                           ;stkvar	_dividend @ sp[(-4)+-2]
 18785                           ;stkvar	_dividend @ sp[(-4)+-2]
 18786  016AAE  0EFA               	movlw	-6
 18787  016AB0  6CE3               	negf	plusw1,c
 18788  016AB2  0EFB               	movlw	-5
 18789  016AB4  1EE3               	comf	plusw1,f,c
 18790  016AB6  B0D8               	btfsc	status,0,c
 18791  016AB8  2AE3               	incf	plusw1,f,c
 18792                           
 18793                           ;stkvar	_sign @ sp[(-4)+2]
 18794  016ABA  0EFE               	movlw	-2
 18795  016ABC  70E3               	btg	plusw1,0,c
 18796  016ABE                     l7003:
 18797                           
 18798                           ;stkvar	_quotient @ sp[(-4)+0]
 18799  016ABE  0EFC               	movlw	-4
 18800  016AC0  6AE3               	clrf	plusw1,c
 18801  016AC2  0EFD               	movlw	-3
 18802  016AC4  6AE3               	clrf	plusw1,c
 18803                           
 18804                           ;stkvar	_divisor @ sp[(-4)+-4]
 18805  016AC6  0EF8               	movlw	-8
 18806  016AC8  006F FF8C  F032    	movff	plusw1,btemp
 18807  016ACE  0EF9               	movlw	-7
 18808  016AD0  50E3               	movf	plusw1,w,c
 18809  016AD2  1032               	iorwf	btemp^0,w,c
 18810  016AD4  B4D8               	btfsc	status,2,c
 18811  016AD6  D066               	goto	u6270
 18812                           
 18813                           ;stkvar	_counter @ sp[(-4)+3]
 18814  016AD8  0EFF               	movlw	-1
 18815  016ADA  6AE3               	clrf	plusw1,c
 18816  016ADC  D012               	goto	L18
 18817  016ADE                     l7009:
 18818                           
 18819                           ;stkvar	_divisor @ sp[(-4)+-4]
 18820  016ADE  0EF8               	movlw	-8
 18821  016AE0  50E3               	movf	plusw1,w,c
 18822  016AE2  90D8               	bcf	status,0,c
 18823  016AE4  34E8               	rlcf	wreg,w,c
 18824  016AE6  6E32               	movwf	btemp^0,c
 18825  016AE8  0EF8               	movlw	-8
 18826  016AEA  0060  F0CB  FFE3   	movff	btemp,plusw1
 18827  016AF0  0EF9               	movlw	-7
 18828  016AF2  50E3               	movf	plusw1,w,c
 18829  016AF4  34E8               	rlcf	wreg,w,c
 18830  016AF6  6E32               	movwf	btemp^0,c
 18831  016AF8  0EF9               	movlw	-7
 18832  016AFA  0060  F0CB  FFE3   	movff	btemp,plusw1
 18833                           
 18834                           ;stkvar	_counter @ sp[(-4)+3]
 18835  016B00  0EFF               	movlw	-1
 18836  016B02                     L18:
 18837  016B02  2AE3               	incf	plusw1,f,c
 18838                           
 18839                           ;stkvar	_divisor @ sp[(-4)+-4]
 18840  016B04  0EF9               	movlw	-7
 18841  016B06  AEE3               	btfss	plusw1,7,c
 18842  016B08  D7EA               	goto	l7009
 18843  016B0A                     u6250:
 18844                           
 18845                           ;stkvar	_quotient @ sp[(-4)+0]
 18846  016B0A  0EFC               	movlw	-4
 18847  016B0C  50E3               	movf	plusw1,w,c
 18848  016B0E  90D8               	bcf	status,0,c
 18849  016B10  34E8               	rlcf	wreg,w,c
 18850  016B12  6E32               	movwf	btemp^0,c
 18851  016B14  0EFC               	movlw	-4
 18852  016B16  0060  F0CB  FFE3   	movff	btemp,plusw1
 18853  016B1C  0EFD               	movlw	-3
 18854  016B1E  50E3               	movf	plusw1,w,c
 18855  016B20  34E8               	rlcf	wreg,w,c
 18856  016B22  6E32               	movwf	btemp^0,c
 18857  016B24  0EFD               	movlw	-3
 18858  016B26  0060  F0CB  FFE3   	movff	btemp,plusw1
 18859                           
 18860                           ;stkvar	_divisor @ sp[(-4)+-4]
 18861  016B2C  0EF8               	movlw	-8
 18862  016B2E  006F FF8C  F03C    	movff	plusw1,btemp+10
 18863  016B34  0EF9               	movlw	-7
 18864  016B36  006F FF8C  F03D    	movff	plusw1,btemp+11
 18865                           
 18866                           ;stkvar	_dividend @ sp[(-4)+-2]
 18867  016B3C  0EFA               	movlw	-6
 18868  016B3E  006F FF8C  F03A    	movff	plusw1,btemp+8
 18869  016B44  0EFB               	movlw	-5
 18870  016B46  006F FF8C  F03B    	movff	plusw1,btemp+9
 18871  016B4C  503C               	movf	(btemp+10)^0,w,c
 18872  016B4E  5C3A               	subwf	(btemp+8)^0,w,c
 18873  016B50  503D               	movf	(btemp+11)^0,w,c
 18874  016B52  583B               	subwfb	(btemp+9)^0,w,c
 18875  016B54  A0D8               	btfss	status,0,c
 18876  016B56  D016               	goto	l7023
 18877                           
 18878                           ;stkvar	_divisor @ sp[(-4)+-4]
 18879                           ;stkvar	_dividend @ sp[(-4)+-2]
 18880  016B58  0EFA               	movlw	-6
 18881  016B5A  50E3               	movf	plusw1,w,c
 18882  016B5C  6E32               	movwf	btemp^0,c
 18883  016B5E  0EF8               	movlw	-8
 18884  016B60  50E3               	movf	plusw1,w,c
 18885  016B62  5E32               	subwf	btemp^0,f,c
 18886  016B64  0EFA               	movlw	-6
 18887  016B66  0060  F0CB  FFE3   	movff	btemp,plusw1
 18888  016B6C  0EFB               	movlw	-5
 18889  016B6E  50E3               	movf	plusw1,w,c
 18890  016B70  6E32               	movwf	btemp^0,c
 18891  016B72  0EF9               	movlw	-7
 18892  016B74  50E3               	movf	plusw1,w,c
 18893  016B76  5A32               	subwfb	btemp^0,f,c
 18894  016B78  0EFB               	movlw	-5
 18895  016B7A  0060  F0CB  FFE3   	movff	btemp,plusw1
 18896                           
 18897                           ;stkvar	_quotient @ sp[(-4)+0]
 18898  016B80  0EFC               	movlw	-4
 18899  016B82  80E3               	bsf	plusw1,0,c
 18900  016B84                     l7023:
 18901                           
 18902                           ;stkvar	_divisor @ sp[(-4)+-4]
 18903  016B84  90D8               	bcf	status,0,c
 18904  016B86  0EF9               	movlw	-7
 18905  016B88  32E3               	rrcf	plusw1,f,c
 18906  016B8A  0EF8               	movlw	-8
 18907  016B8C  32E3               	rrcf	plusw1,f,c
 18908                           
 18909                           ;stkvar	_counter @ sp[(-4)+3]
 18910  016B8E  0EFF               	movlw	-1
 18911  016B90  50E3               	movf	plusw1,w,c
 18912  016B92  6E32               	movwf	btemp^0,c
 18913  016B94  0E01               	movlw	1
 18914  016B96  5E32               	subwf	btemp^0,f,c
 18915  016B98  0EFF               	movlw	-1
 18916  016B9A  0060  F0CB  FFE3   	movff	btemp,plusw1
 18917  016BA0  A4D8               	btfss	status,2,c
 18918  016BA2  D7B3               	goto	u6250
 18919  016BA4                     u6270:
 18920                           
 18921                           ;stkvar	_sign @ sp[(-4)+2]
 18922  016BA4  0EFE               	movlw	-2
 18923  016BA6  50E3               	movf	plusw1,w,c
 18924  016BA8  B4D8               	btfsc	status,2,c
 18925  016BAA  D006               	goto	l7031
 18926                           
 18927                           ;stkvar	_quotient @ sp[(-4)+0]
 18928                           ;stkvar	_quotient @ sp[(-4)+0]
 18929  016BAC  0EFC               	movlw	-4
 18930  016BAE  6CE3               	negf	plusw1,c
 18931  016BB0  0EFD               	movlw	-3
 18932  016BB2  1EE3               	comf	plusw1,f,c
 18933  016BB4  B0D8               	btfsc	status,0,c
 18934  016BB6  2AE3               	incf	plusw1,f,c
 18935  016BB8                     l7031:
 18936                           
 18937                           ;stkvar	_quotient @ sp[(-4)+0]
 18938  016BB8  0EFC               	movlw	-4
 18939  016BBA  006F FF8C  F032    	movff	plusw1,btemp
 18940  016BC0  0EFD               	movlw	-3
 18941  016BC2  006F FF8C  F033    	movff	plusw1,btemp+1
 18942                           
 18943                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18944  016BC8  0EF8               	movlw	248
 18945  016BCA  26E1               	addwf	fsr1l,f,c
 18946  016BCC  0EFF               	movlw	255
 18947  016BCE  22E2               	addwfc	fsr1h,f,c
 18948  016BD0  0012               	return		;funcret
 18949  016BD2                     __end_of___awdiv:
 18950                           	opt callstack 0
 18951                           
 18952 ;; *************** function _dtoa *****************
 18953 ;; Defined at:
 18954 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18955 ;; Parameters:    Size  Location     Type
 18956 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18957 ;;		 -> f(6), NULL(0), 
 18958 ;;  d               8  [STACK] long long 
 18959 ;; Auto vars:     Size  Location     Type
 18960 ;;  n               8  [STACK] long long 
 18961 ;;  i               2  [STACK] int 
 18962 ;;  s               2  [STACK] int 
 18963 ;;  w               2  [STACK] int 
 18964 ;;  p               2  [STACK] int 
 18965 ;; Return value:  Size  Location     Type
 18966 ;;                  2  [STACK] int 
 18967 ;; Registers used:
 18968 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 18969 ;; Tracked objects:
 18970 ;;		On entry : 0/5
 18971 ;;		On exit  : 0/0
 18972 ;;		Unchanged: 0/0
 18973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18978 ;;Total ram usage:        0 bytes
 18979 ;; Hardware stack levels used:    1
 18980 ;; Hardware stack levels required when called:   11
 18981 ;; This function calls:
 18982 ;;		___aodiv
 18983 ;;		___aomod
 18984 ;;		_abs
 18985 ;;		_pad
 18986 ;; This function is called by:
 18987 ;;		_vfpfcnvrt
 18988 ;; This function uses a reentrant model
 18989 ;;
 18990                           
 18991                           	psect	text62
 18992  013CD6                     __ptext62:
 18993                           	opt callstack 0
 18994  013CD6                     _dtoa:
 18995                           	opt callstack 0
 18996                           
 18997                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 18998  013CD6  0E12               	movlw	18
 18999  013CD8  26E1               	addwf	fsr1l,f,c
 19000  013CDA  0E00               	movlw	0
 19001  013CDC  22E2               	addwfc	fsr1h,f,c
 19002                           
 19003                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 19004                           ;stkvar	_d @ sp[(-18)+-10]
 19005                           
 19006                           ;incstack = 0
 19007  013CDE  0EE4               	movlw	228
 19008  013CE0  24E1               	addwf	fsr1l,w,c
 19009  013CE2  6ED9               	movwf	fsr2l,c
 19010  013CE4  0EFF               	movlw	255
 19011  013CE6  20E2               	addwfc	fsr1h,w,c
 19012  013CE8  6EDA               	movwf	fsr2h,c
 19013                           
 19014                           ;stkvar	_n @ sp[(-18)+2]
 19015  013CEA  0E08               	movlw	8
 19016  013CEC  6E32               	movwf	btemp^0,c
 19017  013CEE  0EF0               	movlw	-16
 19018  013CF0                     us938999:
 19019  013CF0  006F FF7B FFE3     	movff	postinc2,plusw1
 19020  013CF6  28E8               	incf	wreg,w,c
 19021  013CF8  2E32               	decfsz	btemp^0,f,c
 19022  013CFA  D7FA               	bra	us938999
 19023                           
 19024                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 19025                           ;stkvar	_n @ sp[(-18)+2]
 19026  013CFC  0EF7               	movlw	-9
 19027  013CFE  AEE3               	btfss	plusw1,7,c
 19028  013D00  D002               	goto	u9390
 19029  013D02  0E01               	movlw	1
 19030  013D04  D001               	goto	u9400
 19031  013D06                     u9390:
 19032  013D06  0E00               	movlw	0
 19033  013D08                     u9400:
 19034  013D08  6E3C               	movwf	(btemp+10)^0,c
 19035  013D0A  6A3D               	clrf	(btemp+11)^0,c
 19036                           
 19037                           ;stkvar	_s @ sp[(-18)+12]
 19038  013D0C  0EFA               	movlw	-6
 19039  013D0E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 19040  013D14  0EFB               	movlw	-5
 19041  013D16  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19042                           
 19043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 19044                           ;stkvar	_s @ sp[(-18)+12]
 19045  013D1C  0EFA               	movlw	-6
 19046  013D1E  006F FF8C  F032    	movff	plusw1,btemp
 19047  013D24  0EFB               	movlw	-5
 19048  013D26  50E3               	movf	plusw1,w,c
 19049  013D28  1032               	iorwf	btemp^0,w,c
 19050  013D2A  B4D8               	btfsc	status,2,c
 19051  013D2C  D025               	goto	u9420
 19052                           
 19053                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 19054                           ;stkvar	_n @ sp[(-18)+2]
 19055                           ;stkvar	_n @ sp[(-18)+2]
 19056  013D2E  0EF0               	movlw	-16
 19057  013D30  6CE3               	negf	plusw1,c
 19058  013D32  0EF1               	movlw	-15
 19059  013D34  1EE3               	comf	plusw1,f,c
 19060  013D36  0EF2               	movlw	-14
 19061  013D38  1EE3               	comf	plusw1,f,c
 19062  013D3A  0EF3               	movlw	-13
 19063  013D3C  1EE3               	comf	plusw1,f,c
 19064  013D3E  0EF4               	movlw	-12
 19065  013D40  1EE3               	comf	plusw1,f,c
 19066  013D42  0EF5               	movlw	-11
 19067  013D44  1EE3               	comf	plusw1,f,c
 19068  013D46  0EF6               	movlw	-10
 19069  013D48  1EE3               	comf	plusw1,f,c
 19070  013D4A  0EF7               	movlw	-9
 19071  013D4C  1EE3               	comf	plusw1,f,c
 19072  013D4E  E314               	bnc	u9420
 19073  013D50  0EF1               	movlw	-15
 19074  013D52  2AE3               	incf	plusw1,f,c
 19075  013D54  E311               	bnc	u9420
 19076  013D56  0EF2               	movlw	-14
 19077  013D58  2AE3               	incf	plusw1,f,c
 19078  013D5A  E30E               	bnc	u9420
 19079  013D5C  0EF3               	movlw	-13
 19080  013D5E  2AE3               	incf	plusw1,f,c
 19081  013D60  E30B               	bnc	u9420
 19082  013D62  0EF4               	movlw	-12
 19083  013D64  2AE3               	incf	plusw1,f,c
 19084  013D66  E308               	bnc	u9420
 19085  013D68  0EF5               	movlw	-11
 19086  013D6A  2AE3               	incf	plusw1,f,c
 19087  013D6C  E305               	bnc	u9420
 19088  013D6E  0EF6               	movlw	-10
 19089  013D70  2AE3               	incf	plusw1,f,c
 19090  013D72  E302               	bnc	u9420
 19091  013D74  0EF7               	movlw	-9
 19092  013D76  2AE3               	incf	plusw1,f,c
 19093  013D78                     u9420:
 19094                           
 19095                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 19096  013D78  AE1E               	btfss	(_prec+1)^0,7,c
 19097                           
 19098                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 19099  013D7A  921F               	bcf	_flags^0,1,c
 19100                           
 19101                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 19102  013D7C  BE1E               	btfsc	(_prec+1)^0,7,c
 19103  013D7E  D005               	goto	u9440
 19104  013D80  501E               	movf	(_prec+1)^0,w,c
 19105  013D82  E110               	bnz	l9507
 19106  013D84  041D               	decf	_prec^0,w,c
 19107  013D86  B0D8               	btfsc	status,0,c
 19108  013D88  D00D               	goto	l9507
 19109  013D8A                     u9440:
 19110  013D8A  0E01               	movlw	1
 19111  013D8C  6E3C               	movwf	(btemp+10)^0,c
 19112  013D8E  0E00               	movlw	0
 19113  013D90  6E3D               	movwf	(btemp+11)^0,c
 19114                           
 19115                           ;stkvar	_p @ sp[(-18)+16]
 19116  013D92  0EFE               	movlw	-2
 19117  013D94  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 19118  013D9A  0EFF               	movlw	-1
 19119  013D9C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19120  013DA2  D008               	goto	l1807
 19121  013DA4                     l9507:
 19122                           
 19123                           ;stkvar	_p @ sp[(-18)+16]
 19124  013DA4  0EFE               	movlw	-2
 19125  013DA6  0060  F077  FFE3   	movff	_prec,plusw1
 19126  013DAC  0EFF               	movlw	-1
 19127  013DAE  0060  F07B  FFE3   	movff	_prec+1,plusw1
 19128  013DB4                     l1807:
 19129                           
 19130                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 19131                           ;stkvar	_w @ sp[(-18)+14]
 19132  013DB4  0EFC               	movlw	-4
 19133  013DB6  0060  F06F  FFE3   	movff	_width,plusw1
 19134  013DBC  0EFD               	movlw	-3
 19135  013DBE  0060  F073  FFE3   	movff	_width+1,plusw1
 19136                           
 19137                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 19138                           ;stkvar	_s @ sp[(-18)+12]
 19139  013DC4  0EFA               	movlw	-6
 19140  013DC6  006F FF8C  F032    	movff	plusw1,btemp
 19141  013DCC  0EFB               	movlw	-5
 19142  013DCE  50E3               	movf	plusw1,w,c
 19143  013DD0  1032               	iorwf	btemp^0,w,c
 19144  013DD2  A4D8               	btfss	status,2,c
 19145  013DD4  D002               	goto	u9460
 19146  013DD6  A41F               	btfss	_flags^0,2,c
 19147  013DD8  D00A               	goto	l9515
 19148  013DDA                     u9460:
 19149                           
 19150                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 19151                           ;stkvar	_w @ sp[(-18)+14]
 19152  013DDA  50E1               	movf	fsr1l,w,c
 19153  013DDC  0FFC               	addlw	-4
 19154  013DDE  6ED9               	movwf	fsr2l,c
 19155  013DE0  50E2               	movf	fsr1h,w,c
 19156  013DE2  6EDA               	movwf	fsr2h,c
 19157  013DE4  0EFF               	movlw	255
 19158  013DE6  22DA               	addwfc	fsr2h,f,c
 19159  013DE8  06DE               	decf	postinc2,f,c
 19160  013DEA  0E00               	movlw	0
 19161  013DEC  5ADD               	subwfb	postdec2,f,c
 19162  013DEE                     l9515:
 19163                           
 19164                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 19165  013DEE  0E4F               	movlw	79
 19166  013DF0  6E3C               	movwf	(btemp+10)^0,c
 19167  013DF2  0E00               	movlw	0
 19168  013DF4  6E3D               	movwf	(btemp+11)^0,c
 19169                           
 19170                           ;stkvar	_i @ sp[(-18)+10]
 19171  013DF6  0EF8               	movlw	-8
 19172  013DF8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 19173  013DFE  0EF9               	movlw	-7
 19174  013E00  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19175                           
 19176                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 19177  013E06  0102               	movlb	2	; () banked
 19178  013E08  6BFB               	clrf	(_dbuf+79)& (0+255),b
 19179                           
 19180                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19181  013E0A  D109               	goto	l9529
 19182  013E0C                     l9519:
 19183                           
 19184                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 19185                           ;stkvar	_i @ sp[(-18)+10]
 19186  013E0C  50E1               	movf	fsr1l,w,c
 19187  013E0E  0FF8               	addlw	-8
 19188  013E10  6ED9               	movwf	fsr2l,c
 19189  013E12  50E2               	movf	fsr1h,w,c
 19190  013E14  6EDA               	movwf	fsr2h,c
 19191  013E16  0EFF               	movlw	255
 19192  013E18  22DA               	addwfc	fsr2h,f,c
 19193  013E1A  06DE               	decf	postinc2,f,c
 19194  013E1C  0E00               	movlw	0
 19195  013E1E  5ADD               	subwfb	postdec2,f,c
 19196                           
 19197                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 19198  013E20  0E0A               	movlw	10
 19199  013E22  6EE6               	movwf	postinc1,c
 19200  013E24  0E00               	movlw	0
 19201  013E26  6EE6               	movwf	postinc1,c
 19202  013E28  0E00               	movlw	0
 19203  013E2A  6EE6               	movwf	postinc1,c
 19204  013E2C  0E00               	movlw	0
 19205  013E2E  6EE6               	movwf	postinc1,c
 19206  013E30  0E00               	movlw	0
 19207  013E32  6EE6               	movwf	postinc1,c
 19208  013E34  0E00               	movlw	0
 19209  013E36  6EE6               	movwf	postinc1,c
 19210  013E38  0E00               	movlw	0
 19211  013E3A  6EE6               	movwf	postinc1,c
 19212  013E3C  0E00               	movlw	0
 19213  013E3E  6EE6               	movwf	postinc1,c
 19214                           
 19215                           ;stkvar	_n @ sp[(-26)+2]
 19216  013E40  50E1               	movf	fsr1l,w,c
 19217  013E42  0FE8               	addlw	-24
 19218  013E44  6ED9               	movwf	fsr2l,c
 19219  013E46  50E2               	movf	fsr1h,w,c
 19220  013E48  6EDA               	movwf	fsr2h,c
 19221  013E4A  0EFF               	movlw	255
 19222  013E4C  22DA               	addwfc	fsr2h,f,c
 19223  013E4E  006F FF7B FFE6     	movff	postinc2,postinc1
 19224  013E54  006F FF7B FFE6     	movff	postinc2,postinc1
 19225  013E5A  006F FF7B FFE6     	movff	postinc2,postinc1
 19226  013E60  006F FF7B FFE6     	movff	postinc2,postinc1
 19227  013E66  006F FF7B FFE6     	movff	postinc2,postinc1
 19228  013E6C  006F FF7B FFE6     	movff	postinc2,postinc1
 19229  013E72  006F FF7B FFE6     	movff	postinc2,postinc1
 19230  013E78  006F FF7B FFE6     	movff	postinc2,postinc1
 19231  013E7E  EC32  F0AD         	call	___aomod	;wreg free
 19232  013E82  52E5               	movf	postdec1,f,c
 19233  013E84  006F FF9C  F049    	movff	indf1,btemp+23
 19234  013E8A  52E5               	movf	postdec1,f,c
 19235  013E8C  006F FF9C  F048    	movff	indf1,btemp+22
 19236  013E92  52E5               	movf	postdec1,f,c
 19237  013E94  006F FF9C  F047    	movff	indf1,btemp+21
 19238  013E9A  52E5               	movf	postdec1,f,c
 19239  013E9C  006F FF9C  F046    	movff	indf1,btemp+20
 19240  013EA2  52E5               	movf	postdec1,f,c
 19241  013EA4  006F FF9C  F045    	movff	indf1,btemp+19
 19242  013EAA  52E5               	movf	postdec1,f,c
 19243  013EAC  006F FF9C  F044    	movff	indf1,btemp+18
 19244  013EB2  52E5               	movf	postdec1,f,c
 19245  013EB4  006F FF9C  F043    	movff	indf1,btemp+17
 19246  013EBA  52E5               	movf	postdec1,f,c
 19247  013EBC  006F FF9C  F042    	movff	indf1,btemp+16
 19248  013EC2  0EF8               	movlw	248
 19249  013EC4  26E1               	addwf	fsr1l,f,c
 19250  013EC6  0EFF               	movlw	255
 19251  013EC8  22E2               	addwfc	fsr1h,f,c
 19252  013ECA  0060  F108  F03C   	movff	btemp+16,btemp+10
 19253  013ED0  0060  F10C  F03D   	movff	btemp+17,btemp+11
 19254  013ED6  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 19255  013EDC  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 19256  013EE2  ECDF  F0C2         	call	_abs	;wreg free
 19257  013EE6  0E30               	movlw	48
 19258  013EE8  2632               	addwf	btemp^0,f,c
 19259                           
 19260                           ;stkvar	_i @ sp[(-18)+10]
 19261  013EEA  0EF8               	movlw	-8
 19262  013EEC  006F FF8C  F03C    	movff	plusw1,btemp+10
 19263  013EF2  0EF9               	movlw	-7
 19264  013EF4  006F FF8C  F03D    	movff	plusw1,btemp+11
 19265  013EFA  0EAC               	movlw	low _dbuf
 19266  013EFC  243C               	addwf	(btemp+10)^0,w,c
 19267  013EFE  6ED9               	movwf	fsr2l,c
 19268  013F00  0E02               	movlw	high _dbuf
 19269  013F02  203D               	addwfc	(btemp+11)^0,w,c
 19270  013F04  6EDA               	movwf	fsr2h,c
 19271  013F06  0060  F0CB  FFDF   	movff	btemp,indf2
 19272                           
 19273                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 19274                           ;stkvar	_p @ sp[(-18)+16]
 19275  013F0C  50E1               	movf	fsr1l,w,c
 19276  013F0E  0FFE               	addlw	-2
 19277  013F10  6ED9               	movwf	fsr2l,c
 19278  013F12  50E2               	movf	fsr1h,w,c
 19279  013F14  6EDA               	movwf	fsr2h,c
 19280  013F16  0EFF               	movlw	255
 19281  013F18  22DA               	addwfc	fsr2h,f,c
 19282  013F1A  06DE               	decf	postinc2,f,c
 19283  013F1C  0E00               	movlw	0
 19284  013F1E  5ADD               	subwfb	postdec2,f,c
 19285                           
 19286                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 19287                           ;stkvar	_w @ sp[(-18)+14]
 19288  013F20  50E1               	movf	fsr1l,w,c
 19289  013F22  0FFC               	addlw	-4
 19290  013F24  6ED9               	movwf	fsr2l,c
 19291  013F26  50E2               	movf	fsr1h,w,c
 19292  013F28  6EDA               	movwf	fsr2h,c
 19293  013F2A  0EFF               	movlw	255
 19294  013F2C  22DA               	addwfc	fsr2h,f,c
 19295  013F2E  06DE               	decf	postinc2,f,c
 19296  013F30  0E00               	movlw	0
 19297  013F32  5ADD               	subwfb	postdec2,f,c
 19298                           
 19299                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 19300  013F34  0E0A               	movlw	10
 19301  013F36  6EE6               	movwf	postinc1,c
 19302  013F38  0E00               	movlw	0
 19303  013F3A  6EE6               	movwf	postinc1,c
 19304  013F3C  0E00               	movlw	0
 19305  013F3E  6EE6               	movwf	postinc1,c
 19306  013F40  0E00               	movlw	0
 19307  013F42  6EE6               	movwf	postinc1,c
 19308  013F44  0E00               	movlw	0
 19309  013F46  6EE6               	movwf	postinc1,c
 19310  013F48  0E00               	movlw	0
 19311  013F4A  6EE6               	movwf	postinc1,c
 19312  013F4C  0E00               	movlw	0
 19313  013F4E  6EE6               	movwf	postinc1,c
 19314  013F50  0E00               	movlw	0
 19315  013F52  6EE6               	movwf	postinc1,c
 19316                           
 19317                           ;stkvar	_n @ sp[(-26)+2]
 19318  013F54  50E1               	movf	fsr1l,w,c
 19319  013F56  0FE8               	addlw	-24
 19320  013F58  6ED9               	movwf	fsr2l,c
 19321  013F5A  50E2               	movf	fsr1h,w,c
 19322  013F5C  6EDA               	movwf	fsr2h,c
 19323  013F5E  0EFF               	movlw	255
 19324  013F60  22DA               	addwfc	fsr2h,f,c
 19325  013F62  006F FF7B FFE6     	movff	postinc2,postinc1
 19326  013F68  006F FF7B FFE6     	movff	postinc2,postinc1
 19327  013F6E  006F FF7B FFE6     	movff	postinc2,postinc1
 19328  013F74  006F FF7B FFE6     	movff	postinc2,postinc1
 19329  013F7A  006F FF7B FFE6     	movff	postinc2,postinc1
 19330  013F80  006F FF7B FFE6     	movff	postinc2,postinc1
 19331  013F86  006F FF7B FFE6     	movff	postinc2,postinc1
 19332  013F8C  006F FF7B FFE6     	movff	postinc2,postinc1
 19333  013F92  ECB8  F0AA         	call	___aodiv	;wreg free
 19334  013F96  52E5               	movf	postdec1,f,c
 19335  013F98  006F FF9C  F049    	movff	indf1,btemp+23
 19336  013F9E  52E5               	movf	postdec1,f,c
 19337  013FA0  006F FF9C  F048    	movff	indf1,btemp+22
 19338  013FA6  52E5               	movf	postdec1,f,c
 19339  013FA8  006F FF9C  F047    	movff	indf1,btemp+21
 19340  013FAE  52E5               	movf	postdec1,f,c
 19341  013FB0  006F FF9C  F046    	movff	indf1,btemp+20
 19342  013FB6  52E5               	movf	postdec1,f,c
 19343  013FB8  006F FF9C  F045    	movff	indf1,btemp+19
 19344  013FBE  52E5               	movf	postdec1,f,c
 19345  013FC0  006F FF9C  F044    	movff	indf1,btemp+18
 19346  013FC6  52E5               	movf	postdec1,f,c
 19347  013FC8  006F FF9C  F043    	movff	indf1,btemp+17
 19348  013FCE  52E5               	movf	postdec1,f,c
 19349  013FD0  006F FF9C  F042    	movff	indf1,btemp+16
 19350  013FD6  0EF8               	movlw	248
 19351  013FD8  26E1               	addwf	fsr1l,f,c
 19352  013FDA  0EFF               	movlw	255
 19353  013FDC  22E2               	addwfc	fsr1h,f,c
 19354                           
 19355                           ;stkvar	_n @ sp[(-18)+2]
 19356  013FDE  0EF0               	movlw	-16
 19357  013FE0  0060  F10B  FFE3   	movff	btemp+16,plusw1
 19358  013FE6  0EF1               	movlw	-15
 19359  013FE8  0060  F10F  FFE3   	movff	btemp+17,plusw1
 19360  013FEE  0EF2               	movlw	-14
 19361  013FF0  0060  F113  FFE3   	movff	btemp+18,plusw1
 19362  013FF6  0EF3               	movlw	-13
 19363  013FF8  0060  F117  FFE3   	movff	btemp+19,plusw1
 19364  013FFE  0EF4               	movlw	-12
 19365  014000  0060  F11B  FFE3   	movff	btemp+20,plusw1
 19366  014006  0EF5               	movlw	-11
 19367  014008  0060  F11F  FFE3   	movff	btemp+21,plusw1
 19368  01400E  0EF6               	movlw	-10
 19369  014010  0060  F123  FFE3   	movff	btemp+22,plusw1
 19370  014016  0EF7               	movlw	-9
 19371  014018  0060  F127  FFE3   	movff	btemp+23,plusw1
 19372  01401E                     l9529:
 19373                           
 19374                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19375                           ;stkvar	_i @ sp[(-18)+10]
 19376  01401E  0EF9               	movlw	-7
 19377  014020  BEE3               	btfsc	plusw1,7,c
 19378  014022  D036               	goto	u9510
 19379  014024  0EF9               	movlw	-7
 19380  014026  50E3               	movf	plusw1,w,c
 19381  014028  E104               	bnz	u9470
 19382  01402A  0EF8               	movlw	-8
 19383  01402C  04E3               	decf	plusw1,w,c
 19384  01402E  A0D8               	btfss	status,0,c
 19385  014030  D02F               	goto	u9510
 19386  014032                     u9470:
 19387                           
 19388                           ;stkvar	_n @ sp[(-18)+2]
 19389  014032  0EF0               	movlw	-16
 19390  014034  50E3               	movf	plusw1,w,c
 19391  014036  E115               	bnz	u9481
 19392  014038  0EF1               	movlw	-15
 19393  01403A  50E3               	movf	plusw1,w,c
 19394  01403C  E112               	bnz	u9481
 19395  01403E  0EF2               	movlw	-14
 19396  014040  50E3               	movf	plusw1,w,c
 19397  014042  E10F               	bnz	u9481
 19398  014044  0EF3               	movlw	-13
 19399  014046  50E3               	movf	plusw1,w,c
 19400  014048  E10C               	bnz	u9481
 19401  01404A  0EF4               	movlw	-12
 19402  01404C  50E3               	movf	plusw1,w,c
 19403  01404E  E109               	bnz	u9481
 19404  014050  0EF5               	movlw	-11
 19405  014052  50E3               	movf	plusw1,w,c
 19406  014054  E106               	bnz	u9481
 19407  014056  0EF6               	movlw	-10
 19408  014058  50E3               	movf	plusw1,w,c
 19409  01405A  E103               	bnz	u9481
 19410  01405C  0EF7               	movlw	-9
 19411  01405E  50E3               	movf	plusw1,w,c
 19412  014060  A4D8               	btfss	status,2,c
 19413  014062                     u9481:
 19414  014062  D6D4               	goto	l9519
 19415                           
 19416                           ;stkvar	_p @ sp[(-18)+16]
 19417  014064  0EFF               	movlw	-1
 19418  014066  BEE3               	btfsc	plusw1,7,c
 19419  014068  D007               	goto	u9490
 19420  01406A  0EFF               	movlw	-1
 19421  01406C  50E3               	movf	plusw1,w,c
 19422  01406E  E103               	bnz	u9491
 19423  014070  0EFE               	movlw	-2
 19424  014072  04E3               	decf	plusw1,w,c
 19425  014074  B0D8               	btfsc	status,0,c
 19426  014076                     u9491:
 19427  014076  D6CA               	goto	l9519
 19428  014078                     u9490:
 19429                           
 19430                           ;stkvar	_w @ sp[(-18)+14]
 19431  014078  0EFD               	movlw	-3
 19432  01407A  BEE3               	btfsc	plusw1,7,c
 19433  01407C  D009               	goto	u9510
 19434  01407E  0EFD               	movlw	-3
 19435  014080  50E3               	movf	plusw1,w,c
 19436  014082  E104               	bnz	u9500
 19437  014084  0EFC               	movlw	-4
 19438  014086  04E3               	decf	plusw1,w,c
 19439  014088  A0D8               	btfss	status,0,c
 19440  01408A  D002               	goto	u9510
 19441  01408C                     u9500:
 19442  01408C  B21F               	btfsc	_flags^0,1,c
 19443  01408E  D6BE               	goto	l9519
 19444  014090                     u9510:
 19445                           
 19446                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 19447                           ;stkvar	_s @ sp[(-18)+12]
 19448  014090  0EFA               	movlw	-6
 19449  014092  006F FF8C  F032    	movff	plusw1,btemp
 19450  014098  0EFB               	movlw	-5
 19451  01409A  50E3               	movf	plusw1,w,c
 19452  01409C  1032               	iorwf	btemp^0,w,c
 19453  01409E  A4D8               	btfss	status,2,c
 19454  0140A0  D002               	goto	u9530
 19455  0140A2  A41F               	btfss	_flags^0,2,c
 19456  0140A4  D033               	goto	l9553
 19457  0140A6                     u9530:
 19458                           
 19459                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 19460                           ;stkvar	_i @ sp[(-18)+10]
 19461  0140A6  50E1               	movf	fsr1l,w,c
 19462  0140A8  0FF8               	addlw	-8
 19463  0140AA  6ED9               	movwf	fsr2l,c
 19464  0140AC  50E2               	movf	fsr1h,w,c
 19465  0140AE  6EDA               	movwf	fsr2h,c
 19466  0140B0  0EFF               	movlw	255
 19467  0140B2  22DA               	addwfc	fsr2h,f,c
 19468  0140B4  06DE               	decf	postinc2,f,c
 19469  0140B6  0E00               	movlw	0
 19470  0140B8  5ADD               	subwfb	postdec2,f,c
 19471                           
 19472                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 19473                           ;stkvar	_s @ sp[(-18)+12]
 19474  0140BA  0EFA               	movlw	-6
 19475  0140BC  006F FF8C  F032    	movff	plusw1,btemp
 19476  0140C2  0EFB               	movlw	-5
 19477  0140C4  50E3               	movf	plusw1,w,c
 19478  0140C6  1032               	iorwf	btemp^0,w,c
 19479  0140C8  A4D8               	btfss	status,2,c
 19480  0140CA  D002               	goto	l9549
 19481  0140CC  0E2B               	movlw	43
 19482  0140CE  D001               	goto	L19
 19483  0140D0                     l9549:
 19484  0140D0  0E2D               	movlw	45
 19485  0140D2                     L19:
 19486  0140D2  6E3C               	movwf	(btemp+10)^0,c
 19487  0140D4  0E00               	movlw	0
 19488  0140D6  6E3D               	movwf	(btemp+11)^0,c
 19489                           
 19490                           ;stkvar	_dtoa$4351 @ sp[(-18)+0]
 19491  0140D8  0EEE               	movlw	-18
 19492  0140DA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 19493  0140E0  0EEF               	movlw	-17
 19494  0140E2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19495                           
 19496                           ;stkvar	_dtoa$4351 @ sp[(-18)+0]
 19497                           ;stkvar	_i @ sp[(-18)+10]
 19498  0140E8  0EF8               	movlw	-8
 19499  0140EA  006F FF8C  F03C    	movff	plusw1,btemp+10
 19500  0140F0  0EF9               	movlw	-7
 19501  0140F2  006F FF8C  F03D    	movff	plusw1,btemp+11
 19502  0140F8  0EAC               	movlw	low _dbuf
 19503  0140FA  243C               	addwf	(btemp+10)^0,w,c
 19504  0140FC  6ED9               	movwf	fsr2l,c
 19505  0140FE  0E02               	movlw	high _dbuf
 19506  014100  203D               	addwfc	(btemp+11)^0,w,c
 19507  014102  6EDA               	movwf	fsr2h,c
 19508  014104  0EEE               	movlw	-18
 19509  014106  006F FF8F FFDF     	movff	plusw1,indf2
 19510  01410C                     l9553:
 19511                           
 19512                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 19513                           ;stkvar	_w @ sp[(-18)+14]
 19514  01410C  0EFC               	movlw	-4
 19515  01410E  006F FF8F FFE6     	movff	plusw1,postinc1
 19516  014114  006F FF8F FFE6     	movff	plusw1,postinc1
 19517                           
 19518                           ;stkvar	_i @ sp[(-20)+10]
 19519  01411A  0EAC               	movlw	low _dbuf
 19520  01411C  6E3C               	movwf	(btemp+10)^0,c
 19521  01411E  0E02               	movlw	high _dbuf
 19522  014120  6E3D               	movwf	(btemp+11)^0,c
 19523  014122  0EF6               	movlw	-10
 19524  014124  50E3               	movf	plusw1,w,c
 19525  014126  263C               	addwf	(btemp+10)^0,f,c
 19526  014128  0EF7               	movlw	-9
 19527  01412A  50E3               	movf	plusw1,w,c
 19528  01412C  223D               	addwfc	(btemp+11)^0,f,c
 19529  01412E  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 19530  014134  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 19531                           
 19532                           ;stkvar	_fp @ sp[(-22)+-2]
 19533  01413A  0EE8               	movlw	-24
 19534  01413C  006F FF8F FFE6     	movff	plusw1,postinc1
 19535  014142  006F FF8F FFE6     	movff	plusw1,postinc1
 19536  014148  ECDD  F0B8         	call	_pad	;wreg free
 19537                           
 19538                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 19539  01414C  0EE4               	movlw	228
 19540  01414E  26E1               	addwf	fsr1l,f,c
 19541  014150  0EFF               	movlw	255
 19542  014152  22E2               	addwfc	fsr1h,f,c
 19543  014154  0012               	return		;funcret
 19544  014156                     __end_of_dtoa:
 19545                           	opt callstack 0
 19546                           
 19547 ;; *************** function _abs *****************
 19548 ;; Defined at:
 19549 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 19550 ;; Parameters:    Size  Location     Type
 19551 ;;  a               2  [STACK] int 
 19552 ;; Auto vars:     Size  Location     Type
 19553 ;;		None
 19554 ;; Return value:  Size  Location     Type
 19555 ;;                  2  [STACK] int 
 19556 ;; Registers used:
 19557 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 19558 ;; Tracked objects:
 19559 ;;		On entry : 0/2
 19560 ;;		On exit  : 0/0
 19561 ;;		Unchanged: 0/0
 19562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19567 ;;Total ram usage:        0 bytes
 19568 ;; Hardware stack levels used:    1
 19569 ;; Hardware stack levels required when called:    6
 19570 ;; This function calls:
 19571 ;;		Nothing
 19572 ;; This function is called by:
 19573 ;;		_dtoa
 19574 ;; This function uses a reentrant model
 19575 ;;
 19576                           
 19577                           	psect	text63
 19578  0185BE                     __ptext63:
 19579                           	opt callstack 0
 19580  0185BE                     _abs:
 19581                           	opt callstack 17
 19582                           
 19583                           ;stkvar	_a @ sp[(0)+-2]
 19584                           
 19585                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19586                           ;incstack = 0
 19587  0185BE  0EFF               	movlw	-1
 19588  0185C0  BEE3               	btfsc	plusw1,7,c
 19589  0185C2  D007               	goto	u5230
 19590  0185C4  0EFF               	movlw	-1
 19591  0185C6  50E3               	movf	plusw1,w,c
 19592  0185C8  E112               	bnz	l6485
 19593  0185CA  0EFE               	movlw	-2
 19594  0185CC  04E3               	decf	plusw1,w,c
 19595  0185CE  B0D8               	btfsc	status,0,c
 19596  0185D0  D00E               	goto	l6485
 19597  0185D2                     u5230:
 19598                           
 19599                           ;stkvar	_a @ sp[(0)+-2]
 19600  0185D2  0EFE               	movlw	-2
 19601  0185D4  006F FF8C  F032    	movff	plusw1,btemp
 19602  0185DA  1E32               	comf	btemp^0,f,c
 19603  0185DC  0EFF               	movlw	-1
 19604  0185DE  006F FF8C  F033    	movff	plusw1,btemp+1
 19605  0185E4  1E33               	comf	(btemp+1)^0,f,c
 19606  0185E6  2A32               	incf	btemp^0,f,c
 19607  0185E8  B4D8               	btfsc	status,2,c
 19608  0185EA  2A33               	incf	(btemp+1)^0,f,c
 19609  0185EC  D008               	goto	l2733
 19610  0185EE                     l6485:
 19611                           
 19612                           ;stkvar	_a @ sp[(0)+-2]
 19613  0185EE  0EFE               	movlw	-2
 19614  0185F0  006F FF8C  F032    	movff	plusw1,btemp
 19615  0185F6  0EFF               	movlw	-1
 19616  0185F8  006F FF8C  F033    	movff	plusw1,btemp+1
 19617  0185FE                     l2733:
 19618                           
 19619                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 19620  0185FE  52E5               	movf	postdec1,f,c
 19621  018600  52E5               	movf	postdec1,f,c
 19622  018602  0012               	return		;funcret
 19623  018604                     __end_of_abs:
 19624                           	opt callstack 0
 19625                           
 19626 ;; *************** function ___aomod *****************
 19627 ;; Defined at:
 19628 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 19629 ;; Parameters:    Size  Location     Type
 19630 ;;  dividend        8  [STACK] long long 
 19631 ;;  divisor         8  [STACK] long long 
 19632 ;; Auto vars:     Size  Location     Type
 19633 ;;  sign            1  [STACK] unsigned char 
 19634 ;;  counter         1  [STACK] unsigned char 
 19635 ;; Return value:  Size  Location     Type
 19636 ;;                  8  [STACK] long long 
 19637 ;; Registers used:
 19638 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 19639 ;; Tracked objects:
 19640 ;;		On entry : 0/2
 19641 ;;		On exit  : 0/0
 19642 ;;		Unchanged: 0/0
 19643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19648 ;;Total ram usage:        0 bytes
 19649 ;; Hardware stack levels used:    1
 19650 ;; Hardware stack levels required when called:    6
 19651 ;; This function calls:
 19652 ;;		Nothing
 19653 ;; This function is called by:
 19654 ;;		_dtoa
 19655 ;; This function uses a reentrant model
 19656 ;;
 19657                           
 19658                           	psect	text64
 19659  015A64                     __ptext64:
 19660                           	opt callstack 0
 19661  015A64                     ___aomod:
 19662                           	opt callstack 0
 19663                           
 19664                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 19665  015A64  52E6               	movf	postinc1,f,c
 19666  015A66  52E6               	movf	postinc1,f,c
 19667                           
 19668                           ;stkvar	_sign @ sp[(-2)+0]
 19669                           
 19670                           ;incstack = 0
 19671  015A68  0EFE               	movlw	-2
 19672  015A6A  6AE3               	clrf	plusw1,c
 19673                           
 19674                           ;stkvar	_dividend @ sp[(-2)+-8]
 19675  015A6C  0EFD               	movlw	-3
 19676  015A6E  AEE3               	btfss	plusw1,7,c
 19677  015A70  D028               	goto	l6643
 19678                           
 19679                           ;stkvar	_dividend @ sp[(-2)+-8]
 19680                           ;stkvar	_dividend @ sp[(-2)+-8]
 19681  015A72  0EF6               	movlw	-10
 19682  015A74  6CE3               	negf	plusw1,c
 19683  015A76  0EF7               	movlw	-9
 19684  015A78  1EE3               	comf	plusw1,f,c
 19685  015A7A  0EF8               	movlw	-8
 19686  015A7C  1EE3               	comf	plusw1,f,c
 19687  015A7E  0EF9               	movlw	-7
 19688  015A80  1EE3               	comf	plusw1,f,c
 19689  015A82  0EFA               	movlw	-6
 19690  015A84  1EE3               	comf	plusw1,f,c
 19691  015A86  0EFB               	movlw	-5
 19692  015A88  1EE3               	comf	plusw1,f,c
 19693  015A8A  0EFC               	movlw	-4
 19694  015A8C  1EE3               	comf	plusw1,f,c
 19695  015A8E  0EFD               	movlw	-3
 19696  015A90  1EE3               	comf	plusw1,f,c
 19697  015A92  E314               	bnc	u5660
 19698  015A94  0EF7               	movlw	-9
 19699  015A96  2AE3               	incf	plusw1,f,c
 19700  015A98  E311               	bnc	u5660
 19701  015A9A  0EF8               	movlw	-8
 19702  015A9C  2AE3               	incf	plusw1,f,c
 19703  015A9E  E30E               	bnc	u5660
 19704  015AA0  0EF9               	movlw	-7
 19705  015AA2  2AE3               	incf	plusw1,f,c
 19706  015AA4  E30B               	bnc	u5660
 19707  015AA6  0EFA               	movlw	-6
 19708  015AA8  2AE3               	incf	plusw1,f,c
 19709  015AAA  E308               	bnc	u5660
 19710  015AAC  0EFB               	movlw	-5
 19711  015AAE  2AE3               	incf	plusw1,f,c
 19712  015AB0  E305               	bnc	u5660
 19713  015AB2  0EFC               	movlw	-4
 19714  015AB4  2AE3               	incf	plusw1,f,c
 19715  015AB6  E302               	bnc	u5660
 19716  015AB8  0EFD               	movlw	-3
 19717  015ABA  2AE3               	incf	plusw1,f,c
 19718  015ABC                     u5660:
 19719                           
 19720                           ;stkvar	_sign @ sp[(-2)+0]
 19721  015ABC  0EFE               	movlw	-2
 19722  015ABE  6AE3               	clrf	plusw1,c
 19723  015AC0  2AE3               	incf	plusw1,f,c
 19724  015AC2                     l6643:
 19725                           
 19726                           ;stkvar	_divisor @ sp[(-2)+-16]
 19727  015AC2  0EF5               	movlw	-11
 19728  015AC4  AEE3               	btfss	plusw1,7,c
 19729  015AC6  D025               	goto	u5680
 19730                           
 19731                           ;stkvar	_divisor @ sp[(-2)+-16]
 19732                           ;stkvar	_divisor @ sp[(-2)+-16]
 19733  015AC8  0EEE               	movlw	-18
 19734  015ACA  6CE3               	negf	plusw1,c
 19735  015ACC  0EEF               	movlw	-17
 19736  015ACE  1EE3               	comf	plusw1,f,c
 19737  015AD0  0EF0               	movlw	-16
 19738  015AD2  1EE3               	comf	plusw1,f,c
 19739  015AD4  0EF1               	movlw	-15
 19740  015AD6  1EE3               	comf	plusw1,f,c
 19741  015AD8  0EF2               	movlw	-14
 19742  015ADA  1EE3               	comf	plusw1,f,c
 19743  015ADC  0EF3               	movlw	-13
 19744  015ADE  1EE3               	comf	plusw1,f,c
 19745  015AE0  0EF4               	movlw	-12
 19746  015AE2  1EE3               	comf	plusw1,f,c
 19747  015AE4  0EF5               	movlw	-11
 19748  015AE6  1EE3               	comf	plusw1,f,c
 19749  015AE8  E314               	bnc	u5680
 19750  015AEA  0EEF               	movlw	-17
 19751  015AEC  2AE3               	incf	plusw1,f,c
 19752  015AEE  E311               	bnc	u5680
 19753  015AF0  0EF0               	movlw	-16
 19754  015AF2  2AE3               	incf	plusw1,f,c
 19755  015AF4  E30E               	bnc	u5680
 19756  015AF6  0EF1               	movlw	-15
 19757  015AF8  2AE3               	incf	plusw1,f,c
 19758  015AFA  E30B               	bnc	u5680
 19759  015AFC  0EF2               	movlw	-14
 19760  015AFE  2AE3               	incf	plusw1,f,c
 19761  015B00  E308               	bnc	u5680
 19762  015B02  0EF3               	movlw	-13
 19763  015B04  2AE3               	incf	plusw1,f,c
 19764  015B06  E305               	bnc	u5680
 19765  015B08  0EF4               	movlw	-12
 19766  015B0A  2AE3               	incf	plusw1,f,c
 19767  015B0C  E302               	bnc	u5680
 19768  015B0E  0EF5               	movlw	-11
 19769  015B10  2AE3               	incf	plusw1,f,c
 19770  015B12                     u5680:
 19771                           
 19772                           ;stkvar	_divisor @ sp[(-2)+-16]
 19773  015B12  0EEE               	movlw	-18
 19774  015B14  50E3               	movf	plusw1,w,c
 19775  015B16  E116               	bnz	u5690
 19776  015B18  0EEF               	movlw	-17
 19777  015B1A  50E3               	movf	plusw1,w,c
 19778  015B1C  E113               	bnz	u5690
 19779  015B1E  0EF0               	movlw	-16
 19780  015B20  50E3               	movf	plusw1,w,c
 19781  015B22  E110               	bnz	u5690
 19782  015B24  0EF1               	movlw	-15
 19783  015B26  50E3               	movf	plusw1,w,c
 19784  015B28  E10D               	bnz	u5690
 19785  015B2A  0EF2               	movlw	-14
 19786  015B2C  50E3               	movf	plusw1,w,c
 19787  015B2E  E10A               	bnz	u5690
 19788  015B30  0EF3               	movlw	-13
 19789  015B32  50E3               	movf	plusw1,w,c
 19790  015B34  E107               	bnz	u5690
 19791  015B36  0EF4               	movlw	-12
 19792  015B38  50E3               	movf	plusw1,w,c
 19793  015B3A  E104               	bnz	u5690
 19794  015B3C  0EF5               	movlw	-11
 19795  015B3E  50E3               	movf	plusw1,w,c
 19796  015B40  B4D8               	btfsc	status,2,c
 19797  015B42  D075               	goto	u5720
 19798  015B44                     u5690:
 19799                           
 19800                           ;stkvar	_counter @ sp[(-2)+1]
 19801  015B44  0EFF               	movlw	-1
 19802  015B46  6AE3               	clrf	plusw1,c
 19803  015B48  D012               	goto	L20
 19804  015B4A                     l6651:
 19805                           
 19806                           ;stkvar	_divisor @ sp[(-2)+-16]
 19807  015B4A  90D8               	bcf	status,0,c
 19808  015B4C  0EEE               	movlw	-18
 19809  015B4E  36E3               	rlcf	plusw1,f,c
 19810  015B50  0EEF               	movlw	-17
 19811  015B52  36E3               	rlcf	plusw1,f,c
 19812  015B54  0EF0               	movlw	-16
 19813  015B56  36E3               	rlcf	plusw1,f,c
 19814  015B58  0EF1               	movlw	-15
 19815  015B5A  36E3               	rlcf	plusw1,f,c
 19816  015B5C  0EF2               	movlw	-14
 19817  015B5E  36E3               	rlcf	plusw1,f,c
 19818  015B60  0EF3               	movlw	-13
 19819  015B62  36E3               	rlcf	plusw1,f,c
 19820  015B64  0EF4               	movlw	-12
 19821  015B66  36E3               	rlcf	plusw1,f,c
 19822  015B68  0EF5               	movlw	-11
 19823  015B6A  36E3               	rlcf	plusw1,f,c
 19824                           
 19825                           ;stkvar	_counter @ sp[(-2)+1]
 19826  015B6C  0EFF               	movlw	-1
 19827  015B6E                     L20:
 19828  015B6E  2AE3               	incf	plusw1,f,c
 19829                           
 19830                           ;stkvar	_divisor @ sp[(-2)+-16]
 19831  015B70  0EF5               	movlw	-11
 19832  015B72  AEE3               	btfss	plusw1,7,c
 19833  015B74  D7EA               	goto	l6651
 19834  015B76                     u5700:
 19835                           
 19836                           ;stkvar	_divisor @ sp[(-2)+-16]
 19837                           ;stkvar	_dividend @ sp[(-2)+-8]
 19838  015B76  50E1               	movf	fsr1l,w,c
 19839  015B78  0FF6               	addlw	-10
 19840  015B7A  6ED9               	movwf	fsr2l,c
 19841  015B7C  50E2               	movf	fsr1h,w,c
 19842  015B7E  6EDA               	movwf	fsr2h,c
 19843  015B80  0EFF               	movlw	255
 19844  015B82  22DA               	addwfc	fsr2h,f,c
 19845  015B84  0EEE               	movlw	-18
 19846  015B86  50E3               	movf	plusw1,w,c
 19847  015B88  5CDE               	subwf	postinc2,w,c
 19848  015B8A  0EEF               	movlw	-17
 19849  015B8C  50E3               	movf	plusw1,w,c
 19850  015B8E  58DE               	subwfb	postinc2,w,c
 19851  015B90  0EF0               	movlw	-16
 19852  015B92  50E3               	movf	plusw1,w,c
 19853  015B94  58DE               	subwfb	postinc2,w,c
 19854  015B96  0EF1               	movlw	-15
 19855  015B98  50E3               	movf	plusw1,w,c
 19856  015B9A  58DE               	subwfb	postinc2,w,c
 19857  015B9C  0EF2               	movlw	-14
 19858  015B9E  50E3               	movf	plusw1,w,c
 19859  015BA0  58DE               	subwfb	postinc2,w,c
 19860  015BA2  0EF3               	movlw	-13
 19861  015BA4  50E3               	movf	plusw1,w,c
 19862  015BA6  58DE               	subwfb	postinc2,w,c
 19863  015BA8  0EF4               	movlw	-12
 19864  015BAA  50E3               	movf	plusw1,w,c
 19865  015BAC  58DE               	subwfb	postinc2,w,c
 19866  015BAE  0EF5               	movlw	-11
 19867  015BB0  50E3               	movf	plusw1,w,c
 19868  015BB2  58DE               	subwfb	postinc2,w,c
 19869  015BB4  A0D8               	btfss	status,0,c
 19870  015BB6  D01F               	goto	l6659
 19871                           
 19872                           ;stkvar	_divisor @ sp[(-2)+-16]
 19873                           ;stkvar	_dividend @ sp[(-2)+-8]
 19874  015BB8  50E1               	movf	fsr1l,w,c
 19875  015BBA  0FF6               	addlw	-10
 19876  015BBC  6ED9               	movwf	fsr2l,c
 19877  015BBE  50E2               	movf	fsr1h,w,c
 19878  015BC0  6EDA               	movwf	fsr2h,c
 19879  015BC2  0EFF               	movlw	255
 19880  015BC4  22DA               	addwfc	fsr2h,f,c
 19881  015BC6  0EEE               	movlw	-18
 19882  015BC8  50E3               	movf	plusw1,w,c
 19883  015BCA  5EDE               	subwf	postinc2,f,c
 19884  015BCC  0EEF               	movlw	-17
 19885  015BCE  50E3               	movf	plusw1,w,c
 19886  015BD0  5ADE               	subwfb	postinc2,f,c
 19887  015BD2  0EF0               	movlw	-16
 19888  015BD4  50E3               	movf	plusw1,w,c
 19889  015BD6  5ADE               	subwfb	postinc2,f,c
 19890  015BD8  0EF1               	movlw	-15
 19891  015BDA  50E3               	movf	plusw1,w,c
 19892  015BDC  5ADE               	subwfb	postinc2,f,c
 19893  015BDE  0EF2               	movlw	-14
 19894  015BE0  50E3               	movf	plusw1,w,c
 19895  015BE2  5ADE               	subwfb	postinc2,f,c
 19896  015BE4  0EF3               	movlw	-13
 19897  015BE6  50E3               	movf	plusw1,w,c
 19898  015BE8  5ADE               	subwfb	postinc2,f,c
 19899  015BEA  0EF4               	movlw	-12
 19900  015BEC  50E3               	movf	plusw1,w,c
 19901  015BEE  5ADE               	subwfb	postinc2,f,c
 19902  015BF0  0EF5               	movlw	-11
 19903  015BF2  50E3               	movf	plusw1,w,c
 19904  015BF4  5ADE               	subwfb	postinc2,f,c
 19905  015BF6                     l6659:
 19906                           
 19907                           ;stkvar	_divisor @ sp[(-2)+-16]
 19908  015BF6  90D8               	bcf	status,0,c
 19909  015BF8  0EF5               	movlw	-11
 19910  015BFA  32E3               	rrcf	plusw1,f,c
 19911  015BFC  0EF4               	movlw	-12
 19912  015BFE  32E3               	rrcf	plusw1,f,c
 19913  015C00  0EF3               	movlw	-13
 19914  015C02  32E3               	rrcf	plusw1,f,c
 19915  015C04  0EF2               	movlw	-14
 19916  015C06  32E3               	rrcf	plusw1,f,c
 19917  015C08  0EF1               	movlw	-15
 19918  015C0A  32E3               	rrcf	plusw1,f,c
 19919  015C0C  0EF0               	movlw	-16
 19920  015C0E  32E3               	rrcf	plusw1,f,c
 19921  015C10  0EEF               	movlw	-17
 19922  015C12  32E3               	rrcf	plusw1,f,c
 19923  015C14  0EEE               	movlw	-18
 19924  015C16  32E3               	rrcf	plusw1,f,c
 19925                           
 19926                           ;stkvar	_counter @ sp[(-2)+1]
 19927  015C18  0EFF               	movlw	-1
 19928  015C1A  50E3               	movf	plusw1,w,c
 19929  015C1C  6E32               	movwf	btemp^0,c
 19930  015C1E  0E01               	movlw	1
 19931  015C20  5E32               	subwf	btemp^0,f,c
 19932  015C22  0EFF               	movlw	-1
 19933  015C24  0060  F0CB  FFE3   	movff	btemp,plusw1
 19934  015C2A  A4D8               	btfss	status,2,c
 19935  015C2C  D7A4               	goto	u5700
 19936  015C2E                     u5720:
 19937                           
 19938                           ;stkvar	_sign @ sp[(-2)+0]
 19939  015C2E  0EFE               	movlw	-2
 19940  015C30  50E3               	movf	plusw1,w,c
 19941  015C32  B4D8               	btfsc	status,2,c
 19942  015C34  D025               	goto	u5740
 19943                           
 19944                           ;stkvar	_dividend @ sp[(-2)+-8]
 19945                           ;stkvar	_dividend @ sp[(-2)+-8]
 19946  015C36  0EF6               	movlw	-10
 19947  015C38  6CE3               	negf	plusw1,c
 19948  015C3A  0EF7               	movlw	-9
 19949  015C3C  1EE3               	comf	plusw1,f,c
 19950  015C3E  0EF8               	movlw	-8
 19951  015C40  1EE3               	comf	plusw1,f,c
 19952  015C42  0EF9               	movlw	-7
 19953  015C44  1EE3               	comf	plusw1,f,c
 19954  015C46  0EFA               	movlw	-6
 19955  015C48  1EE3               	comf	plusw1,f,c
 19956  015C4A  0EFB               	movlw	-5
 19957  015C4C  1EE3               	comf	plusw1,f,c
 19958  015C4E  0EFC               	movlw	-4
 19959  015C50  1EE3               	comf	plusw1,f,c
 19960  015C52  0EFD               	movlw	-3
 19961  015C54  1EE3               	comf	plusw1,f,c
 19962  015C56  E314               	bnc	u5740
 19963  015C58  0EF7               	movlw	-9
 19964  015C5A  2AE3               	incf	plusw1,f,c
 19965  015C5C  E311               	bnc	u5740
 19966  015C5E  0EF8               	movlw	-8
 19967  015C60  2AE3               	incf	plusw1,f,c
 19968  015C62  E30E               	bnc	u5740
 19969  015C64  0EF9               	movlw	-7
 19970  015C66  2AE3               	incf	plusw1,f,c
 19971  015C68  E30B               	bnc	u5740
 19972  015C6A  0EFA               	movlw	-6
 19973  015C6C  2AE3               	incf	plusw1,f,c
 19974  015C6E  E308               	bnc	u5740
 19975  015C70  0EFB               	movlw	-5
 19976  015C72  2AE3               	incf	plusw1,f,c
 19977  015C74  E305               	bnc	u5740
 19978  015C76  0EFC               	movlw	-4
 19979  015C78  2AE3               	incf	plusw1,f,c
 19980  015C7A  E302               	bnc	u5740
 19981  015C7C  0EFD               	movlw	-3
 19982  015C7E  2AE3               	incf	plusw1,f,c
 19983  015C80                     u5740:
 19984                           
 19985                           ;stkvar	_dividend @ sp[(-2)+-8]
 19986  015C80  0EF6               	movlw	246
 19987  015C82  24E1               	addwf	fsr1l,w,c
 19988  015C84  6ED9               	movwf	fsr2l,c
 19989  015C86  0EFF               	movlw	255
 19990  015C88  20E2               	addwfc	fsr1h,w,c
 19991  015C8A  6EDA               	movwf	fsr2h,c
 19992                           
 19993                           ;stkvar	?___aomod @ sp[(-2)+-8]
 19994  015C8C  0E08               	movlw	8
 19995  015C8E  6E32               	movwf	btemp^0,c
 19996  015C90  0EF6               	movlw	-10
 19997  015C92                     us575999:
 19998  015C92  006F FF7B FFE3     	movff	postinc2,plusw1
 19999  015C98  28E8               	incf	wreg,w,c
 20000  015C9A  2E32               	decfsz	btemp^0,f,c
 20001  015C9C  D7FA               	bra	us575999
 20002                           
 20003                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 20004  015C9E  52E5               	movf	postdec1,f,c
 20005  015CA0  52E5               	movf	postdec1,f,c
 20006  015CA2  0012               	return		;funcret
 20007  015CA4                     __end_of___aomod:
 20008                           	opt callstack 0
 20009                           
 20010 ;; *************** function ___aodiv *****************
 20011 ;; Defined at:
 20012 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 20013 ;; Parameters:    Size  Location     Type
 20014 ;;  dividend        8  [STACK] long long 
 20015 ;;  divisor         8  [STACK] long long 
 20016 ;; Auto vars:     Size  Location     Type
 20017 ;;  quotient        8  [STACK] long long 
 20018 ;;  sign            1  [STACK] unsigned char 
 20019 ;;  counter         1  [STACK] unsigned char 
 20020 ;; Return value:  Size  Location     Type
 20021 ;;                  8  [STACK] long long 
 20022 ;; Registers used:
 20023 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20024 ;; Tracked objects:
 20025 ;;		On entry : 0/2
 20026 ;;		On exit  : 0/0
 20027 ;;		Unchanged: 0/0
 20028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20033 ;;Total ram usage:        0 bytes
 20034 ;; Hardware stack levels used:    1
 20035 ;; Hardware stack levels required when called:    6
 20036 ;; This function calls:
 20037 ;;		Nothing
 20038 ;; This function is called by:
 20039 ;;		_dtoa
 20040 ;; This function uses a reentrant model
 20041 ;;
 20042                           
 20043                           	psect	text65
 20044  015570                     __ptext65:
 20045                           	opt callstack 0
 20046  015570                     ___aodiv:
 20047                           	opt callstack 0
 20048                           
 20049                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 20050  015570  0E0A               	movlw	10
 20051  015572  26E1               	addwf	fsr1l,f,c
 20052  015574  0E00               	movlw	0
 20053  015576  22E2               	addwfc	fsr1h,f,c
 20054                           
 20055                           ;stkvar	_sign @ sp[(-10)+8]
 20056                           
 20057                           ;incstack = 0
 20058  015578  0EFE               	movlw	-2
 20059  01557A  6AE3               	clrf	plusw1,c
 20060                           
 20061                           ;stkvar	_divisor @ sp[(-10)+-16]
 20062  01557C  0EED               	movlw	-19
 20063  01557E  AEE3               	btfss	plusw1,7,c
 20064  015580  D028               	goto	l6599
 20065                           
 20066                           ;stkvar	_divisor @ sp[(-10)+-16]
 20067                           ;stkvar	_divisor @ sp[(-10)+-16]
 20068  015582  0EE6               	movlw	-26
 20069  015584  6CE3               	negf	plusw1,c
 20070  015586  0EE7               	movlw	-25
 20071  015588  1EE3               	comf	plusw1,f,c
 20072  01558A  0EE8               	movlw	-24
 20073  01558C  1EE3               	comf	plusw1,f,c
 20074  01558E  0EE9               	movlw	-23
 20075  015590  1EE3               	comf	plusw1,f,c
 20076  015592  0EEA               	movlw	-22
 20077  015594  1EE3               	comf	plusw1,f,c
 20078  015596  0EEB               	movlw	-21
 20079  015598  1EE3               	comf	plusw1,f,c
 20080  01559A  0EEC               	movlw	-20
 20081  01559C  1EE3               	comf	plusw1,f,c
 20082  01559E  0EED               	movlw	-19
 20083  0155A0  1EE3               	comf	plusw1,f,c
 20084  0155A2  E314               	bnc	u5540
 20085  0155A4  0EE7               	movlw	-25
 20086  0155A6  2AE3               	incf	plusw1,f,c
 20087  0155A8  E311               	bnc	u5540
 20088  0155AA  0EE8               	movlw	-24
 20089  0155AC  2AE3               	incf	plusw1,f,c
 20090  0155AE  E30E               	bnc	u5540
 20091  0155B0  0EE9               	movlw	-23
 20092  0155B2  2AE3               	incf	plusw1,f,c
 20093  0155B4  E30B               	bnc	u5540
 20094  0155B6  0EEA               	movlw	-22
 20095  0155B8  2AE3               	incf	plusw1,f,c
 20096  0155BA  E308               	bnc	u5540
 20097  0155BC  0EEB               	movlw	-21
 20098  0155BE  2AE3               	incf	plusw1,f,c
 20099  0155C0  E305               	bnc	u5540
 20100  0155C2  0EEC               	movlw	-20
 20101  0155C4  2AE3               	incf	plusw1,f,c
 20102  0155C6  E302               	bnc	u5540
 20103  0155C8  0EED               	movlw	-19
 20104  0155CA  2AE3               	incf	plusw1,f,c
 20105  0155CC                     u5540:
 20106                           
 20107                           ;stkvar	_sign @ sp[(-10)+8]
 20108  0155CC  0EFE               	movlw	-2
 20109  0155CE  6AE3               	clrf	plusw1,c
 20110  0155D0  2AE3               	incf	plusw1,f,c
 20111  0155D2                     l6599:
 20112                           
 20113                           ;stkvar	_dividend @ sp[(-10)+-8]
 20114  0155D2  0EF5               	movlw	-11
 20115  0155D4  AEE3               	btfss	plusw1,7,c
 20116  0155D6  D027               	goto	l6605
 20117                           
 20118                           ;stkvar	_dividend @ sp[(-10)+-8]
 20119                           ;stkvar	_dividend @ sp[(-10)+-8]
 20120  0155D8  0EEE               	movlw	-18
 20121  0155DA  6CE3               	negf	plusw1,c
 20122  0155DC  0EEF               	movlw	-17
 20123  0155DE  1EE3               	comf	plusw1,f,c
 20124  0155E0  0EF0               	movlw	-16
 20125  0155E2  1EE3               	comf	plusw1,f,c
 20126  0155E4  0EF1               	movlw	-15
 20127  0155E6  1EE3               	comf	plusw1,f,c
 20128  0155E8  0EF2               	movlw	-14
 20129  0155EA  1EE3               	comf	plusw1,f,c
 20130  0155EC  0EF3               	movlw	-13
 20131  0155EE  1EE3               	comf	plusw1,f,c
 20132  0155F0  0EF4               	movlw	-12
 20133  0155F2  1EE3               	comf	plusw1,f,c
 20134  0155F4  0EF5               	movlw	-11
 20135  0155F6  1EE3               	comf	plusw1,f,c
 20136  0155F8  E314               	bnc	u5560
 20137  0155FA  0EEF               	movlw	-17
 20138  0155FC  2AE3               	incf	plusw1,f,c
 20139  0155FE  E311               	bnc	u5560
 20140  015600  0EF0               	movlw	-16
 20141  015602  2AE3               	incf	plusw1,f,c
 20142  015604  E30E               	bnc	u5560
 20143  015606  0EF1               	movlw	-15
 20144  015608  2AE3               	incf	plusw1,f,c
 20145  01560A  E30B               	bnc	u5560
 20146  01560C  0EF2               	movlw	-14
 20147  01560E  2AE3               	incf	plusw1,f,c
 20148  015610  E308               	bnc	u5560
 20149  015612  0EF3               	movlw	-13
 20150  015614  2AE3               	incf	plusw1,f,c
 20151  015616  E305               	bnc	u5560
 20152  015618  0EF4               	movlw	-12
 20153  01561A  2AE3               	incf	plusw1,f,c
 20154  01561C  E302               	bnc	u5560
 20155  01561E  0EF5               	movlw	-11
 20156  015620  2AE3               	incf	plusw1,f,c
 20157  015622                     u5560:
 20158                           
 20159                           ;stkvar	_sign @ sp[(-10)+8]
 20160  015622  0EFE               	movlw	-2
 20161  015624  70E3               	btg	plusw1,0,c
 20162  015626                     l6605:
 20163                           
 20164                           ;stkvar	_quotient @ sp[(-10)+0]
 20165  015626  0E07               	movlw	7
 20166  015628  6E32               	movwf	btemp^0,c
 20167  01562A  0EF6               	movlw	-10
 20168  01562C                     u5571:
 20169  01562C  6AE3               	clrf	plusw1,c
 20170  01562E  2AE8               	incf	wreg,f,c
 20171  015630  0632               	decf	btemp^0,f,c
 20172  015632  E2FC               	bc	u5571
 20173                           
 20174                           ;stkvar	_divisor @ sp[(-10)+-16]
 20175  015634  0EE6               	movlw	-26
 20176  015636  50E3               	movf	plusw1,w,c
 20177  015638  E116               	bnz	u5580
 20178  01563A  0EE7               	movlw	-25
 20179  01563C  50E3               	movf	plusw1,w,c
 20180  01563E  E113               	bnz	u5580
 20181  015640  0EE8               	movlw	-24
 20182  015642  50E3               	movf	plusw1,w,c
 20183  015644  E110               	bnz	u5580
 20184  015646  0EE9               	movlw	-23
 20185  015648  50E3               	movf	plusw1,w,c
 20186  01564A  E10D               	bnz	u5580
 20187  01564C  0EEA               	movlw	-22
 20188  01564E  50E3               	movf	plusw1,w,c
 20189  015650  E10A               	bnz	u5580
 20190  015652  0EEB               	movlw	-21
 20191  015654  50E3               	movf	plusw1,w,c
 20192  015656  E107               	bnz	u5580
 20193  015658  0EEC               	movlw	-20
 20194  01565A  50E3               	movf	plusw1,w,c
 20195  01565C  E104               	bnz	u5580
 20196  01565E  0EED               	movlw	-19
 20197  015660  50E3               	movf	plusw1,w,c
 20198  015662  B4D8               	btfsc	status,2,c
 20199  015664  D088               	goto	u5610
 20200  015666                     u5580:
 20201                           
 20202                           ;stkvar	_counter @ sp[(-10)+9]
 20203  015666  0EFF               	movlw	-1
 20204  015668  6AE3               	clrf	plusw1,c
 20205  01566A  D012               	goto	L21
 20206  01566C                     l6611:
 20207                           
 20208                           ;stkvar	_divisor @ sp[(-10)+-16]
 20209  01566C  90D8               	bcf	status,0,c
 20210  01566E  0EE6               	movlw	-26
 20211  015670  36E3               	rlcf	plusw1,f,c
 20212  015672  0EE7               	movlw	-25
 20213  015674  36E3               	rlcf	plusw1,f,c
 20214  015676  0EE8               	movlw	-24
 20215  015678  36E3               	rlcf	plusw1,f,c
 20216  01567A  0EE9               	movlw	-23
 20217  01567C  36E3               	rlcf	plusw1,f,c
 20218  01567E  0EEA               	movlw	-22
 20219  015680  36E3               	rlcf	plusw1,f,c
 20220  015682  0EEB               	movlw	-21
 20221  015684  36E3               	rlcf	plusw1,f,c
 20222  015686  0EEC               	movlw	-20
 20223  015688  36E3               	rlcf	plusw1,f,c
 20224  01568A  0EED               	movlw	-19
 20225  01568C  36E3               	rlcf	plusw1,f,c
 20226                           
 20227                           ;stkvar	_counter @ sp[(-10)+9]
 20228  01568E  0EFF               	movlw	-1
 20229  015690                     L21:
 20230  015690  2AE3               	incf	plusw1,f,c
 20231                           
 20232                           ;stkvar	_divisor @ sp[(-10)+-16]
 20233  015692  0EED               	movlw	-19
 20234  015694  AEE3               	btfss	plusw1,7,c
 20235  015696  D7EA               	goto	l6611
 20236  015698                     u5590:
 20237                           
 20238                           ;stkvar	_quotient @ sp[(-10)+0]
 20239  015698  90D8               	bcf	status,0,c
 20240  01569A  0EF6               	movlw	-10
 20241  01569C  36E3               	rlcf	plusw1,f,c
 20242  01569E  0EF7               	movlw	-9
 20243  0156A0  36E3               	rlcf	plusw1,f,c
 20244  0156A2  0EF8               	movlw	-8
 20245  0156A4  36E3               	rlcf	plusw1,f,c
 20246  0156A6  0EF9               	movlw	-7
 20247  0156A8  36E3               	rlcf	plusw1,f,c
 20248  0156AA  0EFA               	movlw	-6
 20249  0156AC  36E3               	rlcf	plusw1,f,c
 20250  0156AE  0EFB               	movlw	-5
 20251  0156B0  36E3               	rlcf	plusw1,f,c
 20252  0156B2  0EFC               	movlw	-4
 20253  0156B4  36E3               	rlcf	plusw1,f,c
 20254  0156B6  0EFD               	movlw	-3
 20255  0156B8  36E3               	rlcf	plusw1,f,c
 20256                           
 20257                           ;stkvar	_divisor @ sp[(-10)+-16]
 20258                           ;stkvar	_dividend @ sp[(-10)+-8]
 20259  0156BA  50E1               	movf	fsr1l,w,c
 20260  0156BC  0FEE               	addlw	-18
 20261  0156BE  6ED9               	movwf	fsr2l,c
 20262  0156C0  50E2               	movf	fsr1h,w,c
 20263  0156C2  6EDA               	movwf	fsr2h,c
 20264  0156C4  0EFF               	movlw	255
 20265  0156C6  22DA               	addwfc	fsr2h,f,c
 20266  0156C8  0EE6               	movlw	-26
 20267  0156CA  50E3               	movf	plusw1,w,c
 20268  0156CC  5CDE               	subwf	postinc2,w,c
 20269  0156CE  0EE7               	movlw	-25
 20270  0156D0  50E3               	movf	plusw1,w,c
 20271  0156D2  58DE               	subwfb	postinc2,w,c
 20272  0156D4  0EE8               	movlw	-24
 20273  0156D6  50E3               	movf	plusw1,w,c
 20274  0156D8  58DE               	subwfb	postinc2,w,c
 20275  0156DA  0EE9               	movlw	-23
 20276  0156DC  50E3               	movf	plusw1,w,c
 20277  0156DE  58DE               	subwfb	postinc2,w,c
 20278  0156E0  0EEA               	movlw	-22
 20279  0156E2  50E3               	movf	plusw1,w,c
 20280  0156E4  58DE               	subwfb	postinc2,w,c
 20281  0156E6  0EEB               	movlw	-21
 20282  0156E8  50E3               	movf	plusw1,w,c
 20283  0156EA  58DE               	subwfb	postinc2,w,c
 20284  0156EC  0EEC               	movlw	-20
 20285  0156EE  50E3               	movf	plusw1,w,c
 20286  0156F0  58DE               	subwfb	postinc2,w,c
 20287  0156F2  0EED               	movlw	-19
 20288  0156F4  50E3               	movf	plusw1,w,c
 20289  0156F6  58DE               	subwfb	postinc2,w,c
 20290  0156F8  A0D8               	btfss	status,0,c
 20291  0156FA  D021               	goto	l6623
 20292                           
 20293                           ;stkvar	_divisor @ sp[(-10)+-16]
 20294                           ;stkvar	_dividend @ sp[(-10)+-8]
 20295  0156FC  50E1               	movf	fsr1l,w,c
 20296  0156FE  0FEE               	addlw	-18
 20297  015700  6ED9               	movwf	fsr2l,c
 20298  015702  50E2               	movf	fsr1h,w,c
 20299  015704  6EDA               	movwf	fsr2h,c
 20300  015706  0EFF               	movlw	255
 20301  015708  22DA               	addwfc	fsr2h,f,c
 20302  01570A  0EE6               	movlw	-26
 20303  01570C  50E3               	movf	plusw1,w,c
 20304  01570E  5EDE               	subwf	postinc2,f,c
 20305  015710  0EE7               	movlw	-25
 20306  015712  50E3               	movf	plusw1,w,c
 20307  015714  5ADE               	subwfb	postinc2,f,c
 20308  015716  0EE8               	movlw	-24
 20309  015718  50E3               	movf	plusw1,w,c
 20310  01571A  5ADE               	subwfb	postinc2,f,c
 20311  01571C  0EE9               	movlw	-23
 20312  01571E  50E3               	movf	plusw1,w,c
 20313  015720  5ADE               	subwfb	postinc2,f,c
 20314  015722  0EEA               	movlw	-22
 20315  015724  50E3               	movf	plusw1,w,c
 20316  015726  5ADE               	subwfb	postinc2,f,c
 20317  015728  0EEB               	movlw	-21
 20318  01572A  50E3               	movf	plusw1,w,c
 20319  01572C  5ADE               	subwfb	postinc2,f,c
 20320  01572E  0EEC               	movlw	-20
 20321  015730  50E3               	movf	plusw1,w,c
 20322  015732  5ADE               	subwfb	postinc2,f,c
 20323  015734  0EED               	movlw	-19
 20324  015736  50E3               	movf	plusw1,w,c
 20325  015738  5ADE               	subwfb	postinc2,f,c
 20326                           
 20327                           ;stkvar	_quotient @ sp[(-10)+0]
 20328  01573A  0EF6               	movlw	-10
 20329  01573C  80E3               	bsf	plusw1,0,c
 20330  01573E                     l6623:
 20331                           
 20332                           ;stkvar	_divisor @ sp[(-10)+-16]
 20333  01573E  90D8               	bcf	status,0,c
 20334  015740  0EED               	movlw	-19
 20335  015742  32E3               	rrcf	plusw1,f,c
 20336  015744  0EEC               	movlw	-20
 20337  015746  32E3               	rrcf	plusw1,f,c
 20338  015748  0EEB               	movlw	-21
 20339  01574A  32E3               	rrcf	plusw1,f,c
 20340  01574C  0EEA               	movlw	-22
 20341  01574E  32E3               	rrcf	plusw1,f,c
 20342  015750  0EE9               	movlw	-23
 20343  015752  32E3               	rrcf	plusw1,f,c
 20344  015754  0EE8               	movlw	-24
 20345  015756  32E3               	rrcf	plusw1,f,c
 20346  015758  0EE7               	movlw	-25
 20347  01575A  32E3               	rrcf	plusw1,f,c
 20348  01575C  0EE6               	movlw	-26
 20349  01575E  32E3               	rrcf	plusw1,f,c
 20350                           
 20351                           ;stkvar	_counter @ sp[(-10)+9]
 20352  015760  0EFF               	movlw	-1
 20353  015762  50E3               	movf	plusw1,w,c
 20354  015764  6E32               	movwf	btemp^0,c
 20355  015766  0E01               	movlw	1
 20356  015768  5E32               	subwf	btemp^0,f,c
 20357  01576A  0EFF               	movlw	-1
 20358  01576C  0060  F0CB  FFE3   	movff	btemp,plusw1
 20359  015772  A4D8               	btfss	status,2,c
 20360  015774  D791               	goto	u5590
 20361  015776                     u5610:
 20362                           
 20363                           ;stkvar	_sign @ sp[(-10)+8]
 20364  015776  0EFE               	movlw	-2
 20365  015778  50E3               	movf	plusw1,w,c
 20366  01577A  B4D8               	btfsc	status,2,c
 20367  01577C  D025               	goto	u5630
 20368                           
 20369                           ;stkvar	_quotient @ sp[(-10)+0]
 20370                           ;stkvar	_quotient @ sp[(-10)+0]
 20371  01577E  0EF6               	movlw	-10
 20372  015780  6CE3               	negf	plusw1,c
 20373  015782  0EF7               	movlw	-9
 20374  015784  1EE3               	comf	plusw1,f,c
 20375  015786  0EF8               	movlw	-8
 20376  015788  1EE3               	comf	plusw1,f,c
 20377  01578A  0EF9               	movlw	-7
 20378  01578C  1EE3               	comf	plusw1,f,c
 20379  01578E  0EFA               	movlw	-6
 20380  015790  1EE3               	comf	plusw1,f,c
 20381  015792  0EFB               	movlw	-5
 20382  015794  1EE3               	comf	plusw1,f,c
 20383  015796  0EFC               	movlw	-4
 20384  015798  1EE3               	comf	plusw1,f,c
 20385  01579A  0EFD               	movlw	-3
 20386  01579C  1EE3               	comf	plusw1,f,c
 20387  01579E  E314               	bnc	u5630
 20388  0157A0  0EF7               	movlw	-9
 20389  0157A2  2AE3               	incf	plusw1,f,c
 20390  0157A4  E311               	bnc	u5630
 20391  0157A6  0EF8               	movlw	-8
 20392  0157A8  2AE3               	incf	plusw1,f,c
 20393  0157AA  E30E               	bnc	u5630
 20394  0157AC  0EF9               	movlw	-7
 20395  0157AE  2AE3               	incf	plusw1,f,c
 20396  0157B0  E30B               	bnc	u5630
 20397  0157B2  0EFA               	movlw	-6
 20398  0157B4  2AE3               	incf	plusw1,f,c
 20399  0157B6  E308               	bnc	u5630
 20400  0157B8  0EFB               	movlw	-5
 20401  0157BA  2AE3               	incf	plusw1,f,c
 20402  0157BC  E305               	bnc	u5630
 20403  0157BE  0EFC               	movlw	-4
 20404  0157C0  2AE3               	incf	plusw1,f,c
 20405  0157C2  E302               	bnc	u5630
 20406  0157C4  0EFD               	movlw	-3
 20407  0157C6  2AE3               	incf	plusw1,f,c
 20408  0157C8                     u5630:
 20409                           
 20410                           ;stkvar	_quotient @ sp[(-10)+0]
 20411  0157C8  0EF6               	movlw	246
 20412  0157CA  24E1               	addwf	fsr1l,w,c
 20413  0157CC  6ED9               	movwf	fsr2l,c
 20414  0157CE  0EFF               	movlw	255
 20415  0157D0  20E2               	addwfc	fsr1h,w,c
 20416  0157D2  6EDA               	movwf	fsr2h,c
 20417                           
 20418                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 20419  0157D4  0E08               	movlw	8
 20420  0157D6  6E32               	movwf	btemp^0,c
 20421  0157D8  0EEE               	movlw	-18
 20422  0157DA                     us564999:
 20423  0157DA  006F FF7B FFE3     	movff	postinc2,plusw1
 20424  0157E0  28E8               	incf	wreg,w,c
 20425  0157E2  2E32               	decfsz	btemp^0,f,c
 20426  0157E4  D7FA               	bra	us564999
 20427                           
 20428                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 20429  0157E6  0EF6               	movlw	246
 20430  0157E8  26E1               	addwf	fsr1l,f,c
 20431  0157EA  0EFF               	movlw	255
 20432  0157EC  22E2               	addwfc	fsr1h,f,c
 20433  0157EE  0012               	return		;funcret
 20434  0157F0                     __end_of___aodiv:
 20435                           	opt callstack 0
 20436                           
 20437 ;; *************** function _ctoa *****************
 20438 ;; Defined at:
 20439 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20440 ;; Parameters:    Size  Location     Type
 20441 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20442 ;;		 -> f(6), NULL(0), 
 20443 ;;  c               1  [STACK] unsigned char 
 20444 ;; Auto vars:     Size  Location     Type
 20445 ;;  w               2  [STACK] int 
 20446 ;;  l               2    0        int 
 20447 ;; Return value:  Size  Location     Type
 20448 ;;                  2  [STACK] int 
 20449 ;; Registers used:
 20450 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 20451 ;; Tracked objects:
 20452 ;;		On entry : 0/5
 20453 ;;		On exit  : 0/0
 20454 ;;		Unchanged: 0/0
 20455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20460 ;;Total ram usage:        0 bytes
 20461 ;; Hardware stack levels used:    1
 20462 ;; Hardware stack levels required when called:   11
 20463 ;; This function calls:
 20464 ;;		_pad
 20465 ;; This function is called by:
 20466 ;;		_vfpfcnvrt
 20467 ;; This function uses a reentrant model
 20468 ;;
 20469                           
 20470                           	psect	text66
 20471  017D68                     __ptext66:
 20472                           	opt callstack 0
 20473  017D68                     _ctoa:
 20474                           	opt callstack 0
 20475                           
 20476                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20477  017D68  52E6               	movf	postinc1,f,c
 20478  017D6A  52E6               	movf	postinc1,f,c
 20479                           
 20480                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 20481                           
 20482                           ;incstack = 0
 20483  017D6C  501B               	movf	_width^0,w,c
 20484  017D6E  101C               	iorwf	(_width+1)^0,w,c
 20485  017D70  A4D8               	btfss	status,2,c
 20486  017D72  D009               	goto	l9481
 20487                           
 20488                           ;stkvar	_w @ sp[(-2)+0]
 20489  017D74  0EFE               	movlw	-2
 20490  017D76  0060  F06F  FFE3   	movff	_width,plusw1
 20491  017D7C  0EFF               	movlw	-1
 20492  017D7E  0060  F073  FFE3   	movff	_width+1,plusw1
 20493  017D84  D016               	goto	l9483
 20494  017D86                     l9481:
 20495  017D86  0EFF               	movlw	255
 20496  017D88  6E3C               	movwf	(btemp+10)^0,c
 20497  017D8A  0EFF               	movlw	255
 20498  017D8C  6E3D               	movwf	(btemp+11)^0,c
 20499  017D8E  0060  F06C  F03A   	movff	_width,btemp+8
 20500  017D94  0060  F070  F03B   	movff	_width+1,btemp+9
 20501  017D9A  503C               	movf	(btemp+10)^0,w,c
 20502  017D9C  263A               	addwf	(btemp+8)^0,f,c
 20503  017D9E  503D               	movf	(btemp+11)^0,w,c
 20504  017DA0  223B               	addwfc	(btemp+9)^0,f,c
 20505                           
 20506                           ;stkvar	_w @ sp[(-2)+0]
 20507  017DA2  0EFE               	movlw	-2
 20508  017DA4  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20509  017DAA  0EFF               	movlw	-1
 20510  017DAC  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20511  017DB2                     l9483:
 20512                           
 20513                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 20514                           ;stkvar	_c @ sp[(-2)+-3]
 20515  017DB2  0EFB               	movlw	-5
 20516  017DB4  006F FF8C  F2AC    	movff	plusw1,_dbuf
 20517                           
 20518                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 20519  017DBA  0102               	movlb	2	; () banked
 20520  017DBC  6BAD               	clrf	(_dbuf+1)& (0+255),b
 20521                           
 20522                           ; BSR set to: 2
 20523                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 20524                           ;stkvar	_w @ sp[(-2)+0]
 20525  017DBE  0EFE               	movlw	-2
 20526  017DC0  006F FF8F FFE6     	movff	plusw1,postinc1
 20527  017DC6  006F FF8F FFE6     	movff	plusw1,postinc1
 20528  017DCC  0EAC               	movlw	low _dbuf
 20529  017DCE  6EE6               	movwf	postinc1,c
 20530  017DD0  0E02               	movlw	high _dbuf
 20531  017DD2  6EE6               	movwf	postinc1,c
 20532                           
 20533                           ;stkvar	_fp @ sp[(-6)+-2]
 20534  017DD4  0EF8               	movlw	-8
 20535  017DD6  006F FF8F FFE6     	movff	plusw1,postinc1
 20536  017DDC  006F FF8F FFE6     	movff	plusw1,postinc1
 20537  017DE2  ECDD  F0B8         	call	_pad	;wreg free
 20538                           
 20539                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 20540  017DE6  0EFB               	movlw	251
 20541  017DE8  26E1               	addwf	fsr1l,f,c
 20542  017DEA  0EFF               	movlw	255
 20543  017DEC  22E2               	addwfc	fsr1h,f,c
 20544  017DEE  0012               	return		;funcret
 20545  017DF0                     __end_of_ctoa:
 20546                           	opt callstack 0
 20547                           
 20548 ;; *************** function _pad *****************
 20549 ;; Defined at:
 20550 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20551 ;; Parameters:    Size  Location     Type
 20552 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20553 ;;		 -> f(6), NULL(0), 
 20554 ;;  buf             2  [STACK] PTR unsigned char 
 20555 ;;		 -> dbuf(80), 
 20556 ;;  p               2  [STACK] int 
 20557 ;; Auto vars:     Size  Location     Type
 20558 ;;  w               2  [STACK] int 
 20559 ;;  i               2  [STACK] int 
 20560 ;; Return value:  Size  Location     Type
 20561 ;;                  2  [STACK] int 
 20562 ;; Registers used:
 20563 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 20564 ;; Tracked objects:
 20565 ;;		On entry : 0/2
 20566 ;;		On exit  : 0/0
 20567 ;;		Unchanged: 0/0
 20568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20573 ;;Total ram usage:        0 bytes
 20574 ;; Hardware stack levels used:    1
 20575 ;; Hardware stack levels required when called:   10
 20576 ;; This function calls:
 20577 ;;		_fputc
 20578 ;;		_fputs
 20579 ;;		_strlen
 20580 ;; This function is called by:
 20581 ;;		_ctoa
 20582 ;;		_dtoa
 20583 ;;		_efgtoa
 20584 ;;		_utoa
 20585 ;;		_xtoa
 20586 ;; This function uses a reentrant model
 20587 ;;
 20588                           
 20589                           	psect	text67
 20590  0171BA                     __ptext67:
 20591                           	opt callstack 0
 20592  0171BA                     _pad:
 20593                           	opt callstack 0
 20594                           
 20595                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20596  0171BA  52E6               	movf	postinc1,f,c
 20597  0171BC  52E6               	movf	postinc1,f,c
 20598  0171BE  52E6               	movf	postinc1,f,c
 20599  0171C0  52E6               	movf	postinc1,f,c
 20600                           
 20601                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 20602                           
 20603                           ;incstack = 0
 20604  0171C2  A01F               	btfss	_flags^0,0,c
 20605  0171C4  D010               	goto	l9455
 20606                           
 20607                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 20608                           ;stkvar	_fp @ sp[(-4)+-2]
 20609  0171C6  0EFA               	movlw	-6
 20610  0171C8  006F FF8F FFE6     	movff	plusw1,postinc1
 20611  0171CE  006F FF8F FFE6     	movff	plusw1,postinc1
 20612                           
 20613                           ;stkvar	_buf @ sp[(-6)+-4]
 20614  0171D4  0EF6               	movlw	-10
 20615  0171D6  006F FF8F FFE6     	movff	plusw1,postinc1
 20616  0171DC  006F FF8F FFE6     	movff	plusw1,postinc1
 20617  0171E2  ECD6  F0BD         	call	_fputs	;wreg free
 20618  0171E6                     l9455:
 20619                           
 20620                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 20621                           ;stkvar	_p @ sp[(-4)+-6]
 20622  0171E6  0EF7               	movlw	-9
 20623  0171E8  BEE3               	btfsc	plusw1,7,c
 20624  0171EA  D011               	goto	l9459
 20625                           
 20626                           ;stkvar	_p @ sp[(-4)+-6]
 20627                           ;stkvar	_w @ sp[(-4)+0]
 20628  0171EC  0EF6               	movlw	-10
 20629  0171EE  006F FF8C  F032    	movff	plusw1,btemp
 20630  0171F4  0EFC               	movlw	-4
 20631  0171F6  0060  F0CB  FFE3   	movff	btemp,plusw1
 20632  0171FC  0EF7               	movlw	-9
 20633  0171FE  006F FF8C  F032    	movff	plusw1,btemp
 20634  017204  0EFD               	movlw	-3
 20635  017206  0060  F0CB  FFE3   	movff	btemp,plusw1
 20636  01720C  D004               	goto	l1787
 20637  01720E                     l9459:
 20638                           
 20639                           ;stkvar	_w @ sp[(-4)+0]
 20640  01720E  0EFC               	movlw	-4
 20641  017210  6AE3               	clrf	plusw1,c
 20642  017212  0EFD               	movlw	-3
 20643  017214  6AE3               	clrf	plusw1,c
 20644  017216                     l1787:
 20645                           
 20646                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 20647                           ;stkvar	_i @ sp[(-4)+2]
 20648  017216  0EFE               	movlw	-2
 20649  017218  6AE3               	clrf	plusw1,c
 20650  01721A  0EFF               	movlw	-1
 20651  01721C  6AE3               	clrf	plusw1,c
 20652                           
 20653                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 20654  01721E  D01E               	goto	l9465
 20655  017220                     l9461:
 20656                           
 20657                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 20658                           ;stkvar	_fp @ sp[(-4)+-2]
 20659  017220  0EFA               	movlw	-6
 20660  017222  006F FF8F FFE6     	movff	plusw1,postinc1
 20661  017228  006F FF8F FFE6     	movff	plusw1,postinc1
 20662  01722E  0E20               	movlw	32
 20663  017230  6EE6               	movwf	postinc1,c
 20664  017232  0E00               	movlw	0
 20665  017234  6EE6               	movwf	postinc1,c
 20666  017236  ECBF  F0B7         	call	_fputc	;wreg free
 20667                           
 20668                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 20669                           ;stkvar	_i @ sp[(-4)+2]
 20670  01723A  0EFE               	movlw	-2
 20671  01723C  50E3               	movf	plusw1,w,c
 20672  01723E  0F01               	addlw	1
 20673  017240  6E32               	movwf	btemp^0,c
 20674  017242  0EFE               	movlw	-2
 20675  017244  0060  F0CB  FFE3   	movff	btemp,plusw1
 20676  01724A  6A32               	clrf	btemp^0,c
 20677  01724C  0EFF               	movlw	-1
 20678  01724E  50E3               	movf	plusw1,w,c
 20679  017250  2032               	addwfc	btemp^0,w,c
 20680  017252  6E32               	movwf	btemp^0,c
 20681  017254  0EFF               	movlw	-1
 20682  017256  0060  F0CB  FFE3   	movff	btemp,plusw1
 20683  01725C                     l9465:
 20684                           
 20685                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 20686                           ;stkvar	_w @ sp[(-4)+0]
 20687                           ;stkvar	_i @ sp[(-4)+2]
 20688  01725C  50E1               	movf	fsr1l,w,c
 20689  01725E  0FFE               	addlw	-2
 20690  017260  6ED9               	movwf	fsr2l,c
 20691  017262  50E2               	movf	fsr1h,w,c
 20692  017264  6EDA               	movwf	fsr2h,c
 20693  017266  0EFF               	movlw	255
 20694  017268  22DA               	addwfc	fsr2h,f,c
 20695  01726A  0EFC               	movlw	-4
 20696  01726C  50E3               	movf	plusw1,w,c
 20697  01726E  5CDE               	subwf	postinc2,w,c
 20698  017270  50DE               	movf	postinc2,w,c
 20699  017272  0A80               	xorlw	128
 20700  017274  6E32               	movwf	btemp^0,c
 20701  017276  0EFD               	movlw	-3
 20702  017278  50E3               	movf	plusw1,w,c
 20703  01727A  0A80               	xorlw	128
 20704  01727C  5832               	subwfb	btemp^0,w,c
 20705  01727E  A0D8               	btfss	status,0,c
 20706  017280  D7CF               	goto	l9461
 20707                           
 20708                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 20709  017282  B01F               	btfsc	_flags^0,0,c
 20710  017284  D010               	goto	l9469
 20711                           
 20712                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 20713                           ;stkvar	_fp @ sp[(-4)+-2]
 20714  017286  0EFA               	movlw	-6
 20715  017288  006F FF8F FFE6     	movff	plusw1,postinc1
 20716  01728E  006F FF8F FFE6     	movff	plusw1,postinc1
 20717                           
 20718                           ;stkvar	_buf @ sp[(-6)+-4]
 20719  017294  0EF6               	movlw	-10
 20720  017296  006F FF8F FFE6     	movff	plusw1,postinc1
 20721  01729C  006F FF8F FFE6     	movff	plusw1,postinc1
 20722  0172A2  ECD6  F0BD         	call	_fputs	;wreg free
 20723  0172A6                     l9469:
 20724                           
 20725                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 20726                           ;stkvar	_w @ sp[(-4)+0]
 20727                           ;stkvar	_buf @ sp[(-4)+-4]
 20728  0172A6  0EF8               	movlw	-8
 20729  0172A8  006F FF8F FFE6     	movff	plusw1,postinc1
 20730  0172AE  006F FF8F FFE6     	movff	plusw1,postinc1
 20731  0172B4  EC85  F0BD         	call	_strlen	;wreg free
 20732  0172B8  0EFC               	movlw	-4
 20733  0172BA  50E3               	movf	plusw1,w,c
 20734  0172BC  2632               	addwf	btemp^0,f,c
 20735  0172BE  0EFD               	movlw	-3
 20736  0172C0  50E3               	movf	plusw1,w,c
 20737  0172C2  2233               	addwfc	(btemp+1)^0,f,c
 20738                           
 20739                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 20740  0172C4  0EF6               	movlw	246
 20741  0172C6  26E1               	addwf	fsr1l,f,c
 20742  0172C8  0EFF               	movlw	255
 20743  0172CA  22E2               	addwfc	fsr1h,f,c
 20744  0172CC  0012               	return		;funcret
 20745  0172CE                     __end_of_pad:
 20746                           	opt callstack 0
 20747                           
 20748 ;; *************** function _strlen *****************
 20749 ;; Defined at:
 20750 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 20751 ;; Parameters:    Size  Location     Type
 20752 ;;  s               2  [STACK] PTR const unsigned char 
 20753 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 20754 ;;		 -> STR_16(9), STR_15(12), D.lcd(216), D(218), 
 20755 ;;		 -> T(144), STR_7(5), STR_3(5), V(227), 
 20756 ;; Auto vars:     Size  Location     Type
 20757 ;;  a               2  [STACK] PTR const unsigned char 
 20758 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 20759 ;;		 -> STR_16(9), STR_15(12), D.lcd(216), D(218), 
 20760 ;;		 -> T(144), STR_7(5), STR_3(5), V(227), 
 20761 ;; Return value:  Size  Location     Type
 20762 ;;                  2  [STACK] unsigned int 
 20763 ;; Registers used:
 20764 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 20765 ;; Tracked objects:
 20766 ;;		On entry : 0/0
 20767 ;;		On exit  : 0/0
 20768 ;;		Unchanged: 0/0
 20769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20774 ;;Total ram usage:        0 bytes
 20775 ;; Hardware stack levels used:    1
 20776 ;; Hardware stack levels required when called:    6
 20777 ;; This function calls:
 20778 ;;		Nothing
 20779 ;; This function is called by:
 20780 ;;		_eaDogM_WriteString
 20781 ;;		_pad
 20782 ;;		_stoa
 20783 ;; This function uses a reentrant model
 20784 ;;
 20785                           
 20786                           	psect	text68
 20787  017B0A                     __ptext68:
 20788                           	opt callstack 0
 20789  017B0A                     _strlen:
 20790                           	opt callstack 0
 20791                           
 20792                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20793  017B0A  52E6               	movf	postinc1,f,c
 20794  017B0C  52E6               	movf	postinc1,f,c
 20795                           
 20796                           ;stkvar	_s @ sp[(-2)+-2]
 20797                           
 20798                           ;incstack = 0
 20799  017B0E  0EFC               	movlw	-4
 20800  017B10  006F FF8C  F03C    	movff	plusw1,btemp+10
 20801  017B16  0EFD               	movlw	-3
 20802  017B18  006F FF8C  F03D    	movff	plusw1,btemp+11
 20803                           
 20804                           ;stkvar	_a @ sp[(-2)+0]
 20805  017B1E  0EFF               	movlw	-1
 20806  017B20  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20807  017B26  0EFE               	movlw	-2
 20808  017B28  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20809  017B2E  D011               	goto	l6217
 20810  017B30                     l6215:
 20811                           
 20812                           ;stkvar	_s @ sp[(-2)+-2]
 20813  017B30  0EFC               	movlw	-4
 20814  017B32  50E3               	movf	plusw1,w,c
 20815  017B34  0F01               	addlw	1
 20816  017B36  6E32               	movwf	btemp^0,c
 20817  017B38  0EFC               	movlw	-4
 20818  017B3A  0060  F0CB  FFE3   	movff	btemp,plusw1
 20819  017B40  6A32               	clrf	btemp^0,c
 20820  017B42  0EFD               	movlw	-3
 20821  017B44  50E3               	movf	plusw1,w,c
 20822  017B46  2032               	addwfc	btemp^0,w,c
 20823  017B48  6E32               	movwf	btemp^0,c
 20824  017B4A  0EFD               	movlw	-3
 20825  017B4C  0060  F0CB  FFE3   	movff	btemp,plusw1
 20826  017B52                     l6217:
 20827                           
 20828                           ;stkvar	_s @ sp[(-2)+-2]
 20829  017B52  0EFC               	movlw	-4
 20830  017B54  006F FF8F FFF6     	movff	plusw1,tblptrl
 20831  017B5A  0EFD               	movlw	-3
 20832  017B5C  006F FF8F FFF7     	movff	plusw1,tblptrh
 20833  017B62  0E00               	movlw	low (__mediumconst shr (0+16))
 20834  017B64  6EF8               	movwf	tblptru,c
 20835  017B66  0E1F               	movlw	(high __ramtop+-1)
 20836  017B68  64F7               	cpfsgt	tblptrh,c
 20837  017B6A  D003               	bra	u4707
 20838  017B6C  0008               	tblrd		*
 20839  017B6E  50F5               	movf	tablat,w,c
 20840  017B70  D007               	bra	u4700
 20841  017B72                     u4707:
 20842  017B72  006F FFDB FFE9     	movff	tblptrl,fsr0l
 20843  017B78  006F FFDF FFEA     	movff	tblptrh,fsr0h
 20844  017B7E  50EF               	movf	indf0,w,c
 20845  017B80                     u4700:
 20846  017B80  0900               	iorlw	0
 20847  017B82  A4D8               	btfss	status,2,c
 20848  017B84  D7D5               	goto	l6215
 20849                           
 20850                           ;stkvar	_a @ sp[(-2)+0]
 20851                           ;stkvar	_s @ sp[(-2)+-2]
 20852  017B86  0EFC               	movlw	-4
 20853  017B88  006F FF8C  F032    	movff	plusw1,btemp
 20854  017B8E  0EFD               	movlw	-3
 20855  017B90  006F FF8C  F033    	movff	plusw1,btemp+1
 20856  017B96  0EFE               	movlw	-2
 20857  017B98  50E3               	movf	plusw1,w,c
 20858  017B9A  5E32               	subwf	btemp^0,f,c
 20859  017B9C  0EFF               	movlw	-1
 20860  017B9E  50E3               	movf	plusw1,w,c
 20861  017BA0  5A33               	subwfb	(btemp+1)^0,f,c
 20862                           
 20863                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 20864  017BA2  52E5               	movf	postdec1,f,c
 20865  017BA4  52E5               	movf	postdec1,f,c
 20866  017BA6  52E5               	movf	postdec1,f,c
 20867  017BA8  52E5               	movf	postdec1,f,c
 20868  017BAA  0012               	return		;funcret
 20869  017BAC                     __end_of_strlen:
 20870                           	opt callstack 0
 20871                           
 20872 ;; *************** function _fputs *****************
 20873 ;; Defined at:
 20874 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 20875 ;; Parameters:    Size  Location     Type
 20876 ;;  s               2  [STACK] PTR const unsigned char 
 20877 ;;		 -> dbuf(80), 
 20878 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20879 ;;		 -> f(6), NULL(0), 
 20880 ;; Auto vars:     Size  Location     Type
 20881 ;;  i               2  [STACK] int 
 20882 ;;  c               1  [STACK] unsigned char 
 20883 ;; Return value:  Size  Location     Type
 20884 ;;                  2  [STACK] int 
 20885 ;; Registers used:
 20886 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 20887 ;; Tracked objects:
 20888 ;;		On entry : 0/2
 20889 ;;		On exit  : 0/0
 20890 ;;		Unchanged: 0/0
 20891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20896 ;;Total ram usage:        0 bytes
 20897 ;; Hardware stack levels used:    1
 20898 ;; Hardware stack levels required when called:    9
 20899 ;; This function calls:
 20900 ;;		_fputc
 20901 ;; This function is called by:
 20902 ;;		_pad
 20903 ;; This function uses a reentrant model
 20904 ;;
 20905                           
 20906                           	psect	text69
 20907  017BAC                     __ptext69:
 20908                           	opt callstack 0
 20909  017BAC                     _fputs:
 20910                           	opt callstack 0
 20911                           
 20912                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20913  017BAC  52E6               	movf	postinc1,f,c
 20914  017BAE  52E6               	movf	postinc1,f,c
 20915  017BB0  52E6               	movf	postinc1,f,c
 20916                           
 20917                           ;stkvar	_i @ sp[(-3)+0]
 20918                           
 20919                           ;incstack = 0
 20920  017BB2  0EFD               	movlw	-3
 20921  017BB4  6AE3               	clrf	plusw1,c
 20922  017BB6  0EFE               	movlw	-2
 20923  017BB8  6AE3               	clrf	plusw1,c
 20924  017BBA  D01F               	goto	l9449
 20925  017BBC                     l9445:
 20926                           
 20927                           ;stkvar	_fp @ sp[(-3)+-4]
 20928  017BBC  0EF9               	movlw	-7
 20929  017BBE  006F FF8F FFE6     	movff	plusw1,postinc1
 20930  017BC4  006F FF8F FFE6     	movff	plusw1,postinc1
 20931                           
 20932                           ;stkvar	_c @ sp[(-5)+2]
 20933  017BCA  0EFD               	movlw	-3
 20934  017BCC  50E3               	movf	plusw1,w,c
 20935  017BCE  6EE6               	movwf	postinc1,c
 20936  017BD0  0E00               	movlw	0
 20937  017BD2  6EE6               	movwf	postinc1,c
 20938  017BD4  ECBF  F0B7         	call	_fputc	;wreg free
 20939                           
 20940                           ;stkvar	_i @ sp[(-3)+0]
 20941  017BD8  0EFD               	movlw	-3
 20942  017BDA  50E3               	movf	plusw1,w,c
 20943  017BDC  0F01               	addlw	1
 20944  017BDE  6E32               	movwf	btemp^0,c
 20945  017BE0  0EFD               	movlw	-3
 20946  017BE2  0060  F0CB  FFE3   	movff	btemp,plusw1
 20947  017BE8  6A32               	clrf	btemp^0,c
 20948  017BEA  0EFE               	movlw	-2
 20949  017BEC  50E3               	movf	plusw1,w,c
 20950  017BEE  2032               	addwfc	btemp^0,w,c
 20951  017BF0  6E32               	movwf	btemp^0,c
 20952  017BF2  0EFE               	movlw	-2
 20953  017BF4  0060  F0CB  FFE3   	movff	btemp,plusw1
 20954  017BFA                     l9449:
 20955                           
 20956                           ;stkvar	_i @ sp[(-3)+0]
 20957  017BFA  0EFD               	movlw	-3
 20958  017BFC  006F FF8C  F03C    	movff	plusw1,btemp+10
 20959  017C02  0EFE               	movlw	-2
 20960  017C04  006F FF8C  F03D    	movff	plusw1,btemp+11
 20961                           
 20962                           ;stkvar	_s @ sp[(-3)+-2]
 20963  017C0A  0EFB               	movlw	-5
 20964  017C0C  006F FF8C  F03A    	movff	plusw1,btemp+8
 20965  017C12  0EFC               	movlw	-4
 20966  017C14  006F FF8C  F03B    	movff	plusw1,btemp+9
 20967  017C1A  503C               	movf	(btemp+10)^0,w,c
 20968  017C1C  243A               	addwf	(btemp+8)^0,w,c
 20969  017C1E  6ED9               	movwf	fsr2l,c
 20970  017C20  503D               	movf	(btemp+11)^0,w,c
 20971  017C22  203B               	addwfc	(btemp+9)^0,w,c
 20972  017C24  6EDA               	movwf	fsr2h,c
 20973  017C26  50DF               	movf	indf2,w,c
 20974  017C28  6E3D               	movwf	(btemp+11)^0,c
 20975                           
 20976                           ;stkvar	_c @ sp[(-3)+2]
 20977  017C2A  0EFF               	movlw	-1
 20978  017C2C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20979  017C32  0EFF               	movlw	-1
 20980  017C34  50E3               	movf	plusw1,w,c
 20981  017C36  A4D8               	btfss	status,2,c
 20982  017C38  D7C1               	goto	l9445
 20983                           
 20984                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 20985  017C3A  0EF9               	movlw	249
 20986  017C3C  26E1               	addwf	fsr1l,f,c
 20987  017C3E  0EFF               	movlw	255
 20988  017C40  22E2               	addwfc	fsr1h,f,c
 20989  017C42  0012               	return		;funcret
 20990  017C44                     __end_of_fputs:
 20991                           	opt callstack 0
 20992                           
 20993 ;; *************** function _fputc *****************
 20994 ;; Defined at:
 20995 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 20996 ;; Parameters:    Size  Location     Type
 20997 ;;  c               2  [STACK] int 
 20998 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20999 ;;		 -> f(6), NULL(0), 
 21000 ;; Auto vars:     Size  Location     Type
 21001 ;;		None
 21002 ;; Return value:  Size  Location     Type
 21003 ;;                  2  [STACK] int 
 21004 ;; Registers used:
 21005 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 21006 ;; Tracked objects:
 21007 ;;		On entry : 0/5
 21008 ;;		On exit  : 0/0
 21009 ;;		Unchanged: 0/0
 21010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21015 ;;Total ram usage:        0 bytes
 21016 ;; Hardware stack levels used:    1
 21017 ;; Hardware stack levels required when called:    8
 21018 ;; This function calls:
 21019 ;;		_putch
 21020 ;; This function is called by:
 21021 ;;		_pad
 21022 ;;		_stoa
 21023 ;;		_vfpfcnvrt
 21024 ;;		_fputs
 21025 ;; This function uses a reentrant model
 21026 ;;
 21027                           
 21028                           	psect	text70
 21029  016F7E                     __ptext70:
 21030                           	opt callstack 0
 21031  016F7E                     _fputc:
 21032                           	opt callstack 13
 21033                           
 21034                           ;stkvar	_fp @ sp[(0)+-4]
 21035                           
 21036                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21037                           ;incstack = 0
 21038  016F7E  0EFC               	movlw	-4
 21039  016F80  006F FF8C  F032    	movff	plusw1,btemp
 21040  016F86  0EFD               	movlw	-3
 21041  016F88  50E3               	movf	plusw1,w,c
 21042  016F8A  1032               	iorwf	btemp^0,w,c
 21043  016F8C  B4D8               	btfsc	status,2,c
 21044  016F8E  D009               	goto	u9270
 21045                           
 21046                           ;stkvar	_fp @ sp[(0)+-4]
 21047  016F90  0EFC               	movlw	-4
 21048  016F92  006F FF8C  F032    	movff	plusw1,btemp
 21049  016F98  0EFD               	movlw	-3
 21050  016F9A  50E3               	movf	plusw1,w,c
 21051  016F9C  1032               	iorwf	btemp^0,w,c
 21052  016F9E  A4D8               	btfss	status,2,c
 21053  016FA0  D006               	goto	l9433
 21054  016FA2                     u9270:
 21055                           
 21056                           ;stkvar	_c @ sp[(0)+-2]
 21057  016FA2  0EFE               	movlw	-2
 21058  016FA4  50E3               	movf	plusw1,w,c
 21059  016FA6  6EE6               	movwf	postinc1,c
 21060  016FA8  EC9B  F0C7         	call	_putch	;wreg free
 21061  016FAC  D075               	goto	l2828
 21062  016FAE                     l9433:
 21063                           
 21064                           ;stkvar	_fp @ sp[(0)+-4]
 21065  016FAE  0EFC               	movlw	-4
 21066  016FB0  006F FF8C  F03C    	movff	plusw1,btemp+10
 21067  016FB6  0EFD               	movlw	-3
 21068  016FB8  006F FF8C  F03D    	movff	plusw1,btemp+11
 21069  016FBE  0E04               	movlw	4
 21070  016FC0  243C               	addwf	(btemp+10)^0,w,c
 21071  016FC2  6ED9               	movwf	fsr2l,c
 21072  016FC4  0E00               	movlw	0
 21073  016FC6  203D               	addwfc	(btemp+11)^0,w,c
 21074  016FC8  6EDA               	movwf	fsr2h,c
 21075  016FCA  50DE               	movf	postinc2,w,c
 21076  016FCC  10DE               	iorwf	postinc2,w,c
 21077  016FCE  B4D8               	btfsc	status,2,c
 21078  016FD0  D026               	goto	u9290
 21079                           
 21080                           ;stkvar	_fp @ sp[(0)+-4]
 21081  016FD2  0EFC               	movlw	-4
 21082  016FD4  006F FF8C  F03C    	movff	plusw1,btemp+10
 21083  016FDA  0EFD               	movlw	-3
 21084  016FDC  006F FF8C  F03D    	movff	plusw1,btemp+11
 21085  016FE2  0E04               	movlw	4
 21086  016FE4  243C               	addwf	(btemp+10)^0,w,c
 21087  016FE6  6ED9               	movwf	fsr2l,c
 21088  016FE8  0E00               	movlw	0
 21089  016FEA  203D               	addwfc	(btemp+11)^0,w,c
 21090  016FEC  6EDA               	movwf	fsr2h,c
 21091                           
 21092                           ;stkvar	_fp @ sp[(0)+-4]
 21093  016FEE  0EFC               	movlw	-4
 21094  016FF0  006F FF8C  F03C    	movff	plusw1,btemp+10
 21095  016FF6  0EFD               	movlw	-3
 21096  016FF8  006F FF8C  F03D    	movff	plusw1,btemp+11
 21097  016FFE  0E02               	movlw	2
 21098  017000  243C               	addwf	(btemp+10)^0,w,c
 21099  017002  6EE9               	movwf	fsr0l,c
 21100  017004  0E00               	movlw	0
 21101  017006  203D               	addwfc	(btemp+11)^0,w,c
 21102  017008  6EEA               	movwf	fsr0h,c
 21103  01700A  50DE               	movf	postinc2,w,c
 21104  01700C  5CEE               	subwf	postinc0,w,c
 21105  01700E  50EE               	movf	postinc0,w,c
 21106  017010  0A80               	xorlw	128
 21107  017012  6E32               	movwf	btemp^0,c
 21108  017014  50DE               	movf	postinc2,w,c
 21109  017016  0A80               	xorlw	128
 21110  017018  5832               	subwfb	btemp^0,w,c
 21111  01701A  B0D8               	btfsc	status,0,c
 21112  01701C  D03D               	goto	l2828
 21113  01701E                     u9290:
 21114                           
 21115                           ;stkvar	_c @ sp[(0)+-2]
 21116                           ;stkvar	_fp @ sp[(0)+-4]
 21117  01701E  0EFC               	movlw	-4
 21118  017020  006F FF8C  F03C    	movff	plusw1,btemp+10
 21119  017026  0EFD               	movlw	-3
 21120  017028  006F FF8C  F03D    	movff	plusw1,btemp+11
 21121  01702E  0E02               	movlw	2
 21122  017030  243C               	addwf	(btemp+10)^0,w,c
 21123  017032  6ED9               	movwf	fsr2l,c
 21124  017034  0E00               	movlw	0
 21125  017036  203D               	addwfc	(btemp+11)^0,w,c
 21126  017038  6EDA               	movwf	fsr2h,c
 21127  01703A  006F FF78  F03C    	movff	postinc2,btemp+10
 21128  017040  006F FF74  F03D    	movff	postdec2,btemp+11
 21129                           
 21130                           ;stkvar	_fp @ sp[(0)+-4]
 21131  017046  0EFC               	movlw	-4
 21132  017048  006F FF8F FFD9     	movff	plusw1,fsr2l
 21133  01704E  0EFD               	movlw	-3
 21134  017050  006F FF8F FFDA     	movff	plusw1,fsr2h
 21135  017056  006F FF78  F03A    	movff	postinc2,btemp+8
 21136  01705C  006F FF74  F03B    	movff	postdec2,btemp+9
 21137  017062  503C               	movf	(btemp+10)^0,w,c
 21138  017064  243A               	addwf	(btemp+8)^0,w,c
 21139  017066  6ED9               	movwf	fsr2l,c
 21140  017068  503D               	movf	(btemp+11)^0,w,c
 21141  01706A  203B               	addwfc	(btemp+9)^0,w,c
 21142  01706C  6EDA               	movwf	fsr2h,c
 21143  01706E  0EFE               	movlw	-2
 21144  017070  006F FF8F FFDF     	movff	plusw1,indf2
 21145                           
 21146                           ;stkvar	_fp @ sp[(0)+-4]
 21147  017076  0EFC               	movlw	-4
 21148  017078  006F FF8C  F03C    	movff	plusw1,btemp+10
 21149  01707E  0EFD               	movlw	-3
 21150  017080  006F FF8C  F03D    	movff	plusw1,btemp+11
 21151  017086  0E02               	movlw	2
 21152  017088  243C               	addwf	(btemp+10)^0,w,c
 21153  01708A  6ED9               	movwf	fsr2l,c
 21154  01708C  0E00               	movlw	0
 21155  01708E  203D               	addwfc	(btemp+11)^0,w,c
 21156  017090  6EDA               	movwf	fsr2h,c
 21157  017092  2ADE               	incf	postinc2,f,c
 21158  017094  0E00               	movlw	0
 21159  017096  22DD               	addwfc	postdec2,f,c
 21160  017098                     l2828:
 21161                           
 21162                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21163  017098  52E5               	movf	postdec1,f,c
 21164  01709A  52E5               	movf	postdec1,f,c
 21165  01709C  52E5               	movf	postdec1,f,c
 21166  01709E  52E5               	movf	postdec1,f,c
 21167  0170A0  0012               	return		;funcret
 21168  0170A2                     __end_of_fputc:
 21169                           	opt callstack 0
 21170                           
 21171 ;; *************** function _putch *****************
 21172 ;; Defined at:
 21173 ;;		line 155 in file "eadog.c"
 21174 ;; Parameters:    Size  Location     Type
 21175 ;;  c               1  [STACK] unsigned char 
 21176 ;; Auto vars:     Size  Location     Type
 21177 ;;		None
 21178 ;; Return value:  Size  Location     Type
 21179 ;;                  1  [STACK] void 
 21180 ;; Registers used:
 21181 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21182 ;; Tracked objects:
 21183 ;;		On entry : 0/5
 21184 ;;		On exit  : 0/0
 21185 ;;		Unchanged: 0/0
 21186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21191 ;;Total ram usage:        0 bytes
 21192 ;; Hardware stack levels used:    1
 21193 ;; Hardware stack levels required when called:    7
 21194 ;; This function calls:
 21195 ;;		_ringBufS_put_dma
 21196 ;; This function is called by:
 21197 ;;		_fputc
 21198 ;; This function uses a reentrant model
 21199 ;;
 21200                           
 21201                           	psect	text71
 21202  018F36                     __ptext71:
 21203                           	opt callstack 0
 21204  018F36                     _putch:
 21205                           	opt callstack 13
 21206                           
 21207                           ;eadog.c: 155: void putch(char c);eadog.c: 156: {;eadog.c: 157:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 21208                           ;stkvar	_c @ sp[(0)+-1]
 21209                           
 21210                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21211                           ;incstack = 0
 21212  018F36  0EFF               	movlw	-1
 21213  018F38  50E3               	movf	plusw1,w,c
 21214  018F3A  6EE6               	movwf	postinc1,c
 21215  018F3C  0060  F1FB  FFE6   	movff	_spi_link+6,postinc1
 21216  018F42  0060  F1FF  FFE6   	movff	_spi_link+7,postinc1
 21217  018F48  EC89  F0BC         	call	_ringBufS_put_dma	;wreg free
 21218                           
 21219                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 21220  018F4C  52E5               	movf	postdec1,f,c
 21221  018F4E  0012               	return		;funcret
 21222  018F50                     __end_of_putch:
 21223                           	opt callstack 0
 21224                           
 21225 ;; *************** function _ringBufS_put_dma *****************
 21226 ;; Defined at:
 21227 ;;		line 67 in file "ringbufs.c"
 21228 ;; Parameters:    Size  Location     Type
 21229 ;;  _this           2  [STACK] PTR struct ringBufS_t
 21230 ;;		 -> ring_buf1(67), 
 21231 ;;  c               1  [STACK] const unsigned char 
 21232 ;; Auto vars:     Size  Location     Type
 21233 ;;		None
 21234 ;; Return value:  Size  Location     Type
 21235 ;;                  1  [STACK] void 
 21236 ;; Registers used:
 21237 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21238 ;; Tracked objects:
 21239 ;;		On entry : 0/5
 21240 ;;		On exit  : 0/0
 21241 ;;		Unchanged: 0/0
 21242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21247 ;;Total ram usage:        0 bytes
 21248 ;; Hardware stack levels used:    1
 21249 ;; Hardware stack levels required when called:    6
 21250 ;; This function calls:
 21251 ;;		Nothing
 21252 ;; This function is called by:
 21253 ;;		_putch
 21254 ;; This function uses a reentrant model
 21255 ;;
 21256                           
 21257                           	psect	text72
 21258  017912                     __ptext72:
 21259                           	opt callstack 0
 21260  017912                     _ringBufS_put_dma:
 21261                           	opt callstack 13
 21262                           
 21263                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 21264                           ;stkvar	__this @ sp[(0)+-2]
 21265                           
 21266                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21267                           ;incstack = 0
 21268  017912  0EFE               	movlw	-2
 21269  017914  006F FF8C  F03C    	movff	plusw1,btemp+10
 21270  01791A  0EFF               	movlw	-1
 21271  01791C  006F FF8C  F03D    	movff	plusw1,btemp+11
 21272  017922  0E42               	movlw	66
 21273  017924  243C               	addwf	(btemp+10)^0,w,c
 21274  017926  6ED9               	movwf	fsr2l,c
 21275  017928  0E00               	movlw	0
 21276  01792A  203D               	addwfc	(btemp+11)^0,w,c
 21277  01792C  6EDA               	movwf	fsr2h,c
 21278  01792E  0E40               	movlw	64
 21279  017930  60DF               	cpfslt	indf2,c
 21280  017932  D040               	goto	l1467
 21281                           
 21282                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 21283                           ;stkvar	_c @ sp[(0)+-3]
 21284                           ;stkvar	__this @ sp[(0)+-2]
 21285  017934  0EFE               	movlw	-2
 21286  017936  006F FF8C  F03C    	movff	plusw1,btemp+10
 21287  01793C  0EFF               	movlw	-1
 21288  01793E  006F FF8C  F03D    	movff	plusw1,btemp+11
 21289  017944  0E40               	movlw	64
 21290  017946  243C               	addwf	(btemp+10)^0,w,c
 21291  017948  6ED9               	movwf	fsr2l,c
 21292  01794A  0E00               	movlw	0
 21293  01794C  203D               	addwfc	(btemp+11)^0,w,c
 21294  01794E  6EDA               	movwf	fsr2h,c
 21295  017950  50DF               	movf	indf2,w,c
 21296  017952  6E3D               	movwf	(btemp+11)^0,c
 21297                           
 21298                           ;stkvar	__this @ sp[(0)+-2]
 21299  017954  0EFE               	movlw	-2
 21300  017956  006F FF8C  F03A    	movff	plusw1,btemp+8
 21301  01795C  0EFF               	movlw	-1
 21302  01795E  006F FF8C  F03B    	movff	plusw1,btemp+9
 21303  017964  503D               	movf	(btemp+11)^0,w,c
 21304  017966  243A               	addwf	(btemp+8)^0,w,c
 21305  017968  6ED9               	movwf	fsr2l,c
 21306  01796A  0E00               	movlw	0
 21307  01796C  203B               	addwfc	(btemp+9)^0,w,c
 21308  01796E  6EDA               	movwf	fsr2h,c
 21309  017970  0EFD               	movlw	-3
 21310  017972  006F FF8F FFDF     	movff	plusw1,indf2
 21311                           
 21312                           ;ringbufs.c: 71:   ++_this->head;
 21313                           ;stkvar	__this @ sp[(0)+-2]
 21314  017978  0EFE               	movlw	-2
 21315  01797A  006F FF8C  F03C    	movff	plusw1,btemp+10
 21316  017980  0EFF               	movlw	-1
 21317  017982  006F FF8C  F03D    	movff	plusw1,btemp+11
 21318  017988  0E40               	movlw	64
 21319  01798A  243C               	addwf	(btemp+10)^0,w,c
 21320  01798C  6ED9               	movwf	fsr2l,c
 21321  01798E  0E00               	movlw	0
 21322  017990  203D               	addwfc	(btemp+11)^0,w,c
 21323  017992  6EDA               	movwf	fsr2h,c
 21324  017994  2ADF               	incf	indf2,f,c
 21325                           
 21326                           ;ringbufs.c: 72:   ++_this->count;
 21327                           ;stkvar	__this @ sp[(0)+-2]
 21328  017996  0EFE               	movlw	-2
 21329  017998  006F FF8C  F03C    	movff	plusw1,btemp+10
 21330  01799E  0EFF               	movlw	-1
 21331  0179A0  006F FF8C  F03D    	movff	plusw1,btemp+11
 21332  0179A6  0E42               	movlw	66
 21333  0179A8  243C               	addwf	(btemp+10)^0,w,c
 21334  0179AA  6ED9               	movwf	fsr2l,c
 21335  0179AC  0E00               	movlw	0
 21336  0179AE  203D               	addwfc	(btemp+11)^0,w,c
 21337  0179B0  6EDA               	movwf	fsr2h,c
 21338  0179B2  2ADF               	incf	indf2,f,c
 21339  0179B4                     l1467:
 21340                           
 21341                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 21342  0179B4  52E5               	movf	postdec1,f,c
 21343  0179B6  52E5               	movf	postdec1,f,c
 21344  0179B8  52E5               	movf	postdec1,f,c
 21345  0179BA  0012               	return		;funcret
 21346  0179BC                     __end_of_ringBufS_put_dma:
 21347                           	opt callstack 0
 21348                           
 21349 ;; *************** function _atoi *****************
 21350 ;; Defined at:
 21351 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 21352 ;; Parameters:    Size  Location     Type
 21353 ;;  s               2  [STACK] PTR const unsigned char 
 21354 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
 21355 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
 21356 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
 21357 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
 21358 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(18), 
 21359 ;;		 -> STR_10(14), STR_9(14), STR_8(17), STR_6(15), 
 21360 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 21361 ;; Auto vars:     Size  Location     Type
 21362 ;;  n               2  [STACK] int 
 21363 ;;  neg             2  [STACK] int 
 21364 ;; Return value:  Size  Location     Type
 21365 ;;                  2  [STACK] int 
 21366 ;; Registers used:
 21367 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 21368 ;; Tracked objects:
 21369 ;;		On entry : 0/5
 21370 ;;		On exit  : 0/0
 21371 ;;		Unchanged: 0/0
 21372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21377 ;;Total ram usage:        0 bytes
 21378 ;; Hardware stack levels used:    1
 21379 ;; Hardware stack levels required when called:    7
 21380 ;; This function calls:
 21381 ;;		_isdigit
 21382 ;;		_isspace
 21383 ;; This function is called by:
 21384 ;;		_vfpfcnvrt
 21385 ;; This function uses a reentrant model
 21386 ;;
 21387                           
 21388                           	psect	text73
 21389  0157F0                     __ptext73:
 21390                           	opt callstack 0
 21391  0157F0                     _atoi:
 21392                           	opt callstack 0
 21393                           
 21394                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21395  0157F0  0E09               	movlw	9
 21396  0157F2  26E1               	addwf	fsr1l,f,c
 21397  0157F4  0E00               	movlw	0
 21398  0157F6  22E2               	addwfc	fsr1h,f,c
 21399                           
 21400                           ;stkvar	_n @ sp[(-9)+5]
 21401                           
 21402                           ;incstack = 0
 21403  0157F8  0EFC               	movlw	-4
 21404  0157FA  6AE3               	clrf	plusw1,c
 21405  0157FC  0EFD               	movlw	-3
 21406  0157FE  6AE3               	clrf	plusw1,c
 21407                           
 21408                           ;stkvar	_neg @ sp[(-9)+7]
 21409  015800  0EFE               	movlw	-2
 21410  015802  6AE3               	clrf	plusw1,c
 21411  015804  0EFF               	movlw	-1
 21412  015806  6AE3               	clrf	plusw1,c
 21413  015808  D011               	goto	l7773
 21414  01580A                     l7771:
 21415                           
 21416                           ;stkvar	_s @ sp[(-9)+-2]
 21417  01580A  0EF5               	movlw	-11
 21418  01580C  50E3               	movf	plusw1,w,c
 21419  01580E  0F01               	addlw	1
 21420  015810  6E32               	movwf	btemp^0,c
 21421  015812  0EF5               	movlw	-11
 21422  015814  0060  F0CB  FFE3   	movff	btemp,plusw1
 21423  01581A  6A32               	clrf	btemp^0,c
 21424  01581C  0EF6               	movlw	-10
 21425  01581E  50E3               	movf	plusw1,w,c
 21426  015820  2032               	addwfc	btemp^0,w,c
 21427  015822  6E32               	movwf	btemp^0,c
 21428  015824  0EF6               	movlw	-10
 21429  015826  0060  F0CB  FFE3   	movff	btemp,plusw1
 21430  01582C                     l7773:
 21431                           
 21432                           ;stkvar	_atoi$4934 @ sp[(-9)+4]
 21433  01582C  0EFB               	movlw	-5
 21434  01582E  6AE3               	clrf	plusw1,c
 21435  015830  2AE3               	incf	plusw1,f,c
 21436                           
 21437                           ;stkvar	_s @ sp[(-9)+-2]
 21438  015832  50E1               	movf	fsr1l,w,c
 21439  015834  0FF5               	addlw	-11
 21440  015836  6ED9               	movwf	fsr2l,c
 21441  015838  50E2               	movf	fsr1h,w,c
 21442  01583A  6EDA               	movwf	fsr2h,c
 21443  01583C  0EFF               	movlw	255
 21444  01583E  22DA               	addwfc	fsr2h,f,c
 21445  015840  006F FF7B FFF6     	movff	postinc2,tblptrl
 21446  015846  006F FF77 FFF7     	movff	postdec2,tblptrh
 21447  01584C                     	if	0	;tblptru may be non-zero
 21448  01584C                     	endif
 21449  01584C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21450  01584C  0E00               	movlw	low (__mediumconst shr (0+16))
 21451  01584E  6EF8               	movwf	tblptru,c
 21452  015850                     	endif
 21453  015850  0008               	tblrd		*
 21454  015852  50F5               	movf	tablat,w,c
 21455  015854  0A20               	xorlw	32
 21456  015856  B4D8               	btfsc	status,2,c
 21457  015858  D023               	goto	l7781
 21458  01585A  0EF7               	movlw	247
 21459  01585C  6E3C               	movwf	(btemp+10)^0,c
 21460  01585E  0EFF               	movlw	255
 21461  015860  6E3D               	movwf	(btemp+11)^0,c
 21462                           
 21463                           ;stkvar	_s @ sp[(-9)+-2]
 21464  015862  50E1               	movf	fsr1l,w,c
 21465  015864  0FF5               	addlw	-11
 21466  015866  6ED9               	movwf	fsr2l,c
 21467  015868  50E2               	movf	fsr1h,w,c
 21468  01586A  6EDA               	movwf	fsr2h,c
 21469  01586C  0EFF               	movlw	255
 21470  01586E  22DA               	addwfc	fsr2h,f,c
 21471  015870  006F FF7B FFF6     	movff	postinc2,tblptrl
 21472  015876  006F FF77 FFF7     	movff	postdec2,tblptrh
 21473  01587C                     	if	0	;tblptru may be non-zero
 21474  01587C                     	endif
 21475  01587C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21476  01587C  0E00               	movlw	low (__mediumconst shr (0+16))
 21477  01587E  6EF8               	movwf	tblptru,c
 21478  015880                     	endif
 21479  015880  0008               	tblrd		*
 21480  015882  50F5               	movf	tablat,w,c
 21481  015884  6E3A               	movwf	(btemp+8)^0,c
 21482  015886  6A3B               	clrf	(btemp+9)^0,c
 21483  015888  503C               	movf	(btemp+10)^0,w,c
 21484  01588A  263A               	addwf	(btemp+8)^0,f,c
 21485  01588C  503D               	movf	(btemp+11)^0,w,c
 21486  01588E  223B               	addwfc	(btemp+9)^0,f,c
 21487  015890  503B               	movf	(btemp+9)^0,w,c
 21488  015892  E104               	bnz	u7750
 21489  015894  0E05               	movlw	5
 21490  015896  5C3A               	subwf	(btemp+8)^0,w,c
 21491  015898  A0D8               	btfss	status,0,c
 21492  01589A  D002               	goto	l7781
 21493  01589C                     u7750:
 21494                           
 21495                           ;stkvar	_atoi$4934 @ sp[(-9)+4]
 21496  01589C  0EFB               	movlw	-5
 21497  01589E  6AE3               	clrf	plusw1,c
 21498  0158A0                     l7781:
 21499                           
 21500                           ;stkvar	_atoi$4934 @ sp[(-9)+4]
 21501  0158A0  0EFB               	movlw	-5
 21502  0158A2  50E3               	movf	plusw1,w,c
 21503  0158A4  6E3C               	movwf	(btemp+10)^0,c
 21504  0158A6  6A3D               	clrf	(btemp+11)^0,c
 21505                           
 21506                           ;stkvar	_atoi$4933 @ sp[(-9)+2]
 21507  0158A8  0EF9               	movlw	-7
 21508  0158AA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21509  0158B0  0EFA               	movlw	-6
 21510  0158B2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21511                           
 21512                           ;stkvar	_atoi$4933 @ sp[(-9)+2]
 21513  0158B8  0EF9               	movlw	-7
 21514  0158BA  006F FF8C  F032    	movff	plusw1,btemp
 21515  0158C0  0EFA               	movlw	-6
 21516  0158C2  50E3               	movf	plusw1,w,c
 21517  0158C4  1032               	iorwf	btemp^0,w,c
 21518  0158C6  B4D8               	btfsc	status,2,c
 21519  0158C8  D01F               	goto	l7791
 21520  0158CA  D79F               	goto	l7771
 21521  0158CC                     l7787:
 21522  0158CC  0E01               	movlw	1
 21523  0158CE  6E3C               	movwf	(btemp+10)^0,c
 21524  0158D0  0E00               	movlw	0
 21525  0158D2  6E3D               	movwf	(btemp+11)^0,c
 21526                           
 21527                           ;stkvar	_neg @ sp[(-9)+7]
 21528  0158D4  0EFE               	movlw	-2
 21529  0158D6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21530  0158DC  0EFF               	movlw	-1
 21531  0158DE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21532  0158E4                     l7789:
 21533                           
 21534                           ;stkvar	_s @ sp[(-9)+-2]
 21535  0158E4  0EF5               	movlw	-11
 21536  0158E6  50E3               	movf	plusw1,w,c
 21537  0158E8  0F01               	addlw	1
 21538  0158EA  6E32               	movwf	btemp^0,c
 21539  0158EC  0EF5               	movlw	-11
 21540  0158EE  0060  F0CB  FFE3   	movff	btemp,plusw1
 21541  0158F4  6A32               	clrf	btemp^0,c
 21542  0158F6  0EF6               	movlw	-10
 21543  0158F8  50E3               	movf	plusw1,w,c
 21544  0158FA  2032               	addwfc	btemp^0,w,c
 21545  0158FC  6E32               	movwf	btemp^0,c
 21546  0158FE  0EF6               	movlw	-10
 21547  015900  0060  F0CB  FFE3   	movff	btemp,plusw1
 21548  015906  D053               	goto	l7797
 21549  015908                     l7791:
 21550                           
 21551                           ;stkvar	_s @ sp[(-9)+-2]
 21552  015908  50E1               	movf	fsr1l,w,c
 21553  01590A  0FF5               	addlw	-11
 21554  01590C  6ED9               	movwf	fsr2l,c
 21555  01590E  50E2               	movf	fsr1h,w,c
 21556  015910  6EDA               	movwf	fsr2h,c
 21557  015912  0EFF               	movlw	255
 21558  015914  22DA               	addwfc	fsr2h,f,c
 21559  015916  006F FF7B FFF6     	movff	postinc2,tblptrl
 21560  01591C  006F FF77 FFF7     	movff	postdec2,tblptrh
 21561  015922                     	if	0	;tblptru may be non-zero
 21562  015922                     	endif
 21563  015922                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21564  015922  0E00               	movlw	low (__mediumconst shr (0+16))
 21565  015924  6EF8               	movwf	tblptru,c
 21566  015926                     	endif
 21567  015926  0008               	tblrd		*
 21568  015928  50F5               	movf	tablat,w,c
 21569  01592A  6E3C               	movwf	(btemp+10)^0,c
 21570  01592C  6A3D               	clrf	(btemp+11)^0,c
 21571                           
 21572                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21573                           ; Switch size 1, requested type "simple"
 21574                           ; Number of cases is 1, Range of values is 0 to 0
 21575                           ; switch strategies available:
 21576                           ; Name         Instructions Cycles
 21577                           ; simple_byte            4     3 (average)
 21578                           ;	Chosen strategy is simple_byte
 21579  01592E  503D               	movf	(btemp+11)^0,w,c
 21580  015930  0A00               	xorlw	0	; case 0
 21581  015932  A4D8               	btfss	status,2,c
 21582  015934  D03C               	goto	l7797
 21583                           
 21584                           ; Switch size 1, requested type "simple"
 21585                           ; Number of cases is 2, Range of values is 43 to 45
 21586                           ; switch strategies available:
 21587                           ; Name         Instructions Cycles
 21588                           ; simple_byte            7     4 (average)
 21589                           ;	Chosen strategy is simple_byte
 21590  015936  503C               	movf	(btemp+10)^0,w,c
 21591  015938  0A2B               	xorlw	43	; case 43
 21592  01593A  B4D8               	btfsc	status,2,c
 21593  01593C  D7D3               	goto	l7789
 21594  01593E  0A06               	xorlw	6	; case 45
 21595  015940  B4D8               	btfsc	status,2,c
 21596  015942  D7C4               	goto	l7787
 21597  015944  D034               	goto	l7797
 21598  015946                     l7793:
 21599                           
 21600                           ;stkvar	_n @ sp[(-9)+5]
 21601  015946  0EFC               	movlw	-4
 21602  015948  006F FF8C  F03C    	movff	plusw1,btemp+10
 21603  01594E  0EFD               	movlw	-3
 21604  015950  006F FF8C  F03D    	movff	plusw1,btemp+11
 21605  015956  0E0A               	movlw	10
 21606  015958  023C               	mulwf	(btemp+10)^0,c
 21607  01595A  006F FFCC  F03A    	movff	prodl,btemp+8
 21608  015960  006F FFD0  F03B    	movff	prodh,btemp+9
 21609  015966  023D               	mulwf	(btemp+11)^0,c
 21610  015968  50F3               	movf	prodl,w,c
 21611  01596A  263B               	addwf	(btemp+9)^0,f,c
 21612                           
 21613                           ;stkvar	_s @ sp[(-9)+-2]
 21614  01596C  50E1               	movf	fsr1l,w,c
 21615  01596E  0FF5               	addlw	-11
 21616  015970  6ED9               	movwf	fsr2l,c
 21617  015972  50E2               	movf	fsr1h,w,c
 21618  015974  6EDA               	movwf	fsr2h,c
 21619  015976  0EFF               	movlw	255
 21620  015978  22DA               	addwfc	fsr2h,f,c
 21621  01597A  006F FF7B FFF6     	movff	postinc2,tblptrl
 21622  015980  006F FF77 FFF7     	movff	postdec2,tblptrh
 21623  015986                     	if	0	;tblptru may be non-zero
 21624  015986                     	endif
 21625  015986                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21626  015986  0E00               	movlw	low (__mediumconst shr (0+16))
 21627  015988  6EF8               	movwf	tblptru,c
 21628  01598A                     	endif
 21629  01598A  0008               	tblrd		*
 21630  01598C  50F5               	movf	tablat,w,c
 21631  01598E  5E3A               	subwf	(btemp+8)^0,f,c
 21632  015990  0E00               	movlw	0
 21633  015992  5A3B               	subwfb	(btemp+9)^0,f,c
 21634  015994  0E30               	movlw	48
 21635  015996  263A               	addwf	(btemp+8)^0,f,c
 21636  015998  0E00               	movlw	0
 21637  01599A  223B               	addwfc	(btemp+9)^0,f,c
 21638                           
 21639                           ;stkvar	_n @ sp[(-9)+5]
 21640  01599C  0EFC               	movlw	-4
 21641  01599E  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 21642  0159A4  0EFD               	movlw	-3
 21643  0159A6  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 21644  0159AC  D79B               	goto	l7789
 21645  0159AE                     l7797:
 21646  0159AE  0ED0               	movlw	208
 21647  0159B0  6E3C               	movwf	(btemp+10)^0,c
 21648  0159B2  0EFF               	movlw	255
 21649  0159B4  6E3D               	movwf	(btemp+11)^0,c
 21650                           
 21651                           ;stkvar	_s @ sp[(-9)+-2]
 21652  0159B6  50E1               	movf	fsr1l,w,c
 21653  0159B8  0FF5               	addlw	-11
 21654  0159BA  6ED9               	movwf	fsr2l,c
 21655  0159BC  50E2               	movf	fsr1h,w,c
 21656  0159BE  6EDA               	movwf	fsr2h,c
 21657  0159C0  0EFF               	movlw	255
 21658  0159C2  22DA               	addwfc	fsr2h,f,c
 21659  0159C4  006F FF7B FFF6     	movff	postinc2,tblptrl
 21660  0159CA  006F FF77 FFF7     	movff	postdec2,tblptrh
 21661  0159D0                     	if	0	;tblptru may be non-zero
 21662  0159D0                     	endif
 21663  0159D0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21664  0159D0  0E00               	movlw	low (__mediumconst shr (0+16))
 21665  0159D2  6EF8               	movwf	tblptru,c
 21666  0159D4                     	endif
 21667  0159D4  0008               	tblrd		*
 21668  0159D6  50F5               	movf	tablat,w,c
 21669  0159D8  6E3A               	movwf	(btemp+8)^0,c
 21670  0159DA  6A3B               	clrf	(btemp+9)^0,c
 21671  0159DC  503C               	movf	(btemp+10)^0,w,c
 21672  0159DE  263A               	addwf	(btemp+8)^0,f,c
 21673  0159E0  503D               	movf	(btemp+11)^0,w,c
 21674  0159E2  223B               	addwfc	(btemp+9)^0,f,c
 21675  0159E4  503B               	movf	(btemp+9)^0,w,c
 21676  0159E6  E106               	bnz	u7770
 21677  0159E8  0E0A               	movlw	10
 21678  0159EA  5C3A               	subwf	(btemp+8)^0,w,c
 21679  0159EC  B0D8               	btfsc	status,0,c
 21680  0159EE  D002               	goto	u7770
 21681  0159F0  0E01               	movlw	1
 21682  0159F2  D001               	goto	u7780
 21683  0159F4                     u7770:
 21684  0159F4  0E00               	movlw	0
 21685  0159F6                     u7780:
 21686  0159F6  6E3C               	movwf	(btemp+10)^0,c
 21687  0159F8  6A3D               	clrf	(btemp+11)^0,c
 21688                           
 21689                           ;stkvar	_atoi$4935 @ sp[(-9)+0]
 21690  0159FA  0EF7               	movlw	-9
 21691  0159FC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 21692  015A02  0EF8               	movlw	-8
 21693  015A04  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 21694                           
 21695                           ;stkvar	_atoi$4935 @ sp[(-9)+0]
 21696  015A0A  0EF7               	movlw	-9
 21697  015A0C  006F FF8C  F032    	movff	plusw1,btemp
 21698  015A12  0EF8               	movlw	-8
 21699  015A14  50E3               	movf	plusw1,w,c
 21700  015A16  1032               	iorwf	btemp^0,w,c
 21701  015A18  A4D8               	btfss	status,2,c
 21702  015A1A  D795               	goto	l7793
 21703                           
 21704                           ;stkvar	_neg @ sp[(-9)+7]
 21705  015A1C  0EFE               	movlw	-2
 21706  015A1E  006F FF8C  F032    	movff	plusw1,btemp
 21707  015A24  0EFF               	movlw	-1
 21708  015A26  50E3               	movf	plusw1,w,c
 21709  015A28  1032               	iorwf	btemp^0,w,c
 21710  015A2A  A4D8               	btfss	status,2,c
 21711  015A2C  D00E               	goto	l7807
 21712                           
 21713                           ;stkvar	_n @ sp[(-9)+5]
 21714  015A2E  0EFC               	movlw	-4
 21715  015A30  006F FF8C  F032    	movff	plusw1,btemp
 21716  015A36  1E32               	comf	btemp^0,f,c
 21717  015A38  0EFD               	movlw	-3
 21718  015A3A  006F FF8C  F033    	movff	plusw1,btemp+1
 21719  015A40  1E33               	comf	(btemp+1)^0,f,c
 21720  015A42  2A32               	incf	btemp^0,f,c
 21721  015A44  B4D8               	btfsc	status,2,c
 21722  015A46  2A33               	incf	(btemp+1)^0,f,c
 21723  015A48  D008               	goto	l2764
 21724  015A4A                     l7807:
 21725                           
 21726                           ;stkvar	_n @ sp[(-9)+5]
 21727  015A4A  0EFC               	movlw	-4
 21728  015A4C  006F FF8C  F032    	movff	plusw1,btemp
 21729  015A52  0EFD               	movlw	-3
 21730  015A54  006F FF8C  F033    	movff	plusw1,btemp+1
 21731  015A5A                     l2764:
 21732                           
 21733                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 21734  015A5A  0EF5               	movlw	245
 21735  015A5C  26E1               	addwf	fsr1l,f,c
 21736  015A5E  0EFF               	movlw	255
 21737  015A60  22E2               	addwfc	fsr1h,f,c
 21738  015A62  0012               	return		;funcret
 21739  015A64                     __end_of_atoi:
 21740                           	opt callstack 0
 21741                           
 21742 ;; *************** function _isspace *****************
 21743 ;; Defined at:
 21744 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 21745 ;; Parameters:    Size  Location     Type
 21746 ;;  c               2  [STACK] int 
 21747 ;; Auto vars:     Size  Location     Type
 21748 ;;		None
 21749 ;; Return value:  Size  Location     Type
 21750 ;;                  2  [STACK] int 
 21751 ;; Registers used:
 21752 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 21753 ;; Tracked objects:
 21754 ;;		On entry : 0/0
 21755 ;;		On exit  : 0/0
 21756 ;;		Unchanged: 0/0
 21757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21762 ;;Total ram usage:        0 bytes
 21763 ;; Hardware stack levels used:    1
 21764 ;; Hardware stack levels required when called:    6
 21765 ;; This function calls:
 21766 ;;		Nothing
 21767 ;; This function is called by:
 21768 ;;		_atoi
 21769 ;; This function uses a reentrant model
 21770 ;;
 21771                           
 21772                           	psect	text74
 21773  0184DE                     __ptext74:
 21774                           	opt callstack 0
 21775  0184DE                     _isspace:
 21776                           	opt callstack 0
 21777                           
 21778                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21779  0184DE  52E6               	movf	postinc1,f,c
 21780                           
 21781                           ;stkvar	_isspace$4973 @ sp[(-1)+0]
 21782                           
 21783                           ;incstack = 0
 21784  0184E0  0EFF               	movlw	-1
 21785  0184E2  6AE3               	clrf	plusw1,c
 21786  0184E4  2AE3               	incf	plusw1,f,c
 21787                           
 21788                           ;stkvar	_c @ sp[(-1)+-2]
 21789  0184E6  0EFD               	movlw	-3
 21790  0184E8  006F FF8C  F032    	movff	plusw1,btemp
 21791  0184EE  0E20               	movlw	32
 21792  0184F0  1832               	xorwf	btemp^0,w,c
 21793  0184F2  E104               	bnz	u6660
 21794  0184F4  0EFE               	movlw	-2
 21795  0184F6  50E3               	movf	plusw1,w,c
 21796  0184F8  B4D8               	btfsc	status,2,c
 21797  0184FA  D012               	goto	l7217
 21798  0184FC                     u6660:
 21799                           
 21800                           ;stkvar	_c @ sp[(-1)+-2]
 21801  0184FC  0EFD               	movlw	-3
 21802  0184FE  50E3               	movf	plusw1,w,c
 21803  018500  0FF7               	addlw	247
 21804  018502  6E3C               	movwf	(btemp+10)^0,c
 21805  018504  0EFE               	movlw	-2
 21806  018506  006F FF8C  F03D    	movff	plusw1,btemp+11
 21807  01850C  0EFF               	movlw	255
 21808  01850E  223D               	addwfc	(btemp+11)^0,f,c
 21809  018510  503D               	movf	(btemp+11)^0,w,c
 21810  018512  E104               	bnz	u6670
 21811  018514  0E05               	movlw	5
 21812  018516  5C3C               	subwf	(btemp+10)^0,w,c
 21813  018518  A0D8               	btfss	status,0,c
 21814  01851A  D002               	goto	l7217
 21815  01851C                     u6670:
 21816                           
 21817                           ;stkvar	_isspace$4973 @ sp[(-1)+0]
 21818  01851C  0EFF               	movlw	-1
 21819  01851E  6AE3               	clrf	plusw1,c
 21820  018520                     l7217:
 21821                           
 21822                           ;stkvar	_isspace$4973 @ sp[(-1)+0]
 21823  018520  0EFF               	movlw	-1
 21824  018522  50E3               	movf	plusw1,w,c
 21825  018524  6E32               	movwf	btemp^0,c
 21826  018526  6A33               	clrf	(btemp+1)^0,c
 21827                           
 21828                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 21829  018528  52E5               	movf	postdec1,f,c
 21830  01852A  52E5               	movf	postdec1,f,c
 21831  01852C  52E5               	movf	postdec1,f,c
 21832  01852E  0012               	return		;funcret
 21833  018530                     __end_of_isspace:
 21834                           	opt callstack 0
 21835                           
 21836 ;; *************** function _isdigit *****************
 21837 ;; Defined at:
 21838 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 21839 ;; Parameters:    Size  Location     Type
 21840 ;;  c               2  [STACK] int 
 21841 ;; Auto vars:     Size  Location     Type
 21842 ;;		None
 21843 ;; Return value:  Size  Location     Type
 21844 ;;                  2  [STACK] int 
 21845 ;; Registers used:
 21846 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 21847 ;; Tracked objects:
 21848 ;;		On entry : 0/0
 21849 ;;		On exit  : 0/0
 21850 ;;		Unchanged: 0/0
 21851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21856 ;;Total ram usage:        0 bytes
 21857 ;; Hardware stack levels used:    1
 21858 ;; Hardware stack levels required when called:    6
 21859 ;; This function calls:
 21860 ;;		Nothing
 21861 ;; This function is called by:
 21862 ;;		_vfpfcnvrt
 21863 ;;		_atoi
 21864 ;; This function uses a reentrant model
 21865 ;;
 21866                           
 21867                           	psect	text75
 21868  0189C2                     __ptext75:
 21869                           	opt callstack 0
 21870  0189C2                     _isdigit:
 21871                           	opt callstack 18
 21872                           
 21873                           ;stkvar	_c @ sp[(0)+-2]
 21874                           
 21875                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21876                           ;incstack = 0
 21877  0189C2  0EFE               	movlw	-2
 21878  0189C4  50E3               	movf	plusw1,w,c
 21879  0189C6  0FD0               	addlw	208
 21880  0189C8  6E3C               	movwf	(btemp+10)^0,c
 21881  0189CA  0EFF               	movlw	-1
 21882  0189CC  006F FF8C  F03D    	movff	plusw1,btemp+11
 21883  0189D2  0EFF               	movlw	255
 21884  0189D4  223D               	addwfc	(btemp+11)^0,f,c
 21885  0189D6  503D               	movf	(btemp+11)^0,w,c
 21886  0189D8  E106               	bnz	u5510
 21887  0189DA  0E0A               	movlw	10
 21888  0189DC  5C3C               	subwf	(btemp+10)^0,w,c
 21889  0189DE  B0D8               	btfsc	status,0,c
 21890  0189E0  D002               	goto	u5510
 21891  0189E2  0E01               	movlw	1
 21892  0189E4  D001               	goto	u5520
 21893  0189E6                     u5510:
 21894  0189E6  0E00               	movlw	0
 21895  0189E8                     u5520:
 21896  0189E8  6E32               	movwf	btemp^0,c
 21897  0189EA  6A33               	clrf	(btemp+1)^0,c
 21898                           
 21899                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 21900  0189EC  52E5               	movf	postdec1,f,c
 21901  0189EE  52E5               	movf	postdec1,f,c
 21902  0189F0  0012               	return		;funcret
 21903  0189F2                     __end_of_isdigit:
 21904                           	opt callstack 0
 21905                           
 21906 ;; *************** function _set_vterm *****************
 21907 ;; Defined at:
 21908 ;;		line 104 in file "mconfig.c"
 21909 ;; Parameters:    Size  Location     Type
 21910 ;;  vterm           1  [STACK] const unsigned char 
 21911 ;; Auto vars:     Size  Location     Type
 21912 ;;		None
 21913 ;; Return value:  Size  Location     Type
 21914 ;;                  1  [STACK] unsigned char 
 21915 ;; Registers used:
 21916 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+11
 21917 ;; Tracked objects:
 21918 ;;		On entry : 0/0
 21919 ;;		On exit  : 3F/5
 21920 ;;		Unchanged: 0/0
 21921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21926 ;;Total ram usage:        0 bytes
 21927 ;; Hardware stack levels used:    1
 21928 ;; Hardware stack levels required when called:    6
 21929 ;; This function calls:
 21930 ;;		Nothing
 21931 ;; This function is called by:
 21932 ;;		_main
 21933 ;;		_check_help
 21934 ;; This function uses a reentrant model
 21935 ;;
 21936                           
 21937                           	psect	text76
 21938  018F00                     __ptext76:
 21939                           	opt callstack 0
 21940  018F00                     _set_vterm:
 21941                           	opt callstack 24
 21942                           
 21943                           ;mconfig.c: 104: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 105: {;mconfig.c: 106
      +                          :  D.vterm = vterm & 0x03;
 21944                           ;stkvar	_vterm @ sp[(0)+-1]
 21945                           
 21946                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21947                           ;incstack = 0
 21948  018F00  0EFF               	movlw	-1
 21949  018F02  006F FF8C  F03D    	movff	plusw1,btemp+11
 21950  018F08  0E03               	movlw	3
 21951  018F0A  163D               	andwf	(btemp+11)^0,f,c
 21952  018F0C  0105               	movlb	5	; () banked
 21953  018F0E  51D8               	movf	(_D+216)& (0+255),w,b
 21954  018F10  183D               	xorwf	(btemp+11)^0,w,c
 21955  018F12  0BFE               	andlw	-2
 21956  018F14  183D               	xorwf	(btemp+11)^0,w,c
 21957  018F16  6FD8               	movwf	(_D+216)& (0+255),b
 21958                           
 21959                           ; BSR set to: 5
 21960                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 21961  018F18  52E5               	movf	postdec1,f,c
 21962  018F1A  0012               	return		;funcret
 21963  018F1C                     __end_of_set_vterm:
 21964                           	opt callstack 0
 21965                           
 21966 ;; *************** function _set_temp_display_help *****************
 21967 ;; Defined at:
 21968 ;;		line 208 in file "mconfig.c"
 21969 ;; Parameters:    Size  Location     Type
 21970 ;;  new_response    1  [STACK] const enum E16501
 21971 ;; Auto vars:     Size  Location     Type
 21972 ;;		None
 21973 ;; Return value:  Size  Location     Type
 21974 ;;                  1  [STACK] enum E16501
 21975 ;; Registers used:
 21976 ;;		wreg, fsr1l, fsr1h
 21977 ;; Tracked objects:
 21978 ;;		On entry : 0/5
 21979 ;;		On exit  : 3F/1
 21980 ;;		Unchanged: 0/0
 21981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21986 ;;Total ram usage:        0 bytes
 21987 ;; Hardware stack levels used:    1
 21988 ;; Hardware stack levels required when called:    6
 21989 ;; This function calls:
 21990 ;;		Nothing
 21991 ;; This function is called by:
 21992 ;;		_check_help
 21993 ;; This function uses a reentrant model
 21994 ;;
 21995                           
 21996                           	psect	text77
 21997  019002                     __ptext77:
 21998                           	opt callstack 0
 21999  019002                     _set_temp_display_help:
 22000                           	opt callstack 23
 22001                           
 22002                           ;mconfig.c: 208: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 209: {;mconfig.c: 210:  static D_CODES old_info;;mconfig.c: 212:  old_info = V.respon
      +                          se.help_temp;
 22003                           
 22004                           ; BSR set to: 5
 22005                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22006                           ;incstack = 0
 22007  019002  0101               	movlb	1	; () banked
 22008  019004  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 22009                           
 22010                           ; BSR set to: 1
 22011                           ;mconfig.c: 213:  V.response.help_temp = new_response_info;
 22012                           ;stkvar	_new_response_info @ sp[(0)+-1]
 22013  019006  0EFF               	movlw	-1
 22014  019008  006F FF8C  F1A4    	movff	plusw1,_V+164	;volatile
 22015                           
 22016                           ; BSR set to: 1
 22017                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 22018  01900E  52E5               	movf	postdec1,f,c
 22019  019010  0012               	return		;funcret
 22020  019012                     __end_of_set_temp_display_help:
 22021                           	opt callstack 0
 22022                           
 22023 ;; *************** function _set_display_info *****************
 22024 ;; Defined at:
 22025 ;;		line 197 in file "mconfig.c"
 22026 ;; Parameters:    Size  Location     Type
 22027 ;;  new_response    1  [STACK] const enum E16501
 22028 ;; Auto vars:     Size  Location     Type
 22029 ;;		None
 22030 ;; Return value:  Size  Location     Type
 22031 ;;                  1  [STACK] enum E16986
 22032 ;; Registers used:
 22033 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22034 ;; Tracked objects:
 22035 ;;		On entry : 0/39
 22036 ;;		On exit  : 0/0
 22037 ;;		Unchanged: 0/0
 22038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22043 ;;Total ram usage:        0 bytes
 22044 ;; Hardware stack levels used:    1
 22045 ;; Hardware stack levels required when called:    7
 22046 ;; This function calls:
 22047 ;;		_TimerDone
 22048 ;; This function is called by:
 22049 ;;		_main
 22050 ;;		_check_help
 22051 ;; This function uses a reentrant model
 22052 ;;
 22053                           
 22054                           	psect	text78
 22055  018E8A                     __ptext78:
 22056                           	opt callstack 0
 22057  018E8A                     _set_display_info:
 22058                           	opt callstack 23
 22059                           
 22060                           ;mconfig.c: 197: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 19
      +                          8: {;mconfig.c: 199:  static D_CODES old_info = DIS_STR;;mconfig.c: 201:  if (TimerDone(
      +                          TMR_INFO)) {
 22061                           
 22062                           ; BSR set to: 1
 22063                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22064                           ;incstack = 0
 22065  018E8A  0E07               	movlw	7
 22066  018E8C  6EE6               	movwf	postinc1,c
 22067  018E8E  ECCF  F0C6         	call	_TimerDone	;wreg free
 22068  018E92  5032               	movf	btemp^0,w,c
 22069  018E94  B4D8               	btfsc	status,2,c
 22070  018E96  D006               	goto	l1604
 22071                           
 22072                           ;mconfig.c: 202:   old_info = V.response.info;
 22073  018E98  0101               	movlb	1	; () banked
 22074  018E9A  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 22075                           
 22076                           ; BSR set to: 1
 22077                           ;mconfig.c: 203:   V.response.info = new_response_info;
 22078                           ;stkvar	_new_response_info @ sp[(0)+-1]
 22079  018E9C  0EFF               	movlw	-1
 22080  018E9E  006F FF8C  F1A3    	movff	plusw1,_V+163	;volatile
 22081  018EA4                     l1604:
 22082                           
 22083                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 22084  018EA4  52E5               	movf	postdec1,f,c
 22085  018EA6  0012               	return		;funcret
 22086  018EA8                     __end_of_set_display_info:
 22087                           	opt callstack 0
 22088                           
 22089 ;; *************** function _mode_lamp_dim *****************
 22090 ;; Defined at:
 22091 ;;		line 13 in file "mconfig.c"
 22092 ;; Parameters:    Size  Location     Type
 22093 ;;  level           2  [STACK] const unsigned short 
 22094 ;; Auto vars:     Size  Location     Type
 22095 ;;		None
 22096 ;; Return value:  Size  Location     Type
 22097 ;;                  1  [STACK] void 
 22098 ;; Registers used:
 22099 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22100 ;; Tracked objects:
 22101 ;;		On entry : 0/1
 22102 ;;		On exit  : 0/0
 22103 ;;		Unchanged: 0/0
 22104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22109 ;;Total ram usage:        0 bytes
 22110 ;; Hardware stack levels used:    1
 22111 ;; Hardware stack levels required when called:    7
 22112 ;; This function calls:
 22113 ;;		_PWM8_LoadDutyValue
 22114 ;; This function is called by:
 22115 ;;		_main
 22116 ;;		_check_help
 22117 ;; This function uses a reentrant model
 22118 ;;
 22119                           
 22120                           	psect	text79
 22121  018F6A                     __ptext79:
 22122                           	opt callstack 0
 22123  018F6A                     _mode_lamp_dim:
 22124                           	opt callstack 23
 22125                           
 22126                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 22127                           ;stkvar	_level @ sp[(0)+-2]
 22128                           
 22129                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22130                           ;incstack = 0
 22131  018F6A  0EFE               	movlw	-2
 22132  018F6C  006F FF8F FFE6     	movff	plusw1,postinc1
 22133  018F72  006F FF8F FFE6     	movff	plusw1,postinc1
 22134  018F78  EC8D  F0C3         	call	_PWM8_LoadDutyValue	;wreg free
 22135                           
 22136                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 22137  018F7C  52E5               	movf	postdec1,f,c
 22138  018F7E  52E5               	movf	postdec1,f,c
 22139  018F80  0012               	return		;funcret
 22140  018F82                     __end_of_mode_lamp_dim:
 22141                           	opt callstack 0
 22142                           
 22143 ;; *************** function _mode_lamp_bright *****************
 22144 ;; Defined at:
 22145 ;;		line 18 in file "mconfig.c"
 22146 ;; Parameters:    Size  Location     Type
 22147 ;;		None
 22148 ;; Auto vars:     Size  Location     Type
 22149 ;;		None
 22150 ;; Return value:  Size  Location     Type
 22151 ;;                  1  [STACK] void 
 22152 ;; Registers used:
 22153 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22154 ;; Tracked objects:
 22155 ;;		On entry : 0/1
 22156 ;;		On exit  : 0/0
 22157 ;;		Unchanged: 0/0
 22158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22163 ;;Total ram usage:        0 bytes
 22164 ;; Hardware stack levels used:    1
 22165 ;; Hardware stack levels required when called:    7
 22166 ;; This function calls:
 22167 ;;		_PWM8_LoadDutyValue
 22168 ;; This function is called by:
 22169 ;;		_check_help
 22170 ;; This function uses a reentrant model
 22171 ;;
 22172                           
 22173                           	psect	text80
 22174  019020                     __ptext80:
 22175                           	opt callstack 0
 22176  019020                     _mode_lamp_bright:
 22177                           	opt callstack 22
 22178                           
 22179                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 22180                           
 22181                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22182                           ;incstack = 0
 22183  019020  0E2C               	movlw	44
 22184  019022  6EE6               	movwf	postinc1,c
 22185  019024  0E01               	movlw	1
 22186  019026  6EE6               	movwf	postinc1,c
 22187  019028  EC8D  F0C3         	call	_PWM8_LoadDutyValue	;wreg free
 22188                           
 22189                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22190  01902C  0012               	return		;funcret
 22191  01902E                     __end_of_mode_lamp_bright:
 22192                           	opt callstack 0
 22193                           
 22194 ;; *************** function _PWM8_LoadDutyValue *****************
 22195 ;; Defined at:
 22196 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 22197 ;; Parameters:    Size  Location     Type
 22198 ;;  dutyValue       2  [STACK] unsigned short 
 22199 ;; Auto vars:     Size  Location     Type
 22200 ;;		None
 22201 ;; Return value:  Size  Location     Type
 22202 ;;                  1  [STACK] void 
 22203 ;; Registers used:
 22204 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22205 ;; Tracked objects:
 22206 ;;		On entry : 0/1
 22207 ;;		On exit  : 0/0
 22208 ;;		Unchanged: 0/0
 22209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22214 ;;Total ram usage:        0 bytes
 22215 ;; Hardware stack levels used:    1
 22216 ;; Hardware stack levels required when called:    6
 22217 ;; This function calls:
 22218 ;;		Nothing
 22219 ;; This function is called by:
 22220 ;;		_mode_lamp_dim
 22221 ;;		_mode_lamp_bright
 22222 ;; This function uses a reentrant model
 22223 ;;
 22224                           
 22225                           	psect	text81
 22226  01871A                     __ptext81:
 22227                           	opt callstack 0
 22228  01871A                     _PWM8_LoadDutyValue:
 22229                           	opt callstack 23
 22230                           
 22231                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 22232                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22233                           
 22234                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22235                           ;incstack = 0
 22236  01871A  0EFE               	movlw	-2
 22237  01871C  006F FF8C  F03C    	movff	plusw1,btemp+10
 22238  018722  0EFF               	movlw	-1
 22239  018724  006F FF8C  F03D    	movff	plusw1,btemp+11
 22240  01872A  90D8               	bcf	status,0,c
 22241  01872C  323D               	rrcf	(btemp+11)^0,f,c
 22242  01872E  323C               	rrcf	(btemp+10)^0,f,c
 22243  018730  90D8               	bcf	status,0,c
 22244  018732  323D               	rrcf	(btemp+11)^0,f,c
 22245  018734  323C               	rrcf	(btemp+10)^0,f,c
 22246  018736  503C               	movf	(btemp+10)^0,w,c
 22247  018738  6E61               	movwf	97,c	;volatile
 22248                           
 22249                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 22250                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22251  01873A  0EFE               	movlw	-2
 22252  01873C  006F FF8C  F03D    	movff	plusw1,btemp+11
 22253  018742  0E03               	movlw	3
 22254  018744  163D               	andwf	(btemp+11)^0,f,c
 22255  018746  0E06               	movlw	6
 22256  018748  6E32               	movwf	btemp^0,c
 22257  01874A                     u8315:
 22258  01874A  90D8               	bcf	status,0,c
 22259  01874C  363D               	rlcf	(btemp+11)^0,f,c
 22260  01874E  2E32               	decfsz	btemp^0,f,c
 22261  018750  D7FC               	goto	u8315
 22262  018752  503D               	movf	(btemp+11)^0,w,c
 22263  018754  6E60               	movwf	96,c	;volatile
 22264                           
 22265                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 22266  018756  52E5               	movf	postdec1,f,c
 22267  018758  52E5               	movf	postdec1,f,c
 22268  01875A  0012               	return		;funcret
 22269  01875C                     __end_of_PWM8_LoadDutyValue:
 22270                           	opt callstack 0
 22271                           
 22272 ;; *************** function _help_button *****************
 22273 ;; Defined at:
 22274 ;;		line 26 in file "mconfig.c"
 22275 ;; Parameters:    Size  Location     Type
 22276 ;;		None
 22277 ;; Auto vars:     Size  Location     Type
 22278 ;;		None
 22279 ;; Return value:  Size  Location     Type
 22280 ;;                  1  [STACK] _Bool 
 22281 ;; Registers used:
 22282 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22283 ;; Tracked objects:
 22284 ;;		On entry : 0/1
 22285 ;;		On exit  : 0/0
 22286 ;;		Unchanged: 0/0
 22287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22292 ;;Total ram usage:        0 bytes
 22293 ;; Hardware stack levels used:    1
 22294 ;; Hardware stack levels required when called:    7
 22295 ;; This function calls:
 22296 ;;		_StartTimer
 22297 ;;		_TimerDone
 22298 ;; This function is called by:
 22299 ;;		_check_help
 22300 ;; This function uses a reentrant model
 22301 ;;
 22302                           
 22303                           	psect	text82
 22304  018856                     __ptext82:
 22305                           	opt callstack 0
 22306  018856                     _help_button:
 22307                           	opt callstack 22
 22308                           
 22309                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 22310                           
 22311                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22312                           ;incstack = 0
 22313  018856  B0CB               	btfsc	203,0,c	;volatile
 22314  018858  D00C               	goto	l1547
 22315                           
 22316                           ;mconfig.c: 29:   V.help = 1;
 22317  01885A  0101               	movlb	1	; () banked
 22318  01885C  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 22319                           
 22320                           ; BSR set to: 1
 22321                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 22322  01885E  0E08               	movlw	8
 22323  018860  6EE6               	movwf	postinc1,c
 22324  018862  ECCF  F0C6         	call	_TimerDone	;wreg free
 22325  018866  5032               	movf	btemp^0,w,c
 22326  018868  B4D8               	btfsc	status,2,c
 22327  01886A  D003               	goto	l1547
 22328                           
 22329                           ;mconfig.c: 31:    return 1;
 22330  01886C  0E01               	movlw	1
 22331  01886E  6E32               	movwf	btemp^0,c
 22332  018870  0012               	return	
 22333  018872                     l1547:
 22334                           
 22335                           ;mconfig.c: 34:  if (!V.help)
 22336  018872  0101               	movlb	1	; () banked
 22337  018874  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 22338  018876  D008               	goto	l8743
 22339                           
 22340                           ; BSR set to: 1
 22341                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 22342  018878  0E2C               	movlw	44
 22343  01887A  6EE6               	movwf	postinc1,c
 22344  01887C  0E01               	movlw	1
 22345  01887E  6EE6               	movwf	postinc1,c
 22346  018880  0E08               	movlw	8
 22347  018882  6EE6               	movwf	postinc1,c
 22348  018884  EC0D  F0C4         	call	_StartTimer	;wreg free
 22349  018888                     l8743:
 22350                           
 22351                           ;mconfig.c: 37:  return 0;
 22352  018888  0E00               	movlw	0
 22353  01888A  6E32               	movwf	btemp^0,c
 22354                           
 22355                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 22356  01888C  0012               	return		;funcret
 22357  01888E                     __end_of_help_button:
 22358                           	opt callstack 0
 22359                           
 22360 ;; *************** function _TimerDone *****************
 22361 ;; Defined at:
 22362 ;;		line 20 in file "timers.c"
 22363 ;; Parameters:    Size  Location     Type
 22364 ;;  timer           1  [STACK] const unsigned char 
 22365 ;; Auto vars:     Size  Location     Type
 22366 ;;		None
 22367 ;; Return value:  Size  Location     Type
 22368 ;;                  1  [STACK] _Bool 
 22369 ;; Registers used:
 22370 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22371 ;; Tracked objects:
 22372 ;;		On entry : 0/39
 22373 ;;		On exit  : 0/0
 22374 ;;		Unchanged: 0/0
 22375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22380 ;;Total ram usage:        0 bytes
 22381 ;; Hardware stack levels used:    1
 22382 ;; Hardware stack levels required when called:    6
 22383 ;; This function calls:
 22384 ;;		Nothing
 22385 ;; This function is called by:
 22386 ;;		_main
 22387 ;;		_WaitMs
 22388 ;;		_help_button
 22389 ;;		_check_help
 22390 ;;		_set_display_info
 22391 ;; This function uses a reentrant model
 22392 ;;
 22393                           
 22394                           	psect	text83
 22395  018D9E                     __ptext83:
 22396                           	opt callstack 0
 22397  018D9E                     _TimerDone:
 22398                           	opt callstack 23
 22399                           
 22400                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22401                           ;incstack = 0
 22402  018D9E  0004               	clrwdt		;# 
 22403                           
 22404                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 22405                           ;stkvar	_timer @ sp[(0)+-1]
 22406  018DA0  0EFF               	movlw	-1
 22407  018DA2  50E3               	movf	plusw1,w,c
 22408  018DA4  0D02               	mullw	2
 22409  018DA6  50F3               	movf	243,w,c
 22410  018DA8  0F60               	addlw	low _tickCount
 22411  018DAA  6ED9               	movwf	fsr2l,c
 22412  018DAC  6ADA               	clrf	fsr2h,c
 22413  018DAE  50DE               	movf	postinc2,w,c
 22414  018DB0  10DE               	iorwf	postinc2,w,c
 22415  018DB2  A4D8               	btfss	status,2,c
 22416  018DB4  D002               	goto	l8139
 22417                           
 22418                           ;timers.c: 24:   return 1;
 22419  018DB6  0E01               	movlw	1
 22420  018DB8  D001               	goto	L22
 22421  018DBA                     l8139:
 22422                           
 22423                           ;timers.c: 26:  return 0;
 22424  018DBA  0E00               	movlw	0
 22425  018DBC                     L22:
 22426  018DBC  6E32               	movwf	btemp^0,c
 22427                           
 22428                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 22429  018DBE  52E5               	movf	postdec1,f,c
 22430  018DC0  0012               	return		;funcret
 22431  018DC2                     __end_of_TimerDone:
 22432                           	opt callstack 0
 22433                           
 22434 ;; *************** function _StartTimer *****************
 22435 ;; Defined at:
 22436 ;;		line 12 in file "timers.c"
 22437 ;; Parameters:    Size  Location     Type
 22438 ;;  timer           1  [STACK] const unsigned char 
 22439 ;;  count           2  [STACK] const unsigned short 
 22440 ;; Auto vars:     Size  Location     Type
 22441 ;;		None
 22442 ;; Return value:  Size  Location     Type
 22443 ;;                  1  [STACK] void 
 22444 ;; Registers used:
 22445 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22446 ;; Tracked objects:
 22447 ;;		On entry : 0/5
 22448 ;;		On exit  : 0/0
 22449 ;;		Unchanged: 0/0
 22450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22455 ;;Total ram usage:        0 bytes
 22456 ;; Hardware stack levels used:    1
 22457 ;; Hardware stack levels required when called:    6
 22458 ;; This function calls:
 22459 ;;		Nothing
 22460 ;; This function is called by:
 22461 ;;		_main
 22462 ;;		_WaitMs
 22463 ;;		_help_button
 22464 ;;		_check_help
 22465 ;; This function uses a reentrant model
 22466 ;;
 22467                           
 22468                           	psect	text84
 22469  01881A                     __ptext84:
 22470                           	opt callstack 0
 22471  01881A                     _StartTimer:
 22472                           	opt callstack 21
 22473                           
 22474                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 22475                           ;stkvar	_count @ sp[(0)+-3]
 22476                           
 22477                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22478                           ;incstack = 0
 22479  01881A  0EFD               	movlw	-3
 22480  01881C  006F FF8C  F03C    	movff	plusw1,btemp+10
 22481  018822  0EFE               	movlw	-2
 22482  018824  006F FF8C  F03D    	movff	plusw1,btemp+11
 22483  01882A  90D8               	bcf	status,0,c
 22484  01882C  343C               	rlcf	(btemp+10)^0,w,c
 22485  01882E  6E3A               	movwf	(btemp+8)^0,c
 22486  018830  343D               	rlcf	(btemp+11)^0,w,c
 22487  018832  6E3B               	movwf	(btemp+9)^0,c
 22488                           
 22489                           ;stkvar	_timer @ sp[(0)+-1]
 22490  018834  0EFF               	movlw	-1
 22491  018836  50E3               	movf	plusw1,w,c
 22492  018838  0D02               	mullw	2
 22493  01883A  50F3               	movf	243,w,c
 22494  01883C  0F60               	addlw	low _tickCount
 22495  01883E  6ED9               	movwf	fsr2l,c
 22496  018840  6ADA               	clrf	fsr2h,c
 22497  018842  0060  F0EB  FFDE   	movff	btemp+8,postinc2
 22498  018848  0060  F0EF  FFDD   	movff	btemp+9,postdec2
 22499                           
 22500                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 22501  01884E  52E5               	movf	postdec1,f,c
 22502  018850  52E5               	movf	postdec1,f,c
 22503  018852  52E5               	movf	postdec1,f,c
 22504  018854  0012               	return		;funcret
 22505  018856                     __end_of_StartTimer:
 22506                           	opt callstack 0
 22507                           
 22508 ;; *************** function _display_info *****************
 22509 ;; Defined at:
 22510 ;;		line 187 in file "mconfig.c"
 22511 ;; Parameters:    Size  Location     Type
 22512 ;;		None
 22513 ;; Auto vars:     Size  Location     Type
 22514 ;;		None
 22515 ;; Return value:  Size  Location     Type
 22516 ;;                  1  [STACK] enum E16501
 22517 ;; Registers used:
 22518 ;;		btemp
 22519 ;; Tracked objects:
 22520 ;;		On entry : 0/1
 22521 ;;		On exit  : 0/0
 22522 ;;		Unchanged: 0/0
 22523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22528 ;;Total ram usage:        0 bytes
 22529 ;; Hardware stack levels used:    1
 22530 ;; Hardware stack levels required when called:    6
 22531 ;; This function calls:
 22532 ;;		Nothing
 22533 ;; This function is called by:
 22534 ;;		_check_help
 22535 ;; This function uses a reentrant model
 22536 ;;
 22537                           
 22538                           	psect	text85
 22539  019082                     __ptext85:
 22540                           	opt callstack 0
 22541  019082                     _display_info:
 22542                           	opt callstack 23
 22543                           
 22544                           ;mconfig.c: 189:  return V.response.info;
 22545                           
 22546                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22547                           ;incstack = 0
 22548  019082  0060  F68C  F032   	movff	_V+163,btemp	;volatile
 22549                           
 22550                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 22551  019088  0012               	return		;funcret
 22552  01908A                     __end_of_display_info:
 22553                           	opt callstack 0
 22554                           
 22555 ;; *************** function _display_help *****************
 22556 ;; Defined at:
 22557 ;;		line 192 in file "mconfig.c"
 22558 ;; Parameters:    Size  Location     Type
 22559 ;;		None
 22560 ;; Auto vars:     Size  Location     Type
 22561 ;;		None
 22562 ;; Return value:  Size  Location     Type
 22563 ;;                  1  [STACK] enum E16501
 22564 ;; Registers used:
 22565 ;;		btemp
 22566 ;; Tracked objects:
 22567 ;;		On entry : 3F/1
 22568 ;;		On exit  : 0/0
 22569 ;;		Unchanged: 0/0
 22570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22575 ;;Total ram usage:        0 bytes
 22576 ;; Hardware stack levels used:    1
 22577 ;; Hardware stack levels required when called:    6
 22578 ;; This function calls:
 22579 ;;		Nothing
 22580 ;; This function is called by:
 22581 ;;		_check_help
 22582 ;; This function uses a reentrant model
 22583 ;;
 22584                           
 22585                           	psect	text86
 22586  01908A                     __ptext86:
 22587                           	opt callstack 0
 22588  01908A                     _display_help:
 22589                           	opt callstack 23
 22590                           
 22591                           ;mconfig.c: 194:  return V.response.help_temp;
 22592                           
 22593                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22594                           ;incstack = 0
 22595  01908A  0060  F690  F032   	movff	_V+164,btemp	;volatile
 22596                           
 22597                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 22598  019090  0012               	return		;funcret
 22599  019092                     __end_of_display_help:
 22600                           	opt callstack 0
 22601                           
 22602 ;; *************** function _check_adc_scan *****************
 22603 ;; Defined at:
 22604 ;;		line 56 in file "daq.c"
 22605 ;; Parameters:    Size  Location     Type
 22606 ;;		None
 22607 ;; Auto vars:     Size  Location     Type
 22608 ;;		None
 22609 ;; Return value:  Size  Location     Type
 22610 ;;                  1  [STACK] _Bool 
 22611 ;; Registers used:
 22612 ;;		btemp
 22613 ;; Tracked objects:
 22614 ;;		On entry : 0/39
 22615 ;;		On exit  : 0/0
 22616 ;;		Unchanged: 0/0
 22617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22622 ;;Total ram usage:        0 bytes
 22623 ;; Hardware stack levels used:    1
 22624 ;; Hardware stack levels required when called:    6
 22625 ;; This function calls:
 22626 ;;		Nothing
 22627 ;; This function is called by:
 22628 ;;		_main
 22629 ;; This function uses a reentrant model
 22630 ;;
 22631                           
 22632                           	psect	text87
 22633  019092                     __ptext87:
 22634                           	opt callstack 0
 22635  019092                     _check_adc_scan:
 22636                           	opt callstack 24
 22637                           
 22638                           ;daq.c: 58:  return R.done;
 22639                           
 22640                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22641                           ;incstack = 0
 22642  019092  0060  F334  F032   	movff	_R+39,btemp	;volatile
 22643                           
 22644                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 22645  019098  0012               	return		;funcret
 22646  01909A                     __end_of_check_adc_scan:
 22647                           	opt callstack 0
 22648                           
 22649 ;; *************** function _SYSTEM_Initialize *****************
 22650 ;; Defined at:
 22651 ;;		line 50 in file "mcc_generated_files/mcc.c"
 22652 ;; Parameters:    Size  Location     Type
 22653 ;;		None
 22654 ;; Auto vars:     Size  Location     Type
 22655 ;;		None
 22656 ;; Return value:  Size  Location     Type
 22657 ;;                  1  [STACK] void 
 22658 ;; Registers used:
 22659 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 22660 ;; Tracked objects:
 22661 ;;		On entry : 0/0
 22662 ;;		On exit  : 3F/3C
 22663 ;;		Unchanged: 0/0
 22664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22669 ;;Total ram usage:        0 bytes
 22670 ;; Hardware stack levels used:    1
 22671 ;; Hardware stack levels required when called:    8
 22672 ;; This function calls:
 22673 ;;		_ADCC_Initialize
 22674 ;;		_CLKREF_Initialize
 22675 ;;		_DMA1_Initialize
 22676 ;;		_DMA2_Initialize
 22677 ;;		_EXT_INT_Initialize
 22678 ;;		_FVR_Initialize
 22679 ;;		_INTERRUPT_Initialize
 22680 ;;		_OSCILLATOR_Initialize
 22681 ;;		_PIN_MANAGER_Initialize
 22682 ;;		_PMD_Initialize
 22683 ;;		_PWM8_Initialize
 22684 ;;		_SPI1_Initialize
 22685 ;;		_TMR2_Initialize
 22686 ;;		_TMR5_Initialize
 22687 ;;		_TMR6_Initialize
 22688 ;;		_UART1_Initialize
 22689 ;;		_UART2_Initialize
 22690 ;; This function is called by:
 22691 ;;		_main
 22692 ;; This function uses a reentrant model
 22693 ;;
 22694                           
 22695                           	psect	text88
 22696  018604                     __ptext88:
 22697                           	opt callstack 0
 22698  018604                     _SYSTEM_Initialize:
 22699                           	opt callstack 22
 22700                           
 22701                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 22702                           
 22703                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22704                           ;incstack = 0
 22705  018604  EC96  F0C0         	call	_INTERRUPT_Initialize	;wreg free
 22706                           
 22707                           ; BSR set to: 57
 22708                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 22709  018608  ECEE  F0C7         	call	_PMD_Initialize	;wreg free
 22710                           
 22711                           ; BSR set to: 57
 22712                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 22713  01860C  EC6B  F0BE         	call	_PIN_MANAGER_Initialize	;wreg free
 22714                           
 22715                           ; BSR set to: 58
 22716                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 22717  018610  ECE3  F0C7         	call	_OSCILLATOR_Initialize	;wreg free
 22718                           
 22719                           ; BSR set to: 57
 22720                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 22721  018614  EC4D  F0C8         	call	_FVR_Initialize	;wreg free
 22722                           
 22723                           ; BSR set to: 62
 22724                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 22725  018618  EC2D  F0C0         	call	_ADCC_Initialize	;wreg free
 22726                           
 22727                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 22728  01861C  ECC1  F0C7         	call	_TMR2_Initialize	;wreg free
 22729                           
 22730                           ; BSR set to: 57
 22731                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 22732  018620  ECD8  F0C7         	call	_PWM8_Initialize	;wreg free
 22733                           
 22734                           ; BSR set to: 63
 22735                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 22736  018624  EC97  F0C4         	call	_EXT_INT_Initialize	;wreg free
 22737                           
 22738                           ; BSR set to: 57
 22739                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 22740  018628  EC3C  F0C5         	call	_TMR6_Initialize	;wreg free
 22741                           
 22742                           ;mcc_generated_files/mcc.c: 62:     TMR5_Initialize();
 22743  01862C  EC25  F0C3         	call	_TMR5_Initialize	;wreg free
 22744                           
 22745                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 22746  018630  ECFB  F0C0         	call	_UART1_Initialize	;wreg free
 22747                           
 22748                           ; BSR set to: 57
 22749                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 22750  018634  EC8F  F0C1         	call	_UART2_Initialize	;wreg free
 22751                           
 22752                           ; BSR set to: 57
 22753                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 22754  018638  ECCD  F0C7         	call	_SPI1_Initialize	;wreg free
 22755                           
 22756                           ; BSR set to: 61
 22757                           ;mcc_generated_files/mcc.c: 66:     DMA2_Initialize();
 22758  01863C  EC19  F0C2         	call	_DMA2_Initialize	;wreg free
 22759                           
 22760                           ; BSR set to: 59
 22761                           ;mcc_generated_files/mcc.c: 67:     DMA1_Initialize();
 22762  018640  ECF8  F0BF         	call	_DMA1_Initialize	;wreg free
 22763                           
 22764                           ; BSR set to: 59
 22765                           ;mcc_generated_files/mcc.c: 68:     CLKREF_Initialize();
 22766  018644  EC27  F0C8         	call	_CLKREF_Initialize	;wreg free
 22767                           
 22768                           ; BSR set to: 60
 22769                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 22770  018648  0012               	return		;funcret
 22771  01864A                     __end_of_SYSTEM_Initialize:
 22772                           	opt callstack 0
 22773                           
 22774 ;; *************** function _UART2_Initialize *****************
 22775 ;; Defined at:
 22776 ;;		line 78 in file "mcc_generated_files/uart2.c"
 22777 ;; Parameters:    Size  Location     Type
 22778 ;;		None
 22779 ;; Auto vars:     Size  Location     Type
 22780 ;;		None
 22781 ;; Return value:  Size  Location     Type
 22782 ;;                  1  [STACK] void 
 22783 ;; Registers used:
 22784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 22785 ;; Tracked objects:
 22786 ;;		On entry : 3F/39
 22787 ;;		On exit  : 3F/39
 22788 ;;		Unchanged: 0/0
 22789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22794 ;;Total ram usage:        0 bytes
 22795 ;; Hardware stack levels used:    1
 22796 ;; Hardware stack levels required when called:    7
 22797 ;; This function calls:
 22798 ;;		_UART2_SetRxInterruptHandler
 22799 ;;		_UART2_SetTxInterruptHandler
 22800 ;; This function is called by:
 22801 ;;		_SYSTEM_Initialize
 22802 ;; This function uses a reentrant model
 22803 ;;
 22804                           
 22805                           	psect	text89
 22806  01831E                     __ptext89:
 22807                           	opt callstack 0
 22808  01831E                     _UART2_Initialize:
 22809                           	opt callstack 22
 22810                           
 22811                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 22812                           
 22813                           ; BSR set to: 60
 22814                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22815                           ;incstack = 0
 22816  01831E  0139               	movlb	57	; () banked
 22817  018320  9596               	bcf	150,2,b	;volatile
 22818                           
 22819                           ; BSR set to: 57
 22820                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 22821  018322  0EC6               	movlw	low _UART2_Receive_ISR
 22822  018324  6EE6               	movwf	postinc1,c
 22823  018326  0E8E               	movlw	high _UART2_Receive_ISR
 22824  018328  6EE6               	movwf	postinc1,c
 22825  01832A  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 22826  01832C  6EE6               	movwf	postinc1,c
 22827  01832E  ECB7  F0C5         	call	_UART2_SetRxInterruptHandler	;wreg free
 22828                           
 22829                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 22830  018332  0139               	movlb	57	; () banked
 22831  018334  9796               	bcf	150,3,b	;volatile
 22832                           
 22833                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 22834  018336  0E4C               	movlw	low _UART2_Transmit_ISR
 22835  018338  6EE6               	movwf	postinc1,c
 22836  01833A  0E8A               	movlw	high _UART2_Transmit_ISR
 22837  01833C  6EE6               	movwf	postinc1,c
 22838  01833E  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 22839  018340  6EE6               	movwf	postinc1,c
 22840  018342  ECA3  F0C5         	call	_UART2_SetTxInterruptHandler	;wreg free
 22841                           
 22842                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 22843  018346  013D               	movlb	61	; () banked
 22844  018348  6BD4               	clrf	212,b	;volatile
 22845                           
 22846                           ; BSR set to: 61
 22847                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 22848  01834A  6BD6               	clrf	214,b	;volatile
 22849                           
 22850                           ; BSR set to: 61
 22851                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 22852  01834C  6BD8               	clrf	216,b	;volatile
 22853                           
 22854                           ; BSR set to: 61
 22855                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 22856  01834E  0EB0               	movlw	176
 22857  018350  6FDA               	movwf	218,b	;volatile
 22858                           
 22859                           ; BSR set to: 61
 22860                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 22861  018352  0E80               	movlw	128
 22862  018354  6FDB               	movwf	219,b	;volatile
 22863                           
 22864                           ; BSR set to: 61
 22865                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 22866  018356  6BDC               	clrf	220,b	;volatile
 22867                           
 22868                           ; BSR set to: 61
 22869                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 22870  018358  0E82               	movlw	130
 22871  01835A  6FDD               	movwf	221,b	;volatile
 22872                           
 22873                           ; BSR set to: 61
 22874                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 22875  01835C  0E06               	movlw	6
 22876  01835E  6FDE               	movwf	222,b	;volatile
 22877                           
 22878                           ; BSR set to: 61
 22879                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 22880  018360  6BDF               	clrf	223,b	;volatile
 22881                           
 22882                           ; BSR set to: 61
 22883                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 22884  018362  6BE0               	clrf	224,b	;volatile
 22885                           
 22886                           ; BSR set to: 61
 22887                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 22888  018364  6BE1               	clrf	225,b	;volatile
 22889                           
 22890                           ; BSR set to: 61
 22891                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 22892  018366  6BE2               	clrf	226,b	;volatile
 22893                           
 22894                           ; BSR set to: 61
 22895                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 22896  018368  6A2B               	clrf	_uart2TxHead^0,c	;volatile
 22897                           
 22898                           ; BSR set to: 61
 22899                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 22900  01836A  6A2A               	clrf	_uart2TxTail^0,c	;volatile
 22901                           
 22902                           ; BSR set to: 61
 22903                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 22904  01836C  0E40               	movlw	64
 22905  01836E  6E29               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 22906                           
 22907                           ; BSR set to: 61
 22908                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 22909  018370  6A28               	clrf	_uart2RxHead^0,c	;volatile
 22910                           
 22911                           ; BSR set to: 61
 22912                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 22913  018372  6A27               	clrf	_uart2RxTail^0,c	;volatile
 22914                           
 22915                           ; BSR set to: 61
 22916                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 22917  018374  6A26               	clrf	_uart2RxCount^0,c	;volatile
 22918                           
 22919                           ; BSR set to: 61
 22920                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 22921  018376  0139               	movlb	57	; () banked
 22922  018378  8596               	bsf	150,2,b	;volatile
 22923                           
 22924                           ; BSR set to: 57
 22925                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22926  01837A  0012               	return		;funcret
 22927  01837C                     __end_of_UART2_Initialize:
 22928                           	opt callstack 0
 22929                           
 22930 ;; *************** function _UART2_SetTxInterruptHandler *****************
 22931 ;; Defined at:
 22932 ;;		line 252 in file "mcc_generated_files/uart2.c"
 22933 ;; Parameters:    Size  Location     Type
 22934 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22935 ;;		 -> UART2_Transmit_ISR(1), 
 22936 ;; Auto vars:     Size  Location     Type
 22937 ;;		None
 22938 ;; Return value:  Size  Location     Type
 22939 ;;                  1  [STACK] void 
 22940 ;; Registers used:
 22941 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22942 ;; Tracked objects:
 22943 ;;		On entry : 3F/39
 22944 ;;		On exit  : 0/0
 22945 ;;		Unchanged: 0/0
 22946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22951 ;;Total ram usage:        0 bytes
 22952 ;; Hardware stack levels used:    1
 22953 ;; Hardware stack levels required when called:    6
 22954 ;; This function calls:
 22955 ;;		Nothing
 22956 ;; This function is called by:
 22957 ;;		_UART2_Initialize
 22958 ;; This function uses a reentrant model
 22959 ;;
 22960                           
 22961                           	psect	text90
 22962  018B46                     __ptext90:
 22963                           	opt callstack 0
 22964  018B46                     _UART2_SetTxInterruptHandler:
 22965                           	opt callstack 22
 22966                           
 22967                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 22968                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22969                           
 22970                           ; BSR set to: 57
 22971                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22972                           ;incstack = 0
 22973  018B46  50E1               	movf	fsr1l,w,c
 22974  018B48  0FFD               	addlw	-3
 22975  018B4A  6ED9               	movwf	fsr2l,c
 22976  018B4C  50E2               	movf	fsr1h,w,c
 22977  018B4E  6EDA               	movwf	fsr2h,c
 22978  018B50  0EFF               	movlw	255
 22979  018B52  22DA               	addwfc	fsr2h,f,c
 22980  018B54  006F FF78  F00D    	movff	postinc2,_UART2_TxInterruptHandler
 22981  018B5A  006F FF78  F00E    	movff	postinc2,_UART2_TxInterruptHandler+1
 22982  018B60  006F FF74  F00F    	movff	postdec2,_UART2_TxInterruptHandler+2
 22983                           
 22984                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 22985  018B66  52E5               	movf	postdec1,f,c
 22986  018B68  52E5               	movf	postdec1,f,c
 22987  018B6A  52E5               	movf	postdec1,f,c
 22988  018B6C  0012               	return		;funcret
 22989  018B6E                     __end_of_UART2_SetTxInterruptHandler:
 22990                           	opt callstack 0
 22991                           
 22992 ;; *************** function _UART2_SetRxInterruptHandler *****************
 22993 ;; Defined at:
 22994 ;;		line 248 in file "mcc_generated_files/uart2.c"
 22995 ;; Parameters:    Size  Location     Type
 22996 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22997 ;;		 -> UART2_Receive_ISR(1), 
 22998 ;; Auto vars:     Size  Location     Type
 22999 ;;		None
 23000 ;; Return value:  Size  Location     Type
 23001 ;;                  1  [STACK] void 
 23002 ;; Registers used:
 23003 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23004 ;; Tracked objects:
 23005 ;;		On entry : 3F/39
 23006 ;;		On exit  : 0/0
 23007 ;;		Unchanged: 0/0
 23008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23013 ;;Total ram usage:        0 bytes
 23014 ;; Hardware stack levels used:    1
 23015 ;; Hardware stack levels required when called:    6
 23016 ;; This function calls:
 23017 ;;		Nothing
 23018 ;; This function is called by:
 23019 ;;		_UART2_Initialize
 23020 ;; This function uses a reentrant model
 23021 ;;
 23022                           
 23023                           	psect	text91
 23024  018B6E                     __ptext91:
 23025                           	opt callstack 0
 23026  018B6E                     _UART2_SetRxInterruptHandler:
 23027                           	opt callstack 22
 23028                           
 23029                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 23030                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23031                           
 23032                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23033                           ;incstack = 0
 23034  018B6E  50E1               	movf	fsr1l,w,c
 23035  018B70  0FFD               	addlw	-3
 23036  018B72  6ED9               	movwf	fsr2l,c
 23037  018B74  50E2               	movf	fsr1h,w,c
 23038  018B76  6EDA               	movwf	fsr2h,c
 23039  018B78  0EFF               	movlw	255
 23040  018B7A  22DA               	addwfc	fsr2h,f,c
 23041  018B7C  006F FF78  F010    	movff	postinc2,_UART2_RxInterruptHandler
 23042  018B82  006F FF78  F011    	movff	postinc2,_UART2_RxInterruptHandler+1
 23043  018B88  006F FF74  F012    	movff	postdec2,_UART2_RxInterruptHandler+2
 23044                           
 23045                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23046  018B8E  52E5               	movf	postdec1,f,c
 23047  018B90  52E5               	movf	postdec1,f,c
 23048  018B92  52E5               	movf	postdec1,f,c
 23049  018B94  0012               	return		;funcret
 23050  018B96                     __end_of_UART2_SetRxInterruptHandler:
 23051                           	opt callstack 0
 23052                           
 23053 ;; *************** function _UART1_Initialize *****************
 23054 ;; Defined at:
 23055 ;;		line 79 in file "mcc_generated_files/uart1.c"
 23056 ;; Parameters:    Size  Location     Type
 23057 ;;		None
 23058 ;; Auto vars:     Size  Location     Type
 23059 ;;		None
 23060 ;; Return value:  Size  Location     Type
 23061 ;;                  1  [STACK] void 
 23062 ;; Registers used:
 23063 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23064 ;; Tracked objects:
 23065 ;;		On entry : 0/39
 23066 ;;		On exit  : 3F/39
 23067 ;;		Unchanged: 0/0
 23068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23073 ;;Total ram usage:        0 bytes
 23074 ;; Hardware stack levels used:    1
 23075 ;; Hardware stack levels required when called:    7
 23076 ;; This function calls:
 23077 ;;		_UART1_SetRxInterruptHandler
 23078 ;;		_UART1_SetTxInterruptHandler
 23079 ;; This function is called by:
 23080 ;;		_SYSTEM_Initialize
 23081 ;; This function uses a reentrant model
 23082 ;;
 23083                           
 23084                           	psect	text92
 23085  0181F6                     __ptext92:
 23086                           	opt callstack 0
 23087  0181F6                     _UART1_Initialize:
 23088                           	opt callstack 22
 23089                           
 23090                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 23091                           
 23092                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23093                           ;incstack = 0
 23094  0181F6  0139               	movlb	57	; () banked
 23095  0181F8  9793               	bcf	147,3,b	;volatile
 23096                           
 23097                           ; BSR set to: 57
 23098                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 23099  0181FA  0EA8               	movlw	low _UART1_Receive_ISR
 23100  0181FC  6EE6               	movwf	postinc1,c
 23101  0181FE  0E8E               	movlw	high _UART1_Receive_ISR
 23102  018200  6EE6               	movwf	postinc1,c
 23103  018202  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 23104  018204  6EE6               	movwf	postinc1,c
 23105  018206  ECDF  F0C5         	call	_UART1_SetRxInterruptHandler	;wreg free
 23106                           
 23107                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 23108  01820A  0139               	movlb	57	; () banked
 23109  01820C  9993               	bcf	147,4,b	;volatile
 23110                           
 23111                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 23112  01820E  0E20               	movlw	low _UART1_Transmit_ISR
 23113  018210  6EE6               	movwf	postinc1,c
 23114  018212  0E8A               	movlw	high _UART1_Transmit_ISR
 23115  018214  6EE6               	movwf	postinc1,c
 23116  018216  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 23117  018218  6EE6               	movwf	postinc1,c
 23118  01821A  ECCB  F0C5         	call	_UART1_SetTxInterruptHandler	;wreg free
 23119                           
 23120                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 23121  01821E  013D               	movlb	61	; () banked
 23122  018220  6BEC               	clrf	236,b	;volatile
 23123                           
 23124                           ; BSR set to: 61
 23125                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 23126  018222  6BED               	clrf	237,b	;volatile
 23127                           
 23128                           ; BSR set to: 61
 23129                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 23130  018224  6BEE               	clrf	238,b	;volatile
 23131                           
 23132                           ; BSR set to: 61
 23133                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 23134  018226  6BEF               	clrf	239,b	;volatile
 23135                           
 23136                           ; BSR set to: 61
 23137                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 23138  018228  6BF0               	clrf	240,b	;volatile
 23139                           
 23140                           ; BSR set to: 61
 23141                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 23142  01822A  6BF1               	clrf	241,b	;volatile
 23143                           
 23144                           ; BSR set to: 61
 23145                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 23146  01822C  0EB0               	movlw	176
 23147  01822E  6FF2               	movwf	242,b	;volatile
 23148                           
 23149                           ; BSR set to: 61
 23150                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 23151  018230  0E80               	movlw	128
 23152  018232  6FF3               	movwf	243,b	;volatile
 23153                           
 23154                           ; BSR set to: 61
 23155                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 23156  018234  6BF4               	clrf	244,b	;volatile
 23157                           
 23158                           ; BSR set to: 61
 23159                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 23160  018236  0E82               	movlw	130
 23161  018238  6FF5               	movwf	245,b	;volatile
 23162                           
 23163                           ; BSR set to: 61
 23164                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 23165  01823A  0E06               	movlw	6
 23166  01823C  6FF6               	movwf	246,b	;volatile
 23167                           
 23168                           ; BSR set to: 61
 23169                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 23170  01823E  6BF7               	clrf	247,b	;volatile
 23171                           
 23172                           ; BSR set to: 61
 23173                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 23174  018240  6BF8               	clrf	248,b	;volatile
 23175                           
 23176                           ; BSR set to: 61
 23177                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 23178  018242  6BF9               	clrf	249,b	;volatile
 23179                           
 23180                           ; BSR set to: 61
 23181                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 23182  018244  6BFA               	clrf	250,b	;volatile
 23183                           
 23184                           ; BSR set to: 61
 23185                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 23186  018246  6A31               	clrf	_uart1TxHead^0,c	;volatile
 23187                           
 23188                           ; BSR set to: 61
 23189                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 23190  018248  6A30               	clrf	_uart1TxTail^0,c	;volatile
 23191                           
 23192                           ; BSR set to: 61
 23193                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 23194  01824A  0E40               	movlw	64
 23195  01824C  6E2F               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 23196                           
 23197                           ; BSR set to: 61
 23198                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 23199  01824E  6A2E               	clrf	_uart1RxHead^0,c	;volatile
 23200                           
 23201                           ; BSR set to: 61
 23202                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 23203  018250  6A2D               	clrf	_uart1RxTail^0,c	;volatile
 23204                           
 23205                           ; BSR set to: 61
 23206                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 23207  018252  6A2C               	clrf	_uart1RxCount^0,c	;volatile
 23208                           
 23209                           ; BSR set to: 61
 23210                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 23211  018254  0139               	movlb	57	; () banked
 23212  018256  8793               	bsf	147,3,b	;volatile
 23213                           
 23214                           ; BSR set to: 57
 23215                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23216  018258  0012               	return		;funcret
 23217  01825A                     __end_of_UART1_Initialize:
 23218                           	opt callstack 0
 23219                           
 23220 ;; *************** function _UART1_SetTxInterruptHandler *****************
 23221 ;; Defined at:
 23222 ;;		line 246 in file "mcc_generated_files/uart1.c"
 23223 ;; Parameters:    Size  Location     Type
 23224 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23225 ;;		 -> UART1_Transmit_ISR(1), 
 23226 ;; Auto vars:     Size  Location     Type
 23227 ;;		None
 23228 ;; Return value:  Size  Location     Type
 23229 ;;                  1  [STACK] void 
 23230 ;; Registers used:
 23231 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23232 ;; Tracked objects:
 23233 ;;		On entry : 3F/39
 23234 ;;		On exit  : 0/0
 23235 ;;		Unchanged: 0/0
 23236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23241 ;;Total ram usage:        0 bytes
 23242 ;; Hardware stack levels used:    1
 23243 ;; Hardware stack levels required when called:    6
 23244 ;; This function calls:
 23245 ;;		Nothing
 23246 ;; This function is called by:
 23247 ;;		_UART1_Initialize
 23248 ;; This function uses a reentrant model
 23249 ;;
 23250                           
 23251                           	psect	text93
 23252  018B96                     __ptext93:
 23253                           	opt callstack 0
 23254  018B96                     _UART1_SetTxInterruptHandler:
 23255                           	opt callstack 22
 23256                           
 23257                           ;mcc_generated_files/uart1.c: 246: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 247: {;mcc_generated_files/uart1.c: 248:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 23258                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23259                           
 23260                           ; BSR set to: 57
 23261                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23262                           ;incstack = 0
 23263  018B96  50E1               	movf	fsr1l,w,c
 23264  018B98  0FFD               	addlw	-3
 23265  018B9A  6ED9               	movwf	fsr2l,c
 23266  018B9C  50E2               	movf	fsr1h,w,c
 23267  018B9E  6EDA               	movwf	fsr2h,c
 23268  018BA0  0EFF               	movlw	255
 23269  018BA2  22DA               	addwfc	fsr2h,f,c
 23270  018BA4  006F FF78  F007    	movff	postinc2,_UART1_TxInterruptHandler
 23271  018BAA  006F FF78  F008    	movff	postinc2,_UART1_TxInterruptHandler+1
 23272  018BB0  006F FF74  F009    	movff	postdec2,_UART1_TxInterruptHandler+2
 23273                           
 23274                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23275  018BB6  52E5               	movf	postdec1,f,c
 23276  018BB8  52E5               	movf	postdec1,f,c
 23277  018BBA  52E5               	movf	postdec1,f,c
 23278  018BBC  0012               	return		;funcret
 23279  018BBE                     __end_of_UART1_SetTxInterruptHandler:
 23280                           	opt callstack 0
 23281                           
 23282 ;; *************** function _UART1_SetRxInterruptHandler *****************
 23283 ;; Defined at:
 23284 ;;		line 241 in file "mcc_generated_files/uart1.c"
 23285 ;; Parameters:    Size  Location     Type
 23286 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23287 ;;		 -> UART1_Receive_ISR(1), 
 23288 ;; Auto vars:     Size  Location     Type
 23289 ;;		None
 23290 ;; Return value:  Size  Location     Type
 23291 ;;                  1  [STACK] void 
 23292 ;; Registers used:
 23293 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23294 ;; Tracked objects:
 23295 ;;		On entry : 3F/39
 23296 ;;		On exit  : 0/0
 23297 ;;		Unchanged: 0/0
 23298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23303 ;;Total ram usage:        0 bytes
 23304 ;; Hardware stack levels used:    1
 23305 ;; Hardware stack levels required when called:    6
 23306 ;; This function calls:
 23307 ;;		Nothing
 23308 ;; This function is called by:
 23309 ;;		_UART1_Initialize
 23310 ;; This function uses a reentrant model
 23311 ;;
 23312                           
 23313                           	psect	text94
 23314  018BBE                     __ptext94:
 23315                           	opt callstack 0
 23316  018BBE                     _UART1_SetRxInterruptHandler:
 23317                           	opt callstack 22
 23318                           
 23319                           ;mcc_generated_files/uart1.c: 241: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 242: {;mcc_generated_files/uart1.c: 243:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 23320                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23321                           
 23322                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23323                           ;incstack = 0
 23324  018BBE  50E1               	movf	fsr1l,w,c
 23325  018BC0  0FFD               	addlw	-3
 23326  018BC2  6ED9               	movwf	fsr2l,c
 23327  018BC4  50E2               	movf	fsr1h,w,c
 23328  018BC6  6EDA               	movwf	fsr2h,c
 23329  018BC8  0EFF               	movlw	255
 23330  018BCA  22DA               	addwfc	fsr2h,f,c
 23331  018BCC  006F FF78  F00A    	movff	postinc2,_UART1_RxInterruptHandler
 23332  018BD2  006F FF78  F00B    	movff	postinc2,_UART1_RxInterruptHandler+1
 23333  018BD8  006F FF74  F00C    	movff	postdec2,_UART1_RxInterruptHandler+2
 23334                           
 23335                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23336  018BDE  52E5               	movf	postdec1,f,c
 23337  018BE0  52E5               	movf	postdec1,f,c
 23338  018BE2  52E5               	movf	postdec1,f,c
 23339  018BE4  0012               	return		;funcret
 23340  018BE6                     __end_of_UART1_SetRxInterruptHandler:
 23341                           	opt callstack 0
 23342                           
 23343 ;; *************** function _TMR6_Initialize *****************
 23344 ;; Defined at:
 23345 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 23346 ;; Parameters:    Size  Location     Type
 23347 ;;		None
 23348 ;; Auto vars:     Size  Location     Type
 23349 ;;		None
 23350 ;; Return value:  Size  Location     Type
 23351 ;;                  1  [STACK] void 
 23352 ;; Registers used:
 23353 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23354 ;; Tracked objects:
 23355 ;;		On entry : 3F/39
 23356 ;;		On exit  : 0/0
 23357 ;;		Unchanged: 0/0
 23358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23363 ;;Total ram usage:        0 bytes
 23364 ;; Hardware stack levels used:    1
 23365 ;; Hardware stack levels required when called:    7
 23366 ;; This function calls:
 23367 ;;		_TMR6_SetInterruptHandler
 23368 ;; This function is called by:
 23369 ;;		_SYSTEM_Initialize
 23370 ;; This function uses a reentrant model
 23371 ;;
 23372                           
 23373                           	psect	text95
 23374  018A78                     __ptext95:
 23375                           	opt callstack 0
 23376  018A78                     _TMR6_Initialize:
 23377                           	opt callstack 22
 23378                           
 23379                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 23380                           
 23381                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23382                           ;incstack = 0
 23383  018A78  0E01               	movlw	1
 23384  018A7A  6E96               	movwf	150,c	;volatile
 23385                           
 23386                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 23387  018A7C  6A95               	clrf	149,c	;volatile
 23388                           
 23389                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 23390  018A7E  6A97               	clrf	151,c	;volatile
 23391                           
 23392                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 23393  018A80  0E7C               	movlw	124
 23394  018A82  6E93               	movwf	147,c	;volatile
 23395                           
 23396                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 23397  018A84  6A92               	clrf	146,c	;volatile
 23398                           
 23399                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 23400  018A86  0139               	movlb	57	; () banked
 23401  018A88  91A9               	bcf	169,0,b	;volatile
 23402                           
 23403                           ; BSR set to: 57
 23404                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 23405  018A8A  8199               	bsf	153,0,b	;volatile
 23406                           
 23407                           ; BSR set to: 57
 23408                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 23409  018A8C  0E90               	movlw	low _TMR6_DefaultInterruptHandler
 23410  018A8E  6EE6               	movwf	postinc1,c
 23411  018A90  0E86               	movlw	high _TMR6_DefaultInterruptHandler
 23412  018A92  6EE6               	movwf	postinc1,c
 23413  018A94  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 23414  018A96  6EE6               	movwf	postinc1,c
 23415  018A98  ECF3  F0C5         	call	_TMR6_SetInterruptHandler	;wreg free
 23416                           
 23417                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 23418  018A9C  0EE0               	movlw	224
 23419  018A9E  6E94               	movwf	148,c	;volatile
 23420                           
 23421                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23422  018AA0  0012               	return		;funcret
 23423  018AA2                     __end_of_TMR6_Initialize:
 23424                           	opt callstack 0
 23425                           
 23426 ;; *************** function _TMR6_SetInterruptHandler *****************
 23427 ;; Defined at:
 23428 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 23429 ;; Parameters:    Size  Location     Type
 23430 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23431 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 23432 ;; Auto vars:     Size  Location     Type
 23433 ;;		None
 23434 ;; Return value:  Size  Location     Type
 23435 ;;                  1  [STACK] void 
 23436 ;; Registers used:
 23437 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23438 ;; Tracked objects:
 23439 ;;		On entry : 3F/39
 23440 ;;		On exit  : 0/0
 23441 ;;		Unchanged: 0/0
 23442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23447 ;;Total ram usage:        0 bytes
 23448 ;; Hardware stack levels used:    1
 23449 ;; Hardware stack levels required when called:    6
 23450 ;; This function calls:
 23451 ;;		Nothing
 23452 ;; This function is called by:
 23453 ;;		_TMR6_Initialize
 23454 ;; This function uses a reentrant model
 23455 ;;
 23456                           
 23457                           	psect	text96
 23458  018BE6                     __ptext96:
 23459                           	opt callstack 0
 23460  018BE6                     _TMR6_SetInterruptHandler:
 23461                           	opt callstack 22
 23462                           
 23463                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 23464                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23465                           
 23466                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23467                           ;incstack = 0
 23468  018BE6  50E1               	movf	fsr1l,w,c
 23469  018BE8  0FFD               	addlw	-3
 23470  018BEA  6ED9               	movwf	fsr2l,c
 23471  018BEC  50E2               	movf	fsr1h,w,c
 23472  018BEE  6EDA               	movwf	fsr2h,c
 23473  018BF0  0EFF               	movlw	255
 23474  018BF2  22DA               	addwfc	fsr2h,f,c
 23475  018BF4  006F FF78  F09B    	movff	postinc2,_TMR6_InterruptHandler
 23476  018BFA  006F FF78  F09C    	movff	postinc2,_TMR6_InterruptHandler+1
 23477  018C00  006F FF74  F09D    	movff	postdec2,_TMR6_InterruptHandler+2
 23478                           
 23479                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 23480  018C06  52E5               	movf	postdec1,f,c
 23481  018C08  52E5               	movf	postdec1,f,c
 23482  018C0A  52E5               	movf	postdec1,f,c
 23483  018C0C  0012               	return		;funcret
 23484  018C0E                     __end_of_TMR6_SetInterruptHandler:
 23485                           	opt callstack 0
 23486                           
 23487 ;; *************** function _TMR5_Initialize *****************
 23488 ;; Defined at:
 23489 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 23490 ;; Parameters:    Size  Location     Type
 23491 ;;		None
 23492 ;; Auto vars:     Size  Location     Type
 23493 ;;		None
 23494 ;; Return value:  Size  Location     Type
 23495 ;;                  1  [STACK] void 
 23496 ;; Registers used:
 23497 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 23498 ;; Tracked objects:
 23499 ;;		On entry : 0/39
 23500 ;;		On exit  : 0/0
 23501 ;;		Unchanged: 0/0
 23502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23507 ;;Total ram usage:        0 bytes
 23508 ;; Hardware stack levels used:    1
 23509 ;; Hardware stack levels required when called:    7
 23510 ;; This function calls:
 23511 ;;		_TMR5_SetInterruptHandler
 23512 ;; This function is called by:
 23513 ;;		_SYSTEM_Initialize
 23514 ;; This function uses a reentrant model
 23515 ;;
 23516                           
 23517                           	psect	text97
 23518  01864A                     __ptext97:
 23519                           	opt callstack 0
 23520  01864A                     _TMR5_Initialize:
 23521                           	opt callstack 22
 23522                           
 23523                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 23524                           
 23525                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23526                           ;incstack = 0
 23527  01864A  6A9B               	clrf	155,c	;volatile
 23528                           
 23529                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 23530  01864C  6A9C               	clrf	156,c	;volatile
 23531                           
 23532                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 23533  01864E  0E01               	movlw	1
 23534  018650  6E9D               	movwf	157,c	;volatile
 23535                           
 23536                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 23537  018652  0E63               	movlw	99
 23538  018654  6E99               	movwf	153,c	;volatile
 23539                           
 23540                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 23541  018656  0EC0               	movlw	192
 23542  018658  6E98               	movwf	152,c	;volatile
 23543                           
 23544                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 23545  01865A  5098               	movf	152,w,c	;volatile
 23546  01865C  006F FE64  F032    	movff	16281,btemp	;volatile
 23547  018662  6A33               	clrf	(btemp+1)^0,c
 23548  018664  0060  F0C8  F033   	movff	btemp,btemp+1
 23549  01866A  6A32               	clrf	btemp^0,c
 23550  01866C  1032               	iorwf	btemp^0,w,c
 23551  01866E  6E23               	movwf	_timer5ReloadVal^0,c	;volatile
 23552  018670  5033               	movf	(btemp+1)^0,w,c
 23553  018672  6E24               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 23554                           
 23555                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 23556  018674  0139               	movlb	57	; () banked
 23557  018676  9DA8               	bcf	168,6,b	;volatile
 23558                           
 23559                           ; BSR set to: 57
 23560                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 23561  018678  8D98               	bsf	152,6,b	;volatile
 23562                           
 23563                           ; BSR set to: 57
 23564                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 23565  01867A  0ED6               	movlw	low _TMR5_DefaultInterruptHandler
 23566  01867C  6EE6               	movwf	postinc1,c
 23567  01867E  0E8C               	movlw	high _TMR5_DefaultInterruptHandler
 23568  018680  6EE6               	movwf	postinc1,c
 23569  018682  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 23570  018684  6EE6               	movwf	postinc1,c
 23571  018686  EC07  F0C6         	call	_TMR5_SetInterruptHandler	;wreg free
 23572                           
 23573                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 23574  01868A  0E31               	movlw	49
 23575  01868C  6E9A               	movwf	154,c	;volatile
 23576                           
 23577                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23578  01868E  0012               	return		;funcret
 23579  018690                     __end_of_TMR5_Initialize:
 23580                           	opt callstack 0
 23581                           
 23582 ;; *************** function _TMR5_SetInterruptHandler *****************
 23583 ;; Defined at:
 23584 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 23585 ;; Parameters:    Size  Location     Type
 23586 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23587 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 23588 ;; Auto vars:     Size  Location     Type
 23589 ;;		None
 23590 ;; Return value:  Size  Location     Type
 23591 ;;                  1  [STACK] void 
 23592 ;; Registers used:
 23593 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23594 ;; Tracked objects:
 23595 ;;		On entry : 3F/39
 23596 ;;		On exit  : 0/0
 23597 ;;		Unchanged: 0/0
 23598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23603 ;;Total ram usage:        0 bytes
 23604 ;; Hardware stack levels used:    1
 23605 ;; Hardware stack levels required when called:    6
 23606 ;; This function calls:
 23607 ;;		Nothing
 23608 ;; This function is called by:
 23609 ;;		_TMR5_Initialize
 23610 ;; This function uses a reentrant model
 23611 ;;
 23612                           
 23613                           	psect	text98
 23614  018C0E                     __ptext98:
 23615                           	opt callstack 0
 23616  018C0E                     _TMR5_SetInterruptHandler:
 23617                           	opt callstack 22
 23618                           
 23619                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 23620                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23621                           
 23622                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23623                           ;incstack = 0
 23624  018C0E  50E1               	movf	fsr1l,w,c
 23625  018C10  0FFD               	addlw	-3
 23626  018C12  6ED9               	movwf	fsr2l,c
 23627  018C14  50E2               	movf	fsr1h,w,c
 23628  018C16  6EDA               	movwf	fsr2h,c
 23629  018C18  0EFF               	movlw	255
 23630  018C1A  22DA               	addwfc	fsr2h,f,c
 23631  018C1C  006F FF78  F098    	movff	postinc2,_TMR5_InterruptHandler
 23632  018C22  006F FF78  F099    	movff	postinc2,_TMR5_InterruptHandler+1
 23633  018C28  006F FF74  F09A    	movff	postdec2,_TMR5_InterruptHandler+2
 23634                           
 23635                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 23636  018C2E  52E5               	movf	postdec1,f,c
 23637  018C30  52E5               	movf	postdec1,f,c
 23638  018C32  52E5               	movf	postdec1,f,c
 23639  018C34  0012               	return		;funcret
 23640  018C36                     __end_of_TMR5_SetInterruptHandler:
 23641                           	opt callstack 0
 23642                           
 23643 ;; *************** function _TMR2_Initialize *****************
 23644 ;; Defined at:
 23645 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 23646 ;; Parameters:    Size  Location     Type
 23647 ;;		None
 23648 ;; Auto vars:     Size  Location     Type
 23649 ;;		None
 23650 ;; Return value:  Size  Location     Type
 23651 ;;                  1  [STACK] void 
 23652 ;; Registers used:
 23653 ;;		wreg, status,2
 23654 ;; Tracked objects:
 23655 ;;		On entry : 0/3E
 23656 ;;		On exit  : 3F/39
 23657 ;;		Unchanged: 0/0
 23658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23663 ;;Total ram usage:        0 bytes
 23664 ;; Hardware stack levels used:    1
 23665 ;; Hardware stack levels required when called:    6
 23666 ;; This function calls:
 23667 ;;		Nothing
 23668 ;; This function is called by:
 23669 ;;		_SYSTEM_Initialize
 23670 ;; This function uses a reentrant model
 23671 ;;
 23672                           
 23673                           	psect	text99
 23674  018F82                     __ptext99:
 23675                           	opt callstack 0
 23676  018F82                     _TMR2_Initialize:
 23677                           	opt callstack 23
 23678                           
 23679                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 23680                           
 23681                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23682                           ;incstack = 0
 23683  018F82  0E01               	movlw	1
 23684  018F84  6EAE               	movwf	174,c	;volatile
 23685                           
 23686                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 23687  018F86  6AAD               	clrf	173,c	;volatile
 23688                           
 23689                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 23690  018F88  6AAF               	clrf	175,c	;volatile
 23691                           
 23692                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 23693  018F8A  0E63               	movlw	99
 23694  018F8C  6EAB               	movwf	171,c	;volatile
 23695                           
 23696                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 23697  018F8E  6AAA               	clrf	170,c	;volatile
 23698                           
 23699                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 23700  018F90  0139               	movlb	57	; () banked
 23701  018F92  95A4               	bcf	164,2,b	;volatile
 23702                           
 23703                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 23704  018F94  0EC0               	movlw	192
 23705  018F96  6EAC               	movwf	172,c	;volatile
 23706                           
 23707                           ; BSR set to: 57
 23708                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23709  018F98  0012               	return		;funcret
 23710  018F9A                     __end_of_TMR2_Initialize:
 23711                           	opt callstack 0
 23712                           
 23713 ;; *************** function _SPI1_Initialize *****************
 23714 ;; Defined at:
 23715 ;;		line 64 in file "mcc_generated_files/spi1.c"
 23716 ;; Parameters:    Size  Location     Type
 23717 ;;		None
 23718 ;; Auto vars:     Size  Location     Type
 23719 ;;		None
 23720 ;; Return value:  Size  Location     Type
 23721 ;;                  1  [STACK] void 
 23722 ;; Registers used:
 23723 ;;		wreg, status,2
 23724 ;; Tracked objects:
 23725 ;;		On entry : 3F/39
 23726 ;;		On exit  : 3F/3D
 23727 ;;		Unchanged: 0/0
 23728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23733 ;;Total ram usage:        0 bytes
 23734 ;; Hardware stack levels used:    1
 23735 ;; Hardware stack levels required when called:    6
 23736 ;; This function calls:
 23737 ;;		Nothing
 23738 ;; This function is called by:
 23739 ;;		_SYSTEM_Initialize
 23740 ;; This function uses a reentrant model
 23741 ;;
 23742                           
 23743                           	psect	text100
 23744  018F9A                     __ptext100:
 23745                           	opt callstack 0
 23746  018F9A                     _SPI1_Initialize:
 23747                           	opt callstack 23
 23748                           
 23749                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 23750                           
 23751                           ; BSR set to: 57
 23752                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23753                           ;incstack = 0
 23754  018F9A  0E40               	movlw	64
 23755  018F9C  013D               	movlb	61	; () banked
 23756  018F9E  6F15               	movwf	21,b	;volatile
 23757                           
 23758                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 23759  018FA0  0E03               	movlw	3
 23760  018FA2  6F16               	movwf	22,b	;volatile
 23761                           
 23762                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 23763  018FA4  0E4F               	movlw	79
 23764  018FA6  6F19               	movwf	25,b	;volatile
 23765                           
 23766                           ; BSR set to: 61
 23767                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 23768  018FA8  6B1C               	clrf	28,b	;volatile
 23769                           
 23770                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 23771  018FAA  0E83               	movlw	131
 23772  018FAC  6F14               	movwf	20,b	;volatile
 23773                           
 23774                           ; BSR set to: 61
 23775                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23776  018FAE  0012               	return		;funcret
 23777  018FB0                     __end_of_SPI1_Initialize:
 23778                           	opt callstack 0
 23779                           
 23780 ;; *************** function _PWM8_Initialize *****************
 23781 ;; Defined at:
 23782 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 23783 ;; Parameters:    Size  Location     Type
 23784 ;;		None
 23785 ;; Auto vars:     Size  Location     Type
 23786 ;;		None
 23787 ;; Return value:  Size  Location     Type
 23788 ;;                  1  [STACK] void 
 23789 ;; Registers used:
 23790 ;;		wreg, status,2
 23791 ;; Tracked objects:
 23792 ;;		On entry : 3F/39
 23793 ;;		On exit  : 3F/3F
 23794 ;;		Unchanged: 0/0
 23795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23800 ;;Total ram usage:        0 bytes
 23801 ;; Hardware stack levels used:    1
 23802 ;; Hardware stack levels required when called:    6
 23803 ;; This function calls:
 23804 ;;		Nothing
 23805 ;; This function is called by:
 23806 ;;		_SYSTEM_Initialize
 23807 ;; This function uses a reentrant model
 23808 ;;
 23809                           
 23810                           	psect	text101
 23811  018FB0                     __ptext101:
 23812                           	opt callstack 0
 23813  018FB0                     _PWM8_Initialize:
 23814                           	opt callstack 23
 23815                           
 23816                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 23817                           
 23818                           ; BSR set to: 61
 23819                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23820                           ;incstack = 0
 23821  018FB0  0E80               	movlw	128
 23822  018FB2  6E62               	movwf	98,c	;volatile
 23823                           
 23824                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 23825  018FB4  6A61               	clrf	97,c	;volatile
 23826                           
 23827                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 23828  018FB6  0E40               	movlw	64
 23829  018FB8  6E60               	movwf	96,c	;volatile
 23830                           
 23831                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 23832  018FBA  013F               	movlb	63	; () banked
 23833  018FBC  515F               	movf	95,w,b	;volatile
 23834  018FBE  0B3F               	andlw	-193
 23835  018FC0  0940               	iorlw	64
 23836  018FC2  6F5F               	movwf	95,b	;volatile
 23837                           
 23838                           ; BSR set to: 63
 23839                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23840  018FC4  0012               	return		;funcret
 23841  018FC6                     __end_of_PWM8_Initialize:
 23842                           	opt callstack 0
 23843                           
 23844 ;; *************** function _PMD_Initialize *****************
 23845 ;; Defined at:
 23846 ;;		line 89 in file "mcc_generated_files/mcc.c"
 23847 ;; Parameters:    Size  Location     Type
 23848 ;;		None
 23849 ;; Auto vars:     Size  Location     Type
 23850 ;;		None
 23851 ;; Return value:  Size  Location     Type
 23852 ;;                  1  [STACK] void 
 23853 ;; Registers used:
 23854 ;;		None
 23855 ;; Tracked objects:
 23856 ;;		On entry : 3F/39
 23857 ;;		On exit  : 3F/39
 23858 ;;		Unchanged: 0/0
 23859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23864 ;;Total ram usage:        0 bytes
 23865 ;; Hardware stack levels used:    1
 23866 ;; Hardware stack levels required when called:    6
 23867 ;; This function calls:
 23868 ;;		Nothing
 23869 ;; This function is called by:
 23870 ;;		_SYSTEM_Initialize
 23871 ;; This function uses a reentrant model
 23872 ;;
 23873                           
 23874                           	psect	text102
 23875  018FDC                     __ptext102:
 23876                           	opt callstack 0
 23877  018FDC                     _PMD_Initialize:
 23878                           	opt callstack 23
 23879                           
 23880                           ;mcc_generated_files/mcc.c: 92:     PMD0 = 0x00;
 23881                           
 23882                           ; BSR set to: 63
 23883                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23884                           ;incstack = 0
 23885  018FDC  0139               	movlb	57	; () banked
 23886  018FDE  6BC0               	clrf	192,b	;volatile
 23887                           
 23888                           ;mcc_generated_files/mcc.c: 94:     PMD1 = 0x00;
 23889  018FE0  6BC1               	clrf	193,b	;volatile
 23890                           
 23891                           ;mcc_generated_files/mcc.c: 96:     PMD2 = 0x00;
 23892  018FE2  6BC2               	clrf	194,b	;volatile
 23893                           
 23894                           ;mcc_generated_files/mcc.c: 98:     PMD3 = 0x00;
 23895  018FE4  6BC3               	clrf	195,b	;volatile
 23896                           
 23897                           ;mcc_generated_files/mcc.c: 100:     PMD4 = 0x00;
 23898  018FE6  6BC4               	clrf	196,b	;volatile
 23899                           
 23900                           ;mcc_generated_files/mcc.c: 102:     PMD5 = 0x00;
 23901  018FE8  6BC5               	clrf	197,b	;volatile
 23902                           
 23903                           ;mcc_generated_files/mcc.c: 104:     PMD6 = 0x00;
 23904  018FEA  6BC6               	clrf	198,b	;volatile
 23905                           
 23906                           ;mcc_generated_files/mcc.c: 106:     PMD7 = 0x00;
 23907  018FEC  6BC7               	clrf	199,b	;volatile
 23908                           
 23909                           ; BSR set to: 57
 23910                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 23911  018FEE  0012               	return		;funcret
 23912  018FF0                     __end_of_PMD_Initialize:
 23913                           	opt callstack 0
 23914                           
 23915 ;; *************** function _PIN_MANAGER_Initialize *****************
 23916 ;; Defined at:
 23917 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 23918 ;; Parameters:    Size  Location     Type
 23919 ;;		None
 23920 ;; Auto vars:     Size  Location     Type
 23921 ;;		None
 23922 ;; Return value:  Size  Location     Type
 23923 ;;                  1  [STACK] void 
 23924 ;; Registers used:
 23925 ;;		wreg, status,2
 23926 ;; Tracked objects:
 23927 ;;		On entry : 3F/39
 23928 ;;		On exit  : 3F/3A
 23929 ;;		Unchanged: 0/0
 23930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23935 ;;Total ram usage:        0 bytes
 23936 ;; Hardware stack levels used:    1
 23937 ;; Hardware stack levels required when called:    6
 23938 ;; This function calls:
 23939 ;;		Nothing
 23940 ;; This function is called by:
 23941 ;;		_SYSTEM_Initialize
 23942 ;; This function uses a reentrant model
 23943 ;;
 23944                           
 23945                           	psect	text103
 23946  017CD6                     __ptext103:
 23947                           	opt callstack 0
 23948  017CD6                     _PIN_MANAGER_Initialize:
 23949                           	opt callstack 23
 23950                           
 23951                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 23952                           
 23953                           ; BSR set to: 57
 23954                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23955                           ;incstack = 0
 23956  017CD6  0E07               	movlw	7
 23957  017CD8  6EBE               	movwf	190,c	;volatile
 23958                           
 23959                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 23960  017CDA  0E80               	movlw	128
 23961  017CDC  6EBD               	movwf	189,c	;volatile
 23962                           
 23963                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 23964  017CDE  6ABA               	clrf	186,c	;volatile
 23965                           
 23966                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 23967  017CE0  6ABF               	clrf	191,c	;volatile
 23968                           
 23969                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 23970  017CE2  6ABB               	clrf	187,c	;volatile
 23971                           
 23972                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 23973  017CE4  0E07               	movlw	7
 23974  017CE6  6EBC               	movwf	188,c	;volatile
 23975                           
 23976                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 23977  017CE8  6AC6               	clrf	198,c	;volatile
 23978                           
 23979                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 23980  017CEA  0E0F               	movlw	15
 23981  017CEC  6EC7               	movwf	199,c	;volatile
 23982                           
 23983                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 23984  017CEE  68C2               	setf	194,c	;volatile
 23985                           
 23986                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 23987  017CF0  0EBF               	movlw	191
 23988  017CF2  6EC3               	movwf	195,c	;volatile
 23989                           
 23990                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 23991  017CF4  0E90               	movlw	144
 23992  017CF6  6EC4               	movwf	196,c	;volatile
 23993                           
 23994                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 23995  017CF8  0E0C               	movlw	12
 23996  017CFA  6EC5               	movwf	197,c	;volatile
 23997                           
 23998                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 23999  017CFC  013A               	movlb	58	; () banked
 24000  017CFE  6B70               	clrf	112,b	;volatile
 24001                           
 24002                           ; BSR set to: 58
 24003                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 24004  017D00  6B60               	clrf	96,b	;volatile
 24005                           
 24006                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 24007  017D02  0E3C               	movlw	60
 24008  017D04  6F50               	movwf	80,b	;volatile
 24009                           
 24010                           ; BSR set to: 58
 24011                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 24012  017D06  6B80               	clrf	128,b	;volatile
 24013                           
 24014                           ; BSR set to: 58
 24015                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 24016  017D08  6B90               	clrf	144,b	;volatile
 24017                           
 24018                           ; BSR set to: 58
 24019                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 24020  017D0A  6940               	setf	64,b	;volatile
 24021                           
 24022                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 24023  017D0C  0E0C               	movlw	12
 24024  017D0E  6F71               	movwf	113,b	;volatile
 24025                           
 24026                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 24027  017D10  0E0F               	movlw	15
 24028  017D12  6F91               	movwf	145,b	;volatile
 24029                           
 24030                           ; BSR set to: 58
 24031                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 24032  017D14  6B81               	clrf	129,b	;volatile
 24033                           
 24034                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 24035  017D16  0E83               	movlw	131
 24036  017D18  6F51               	movwf	81,b	;volatile
 24037                           
 24038                           ; BSR set to: 58
 24039                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 24040  017D1A  6B41               	clrf	65,b	;volatile
 24041                           
 24042                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 24043  017D1C  0E97               	movlw	151
 24044  017D1E  6F61               	movwf	97,b	;volatile
 24045                           
 24046                           ; BSR set to: 58
 24047                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 24048  017D20  6B82               	clrf	130,b	;volatile
 24049                           
 24050                           ; BSR set to: 58
 24051                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 24052  017D22  6B92               	clrf	146,b	;volatile
 24053                           
 24054                           ; BSR set to: 58
 24055                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 24056  017D24  6B42               	clrf	66,b	;volatile
 24057                           
 24058                           ; BSR set to: 58
 24059                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 24060  017D26  6B52               	clrf	82,b	;volatile
 24061                           
 24062                           ; BSR set to: 58
 24063                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 24064  017D28  6B62               	clrf	98,b	;volatile
 24065                           
 24066                           ; BSR set to: 58
 24067                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 24068  017D2A  6B72               	clrf	114,b	;volatile
 24069                           
 24070                           ; BSR set to: 58
 24071                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 24072  017D2C  6943               	setf	67,b	;volatile
 24073                           
 24074                           ; BSR set to: 58
 24075                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 24076  017D2E  6953               	setf	83,b	;volatile
 24077                           
 24078                           ; BSR set to: 58
 24079                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 24080  017D30  6963               	setf	99,b	;volatile
 24081                           
 24082                           ; BSR set to: 58
 24083                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 24084  017D32  6973               	setf	115,b	;volatile
 24085                           
 24086                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 24087  017D34  0E07               	movlw	7
 24088  017D36  6F83               	movwf	131,b	;volatile
 24089                           
 24090                           ; BSR set to: 58
 24091                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 24092  017D38  6993               	setf	147,b	;volatile
 24093                           
 24094                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 24095  017D3A  0E0F               	movlw	15
 24096  017D3C  6FE8               	movwf	232,b	;volatile
 24097                           
 24098                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 24099  017D3E  0E13               	movlw	19
 24100  017D40  6FDE               	movwf	222,b	;volatile
 24101                           
 24102                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 24103  017D42  0E16               	movlw	22
 24104  017D44  6F0E               	movwf	14,b	;volatile
 24105                           
 24106                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 24107  017D46  0E1E               	movlw	30
 24108  017D48  6F13               	movwf	19,b	;volatile
 24109                           
 24110                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 24111  017D4A  0E08               	movlw	8
 24112  017D4C  6FC0               	movwf	192,b	;volatile
 24113                           
 24114                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 24115  017D4E  0E10               	movlw	16
 24116  017D50  6F19               	movwf	25,b	;volatile
 24117                           
 24118                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 24119  017D52  0E09               	movlw	9
 24120  017D54  6FC1               	movwf	193,b	;volatile
 24121                           
 24122                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 24123  017D56  0E1F               	movlw	31
 24124  017D58  6F15               	movwf	21,b	;volatile
 24125                           
 24126                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 24127  017D5A  0E13               	movlw	19
 24128  017D5C  6F16               	movwf	22,b	;volatile
 24129                           
 24130                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 24131  017D5E  0E17               	movlw	23
 24132  017D60  6FE5               	movwf	229,b	;volatile
 24133                           
 24134                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 24135  017D62  0E14               	movlw	20
 24136  017D64  6FDF               	movwf	223,b	;volatile
 24137                           
 24138                           ; BSR set to: 58
 24139                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 24140  017D66  0012               	return		;funcret
 24141  017D68                     __end_of_PIN_MANAGER_Initialize:
 24142                           	opt callstack 0
 24143                           
 24144 ;; *************** function _OSCILLATOR_Initialize *****************
 24145 ;; Defined at:
 24146 ;;		line 71 in file "mcc_generated_files/mcc.c"
 24147 ;; Parameters:    Size  Location     Type
 24148 ;;		None
 24149 ;; Auto vars:     Size  Location     Type
 24150 ;;		None
 24151 ;; Return value:  Size  Location     Type
 24152 ;;                  1  [STACK] void 
 24153 ;; Registers used:
 24154 ;;		wreg, status,2
 24155 ;; Tracked objects:
 24156 ;;		On entry : 3F/3A
 24157 ;;		On exit  : 3F/39
 24158 ;;		Unchanged: 0/0
 24159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24164 ;;Total ram usage:        0 bytes
 24165 ;; Hardware stack levels used:    1
 24166 ;; Hardware stack levels required when called:    6
 24167 ;; This function calls:
 24168 ;;		Nothing
 24169 ;; This function is called by:
 24170 ;;		_SYSTEM_Initialize
 24171 ;; This function uses a reentrant model
 24172 ;;
 24173                           
 24174                           	psect	text104
 24175  018FC6                     __ptext104:
 24176                           	opt callstack 0
 24177  018FC6                     _OSCILLATOR_Initialize:
 24178                           	opt callstack 23
 24179                           
 24180                           ;mcc_generated_files/mcc.c: 74:     OSCCON1 = 0x20;
 24181                           
 24182                           ; BSR set to: 58
 24183                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24184                           ;incstack = 0
 24185  018FC6  0E20               	movlw	32
 24186  018FC8  0139               	movlb	57	; () banked
 24187  018FCA  6FD9               	movwf	217,b	;volatile
 24188                           
 24189                           ; BSR set to: 57
 24190                           ;mcc_generated_files/mcc.c: 76:     OSCCON3 = 0x00;
 24191  018FCC  6BDB               	clrf	219,b	;volatile
 24192                           
 24193                           ; BSR set to: 57
 24194                           ;mcc_generated_files/mcc.c: 78:     OSCEN = 0x00;
 24195  018FCE  6BDD               	clrf	221,b	;volatile
 24196                           
 24197                           ;mcc_generated_files/mcc.c: 80:     OSCFRQ = 0x02;
 24198  018FD0  0E02               	movlw	2
 24199  018FD2  6FDF               	movwf	223,b	;volatile
 24200                           
 24201                           ; BSR set to: 57
 24202                           ;mcc_generated_files/mcc.c: 82:     OSCTUNE = 0x00;
 24203  018FD4  6BDE               	clrf	222,b	;volatile
 24204  018FD6                     l171:
 24205                           
 24206                           ; BSR set to: 57
 24207                           ;mcc_generated_files/mcc.c: 84:     while(PLLR == 0)
 24208  018FD6  B1DC               	btfsc	220,0,b	;volatile
 24209  018FD8  0012               	return	
 24210  018FDA  D7FD               	goto	l171
 24211  018FDC                     __end_of_OSCILLATOR_Initialize:
 24212                           	opt callstack 0
 24213                           
 24214 ;; *************** function _INTERRUPT_Initialize *****************
 24215 ;; Defined at:
 24216 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 24217 ;; Parameters:    Size  Location     Type
 24218 ;;		None
 24219 ;; Auto vars:     Size  Location     Type
 24220 ;;  state           1  [STACK] _Bool 
 24221 ;; Return value:  Size  Location     Type
 24222 ;;                  1  [STACK] void 
 24223 ;; Registers used:
 24224 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 24225 ;; Tracked objects:
 24226 ;;		On entry : 0/0
 24227 ;;		On exit  : 3F/39
 24228 ;;		Unchanged: 0/0
 24229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24234 ;;Total ram usage:        0 bytes
 24235 ;; Hardware stack levels used:    1
 24236 ;; Hardware stack levels required when called:    6
 24237 ;; This function calls:
 24238 ;;		Nothing
 24239 ;; This function is called by:
 24240 ;;		_SYSTEM_Initialize
 24241 ;; This function uses a reentrant model
 24242 ;;
 24243                           
 24244                           	psect	text105
 24245  01812C                     __ptext105:
 24246                           	opt callstack 0
 24247  01812C                     _INTERRUPT_Initialize:
 24248                           	opt callstack 0
 24249                           
 24250                           ; BSR set to: 57
 24251                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24252  01812C  52E6               	movf	postinc1,f,c
 24253                           
 24254                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 24255                           
 24256                           ;incstack = 0
 24257  01812E  8AD2               	bsf	210,5,c	;volatile
 24258                           
 24259                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 24260  018130  AED2               	btfss	16338,7,c	;volatile
 24261  018132  D003               	goto	u8430
 24262  018134  6A3D               	clrf	(btemp+11)^0,c
 24263  018136  2A3D               	incf	(btemp+11)^0,f,c
 24264  018138  D001               	goto	u8448
 24265  01813A                     u8430:
 24266  01813A  6A3D               	clrf	(btemp+11)^0,c
 24267  01813C                     u8448:
 24268                           
 24269                           ;stkvar	_state @ sp[(-1)+0]
 24270  01813C  0EFF               	movlw	-1
 24271  01813E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 24272                           
 24273                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 24274  018144  9ED2               	bcf	16338,7,c	;volatile
 24275                           
 24276                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 24277  018146  0E55               	movlw	85
 24278  018148  6ED4               	movwf	212,c	;volatile
 24279                           
 24280                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 24281  01814A  0EAA               	movlw	170
 24282  01814C  6ED4               	movwf	212,c	;volatile
 24283                           
 24284                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 24285  01814E  90D4               	bcf	212,0,c	;volatile
 24286                           
 24287                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 24288  018150  0138               	movlb	56	; () banked
 24289  018152  6B9F               	clrf	159,b	;volatile
 24290                           
 24291                           ; BSR set to: 56
 24292                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 24293  018154  6B9E               	clrf	158,b	;volatile
 24294                           
 24295                           ; BSR set to: 56
 24296                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 24297  018156  0E08               	movlw	8
 24298  018158  6F9D               	movwf	157,b	;volatile
 24299                           
 24300                           ; BSR set to: 56
 24301                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 24302  01815A  0E55               	movlw	85
 24303  01815C  6ED4               	movwf	212,c	;volatile
 24304                           
 24305                           ; BSR set to: 56
 24306                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 24307  01815E  0EAA               	movlw	170
 24308  018160  6ED4               	movwf	212,c	;volatile
 24309                           
 24310                           ; BSR set to: 56
 24311                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 24312  018162  80D4               	bsf	212,0,c	;volatile
 24313                           
 24314                           ; BSR set to: 56
 24315                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 24316                           ;stkvar	_state @ sp[(-1)+0]
 24317  018164  0EFF               	movlw	-1
 24318  018166  B0E3               	btfsc	plusw1,0,c
 24319  018168  D002               	bra	u8455
 24320  01816A  9ED2               	bcf	16338,7,c	;volatile
 24321  01816C  D001               	bra	u8456
 24322  01816E                     u8455:
 24323  01816E  8ED2               	bsf	16338,7,c	;volatile
 24324  018170                     u8456:
 24325                           
 24326                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 24327  018170  0139               	movlb	57	; () banked
 24328  018172  8782               	bsf	130,3,b	;volatile
 24329                           
 24330                           ; BSR set to: 57
 24331                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 24332  018174  8382               	bsf	130,1,b	;volatile
 24333                           
 24334                           ; BSR set to: 57
 24335                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 24336  018176  8182               	bsf	130,0,b	;volatile
 24337                           
 24338                           ; BSR set to: 57
 24339                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 24340  018178  8582               	bsf	130,2,b	;volatile
 24341                           
 24342                           ; BSR set to: 57
 24343                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 24344  01817A  8786               	bsf	134,3,b	;volatile
 24345                           
 24346                           ; BSR set to: 57
 24347                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 24348  01817C  8586               	bsf	134,2,b	;volatile
 24349                           
 24350                           ; BSR set to: 57
 24351                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 24352  01817E  8983               	bsf	131,4,b	;volatile
 24353                           
 24354                           ; BSR set to: 57
 24355                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 24356  018180  8783               	bsf	131,3,b	;volatile
 24357                           
 24358                           ; BSR set to: 57
 24359                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 24360  018182  8181               	bsf	129,0,b	;volatile
 24361                           
 24362                           ; BSR set to: 57
 24363                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 0;
 24364  018184  9185               	bcf	133,0,b	;volatile
 24365                           
 24366                           ; BSR set to: 57
 24367                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR9bits.TMR6IP = 1;
 24368  018186  8189               	bsf	137,0,b	;volatile
 24369                           
 24370                           ; BSR set to: 57
 24371                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR8bits.TMR5IP = 0;
 24372  018188  9D88               	bcf	136,6,b	;volatile
 24373                           
 24374                           ; BSR set to: 57
 24375                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 24376  01818A  8581               	bsf	129,2,b	;volatile
 24377                           
 24378                           ; BSR set to: 57
 24379                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 24380  01818C  8781               	bsf	129,3,b	;volatile
 24381                           
 24382                           ; BSR set to: 57
 24383                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 24384  01818E  52E5               	movf	postdec1,f,c
 24385  018190  0012               	return		;funcret
 24386  018192                     __end_of_INTERRUPT_Initialize:
 24387                           	opt callstack 0
 24388                           
 24389 ;; *************** function _FVR_Initialize *****************
 24390 ;; Defined at:
 24391 ;;		line 58 in file "mcc_generated_files/fvr.c"
 24392 ;; Parameters:    Size  Location     Type
 24393 ;;		None
 24394 ;; Auto vars:     Size  Location     Type
 24395 ;;		None
 24396 ;; Return value:  Size  Location     Type
 24397 ;;                  1  [STACK] void 
 24398 ;; Registers used:
 24399 ;;		wreg, status,2
 24400 ;; Tracked objects:
 24401 ;;		On entry : 3F/39
 24402 ;;		On exit  : 3F/3E
 24403 ;;		Unchanged: 0/0
 24404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24409 ;;Total ram usage:        0 bytes
 24410 ;; Hardware stack levels used:    1
 24411 ;; Hardware stack levels required when called:    6
 24412 ;; This function calls:
 24413 ;;		Nothing
 24414 ;; This function is called by:
 24415 ;;		_SYSTEM_Initialize
 24416 ;; This function uses a reentrant model
 24417 ;;
 24418                           
 24419                           	psect	text106
 24420  01909A                     __ptext106:
 24421                           	opt callstack 0
 24422  01909A                     _FVR_Initialize:
 24423                           	opt callstack 23
 24424                           
 24425                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 24426                           
 24427                           ; BSR set to: 57
 24428                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24429                           ;incstack = 0
 24430  01909A  0EAF               	movlw	175
 24431  01909C  013E               	movlb	62	; () banked
 24432  01909E  6FC1               	movwf	193,b	;volatile
 24433                           
 24434                           ; BSR set to: 62
 24435                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 24436  0190A0  0012               	return		;funcret
 24437  0190A2                     __end_of_FVR_Initialize:
 24438                           	opt callstack 0
 24439                           
 24440 ;; *************** function _EXT_INT_Initialize *****************
 24441 ;; Defined at:
 24442 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 24443 ;; Parameters:    Size  Location     Type
 24444 ;;		None
 24445 ;; Auto vars:     Size  Location     Type
 24446 ;;		None
 24447 ;; Return value:  Size  Location     Type
 24448 ;;                  1  [STACK] void 
 24449 ;; Registers used:
 24450 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24451 ;; Tracked objects:
 24452 ;;		On entry : 3F/3F
 24453 ;;		On exit  : 3F/39
 24454 ;;		Unchanged: 0/0
 24455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24460 ;;Total ram usage:        0 bytes
 24461 ;; Hardware stack levels used:    1
 24462 ;; Hardware stack levels required when called:    7
 24463 ;; This function calls:
 24464 ;;		_INT0_SetInterruptHandler
 24465 ;;		_INT1_SetInterruptHandler
 24466 ;; This function is called by:
 24467 ;;		_SYSTEM_Initialize
 24468 ;; This function uses a reentrant model
 24469 ;;
 24470                           
 24471                           	psect	text107
 24472  01892E                     __ptext107:
 24473                           	opt callstack 0
 24474  01892E                     _EXT_INT_Initialize:
 24475                           	opt callstack 22
 24476                           
 24477                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 24478                           
 24479                           ; BSR set to: 62
 24480                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24481                           ;incstack = 0
 24482  01892E  0139               	movlb	57	; () banked
 24483  018930  91A1               	bcf	161,0,b	;volatile
 24484                           
 24485                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 24486  018932  90D2               	bcf	210,0,c	;volatile
 24487                           
 24488                           ; BSR set to: 57
 24489                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 24490  018934  0EBC               	movlw	low _INT0_DefaultInterruptHandler
 24491  018936  6EE6               	movwf	postinc1,c
 24492  018938  0E90               	movlw	high _INT0_DefaultInterruptHandler
 24493  01893A  6EE6               	movwf	postinc1,c
 24494  01893C  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 24495  01893E  6EE6               	movwf	postinc1,c
 24496  018940  EC2F  F0C6         	call	_INT0_SetInterruptHandler	;wreg free
 24497                           
 24498                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 24499  018944  0139               	movlb	57	; () banked
 24500  018946  8191               	bsf	145,0,b	;volatile
 24501                           
 24502                           ; BSR set to: 57
 24503                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 24504  018948  91A5               	bcf	165,0,b	;volatile
 24505                           
 24506                           ; BSR set to: 57
 24507                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 24508  01894A  92D2               	bcf	210,1,c	;volatile
 24509                           
 24510                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 24511  01894C  0EBA               	movlw	low _INT1_DefaultInterruptHandler
 24512  01894E  6EE6               	movwf	postinc1,c
 24513  018950  0E90               	movlw	high _INT1_DefaultInterruptHandler
 24514  018952  6EE6               	movwf	postinc1,c
 24515  018954  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 24516  018956  6EE6               	movwf	postinc1,c
 24517  018958  EC1B  F0C6         	call	_INT1_SetInterruptHandler	;wreg free
 24518                           
 24519                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 24520  01895C  0139               	movlb	57	; () banked
 24521  01895E  8195               	bsf	149,0,b	;volatile
 24522                           
 24523                           ; BSR set to: 57
 24524                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 24525  018960  0012               	return		;funcret
 24526  018962                     __end_of_EXT_INT_Initialize:
 24527                           	opt callstack 0
 24528                           
 24529 ;; *************** function _INT1_SetInterruptHandler *****************
 24530 ;; Defined at:
 24531 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 24532 ;; Parameters:    Size  Location     Type
 24533 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24534 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 24535 ;; Auto vars:     Size  Location     Type
 24536 ;;		None
 24537 ;; Return value:  Size  Location     Type
 24538 ;;                  1  [STACK] void 
 24539 ;; Registers used:
 24540 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24541 ;; Tracked objects:
 24542 ;;		On entry : 3F/39
 24543 ;;		On exit  : 0/0
 24544 ;;		Unchanged: 0/0
 24545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24550 ;;Total ram usage:        0 bytes
 24551 ;; Hardware stack levels used:    1
 24552 ;; Hardware stack levels required when called:    6
 24553 ;; This function calls:
 24554 ;;		Nothing
 24555 ;; This function is called by:
 24556 ;;		_EXT_INT_Initialize
 24557 ;;		_start_switch_handler
 24558 ;; This function uses a reentrant model
 24559 ;;
 24560                           
 24561                           	psect	text108
 24562  018C36                     __ptext108:
 24563                           	opt callstack 0
 24564  018C36                     _INT1_SetInterruptHandler:
 24565                           	opt callstack 23
 24566                           
 24567                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 24568                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24569                           
 24570                           ; BSR set to: 57
 24571                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24572                           ;incstack = 0
 24573  018C36  50E1               	movf	fsr1l,w,c
 24574  018C38  0FFD               	addlw	-3
 24575  018C3A  6ED9               	movwf	fsr2l,c
 24576  018C3C  50E2               	movf	fsr1h,w,c
 24577  018C3E  6EDA               	movwf	fsr2h,c
 24578  018C40  0EFF               	movlw	255
 24579  018C42  22DA               	addwfc	fsr2h,f,c
 24580  018C44  006F FF78  F013    	movff	postinc2,_INT1_InterruptHandler
 24581  018C4A  006F FF78  F014    	movff	postinc2,_INT1_InterruptHandler+1
 24582  018C50  006F FF74  F015    	movff	postdec2,_INT1_InterruptHandler+2
 24583                           
 24584                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24585  018C56  52E5               	movf	postdec1,f,c
 24586  018C58  52E5               	movf	postdec1,f,c
 24587  018C5A  52E5               	movf	postdec1,f,c
 24588  018C5C  0012               	return		;funcret
 24589  018C5E                     __end_of_INT1_SetInterruptHandler:
 24590                           	opt callstack 0
 24591                           
 24592 ;; *************** function _INT0_SetInterruptHandler *****************
 24593 ;; Defined at:
 24594 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 24595 ;; Parameters:    Size  Location     Type
 24596 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24597 ;;		 -> INT0_DefaultInterruptHandler(1), 
 24598 ;; Auto vars:     Size  Location     Type
 24599 ;;		None
 24600 ;; Return value:  Size  Location     Type
 24601 ;;                  1  [STACK] void 
 24602 ;; Registers used:
 24603 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24604 ;; Tracked objects:
 24605 ;;		On entry : 3F/39
 24606 ;;		On exit  : 0/0
 24607 ;;		Unchanged: 0/0
 24608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24613 ;;Total ram usage:        0 bytes
 24614 ;; Hardware stack levels used:    1
 24615 ;; Hardware stack levels required when called:    6
 24616 ;; This function calls:
 24617 ;;		Nothing
 24618 ;; This function is called by:
 24619 ;;		_EXT_INT_Initialize
 24620 ;; This function uses a reentrant model
 24621 ;;
 24622                           
 24623                           	psect	text109
 24624  018C5E                     __ptext109:
 24625                           	opt callstack 0
 24626  018C5E                     _INT0_SetInterruptHandler:
 24627                           	opt callstack 22
 24628                           
 24629                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 24630                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24631                           
 24632                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24633                           ;incstack = 0
 24634  018C5E  50E1               	movf	fsr1l,w,c
 24635  018C60  0FFD               	addlw	-3
 24636  018C62  6ED9               	movwf	fsr2l,c
 24637  018C64  50E2               	movf	fsr1h,w,c
 24638  018C66  6EDA               	movwf	fsr2h,c
 24639  018C68  0EFF               	movlw	255
 24640  018C6A  22DA               	addwfc	fsr2h,f,c
 24641  018C6C  006F FF78  F016    	movff	postinc2,_INT0_InterruptHandler
 24642  018C72  006F FF78  F017    	movff	postinc2,_INT0_InterruptHandler+1
 24643  018C78  006F FF74  F018    	movff	postdec2,_INT0_InterruptHandler+2
 24644                           
 24645                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24646  018C7E  52E5               	movf	postdec1,f,c
 24647  018C80  52E5               	movf	postdec1,f,c
 24648  018C82  52E5               	movf	postdec1,f,c
 24649  018C84  0012               	return		;funcret
 24650  018C86                     __end_of_INT0_SetInterruptHandler:
 24651                           	opt callstack 0
 24652                           
 24653 ;; *************** function _DMA2_Initialize *****************
 24654 ;; Defined at:
 24655 ;;		line 61 in file "mcc_generated_files/dma2.c"
 24656 ;; Parameters:    Size  Location     Type
 24657 ;;		None
 24658 ;; Auto vars:     Size  Location     Type
 24659 ;;		None
 24660 ;; Return value:  Size  Location     Type
 24661 ;;                  1  [STACK] void 
 24662 ;; Registers used:
 24663 ;;		wreg, status,2
 24664 ;; Tracked objects:
 24665 ;;		On entry : 3F/3D
 24666 ;;		On exit  : 3F/3B
 24667 ;;		Unchanged: 0/0
 24668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24673 ;;Total ram usage:        0 bytes
 24674 ;; Hardware stack levels used:    1
 24675 ;; Hardware stack levels required when called:    6
 24676 ;; This function calls:
 24677 ;;		Nothing
 24678 ;; This function is called by:
 24679 ;;		_SYSTEM_Initialize
 24680 ;; This function uses a reentrant model
 24681 ;;
 24682                           
 24683                           	psect	text110
 24684  018432                     __ptext110:
 24685                           	opt callstack 0
 24686  018432                     _DMA2_Initialize:
 24687                           	opt callstack 23
 24688                           
 24689                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 24690                           
 24691                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24692                           ;incstack = 0
 24693  018432  0E00               	movlw	0
 24694  018434  013B               	movlb	59	; () banked
 24695  018436  6FD9               	movwf	217,b	;volatile
 24696  018438  0E10               	movlw	16
 24697  01843A  6FDA               	movwf	218,b	;volatile
 24698  01843C  0E00               	movlw	0
 24699  01843E  6FDB               	movwf	219,b	;volatile
 24700                           
 24701                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 24702  018440  0E3F               	movlw	63
 24703  018442  6FD1               	movwf	209,b	;volatile
 24704  018444  0EBB               	movlw	187
 24705  018446  6FD0               	movwf	208,b	;volatile
 24706                           
 24707                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 24708  018448  0E03               	movlw	3
 24709  01844A  6FDD               	movwf	221,b	;volatile
 24710                           
 24711                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 24712  01844C  0E00               	movlw	0
 24713  01844E  6FD8               	movwf	216,b	;volatile
 24714  018450  0E01               	movlw	1
 24715  018452  6FD7               	movwf	215,b	;volatile
 24716                           
 24717                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 24718  018454  0E00               	movlw	0
 24719  018456  6FCF               	movwf	207,b	;volatile
 24720  018458  0E01               	movlw	1
 24721  01845A  6FCE               	movwf	206,b	;volatile
 24722                           
 24723                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 24724  01845C  0E46               	movlw	70
 24725  01845E  6FDF               	movwf	223,b	;volatile
 24726                           
 24727                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 24728  018460  0E3D               	movlw	61
 24729  018462  6FDE               	movwf	222,b	;volatile
 24730                           
 24731                           ; BSR set to: 59
 24732                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 24733  018464  0139               	movlb	57	; () banked
 24734  018466  97A5               	bcf	165,3,b	;volatile
 24735                           
 24736                           ; BSR set to: 57
 24737                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 24738  018468  95A5               	bcf	165,2,b	;volatile
 24739                           
 24740                           ; BSR set to: 57
 24741                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 24742  01846A  9BA5               	bcf	165,5,b	;volatile
 24743                           
 24744                           ; BSR set to: 57
 24745                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 24746  01846C  99A5               	bcf	165,4,b	;volatile
 24747                           
 24748                           ; BSR set to: 57
 24749                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 24750  01846E  9795               	bcf	149,3,b	;volatile
 24751                           
 24752                           ; BSR set to: 57
 24753                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 24754  018470  9595               	bcf	149,2,b	;volatile
 24755                           
 24756                           ; BSR set to: 57
 24757                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 24758  018472  9B95               	bcf	149,5,b	;volatile
 24759                           
 24760                           ; BSR set to: 57
 24761                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 24762  018474  9995               	bcf	149,4,b	;volatile
 24763  018476  9ED2               	bcf	16338,7,c	;# 
 24764  018478  0139               	banksel	14831	;# 
 24765  01847A  0E55               	movlw	85	;# 
 24766  01847C  6FEF               	movwf	14831,b	;# 
 24767  01847E  0EAA               	movlw	170	;# 
 24768  018480  6FEF               	movwf	14831,b	;# 
 24769  018482  81EF               	bsf	14831,0,b	;# 
 24770  018484  8ED2               	bsf	16338,7,c	;# 
 24771                           
 24772                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 24773  018486  013B               	movlb	59	; () banked
 24774  018488  6BDC               	clrf	220,b	;volatile
 24775                           
 24776                           ; BSR set to: 59
 24777                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24778  01848A  0012               	return		;funcret
 24779  01848C                     __end_of_DMA2_Initialize:
 24780                           	opt callstack 0
 24781                           
 24782 ;; *************** function _DMA1_Initialize *****************
 24783 ;; Defined at:
 24784 ;;		line 86 in file "mcc_generated_files/dma1.c"
 24785 ;; Parameters:    Size  Location     Type
 24786 ;;		None
 24787 ;; Auto vars:     Size  Location     Type
 24788 ;;		None
 24789 ;; Return value:  Size  Location     Type
 24790 ;;                  1  [STACK] void 
 24791 ;; Registers used:
 24792 ;;		wreg, status,2
 24793 ;; Tracked objects:
 24794 ;;		On entry : 3F/3B
 24795 ;;		On exit  : 3F/3B
 24796 ;;		Unchanged: 0/0
 24797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24802 ;;Total ram usage:        0 bytes
 24803 ;; Hardware stack levels used:    1
 24804 ;; Hardware stack levels required when called:    6
 24805 ;; This function calls:
 24806 ;;		Nothing
 24807 ;; This function is called by:
 24808 ;;		_SYSTEM_Initialize
 24809 ;; This function uses a reentrant model
 24810 ;;
 24811                           
 24812                           	psect	text111
 24813  017FF0                     __ptext111:
 24814                           	opt callstack 0
 24815  017FF0                     _DMA1_Initialize:
 24816                           	opt callstack 23
 24817                           
 24818                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 24819                           
 24820                           ; BSR set to: 59
 24821                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24822                           ;incstack = 0
 24823  017FF0  0E00               	movlw	0
 24824  017FF2  013B               	movlb	59	; () banked
 24825  017FF4  6FF9               	movwf	249,b	;volatile
 24826  017FF6  0E10               	movlw	16
 24827  017FF8  6FFA               	movwf	250,b	;volatile
 24828  017FFA  0E00               	movlw	0
 24829  017FFC  6FFB               	movwf	251,b	;volatile
 24830                           
 24831                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 24832  017FFE  0E3D               	movlw	61
 24833  018000  6FF1               	movwf	241,b	;volatile
 24834  018002  0E11               	movlw	17
 24835  018004  6FF0               	movwf	240,b	;volatile
 24836                           
 24837                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 24838  018006  0E03               	movlw	3
 24839  018008  6FFD               	movwf	253,b	;volatile
 24840                           
 24841                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 24842  01800A  0E00               	movlw	0
 24843  01800C  6FF8               	movwf	248,b	;volatile
 24844  01800E  0E01               	movlw	1
 24845  018010  6FF7               	movwf	247,b	;volatile
 24846                           
 24847                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 24848  018012  0E00               	movlw	0
 24849  018014  6FEF               	movwf	239,b	;volatile
 24850  018016  0E01               	movlw	1
 24851  018018  6FEE               	movwf	238,b	;volatile
 24852                           
 24853                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 24854  01801A  0E15               	movlw	21
 24855  01801C  6FFF               	movwf	255,b	;volatile
 24856                           
 24857                           ; BSR set to: 59
 24858                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 24859  01801E  6BFE               	clrf	254,b	;volatile
 24860                           
 24861                           ; BSR set to: 59
 24862                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 24863  018020  0139               	movlb	57	; () banked
 24864  018022  93A2               	bcf	162,1,b	;volatile
 24865                           
 24866                           ; BSR set to: 57
 24867                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 24868  018024  91A2               	bcf	162,0,b	;volatile
 24869                           
 24870                           ; BSR set to: 57
 24871                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 24872  018026  97A2               	bcf	162,3,b	;volatile
 24873                           
 24874                           ; BSR set to: 57
 24875                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 24876  018028  95A2               	bcf	162,2,b	;volatile
 24877                           
 24878                           ; BSR set to: 57
 24879                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 24880  01802A  8392               	bsf	146,1,b	;volatile
 24881                           
 24882                           ; BSR set to: 57
 24883                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 24884  01802C  8192               	bsf	146,0,b	;volatile
 24885                           
 24886                           ; BSR set to: 57
 24887                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 24888  01802E  8792               	bsf	146,3,b	;volatile
 24889                           
 24890                           ; BSR set to: 57
 24891                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 24892  018030  8592               	bsf	146,2,b	;volatile
 24893                           
 24894                           ; BSR set to: 57
 24895                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 24896  018032  6BF1               	clrf	241,b	;volatile
 24897                           
 24898                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 24899  018034  0E01               	movlw	1
 24900  018036  6FF2               	movwf	242,b	;volatile
 24901                           
 24902                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 24903  018038  0E04               	movlw	4
 24904  01803A  6FF3               	movwf	243,b	;volatile
 24905                           
 24906                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 24907  01803C  0E02               	movlw	2
 24908  01803E  6FF4               	movwf	244,b	;volatile
 24909                           
 24910                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 24911  018040  0E03               	movlw	3
 24912  018042  6FF7               	movwf	247,b	;volatile
 24913  018044  9ED2               	bcf	16338,7,c	;# 
 24914  018046  0139               	banksel	14831	;# 
 24915  018048  0E55               	movlw	85	;# 
 24916  01804A  6FEF               	movwf	14831,b	;# 
 24917  01804C  0EAA               	movlw	170	;# 
 24918  01804E  6FEF               	movwf	14831,b	;# 
 24919  018050  81EF               	bsf	14831,0,b	;# 
 24920  018052  8ED2               	bsf	16338,7,c	;# 
 24921                           
 24922                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 24923  018054  013B               	movlb	59	; () banked
 24924  018056  6BFC               	clrf	252,b	;volatile
 24925                           
 24926                           ; BSR set to: 59
 24927                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24928  018058  0012               	return		;funcret
 24929  01805A                     __end_of_DMA1_Initialize:
 24930                           	opt callstack 0
 24931                           
 24932 ;; *************** function _CLKREF_Initialize *****************
 24933 ;; Defined at:
 24934 ;;		line 58 in file "mcc_generated_files/clkref.c"
 24935 ;; Parameters:    Size  Location     Type
 24936 ;;		None
 24937 ;; Auto vars:     Size  Location     Type
 24938 ;;		None
 24939 ;; Return value:  Size  Location     Type
 24940 ;;                  1  [STACK] void 
 24941 ;; Registers used:
 24942 ;;		wreg, status,2
 24943 ;; Tracked objects:
 24944 ;;		On entry : 3F/3B
 24945 ;;		On exit  : 3F/3C
 24946 ;;		Unchanged: 0/0
 24947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24952 ;;Total ram usage:        0 bytes
 24953 ;; Hardware stack levels used:    1
 24954 ;; Hardware stack levels required when called:    6
 24955 ;; This function calls:
 24956 ;;		Nothing
 24957 ;; This function is called by:
 24958 ;;		_SYSTEM_Initialize
 24959 ;; This function uses a reentrant model
 24960 ;;
 24961                           
 24962                           	psect	text112
 24963  01904E                     __ptext112:
 24964                           	opt callstack 0
 24965  01904E                     _CLKREF_Initialize:
 24966                           	opt callstack 23
 24967                           
 24968                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 24969                           
 24970                           ; BSR set to: 59
 24971                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24972                           ;incstack = 0
 24973  01904E  013C               	movlb	60	; () banked
 24974  019050  6BE6               	clrf	230,b	;volatile
 24975                           
 24976                           ; BSR set to: 60
 24977                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 24978  019052  0E94               	movlw	148
 24979  019054  6FE5               	movwf	229,b	;volatile
 24980                           
 24981                           ; BSR set to: 60
 24982                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 24983  019056  0012               	return		;funcret
 24984  019058                     __end_of_CLKREF_Initialize:
 24985                           	opt callstack 0
 24986                           
 24987 ;; *************** function _ADCC_Initialize *****************
 24988 ;; Defined at:
 24989 ;;		line 65 in file "mcc_generated_files/adcc.c"
 24990 ;; Parameters:    Size  Location     Type
 24991 ;;		None
 24992 ;; Auto vars:     Size  Location     Type
 24993 ;;		None
 24994 ;; Return value:  Size  Location     Type
 24995 ;;                  1  [STACK] void 
 24996 ;; Registers used:
 24997 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 24998 ;; Tracked objects:
 24999 ;;		On entry : 3F/3E
 25000 ;;		On exit  : 0/0
 25001 ;;		Unchanged: 0/0
 25002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25007 ;;Total ram usage:        0 bytes
 25008 ;; Hardware stack levels used:    1
 25009 ;; Hardware stack levels required when called:    7
 25010 ;; This function calls:
 25011 ;;		_ADCC_SetADIInterruptHandler
 25012 ;;		_ADCC_SetADTIInterruptHandler
 25013 ;; This function is called by:
 25014 ;;		_SYSTEM_Initialize
 25015 ;; This function uses a reentrant model
 25016 ;;
 25017                           
 25018                           	psect	text113
 25019  01805A                     __ptext113:
 25020                           	opt callstack 0
 25021  01805A                     _ADCC_Initialize:
 25022                           	opt callstack 22
 25023                           
 25024                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 25025                           
 25026                           ; BSR set to: 60
 25027                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25028                           ;incstack = 0
 25029  01805A  013E               	movlb	62	; () banked
 25030  01805C  6BDE               	clrf	222,b	;volatile
 25031                           
 25032                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 25033  01805E  6BDF               	clrf	223,b	;volatile
 25034                           
 25035                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 25036  018060  6BE0               	clrf	224,b	;volatile
 25037                           
 25038                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 25039  018062  6BE1               	clrf	225,b	;volatile
 25040                           
 25041                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 25042  018064  6BE4               	clrf	228,b	;volatile
 25043                           
 25044                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 25045  018066  6BE5               	clrf	229,b	;volatile
 25046                           
 25047                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 25048  018068  6BEA               	clrf	234,b	;volatile
 25049                           
 25050                           ; BSR set to: 62
 25051                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 25052  01806A  0E40               	movlw	64
 25053  01806C  6FEC               	movwf	236,b	;volatile
 25054                           
 25055                           ; BSR set to: 62
 25056                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 25057  01806E  6BF1               	clrf	241,b	;volatile
 25058                           
 25059                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 25060  018070  0E20               	movlw	32
 25061  018072  6FF3               	movwf	243,b	;volatile
 25062                           
 25063                           ; BSR set to: 62
 25064                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 25065  018074  6BF4               	clrf	244,b	;volatile
 25066                           
 25067                           ; BSR set to: 62
 25068                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 25069  018076  6BF5               	clrf	245,b	;volatile
 25070                           
 25071                           ; BSR set to: 62
 25072                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 25073  018078  6BF6               	clrf	246,b	;volatile
 25074                           
 25075                           ; BSR set to: 62
 25076                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 25077  01807A  6BF7               	clrf	247,b	;volatile
 25078                           
 25079                           ; BSR set to: 62
 25080                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 25081  01807C  6BF9               	clrf	249,b	;volatile
 25082                           
 25083                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 25084  01807E  0E5B               	movlw	91
 25085  018080  6FFA               	movwf	250,b	;volatile
 25086                           
 25087                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 25088  018082  0E27               	movlw	39
 25089  018084  6FFB               	movwf	251,b	;volatile
 25090                           
 25091                           ; BSR set to: 62
 25092                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 25093  018086  6BFC               	clrf	252,b	;volatile
 25094                           
 25095                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 25096  018088  0E02               	movlw	2
 25097  01808A  6FFD               	movwf	253,b	;volatile
 25098                           
 25099                           ; BSR set to: 62
 25100                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 25101  01808C  6BFE               	clrf	254,b	;volatile
 25102                           
 25103                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 25104  01808E  0E07               	movlw	7
 25105  018090  6FFF               	movwf	255,b	;volatile
 25106                           
 25107                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 25108  018092  0E84               	movlw	132
 25109  018094  6FF8               	movwf	248,b	;volatile
 25110                           
 25111                           ; BSR set to: 62
 25112                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 25113  018096  0139               	movlb	57	; () banked
 25114  018098  95A1               	bcf	161,2,b	;volatile
 25115                           
 25116                           ; BSR set to: 57
 25117                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 25118  01809A  8591               	bsf	145,2,b	;volatile
 25119                           
 25120                           ; BSR set to: 57
 25121                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 25122  01809C  0EBE               	movlw	low _ADCC_DefaultInterruptHandler
 25123  01809E  6EE6               	movwf	postinc1,c
 25124  0180A0  0E90               	movlw	high _ADCC_DefaultInterruptHandler
 25125  0180A2  6EE6               	movwf	postinc1,c
 25126  0180A4  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 25127  0180A6  6EE6               	movwf	postinc1,c
 25128  0180A8  EC57  F0C6         	call	_ADCC_SetADIInterruptHandler	;wreg free
 25129                           
 25130                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 25131  0180AC  0139               	movlb	57	; () banked
 25132  0180AE  97A1               	bcf	161,3,b	;volatile
 25133                           
 25134                           ; BSR set to: 57
 25135                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 25136  0180B0  8791               	bsf	145,3,b	;volatile
 25137                           
 25138                           ; BSR set to: 57
 25139                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 25140  0180B2  0EBE               	movlw	low _ADCC_DefaultInterruptHandler
 25141  0180B4  6EE6               	movwf	postinc1,c
 25142  0180B6  0E90               	movlw	high _ADCC_DefaultInterruptHandler
 25143  0180B8  6EE6               	movwf	postinc1,c
 25144  0180BA  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 25145  0180BC  6EE6               	movwf	postinc1,c
 25146  0180BE  EC43  F0C6         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 25147                           
 25148                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25149  0180C2  0012               	return		;funcret
 25150  0180C4                     __end_of_ADCC_Initialize:
 25151                           	opt callstack 0
 25152                           
 25153 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 25154 ;; Defined at:
 25155 ;;		line 336 in file "mcc_generated_files/adcc.c"
 25156 ;; Parameters:    Size  Location     Type
 25157 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25158 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 25159 ;; Auto vars:     Size  Location     Type
 25160 ;;		None
 25161 ;; Return value:  Size  Location     Type
 25162 ;;                  1  [STACK] void 
 25163 ;; Registers used:
 25164 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25165 ;; Tracked objects:
 25166 ;;		On entry : 0/0
 25167 ;;		On exit  : 0/0
 25168 ;;		Unchanged: 0/0
 25169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25174 ;;Total ram usage:        0 bytes
 25175 ;; Hardware stack levels used:    1
 25176 ;; Hardware stack levels required when called:    6
 25177 ;; This function calls:
 25178 ;;		Nothing
 25179 ;; This function is called by:
 25180 ;;		_ADCC_Initialize
 25181 ;;		_start_adc_scan
 25182 ;; This function uses a reentrant model
 25183 ;;
 25184                           
 25185                           	psect	text114
 25186  018C86                     __ptext114:
 25187                           	opt callstack 0
 25188  018C86                     _ADCC_SetADTIInterruptHandler:
 25189                           	opt callstack 23
 25190                           
 25191                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 25192                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25193                           
 25194                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25195                           ;incstack = 0
 25196  018C86  50E1               	movf	fsr1l,w,c
 25197  018C88  0FFD               	addlw	-3
 25198  018C8A  6ED9               	movwf	fsr2l,c
 25199  018C8C  50E2               	movf	fsr1h,w,c
 25200  018C8E  6EDA               	movwf	fsr2h,c
 25201  018C90  0EFF               	movlw	255
 25202  018C92  22DA               	addwfc	fsr2h,f,c
 25203  018C94  006F FF78  F001    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 25204  018C9A  006F FF78  F002    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 25205  018CA0  006F FF74  F003    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 25206                           
 25207                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 25208  018CA6  52E5               	movf	postdec1,f,c
 25209  018CA8  52E5               	movf	postdec1,f,c
 25210  018CAA  52E5               	movf	postdec1,f,c
 25211  018CAC  0012               	return		;funcret
 25212  018CAE                     __end_of_ADCC_SetADTIInterruptHandler:
 25213                           	opt callstack 0
 25214                           
 25215 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 25216 ;; Defined at:
 25217 ;;		line 323 in file "mcc_generated_files/adcc.c"
 25218 ;; Parameters:    Size  Location     Type
 25219 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25220 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 25221 ;; Auto vars:     Size  Location     Type
 25222 ;;		None
 25223 ;; Return value:  Size  Location     Type
 25224 ;;                  1  [STACK] void 
 25225 ;; Registers used:
 25226 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25227 ;; Tracked objects:
 25228 ;;		On entry : 6/0
 25229 ;;		On exit  : 0/0
 25230 ;;		Unchanged: 0/0
 25231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25236 ;;Total ram usage:        0 bytes
 25237 ;; Hardware stack levels used:    1
 25238 ;; Hardware stack levels required when called:    6
 25239 ;; This function calls:
 25240 ;;		Nothing
 25241 ;; This function is called by:
 25242 ;;		_ADCC_Initialize
 25243 ;;		_start_adc_scan
 25244 ;; This function uses a reentrant model
 25245 ;;
 25246                           
 25247                           	psect	text115
 25248  018CAE                     __ptext115:
 25249                           	opt callstack 0
 25250  018CAE                     _ADCC_SetADIInterruptHandler:
 25251                           	opt callstack 23
 25252                           
 25253                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 25254                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25255                           
 25256                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25257                           ;incstack = 0
 25258  018CAE  50E1               	movf	fsr1l,w,c
 25259  018CB0  0FFD               	addlw	-3
 25260  018CB2  6ED9               	movwf	fsr2l,c
 25261  018CB4  50E2               	movf	fsr1h,w,c
 25262  018CB6  6EDA               	movwf	fsr2h,c
 25263  018CB8  0EFF               	movlw	255
 25264  018CBA  22DA               	addwfc	fsr2h,f,c
 25265  018CBC  006F FF78  F004    	movff	postinc2,_ADCC_ADI_InterruptHandler
 25266  018CC2  006F FF78  F005    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 25267  018CC8  006F FF74  F006    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 25268                           
 25269                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 25270  018CCE  52E5               	movf	postdec1,f,c
 25271  018CD0  52E5               	movf	postdec1,f,c
 25272  018CD2  52E5               	movf	postdec1,f,c
 25273  018CD4  0012               	return		;funcret
 25274  018CD6                     __end_of_ADCC_SetADIInterruptHandler:
 25275                           	opt callstack 0
 25276                           
 25277 ;; *************** function _INT1_ISR *****************
 25278 ;; Defined at:
 25279 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 25280 ;; Parameters:    Size  Location     Type
 25281 ;;		None
 25282 ;; Auto vars:     Size  Location     Type
 25283 ;;		None
 25284 ;; Return value:  Size  Location     Type
 25285 ;;                  1    wreg      void 
 25286 ;; Registers used:
 25287 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 25288 ;; Tracked objects:
 25289 ;;		On entry : 0/0
 25290 ;;		On exit  : 0/0
 25291 ;;		Unchanged: 0/0
 25292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25295 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25296 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25297 ;;Total ram usage:        4 bytes
 25298 ;; Hardware stack levels used:    1
 25299 ;; Hardware stack levels required when called:    5
 25300 ;; This function calls:
 25301 ;;		_INT1_CallBack
 25302 ;; This function is called by:
 25303 ;;		Interrupt level 1
 25304 ;; This function uses a non-reentrant model
 25305 ;;
 25306                           
 25307                           	psect	text116
 25308  0187DC                     __ptext116:
 25309                           	opt callstack 0
 25310  0187DC                     _INT1_ISR:
 25311                           	opt callstack 12
 25312                           
 25313                           ;incstack = 0
 25314  0187DC  006F FF60  F0E5    	movff	status,??_INT1_ISR
 25315  0187E2  0060  F0C8  F0E6   	movff	btemp,??_INT1_ISR+1
 25316  0187E8  0060  F0F0  F0E7   	movff	btemp+10,??_INT1_ISR+2
 25317  0187EE  0060  F0F4  F0E8   	movff	btemp+11,??_INT1_ISR+3
 25318  0187F4  EE16  F000         	lfsr	1,___intlo_sp
 25319                           
 25320                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 25321  0187F8  0139               	movlb	57	; () banked
 25322  0187FA  91A5               	bcf	165,0,b	;volatile
 25323                           
 25324                           ; BSR set to: 57
 25325                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 25326  0187FC  EC05  F0C7         	call	_INT1_CallBack	;wreg free
 25327  018800  0060  F3A0  F03D   	movff	??_INT1_ISR+3,btemp+11
 25328  018806  0060  F39C  F03C   	movff	??_INT1_ISR+2,btemp+10
 25329  01880C  0060  F398  F032   	movff	??_INT1_ISR+1,btemp
 25330  018812  0060  F397  FFD8   	movff	??_INT1_ISR,status
 25331  018818  0011               	retfie		f
 25332  01881A                     __end_of_INT1_ISR:
 25333                           	opt callstack 0
 25334                           
 25335 ;; *************** function _INT1_CallBack *****************
 25336 ;; Defined at:
 25337 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 25338 ;; Parameters:    Size  Location     Type
 25339 ;;		None
 25340 ;; Auto vars:     Size  Location     Type
 25341 ;;		None
 25342 ;; Return value:  Size  Location     Type
 25343 ;;                  1  [STACK] void 
 25344 ;; Registers used:
 25345 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 25346 ;; Tracked objects:
 25347 ;;		On entry : 3F/39
 25348 ;;		On exit  : 0/0
 25349 ;;		Unchanged: 0/0
 25350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25355 ;;Total ram usage:        0 bytes
 25356 ;; Hardware stack levels used:    1
 25357 ;; Hardware stack levels required when called:    4
 25358 ;; This function calls:
 25359 ;;		Absolute function
 25360 ;;		_INT1_DefaultInterruptHandler
 25361 ;;		_switch_handler
 25362 ;; This function is called by:
 25363 ;;		_INT1_ISR
 25364 ;; This function uses a reentrant model
 25365 ;;
 25366                           
 25367                           	psect	text117
 25368  018E0A                     __ptext117:
 25369                           	opt callstack 0
 25370  018E0A                     _INT1_CallBack:
 25371                           	opt callstack 12
 25372                           
 25373                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 25374                           
 25375                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25376                           ;incstack = 0
 25377  018E0A  5013               	movf	_INT1_InterruptHandler^0,w,c
 25378  018E0C  1014               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 25379  018E0E  1015               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
 25380  018E10  B4D8               	btfsc	status,2,c
 25381  018E12  0012               	return	
 25382                           
 25383                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 25384  018E14  D801               	call	u881_28
 25385  018E16  0012               	return	
 25386  018E18                     u881_28:
 25387  018E18  0005               	push	
 25388  018E1A  6EFA               	movwf	pclath,c
 25389  018E1C  5013               	movf	_INT1_InterruptHandler^0,w,c
 25390  018E1E  6EFD               	movwf	tosl,c
 25391  018E20  5014               	movf	(_INT1_InterruptHandler+1)^0,w,c
 25392  018E22  6EFE               	movwf	tosh,c
 25393  018E24  5015               	movf	(_INT1_InterruptHandler+2)^0,w,c
 25394  018E26  6EFF               	movwf	tosu,c
 25395  018E28  50FA               	movf	pclath,w,c
 25396  018E2A  0012               	return		;indir
 25397  018E2C                     __end_of_INT1_CallBack:
 25398                           	opt callstack 0
 25399                           
 25400 ;; *************** function _INT1_DefaultInterruptHandler *****************
 25401 ;; Defined at:
 25402 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 25403 ;; Parameters:    Size  Location     Type
 25404 ;;		None
 25405 ;; Auto vars:     Size  Location     Type
 25406 ;;		None
 25407 ;; Return value:  Size  Location     Type
 25408 ;;                  1  [STACK] void 
 25409 ;; Registers used:
 25410 ;;		None
 25411 ;; Tracked objects:
 25412 ;;		On entry : 0/39
 25413 ;;		On exit  : 0/0
 25414 ;;		Unchanged: 0/0
 25415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25420 ;;Total ram usage:        0 bytes
 25421 ;; Hardware stack levels used:    1
 25422 ;; Hardware stack levels required when called:    3
 25423 ;; This function calls:
 25424 ;;		Nothing
 25425 ;; This function is called by:
 25426 ;;		_EXT_INT_Initialize
 25427 ;;		_INT1_CallBack
 25428 ;; This function uses a reentrant model
 25429 ;;
 25430                           
 25431                           	psect	text118
 25432  0190BA                     __ptext118:
 25433                           	opt callstack 0
 25434  0190BA                     _INT1_DefaultInterruptHandler:
 25435                           	opt callstack 12
 25436                           
 25437                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25438                           
 25439                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25440                           ;incstack = 0
 25441  0190BA  0012               	return		;funcret
 25442  0190BC                     __end_of_INT1_DefaultInterruptHandler:
 25443                           	opt callstack 0
 25444                           
 25445 ;; *************** function _switch_handler *****************
 25446 ;; Defined at:
 25447 ;;		line 54 in file "mbmc.c"
 25448 ;; Parameters:    Size  Location     Type
 25449 ;;		None
 25450 ;; Auto vars:     Size  Location     Type
 25451 ;;  i               1  [STACK] unsigned char 
 25452 ;;  sw_value        1  [STACK] unsigned char 
 25453 ;; Return value:  Size  Location     Type
 25454 ;;                  1  [STACK] void 
 25455 ;; Registers used:
 25456 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 25457 ;; Tracked objects:
 25458 ;;		On entry : 0/39
 25459 ;;		On exit  : 0/0
 25460 ;;		Unchanged: 0/0
 25461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25466 ;;Total ram usage:        0 bytes
 25467 ;; Hardware stack levels used:    1
 25468 ;; Hardware stack levels required when called:    3
 25469 ;; This function calls:
 25470 ;;		Nothing
 25471 ;; This function is called by:
 25472 ;;		_start_switch_handler
 25473 ;;		_INT1_CallBack
 25474 ;; This function uses a reentrant model
 25475 ;;
 25476                           
 25477                           	psect	text119
 25478  016D12                     __ptext119:
 25479                           	opt callstack 0
 25480  016D12                     _switch_handler:
 25481                           	opt callstack 0
 25482                           
 25483                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25484  016D12  52E6               	movf	postinc1,f,c
 25485  016D14  52E6               	movf	postinc1,f,c
 25486                           
 25487                           ;mbmc.c: 56:  uint8_t i = 0, sw_value;
 25488                           ;stkvar	_i @ sp[(-2)+0]
 25489                           
 25490                           ;incstack = 0
 25491  016D16  0EFE               	movlw	-2
 25492  016D18  6AE3               	clrf	plusw1,c
 25493  016D1A  9EBD               	bcf	189,7,c	;volatile
 25494  016D1C  82BE               	bsf	190,1,c	;volatile
 25495                           
 25496                           ;mbmc.c: 62:  __nop();
 25497  016D1E  F000               	nop	
 25498                           
 25499                           ;mbmc.c: 63:  __nop();
 25500  016D20  F000               	nop	
 25501                           
 25502                           ;mbmc.c: 64:  __nop();
 25503  016D22  F000               	nop	
 25504  016D24  92BE               	bcf	190,1,c	;volatile
 25505  016D26  D019               	goto	l8891
 25506  016D28                     l8879:
 25507                           
 25508                           ;mbmc.c: 73:    sw_value = PORTFbits.RF3;
 25509  016D28  A6CF               	btfss	207,3,c	;volatile
 25510  016D2A  D011               	goto	u874_20
 25511  016D2C  D00D               	goto	u874_21
 25512  016D2E                     u871_28:
 25513                           
 25514                           ;stkvar	_sw_value @ sp[(-2)+1]
 25515  016D2E  0EFF               	movlw	-1
 25516  016D30  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 25517                           
 25518                           ;mbmc.c: 74:    break;
 25519  016D36  D027               	goto	l8893
 25520  016D38                     l8881:
 25521                           
 25522                           ;mbmc.c: 76:    sw_value = PORTFbits.RF2;
 25523  016D38  A4CF               	btfss	207,2,c	;volatile
 25524  016D3A  D009               	goto	u874_20
 25525  016D3C  D005               	goto	u874_21
 25526  016D3E                     l8883:
 25527                           
 25528                           ;mbmc.c: 79:    sw_value = PORTFbits.RF1;
 25529  016D3E  A2CF               	btfss	207,1,c	;volatile
 25530  016D40  D006               	goto	u874_20
 25531  016D42  D002               	goto	u874_21
 25532  016D44                     l8885:
 25533                           
 25534                           ;mbmc.c: 82:    sw_value = PORTFbits.RF0;
 25535  016D44  A0CF               	btfss	207,0,c	;volatile
 25536  016D46  D003               	goto	u874_20
 25537  016D48                     u874_21:
 25538  016D48  6A3D               	clrf	(btemp+11)^0,c
 25539  016D4A  2A3D               	incf	(btemp+11)^0,f,c
 25540  016D4C  D7F0               	goto	u871_28
 25541  016D4E                     u874_20:
 25542  016D4E  6A3D               	clrf	(btemp+11)^0,c
 25543  016D50  D7EE               	goto	u871_28
 25544  016D52                     l8887:
 25545                           
 25546                           ;mbmc.c: 85:    sw_value = 1;
 25547                           ;stkvar	_sw_value @ sp[(-2)+1]
 25548  016D52  0EFF               	movlw	-1
 25549  016D54  6AE3               	clrf	plusw1,c
 25550  016D56  2AE3               	incf	plusw1,f,c
 25551                           
 25552                           ;mbmc.c: 86:    break;
 25553  016D58  D016               	goto	l8893
 25554  016D5A                     l8891:
 25555                           
 25556                           ;stkvar	_i @ sp[(-2)+0]
 25557  016D5A  0EFE               	movlw	-2
 25558  016D5C  50E3               	movf	plusw1,w,c
 25559  016D5E  6E3C               	movwf	(btemp+10)^0,c
 25560  016D60  6A3D               	clrf	(btemp+11)^0,c
 25561                           
 25562                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25563                           ; Switch size 1, requested type "simple"
 25564                           ; Number of cases is 1, Range of values is 0 to 0
 25565                           ; switch strategies available:
 25566                           ; Name         Instructions Cycles
 25567                           ; simple_byte            4     3 (average)
 25568                           ;	Chosen strategy is simple_byte
 25569  016D62  503D               	movf	(btemp+11)^0,w,c
 25570  016D64  0A00               	xorlw	0	; case 0
 25571  016D66  A4D8               	btfss	status,2,c
 25572  016D68  D7F4               	goto	l8887
 25573                           
 25574                           ; Switch size 1, requested type "simple"
 25575                           ; Number of cases is 4, Range of values is 0 to 3
 25576                           ; switch strategies available:
 25577                           ; Name         Instructions Cycles
 25578                           ; simple_byte           13     7 (average)
 25579                           ;	Chosen strategy is simple_byte
 25580  016D6A  503C               	movf	(btemp+10)^0,w,c
 25581  016D6C  0A00               	xorlw	0	; case 0
 25582  016D6E  B4D8               	btfsc	status,2,c
 25583  016D70  D7E9               	goto	l8885
 25584  016D72  0A01               	xorlw	1	; case 1
 25585  016D74  B4D8               	btfsc	status,2,c
 25586  016D76  D7E3               	goto	l8883
 25587  016D78  0A03               	xorlw	3	; case 2
 25588  016D7A  B4D8               	btfsc	status,2,c
 25589  016D7C  D7DD               	goto	l8881
 25590  016D7E  0A01               	xorlw	1	; case 3
 25591  016D80  B4D8               	btfsc	status,2,c
 25592  016D82  D7D2               	goto	l8879
 25593  016D84  D7E6               	goto	l8887
 25594  016D86                     l8893:
 25595                           
 25596                           ;mbmc.c: 89:   if (sw_value) {
 25597                           ;stkvar	_sw_value @ sp[(-2)+1]
 25598  016D86  0EFF               	movlw	-1
 25599  016D88  50E3               	movf	plusw1,w,c
 25600  016D8A  B4D8               	btfsc	status,2,c
 25601  016D8C  D018               	goto	l8899
 25602                           
 25603                           ;mbmc.c: 90:    if (V.button[i].sw == SW_ON) {
 25604                           ;stkvar	_i @ sp[(-2)+0]
 25605  016D8E  0EFE               	movlw	-2
 25606  016D90  50E3               	movf	plusw1,w,c
 25607  016D92  0D05               	mullw	5
 25608  016D94  0EBB               	movlw	low (_V+187)
 25609  016D96  24F3               	addwf	243,w,c
 25610  016D98  6ED9               	movwf	fsr2l,c
 25611  016D9A  0E01               	movlw	high (_V+187)
 25612  016D9C  20F4               	addwfc	prodh,w,c
 25613  016D9E  6EDA               	movwf	fsr2h,c
 25614  016DA0  04DE               	decf	postinc2,w,c
 25615  016DA2  A4D8               	btfss	status,2,c
 25616  016DA4  D03A               	goto	l8905
 25617                           
 25618                           ;mbmc.c: 91:     V.button[i].sw = SW_OFF;
 25619                           ;stkvar	_i @ sp[(-2)+0]
 25620  016DA6  0EFE               	movlw	-2
 25621  016DA8  50E3               	movf	plusw1,w,c
 25622  016DAA  0D05               	mullw	5
 25623  016DAC  0EBB               	movlw	low (_V+187)
 25624  016DAE  24F3               	addwf	243,w,c
 25625  016DB0  6ED9               	movwf	fsr2l,c
 25626  016DB2  0E01               	movlw	high (_V+187)
 25627  016DB4  20F4               	addwfc	prodh,w,c
 25628  016DB6  6EDA               	movwf	fsr2h,c
 25629  016DB8  0E00               	movlw	0
 25630  016DBA  6EDF               	movwf	indf2,c
 25631  016DBC  D02E               	goto	l8905
 25632  016DBE                     l8899:
 25633                           
 25634                           ;mbmc.c: 94:    if (V.button[i].sw == SW_OFF) {
 25635                           ;stkvar	_i @ sp[(-2)+0]
 25636  016DBE  0EFE               	movlw	-2
 25637  016DC0  50E3               	movf	plusw1,w,c
 25638  016DC2  0D05               	mullw	5
 25639  016DC4  0EBB               	movlw	low (_V+187)
 25640  016DC6  24F3               	addwf	243,w,c
 25641  016DC8  6ED9               	movwf	fsr2l,c
 25642  016DCA  0E01               	movlw	high (_V+187)
 25643  016DCC  20F4               	addwfc	prodh,w,c
 25644  016DCE  6EDA               	movwf	fsr2h,c
 25645  016DD0  50DF               	movf	indf2,w,c
 25646  016DD2  A4D8               	btfss	status,2,c
 25647  016DD4  D022               	goto	l8905
 25648                           
 25649                           ;mbmc.c: 95:     V.button[i].sw = SW_ON;
 25650                           ;stkvar	_i @ sp[(-2)+0]
 25651  016DD6  0EFE               	movlw	-2
 25652  016DD8  50E3               	movf	plusw1,w,c
 25653  016DDA  0D05               	mullw	5
 25654  016DDC  0EBB               	movlw	low (_V+187)
 25655  016DDE  24F3               	addwf	243,w,c
 25656  016DE0  6ED9               	movwf	fsr2l,c
 25657  016DE2  0E01               	movlw	high (_V+187)
 25658  016DE4  20F4               	addwfc	prodh,w,c
 25659  016DE6  6EDA               	movwf	fsr2h,c
 25660  016DE8  0E01               	movlw	1
 25661  016DEA  6EDF               	movwf	indf2,c
 25662                           
 25663                           ;mbmc.c: 96:     V.button[i].count = V.timerint_count;
 25664  016DEC  EE20  F1B7         	lfsr	2,_V+183	;volatile
 25665                           
 25666                           ;stkvar	_i @ sp[(-2)+0]
 25667  016DF0  0EFE               	movlw	-2
 25668  016DF2  50E3               	movf	plusw1,w,c
 25669  016DF4  0D05               	mullw	5
 25670  016DF6  0EBC               	movlw	low (_V+188)
 25671  016DF8  24F3               	addwf	243,w,c
 25672  016DFA  6EE9               	movwf	fsr0l,c
 25673  016DFC  0E01               	movlw	high (_V+188)
 25674  016DFE  20F4               	addwfc	prodh,w,c
 25675  016E00  6EEA               	movwf	fsr0h,c
 25676  016E02  006F FF7B FFEE     	movff	postinc2,postinc0
 25677  016E08  006F FF7B FFEE     	movff	postinc2,postinc0
 25678  016E0E  006F FF7B FFEE     	movff	postinc2,postinc0
 25679  016E14  006F FF7B FFEE     	movff	postinc2,postinc0
 25680  016E1A                     l8905:
 25681                           
 25682                           ;mbmc.c: 99:  } while (++i < 4);
 25683                           ;stkvar	_i @ sp[(-2)+0]
 25684  016E1A  0EFE               	movlw	-2
 25685  016E1C  2AE3               	incf	plusw1,f,c
 25686  016E1E  0EFE               	movlw	-2
 25687  016E20  006F FF8C  F032    	movff	plusw1,btemp
 25688  016E26  0E03               	movlw	3
 25689  016E28  6432               	cpfsgt	btemp^0,c
 25690  016E2A  D797               	goto	l8891
 25691  016E2C  A4BE               	btfss	190,2,c	;volatile
 25692  016E2E  D002               	goto	u879_20
 25693  016E30  0E01               	movlw	1
 25694  016E32  D001               	goto	u879_26
 25695  016E34                     u879_20:
 25696  016E34  0E00               	movlw	0
 25697  016E36                     u879_26:
 25698  016E36  0AFF               	xorlw	255
 25699  016E38  6E3D               	movwf	(btemp+11)^0,c
 25700  016E3A  463D               	rlncf	(btemp+11)^0,f,c
 25701  016E3C  463D               	rlncf	(btemp+11)^0,f,c
 25702  016E3E  50BE               	movf	190,w,c	;volatile
 25703  016E40  183D               	xorwf	(btemp+11)^0,w,c
 25704  016E42  0BFB               	andlw	-5
 25705  016E44  183D               	xorwf	(btemp+11)^0,w,c
 25706  016E46  6EBE               	movwf	190,c	;volatile
 25707  016E48  8EBD               	bsf	189,7,c	;volatile
 25708                           
 25709                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 25710  016E4A  52E5               	movf	postdec1,f,c
 25711  016E4C  52E5               	movf	postdec1,f,c
 25712  016E4E  0012               	return		;funcret
 25713  016E50                     __end_of_switch_handler:
 25714                           	opt callstack 0
 25715                           
 25716 ;; *************** function _TMR5_ISR *****************
 25717 ;; Defined at:
 25718 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 25719 ;; Parameters:    Size  Location     Type
 25720 ;;		None
 25721 ;; Auto vars:     Size  Location     Type
 25722 ;;		None
 25723 ;; Return value:  Size  Location     Type
 25724 ;;                  1    wreg      void 
 25725 ;; Registers used:
 25726 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 25727 ;; Tracked objects:
 25728 ;;		On entry : 0/0
 25729 ;;		On exit  : 0/0
 25730 ;;		Unchanged: 0/0
 25731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25734 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25735 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25736 ;;Total ram usage:        4 bytes
 25737 ;; Hardware stack levels used:    1
 25738 ;; Hardware stack levels required when called:    5
 25739 ;; This function calls:
 25740 ;;		_TMR5_CallBack
 25741 ;;		_TMR5_WriteTimer
 25742 ;; This function is called by:
 25743 ;;		Interrupt level 1
 25744 ;; This function uses a non-reentrant model
 25745 ;;
 25746                           
 25747                           	psect	text120
 25748  01837C                     __ptext120:
 25749                           	opt callstack 0
 25750  01837C                     _TMR5_ISR:
 25751                           	opt callstack 12
 25752                           
 25753                           ;incstack = 0
 25754  01837C  006F FF60  F0EB    	movff	status,??_TMR5_ISR+2
 25755  018382  0060  F0F4  F0EC   	movff	btemp+11,??_TMR5_ISR+3
 25756  018388  EE16  F000         	lfsr	1,___intlo_sp
 25757                           
 25758                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 25759  01838C  0139               	movlb	57	; () banked
 25760  01838E  9DA8               	bcf	168,6,b	;volatile
 25761                           
 25762                           ; BSR set to: 57
 25763                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 25764  018390  0060  F08F  FFE6   	movff	_timer5ReloadVal,postinc1
 25765  018396  0060  F093  FFE6   	movff	_timer5ReloadVal+1,postinc1
 25766  01839C  ECAE  F0C3         	call	_TMR5_WriteTimer	;wreg free
 25767                           
 25768                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 25769  0183A0  0101               	movlb	1	; () banked
 25770  0183A2  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 25771  0183A4  0100               	movlb	0	; () banked
 25772  0183A6  6FE9               	movwf	??_TMR5_ISR& (0+255),b
 25773  0183A8  6BEA               	clrf	(??_TMR5_ISR+1)& (0+255),b
 25774  0183AA  0E05               	movlw	5
 25775  0183AC  27E9               	addwf	??_TMR5_ISR& (0+255),f,b
 25776  0183AE  0E00               	movlw	0
 25777  0183B0  23EA               	addwfc	(??_TMR5_ISR+1)& (0+255),f,b
 25778  0183B2  4A21               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 25779  0183B4  2A22               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 25780  0183B6  51E9               	movf	??_TMR5_ISR& (0+255),w,b
 25781  0183B8  5C21               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 25782  0183BA  51EA               	movf	(??_TMR5_ISR+1)& (0+255),w,b
 25783  0183BC  5822               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 25784  0183BE  A0D8               	btfss	status,0,c
 25785  0183C0  D004               	goto	i1l1045
 25786                           
 25787                           ; BSR set to: 0
 25788                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 25789  0183C2  ECE1  F0C6         	call	_TMR5_CallBack	;wreg free
 25790                           
 25791                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 25792  0183C6  6A21               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 25793  0183C8  6A22               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 25794  0183CA                     i1l1045:
 25795  0183CA  0060  F3B0  F03D   	movff	??_TMR5_ISR+3,btemp+11
 25796  0183D0  0060  F3AF  FFD8   	movff	??_TMR5_ISR+2,status
 25797  0183D6  0011               	retfie		f
 25798  0183D8                     __end_of_TMR5_ISR:
 25799                           	opt callstack 0
 25800                           
 25801 ;; *************** function _TMR5_WriteTimer *****************
 25802 ;; Defined at:
 25803 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 25804 ;; Parameters:    Size  Location     Type
 25805 ;;  timerVal        2  [STACK] unsigned short 
 25806 ;; Auto vars:     Size  Location     Type
 25807 ;;		None
 25808 ;; Return value:  Size  Location     Type
 25809 ;;                  1  [STACK] void 
 25810 ;; Registers used:
 25811 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 25812 ;; Tracked objects:
 25813 ;;		On entry : 3F/39
 25814 ;;		On exit  : 0/0
 25815 ;;		Unchanged: 0/0
 25816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25821 ;;Total ram usage:        0 bytes
 25822 ;; Hardware stack levels used:    1
 25823 ;; Hardware stack levels required when called:    3
 25824 ;; This function calls:
 25825 ;;		Nothing
 25826 ;; This function is called by:
 25827 ;;		_TMR5_ISR
 25828 ;; This function uses a reentrant model
 25829 ;;
 25830                           
 25831                           	psect	text121
 25832  01875C                     __ptext121:
 25833                           	opt callstack 0
 25834  01875C                     _TMR5_WriteTimer:
 25835                           	opt callstack 13
 25836                           
 25837                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 25838                           
 25839                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25840                           ;incstack = 0
 25841  01875C  A49A               	btfss	154,2,c	;volatile
 25842  01875E  D00F               	goto	l9011
 25843                           
 25844                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 25845  018760  909A               	bcf	154,0,c	;volatile
 25846                           
 25847                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 25848                           ;stkvar	_timerVal @ sp[(0)+-2]
 25849  018762  0EFF               	movlw	255
 25850  018764  24E1               	addwf	fsr1l,w,c
 25851  018766  6ED9               	movwf	fsr2l,c
 25852  018768  0EFF               	movlw	255
 25853  01876A  20E2               	addwfc	fsr1h,w,c
 25854  01876C  6EDA               	movwf	fsr2h,c
 25855  01876E  50DF               	movf	indf2,w,c
 25856  018770  6E99               	movwf	153,c	;volatile
 25857                           
 25858                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 25859                           ;stkvar	_timerVal @ sp[(0)+-2]
 25860  018772  0EFE               	movlw	-2
 25861  018774  006F FF8F FF98     	movff	plusw1,16280	;volatile
 25862                           
 25863                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 25864  01877A  809A               	bsf	154,0,c	;volatile
 25865                           
 25866                           ;mcc_generated_files/tmr5.c: 142:  } else {
 25867  01877C  D00C               	goto	l1028
 25868  01877E                     l9011:
 25869                           
 25870                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 25871                           ;stkvar	_timerVal @ sp[(0)+-2]
 25872  01877E  0EFF               	movlw	255
 25873  018780  24E1               	addwf	fsr1l,w,c
 25874  018782  6ED9               	movwf	fsr2l,c
 25875  018784  0EFF               	movlw	255
 25876  018786  20E2               	addwfc	fsr1h,w,c
 25877  018788  6EDA               	movwf	fsr2h,c
 25878  01878A  50DF               	movf	indf2,w,c
 25879  01878C  6E99               	movwf	153,c	;volatile
 25880                           
 25881                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 25882                           ;stkvar	_timerVal @ sp[(0)+-2]
 25883  01878E  0EFE               	movlw	-2
 25884  018790  006F FF8F FF98     	movff	plusw1,16280	;volatile
 25885  018796                     l1028:
 25886                           
 25887                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 25888  018796  52E5               	movf	postdec1,f,c
 25889  018798  52E5               	movf	postdec1,f,c
 25890  01879A  0012               	return		;funcret
 25891  01879C                     __end_of_TMR5_WriteTimer:
 25892                           	opt callstack 0
 25893                           
 25894 ;; *************** function _TMR5_CallBack *****************
 25895 ;; Defined at:
 25896 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 25897 ;; Parameters:    Size  Location     Type
 25898 ;;		None
 25899 ;; Auto vars:     Size  Location     Type
 25900 ;;		None
 25901 ;; Return value:  Size  Location     Type
 25902 ;;                  1  [STACK] void 
 25903 ;; Registers used:
 25904 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 25905 ;; Tracked objects:
 25906 ;;		On entry : 3F/0
 25907 ;;		On exit  : 0/0
 25908 ;;		Unchanged: 0/0
 25909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25914 ;;Total ram usage:        0 bytes
 25915 ;; Hardware stack levels used:    1
 25916 ;; Hardware stack levels required when called:    4
 25917 ;; This function calls:
 25918 ;;		Absolute function
 25919 ;;		_TMR5_DefaultInterruptHandler
 25920 ;; This function is called by:
 25921 ;;		_TMR5_ISR
 25922 ;; This function uses a reentrant model
 25923 ;;
 25924                           
 25925                           	psect	text122
 25926  018DC2                     __ptext122:
 25927                           	opt callstack 0
 25928  018DC2                     _TMR5_CallBack:
 25929                           	opt callstack 12
 25930                           
 25931                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 25932                           
 25933                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25934                           ;incstack = 0
 25935  018DC2  0100               	movlb	0	; () banked
 25936  018DC4  5198               	movf	_TMR5_InterruptHandler& (0+255),w,b
 25937  018DC6  1199               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 25938  018DC8  119A               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 25939  018DCA  B4D8               	btfsc	status,2,c
 25940  018DCC  0012               	return	
 25941                           
 25942                           ; BSR set to: 0
 25943                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 25944  018DCE  D801               	call	u892_28
 25945  018DD0  0012               	return	
 25946  018DD2                     u892_28:
 25947  018DD2  0005               	push	
 25948  018DD4  6EFA               	movwf	pclath,c
 25949  018DD6  5198               	movf	_TMR5_InterruptHandler& (0+255),w,b
 25950  018DD8  6EFD               	movwf	tosl,c
 25951  018DDA  5199               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 25952  018DDC  6EFE               	movwf	tosh,c
 25953  018DDE  519A               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 25954  018DE0  6EFF               	movwf	tosu,c
 25955  018DE2  50FA               	movf	pclath,w,c
 25956  018DE4  0012               	return		;indir
 25957  018DE6                     __end_of_TMR5_CallBack:
 25958                           	opt callstack 0
 25959                           
 25960 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 25961 ;; Defined at:
 25962 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 25963 ;; Parameters:    Size  Location     Type
 25964 ;;		None
 25965 ;; Auto vars:     Size  Location     Type
 25966 ;;		None
 25967 ;; Return value:  Size  Location     Type
 25968 ;;                  1  [STACK] void 
 25969 ;; Registers used:
 25970 ;;		wreg, status,2, status,0, btemp+11
 25971 ;; Tracked objects:
 25972 ;;		On entry : 3F/0
 25973 ;;		On exit  : 3F/1
 25974 ;;		Unchanged: 0/0
 25975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25980 ;;Total ram usage:        0 bytes
 25981 ;; Hardware stack levels used:    1
 25982 ;; Hardware stack levels required when called:    3
 25983 ;; This function calls:
 25984 ;;		Nothing
 25985 ;; This function is called by:
 25986 ;;		_TMR5_Initialize
 25987 ;;		_TMR5_CallBack
 25988 ;; This function uses a reentrant model
 25989 ;;
 25990                           
 25991                           	psect	text123
 25992  018CD6                     __ptext123:
 25993                           	opt callstack 0
 25994  018CD6                     _TMR5_DefaultInterruptHandler:
 25995                           	opt callstack 12
 25996                           
 25997                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 25998                           
 25999                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26000                           ;incstack = 0
 26001  018CD6  A0BE               	btfss	190,0,c	;volatile
 26002  018CD8  D002               	goto	u849_20
 26003  018CDA  0E01               	movlw	1
 26004  018CDC  D001               	goto	u849_26
 26005  018CDE                     u849_20:
 26006  018CDE  0E00               	movlw	0
 26007  018CE0                     u849_26:
 26008  018CE0  0AFF               	xorlw	255
 26009  018CE2  6E3D               	movwf	(btemp+11)^0,c
 26010  018CE4  50BE               	movf	190,w,c	;volatile
 26011  018CE6  183D               	xorwf	(btemp+11)^0,w,c
 26012  018CE8  0BFE               	andlw	-2
 26013  018CEA  183D               	xorwf	(btemp+11)^0,w,c
 26014  018CEC  6EBE               	movwf	190,c	;volatile
 26015                           
 26016                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 26017  018CEE  0E01               	movlw	1
 26018  018CF0  0101               	movlb	1	; () banked
 26019  018CF2  27B7               	addwf	(_V+183)& (0+255),f,b	;volatile
 26020  018CF4  0E00               	movlw	0
 26021  018CF6  23B8               	addwfc	(_V+184)& (0+255),f,b	;volatile
 26022  018CF8  23B9               	addwfc	(_V+185)& (0+255),f,b	;volatile
 26023  018CFA  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 26024                           
 26025                           ; BSR set to: 1
 26026                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26027  018CFC  0012               	return		;funcret
 26028  018CFE                     __end_of_TMR5_DefaultInterruptHandler:
 26029                           	opt callstack 0
 26030                           
 26031 ;; *************** function _INT0_ISR *****************
 26032 ;; Defined at:
 26033 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 26034 ;; Parameters:    Size  Location     Type
 26035 ;;		None
 26036 ;; Auto vars:     Size  Location     Type
 26037 ;;		None
 26038 ;; Return value:  Size  Location     Type
 26039 ;;                  1    wreg      void 
 26040 ;; Registers used:
 26041 ;;		wreg, status,2, status,0, pclath, tosl
 26042 ;; Tracked objects:
 26043 ;;		On entry : 0/0
 26044 ;;		On exit  : 0/0
 26045 ;;		Unchanged: 0/0
 26046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26051 ;;Total ram usage:        0 bytes
 26052 ;; Hardware stack levels used:    1
 26053 ;; Hardware stack levels required when called:    2
 26054 ;; This function calls:
 26055 ;;		_INT0_CallBack
 26056 ;; This function is called by:
 26057 ;;		Interrupt level 2
 26058 ;; This function uses a non-reentrant model
 26059 ;;
 26060                           
 26061                           	psect	text124
 26062  019030                     __ptext124:
 26063                           	opt callstack 0
 26064  019030                     _INT0_ISR:
 26065                           	opt callstack 12
 26066                           
 26067                           ; BSR set to: 1
 26068                           ;incstack = 0
 26069  019030  EE14  F000         	lfsr	1,___inthi_sp
 26070                           
 26071                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 26072  019034  0139               	movlb	57	; () banked
 26073  019036  91A1               	bcf	161,0,b	;volatile
 26074                           
 26075                           ; BSR set to: 57
 26076                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 26077  019038  EC16  F0C7         	call	_INT0_CallBack	;wreg free
 26078  01903C  0011               	retfie		f
 26079  01903E                     __end_of_INT0_ISR:
 26080                           	opt callstack 0
 26081                           
 26082 ;; *************** function _INT0_CallBack *****************
 26083 ;; Defined at:
 26084 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 26085 ;; Parameters:    Size  Location     Type
 26086 ;;		None
 26087 ;; Auto vars:     Size  Location     Type
 26088 ;;		None
 26089 ;; Return value:  Size  Location     Type
 26090 ;;                  1  [STACK] void 
 26091 ;; Registers used:
 26092 ;;		wreg, status,2, status,0, pclath, tosl
 26093 ;; Tracked objects:
 26094 ;;		On entry : 3F/39
 26095 ;;		On exit  : 0/0
 26096 ;;		Unchanged: 0/0
 26097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26102 ;;Total ram usage:        0 bytes
 26103 ;; Hardware stack levels used:    1
 26104 ;; Hardware stack levels required when called:    1
 26105 ;; This function calls:
 26106 ;;		Absolute function
 26107 ;;		_INT0_DefaultInterruptHandler
 26108 ;; This function is called by:
 26109 ;;		_INT0_ISR
 26110 ;; This function uses a reentrant model
 26111 ;;
 26112                           
 26113                           	psect	text125
 26114  018E2C                     __ptext125:
 26115                           	opt callstack 0
 26116  018E2C                     _INT0_CallBack:
 26117                           	opt callstack 12
 26118                           
 26119                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 26120                           
 26121                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26122                           ;incstack = 0
 26123  018E2C  5016               	movf	_INT0_InterruptHandler^0,w,c
 26124  018E2E  1017               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 26125  018E30  1018               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 26126  018E32  B4D8               	btfsc	status,2,c
 26127  018E34  0012               	return	
 26128                           
 26129                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 26130  018E36  D801               	call	u417_48
 26131  018E38  0012               	return	
 26132  018E3A                     u417_48:
 26133  018E3A  0005               	push	
 26134  018E3C  6EFA               	movwf	pclath,c
 26135  018E3E  5016               	movf	_INT0_InterruptHandler^0,w,c
 26136  018E40  6EFD               	movwf	tosl,c
 26137  018E42  5017               	movf	(_INT0_InterruptHandler+1)^0,w,c
 26138  018E44  6EFE               	movwf	tosh,c
 26139  018E46  5018               	movf	(_INT0_InterruptHandler+2)^0,w,c
 26140  018E48  6EFF               	movwf	tosu,c
 26141  018E4A  50FA               	movf	pclath,w,c
 26142  018E4C  0012               	return		;indir
 26143  018E4E                     __end_of_INT0_CallBack:
 26144                           	opt callstack 0
 26145                           
 26146 ;; *************** function _INT0_DefaultInterruptHandler *****************
 26147 ;; Defined at:
 26148 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 26149 ;; Parameters:    Size  Location     Type
 26150 ;;		None
 26151 ;; Auto vars:     Size  Location     Type
 26152 ;;		None
 26153 ;; Return value:  Size  Location     Type
 26154 ;;                  1  [STACK] void 
 26155 ;; Registers used:
 26156 ;;		None
 26157 ;; Tracked objects:
 26158 ;;		On entry : 0/39
 26159 ;;		On exit  : 0/0
 26160 ;;		Unchanged: 0/0
 26161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26166 ;;Total ram usage:        0 bytes
 26167 ;; Hardware stack levels used:    1
 26168 ;; This function calls:
 26169 ;;		Nothing
 26170 ;; This function is called by:
 26171 ;;		_EXT_INT_Initialize
 26172 ;;		_INT0_CallBack
 26173 ;; This function uses a reentrant model
 26174 ;;
 26175                           
 26176                           	psect	text126
 26177  0190BC                     __ptext126:
 26178                           	opt callstack 0
 26179  0190BC                     _INT0_DefaultInterruptHandler:
 26180                           	opt callstack 12
 26181                           
 26182                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26183                           
 26184                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26185                           ;incstack = 0
 26186  0190BC  0012               	return		;funcret
 26187  0190BE                     __end_of_INT0_DefaultInterruptHandler:
 26188                           	opt callstack 0
 26189                           
 26190 ;; *************** function _Default_ISR *****************
 26191 ;; Defined at:
 26192 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 26193 ;; Parameters:    Size  Location     Type
 26194 ;;		None
 26195 ;; Auto vars:     Size  Location     Type
 26196 ;;		None
 26197 ;; Return value:  Size  Location     Type
 26198 ;;                  1    wreg      void 
 26199 ;; Registers used:
 26200 ;;		None
 26201 ;; Tracked objects:
 26202 ;;		On entry : 0/0
 26203 ;;		On exit  : 0/0
 26204 ;;		Unchanged: 0/0
 26205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26210 ;;Total ram usage:        0 bytes
 26211 ;; Hardware stack levels used:    1
 26212 ;; This function calls:
 26213 ;;		Nothing
 26214 ;; This function is called by:
 26215 ;;		Interrupt level 2
 26216 ;; This function uses a non-reentrant model
 26217 ;;
 26218                           
 26219                           	psect	text127
 26220  0190B4                     __ptext127:
 26221                           	opt callstack 0
 26222  0190B4                     _Default_ISR:
 26223                           	opt callstack 14
 26224                           
 26225                           ;incstack = 0
 26226  0190B4  EE14  F000         	lfsr	1,___inthi_sp
 26227  0190B8  0011               	retfie		f
 26228  0190BA                     __end_of_Default_ISR:
 26229                           	opt callstack 0
 26230                           
 26231 ;; *************** function _ADCC_ISR *****************
 26232 ;; Defined at:
 26233 ;;		line 314 in file "mcc_generated_files/adcc.c"
 26234 ;; Parameters:    Size  Location     Type
 26235 ;;		None
 26236 ;; Auto vars:     Size  Location     Type
 26237 ;;		None
 26238 ;; Return value:  Size  Location     Type
 26239 ;;                  1    wreg      void 
 26240 ;; Registers used:
 26241 ;;		wreg, status,2, status,0, pclath, tosl
 26242 ;; Tracked objects:
 26243 ;;		On entry : 0/0
 26244 ;;		On exit  : 0/0
 26245 ;;		Unchanged: 0/0
 26246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26251 ;;Total ram usage:        0 bytes
 26252 ;; Hardware stack levels used:    1
 26253 ;; Hardware stack levels required when called:    1
 26254 ;; This function calls:
 26255 ;;		Absolute function
 26256 ;;		_ADCC_DefaultInterruptHandler
 26257 ;;		_adc_int_handler
 26258 ;; This function is called by:
 26259 ;;		Interrupt level 2
 26260 ;; This function uses a non-reentrant model
 26261 ;;
 26262                           
 26263                           	psect	text128
 26264  018AA4                     __ptext128:
 26265                           	opt callstack 0
 26266  018AA4                     _ADCC_ISR:
 26267                           	opt callstack 13
 26268                           
 26269                           ;incstack = 0
 26270  018AA4  EE14  F000         	lfsr	1,___inthi_sp
 26271                           
 26272                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 26273  018AA8  0139               	movlb	57	; () banked
 26274  018AAA  95A1               	bcf	161,2,b	;volatile
 26275                           
 26276                           ; BSR set to: 57
 26277                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 26278  018AAC  5004               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 26279  018AAE  1005               	iorwf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 26280  018AB0  1006               	iorwf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 26281  018AB2  B4D8               	btfsc	status,2,c
 26282  018AB4  0011               	retfie		f
 26283                           
 26284                           ; BSR set to: 57
 26285                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 26286  018AB6  D801               	call	i2u445_48
 26287  018AB8  0011               	retfie		f
 26288  018ABA                     i2u445_48:
 26289  018ABA  0005               	push	
 26290  018ABC  6EFA               	movwf	pclath,c
 26291  018ABE  5004               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 26292  018AC0  6EFD               	movwf	tosl,c
 26293  018AC2  5005               	movf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 26294  018AC4  6EFE               	movwf	tosh,c
 26295  018AC6  5006               	movf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 26296  018AC8  6EFF               	movwf	tosu,c
 26297  018ACA  50FA               	movf	pclath,w,c
 26298  018ACC  0012               	return		;indir
 26299  018ACE                     __end_of_ADCC_ISR:
 26300                           	opt callstack 0
 26301                           
 26302 ;; *************** function _adc_int_t_handler *****************
 26303 ;; Defined at:
 26304 ;;		line 127 in file "daq.c"
 26305 ;; Parameters:    Size  Location     Type
 26306 ;;		None
 26307 ;; Auto vars:     Size  Location     Type
 26308 ;;		None
 26309 ;; Return value:  Size  Location     Type
 26310 ;;                  1  [STACK] void 
 26311 ;; Registers used:
 26312 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 26313 ;; Tracked objects:
 26314 ;;		On entry : 3F/39
 26315 ;;		On exit  : 1/0
 26316 ;;		Unchanged: 0/0
 26317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26322 ;;Total ram usage:        0 bytes
 26323 ;; Hardware stack levels used:    1
 26324 ;; Hardware stack levels required when called:    1
 26325 ;; This function calls:
 26326 ;;		_ADCC_DischargeSampleCapacitor
 26327 ;;		_ADCC_StartConversion
 26328 ;; This function is called by:
 26329 ;;		_start_adc_scan
 26330 ;;		_ADCC_ThresholdISR
 26331 ;; This function uses a reentrant model
 26332 ;;
 26333                           
 26334                           	psect	text129
 26335  017EF8                     __ptext129:
 26336                           	opt callstack 0
 26337  017EF8                     _adc_int_t_handler:
 26338                           	opt callstack 12
 26339                           
 26340                           ;daq.c: 132:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 26341                           
 26342                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26343                           ;incstack = 0
 26344  017EF8  013E               	movlb	62	; () banked
 26345  017EFA  51E6               	movf	230,w,b	;volatile
 26346  017EFC  006F FB9C  F032    	movff	16103,btemp	;volatile
 26347  017F02  6A33               	clrf	(btemp+1)^0,c
 26348  017F04  0060  F0C8  F033   	movff	btemp,btemp+1
 26349  017F0A  6A32               	clrf	btemp^0,c
 26350  017F0C  2632               	addwf	btemp^0,f,c
 26351  017F0E  0E00               	movlw	0
 26352  017F10  2233               	addwfc	(btemp+1)^0,f,c
 26353  017F12  0100               	movlb	0	; () banked
 26354  017F14  51CA               	movf	(_R+36)& (0+255),w,b	;volatile
 26355  017F16  0D02               	mullw	2
 26356  017F18  50F3               	movf	243,w,c
 26357  017F1A  0FA6               	addlw	low _R
 26358  017F1C  6ED9               	movwf	fsr2l,c
 26359  017F1E  6ADA               	clrf	fsr2h,c
 26360  017F20  0060  F0CB  FFDE   	movff	btemp,postinc2
 26361  017F26  0060  F0CF  FFDD   	movff	btemp+1,postdec2
 26362  017F2C                     l9167:
 26363                           
 26364                           ;daq.c: 134:   if (++R.scan_index > 0XD) {
 26365  017F2C  0100               	movlb	0	; () banked
 26366  017F2E  2BCA               	incf	(_R+36)& (0+255),f,b	;volatile
 26367  017F30  0E0D               	movlw	13
 26368  017F32  65CA               	cpfsgt	(_R+36)& (0+255),b	;volatile
 26369  017F34  D003               	goto	l9173
 26370                           
 26371                           ; BSR set to: 0
 26372                           ;daq.c: 135:    R.done = 1;
 26373  017F36  0E01               	movlw	1
 26374  017F38  6FCD               	movwf	(_R+39)& (0+255),b	;volatile
 26375  017F3A  0012               	return	
 26376  017F3C                     l9173:
 26377                           
 26378                           ; BSR set to: 0
 26379                           ;daq.c: 141:  } while (!((R.scan_select >> R.scan_index) &0x1));
 26380  017F3C  0060  F328  F03D   	movff	_R+36,btemp+11	;volatile
 26381  017F42  EE20  F0CB         	lfsr	2,_R+37	;volatile
 26382  017F46  006F FF78  F03A    	movff	postinc2,btemp+8
 26383  017F4C  006F FF74  F03B    	movff	postdec2,btemp+9
 26384  017F52  2A3D               	incf	(btemp+11)^0,f,c
 26385  017F54  D003               	goto	u904_44
 26386  017F56                     u904_45:
 26387  017F56  90D8               	bcf	status,0,c
 26388  017F58  323B               	rrcf	(btemp+9)^0,f,c
 26389  017F5A  323A               	rrcf	(btemp+8)^0,f,c
 26390  017F5C                     u904_44:
 26391  017F5C  2E3D               	decfsz	(btemp+11)^0,f,c
 26392  017F5E  D7FB               	goto	u904_45
 26393  017F60  A03A               	btfss	(btemp+8)^0,0,c
 26394  017F62  D7E4               	goto	l9167
 26395                           
 26396                           ;daq.c: 142:  ADCC_DischargeSampleCapacitor();
 26397  017F64  EC3D  F0C8         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 26398                           
 26399                           ; BSR set to: 62
 26400                           ;daq.c: 143:  ADCC_StartConversion(R.scan_index & 0xf);
 26401  017F68  0100               	movlb	0	; () banked
 26402  017F6A  51CA               	movf	(_R+36)& (0+255),w,b	;volatile
 26403  017F6C  0B0F               	andlw	15
 26404  017F6E  6EE6               	movwf	postinc1,c
 26405  017F70  ECF8  F0C7         	call	_ADCC_StartConversion	;wreg free
 26406                           
 26407                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 26408  017F74  0012               	return		;funcret
 26409  017F76                     __end_of_adc_int_t_handler:
 26410                           	opt callstack 0
 26411                           
 26412 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 26413 ;; Defined at:
 26414 ;;		line 339 in file "mcc_generated_files/adcc.c"
 26415 ;; Parameters:    Size  Location     Type
 26416 ;;		None
 26417 ;; Auto vars:     Size  Location     Type
 26418 ;;		None
 26419 ;; Return value:  Size  Location     Type
 26420 ;;                  1  [STACK] void 
 26421 ;; Registers used:
 26422 ;;		None
 26423 ;; Tracked objects:
 26424 ;;		On entry : 3F/39
 26425 ;;		On exit  : 0/0
 26426 ;;		Unchanged: 0/0
 26427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26432 ;;Total ram usage:        0 bytes
 26433 ;; Hardware stack levels used:    1
 26434 ;; This function calls:
 26435 ;;		Nothing
 26436 ;; This function is called by:
 26437 ;;		_ADCC_Initialize
 26438 ;;		_ADCC_ISR
 26439 ;;		_ADCC_ThresholdISR
 26440 ;; This function uses a reentrant model
 26441 ;;
 26442                           
 26443                           	psect	text130
 26444  0190BE                     __ptext130:
 26445                           	opt callstack 0
 26446  0190BE                     _ADCC_DefaultInterruptHandler:
 26447                           	opt callstack 13
 26448                           
 26449                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26450                           
 26451                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26452                           ;incstack = 0
 26453  0190BE  0012               	return		;funcret
 26454  0190C0                     __end_of_ADCC_DefaultInterruptHandler:
 26455                           	opt callstack 0
 26456                           
 26457 ;; *************** function _adc_int_handler *****************
 26458 ;; Defined at:
 26459 ;;		line 117 in file "daq.c"
 26460 ;; Parameters:    Size  Location     Type
 26461 ;;		None
 26462 ;; Auto vars:     Size  Location     Type
 26463 ;;		None
 26464 ;; Return value:  Size  Location     Type
 26465 ;;                  1  [STACK] void 
 26466 ;; Registers used:
 26467 ;;		None
 26468 ;; Tracked objects:
 26469 ;;		On entry : 3F/39
 26470 ;;		On exit  : 0/0
 26471 ;;		Unchanged: 0/0
 26472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26477 ;;Total ram usage:        0 bytes
 26478 ;; Hardware stack levels used:    1
 26479 ;; This function calls:
 26480 ;;		Nothing
 26481 ;; This function is called by:
 26482 ;;		_start_adc_scan
 26483 ;;		_ADCC_ISR
 26484 ;; This function uses a reentrant model
 26485 ;;
 26486                           
 26487                           	psect	text131
 26488  0190C0                     __ptext131:
 26489                           	opt callstack 0
 26490  0190C0                     _adc_int_handler:
 26491                           	opt callstack 13
 26492                           
 26493                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 26494                           
 26495                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26496                           ;incstack = 0
 26497  0190C0  0012               	return		;funcret
 26498  0190C2                     __end_of_adc_int_handler:
 26499                           	opt callstack 0
 26500                           
 26501 ;; *************** function _ADCC_ThresholdISR *****************
 26502 ;; Defined at:
 26503 ;;		line 327 in file "mcc_generated_files/adcc.c"
 26504 ;; Parameters:    Size  Location     Type
 26505 ;;		None
 26506 ;; Auto vars:     Size  Location     Type
 26507 ;;		None
 26508 ;; Return value:  Size  Location     Type
 26509 ;;                  1    wreg      void 
 26510 ;; Registers used:
 26511 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 26512 ;; Tracked objects:
 26513 ;;		On entry : 0/0
 26514 ;;		On exit  : 0/0
 26515 ;;		Unchanged: 0/0
 26516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26519 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26520 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26521 ;;Total ram usage:        5 bytes
 26522 ;; Hardware stack levels used:    1
 26523 ;; Hardware stack levels required when called:    2
 26524 ;; This function calls:
 26525 ;;		Absolute function
 26526 ;;		_ADCC_DefaultInterruptHandler
 26527 ;;		_adc_int_t_handler
 26528 ;; This function is called by:
 26529 ;;		Interrupt level 2
 26530 ;; This function uses a non-reentrant model
 26531 ;;
 26532                           
 26533                           	psect	text132
 26534  0180C4                     __ptext132:
 26535                           	opt callstack 0
 26536  0180C4                     _ADCC_ThresholdISR:
 26537                           	opt callstack 12
 26538                           
 26539                           ;incstack = 0
 26540  0180C4  0060  F0C8  F052   	movff	btemp,??_ADCC_ThresholdISR
 26541  0180CA  0060  F0CC  F053   	movff	btemp+1,??_ADCC_ThresholdISR+1
 26542  0180D0  0060  F0E8  F054   	movff	btemp+8,??_ADCC_ThresholdISR+2
 26543  0180D6  0060  F0EC  F055   	movff	btemp+9,??_ADCC_ThresholdISR+3
 26544  0180DC  0060  F0F4  F056   	movff	btemp+11,??_ADCC_ThresholdISR+4
 26545  0180E2  EE14  F000         	lfsr	1,___inthi_sp
 26546                           
 26547                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 26548  0180E6  0139               	movlb	57	; () banked
 26549  0180E8  97A1               	bcf	161,3,b	;volatile
 26550                           
 26551                           ; BSR set to: 57
 26552                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 26553  0180EA  5001               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 26554  0180EC  1002               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 26555  0180EE  1003               	iorwf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 26556  0180F0  B4D8               	btfsc	status,2,c
 26557  0180F2  D00C               	goto	i2u907_49
 26558                           
 26559                           ; BSR set to: 57
 26560                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 26561  0180F4  D801               	call	i2u907_48
 26562  0180F6  D00A               	goto	i2u907_49
 26563  0180F8                     i2u907_48:
 26564  0180F8  0005               	push	
 26565  0180FA  6EFA               	movwf	pclath,c
 26566  0180FC  5001               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 26567  0180FE  6EFD               	movwf	tosl,c
 26568  018100  5002               	movf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 26569  018102  6EFE               	movwf	tosh,c
 26570  018104  5003               	movf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 26571  018106  6EFF               	movwf	tosu,c
 26572  018108  50FA               	movf	pclath,w,c
 26573  01810A  0012               	return		;indir
 26574  01810C                     i2u907_49:
 26575  01810C  0060  F158  F03D   	movff	??_ADCC_ThresholdISR+4,btemp+11
 26576  018112  0060  F154  F03B   	movff	??_ADCC_ThresholdISR+3,btemp+9
 26577  018118  0060  F150  F03A   	movff	??_ADCC_ThresholdISR+2,btemp+8
 26578  01811E  0060  F14C  F033   	movff	??_ADCC_ThresholdISR+1,btemp+1
 26579  018124  0060  F148  F032   	movff	??_ADCC_ThresholdISR,btemp
 26580  01812A  0011               	retfie		f
 26581  01812C                     __end_of_ADCC_ThresholdISR:
 26582                           	opt callstack 0
 26583                           
 26584 ;; *************** function _UART1_tx_vect_isr *****************
 26585 ;; Defined at:
 26586 ;;		line 199 in file "mcc_generated_files/uart1.c"
 26587 ;; Parameters:    Size  Location     Type
 26588 ;;		None
 26589 ;; Auto vars:     Size  Location     Type
 26590 ;;		None
 26591 ;; Return value:  Size  Location     Type
 26592 ;;                  1    wreg      void 
 26593 ;; Registers used:
 26594 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26595 ;; Tracked objects:
 26596 ;;		On entry : 0/0
 26597 ;;		On exit  : 0/0
 26598 ;;		Unchanged: 0/0
 26599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26604 ;;Total ram usage:        0 bytes
 26605 ;; Hardware stack levels used:    1
 26606 ;; Hardware stack levels required when called:    1
 26607 ;; This function calls:
 26608 ;;		Absolute function
 26609 ;;		_UART1_Transmit_ISR
 26610 ;; This function is called by:
 26611 ;;		Interrupt level 2
 26612 ;; This function uses a non-reentrant model
 26613 ;;
 26614                           
 26615                           	psect	text133
 26616  018D00                     __ptext133:
 26617                           	opt callstack 0
 26618  018D00                     _UART1_tx_vect_isr:
 26619                           	opt callstack 13
 26620                           
 26621                           ;incstack = 0
 26622  018D00  EE14  F000         	lfsr	1,___inthi_sp
 26623                           
 26624                           ;mcc_generated_files/uart1.c: 201:  if (UART1_TxInterruptHandler) {
 26625  018D04  5007               	movf	_UART1_TxInterruptHandler^0,w,c
 26626  018D06  1008               	iorwf	(_UART1_TxInterruptHandler+1)^0,w,c
 26627  018D08  1009               	iorwf	(_UART1_TxInterruptHandler+2)^0,w,c
 26628  018D0A  B4D8               	btfsc	status,2,c
 26629  018D0C  0011               	retfie		f
 26630                           
 26631                           ;mcc_generated_files/uart1.c: 202:   UART1_TxInterruptHandler();
 26632  018D0E  D801               	call	i2u909_48
 26633  018D10  0011               	retfie		f
 26634  018D12                     i2u909_48:
 26635  018D12  0005               	push	
 26636  018D14  6EFA               	movwf	pclath,c
 26637  018D16  5007               	movf	_UART1_TxInterruptHandler^0,w,c
 26638  018D18  6EFD               	movwf	tosl,c
 26639  018D1A  5008               	movf	(_UART1_TxInterruptHandler+1)^0,w,c
 26640  018D1C  6EFE               	movwf	tosh,c
 26641  018D1E  5009               	movf	(_UART1_TxInterruptHandler+2)^0,w,c
 26642  018D20  6EFF               	movwf	tosu,c
 26643  018D22  50FA               	movf	pclath,w,c
 26644  018D24  0012               	return		;indir
 26645  018D26                     __end_of_UART1_tx_vect_isr:
 26646                           	opt callstack 0
 26647                           
 26648 ;; *************** function _UART1_Transmit_ISR *****************
 26649 ;; Defined at:
 26650 ;;		line 213 in file "mcc_generated_files/uart1.c"
 26651 ;; Parameters:    Size  Location     Type
 26652 ;;		None
 26653 ;; Auto vars:     Size  Location     Type
 26654 ;;		None
 26655 ;; Return value:  Size  Location     Type
 26656 ;;                  1  [STACK] void 
 26657 ;; Registers used:
 26658 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26659 ;; Tracked objects:
 26660 ;;		On entry : 0/0
 26661 ;;		On exit  : 3B/39
 26662 ;;		Unchanged: 0/0
 26663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26668 ;;Total ram usage:        0 bytes
 26669 ;; Hardware stack levels used:    1
 26670 ;; This function calls:
 26671 ;;		Nothing
 26672 ;; This function is called by:
 26673 ;;		_UART1_Initialize
 26674 ;;		_UART1_tx_vect_isr
 26675 ;; This function uses a reentrant model
 26676 ;;
 26677                           
 26678                           	psect	text134
 26679  018A20                     __ptext134:
 26680                           	opt callstack 0
 26681  018A20                     _UART1_Transmit_ISR:
 26682                           	opt callstack 13
 26683                           
 26684                           ;mcc_generated_files/uart1.c: 216:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 26685                           
 26686                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26687                           ;incstack = 0
 26688  018A20  0E40               	movlw	64
 26689  018A22  602F               	cpfslt	_uart1TxBufferRemaining^0,c
 26690  018A24  D010               	goto	l581
 26691                           
 26692                           ;mcc_generated_files/uart1.c: 217:   U1TXB = uart1TxBuffer[uart1TxTail++];
 26693  018A26  0E40               	movlw	low _uart1TxBuffer
 26694  018A28  2430               	addwf	_uart1TxTail^0,w,c	;volatile
 26695  018A2A  6ED9               	movwf	fsr2l,c
 26696  018A2C  6ADA               	clrf	fsr2h,c
 26697  018A2E  0E03               	movlw	high _uart1TxBuffer
 26698  018A30  22DA               	addwfc	fsr2h,f,c
 26699  018A32  50DF               	movf	indf2,w,c
 26700  018A34  013D               	movlb	61	; () banked
 26701  018A36  6FEA               	movwf	234,b	;volatile
 26702                           
 26703                           ; BSR set to: 61
 26704  018A38  2A30               	incf	_uart1TxTail^0,f,c	;volatile
 26705                           
 26706                           ; BSR set to: 61
 26707                           ;mcc_generated_files/uart1.c: 218:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 26708  018A3A  0E3F               	movlw	63
 26709  018A3C  6430               	cpfsgt	_uart1TxTail^0,c
 26710  018A3E  D001               	goto	l8963
 26711                           
 26712                           ; BSR set to: 61
 26713                           ;mcc_generated_files/uart1.c: 219:    uart1TxTail = 0;
 26714  018A40  6A30               	clrf	_uart1TxTail^0,c	;volatile
 26715  018A42                     l8963:
 26716                           
 26717                           ; BSR set to: 61
 26718                           ;mcc_generated_files/uart1.c: 221:   uart1TxBufferRemaining++;
 26719  018A42  2A2F               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 26720                           
 26721                           ;mcc_generated_files/uart1.c: 222:  } else {
 26722  018A44  0012               	return	
 26723  018A46                     l581:
 26724                           
 26725                           ;mcc_generated_files/uart1.c: 223:   PIE3bits.U1TXIE = 0;
 26726  018A46  0139               	movlb	57	; () banked
 26727  018A48  9993               	bcf	147,4,b	;volatile
 26728                           
 26729                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 26730  018A4A  0012               	return		;funcret
 26731  018A4C                     __end_of_UART1_Transmit_ISR:
 26732                           	opt callstack 0
 26733                           
 26734 ;; *************** function _UART1_rx_vect_isr *****************
 26735 ;; Defined at:
 26736 ;;		line 206 in file "mcc_generated_files/uart1.c"
 26737 ;; Parameters:    Size  Location     Type
 26738 ;;		None
 26739 ;; Auto vars:     Size  Location     Type
 26740 ;;		None
 26741 ;; Return value:  Size  Location     Type
 26742 ;;                  1    wreg      void 
 26743 ;; Registers used:
 26744 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26745 ;; Tracked objects:
 26746 ;;		On entry : 0/0
 26747 ;;		On exit  : 0/0
 26748 ;;		Unchanged: 0/0
 26749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26754 ;;Total ram usage:        0 bytes
 26755 ;; Hardware stack levels used:    1
 26756 ;; Hardware stack levels required when called:    1
 26757 ;; This function calls:
 26758 ;;		Absolute function
 26759 ;;		_UART1_Receive_ISR
 26760 ;; This function is called by:
 26761 ;;		Interrupt level 2
 26762 ;; This function uses a non-reentrant model
 26763 ;;
 26764                           
 26765                           	psect	text135
 26766  018D28                     __ptext135:
 26767                           	opt callstack 0
 26768  018D28                     _UART1_rx_vect_isr:
 26769                           	opt callstack 13
 26770                           
 26771                           ;incstack = 0
 26772  018D28  EE14  F000         	lfsr	1,___inthi_sp
 26773                           
 26774                           ;mcc_generated_files/uart1.c: 208:  if (UART1_RxInterruptHandler) {
 26775  018D2C  500A               	movf	_UART1_RxInterruptHandler^0,w,c
 26776  018D2E  100B               	iorwf	(_UART1_RxInterruptHandler+1)^0,w,c
 26777  018D30  100C               	iorwf	(_UART1_RxInterruptHandler+2)^0,w,c
 26778  018D32  B4D8               	btfsc	status,2,c
 26779  018D34  0011               	retfie		f
 26780                           
 26781                           ;mcc_generated_files/uart1.c: 209:   UART1_RxInterruptHandler();
 26782  018D36  D801               	call	i2u911_48
 26783  018D38  0011               	retfie		f
 26784  018D3A                     i2u911_48:
 26785  018D3A  0005               	push	
 26786  018D3C  6EFA               	movwf	pclath,c
 26787  018D3E  500A               	movf	_UART1_RxInterruptHandler^0,w,c
 26788  018D40  6EFD               	movwf	tosl,c
 26789  018D42  500B               	movf	(_UART1_RxInterruptHandler+1)^0,w,c
 26790  018D44  6EFE               	movwf	tosh,c
 26791  018D46  500C               	movf	(_UART1_RxInterruptHandler+2)^0,w,c
 26792  018D48  6EFF               	movwf	tosu,c
 26793  018D4A  50FA               	movf	pclath,w,c
 26794  018D4C  0012               	return		;indir
 26795  018D4E                     __end_of_UART1_rx_vect_isr:
 26796                           	opt callstack 0
 26797                           
 26798 ;; *************** function _UART1_Receive_ISR *****************
 26799 ;; Defined at:
 26800 ;;		line 229 in file "mcc_generated_files/uart1.c"
 26801 ;; Parameters:    Size  Location     Type
 26802 ;;		None
 26803 ;; Auto vars:     Size  Location     Type
 26804 ;;		None
 26805 ;; Return value:  Size  Location     Type
 26806 ;;                  1  [STACK] void 
 26807 ;; Registers used:
 26808 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26809 ;; Tracked objects:
 26810 ;;		On entry : 0/0
 26811 ;;		On exit  : 0/0
 26812 ;;		Unchanged: 0/0
 26813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26818 ;;Total ram usage:        0 bytes
 26819 ;; Hardware stack levels used:    1
 26820 ;; This function calls:
 26821 ;;		Nothing
 26822 ;; This function is called by:
 26823 ;;		_UART1_Initialize
 26824 ;;		_UART1_rx_vect_isr
 26825 ;; This function uses a reentrant model
 26826 ;;
 26827                           
 26828                           	psect	text136
 26829  018EA8                     __ptext136:
 26830                           	opt callstack 0
 26831  018EA8                     _UART1_Receive_ISR:
 26832                           	opt callstack 13
 26833                           
 26834                           ;mcc_generated_files/uart1.c: 232:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 26835                           
 26836                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26837                           ;incstack = 0
 26838  018EA8  0E00               	movlw	low _uart1RxBuffer
 26839  018EAA  242E               	addwf	_uart1RxHead^0,w,c	;volatile
 26840  018EAC  6ED9               	movwf	fsr2l,c
 26841  018EAE  6ADA               	clrf	fsr2h,c
 26842  018EB0  0E06               	movlw	high _uart1RxBuffer
 26843  018EB2  22DA               	addwfc	fsr2h,f,c
 26844  018EB4  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 26845  018EBA  2A2E               	incf	_uart1RxHead^0,f,c	;volatile
 26846                           
 26847                           ;mcc_generated_files/uart1.c: 233:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 26848  018EBC  282E               	incf	_uart1RxHead^0,w,c
 26849  018EBE  B4D8               	btfsc	status,2,c
 26850                           
 26851                           ;mcc_generated_files/uart1.c: 234:   uart1RxHead = 0;
 26852  018EC0  6A2E               	clrf	_uart1RxHead^0,c	;volatile
 26853                           
 26854                           ;mcc_generated_files/uart1.c: 236:  uart1RxCount++;
 26855  018EC2  2A2C               	incf	_uart1RxCount^0,f,c	;volatile
 26856                           
 26857                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 26858  018EC4  0012               	return		;funcret
 26859  018EC6                     __end_of_UART1_Receive_ISR:
 26860                           	opt callstack 0
 26861                           
 26862 ;; *************** function _UART2_tx_vect_isr *****************
 26863 ;; Defined at:
 26864 ;;		line 195 in file "mcc_generated_files/uart2.c"
 26865 ;; Parameters:    Size  Location     Type
 26866 ;;		None
 26867 ;; Auto vars:     Size  Location     Type
 26868 ;;		None
 26869 ;; Return value:  Size  Location     Type
 26870 ;;                  1    wreg      void 
 26871 ;; Registers used:
 26872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26873 ;; Tracked objects:
 26874 ;;		On entry : 0/0
 26875 ;;		On exit  : 0/0
 26876 ;;		Unchanged: 0/0
 26877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26882 ;;Total ram usage:        0 bytes
 26883 ;; Hardware stack levels used:    1
 26884 ;; Hardware stack levels required when called:    1
 26885 ;; This function calls:
 26886 ;;		Absolute function
 26887 ;;		_UART2_Transmit_ISR
 26888 ;; This function is called by:
 26889 ;;		Interrupt level 2
 26890 ;; This function uses a non-reentrant model
 26891 ;;
 26892                           
 26893                           	psect	text137
 26894  018D50                     __ptext137:
 26895                           	opt callstack 0
 26896  018D50                     _UART2_tx_vect_isr:
 26897                           	opt callstack 13
 26898                           
 26899                           ;incstack = 0
 26900  018D50  EE14  F000         	lfsr	1,___inthi_sp
 26901                           
 26902                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 26903  018D54  500D               	movf	_UART2_TxInterruptHandler^0,w,c
 26904  018D56  100E               	iorwf	(_UART2_TxInterruptHandler+1)^0,w,c
 26905  018D58  100F               	iorwf	(_UART2_TxInterruptHandler+2)^0,w,c
 26906  018D5A  B4D8               	btfsc	status,2,c
 26907  018D5C  0011               	retfie		f
 26908                           
 26909                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 26910  018D5E  D801               	call	i2u913_48
 26911  018D60  0011               	retfie		f
 26912  018D62                     i2u913_48:
 26913  018D62  0005               	push	
 26914  018D64  6EFA               	movwf	pclath,c
 26915  018D66  500D               	movf	_UART2_TxInterruptHandler^0,w,c
 26916  018D68  6EFD               	movwf	tosl,c
 26917  018D6A  500E               	movf	(_UART2_TxInterruptHandler+1)^0,w,c
 26918  018D6C  6EFE               	movwf	tosh,c
 26919  018D6E  500F               	movf	(_UART2_TxInterruptHandler+2)^0,w,c
 26920  018D70  6EFF               	movwf	tosu,c
 26921  018D72  50FA               	movf	pclath,w,c
 26922  018D74  0012               	return		;indir
 26923  018D76                     __end_of_UART2_tx_vect_isr:
 26924                           	opt callstack 0
 26925                           
 26926 ;; *************** function _UART2_Transmit_ISR *****************
 26927 ;; Defined at:
 26928 ;;		line 213 in file "mcc_generated_files/uart2.c"
 26929 ;; Parameters:    Size  Location     Type
 26930 ;;		None
 26931 ;; Auto vars:     Size  Location     Type
 26932 ;;		None
 26933 ;; Return value:  Size  Location     Type
 26934 ;;                  1  [STACK] void 
 26935 ;; Registers used:
 26936 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26937 ;; Tracked objects:
 26938 ;;		On entry : 0/0
 26939 ;;		On exit  : 3B/39
 26940 ;;		Unchanged: 0/0
 26941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26946 ;;Total ram usage:        0 bytes
 26947 ;; Hardware stack levels used:    1
 26948 ;; This function calls:
 26949 ;;		Nothing
 26950 ;; This function is called by:
 26951 ;;		_UART2_Initialize
 26952 ;;		_UART2_tx_vect_isr
 26953 ;; This function uses a reentrant model
 26954 ;;
 26955                           
 26956                           	psect	text138
 26957  018A4C                     __ptext138:
 26958                           	opt callstack 0
 26959  018A4C                     _UART2_Transmit_ISR:
 26960                           	opt callstack 13
 26961                           
 26962                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 26963                           
 26964                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26965                           ;incstack = 0
 26966  018A4C  0E40               	movlw	64
 26967  018A4E  6029               	cpfslt	_uart2TxBufferRemaining^0,c
 26968  018A50  D010               	goto	l701
 26969                           
 26970                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 26971  018A52  0E00               	movlw	low _uart2TxBuffer
 26972  018A54  242A               	addwf	_uart2TxTail^0,w,c	;volatile
 26973  018A56  6ED9               	movwf	fsr2l,c
 26974  018A58  6ADA               	clrf	fsr2h,c
 26975  018A5A  0E03               	movlw	high _uart2TxBuffer
 26976  018A5C  22DA               	addwfc	fsr2h,f,c
 26977  018A5E  50DF               	movf	indf2,w,c
 26978  018A60  013D               	movlb	61	; () banked
 26979  018A62  6FD2               	movwf	210,b	;volatile
 26980                           
 26981                           ; BSR set to: 61
 26982  018A64  2A2A               	incf	_uart2TxTail^0,f,c	;volatile
 26983                           
 26984                           ; BSR set to: 61
 26985                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 26986  018A66  0E3F               	movlw	63
 26987  018A68  642A               	cpfsgt	_uart2TxTail^0,c
 26988  018A6A  D001               	goto	l8985
 26989                           
 26990                           ; BSR set to: 61
 26991                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 26992  018A6C  6A2A               	clrf	_uart2TxTail^0,c	;volatile
 26993  018A6E                     l8985:
 26994                           
 26995                           ; BSR set to: 61
 26996                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 26997  018A6E  2A29               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 26998                           
 26999                           ;mcc_generated_files/uart2.c: 224:     }
 27000  018A70  0012               	return	
 27001  018A72                     l701:
 27002                           
 27003                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 27004  018A72  0139               	movlb	57	; () banked
 27005  018A74  9796               	bcf	150,3,b	;volatile
 27006                           
 27007                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 27008  018A76  0012               	return		;funcret
 27009  018A78                     __end_of_UART2_Transmit_ISR:
 27010                           	opt callstack 0
 27011                           
 27012 ;; *************** function _UART2_rx_vect_isr *****************
 27013 ;; Defined at:
 27014 ;;		line 203 in file "mcc_generated_files/uart2.c"
 27015 ;; Parameters:    Size  Location     Type
 27016 ;;		None
 27017 ;; Auto vars:     Size  Location     Type
 27018 ;;		None
 27019 ;; Return value:  Size  Location     Type
 27020 ;;                  1    wreg      void 
 27021 ;; Registers used:
 27022 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 27023 ;; Tracked objects:
 27024 ;;		On entry : 0/0
 27025 ;;		On exit  : 0/0
 27026 ;;		Unchanged: 0/0
 27027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27032 ;;Total ram usage:        0 bytes
 27033 ;; Hardware stack levels used:    1
 27034 ;; Hardware stack levels required when called:    1
 27035 ;; This function calls:
 27036 ;;		Absolute function
 27037 ;;		_UART2_Receive_ISR
 27038 ;; This function is called by:
 27039 ;;		Interrupt level 2
 27040 ;; This function uses a non-reentrant model
 27041 ;;
 27042                           
 27043                           	psect	text139
 27044  018D78                     __ptext139:
 27045                           	opt callstack 0
 27046  018D78                     _UART2_rx_vect_isr:
 27047                           	opt callstack 13
 27048                           
 27049                           ;incstack = 0
 27050  018D78  EE14  F000         	lfsr	1,___inthi_sp
 27051                           
 27052                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 27053  018D7C  5010               	movf	_UART2_RxInterruptHandler^0,w,c
 27054  018D7E  1011               	iorwf	(_UART2_RxInterruptHandler+1)^0,w,c
 27055  018D80  1012               	iorwf	(_UART2_RxInterruptHandler+2)^0,w,c
 27056  018D82  B4D8               	btfsc	status,2,c
 27057  018D84  0011               	retfie		f
 27058                           
 27059                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 27060  018D86  D801               	call	i2u915_48
 27061  018D88  0011               	retfie		f
 27062  018D8A                     i2u915_48:
 27063  018D8A  0005               	push	
 27064  018D8C  6EFA               	movwf	pclath,c
 27065  018D8E  5010               	movf	_UART2_RxInterruptHandler^0,w,c
 27066  018D90  6EFD               	movwf	tosl,c
 27067  018D92  5011               	movf	(_UART2_RxInterruptHandler+1)^0,w,c
 27068  018D94  6EFE               	movwf	tosh,c
 27069  018D96  5012               	movf	(_UART2_RxInterruptHandler+2)^0,w,c
 27070  018D98  6EFF               	movwf	tosu,c
 27071  018D9A  50FA               	movf	pclath,w,c
 27072  018D9C  0012               	return		;indir
 27073  018D9E                     __end_of_UART2_rx_vect_isr:
 27074                           	opt callstack 0
 27075                           
 27076 ;; *************** function _UART2_Receive_ISR *****************
 27077 ;; Defined at:
 27078 ;;		line 233 in file "mcc_generated_files/uart2.c"
 27079 ;; Parameters:    Size  Location     Type
 27080 ;;		None
 27081 ;; Auto vars:     Size  Location     Type
 27082 ;;		None
 27083 ;; Return value:  Size  Location     Type
 27084 ;;                  1  [STACK] void 
 27085 ;; Registers used:
 27086 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27087 ;; Tracked objects:
 27088 ;;		On entry : 0/0
 27089 ;;		On exit  : 0/0
 27090 ;;		Unchanged: 0/0
 27091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27096 ;;Total ram usage:        0 bytes
 27097 ;; Hardware stack levels used:    1
 27098 ;; This function calls:
 27099 ;;		Nothing
 27100 ;; This function is called by:
 27101 ;;		_UART2_Initialize
 27102 ;;		_UART2_rx_vect_isr
 27103 ;; This function uses a reentrant model
 27104 ;;
 27105                           
 27106                           	psect	text140
 27107  018EC6                     __ptext140:
 27108                           	opt callstack 0
 27109  018EC6                     _UART2_Receive_ISR:
 27110                           	opt callstack 13
 27111                           
 27112                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 27113                           
 27114                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27115                           ;incstack = 0
 27116  018EC6  0E00               	movlw	low _uart2RxBuffer
 27117  018EC8  2428               	addwf	_uart2RxHead^0,w,c	;volatile
 27118  018ECA  6ED9               	movwf	fsr2l,c
 27119  018ECC  6ADA               	clrf	fsr2h,c
 27120  018ECE  0E07               	movlw	high _uart2RxBuffer
 27121  018ED0  22DA               	addwfc	fsr2h,f,c
 27122  018ED2  006F F743 FFDF     	movff	15824,indf2	;volatile
 27123  018ED8  2A28               	incf	_uart2RxHead^0,f,c	;volatile
 27124                           
 27125                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 27126  018EDA  2828               	incf	_uart2RxHead^0,w,c
 27127  018EDC  B4D8               	btfsc	status,2,c
 27128                           
 27129                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 27130  018EDE  6A28               	clrf	_uart2RxHead^0,c	;volatile
 27131                           
 27132                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 27133  018EE0  2A26               	incf	_uart2RxCount^0,f,c	;volatile
 27134                           
 27135                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 27136  018EE2  0012               	return		;funcret
 27137  018EE4                     __end_of_UART2_Receive_ISR:
 27138                           	opt callstack 0
 27139                           
 27140 ;; *************** function _TMR6_ISR *****************
 27141 ;; Defined at:
 27142 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 27143 ;; Parameters:    Size  Location     Type
 27144 ;;		None
 27145 ;; Auto vars:     Size  Location     Type
 27146 ;;		None
 27147 ;; Return value:  Size  Location     Type
 27148 ;;                  1    wreg      void 
 27149 ;; Registers used:
 27150 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 27151 ;; Tracked objects:
 27152 ;;		On entry : 0/0
 27153 ;;		On exit  : 0/0
 27154 ;;		Unchanged: 0/0
 27155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27158 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27159 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27160 ;;Total ram usage:        1 bytes
 27161 ;; Hardware stack levels used:    1
 27162 ;; Hardware stack levels required when called:    2
 27163 ;; This function calls:
 27164 ;;		_TMR6_CallBack
 27165 ;; This function is called by:
 27166 ;;		Interrupt level 2
 27167 ;; This function uses a non-reentrant model
 27168 ;;
 27169                           
 27170                           	psect	text141
 27171  018F50                     __ptext141:
 27172                           	opt callstack 0
 27173  018F50                     _TMR6_ISR:
 27174                           	opt callstack 12
 27175                           
 27176                           ;incstack = 0
 27177  018F50  0060  F0C8  F057   	movff	btemp,??_TMR6_ISR
 27178  018F56  EE14  F000         	lfsr	1,___inthi_sp
 27179                           
 27180                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 27181  018F5A  0139               	movlb	57	; () banked
 27182  018F5C  91A9               	bcf	169,0,b	;volatile
 27183                           
 27184                           ; BSR set to: 57
 27185                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 27186  018F5E  ECF3  F0C6         	call	_TMR6_CallBack	;wreg free
 27187  018F62  0060  F15C  F032   	movff	??_TMR6_ISR,btemp
 27188  018F68  0011               	retfie		f
 27189  018F6A                     __end_of_TMR6_ISR:
 27190                           	opt callstack 0
 27191                           
 27192 ;; *************** function _TMR6_CallBack *****************
 27193 ;; Defined at:
 27194 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 27195 ;; Parameters:    Size  Location     Type
 27196 ;;		None
 27197 ;; Auto vars:     Size  Location     Type
 27198 ;;		None
 27199 ;; Return value:  Size  Location     Type
 27200 ;;                  1  [STACK] void 
 27201 ;; Registers used:
 27202 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 27203 ;; Tracked objects:
 27204 ;;		On entry : 3F/39
 27205 ;;		On exit  : 0/0
 27206 ;;		Unchanged: 0/0
 27207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27212 ;;Total ram usage:        0 bytes
 27213 ;; Hardware stack levels used:    1
 27214 ;; Hardware stack levels required when called:    1
 27215 ;; This function calls:
 27216 ;;		Absolute function
 27217 ;;		_TMR6_DefaultInterruptHandler
 27218 ;; This function is called by:
 27219 ;;		_TMR6_ISR
 27220 ;; This function uses a reentrant model
 27221 ;;
 27222                           
 27223                           	psect	text142
 27224  018DE6                     __ptext142:
 27225                           	opt callstack 0
 27226  018DE6                     _TMR6_CallBack:
 27227                           	opt callstack 12
 27228                           
 27229                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 27230                           
 27231                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27232                           ;incstack = 0
 27233  018DE6  0100               	movlb	0	; () banked
 27234  018DE8  519B               	movf	_TMR6_InterruptHandler& (0+255),w,b
 27235  018DEA  119C               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 27236  018DEC  119D               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 27237  018DEE  B4D8               	btfsc	status,2,c
 27238  018DF0  0012               	return	
 27239                           
 27240                           ; BSR set to: 0
 27241                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 27242  018DF2  D801               	call	u889_48
 27243  018DF4  0012               	return	
 27244  018DF6                     u889_48:
 27245  018DF6  0005               	push	
 27246  018DF8  6EFA               	movwf	pclath,c
 27247  018DFA  519B               	movf	_TMR6_InterruptHandler& (0+255),w,b
 27248  018DFC  6EFD               	movwf	tosl,c
 27249  018DFE  519C               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 27250  018E00  6EFE               	movwf	tosh,c
 27251  018E02  519D               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 27252  018E04  6EFF               	movwf	tosu,c
 27253  018E06  50FA               	movf	pclath,w,c
 27254  018E08  0012               	return		;indir
 27255  018E0A                     __end_of_TMR6_CallBack:
 27256                           	opt callstack 0
 27257                           
 27258 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 27259 ;; Defined at:
 27260 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 27261 ;; Parameters:    Size  Location     Type
 27262 ;;		None
 27263 ;; Auto vars:     Size  Location     Type
 27264 ;;  i               1  [STACK] unsigned char 
 27265 ;; Return value:  Size  Location     Type
 27266 ;;                  1  [STACK] void 
 27267 ;; Registers used:
 27268 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 27269 ;; Tracked objects:
 27270 ;;		On entry : 3F/0
 27271 ;;		On exit  : 0/0
 27272 ;;		Unchanged: 0/0
 27273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27278 ;;Total ram usage:        0 bytes
 27279 ;; Hardware stack levels used:    1
 27280 ;; This function calls:
 27281 ;;		Nothing
 27282 ;; This function is called by:
 27283 ;;		_TMR6_Initialize
 27284 ;;		_TMR6_CallBack
 27285 ;; This function uses a reentrant model
 27286 ;;
 27287                           
 27288                           	psect	text143
 27289  018690                     __ptext143:
 27290                           	opt callstack 0
 27291  018690                     _TMR6_DefaultInterruptHandler:
 27292                           	opt callstack 0
 27293                           
 27294                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27295  018690  52E6               	movf	postinc1,f,c
 27296                           
 27297                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 27298                           ;stkvar	_i @ sp[(-1)+0]
 27299                           
 27300                           ;incstack = 0
 27301  018692  0EFF               	movlw	-1
 27302  018694  6AE3               	clrf	plusw1,c
 27303  018696                     l8665:
 27304                           
 27305                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 27306                           ;stkvar	_i @ sp[(-1)+0]
 27307  018696  0EFF               	movlw	-1
 27308  018698  50E3               	movf	plusw1,w,c
 27309  01869A  0D02               	mullw	2
 27310  01869C  50F3               	movf	243,w,c
 27311  01869E  0F60               	addlw	low _tickCount
 27312  0186A0  6ED9               	movwf	fsr2l,c
 27313  0186A2  6ADA               	clrf	fsr2h,c
 27314  0186A4  50DE               	movf	postinc2,w,c
 27315  0186A6  10DE               	iorwf	postinc2,w,c
 27316  0186A8  B4D8               	btfsc	status,2,c
 27317  0186AA  D00A               	goto	l8669
 27318                           
 27319                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 27320                           ;stkvar	_i @ sp[(-1)+0]
 27321  0186AC  0EFF               	movlw	-1
 27322  0186AE  50E3               	movf	plusw1,w,c
 27323  0186B0  0D02               	mullw	2
 27324  0186B2  50F3               	movf	243,w,c
 27325  0186B4  0F60               	addlw	low _tickCount
 27326  0186B6  6ED9               	movwf	fsr2l,c
 27327  0186B8  6ADA               	clrf	fsr2h,c
 27328  0186BA  06DE               	decf	postinc2,f,c
 27329  0186BC  0E00               	movlw	0
 27330  0186BE  5ADD               	subwfb	postdec2,f,c
 27331  0186C0                     l8669:
 27332                           
 27333                           ;mcc_generated_files/tmr6.c: 207:  }
 27334                           ;stkvar	_i @ sp[(-1)+0]
 27335  0186C0  0EFF               	movlw	-1
 27336  0186C2  2AE3               	incf	plusw1,f,c
 27337                           
 27338                           ;stkvar	_i @ sp[(-1)+0]
 27339  0186C4  0EFF               	movlw	-1
 27340  0186C6  006F FF8C  F032    	movff	plusw1,btemp
 27341  0186CC  0E0B               	movlw	11
 27342  0186CE  6432               	cpfsgt	btemp^0,c
 27343  0186D0  D7E2               	goto	l8665
 27344                           
 27345                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 27346  0186D2  52E5               	movf	postdec1,f,c
 27347  0186D4  0012               	return		;funcret
 27348  0186D6                     __end_of_TMR6_DefaultInterruptHandler:
 27349                           	opt callstack 0
 27350                           
 27351 ;; *************** function _DMA1_DMASCNT_ISR *****************
 27352 ;; Defined at:
 27353 ;;		line 126 in file "mcc_generated_files/dma1.c"
 27354 ;; Parameters:    Size  Location     Type
 27355 ;;		None
 27356 ;; Auto vars:     Size  Location     Type
 27357 ;;		None
 27358 ;; Return value:  Size  Location     Type
 27359 ;;                  1    wreg      void 
 27360 ;; Registers used:
 27361 ;;		None
 27362 ;; Tracked objects:
 27363 ;;		On entry : 0/0
 27364 ;;		On exit  : 3F/0
 27365 ;;		Unchanged: 0/0
 27366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27371 ;;Total ram usage:        0 bytes
 27372 ;; Hardware stack levels used:    1
 27373 ;; This function calls:
 27374 ;;		Nothing
 27375 ;; This function is called by:
 27376 ;;		Interrupt level 2
 27377 ;; This function uses a non-reentrant model
 27378 ;;
 27379                           
 27380                           	psect	text144
 27381  019040                     __ptext144:
 27382                           	opt callstack 0
 27383  019040                     _DMA1_DMASCNT_ISR:
 27384                           	opt callstack 14
 27385                           
 27386                           ;incstack = 0
 27387  019040  EE14  F000         	lfsr	1,___inthi_sp
 27388                           
 27389                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 27390  019044  0139               	movlb	57	; () banked
 27391  019046  91A2               	bcf	162,0,b	;volatile
 27392                           
 27393                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 27394  019048  0100               	movlb	0	; () banked
 27395  01904A  9778               	bcf	_spi_link& (0+255),3,b	;volatile
 27396                           
 27397                           ; BSR set to: 0
 27398  01904C  0011               	retfie		f
 27399  01904E                     __end_of_DMA1_DMASCNT_ISR:
 27400                           	opt callstack 0
 27401                           
 27402 ;; *************** function _DMA1_DMADCNT_ISR *****************
 27403 ;; Defined at:
 27404 ;;		line 134 in file "mcc_generated_files/dma1.c"
 27405 ;; Parameters:    Size  Location     Type
 27406 ;;		None
 27407 ;; Auto vars:     Size  Location     Type
 27408 ;;		None
 27409 ;; Return value:  Size  Location     Type
 27410 ;;                  1    wreg      void 
 27411 ;; Registers used:
 27412 ;;		None
 27413 ;; Tracked objects:
 27414 ;;		On entry : 0/0
 27415 ;;		On exit  : 3F/39
 27416 ;;		Unchanged: 0/0
 27417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27422 ;;Total ram usage:        0 bytes
 27423 ;; Hardware stack levels used:    1
 27424 ;; This function calls:
 27425 ;;		Nothing
 27426 ;; This function is called by:
 27427 ;;		Interrupt level 2
 27428 ;; This function uses a non-reentrant model
 27429 ;;
 27430                           
 27431                           	psect	text145
 27432  019058                     __ptext145:
 27433                           	opt callstack 0
 27434  019058                     _DMA1_DMADCNT_ISR:
 27435                           	opt callstack 14
 27436                           
 27437                           ; BSR set to: 0
 27438                           ;incstack = 0
 27439  019058  EE14  F000         	lfsr	1,___inthi_sp
 27440                           
 27441                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 27442  01905C  0139               	movlb	57	; () banked
 27443  01905E  93A2               	bcf	162,1,b	;volatile
 27444                           
 27445                           ; BSR set to: 57
 27446  019060  0011               	retfie		f
 27447  019062                     __end_of_DMA1_DMADCNT_ISR:
 27448                           	opt callstack 0
 27449                           
 27450 ;; *************** function _DMA1_DMAA_ISR *****************
 27451 ;; Defined at:
 27452 ;;		line 144 in file "mcc_generated_files/dma1.c"
 27453 ;; Parameters:    Size  Location     Type
 27454 ;;		None
 27455 ;; Auto vars:     Size  Location     Type
 27456 ;;		None
 27457 ;; Return value:  Size  Location     Type
 27458 ;;                  1    wreg      void 
 27459 ;; Registers used:
 27460 ;;		None
 27461 ;; Tracked objects:
 27462 ;;		On entry : 0/0
 27463 ;;		On exit  : 3F/39
 27464 ;;		Unchanged: 0/0
 27465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27470 ;;Total ram usage:        0 bytes
 27471 ;; Hardware stack levels used:    1
 27472 ;; This function calls:
 27473 ;;		Nothing
 27474 ;; This function is called by:
 27475 ;;		Interrupt level 2
 27476 ;; This function uses a non-reentrant model
 27477 ;;
 27478                           
 27479                           	psect	text146
 27480  019064                     __ptext146:
 27481                           	opt callstack 0
 27482  019064                     _DMA1_DMAA_ISR:
 27483                           	opt callstack 14
 27484                           
 27485                           ; BSR set to: 57
 27486                           ;incstack = 0
 27487  019064  EE14  F000         	lfsr	1,___inthi_sp
 27488                           
 27489                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 27490  019068  0139               	movlb	57	; () banked
 27491  01906A  97A2               	bcf	162,3,b	;volatile
 27492                           
 27493                           ; BSR set to: 57
 27494  01906C  0011               	retfie		f
 27495  01906E                     __end_of_DMA1_DMAA_ISR:
 27496                           	opt callstack 0
 27497                           
 27498 ;; *************** function _DMA1_DMAOR_ISR *****************
 27499 ;; Defined at:
 27500 ;;		line 155 in file "mcc_generated_files/dma1.c"
 27501 ;; Parameters:    Size  Location     Type
 27502 ;;		None
 27503 ;; Auto vars:     Size  Location     Type
 27504 ;;		None
 27505 ;; Return value:  Size  Location     Type
 27506 ;;                  1    wreg      void 
 27507 ;; Registers used:
 27508 ;;		None
 27509 ;; Tracked objects:
 27510 ;;		On entry : 0/0
 27511 ;;		On exit  : 3F/39
 27512 ;;		Unchanged: 0/0
 27513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27518 ;;Total ram usage:        0 bytes
 27519 ;; Hardware stack levels used:    1
 27520 ;; This function calls:
 27521 ;;		Nothing
 27522 ;; This function is called by:
 27523 ;;		Interrupt level 2
 27524 ;; This function uses a non-reentrant model
 27525 ;;
 27526                           
 27527                           	psect	text147
 27528  019070                     __ptext147:
 27529                           	opt callstack 0
 27530  019070                     _DMA1_DMAOR_ISR:
 27531                           	opt callstack 14
 27532                           
 27533                           ; BSR set to: 57
 27534                           ;incstack = 0
 27535  019070  EE14  F000         	lfsr	1,___inthi_sp
 27536                           
 27537                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 27538  019074  0139               	movlb	57	; () banked
 27539  019076  95A2               	bcf	162,2,b	;volatile
 27540                           
 27541                           ; BSR set to: 57
 27542  019078  0011               	retfie		f
 27543  01907A                     __end_of_DMA1_DMAOR_ISR:
 27544                           	opt callstack 0
 27545                           
 27546                           ;
 27547                           ; Interrupt Vector Table @ 0x8
 27548                           ;
 27549                           
 27550                           	psect	ivt0x8
 27551  000008                     __pivt0x8:
 27552                           	opt callstack 0
 27553  000008                     ivt0x8_base:
 27554                           	opt callstack 0
 27555                           
 27556                           ; Vector 0 : SWINT
 27557  000008  642D               	dw	_Default_ISR shr (0+2)
 27558                           
 27559                           ; Vector 1 : HLVD
 27560  00000A  642D               	dw	_Default_ISR shr (0+2)
 27561                           
 27562                           ; Vector 2 : OSF
 27563  00000C  642D               	dw	_Default_ISR shr (0+2)
 27564                           
 27565                           ; Vector 3 : CSW
 27566  00000E  642D               	dw	_Default_ISR shr (0+2)
 27567                           
 27568                           ; Vector 4 : NVM
 27569  000010  642D               	dw	_Default_ISR shr (0+2)
 27570                           
 27571                           ; Vector 5 : SCAN
 27572  000012  642D               	dw	_Default_ISR shr (0+2)
 27573                           
 27574                           ; Vector 6 : CRC
 27575  000014  642D               	dw	_Default_ISR shr (0+2)
 27576                           
 27577                           ; Vector 7 : IOC
 27578  000016  642D               	dw	_Default_ISR shr (0+2)
 27579                           
 27580                           ; Vector 8 : INT0
 27581  000018  640C               	dw	_INT0_ISR shr (0+2)
 27582                           
 27583                           ; Vector 9 : ZCD
 27584  00001A  642D               	dw	_Default_ISR shr (0+2)
 27585                           
 27586                           ; Vector 10 : AD
 27587  00001C  62A9               	dw	_ADCC_ISR shr (0+2)
 27588                           
 27589                           ; Vector 11 : ADT
 27590  00001E  6031               	dw	_ADCC_ThresholdISR shr (0+2)
 27591                           
 27592                           ; Vector 12 : CMP1
 27593  000020  642D               	dw	_Default_ISR shr (0+2)
 27594                           
 27595                           ; Vector 13 : SMT1
 27596  000022  642D               	dw	_Default_ISR shr (0+2)
 27597                           
 27598                           ; Vector 14 : SMT1PRA
 27599  000024  642D               	dw	_Default_ISR shr (0+2)
 27600                           
 27601                           ; Vector 15 : SMT1PRW
 27602  000026  642D               	dw	_Default_ISR shr (0+2)
 27603                           
 27604                           ; Vector 16 : DMA1SCNT
 27605  000028  6410               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 27606                           
 27607                           ; Vector 17 : DMA1DCNT
 27608  00002A  6416               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 27609                           
 27610                           ; Vector 18 : DMA1OR
 27611  00002C  641C               	dw	_DMA1_DMAOR_ISR shr (0+2)
 27612                           
 27613                           ; Vector 19 : DMA1A
 27614  00002E  6419               	dw	_DMA1_DMAA_ISR shr (0+2)
 27615                           
 27616                           ; Vector 20 : SPI1RX
 27617  000030  642D               	dw	_Default_ISR shr (0+2)
 27618                           
 27619                           ; Vector 21 : SPI1TX
 27620  000032  642D               	dw	_Default_ISR shr (0+2)
 27621                           
 27622                           ; Vector 22 : SPI1
 27623  000034  642D               	dw	_Default_ISR shr (0+2)
 27624                           
 27625                           ; Vector 23 : I2C1RX
 27626  000036  642D               	dw	_Default_ISR shr (0+2)
 27627                           
 27628                           ; Vector 24 : I2C1TX
 27629  000038  642D               	dw	_Default_ISR shr (0+2)
 27630                           
 27631                           ; Vector 25 : I2C1
 27632  00003A  642D               	dw	_Default_ISR shr (0+2)
 27633                           
 27634                           ; Vector 26 : I2C1E
 27635  00003C  642D               	dw	_Default_ISR shr (0+2)
 27636                           
 27637                           ; Vector 27 : U1RX
 27638  00003E  634A               	dw	_UART1_rx_vect_isr shr (0+2)
 27639                           
 27640                           ; Vector 28 : U1TX
 27641  000040  6340               	dw	_UART1_tx_vect_isr shr (0+2)
 27642                           
 27643                           ; Vector 29 : U1E
 27644  000042  642D               	dw	_Default_ISR shr (0+2)
 27645                           
 27646                           ; Vector 30 : U1
 27647  000044  642D               	dw	_Default_ISR shr (0+2)
 27648                           
 27649                           ; Vector 31 : TMR0
 27650  000046  642D               	dw	_Default_ISR shr (0+2)
 27651                           
 27652                           ; Vector 32 : TMR1
 27653  000048  642D               	dw	_Default_ISR shr (0+2)
 27654                           
 27655                           ; Vector 33 : TMR1G
 27656  00004A  642D               	dw	_Default_ISR shr (0+2)
 27657                           
 27658                           ; Vector 34 : TMR2
 27659  00004C  642D               	dw	_Default_ISR shr (0+2)
 27660                           
 27661                           ; Vector 35 : CCP1
 27662  00004E  642D               	dw	_Default_ISR shr (0+2)
 27663                           
 27664                           ; Vector 36 : Undefined
 27665  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 27666                           
 27667                           ; Vector 37 : NCO1
 27668  000052  642D               	dw	_Default_ISR shr (0+2)
 27669                           
 27670                           ; Vector 38 : CWG1
 27671  000054  642D               	dw	_Default_ISR shr (0+2)
 27672                           
 27673                           ; Vector 39 : CLC1
 27674  000056  642D               	dw	_Default_ISR shr (0+2)
 27675                           
 27676                           ; Vector 40 : INT1
 27677  000058  61F7               	dw	_INT1_ISR shr (0+2)
 27678                           
 27679                           ; Vector 41 : CMP2
 27680  00005A  642D               	dw	_Default_ISR shr (0+2)
 27681                           
 27682                           ; Vector 42 : DMA2SCNT
 27683  00005C  642D               	dw	_Default_ISR shr (0+2)
 27684                           
 27685                           ; Vector 43 : DMA2DCNT
 27686  00005E  642D               	dw	_Default_ISR shr (0+2)
 27687                           
 27688                           ; Vector 44 : DMA2OR
 27689  000060  642D               	dw	_Default_ISR shr (0+2)
 27690                           
 27691                           ; Vector 45 : DMA2A
 27692  000062  642D               	dw	_Default_ISR shr (0+2)
 27693                           
 27694                           ; Vector 46 : I2C2RX
 27695  000064  642D               	dw	_Default_ISR shr (0+2)
 27696                           
 27697                           ; Vector 47 : I2C2TX
 27698  000066  642D               	dw	_Default_ISR shr (0+2)
 27699                           
 27700                           ; Vector 48 : I2C2
 27701  000068  642D               	dw	_Default_ISR shr (0+2)
 27702                           
 27703                           ; Vector 49 : I2C2E
 27704  00006A  642D               	dw	_Default_ISR shr (0+2)
 27705                           
 27706                           ; Vector 50 : U2RX
 27707  00006C  635E               	dw	_UART2_rx_vect_isr shr (0+2)
 27708                           
 27709                           ; Vector 51 : U2TX
 27710  00006E  6354               	dw	_UART2_tx_vect_isr shr (0+2)
 27711                           
 27712                           ; Vector 52 : U2E
 27713  000070  642D               	dw	_Default_ISR shr (0+2)
 27714                           
 27715                           ; Vector 53 : U2
 27716  000072  642D               	dw	_Default_ISR shr (0+2)
 27717                           
 27718                           ; Vector 54 : TMR3
 27719  000074  642D               	dw	_Default_ISR shr (0+2)
 27720                           
 27721                           ; Vector 55 : TMR3G
 27722  000076  642D               	dw	_Default_ISR shr (0+2)
 27723                           
 27724                           ; Vector 56 : TMR4
 27725  000078  642D               	dw	_Default_ISR shr (0+2)
 27726                           
 27727                           ; Vector 57 : CCP2
 27728  00007A  642D               	dw	_Default_ISR shr (0+2)
 27729                           
 27730                           ; Vector 58 : Undefined
 27731  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 27732                           
 27733                           ; Vector 59 : CWG2
 27734  00007E  642D               	dw	_Default_ISR shr (0+2)
 27735                           
 27736                           ; Vector 60 : CLC2
 27737  000080  642D               	dw	_Default_ISR shr (0+2)
 27738                           
 27739                           ; Vector 61 : INT2
 27740  000082  642D               	dw	_Default_ISR shr (0+2)
 27741                           
 27742                           ; Vector 62 : Undefined
 27743  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 27744                           
 27745                           ; Vector 63 : Undefined
 27746  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 27747                           
 27748                           ; Vector 64 : Undefined
 27749  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 27750                           
 27751                           ; Vector 65 : Undefined
 27752  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 27753                           
 27754                           ; Vector 66 : Undefined
 27755  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 27756                           
 27757                           ; Vector 67 : Undefined
 27758  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 27759                           
 27760                           ; Vector 68 : Undefined
 27761  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 27762                           
 27763                           ; Vector 69 : Undefined
 27764  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 27765                           
 27766                           ; Vector 70 : TMR5
 27767  000094  60DF               	dw	_TMR5_ISR shr (0+2)
 27768                           
 27769                           ; Vector 71 : TMR5G
 27770  000096  642D               	dw	_Default_ISR shr (0+2)
 27771                           
 27772                           ; Vector 72 : TMR6
 27773  000098  63D4               	dw	_TMR6_ISR shr (0+2)
 27774                           
 27775                           ; Vector 73 : CCP3
 27776  00009A  642D               	dw	_Default_ISR shr (0+2)
 27777                           
 27778                           ; Vector 74 : CWG3
 27779  00009C  642D               	dw	_Default_ISR shr (0+2)
 27780                           
 27781                           ; Vector 75 : CLC3
 27782  00009E  642D               	dw	_Default_ISR shr (0+2)
 27783                           
 27784                           ; Vector 76 : Undefined
 27785  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 27786                           
 27787                           ; Vector 77 : Undefined
 27788  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 27789                           
 27790                           ; Vector 78 : Undefined
 27791  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 27792                           
 27793                           ; Vector 79 : Undefined
 27794  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 27795                           
 27796                           ; Vector 80 : CCP4
 27797  0000A8  642D               	dw	_Default_ISR shr (0+2)
 27798                           
 27799                           ; Vector 81 : CLC4
 27800  0000AA  642D               	dw	_Default_ISR shr (0+2)
 27801  0000AC                     ivt0x8_undefint:
 27802                           	opt callstack 0
 27803  0000AC  00FF               	reset	
 27804                           
 27805                           	psect	text148
 27806  000000                     __ptext148:
 27807                           	opt callstack 0
 27808                           
 27809                           	psect	rparam
 27810  0000                     
 27811                           	psect	temp
 27812  000032                     btemp:
 27813                           	opt callstack 0
 27814  000032                     	ds	32
 27815  0000                     wtemp0	set	btemp
 27816  0000                     wtemp1	set	btemp+2
 27817  0000                     wtemp2	set	btemp+4
 27818  0000                     wtemp3	set	btemp+6
 27819  0000                     wtemp4	set	btemp+8
 27820  0000                     wtemp5	set	btemp+10
 27821  0000                     wtemp8	set	btemp+1
 27822  0000                     ttemp0	set	btemp
 27823  0000                     ttemp1	set	btemp+3
 27824  0000                     ttemp2	set	btemp+6
 27825  0000                     ttemp3	set	btemp+9
 27826  0000                     ttemp5	set	btemp+1
 27827  0000                     ttemp6	set	btemp+4
 27828  0000                     ttemp7	set	btemp+8
 27829  0000                     ltemp0	set	btemp
 27830  0000                     ltemp1	set	btemp+4
 27831  0000                     ltemp2	set	btemp+8
 27832  0000                     lltemp0	set	btemp
 27833  0000                     lltemp1	set	btemp+8
 27834  0000                     lltemp2	set	btemp+16
 27835  0000                     lltemp3	set	btemp+24
 27836                           tosu	equ	0x3FFF
 27837                           tosh	equ	0x3FFE
 27838                           tosl	equ	0x3FFD
 27839                           stkptr	equ	0x3FFC
 27840                           pclatu	equ	0x3FFB
 27841                           pclath	equ	0x3FFA
 27842                           pcl	equ	0x3FF9
 27843                           tblptru	equ	0x3FF8
 27844                           tblptrh	equ	0x3FF7
 27845                           tblptrl	equ	0x3FF6
 27846                           tablat	equ	0x3FF5
 27847                           prodh	equ	0x3FF4
 27848                           prodl	equ	0x3FF3
 27849                           indf0	equ	0x3FEF
 27850                           postinc0	equ	0x3FEE
 27851                           postdec0	equ	0x3FED
 27852                           preinc0	equ	0x3FEC
 27853                           plusw0	equ	0x3FEB
 27854                           fsr0h	equ	0x3FEA
 27855                           fsr0l	equ	0x3FE9
 27856                           wreg	equ	0x3FE8
 27857                           indf1	equ	0x3FE7
 27858                           postinc1	equ	0x3FE6
 27859                           postdec1	equ	0x3FE5
 27860                           preinc1	equ	0x3FE4
 27861                           plusw1	equ	0x3FE3
 27862                           fsr1h	equ	0x3FE2
 27863                           fsr1l	equ	0x3FE1
 27864                           bsr	equ	0x3FE0
 27865                           indf2	equ	0x3FDF
 27866                           postinc2	equ	0x3FDE
 27867                           postdec2	equ	0x3FDD
 27868                           preinc2	equ	0x3FDC
 27869                           plusw2	equ	0x3FDB
 27870                           fsr2h	equ	0x3FDA
 27871                           fsr2l	equ	0x3FD9
 27872                           status	equ	0x3FD8


Data Sizes:
    Strings     287
    Constant    144
    Data        290
    BSS         1361
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      6      55
    BANK0           160      8     141
    BANK1           256      0     227
    BANK2           256      0     252
    BANK3           256      0     195
    BANK4           256      0      67
    BANK5           256      0     218
    BANK6           256      0     255
    BANK7           256      0     255
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_33(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_67(CODE[3]), STR_63(CODE[3]), STR_58(CODE[3]), STR_53(CODE[3]), 
		 -> STR_48(CODE[3]), STR_44(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_67(CODE[3]), STR_63(CODE[3]), STR_58(CODE[3]), STR_53(CODE[3]), 
		 -> STR_48(CODE[3]), STR_44(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 24
		 -> ct(STACK[3]), STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), 
		 -> STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), 
		 -> STR_25(CODE[19]), STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), 
		 -> STR_21(CODE[15]), STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), 
		 -> STR_17(CODE[19]), STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), 
		 -> STR_11(CODE[18]), STR_10(CODE[14]), STR_9(CODE[14]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    l	PTR const unsigned char  size(2) Largest target is 24
		 -> ct(STACK[3]), STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), 
		 -> STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), 
		 -> STR_25(CODE[19]), STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), 
		 -> STR_21(CODE[15]), STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), 
		 -> STR_17(CODE[19]), STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), 
		 -> STR_11(CODE[18]), STR_10(CODE[14]), STR_9(CODE[14]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 227
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> STR_16(CODE[9]), STR_15(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), 
		 -> T(CODE[144]), STR_7(CODE[5]), STR_3(CODE[5]), V(BANK1[227]), 

    a	PTR const unsigned char  size(2) Largest target is 227
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> STR_16(CODE[9]), STR_15(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), 
		 -> T(CODE[144]), STR_7(CODE[5]), STR_3(CODE[5]), V(BANK1[227]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_39(CODE[4]), STR_38(CODE[4]), STR_35(CODE[4]), STR_34(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_39(CODE[4]), STR_38(CODE[4]), STR_35(CODE[4]), STR_34(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_11(CODE[18]), STR_10(CODE[14]), STR_9(CODE[14]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 227
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK1[227]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 227
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK1[227]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S5001_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 227
		 -> D(BANK5[218]), V(BANK1[227]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 227
		 -> D(BANK5[218]), V(BANK1[227]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[18]), 
		 -> STR_10(CODE[14]), STR_9(CODE[14]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[18]), 
		 -> STR_10(CODE[14]), STR_9(CODE[14]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[18]), 
		 -> STR_10(CODE[14]), STR_9(CODE[14]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_16(CODE[9]), STR_15(CODE[12]), 
		 -> D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), STR_7(CODE[5]), 
		 -> STR_3(CODE[5]), V(BANK1[227]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_16(CODE[9]), STR_15(CODE[12]), 
		 -> D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), STR_7(CODE[5]), 
		 -> STR_3(CODE[5]), V(BANK1[227]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_16(CODE[9]), 
		 -> STR_15(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), 
		 -> STR_7(CODE[5]), STR_3(CODE[5]), V(BANK1[227]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    S3998tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_16(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_15(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 227
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK1[227]), 

    strPtr	PTR unsigned char  size(2) Largest target is 227
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK1[227]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1930spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1930spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  323330
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                     _check_adc_scan
                         _check_help
                     _clear_adc_scan
                   _convert_adc_data
                _eaDogM_WriteCommand
                     _get_raw_result
                      _get_vterm_ptr
                       _init_display
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31190
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10929
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (1) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           1     0      1  186219
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   92863
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             24    10     14   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   62814
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   62550
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31159
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (7) _utoa                                                24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (8) ___lomod                                             17     1     16     159
 ---------------------------------------------------------------------------------
 (8) ___lodiv                                             25     9     16     162
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             10     4      6     225
 ---------------------------------------------------------------------------------
 (7) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               8     4      4     137
 ---------------------------------------------------------------------------------
 (8) _floorf                                              14    10      4     338
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       10     6      4     135
 ---------------------------------------------------------------------------------
 (8) ___fltol                                              6     2      4     229
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             12     4      8    1962
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4      45
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             21    13      8    1445
 ---------------------------------------------------------------------------------
 (8) ___flge                                               8     0      8     182
 ---------------------------------------------------------------------------------
 (8) ___fleq                                               8     0      8      90
 ---------------------------------------------------------------------------------
 (8) ___fldiv                                             21    13      8    1099
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     296
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     300
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (7) _atoi                                                11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              3     1      2      68
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     182
                                              0 BANK0      4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     182
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     182
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                              4 BANK0      4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (18) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _check_adc_scan
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_raw_result
   _get_vterm_ptr
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0      FF      19       99.6%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      DA      15       85.2%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      43      13       26.2%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C3      11       76.2%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FC       9       98.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      E3       7       88.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      8      8D       5       88.1%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      6      37       1       87.3%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     681      58        0.0%
DATA                 0      0     681       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Nov 23 04:42:26 2019

                     _SPI1_Exchange8bit 8E4E                __end_of_set_display_info 8EA8  
                                     _C 0200                                       _D 0500  
                                     _P 0094                                       _R 00A6  
                                     _T FE4F                                       _V 0100  
      __end_of_TMR5_SetInterruptHandler 8C36            __end_of_start_switch_handler 8F36  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                __end_of_FVR_Initialize 90A2                             __CFG_LVP$ON 000000  
                                   l171 8FD6                                     l701 8A72  
                                   l581 8A46                                     l835 8E5C  
                                   _GIE 01FE97                                     _abs 85BE  
                                   _pad 71BA                 __size_of_PMD_Initialize 0014  
                       _TMR2_Initialize 8F82                                     prod 003FF3  
                                   tosl 003FFD                                     wreg 003FE8  
                         _INT0_CallBack 8E2C                      _UART1_Transmit_ISR 8A20  
                         __CFG_BBEN$OFF 000000                           _INT1_CallBack 8E0A  
                          __CFG_ZCD$OFF 000000                                    l2011 21E6  
                                  l1028 8796                                    l1331 83E2  
                                  l1252 434A                                    l1244 419A  
                                  l1254 4350                                    l2303 7908  
                                  l2314 6A7A                                    l2307 69A6  
                                  l1604 8EA4                                    l2341 6918  
                                  l1471 7CCE                                    l1703 6490  
                                  l1560 60D2                                    l1650 3756  
                                  l1547 8872                                    l1467 79B4  
                                  l1564 73D8                                    l1556 5F76  
                                  l1486 88A6                                    l2702 62D0  
                                  l1807 3DB4                                    l2626 3CCC  
                                  l1843 123A                                    l2733 85FE  
                                  l2581 31CC                                    l2725 6626  
                                  l1925 539C                                    l2662 2A10  
                                  l2902 7E6A                    _ADCC_StartConversion 8FF0  
                                  l1872 066A                                    l2593 305C  
                                  l1961 45A4                                    l1946 4CCA  
                                  l1787 7216                                    l7003 6ABE  
                                  l2764 5A5A                                    l2828 7098  
                                  l6215 7B30                                    l7031 6BB8  
                                  l7023 6B84                                    l7111 6A78  
                                  l7103 6A42                                    l1887 0B1A  
                                  l6217 7B52                                    l7009 6ADE  
                                  l7201 6CB8                                    l2874 5EBA  
                                  l7051 70EC                                    l7043 70C2  
                                  l6403 309C                                    l6331 2DEA  
                                  l6315 2D46                                    l6243 2A70  
                                  l7061 716C                                    l6413 30C4  
                                  l6325 2DB8                                    l6261 2B2E  
                                  l6253 2AC6                                    l7047 70D4  
                                  l7119 854E                                    l6335 2DF4  
                                  l6255 2AF6                                    l6503 65C8  
                                  l7217 8520                                    l7081 78D2  
                                  l6417 30CA                                    l6329 2DD8  
                                  l6273 2BA0                                    l6249 2AB0  
                                  l7153 68B0                                    l7145 6884  
                                  l7129 6802                                    l2889 7EEE  
                                  l9011 877E                                    l6611 566C  
                                  l6451 31AC                                    l6443 316C  
                                  l6363 2EDC                                    l6339 2E24  
                                  l6267 2B60                                    l7155 68C6  
                                  l7147 68A0                                    l6605 5626  
                                  l7069 71A0                                    l7085 7906  
                                  l7077 7890                                    l7093 6964  
                                  l6445 317C                                    l6429 3128  
                                  l6381 300C                                    l6357 2EC0  
                                  l6285 2C08                                    l6277 2BB6  
                                  l6509 661E                                    l6541 4A38  
                                  l7181 6750                                    l6623 573E  
                                  l6711 3916                                    l6439 3154  
                                  l6359 2ED2                                    l6367 2F0E  
                                  l6279 2BE6                                    l6527 7EDE  
                                  l9111 7F7C                                    l6705 38D0  
                                  l6561 4BEE                                    l7169 667E  
                                  l7193 6C0C                                    l8139 8DBA  
                                  l6651 5B4A                                    l6643 5AC2  
                                  l6811 3C78                                    l6731 39A8  
                                  l6723 398E                                    l7099 69F4  
                                  l6379 2FE6                                    l6555 4B56  
                                  l8219 88B0                                    l6485 85EE  
                                  l6805 3C48                                    l6741 3A38  
                                  l6717 3954                                    l6709 38E6  
                                  l6397 307E                                    l6389 3040  
                                  l6565 4C5C                                    l6557 4BA6  
                                  l6751 3A80                                    l6399 3090  
                                  l6583 7E5A                                    l8271 61CE  
                                  l6817 3CA0                                    l6841 2286  
                                  l8281 6230                                    l8265 618C  
                                  l8257 6120                                    l6659 5BF6  
                                  l6819 3CB0                                    l6771 3B22  
                                  l6691 3838                                    l6923 2804  
                                  l6843 228C                                    l6835 2246  
                                  l6499 65C4                                    l8267 619A  
                                  l9173 7F3C                                    l6765 3B06  
                                  l6757 3AD4                                    l6749 3A6E  
                                  l6685 37F2                                    l6933 2846  
                                  l6861 235A                                    l6853 2314  
                                  l6845 22BC                                    l8277 61FC  
                                  l8269 61B0                                    l9167 7F2C  
                                  l7807 5A4A                                    l6599 55D2  
                                  l6775 3B48                                    l6759 3AD8  
                                  l6679 37B2                                    l6943 2890  
                                  l6871 23AC                                    l6863 238A  
                                  l7823 5D2C                                    l8279 621A  
                                  l9433 6FAE                                    l6785 3B92  
                                  l6689 3808                                    l6961 2950  
                                  l6929 2820                                    l9601 022C  
                                  l7825 5D98                                    l8289 624E  
                                  l7771 580A                                    l9515 3DEE  
                                  l9507 3DA4                                    l6699 3890  
                                  l6947 2896                                    l6859 2354  
                                  l8299 62B0                                    l7781 58A0  
                                  l7773 582C                                    l9445 7BBC  
                                  l9461 7220                                    l6789 3B98  
                                  l6957 290A                                    l9701 077A  
                                  l9605 0258                                    l8805 3488  
                                  l8743 8888                                    l7791 5908  
                                  l9455 71E6                                    l9519 3E0C  
                                  l6799 3C0C                                    l6975 29BE  
                                  l6967 297A                                    l9711 0926  
                                  l9631 0396                                    l9615 02FC  
                                  l9623 032A                                    l8823 3724  
                                  l8831 3736                                    l8665 8696  
                                  l8905 6E1A                                    l7793 5946  
                                  l9449 7BFA                                    l9465 725C  
                                  l9481 7D86                                    l9553 410C  
                                  l9529 401E                                    l6977 29D8  
                                  l9641 04D2                                    l8817 365C  
                                  l8809 3550                                    l7787 58CC  
                                  l9459 720E                                    l9483 7DB2  
                                  l9475 76FC                                    l9811 0FD6  
                                  l9635 0406                                    l8669 86C0  
                                  l7797 59AE                                    l7789 58E4  
                                  l9469 72A6                                    l9549 40D0  
                                  l6997 6AA8                                    l9813 0FF0  
                                  l9733 0B12                                    l9725 0A48  
                                  l9653 0554                                    l9637 0470  
                                  l9823 1092                                    l9735 0B34  
                                  l9567 00AC                                    l9903 54F4  
                                  l8783 3206                                    l8855 633E  
                                  l8847 6312                                    l8881 6D38  
                                  l9833 10E2                                    l9761 0CBA  
                                  l9673 05F6                                    l9665 0594  
                                  l9657 057C                                    l9921 4CBA  
                                  l8793 3350                                    l8963 8A42  
                                  l8883 6D3E                                    l8891 6D5A  
                                  l9691 06B8                                    l9675 0602  
                                  l9659 058E                                    l9579 00F0  
                                  l9587 0146                                    l9907 5530  
                                  l8859 6356                                    l8885 6D44  
                                  l8893 6D86                                    l9749 0C32  
                                  l9597 01EA                                    l8797 3456  
                                  l8887 6D52                                    l8879 6D28  
                                  l9695 06F0                                    l9599 0216  
                                  STR_1 FF64                                    STR_2 FF95  
                                  l8985 8A6E                                    l9849 119A  
                                  l9769 0D24                                    l9777 0D90  
                                  l9785 0EA2                                    l9929 4D16  
                                  l9961 4594                                    STR_3 FFD1  
                                  STR_4 FF53                                    l8899 6DBE  
                                  l9939 4F0C                                    STR_5 FF75  
                                  STR_6 FF95                                    l9797 0F3A  
                                  l9893 543E                                    l9885 53D2  
                                  l9869 531E                                    l9981 466A  
                                  l9973 460A                                    STR_7 FFD1  
                                  STR_8 FF42                                    l9967 45CE  
                                  STR_9 FFA4                                    l9889 540E  
                                  l9899 54C8                                    l9997 4760  
                                  _LATA 003FBA                                    _LATB 003FBB  
                                  _LATC 003FBC                                    _LATD 003FBD  
                                  _LATE 003FBE                                    _LATF 003FBF  
                                  u5000 302E                                    _T2PR 003FAB  
                                  u5100 3118                                    u5040 30A2  
                                  u5105 3108                                    u5130 3138  
                                  u5060 30BC                                    u5300 6618  
                                  u5230 85D2                                    u6200 2964  
                                  u5240 6548                                    u6105 27BE  
                                  u5410 4AFC                                    u5330 7E9C  
                                  u5170 8986                                    _T6PR 003F93  
                                  u4700 7B80                                    u6140 2888  
                                  u5340 7E9E                                    u5180 8988  
                                  _PMD0 0039C0                                    u5245 653E  
                                  _PMD1 0039C1                                    u5510 89E6  
                                  u6070 239A                                    u5430 4BD4  
                                  _PMD2 0039C2                                    u5415 4AF2  
                                  _PMD3 0039C3                                    u5520 89E8  
                                  u6320 7118                                    u5360 49D0  
                                  _PMD4 0039C4                                    _PMD5 0039C5  
                                  u5610 5776                                    u6250 6B0A  
                                  u5290 6616                                    u5370 4A1C  
                                  u4730 89B6                                    _PMD6 0039C6  
                                  u4707 7B72                                    u5435 4BCA  
                                  _PMD7 0039C7                                    u5540 55CC  
                                  u5700 5B76                                    u6340 718C  
                                  u6180 28E4                                    u4900 2E3C  
                                  u4740 89B8                                    u5460 870E  
                                  u6085 252E                                    u5285 65F8  
                                  u5365 49C6                                    u5630 57C8  
                                  u6270 6BA4                                    u6190 291E  
                                  u5470 8710                                    u6095 25F6  
                                  u5560 5622                                    u5720 5C2E  
                                  u6440 854A                                    u4840 2D6C  
                                  u6520 68CE                                    u5480 7E18  
                                  u6185 28D4                                    u4850 2D8C  
                                  u6450 67E2                                    u6610 6C06  
                                  u5490 7E1A                                    u5571 562C  
                                  u4851 2D86                                    u5395 4A56  
                                  u5580 5666                                    u5740 5C80  
                                  u5660 5ABC                                    u6380 7902  
                                  u6540 68F8                                    u6460 67F6  
                                  u5396 4A5C                                    u6620 6C38  
                                  u5397 4A6A                                    u5590 5698  
                                  u6470 6830                                    u6455 67D8  
                                  u6551 663E                                    u5680 5B12  
                                  u5920 3B8A                                    u4960 2F04  
                                  u6560 6678                                    u6640 6CF0  
                                  u5690 5B44                                    u4890 2E1C  
                                  u6570 66AA                                    u8315 874A  
                                  u6475 6826                                    u6660 84FC  
                                  u4868 2D8E                                    u4965 2EF4  
                                  u8430 813A                                    u6670 851C  
                                  u6590 6788                                    u4895 2E0C  
                                  u9400 3D08                                    u5960 3BE6  
                                  u5880 3B00                                    u5970 3C20  
                                  u9500 408C                                    u9420 3D78  
                                  u5980 3C5C                                    u7820 5DC6  
                                  u8604 3242                                    u5965 3BD6  
                                  u8605 323C                                    u7750 589C  
                                  u9270 6FA2                                    u9510 4090  
                                  u9350 7776                                    u8390 6244  
                                  u8455 816E                                    u8456 8170  
                                  u8448 813C                                    u9440 3D8A  
                                  u9600 0194                                    u8624 3470  
                                  u8625 346A                                    u7770 59F4  
                                  u9290 701E                                    u9530 40A6  
                                  u9610 0196                                    u7827 5DB8  
                                  u7780 59F6                                    u9460 3DDA  
                                  u7860 5E60                                    u8644 356A  
                                  u8564 31F0                                    u9357 7768  
                                  u8645 3564                                    u8565 31EA  
                                  u9470 4032                                    u9390 3D06  
                                  u7870 5E8E                                    u8670 3594  
                                  u9720 0562                                    u9640 02A6  
                                  u8664 358C                                    u8584 3220  
                                  u8680 62F0                                    u9481 4062  
                                  u7865 5E5A                                    u8665 3586  
                                  u8585 321A                                    u9490 4078  
                                  u9650 02A8                                    u9570 00DA  
                                  _PLLR 01CEE0                                    u9491 4076  
                                  u7867 5E4C                                    u7877 5E80  
                                  u9750 05C6                                    u9690 050E  
                                  u9860 0A18                                    u9790 0648  
                                  u9960 0EE4                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR 8ACE  
                         __CFG_FCMEN$ON 000000                                    _dbuf 02AC  
                                  _atoi 57F0                                    _ctoa 7D68  
                                  _main 4156                                    _dtoa 3CD6  
                                  _nanf 825A                                    _seed 009E  
                                  _prec 001D                                    _nout 0019  
                                  fsr0h 003FEA                                    fsr1h 003FE2  
                                  indf0 003FEF                                    fsr2h 003FDA  
                                  fsr0l 003FE9                                    indf1 003FE7  
                                  indf2 003FDF                                    fsr1l 003FE1  
                                  fsr2l 003FD9                                    _stoa 52B2  
                                  btemp 0032                                    _utoa 4C86  
                                  _xtoa 4560                  __end_of_check_adc_scan 909A  
                         ___fpclassifyf 649A                                    prodh 003FF4  
                                  prodl 003FF3                                    start 00AE  
                       _timer5ReloadVal 0023               __end_of_SPI1_Exchange8bit 8E6C  
                         __CFG_CSWEN$ON 000000                       _UART1_rx_vect_isr 8D28  
                          ___param_bank 000000                      ?_UART1_rx_vect_isr 0052  
                      __end_of_INT0_ISR 903E                        __end_of_INT1_ISR 881A  
        __size_of_OSCILLATOR_Initialize 0016                __end_of_ringBufS_put_dma 79BC  
         __end_of_OSCILLATOR_Initialize 8FDC                                   l10021 48D0  
                                 l10005 47E6                                   l10103 17E0  
                                 l10131 1A7A                                   l10107 1834  
                                 l10043 1326                                   l10045 1360  
                                 l10215 216E                                   l10151 1BDA  
                                 l10127 1A46                                   l10119 198E  
                                 l10047 1376                                   l10209 2114  
                                 l10161 1C88                                   l10065 14A8  
                                 l10225 2192                                   l10219 2172  
                                 l10171 1DAA                                   l10067 14E2  
                                 l10331 7ABC                                   l10181 1E60  
                                 l10085 165C                                   l10069 14F8  
                                 l10253 511C                                   l10095 16F4  
                                 l10247 505E                                   l10281 7A26  
                                 l10601 43B6                                   l10195 1FDC  
                                 l10267 5234                                   l10259 5186  
                                 l10365 72F0                                   l10279 79E6  
                                 l10631 454E                                   l10543 41A2  
                                 l10481 5F46                                   l10609 43DA  
                                 l10545 41B4                                   l10537 417C  
                                 l10619 451A                                   l10539 4184  
                                 l10493 606E                                   l10587 4354  
                                 l10589 4382                                   PRLOCK 0039EF  
                       __end_of___aodiv 57F0                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 31D6  
                                 _ADCLK 003EFF                         __end_of___aomod 5CA4  
                                 _ADPCH 003EF1                         __end_of___fldiv 3CD6  
                                 _ADREF 003EFD                         __end_of___awdiv 6BD2  
                       __end_of___flneg 8578                                   STR_10 FFA4  
                                 STR_11 FF30                                   STR_20 FFBE  
                                 STR_12 FFFB                                   STR_13 FFF8  
                                 STR_21 FF86                                   STR_22 FF86  
                                 STR_23 FF86                                   STR_15 FFB2  
                                 STR_16 FFC8                                   STR_24 FEDF  
                                 STR_33 FF09                                   STR_17 FF0A  
                         __CFG_WDTE$OFF 000000                                   STR_18 FF0A  
                                 STR_42 FFE9                                   STR_34 FFD6  
                                 STR_26 FF1D                                   STR_51 FFEC  
                                 STR_35 FFDE                                   STR_19 FFBE  
                                 STR_27 FEF7                                   STR_44 FFE9  
                       __end_of___awmod 71BA                                   STR_53 FFEC  
                                 STR_61 FFF5                                   STR_46 FFEF  
                                 STR_38 FFDA                                   STR_63 FFF5  
                                 STR_39 FFE2                                   STR_48 FFEF  
                                 STR_56 FFF2                                   _ADRPT 003EEC  
                                 STR_65 FFE6                                   STR_58 FFF2  
                                 STR_67 FFE6                         __end_of___flmul 2A1A  
                       __end_of___flsub 85BE                         __end_of___fltol 6922  
                                 u10020 10B8                                   u10040 116E  
                                 u10120 5434                                   u10050 1170  
                                 u10130 547A                                   u10211 4F4E  
                                 u10220 4F64                                   u10300 46B6  
                                 u10221 4F62                                   u10230 4F78  
                                 u10310 46B8                                   u10160 5556  
                                 u10240 4F7C                                   u10400 485C  
                                 u10137 546C                                   u10410 4860  
                                 u10330 4716                                   u10180 4CA0  
                                 u10340 4718                                   u10260 457A  
                                 u10510 1540                                   u10360 47E2  
                                 u10600 18BC                                   u10520 1542  
                                 u10370 4802                                   u10290 4662  
                                 u10530 1568                         __end_of___lodiv 67B0  
                                 u10700 1EB4                                   u10460 13BE  
                                 u10381 4832                                   u10365 47C4  
                                 u10390 4848                                   u10630 1B34  
                                 u10470 13C0                                   u10391 4846  
                                 u10720 2064                                   u10640 1B36  
                                 u10480 13E6                                   u10810 7A9C  
                                 _U1P1H 003DED                                   u10580 1748  
                                 u10900 60BE                                   _U1P2H 003DEF  
                                 u10910 60C0                                   _U1P1L 003DEC  
                                 _U1P3H 003DF1                                   _T2CON 003FAC  
                                 _U1P2L 003DEE                                   _U1P3L 003DF0  
                                 u10780 52A8                                   _U2P1L 003DD4  
                                 _U2P2L 003DD6                                   _U2P3L 003DD8  
                                 _T5CLK 003F9D                         __end_of___lomod 6D12  
                                 _T2HLT 003FAD                                   _T5CON 003F9A  
                                 _T6CON 003F94                          __CFG_DEBUG$OFF 000000  
                                 _T6HLT 003F95              _ADCC_ADTI_InterruptHandler 0001  
                                 _T2TMR 003FAA                                   _U1UIR 003DF8  
                                 _T2RST 003FAF                                   _U1RXB 003DE8  
                                 _U2UIR 003DE0                                   _U1TXB 003DEA  
                                 _U2RXB 003DD0                                   _U2TXB 003DD2  
                                 _T6TMR 003F92                                   _T6RST 003F97  
                   ??_UART1_rx_vect_isr 0057                                   _ISRPR 0039F1  
                                 _OSCEN 0039DD                                   _TMR5H 003F99  
                                 _TMR5L 003F98                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR 90B4  
               __size_of_clear_adc_scan 0006       __size_of_TMR6_SetInterruptHandler 0028  
                     _UART1_tx_vect_isr 8D00                           __CFG_WRTB$OFF 000000  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
                      __end_of_TMR5_ISR 83D8                            _DMA1CON0bits 003BFC  
                      __end_of_TMR6_ISR 8F6A                            _DMA1CON1bits 003BFD  
                                 _flags 001F                                   _fputc 6F7E  
            __size_of_send_lcd_cmd_long 0028                         __end_of_isalpha 871A  
                                 _fputs 7BAC                         __end_of_isdigit 89F2  
                    __CFG_MCLRE$EXTMCLR 000000                      ?_UART1_tx_vect_isr 0052  
                                 _srand 88FA                                   _width 001B  
                                 _putch 8F36                         __end_of_islower 8992  
                       __end_of_isspace 8530                _INT1_SetInterruptHandler 8C36  
                       __end_of_isupper 89C2                                   pclath 003FFA  
                                 tablat 003FF5                                   ltemp0 0032  
                                 ltemp1 0036                                   ltemp2 003A  
              __size_of_DMA1_Initialize 006A                                   plusw1 003FE3  
                                 plusw2 003FDB                                   ttemp0 0032  
                                 ttemp1 0035                                   ttemp2 0038  
                                 ttemp3 003B                                   ttemp5 0033  
                                 ttemp6 0036                                   ttemp7 003A  
                                 status 003FD8     __end_of_UART1_SetRxInterruptHandler 8BE6  
           _UART1_SetRxInterruptHandler 8BBE                                   wtemp0 0032  
                                 wtemp1 0034                                   wtemp2 0036  
                                 wtemp3 0038                                   wtemp4 003A  
                                 wtemp5 003C                                   wtemp8 0033  
                       __end_of_sprintf 74E6                         __end_of_tolower 7EF8  
                       __end_of_strncmp 5EC4                         __end_of_toupper 7E74  
                   ??_UART1_tx_vect_isr 0057               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr 8D4E                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize 864A                   __end_of_ringBufS_init 8B46  
                       __initialization 7788                       _UART2_rx_vect_isr 8D78  
                          __end_of_atoi 5A64                            __end_of_ctoa 7DF0  
                          __end_of_main 4560                            __end_of_dtoa 4156  
                          __end_of_nanf 82BC                            __end_of_stoa 5570  
                          __end_of_utoa 4FC6                            __end_of_xtoa 491A  
                        __CFG_SAFEN$OFF 000000                      ?_UART2_rx_vect_isr 0052  
               __end_of_TMR2_Initialize 8F9A                __size_of_DMA2_Initialize 005A  
              _TMR5_SetInterruptHandler 8C0E                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E    __size_of_UART1_SetTxInterruptHandler 0028  
                   ??_UART2_rx_vect_isr 0057               __end_of_UART1_tx_vect_isr 8D26  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize 8A78  
                       _PWM8_Initialize 8FB0                        _UART1_Initialize 81F6  
                     _UART2_tx_vect_isr 8D50                      _UART2_Transmit_ISR 8A4C  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan 8192  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue 871A  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0052                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _U1BRGH 003DF6                                  _U1FIFO 003DF7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                _RB6PPS 003A0E                                  i1l1045 83CA  
                  _start_switch_handler 8F1C                                  _RC5PPS 003A15  
                                _ODCONA 003A42                                  _ODCONB 003A52  
                                _ODCONC 003A62                                  _RC6PPS 003A16  
                                _ODCOND 003A72                                  _ODCONE 003A82  
                                _ODCONF 003A92                          __CFG_WDTCCS$SC 000000  
                                _FVRCON 003EC1                        _mode_lamp_bright 9020  
                                _SCANPR 0039F7                                  u417_48 8E3A  
                                _IVTADH 00389E                                  _IVTADL 00389D  
                                _IVTADU 00389F            __size_of_eaDogM_WriteCommand 000E  
                                _OSCFRQ 0039DF                                  u904_44 7F5C  
                                u904_45 7F56                                  u871_28 6D2E  
                                u849_20 8CDE                                  u849_26 8CE0  
                                u874_20 6D4E                                  u881_28 8E18  
                                u874_21 6D48                                  u892_28 8DD2  
                                u879_20 6E34                                  u879_26 6E36  
                                u889_48 8DF6                        __end_of___xxtofl 62DA  
 __end_of_ADCC_DischargeSampleCapacitor 9082  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor 907A                __end_of_send_lcd_cmd_dma 84DE  
                   ??_UART2_tx_vect_isr 0057               __end_of_UART2_rx_vect_isr 8D9E  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize 904E  
                      _UART2_Initialize 831E                                  _WaitMs 888E  
                       _conv_raw_result 31D6                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 6922  
                                ___fleq 784E                       _ADCC_ThresholdISR 80C4  
                        __CFG_STVREN$ON 000000                          _ringBufS_flush 7C44  
                                _efgtoa 0000                                  _floorf 491A  
                    ?_ADCC_ThresholdISR 0052                                  _memset 4FC6  
                  __size_of_help_button 0038                                  clear_0 77D4  
                                clear_1 77E8                                  clear_2 77FA  
                                clear_3 7806                                  clear_4 7812  
                                clear_5 781E                                  clear_6 782A  
                                clear_7 7836                                  _printf 82BC  
                    _eaDogM_WriteString 7A64                                  _strcpy 76B4  
                             ?_ADCC_ISR 0052                                  _strlen 7B0A  
                    __size_of_TimerDone 0024                         _ADCC_Initialize 805A  
                        _PMD_Initialize 8FDC               __end_of_UART2_tx_vect_isr 8D76  
                                lltemp0 0032                                  lltemp1 003A  
                                lltemp2 0042                                  lltemp3 004A  
                   ??_ADCC_ThresholdISR 0052                  __end_of_start_adc_scan 81F6  
                          __mediumconst FE4E                                  preinc2 003FDC  
                                tblptrh 003FF7                                  tblptrl 003FF6  
                                tblptru 003FF8                        __end_of_wdtdelay 8432  
                      __end_of_vfprintf 7A64                              _StartTimer 881A  
         __size_of_INTERRUPT_Initialize 0066                 __end_of_TMR5_Initialize 8690  
                     _SYSTEM_Initialize 8604                              __accesstop 0060  
               __end_of__initialization 7848                               ?_INT0_ISR 0052  
                             ?_INT1_ISR 0052                    __end_of_display_help 9092  
                  __end_of_display_info 908A               __end_of_CLKREF_Initialize 9058  
                         ___rparam_used 000001              __size_of_UART1_rx_vect_isr 0026  
                       _TMR5_WriteTimer 875C                   _set_temp_display_help 9002  
             __end_of_ADCC_ThresholdISR 812C                  __end_of_ringBufS_flush 7CD6  
                        __pcstackCOMRAM 0052                              ___inthi_sp 1000  
                            ___intlo_sp 1800                            __pidataBANK0 879C  
                          __pidataBANK1 75D0                               ?_TMR5_ISR 0052  
                             ?_TMR6_ISR 0052                          ivt0x8_undefint 00AC  
                         __end_of_fputc 70A2                           __end_of_fputs 7C44  
                         __end_of_srand 892E                   __end_of_TMR5_CallBack 8DE6  
                         __end_of_putch 8F50                 __end_of_PWM8_Initialize 8FC6  
               __end_of_TMR6_Initialize 8AA2                       _adc_int_t_handler 7EF8  
                __end_of_PMD_Initialize 8FF0                              ??_ADCC_ISR 0052  
                 __end_of_TMR6_CallBack 8E0A             __size_of_EXT_INT_Initialize 0034  
            __size_of_UART1_tx_vect_isr 0026                           _DMA1_DMAA_ISR 9064  
                        _clear_adc_scan 90A2                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 0010               __end_of_SYSTEM_Initialize 864A  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
                            __pbssBANK0 0060                              __pbssBANK2 0200  
                            __pbssBANK3 0300                              __pbssBANK4 0400  
                            __pbssBANK5 0500                              __pbssBANK6 0600  
                            __pbssBANK7 0700                              _check_help 5EC4  
               __end_of_conv_raw_result 375C                   _INT0_InterruptHandler 0016  
                            ??_INT0_ISR 0052                              ??_INT1_ISR 00E5  
                     __end_of_TimerDone 8DC2                        _DMA1_DMADCNT_ISR 9058  
            __size_of_UART2_rx_vect_isr 0026                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01C0                   __end_of_wait_lcd_done 8F00  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler 8C0E  
               __end_of_ADCC_Initialize 80C4                              ??_TMR5_ISR 00E9  
             __end_of_adc_int_t_handler 7F76                              ??_TMR6_ISR 0057  
                               _ADFLTRH 003EE7                                 _ADFLTRL 003EE6  
                               _DMA1DSA 003BF0                                 _DMA2DSA 003BD0  
                               _DMA1DSZ 003BEE                                 _DMA2DSZ 003BCE  
                               _DMA1SSA 003BF9                                 _DMA2SSA 003BD9  
  __end_of_ADCC_SetADTIInterruptHandler 8CAE   __size_of_ADCC_SetADTIInterruptHandler 0028  
          _ADCC_SetADTIInterruptHandler 8C86                                 _DMA1SSZ 003BF7  
                               _DMA2SSZ 003BD7                                 _ADSTPTH 003EE5  
                               _ADSTPTL 003EE4                       _UART1_Receive_ISR 8EA8  
                               _CLKRCLK 003CE6                                 _CLKRCON 003CE5  
                __end_of_clear_adc_scan 90A8                          ?_DMA1_DMAA_ISR 0052  
                      _DMA1_DMASCNT_ISR 9040                                 _U1ERRIE 003DFA  
                    __size_of_set_vterm 001C                                 _U1ERRIR 003DF9  
                               _U2ERRIE 003DE2                                 _U2ERRIR 003DE1  
                               _INT0PPS 003AC0                     __CFG_PWRTS$PWRT_OFF 000000  
                               _INT1PPS 003AC1                            ?_Default_ISR 0052  
            __size_of_UART2_tx_vect_isr 0026                                 _U1RXPPS 003AE5  
                               _U2RXPPS 003AE8                                 _OSCCON1 0039D9  
                               _OSCCON3 0039DB                                 _IVTLOCK 003FD4  
                    __size_of_vfpfcnvrt 0FAC                                 _SPI1CLK 003D1C  
                               _SPI1RXB 003D10                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _PWM8DCH 003F61  
                               _PWM8DCL 003F60                                 _PWM8CON 003F62  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _SLRCOND 003A73  
                               _SLRCONE 003A83                                 _SLRCONF 003A93  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer 879C  
               __size_of_switch_handler 013E       __size_of_INT0_SetInterruptHandler 0028  
            __size_of_CLKREF_Initialize 000A                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 0068  
                         _mode_lamp_dim 8F6A                                 __Lparam 0000  
              __end_of_UART1_Initialize 825A                         __size_of_WaitMs 0036  
                       __size_of___flge 0162                         __size_of___fleq 00C4  
                               ___aodiv 5570                                 ___fladd 2A1A  
                               ___aomod 5A64                                 ___fldiv 375C  
                               ___awdiv 6A84                                 ___flneg 8530  
                               ___awmod 70A2                                 ___flmul 21F0  
                               ___flsub 8578                                 ___fltol 67B0  
                               ___lodiv 6630                                 ___lomod 6BD2  
             __end_of_UART1_Receive_ISR 8EC6                         __size_of_efgtoa 1244  
                       __size_of_floorf 036C                    __end_of_init_display 75D0  
                               __pcinit 7788                __end_of_mode_lamp_bright 902E  
                       __size_of_memset 02EC                __size_of_adc_int_handler 0002  
                   _eaDogM_WriteCommand 9012                                 __ramtop 2000  
           __size_of_UART1_Transmit_ISR 002C                                 __ptext0 4156  
                               __ptext1 8F1C                                 __ptext2 8192  
                               __ptext3 8FF0                                 __ptext4 907A  
                               __ptext5 88FA                                 __ptext6 74E6  
                               __ptext7 8ACE                                 __ptext8 8AF6  
                               __ptext9 8E4E                       _UART2_Receive_ISR 8EC6  
                       __size_of_printf 0062                         __CFG_WRTAPP$OFF 000000  
                       __size_of_strcpy 00D4                         __size_of_strlen 00A2  
                 _OSCILLATOR_Initialize 8FC6                            __size_of_abs 0046  
                               us564999 57DA                                 us660999 679A  
                          __size_of_pad 0114                                 _isalpha 86D6  
                               us575999 5C92                                 _isdigit 89C2  
                               us665999 6D02                                 us938999 3CF0  
                               _mode_sw 0025                       __end_of_lp_filter 649A  
                               _islower 8962                                 _isspace 84DE  
                       __CFG_WRTSAF$OFF 000000                               _T5CONbits 003F9A  
              __end_of_UART2_Initialize 837C                                 _isupper 8992  
            __size_of_SYSTEM_Initialize 0046                                 _sprintf 73DC  
                               _tolower 7E74                   __size_of_display_help 0008  
                               _utctime 008C                   __size_of_display_info 0008  
                               _strncmp 5CA4                                 _toupper 7DF0  
                  end_of_initialization 7848               __size_of_convert_adc_data 007A  
   __end_of_UART1_SetTxInterruptHandler 8BBE             _UART1_SetTxInterruptHandler 8B96  
   __end_of_UART2_SetRxInterruptHandler 8B96             _UART2_SetRxInterruptHandler 8B6E  
                     __end_of_set_vterm 8F1C                       __end_of_vfpfcnvrt 21F0  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 007E  
                   __size_of_StartTimer 003C                       __end_of_start_lcd 90B4  
             __end_of_UART2_Receive_ISR 8EE4                          wdtdelay@dcount 0090  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 0058  
                 _INT1_InterruptHandler 0013                               _PORTBbits 003FCB  
                             _PORTFbits 003FCF                _TMR6_SetInterruptHandler 8BE6  
                          _display_help 908A                   _TMR5_InterruptHandler 0098  
                          _display_info 9082    __size_of_UART2_SetTxInterruptHandler 0028  
                     __size_of_ADCC_ISR 002A     __end_of_ADCC_SetADIInterruptHandler 8CD6  
           _ADCC_SetADIInterruptHandler 8CAE                              _update_lcd 72CE  
                __size_of_ringBufS_init 0028                        __CFG_FEXTOSC$ECH 000000  
                       _DMA1_Initialize 7FF0                         _SPI1_Initialize 8F9A  
                 __end_of_get_vterm_ptr 8A20                       __size_of_INT0_ISR 000E  
                     __size_of_INT1_ISR 003E                          __end_of_WaitMs 88C4  
          __end_of_INTERRUPT_Initialize 8192                              _vterm_dump 6E50  
                        __end_of___flge 6A84                          __end_of___fleq 7912  
  __end_of_INT0_DefaultInterruptHandler 90BE   __size_of_INT0_DefaultInterruptHandler 0002  
          _INT0_DefaultInterruptHandler 90BC              __size_of_UART1_Receive_ISR 001E  
                       _DMA2_Initialize 8432                          __end_of_efgtoa 1244  
                     __size_of_TMR5_ISR 005C                       __size_of_TMR6_ISR 001A  
                   __size_of_check_help 0212                          __end_of_floorf 4C86  
           __size_of_UART2_Transmit_ISR 002C                              floorf@F524 0084  
                        __end_of_memset 52B2                          __end_of_printf 831E  
              __end_of_DMA1_DMADCNT_ISR 9062             __size_of_PWM8_LoadDutyValue 0042  
                 __end_of_INT0_CallBack 8E4E                          __end_of_strcpy 7788  
                        __end_of_strlen 7BAC                     start_initialization 7788  
  __end_of_TMR5_DefaultInterruptHandler 8CFE   __size_of_TMR5_DefaultInterruptHandler 0028  
          _TMR5_DefaultInterruptHandler 8CD6         __size_of_PIN_MANAGER_Initialize 0092  
                           __end_of_abs 8604                   __end_of_INT1_CallBack 8E2C  
             __size_of_set_display_info 001E                             __end_of_pad 72CE  
                  __size_of_Default_ISR 0006                    __end_of_send_lcd_cmd 8B1E  
                        _switch_handler 6D12           __size_of_ADCC_StartConversion 0012  
                            ivt0x8_base 0008                           _uart1RxBuffer 0600  
                 __end_of___fpclassifyf 6630                           _uart2RxBuffer 0700  
                         _uart1TxBuffer 0340                __end_of_DMA1_DMASCNT_ISR 904E  
                         _uart2TxBuffer 0300                          _DMA1_DMAOR_ISR 9070  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone 8D9E  
                         _ringBufS_init 8B1E                             __pdataBANK0 00A6  
                           __pdataBANK1 0100              __size_of_UART2_Receive_ISR 001E  
            __end_of_EXT_INT_Initialize 8962                     __end_of_help_button 888E  
       __end_of_eaDogM_WriteStringAtPos 88FA                 __end_of_DMA1_Initialize 805A  
                           __pbssCOMRAM 0001        __end_of_INT0_SetInterruptHandler 8C86  
                         __pcstackBANK0 00E5                __size_of_TMR2_Initialize 0018  
                __end_of_switch_handler 6E50                       __size_of___xxtofl 0204  
               __end_of_SPI1_Initialize 8FB0                _UART1_RxInterruptHandler 000A  
              _UART2_TxInterruptHandler 000D                               __end_of_T FEDF  
                      _convert_adc_data 7F76               __size_of_ringBufS_put_dma 00AA  
                          _init_display 74E6                  __end_of_DMA1_DMAOR_ISR 907A  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 009B  
                __size_of_TMR6_CallBack 0024                 __end_of_DMA2_Initialize 848C  
                _PIN_MANAGER_Initialize 7CD6                    __end_of_wait_lcd_set 90AE  
                         __pmediumconst FE4E                               __ptext100 8F9A  
                             __ptext101 8FB0                               __ptext110 8432  
                             __ptext102 8FDC                               __ptext111 7FF0  
                             __ptext103 7CD6                               __ptext120 837C  
                             __ptext112 904E                               __ptext104 8FC6  
                             __ptext121 875C                               __ptext113 805A  
                             __ptext105 812C                               __ptext130 90BE  
                             __ptext122 8DC2                               __ptext114 8C86  
                             __ptext106 909A                               __ptext131 90C0  
                             __ptext123 8CD6                               __ptext115 8CAE  
                             __ptext107 892E                               __ptext140 8EC6  
                             __ptext132 80C4                               __ptext124 9030  
                             __ptext116 87DC                               __ptext108 8C36  
                             __ptext141 8F50                               __ptext133 8D00  
                             __ptext125 8E2C                               __ptext117 8E0A  
                             __ptext109 8C5E                               __ptext142 8DE6  
                             __ptext134 8A20                               __ptext126 90BC  
                             __ptext118 90BA                               __ptext143 8690  
                             __ptext135 8D28                               __ptext127 90B4  
                             __ptext119 6D12                               __ptext144 9040  
                             __ptext136 8EA8                               __ptext128 8AA4  
                             __ptext145 9058                               __ptext137 8D50  
                             __ptext129 7EF8                               __ptext146 9064  
                             __ptext138 8A4C                               __ptext147 9070  
                             __ptext139 8D78                               __ptext148 0000  
                    __end_of_StartTimer 8856                       __size_of_wdtdelay 005A  
                     __size_of_vfprintf 00A8                                _ADCC_ISR 8AA4  
                __CFG_BBSIZE$BBSIZE_512 000000                                _DMA1CON0 003BFC  
                              _DMA1CON1 003BFD                                _DMA1AIRQ 003BFE  
                              _DMA2CON0 003BDC                                _DMA2CON1 003BDD  
                              _DMA2AIRQ 003BDE                                _DMA1SIRQ 003BFF  
                              _DMA2SIRQ 003BDF                 __size_of_get_raw_result 001E  
                __size_of_wait_lcd_done 001C                          __size_of_fputc 0124  
                              _T2CLKCON 003FAE                          __size_of_fputs 0098  
                             _lp_filter 62DA                          __size_of_srand 0034  
                        __size_of_putch 001A                    _INTERRUPT_Initialize 812C  
                              _T6CLKCON 003F96           __size_of_start_switch_handler 001A  
                       ?_DMA1_DMAOR_ISR 0052                                _INT0_ISR 9030  
                              _INT1_ISR 87DC                                _LATCbits 003FBC  
                              _LATDbits 003FBD                                _LATEbits 003FBE  
     __size_of_INT1_SetInterruptHandler 0028                                _IPR1bits 003981  
                              _IPR2bits 003982                                _PIE1bits 003991  
                              _IPR3bits 003983                                _PIE2bits 003992  
                              _IPR5bits 003985                                _PIE3bits 003993  
                             _tickCount 0060                                _IPR6bits 003986  
                              _PIE5bits 003995                                _IPR8bits 003988  
                              _PIE6bits 003996                                _IPR9bits 003989  
                              _PIE8bits 003998                     __CFG_BORV$VBOR_2P45 000000  
                              _PIE9bits 003999                               _ring_buf1 0380  
                             _ring_buf2 0400                                _PIR1bits 0039A1  
                              _PIR2bits 0039A2                                _SPI1BAUD 003D19  
                              i2u445_48 8ABA                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                                _PIR5bits 0039A5  
                              _PIR8bits 0039A8                                i2u911_48 8D3A  
                              _PIR9bits 0039A9                                i2u913_48 8D62  
                              i2u915_48 8D8A                                i2u907_48 80F8  
                              i2u907_49 810C                                i2u909_48 8D12  
              __size_of_TMR5_Initialize 0046                               _set_vterm 8F00  
                   __size_of_update_lcd 010E                             _help_button 8856  
            __end_of_UART1_Transmit_ISR 8A4C                                _TMR5_ISR 837C  
                              _TMR6_ISR 8F50                               _port_data 00D5  
                             _vfpfcnvrt 1244                            _SPI1INTFbits 003D1A  
                         _TMR5_CallBack 8DC2                              _ADCON0bits 003EF8  
                    __end_of_check_help 60D6                               _start_lcd 90AE  
               __size_of_FVR_Initialize 0008               __size_of_send_lcd_cmd_dma 0052  
                         _TMR6_CallBack 8DE6                   __size_of_send_lcd_cmd 0028  
     __size_of_TMR5_SetInterruptHandler 0028                        _set_display_info 8E8A  
              __size_of_PWM8_Initialize 0016                __size_of_TMR6_Initialize 002A  
                           _INTCON0bits 003FD2                               copy_data0 779C  
                             copy_data1 77BE                _INT0_SetInterruptHandler 8C5E  
                   __size_of_vterm_dump 012E                  _uart1TxBufferRemaining 002F  
   __end_of_UART2_SetTxInterruptHandler 8B6E             _UART2_SetTxInterruptHandler 8B46  
                          _uart1RxCount 002C                            _uart2RxCount 0026  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 0036  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                                __Lrparam 0000  
               __size_of_check_adc_scan 0008                      __CFG_BOREN$SBORDIS 000000  
              __size_of_conv_raw_result 0586                           _wait_lcd_done 8EE4  
                          _send_lcd_cmd 8AF6                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC                        __size_of___aomod 0240  
                       _adc_int_handler 90C0                        __size_of___fldiv 057A  
                      __size_of___awdiv 014E                        __size_of___flneg 0048  
                      __size_of___awmod 0118                        __size_of___flmul 082A  
                      __size_of___flsub 0046                        __size_of___fltol 0172  
                      __size_of___lodiv 0180                        __size_of___lomod 0140  
                 __end_of_DMA1_DMAA_ISR 906E                      ___fpclassifyf@F463 0088  
  __size_of_UART1_SetRxInterruptHandler 0028                         lp_filter@smooth 026C  
                              ___xxtofl 60D6                       ?_DMA1_DMADCNT_ISR 0052  
              __size_of_ADCC_Initialize 006A             __end_of_eaDogM_WriteCommand 9020  
                      __size_of_isalpha 0044                        __size_of_isdigit 0030  
                              __pivt0x8 0008                        __size_of_islower 0030  
                      __size_of_isspace 0052                      ??_DMA1_DMADCNT_ISR 0058  
                              __ptext10 8B1E                                __ptext11 9012  
                              __ptext20 6E50                                __ptext12 7F76  
                              __ptext21 73DC                                __ptext13 62DA  
                              __ptext30 90A8                                __ptext22 89F2  
                              __ptext14 31D6                                __ptext31 90AE  
                              __ptext23 888E                                __ptext15 825A  
                              __ptext40 86D6                                __ptext32 7C44  
                              __ptext24 72CE                                __ptext16 8E6C  
                              __ptext41 4C86                                __ptext33 4FC6  
                              __ptext25 88C4                                __ptext17 60D6  
                              __ptext50 491A                                __ptext42 6BD2  
                              __ptext34 82BC                                __ptext26 848C  
                              __ptext18 90A2                                __ptext51 649A  
                              __ptext43 6630                                __ptext35 79BC  
                              __ptext27 8EE4                                __ptext19 5EC4  
                              __ptext60 70A2                                __ptext52 67B0  
                              __ptext44 5CA4                                __ptext36 1244  
                              __ptext28 83D8                                __ptext61 6A84  
                              __ptext53 8578                                __ptext45 52B2  
                              __ptext37 4560                                __ptext29 7A64  
                              __ptext70 6F7E                                __ptext62 3CD6  
                              __ptext54 2A1A                                __ptext46 0000  
                              __ptext38 7DF0                                __ptext71 8F36  
                              __ptext63 85BE                                __ptext55 8530  
                              __ptext47 7E74                                __ptext39 8962  
                              __ptext80 9020                                __ptext72 7912  
                              __ptext64 5A64                                __ptext56 21F0  
                              __ptext48 8992                                __ptext81 871A  
                              __ptext73 57F0                                __ptext65 5570  
                              __ptext57 6922                                __ptext49 76B4  
                              __ptext90 8B46                                __ptext82 8856  
                              __ptext74 84DE                                __ptext66 7D68  
                              __ptext58 784E                                __ptext91 8B6E  
                              __ptext83 8D9E                                __ptext75 89C2  
                              __ptext67 71BA                                __ptext59 375C  
                              __ptext92 81F6                                __ptext84 881A  
                              __ptext76 8F00                                __ptext68 7B0A  
                              __ptext93 8B96                                __ptext85 9082  
                              __ptext77 9002                                __ptext69 7BAC  
                              __ptext94 8BBE                                __ptext86 908A  
                              __ptext78 8E8A                                __ptext95 8A78  
                              __ptext87 9092                                __ptext79 8F6A  
                              __ptext96 8BE6                                __ptext88 8604  
                              __ptext97 864A                                __ptext89 831E  
                              __ptext98 8C0E                                __ptext99 8F82  
                      __size_of_isupper 0030                                us1007999 52C4  
                              us1019999 4CEC                                us1028999 45E0  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                      __size_of_strncmp 0220                        __size_of_toupper 0084  
                      _ringBufS_put_dma 7912                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 040A  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_utoa 0340                           __size_of_xtoa 03BA  
                  __CFG_WDTCWS$WDTCWS_7 000000                       ?_DMA1_DMASCNT_ISR 0052  
                           _IVTLOCKbits 003FD4                __size_of_TMR5_WriteTimer 0040  
             _ADCC_ADI_InterruptHandler 0004                               stoa@F1166 00CE  
                    ??_DMA1_DMASCNT_ISR 0058            __end_of_ADCC_StartConversion 9002  
                              _spi_link 0078                                _wdtdelay 83D8  
            __end_of_UART2_Transmit_ISR 8A78                                _vfprintf 79BC  
              __end_of_convert_adc_data 7FF0              __end_of_PWM8_LoadDutyValue 875C  
  __end_of_INT1_DefaultInterruptHandler 90BC   __size_of_INT1_DefaultInterruptHandler 0002  
          _INT1_DefaultInterruptHandler 90BA                           ??_Default_ISR 0052  
                           _uart1RxHead 002E                  __size_of_get_vterm_ptr 002E  
                           _uart1TxHead 0031                             _uart2RxHead 0028  
                           _uart1RxTail 002D                          _get_raw_result 8E6C  
                           _uart2TxHead 002B                             _uart1TxTail 0030  
                           _uart2RxTail 0027                             _uart2TxTail 002A  
                          _wait_lcd_set 90A8                      _EXT_INT_Initialize 892E  
  __end_of_TMR6_DefaultInterruptHandler 86D6   __size_of_TMR6_DefaultInterruptHandler 0046  
          _TMR6_DefaultInterruptHandler 8690    __end_of_ADCC_DefaultInterruptHandler 90C0  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler 90BE  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long 8ACE          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help 9012                       __CFG_CLKOUTEN$OFF 000000  
            __end_of_eaDogM_WriteString 7B0A                   __end_of_mode_lamp_dim 8F82  
               __end_of_adc_int_handler 90C2                  __size_of_INT0_CallBack 0022  
                            _SPI1SCKPPS 003ADE                              _SPI1SDIPPS 003ADF  
                __size_of_INT1_CallBack 0022                      __end_of_update_lcd 73DC  
                _uart2TxBufferRemaining 0029                          _FVR_Initialize 909A  
                __end_of_get_raw_result 8E8A                        _send_lcd_cmd_dma 848C  
                __size_of___fpclassifyf 0196                   TMR5_ISR@CountCallBack 0021  
      __end_of_INT1_SetInterruptHandler 8C5E               __size_of_UART1_Initialize 0064  
                      ??_DMA1_DMAOR_ISR 0058                _UART1_TxInterruptHandler 0007  
             __end_of_send_lcd_cmd_long 8AF6                 __size_of_start_adc_scan 0064  
                   __end_of_Default_ISR 90BA          __end_of_PIN_MANAGER_Initialize 7D68  
             __size_of_mode_lamp_bright 000E                      __end_of_vterm_dump 6F7E  
               _eaDogM_WriteStringAtPos 88C4                           _get_vterm_ptr 89F2  
                        _check_adc_scan 9092               __size_of_UART2_Initialize 005E  
